{"version":3,"sources":["webpack://muze/webpack/universalModuleDefinition","webpack://muze/webpack/bootstrap","webpack://muze/webpack://DataModel/webpack/universalModuleDefinition","webpack://muze/webpack://DataModel/webpack/bootstrap","webpack://muze/webpack://DataModel/src/index.js","webpack://muze/webpack://DataModel/src/enums/data-format.js","webpack://muze/webpack://DataModel/src/enums/dimension-subtype.js","webpack://muze/webpack://DataModel/src/enums/measure-subtype.js","webpack://muze/webpack://DataModel/src/enums/field-type.js","webpack://muze/webpack://DataModel/src/enums/filtering-mode.js","webpack://muze/webpack://DataModel/src/utils/date-time-formatter.js","webpack://muze/webpack://DataModel/src/utils/column-major.js","webpack://muze/webpack://DataModel/src/utils/extend2.js","webpack://muze/webpack://DataModel/src/utils/helper.js","webpack://muze/webpack://DataModel/src/field-store.js","webpack://muze/webpack://DataModel/src/value.js","webpack://muze/webpack://DataModel/src/operator/row-diffset-iterator.js","webpack://muze/webpack://DataModel/src/operator/get-common-schema.js","webpack://muze/webpack://DataModel/src/constants/index.js","webpack://muze/webpack://DataModel/src/operator/cross-product.js","webpack://muze/webpack://DataModel/src/operator/merge-sort.js","webpack://muze/webpack://DataModel/src/operator/data-builder.js","webpack://muze/webpack://DataModel/src/operator/difference.js","webpack://muze/webpack://DataModel/src/operator/group-by-function.js","webpack://muze/webpack://DataModel/src/utils/reducer-store.js","webpack://muze/webpack://DataModel/src/operator/natural-join-filter-function.js","webpack://muze/webpack://DataModel/src/operator/union.js","webpack://muze/webpack://DataModel/src/operator/outer-join.js","webpack://muze/webpack://DataModel/src/fields/field/index.js","webpack://muze/webpack://DataModel/src/fields/dimension/index.js","webpack://muze/webpack://DataModel/src/fields/categorical/index.js","webpack://muze/webpack://DataModel/src/fields/temporal/index.js","webpack://muze/webpack://DataModel/src/fields/binned/index.js","webpack://muze/webpack://DataModel/src/fields/measure/index.js","webpack://muze/webpack://DataModel/src/fields/continuous/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/field-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/categorical-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/temporal-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/binned-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/continuous-parser/index.js","webpack://muze/webpack://DataModel/src/fields/partial-field/index.js","webpack://muze/webpack://DataModel/src/field-creator.js","webpack://muze/webpack://DataModel/src/default-config.js","webpack://muze/webpack://DataModel/src/converter/dsv-arr.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/dsv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/csv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/tsv.js","webpack://muze/webpack://DataModel/src/converter/dsv-str.js","webpack://muze/webpack://DataModel/src/converter/flat-json.js","webpack://muze/webpack://DataModel/src/converter/auto-resolver.js","webpack://muze/webpack://DataModel/src/helper.js","webpack://muze/webpack://DataModel/src/relation.js","webpack://muze/webpack://DataModel/src/datamodel.js","webpack://muze/webpack://DataModel/src/operator/group-by.js","webpack://muze/webpack://DataModel/src/operator/bucket-creator.js","webpack://muze/webpack://DataModel/src/stats/index.js","webpack://muze/webpack://DataModel/src/export.js","webpack://muze/webpack://DataModel/src/operator/compose.js","webpack://muze/webpack://DataModel/src/operator/pure-operators.js","webpack://muze/webpack://DataModel/src/operator/natural-join.js","webpack://muze/webpack://hyperdis/webpack/universalModuleDefinition","webpack://muze/webpack://hyperdis/webpack/bootstrap","webpack://muze/webpack://hyperdis/src/electric-node.js","webpack://muze/webpack://hyperdis/src/graph-node.js","webpack://muze/webpack://hyperdis/src/graph.js","webpack://muze/webpack://hyperdis/src/index.js","webpack://muze/webpack://hyperdis/src/model.js","webpack://muze/webpack://hyperdis/src/utils/index.js","webpack://muze/webpack://hyperdis/src/utils/set.js","webpack://muze/(webpack)/buildin/module.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/SmartlabelManager.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/lib.js","webpack://muze/./packages/muze/src/index.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/container-manager.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisector.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisect.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/range.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ticks.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/threshold/sturges.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/map.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/nest.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/set.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/ordinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/band.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/define.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/lab.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/rgb.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/object.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/string.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/value.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/parse.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/date.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/round.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/decompose.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/zoom.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hsl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hcl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/piecewise.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/continuous.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatDecimal.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/exponent.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatSpecifier.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTrim.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatPrefixAuto.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatRounded.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTypes.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatGroup.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatNumerals.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionFixed.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/tickFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionPrefix.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionRound.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/nice.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/log.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/pow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/threshold.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/interval.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/millisecond.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/second.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/minute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/hour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/day.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/week.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/month.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/year.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMinute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcHour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcDay.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcWeek.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMonth.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcYear.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoParse.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/time.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20b.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20c.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/viridis.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/sequential.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/ramp.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://muze/./packages/muze-utils/src/enums/namespace.js","webpack://muze/./packages/muze-utils/src/enums/reserved-fields.js","webpack://muze/./packages/muze-utils/src/enums/common-props.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/axis.js","webpack://muze/./packages/muze-utils/node_modules/d3-path/src/path.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/arc.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/line.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/area.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/radial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/lineRadial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/diamond.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/star.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/square.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/triangle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/wye.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/noop.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/bundle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRom.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linearClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/monotone.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/natural.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/step.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/stack.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/cubic.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/poly.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/sin.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/bounce.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/back.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/elastic.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/RedBlackTree.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Edge.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Cell.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Beach.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Diagram.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/voronoi.js","webpack://muze/./packages/muze-utils/src/common-utils.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol.js","webpack://muze/./packages/muze-utils/src/enums/stack-config.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/diverging.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/expand.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/wiggle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/pie.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespaces.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespace.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/creator.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selector.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selectorAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/matcher.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sparse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/enter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/data.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sort.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/window.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/classed.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/html.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/raise.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/lower.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/insert.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/clone.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/exit.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/order.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/call.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/nodes.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/node.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/size.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/empty.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/each.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/property.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/append.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/datum.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/local.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/sourceEvent.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/mouse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/touch.js","webpack://muze/./packages/muze-utils/node_modules/d3-dispatch/src/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/noevent.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/nodrag.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/event.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/drag.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timer.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timeout.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/schedule.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/tween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/interpolate.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selection.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attrTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/styleTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/delay.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/ease.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/interrupt.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/interrupt.js","webpack://muze/./packages/muze-utils/src/renderer-utils.js","webpack://muze/./packages/muze-utils/src/DataSystem/selection.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/event-list.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/lifecycle-manager.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/index.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/helper.js","webpack://muze/./packages/muze-firebolt/src/enums/actions.js","webpack://muze/./packages/muze-firebolt/src/enums/selection.js","webpack://muze/./packages/muze-firebolt/src/selection-set/index.js","webpack://muze/./packages/muze-firebolt/src/selection-set/selection-set.js","webpack://muze/./packages/muze-firebolt/src/helper/index.js","webpack://muze/./packages/muze-firebolt/src/firebolt.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/generic.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/volatile.js","webpack://muze/./packages/muze-firebolt/src/enums/behaviours.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/highlight.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/brush.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/filter.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/persistent.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/select.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-action-config.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-event.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/hover.js","webpack://muze/./packages/muze-firebolt/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/click.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/drag.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/longtouch.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/touch-drag.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/generic-sideeffect.js","webpack://muze/./packages/muze-firebolt/src/side-effects/surrogate.js","webpack://muze/./packages/muze-firebolt/src/side-effects/spawnable.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/helper.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/selection-box-drag.js","webpack://muze/./packages/muze-tooltip/src/constants.js","webpack://muze/./packages/muze-tooltip/src/default-config.js","webpack://muze/./packages/muze-tooltip/src/helper.js","webpack://muze/./packages/muze-tooltip/src/strategy.js","webpack://muze/./packages/muze-tooltip/src/content.js","webpack://muze/./packages/muze-tooltip/src/tooltip.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/helper/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/crossline/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/strategy.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/filter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/anchors/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/persistent-anchors.js","webpack://muze/./packages/muze-firebolt/src/side-effects/brush-anchors.js","webpack://muze/./packages/muze-firebolt/src/behaviour-effect-map.js","webpack://muze/./packages/visual-layer/src/enums/constants.js","webpack://muze/./packages/visual-layer/src/layers/area/default-config.js","webpack://muze/./packages/visual-layer/src/simple-layer/simple-layer.js","webpack://muze/./packages/visual-layer/src/base-layer/props.js","webpack://muze/./packages/muze-axis/src/enums/axis-orientation.js","webpack://muze/./packages/muze-axis/src/enums/scale-type.js","webpack://muze/./packages/muze-axis/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/scale-creator.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/default-config.js","webpack://muze/./packages/muze-axis/src/axis-renderer.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/space-setter.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/helper.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/props.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/simple-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/linear.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/log.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/pow.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/continous-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/band-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/time-axis.js","webpack://muze/./packages/muze-axis/src/color-axis/color-maps.js","webpack://muze/./packages/muze-axis/src/color-axis/defaults.js","webpack://muze/./packages/muze-axis/src/color-axis/props.js","webpack://muze/./packages/muze-axis/src/color-axis/color-strategy.js","webpack://muze/./packages/muze-axis/src/color-axis/color-axis.js","webpack://muze/./packages/muze-axis/src/size-axis/defaults.js","webpack://muze/./packages/muze-axis/src/size-axis/size-strategy.js","webpack://muze/./packages/muze-axis/src/size-axis/props.js","webpack://muze/./packages/muze-axis/src/size-axis/size-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/defaults.js","webpack://muze/./packages/muze-axis/src/shape-axis/props.js","webpack://muze/./packages/muze-axis/src/shape-axis/shape-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/helper.js","webpack://muze/./packages/muze-axis/src/data-type-scale-map.js","webpack://muze/./packages/transform/src/group-transform/index.js","webpack://muze/./packages/transform/src/identity-transform/index.js","webpack://muze/./packages/transform/src/transform-factory/index.js","webpack://muze/./packages/transform/src/enums/transform-type.js","webpack://muze/./packages/transform/src/stack-transform/index.js","webpack://muze/./packages/visual-layer/src/helpers/index.js","webpack://muze/./packages/visual-layer/src/base-layer/listener-map.js","webpack://muze/./packages/visual-layer/src/enums/props.js","webpack://muze/./packages/visual-layer/src/base-layer/default-options.js","webpack://muze/./packages/visual-layer/src/base-layer/base-layer.js","webpack://muze/./packages/visual-layer/src/layers/line/renderer.js","webpack://muze/./packages/visual-layer/src/layers/line/default-config.js","webpack://muze/./packages/visual-layer/src/layers/line/line.js","webpack://muze/./packages/visual-layer/src/layers/area/renderer.js","webpack://muze/./packages/visual-layer/src/layers/area/area.js","webpack://muze/./packages/visual-layer/src/layers/arc/default-config.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-helper.js","webpack://muze/./packages/visual-layer/src/layers/text/renderer.js","webpack://muze/./packages/visual-layer/src/layers/text/default-config.js","webpack://muze/./packages/visual-layer/src/layers/text/text.js","webpack://muze/./packages/visual-layer/src/layers/point/renderer.js","webpack://muze/./packages/visual-layer/src/layers/point/default-config.js","webpack://muze/./packages/visual-layer/src/layers/point/point.js","webpack://muze/./packages/visual-layer/src/layers/bar/renderer.js","webpack://muze/./packages/visual-layer/src/layers/bar/default-config.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-helper.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar.js","webpack://muze/./packages/visual-layer/src/layers/tick/default-config.js","webpack://muze/./packages/visual-layer/src/layers/tick/renderer.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick.js","webpack://muze/./packages/visual-layer/src/layer-factory/layer-factory.js","webpack://muze/./packages/visual-layer/src/layer-factory/index.js","webpack://muze/./packages/visual-layer/src/defaults.js","webpack://muze/./packages/visual-group/src/enums/constants.js","webpack://muze/./packages/visual-group/src/visual-group/local-options.js","webpack://muze/./packages/visual-group/src/simple-group/simple-group.js","webpack://muze/./packages/visual-group/src/variable/variable.js","webpack://muze/./packages/visual-group/src/variable/composed-vars.js","webpack://muze/./packages/visual-group/src/variable/simple-var.js","webpack://muze/./packages/visual-group/src/encoder/field-sanitizer.js","webpack://muze/./packages/visual-group/src/encoder/visual-encoder.js","webpack://muze/./packages/visual-group/src/enums/scale-maps.js","webpack://muze/./packages/visual-group/src/data-type-scale-map.js","webpack://muze/./packages/visual-group/src/encoder/encoder-helper.js","webpack://muze/./packages/visual-group/src/encoder/cartesian-encoder.js","webpack://muze/./packages/visual-group/src/encoder/polar-encoder.js","webpack://muze/./packages/visual-group/src/encoder/retinal-encoder.js","webpack://muze/./packages/visual-group/src/group-helper/group-utils.js","webpack://muze/./packages/muze-utils/src/DataSystem/dataSelect.js","webpack://muze/./packages/visual-unit/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/visual-unit/src/helper/index.js","webpack://muze/./packages/visual-unit/src/helper/grid-lines.js","webpack://muze/./packages/visual-unit/src/default-config.js","webpack://muze/./packages/visual-unit/src/enums/constants.js","webpack://muze/./packages/visual-unit/src/local-options.js","webpack://muze/./packages/visual-unit/src/enums/reactive-props.js","webpack://muze/./packages/visual-unit/src/listener-map.js","webpack://muze/./packages/visual-unit/src/props.js","webpack://muze/./packages/visual-unit/src/firebolt/helper.js","webpack://muze/./packages/visual-unit/src/firebolt/payload-generator.js","webpack://muze/./packages/visual-unit/src/firebolt/data-propagator.js","webpack://muze/./packages/visual-unit/src/firebolt/index.js","webpack://muze/./packages/visual-unit/src/visual-unit.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-model.js","webpack://muze/./packages/visual-group/src/group-helper/cell-creator.js","webpack://muze/./packages/visual-group/src/group-helper/resolver-props.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-resolver.js","webpack://muze/./packages/visual-group/src/visual-group/value-matrix.js","webpack://muze/./packages/visual-group/src/visual-group/helper.js","webpack://muze/./packages/visual-group/src/visual-group/change-listener.js","webpack://muze/./packages/visual-group/src/visual-group/props.js","webpack://muze/./packages/visual-group/src/visual-group/visual-group.js","webpack://muze/./packages/muze-legend/src/firebolt/behavioural/select.js","webpack://muze/./packages/muze-legend/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/muze-legend/src/firebolt/behaviour-effect-map.js","webpack://muze/./packages/muze-legend/src/enums/behaviours.js","webpack://muze/./packages/muze-legend/src/enums/side-effects.js","webpack://muze/./packages/muze-legend/src/enums/constants.js","webpack://muze/./packages/muze-legend/src/firebolt/helper.js","webpack://muze/./packages/muze-legend/src/firebolt/legend-firebolt.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/drag.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/hover.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/click.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/index.js","webpack://muze/./packages/muze-legend/src/enums/actions.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/selection-box-drag.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/selection-box/index.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/strategies.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/index.js","webpack://muze/./packages/muze-legend/src/legend/props.js","webpack://muze/./packages/muze-legend/src/legend/defaults.js","webpack://muze/./packages/muze-legend/src/legend/legend-helper.js","webpack://muze/./packages/muze-legend/src/legend/simple-legend.js","webpack://muze/./packages/muze-legend/src/legend/position-config.js","webpack://muze/./packages/muze-legend/src/legend/renderer.js","webpack://muze/./packages/muze-legend/src/legend/discrete-legend.js","webpack://muze/./packages/muze-legend/src/legend/gradient-helper.js","webpack://muze/./packages/muze-legend/src/legend/gradient-legend.js","webpack://muze/./packages/muze-legend/src/legend/step-legend.js","webpack://muze/./packages/muze/src/constants.js","webpack://muze/./packages/muze/src/operators.js","webpack://muze/./packages/muze/src/action-model.js","webpack://muze/./packages/muze/src/defaults.js","webpack://muze/./packages/muze/src/options.js","webpack://muze/./packages/layout/src/enums/constants.js","webpack://muze/./packages/layout/src/generic-layout/index.js","webpack://muze/./packages/layout/src/grid-layout/defaults.js","webpack://muze/./packages/layout/src/grid-layout/span-maker.js","webpack://muze/./packages/layout/src/grid-layout/renderer.js","webpack://muze/./packages/layout/src/utils/index.js","webpack://muze/./packages/layout/src/visual-matrix/props.js","webpack://muze/./packages/layout/src/visual-matrix/default-config.js","webpack://muze/./packages/layout/src/visual-matrix/visual-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/row-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/column-matrix.js","webpack://muze/./packages/layout/src/grid-layout/computations.js","webpack://muze/./packages/layout/src/grid-layout/layout.js","webpack://muze/./packages/layout/src/grid-layout/layout-helper.js","webpack://muze/./packages/muze/src/transaction-support.js","webpack://muze/./packages/muze/src/canvas/component-resolver.js","webpack://muze/./packages/visual-cell/src/enums/constants.js","webpack://muze/./packages/visual-cell/src/enums/cell-type.js","webpack://muze/./packages/visual-cell/src/simple-cell.js","webpack://muze/./packages/visual-cell/src/enums/defaults.js","webpack://muze/./packages/visual-cell/src/props.js","webpack://muze/./packages/visual-cell/src/axis-cell.js","webpack://muze/./packages/visual-cell/src/blank-cell.js","webpack://muze/./packages/visual-cell/src/text-cell.js","webpack://muze/./packages/visual-cell/src/geom-cell.js","webpack://muze/./packages/visual-cell/src/defaults.js","webpack://muze/./packages/visual-cell/src/constants.js","webpack://muze/./packages/visual-cell/src/cell-registry.js","webpack://muze/./packages/muze/src/canvas/title-maker.js","webpack://muze/./packages/muze/src/canvas/legend-maker.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/layoutComponent.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/dummy-component.js","webpack://muze/./packages/layout/src/tree-layout/constants/defaults.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/definitionModel.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/helper/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/tree/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/layout-model/index.js","webpack://muze/./packages/layout/src/tree-layout/utils/index.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-point.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-parser.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/helper.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/html-data.js","webpack://muze/./packages/layout/src/tree-layout/renderers/renderer.js","webpack://muze/./packages/layout/src/tree-layout/renderers/html-renderer.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/layout-def.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/index.js","webpack://muze/./packages/muze/src/canvas/components/muze-chart-component.js","webpack://muze/./packages/muze/src/canvas/components/headerComponent.js","webpack://muze/./packages/muze/src/canvas/components/legendComponent.js","webpack://muze/./packages/muze/src/canvas/components/matrix-component.js","webpack://muze/./packages/muze/src/canvas/components/grid-component.js","webpack://muze/./packages/muze/src/canvas/defaults.js","webpack://muze/./packages/muze/src/canvas/layout-maker.js","webpack://muze/./packages/muze/src/canvas/local-options.js","webpack://muze/./packages/muze/src/canvas/helper.js","webpack://muze/./packages/muze/src/canvas/firebolt/group-firebolt.js","webpack://muze/./packages/muze/src/canvas/firebolt/index.js","webpack://muze/./packages/muze/src/canvas/app-state.js","webpack://muze/./packages/muze/src/canvas/canvas.js","webpack://muze/./packages/muze/src/default-registry.js","webpack://muze/./packages/visual-layer/src/layer-registry.js","webpack://muze/./packages/muze/src/muze.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","e","_typeof","a","default","description","homepage","version","license","main","author","keywords","repository","type","url","contributors","email","dependencies","d3-dsv","devDependencies","babel-cli","babel-core","babel-eslint","babel-loader","babel-plugin-transform-runtime","babel-preset-env","babel-preset-es2015","babel-preset-flow","chai","cross-env","eslint","eslint-config-airbnb","eslint-plugin-import","eslint-plugin-jsx-a11y","eslint-plugin-react","istanbul-instrumenter-loader","jsdoc","json2yaml","karma","karma-chai","karma-chrome-launcher","karma-coverage-istanbul-reporter","karma-mocha","karma-spec-reporter","karma-webpack","marked","mocha","mocha-webpack","transform-runtime","webpack","webpack-cli","webpack-dev-server","scripts","test","ut","utd","build","start","lint","lint-errors","docs","DataModel","data_format","FLAT_JSON","DSV_STR","DSV_ARR","AUTO","dimension_subtype","CATEGORICAL","TEMPORAL","GEO","BINNED","measure_subtype","CONTINUOUS","field_type","MEASURE","DIMENSION","filtering_mode","NORMAL","INVERSE","ALL","convertToNativeDate","date","Date","pad","DateTimeFormatter","format","this","dtParams","nativeDate","RegExp","escape","text","replace","TOKEN_PREFIX","DATETIME_PARAM_SEQUENCE","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","defaultNumberParser","defVal","val","parsedVal","isFinite","parseInt","defaultRangeParser","range","nVal","toLowerCase","length","getTokenDefinitions","daysDef","short","long","monthsDef","H","index","extract","parser","formatter","getHours","toString","hours","P","M","getMinutes","S","getSeconds","K","getMilliseconds","join","day","getDay","A","getDate","b","month","getMonth","B","y","substring","year","getFullYear","Y","getTokenFormalNames","definitions","HOUR_12","AMPM_UPPERCASE","AMPM_LOWERCASE","SHORT_DAY","LONG_DAY","DAY_OF_MONTH","DAY_OF_MONTH_CONSTANT_WIDTH","SHORT_MONTH","LONG_MONTH","MONTH_OF_YEAR","SHORT_YEAR","LONG_YEAR","tokenResolver","defaultResolver","arg","targetParam","arguments","hourFormat24","hourFormat12","ampmLower","ampmUpper","amOrpm","isPM","findTokens","tokenPrefix","tokenLiterals","keys","occurrence","forwardChar","indexOf","push","token","formatAs","nDate","formattedStr","String","formattedVal","parse","dateTimeStamp","options","extractTokenValue","dtParamSeq","noBreak","dtParamArr","args","resolverKey","resolverParams","resolverFn","param","resolvedVal","splice","apply","tokenObj","lastOccurrenceIndex","occObj","occIndex","targetText","regexFormat","tokenArr","map","obj","occurrenceLength","extractValues","match","shift","getNativeDate","unshift","Function","h","store","fields","Array","forEach","fieldIndex","from","OBJECTSTRING","objectToStrFn","objectToStr","arrayToStr","checkCyclicRef","parentArr","bIndex","extend2","obj1","obj2","skipUndef","v","merge","tgtArr","srcArr","item","srcVal","tgtVal","str","cRef","isArray","isCallable","getUniqueId","getTime","Math","round","random","isArrEqual","arr1","arr2","formatNumber","helper_detectDataFormat","data","field_store","createNamespace","fieldArr","dataId","fieldsObj","_cachedFieldsObj","field","getMeasure","measureFields","_cachedMeasure","schema","getDimension","dimensionFields","_cachedDimension","src_value","_classCallCheck","configurable","writable","_value","rowDiffsetIterator","rowDiffset","callback","split","diffStr","diffStsArr","end","getCommonSchema","fs1","fs2","retArr","fs1Arr","DM_DERIVATIVES","JOINS","CROSS","LEFTOUTER","RIGHTOUTER","NATURAL","FULLOUTER","defaultFilterFn","crossProduct","dm1","dm2","filterFn","replaceCommonSchema","jointype","applicableFilterFn","dm1FieldStore","getFieldspace","dm2FieldStore","dm1FieldStoreName","dm2FieldStoreName","commonSchemaList","Error","tmpSchema","_rowDiffset","rowAdded","rowPosition","ii","tuple","userArg","partialField","dm1Fields","prepareJoinData","dm2Fields","detachedRoot","tupleObj","cellVal","iii","len","datamodel","defSortFn","a1","b1","mergeSort","arr","sortFn","merge_sort_sort","lo","hi","mid","floor","mainArr","auxArr","getSortFn","dataType","sortType","retFunc","groupData","hashMap","Map","groupedData","datum","fieldVal","has","set","createSortingFnArg","groupedDatum","targetFields","targetFieldDetails","label","reduce","acc","next","idx","difference_difference","hashTable","schemaNameArr","dm1FieldStoreFieldObj","dm2FieldStoreFieldObj","_colIdentifier","sort","prepareDataHelper","dm","addData","hashData","schemaName","fieldName","sum","totalSum","curr","Number","isNaN","avg","fnList","min","filteredValues","filter","num","max","first","last","count","std","sqrt","mean","pow","reducer_store_ReducerStore","TypeError","entries","_this","ae","reducer","_this2","__unregister","delete","reducer_store","ue","iterator","u","done","return","naturalJoinFilter","commonSchemaArr","retainTuple","union_union","src_export","leftOuterJoin","dataModel1","dataModel2","rightOuterJoin","fields_field","field_classCallCheck","subtype","displayName","ve","dimension","_cachedDomain","calculateDataDomain","categorical","hash","Set","domain","add","temporal","temporal_classCallCheck","_cachedMinDiff","sortedData","arrLn","minDiff","POSITIVE_INFINITY","prevDatum","nextDatum","processedCount","_this3","binned","binsArr","bins","measure","unit","defAggFn","numberFormat","continuous","NEGATIVE_INFINITY","field_parser","ke","categorical_parser","trim","temporal_parser","temporal_parser_classCallCheck","_dtf","binned_parser","matched","parseFloat","xe","continuous_parser","partial_field","partial_field_classCallCheck","_sanitize","createFields","dataColumn","headers","headersObj","header","He","dataFormat","Ve","assign","firstRowHeader","columns","column_major","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","JSON","stringify","ze","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","f","rows","N","I","eof","eol","j","slice","row","formatRow","formatValue","convert","columnSet","column","concat","formatRows","csv","src_dsv","tsv","$e","fieldSeparator","dsv","dsv_arr","Qe","insertionIndex","Ze","converters","FlatJSON","DSVStr","DSVArr","resp","helper_persistDerivation","model","operation","_model$_derivation","config","criteriaFn","derivative","op","meta","criteria","_derivation","helper_filterPropagationModel","propModels","filterByMeasure","fns","dataModel","dataObj","getData","fieldsConfig","getFieldsConfig","fieldsSpace","values","def","some","every","propField","valueOf","propModel","clone","select","fn","saveChild","helper_cloneWithSelect","sourceDm","selectFn","selectConfig","cloneConfig","cloned","helper_selectHelper","newRowDiffSet","lastInsertedValue","li","cachedStore","cloneProvider","selectorHelperFn","_iteratorNormalCompletion","checker","getPartialFieldspace","__calculateFieldspace","calculateFieldsConfig","helper_cloneWithProject","projField","allFields","projectionSet","actualProjField","helper_sanitizeUnitSchema","unitSchema","helper_updateData","relation","default_config","converterFn","converter_namespaceObject","et","formattedData","nameSpace","_partialFieldspace","_","_dataFormat","fieldInSchema","applyExistingOperationOnModel","_propModel$","child","derivation","params","groupByString","selectionModel","rejectionModel","_propModel$2","propagateIdentifiers","propModelInf","nonTraversingModel","excludeModels","handlePropagation","_children","propagateToAllDataModels","identifiers","rootModels","propagationInf","propagationNameSpace","propagateToSource","propagationSourceId","sourceId","propagateInterpolatedValues","criterias","persistent","actionCriterias","mutableActions","filteredCriteria","entry","action","sourceActionCriterias","actionInf","actionConf","applyOnSource","models","path","getPathToRootModel","_parent","_ref3","rootModel","propConfig","sourceIdentifiers","rootGroupByModel","groupByModel","inf","propagationModel","filteredModel","reverse","src_relation","relation_classCallCheck","source","Relation","_fieldStoreName","updateData","_propagationNameSpace","immutableActions","_fieldspace","helper_updateFields","partialFieldspace","fieldStoreName","colIdentifier","collID","partialFieldMap","newFields","coll","joinWith","unionWith","differenceWith","defConfig","oDm","retDataModel","getAllFields","jsonData","rowObj","constructor","fieldConfig","normalizedProjField","search","_fieldConfig","fieldDef","removeChild","findIndex","sibling","parent","criteriaQueue","ReferenceError","__proto__","getPrototypeOf","_onPropagation","_sortingDetails","setPrototypeOf","order","withUid","dataGenerated","dataBuilder","fieldStore","sortingDetails","retObj","uids","addUid","columnWise","reqSorting","tmpDataArr","colName","insertInd","sortMeta","fDetails","sortingFn","pop","tmpData","fieldNames","fmtFieldIdx","elem","fIdx","fmtFn","datumIdx","fieldsArr","reducers","newDataModel","group_by_groupBy","existingDataModel","sFieldArr","dimensions","reducerObj","pReducers","measures","defaultReducer","resolve","fieldStoreObj","dbName","dimensionArr","measureArr","rowCount","rawData","dataInCSVArr","sortedDm","colData","rowsCount","serializedData","rowIdx","colIdx","fieldinst","dependency","replaceVar","depVars","retrieveFn","depFieldIndices","fieldSpec","fs","suppliedFields","computedValues","fieldsData","yt","addField","addToNameSpace","isMutableAction","payload","getRootDataModel","getRootGroupByModel","find","sourceNamespace","filterImmutableAction","criteriaModel","eventName","measureFieldName","binFieldName","_createBinnedFieldDat","measureField","buckets","binsCount","binSize","R","dMin","dMax","ceil","abs","generateBuckets","bucketRanges","binnedData","findBucketRange","leftIdx","rightIdx","midIdx","binField","serialize","getSchema","stats_sum","stats_avg","stats_min","stats_max","stats_first","stats_last","stats_count","sd","Operators","compose","operations","currentDM","frstChild","derivations","addParent","dispose","bin","project","groupBy","calculateVariable","difference","naturalJoin","fullOuterJoin","union","Stats","stats_namespaceObject","enums_namespaceObject","DataFormat","FilteringMode","package_0","kt","gt","_typeof2","__WEBPACK_AMD_DEFINE_ARRAY__","undefined","__WEBPACK_AMD_DEFINE_RESULT__","__WEBPACK_AMD_DEFINE_FACTORY__","ElectricNode","edges","listeners","nextFrame","currentFrame","_edges","lstnrs","_utils__WEBPACK_IMPORTED_MODULE_0__","GraphNode","qualifiedName","outgoingEdges","_seed","requireResolve","retriever","history","resolver","electricEdges","_len","dep","_key","node","seed","_toConsumableArray","retrieveDetails","edge","head","hist","Graph","qualifiedNodeMap","_graph_node__WEBPACK_IMPORTED_MODULE_1__","accumulate","_wholeSet","_propagate","propagationOverride","currentFrameListeners","nextFrameListeners","_schedule","qname","flushTarget","flush","mount","resolveReqList","rec","objn","perv","_node","addDependencies","getDependencies","getResolvedList","getUpstreamNodes","prop","props","fnSpec","_ref","nodes","eNode","_electric_node__WEBPACK_IMPORTED_MODULE_2__","addEdges","changedSet","upstreamNodes","upstreamNode","__execUniqueElectricEdges","cfLstnrs","nfLstnrs","toArray","repeatHead","resetPropagationOverride","_this4","_len2","qnames","_key2","update","resolved","resolveDependencyOrder","__webpack_exports__","_model__WEBPACK_IMPORTED_MODULE_0__","Model","_graph","_graph__WEBPACK_IMPORTED_MODULE_0__","_lockFlag","_reqQ","mountPoint","_addPropInModel","_customResolver","calculationConfig","customResolver","varName","fetchFn","_utils__WEBPACK_IMPORTED_MODULE_1__","_defineProperty","createNodesFrom","instantCall","_graph$stopPropagatio","propsArr","unsub","createElectricNodeOf","stopPropagation","setPropagationOverride","resetNodeValue","_graph$stopPropagatio2","setProp","getNodeValue","getNodeFromQualifiedName","isSimpleObject","win","reqAnimFrame","setTimeout","getTimeBasedId","__lastTime","__id","pullableRecent","nFn","pullableEnd","unique","flat","res","identityMap","arrays","splitPathProp","pathArr","scheduler","onFinishCallback","queue","animationFrame","tempQ","fetch","namedNode","fetchAggregator","_len3","_key3","list","placedIndex","preArr","postArr","_len4","_key4","nodeDetails","identity","resolveMap","neighbour","CustomResolver","_dep","makeEntry","sCon","ForeignSet","_set","set1","set2","filteredKeys","s1","s2","webpackPolyfill","deprecate","paths","children","_interopRequireDefault","_lib2","require","_containerManager2","slLib","init","doc","document","htmlSplCharSpace"," ","documentSupport","getDocumentSupport","SVG_BBOX_CORRECTION","isWebKit","SmartLabelManager","id","container","useEllipses","wrapper","prevInstance","isBrowserLess","maxCacheLimit","maxDefaultCacheLimit","getElementById","createContainer","innerHTML","testStrAvg","isHeadLess","isIE","offsetHeight","offsetWidth","parentContainerStyle","style","parentContainer","_containerManager","_showNoEllipses","_init","setStyle","textToLines","smartlabel","lines","_calCharDimWithCache","calculateDifference","size","csArr","tw","twi","cachedStyle","asymmetricDifference","maxAdvancedCacheLimit","_container","cache","_advancedCache","advancedCacheKey","_advancedCacheKey","cacheName","fontSize","fontFamily","fontWeight","fontStyle","cacheInitName","repeat","width","height","_getWidthFn","contObj","_containerObj","svgText","bbox","textContent","getBBox","_styleNotSet","setLineHeight","sCont","_context","context","_cache","charCache","_lineHeight","lineHeight","useEllipsesOnOverflow","getSmartText","maxWidth","maxHeight","noWrap","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriWidth","oriHeight","newCharIndex","nearestChar","tempChar","getWidth","initialLeft","initialTop","getOriSizeImproveObj","spanArr","x","minWidth","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","ellipsesWidth","dotWidth","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","charAt","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","xmlTagRegEx","ltgtRegex","getOriSize","substr","getNearestBreakIndex","detailObj","tooltext","lastIndexOf","spanAdditionRegx","spanAdditionReplacer","classNameWithTag","classNameWithTagBR","childRetriverFn","childRetriverString","noClassTesting","classNameReg","className","spaceIdx","dashIdx","offsetLeft","offsetTop","parentNode","insertBefore","createElement","classNameBrReg","spanRemovalRegx","error","detailedCalculationFlag","textArr","letter","lSize","cumulativeSize","indiSizeStore","lib","userAgent","navigator","clsNameSpace","containerClass","brReplaceRegex","position","top","whiteSpace","padding","overflow","supportedStyle","font","font-family","font-weight","font-size","line-height","font-style","getElementsByClassName","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","containerParent","body","appendChild","setAttribute","getElementsByTagName","sl","charLen","increment","avgWidth","styleObj","fSize","Muze","ContainerManager","maxContainers","svg","containers","rootNode","createElementNS","setAttributeNS","svgRoot","diff","containerObj","keyStr","prev","removeContainer","addContainer","avgCharWidth","display","cObj","ascending","NaN","bisector","compare","ascendingComparator","left","right","ascendingBisect","bisectRight","number","array","src_range","stop","step","e10","e5","e2","src_ticks","ticks","tickIncrement","power","log","LN10","tickStep","step0","step1","quantile","valueof","i0","value0","each","remove","clear","empty","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","result","createObject","setObject","createMap","setMap","sortKey","k","proto","implicit","ordinal","unknown","scale","copy","band","bandwidth","ordinalRange","paddingInner","paddingOuter","align","rescale","sequence","rangeRound","invertExtent","r0","r1","hiIndex","getClosestIndexOf","invert","side","highVal","d1","low","high","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","exec","Rgb","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","hex","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","C","D","E","ED","EB","BC_DA","cubehelix","cubehelixConvert","Cubehelix","bl","basis","v0","v1","v2","v3","cosh","sinh","src_constant","linear","hue","constant","gamma","nogamma","exponential","src_rgb","rgbGamma","colorRgb","rgbSpline","spline","colors","rgbBasis","src_number","reA","reB","src_string","am","bm","bs","bi","lastIndex","q","one","zero","cssNode","cssRoot","cssView","svgNode","value_typeof","string","setTime","nb","na","src_round","degrees","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","interpolateTransformCss","parseCss","documentElement","defaultView","transform","getComputedStyle","getPropertyValue","interpolateTransformSvg","parseSvg","baseVal","consolidate","matrix","SQRT2","colorHsl","hslLong","colorHcl","cubehelixGamma","colorCubehelix","cubehelixLong","piecewise","interpolate","d3_scale_src_constant","d3_scale_src_number","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","bisect","target","clamp","output","input","interpolateValue","deinterpolateClamp","reinterpolateClamp","interpolateRound","formatDecimal","toExponential","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","fill","sign","symbol","comma","precision","prefixExponent","locale","formatPrefix","formatTrim","out","i1","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","src_identity","prefixes","src_locale","group","grouping","thousands","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","Infinity","defaultLocale","formatLocale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","interval","x0","x1","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","raise","thresholds","threshold","quantiles","quantize","newInterval","floori","offseti","offset","previous","millisecond","durationMinute","durationWeek","second","getUTCSeconds","minute","hour","getTimezoneOffset","setHours","setDate","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","setMonth","setFullYear","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","localDate","L","utcDate","UTC","newYear","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","timeDay","timeYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","timeSunday","formatWeekNumberISO","timeThursday","formatWeekdayNumberSunday","formatWeekNumberMonday","timeMonday","formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatPeriod","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parsePeriod","parseLocaleDate","parseLocaleTime","newParse","newDate","week","toISOString","durationSecond","durationHour","durationDay","durationMonth","durationYear","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickIntervals","tickInterval","src_time","timeMonth","timeWeek","timeHour","timeMinute","timeSecond","timeMillisecond","src_colors","interpolateCubehelixLong","ramp","sequential","interpolator","d3_scale_chromatic_src_colors","src_ramp","scheme","interpolateRgbBasis","warm","cool","sequential_multi_rainbow","ts","magma","inferno","plasma","UNIT_GLOBAL_NAMESPACE","UNIT_LOCAL_NAMESPACE","LAYER_LOCAL_NAMESPACE","LAYER_GLOBAL_NAMESPACE","GROUP_GLOBAL_NAMESPACE","GROUP_LOCAL_NAMESPACE","CANVAS_LOCAL_NAMESPACE","CANVAS_GLOBAL_NAMESPACE","ReservedFields","ROW_ID","CommonProps","ACTION_INF","ON_LAYER_DRAW","d3_axis_src_identity","bottom","epsilon","entering","__axis","axis","orient","tickArguments","tickValues","tickTransform","tickSizeInner","tickSizeOuter","tickPadding","spacing","range0","range1","center","selection","selectAll","tick","tickExit","exit","tickEnter","enter","append","attr","line","insert","transition","getAttribute","tickSize","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","ccw","dx","dy","cw","da","rect","d3_shape_src_constant","halfPi","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","d2","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","point","curve_linear","src_line","pointX","pointY","defined","curve","curveLinear","buffer","defined0","src_area","area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","curveRadial","Radial","_curve","radial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye","noop","that","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","beta","_basis","_beta","_x","_y","custom","bundle","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","s0","slope2","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","_t","curve_step","stepBefore","stepAfter","none","series","order_none","stackValue","order_ascending","sums","cubicInOut","polyIn","polyOut","polyInOut","b2","b3","b4","b5","b6","b7","b8","b9","b0","bounceOut","backIn","overshoot","backOut","backInOut","elasticOut","elasticIn","amplitude","period","d3_voronoi_src_constant","elasticInOut","RedBlackTree","RedBlackNode","RedBlackRotateLeft","tree","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","createEdge","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","epsilon2","ha","hc","circle","Circle","before","circles","detachCircle","beachPool","createBeach","beach","Beach","detachBeach","beaches","removeBeach","disappearing","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","sortCellHalfedges","clipEdges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","cover","dc","v00","v01","v11","v10","polygons","polygon","triangles","e1","links","radius","_found","vx","vy","src_voronoi","voronoi","HTMLElement","common_utils_typeof","sanitizeIP","typeObj","nonExistentKeys","checkExistence","getMax","getMin","getDomainFromData","fieldType","domArr","DimensionSubtype","firstMin","secondMin","firstMax","secondMax","unionDomain","domains","_ref2","dom","symbolFns","symbolCircle","cross","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolWye","symbolTriangle","easeFns","cubic","easeCubic","bounce","easeBounce","elastic","easeElastic","back","easeBack","poly","easePoly","circleInOut","getQualifiedClassName","requestAnimationFrame","cancelAnimationFrame","cls","defaultValue","getDependencyOrder","graph","dependencyOrder","visited","visit","objectIterator","Voronoi","_voronoi","_voronoiFn","addListenerToNamespace","namespaceInf","namespace","_listeners","getObjProp","Store","propName","propNames","callBack","on","calculatedProp","intSanitizer","transactor","holder","conf","stateProps","addAsMethod","nameSpaceProp","nsProp","compareTo","paramsLen","prevVal","spreadParams","sanitization","typeCheck","typeExpected","preset","oldValues","generateGetterSetters","propInfo","typeChecker","isEqual","oldVal","newVal","arraysEqual","is","ERROR_MSG","INTERFACE_IMPL","mergeRecursive","sink","numberInterpolator","interpolateNumber","piecewiseInterpolator","rgbToHsv","detectColor","col","getDataModelFromRange","selFields","selFn","getDataModelFromIdentifiers","filteredDataModel","dataArr","filteredSchema","include","registerListeners","listenerMap","propListenerMap","local","mapObj","propType","listenerFn","listener","isValidValue","getSymbol","stackOrders","_stackOrders","stackOrderNone","stackOrderAscending","stackOffsets","_stackOffsets","yp","yn","stackOffsetNone","si","sij0","s3","sk","stack","orderNone","offsetNone","oz","kz","sz","sij","ki","d3Stack","pathInterpolators","curveStepAfter","curveStepBefore","curveStep","curveCatmullRom","Symbols","axisLeft","axisRight","axisTop","axisBottom","pie","descending","arcs","pa","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","intersect","x3","y3","x32","y32","kc","lc","centroid","Scales","scaleBand","getSmallestDiff","points","xhtml","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","src_namespaces","xlink","xml","xmlns","src_namespace","namespaces","space","creator","fullname","creatorFixed","ownerDocument","creatorInherit","uri","namespaceURI","src_selector","selector","querySelector","selectorAll","querySelectorAll","matcher","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","sparse","EnterNode","_next","__data__","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","src_window","styleValue","classArray","classList","ClassList","_names","classedAdd","classedRemove","contains","textRemove","htmlRemove","nextSibling","lower","previousSibling","firstChild","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","event","mouseenter","mouseleave","filterContextListener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","Selection","groups","parents","_groups","_parents","subgroups","subnode","subgroup","enterGroup","updateGroup","_enter","_exit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","attrRemoveNS","removeAttributeNS","attrRemove","removeAttribute","attrFunctionNS","attrFunction","attrConstantNS","attrConstant","priority","styleRemove","removeProperty","styleFunction","setProperty","styleConstant","propertyRemove","propertyFunction","propertyConstant","classed","classedFunction","classedTrue","classedFalse","textFunction","textConstant","html","htmlFunction","htmlConstant","deep","typenames","parseTypenames","dispatch","dispatchFunction","dispatchConstant","src_select","nextId","Local","current","src_point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","Dispatch","T","types","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","d3_drag_src_constant","DragEvent","subject","active","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","touchable","gestures","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","yesdrag","noclick","clearTimeout","sublisteners","clickDistance","taskHead","taskTail","frame","timeout","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","timer_typeof","now","setFrame","clearNow","Timer","_call","_time","timer","delay","restart","wake","timerFlush","nap","sleep","poke","clearInterval","setInterval","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","duration","ease","schedule","tweenValue","_id","transition_interpolate","interpolateRgb","interpolateString","Transition","_name","newId","selection_prototype","inherit","id0","id1","onFunction","on0","on1","sit","attrTween","value00","value10","interpolate0","value1","attrTweenNS","styleTween","styleRemoveEnd","removeFunction","tweenRemove","tween0","tween1","tweenFunction","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","defaultTiming","easeCubicInOut","interrupt","selectElement","makeElement","elemType","callbacks","keyFn","SVGElement","selectorVal","selectorType","actualSelector","enterSel","mergeSel","exitSel","applyStyle","setElementAttrs","attrs","setAttrs","setStyles","styles","createElements","sel","getClientPoint","pos","clientPoint","getEvent","d3event","getD3Drag","d3drag","getSmartComputedStyle","css","textEl","mandatoryStyle","fill-opacity","renderer_utils_typeof","computedStyle","styleForSmartLabel","hasTouch","selection_classCallCheck","_data","_idMap","_mode","_enterdata","_exitdata","newData","idGetter","_idGetter","tempMap","purgedIds","purged","temp","_this5","_this6","events","EVENT_LIST","composition","resolveFn","notification","hasOwn","LifeCycleManager","lifecycle_manager_classCallCheck","_eventList","_promises","_notifiers","_lifeCycles","_unreleasedLifeCycles","_boot","_preparePromises","Promise","promise","_makeNotifierPromise","createPromise","then","prm","formalName","client","_releasePromisesFromCache","_notify","stage","_resolvePromise","retrieve","_callLifeCycleCallback","_cachePromise","_resetTargetPromise","lifeCycles","DRAG","HOVER","SELECTIONDRAG","CLICK","LONGTOUCH","TOUCHDRAG","ALL_ACTIONS","SELECTION_NEW_ENTRY","SELECTION_NEW_EXIT","SELECTION_NULL","SELECTION_OLD_ENTRY","SELECTION_OLD_EXIT","SelectionSet","completeSet","_volatile","selection_set_classCallCheck","_completeSetCount","_lockedSelection","_resetted","ids","entrySet","exitSet","lockedSel","addSet","removeSet","updateSet","changeSideEffectAvailability","toEnable","sideEffects","change","enable","disable","getMergedSet","helper_toConsumableArray","conditionsMap","newEntry","SELECTION","oldEntry","mergedEnter","newExit","oldExit","mergedExit","complete","getSetInfo","selectionSet","propagationData","resetted","getModelFromSet","condition","Firebolt","actions","behaviourEffectMap","firebolt_classCallCheck","_sideEffectDefinitions","_sideEffects","_propagationInf","_actions","behavioural","physical","_selectionSet","_volatileSelectionSet","_propagationFields","_sourceSideEffects","selectionBox","_propagationBehaviourMap","_sourceBehaviours","_actionBehaviourMap","_config","_behaviourEffectMap","_entryExitSet","_actionHistory","_queuedSideEffects","mapSideEffects","registerBehaviouralActions","registerSideEffects","registerPhysicalBehaviouralMap","physicalBehaviouralMap","registerPhysicalActions","behEffectMap","preventDefaultActions","effectNames","effects","firebolt_toConsumableArray","behaviours","initializeBehaviouralActions","dispatchableBehaviours","Action","prepareSelectionSets","initializeSideEffects","sideEffectStore","actionHistory","queuedSideEffects","sideEffect","combinedSet","unionSets","behaviour","entryExitSet","existingModel","effect","firebolt_typeof","sideEffectInstance","isEnabled","mutates","dispatchSideEffect","propagationInfo","propagate","getSideEffects","propagationSelectionSet","getPropagationSelectionSet","shouldApplySideEffects","sourceSelectionSet","applicableSideEffects","getApplicableSideEffects","applySideEffects","physicalAction","actionBehaviourMap","behaviourMap","mapActionsAndBehaviour","unsubscribe","onDataModelPropagation","propValue","dispatchBehaviour","uniqueIds","behaviouralActions","volatileSelectionSet","sideEffectDefinitions","sideEffectsMap","SideEffect","sideEffectConf","initedActions","initializePhysicalActions","physicalActions","phyAction","initedPhysicalActions","getDefaultTargetContainer","bindActionWithBehaviour","targets","behaviourList","xFields","yFields","xMeasures","FieldType","yMeasures","filterPropagationModel","_propModel$getData","fieldMap","getFullData","propagationSource","applicableSelectionSets","GenericBehaviour","firebolt","generic_classCallCheck","_enabled","selectionSets","getSelectionSets","_this$firebolt$getAdd","getAddSetFromCriteria","getPropagationInf","setSelectionSet","getEntryExitSet","_selectionSet$getSets","getSets","setConfig","isSourceFieldPresent","getSourceFields","VolatileBehaviour","reset","existingAddSet","updateExit","getCompleteSet","BRUSH","HIGHLIGHT","TOOLTIP","FILTER","SELECT","HighlightBehaviour","BrushBehaviour","BEHAVIOURNAMES","FilterBehaviour","PersistentBehaviour","updateEntry","mergedExitSet","completeSetCount","SelectBehaviour","getDragActionConfig","sourceInfo","axes","xAxis","yAxis","axisFields","xField","getMembers","yField","xFieldType","yFieldType","stPos","startPos","endPos","dragDim","MeasureSubtype","isXDimension","isYDimension","xRange","yRange","selectedDomains","rangeObj","xdom","ydom","snap","getNearestRange","attachDragEvent","targetEl","drawingInf","touchStart","d3Drag","getDrawingContext","getSourceInfo","beh","dragEnd","hover","interaction","tooltip","svgContainer","nearestPoint","getNearestPoint","getAllPoints","showInPosition","generatePayloadFromEvent","click","physical_defineProperty","_physicalActions","ACTIONNAMES","longtouch","touchEnd","touchdrag","GenericSideEffect","generic_sideeffect_classCallCheck","_strategy","_strategies","defaultConfig","SurrogateSideEffect","interactionType","layers","layer","interactive","applyInteractionStyle","SpawnableSideEffect","_drawingContext","changeVisibility","sideEffectGroup","visible","defClassName","classPrefix","SelectionBox","boxConf","box","drawingContext","unitWidth","unitHeight","selectionGroupClassName","hide","sourceInf","_getBoxDimensionsFrom","getBoxDimensionsFromPayload","direction","xDim","yDim","xLinear","yLinear","xCriteria","yCriteria","x1Val","x2Val","bandScale","x1DomainIndex","x2DomainIndex","_sort2","helper_slicedToArray","getScaleValue","getUnitWidth","y1Val","y2Val","y1DomainIndex","y2DomainIndex","_sort4","_xDim","_yDim","show","selectionBoxDrag","onDrag","boxClassName","INITIAL_STYLE","connectorClassName","margin","content","iconContainerSize","iconScale","iconShape","iconColor","rowMargin","separator","parentClassName","arrow","disabled","getArrowPos","dim","measurement","arrowPos","boxHeight","boxWidth","arrowWidth","plotBottom","boxBottom","plotRight","boxRight","placeArrow","tooltipArrow","_tooltipArrow","tooltipBackground","_tooltipBackground","arrowConf","_arrowOrientation","timeFormats","timeDurations","defaultTooltipFormatters","_formatters","strategy_defineProperty","nearestInterval","getNearestInterval","buildTooltipData","fieldValues","formatters","fieldspace","dimensionMeasureMap","detailFields","containsDetailField","timeDiffs","dataLen","getRowContent","formattedValue","measureIndex","formatterFn","uniqueVals","strategy_toConsumableArray","colorAxis","shapeAxis","shape","sizeAxis","isRetinalField","associatedMeasures","icon","getColor","getShape","getSize","margin-left","displayFormat","getTabularData","fieldObj","allMeasures","_construct","strategy","DEFAULT_STRATEGY","Content","content_classCallCheck","_model","_formatter","ctx","_mount","table","tbody","margin-right","el","Tooltip","htmlContainer","tooltip_classCallCheck","connectorContainer","tooltipConf","contentClass","_tooltipContainer","_contentContainer","_contents","_tooltipConnectorContainer","qualifiedClassName","addClass","defConf","contentConfig","reorderContainers","contentConf","render","_target","repositionArrow","arrowDisabled","arrowOrient","outsidePlot","connector","_offset","orientation","_extent","arrowSize","topSpace","dimX","rightSpace","leftSpace","positionTop","positionRight","positionLeft","positionHorizontal","positionVertical","_position","_arrowPos","strategies","showSelectedItems","aggregatedModel","fieldsConf","measureNames","strategies_toConsumableArray","_getPrototypeOf2","side_effects_tooltip_classCallCheck","tooltip_possibleConstructorReturn","tooltip_getPrototypeOf","_tooltips","totalHeight","totalWidth","isEmpty","tooltips","boundBox","dataModels","fragmented","showVertically","tooltipPos","boxes","tooltip_toConsumableArray","sourceFields","indices","plotDimensions","getPlotPointsFromIdentifiers","plotDim","dt","dataTransform","layoutContainer","parentContainerDimensions","layoutBoundBox","unitBoundBox","tooltipInst","TooltipRenderer","timeDiffsByField","positionRelativeTo","tooltipBoundBox","getContents","spaceOutBoxes","spaceOutIfOverlap","firstBox","secondBox","opposite","Crossline","bandWidth","_this$config","bandClass","lineClass","elemData","axisIndex","fieldInst","xOffset","plotWidth","crossline_toConsumableArray","getPlotSpan","getPlotPadding","startPx","endPx","dataPoint","parentGroup","fade","fadeFn","focus","highlight","PlotHighlighter","plot_highlighter_classCallCheck","plot_highlighter_possibleConstructorReturn","plot_highlighter_getPrototypeOf","FilterEffect","entryModel","clearCaching","resetData","enableCaching","addLayer","layerDefs","layerRegistry","layerDef","mark","layerCls","shouldDrawAnchors","depLayerEncoding","encoding","defaultSizeValue","layerObj","instances","getTransitionConfig","calculateDomain","linkedLayer","AnchorEffect","anchors_classCallCheck","anchors_possibleConstructorReturn","anchors_getPrototypeOf","_layersMap","addAnchorLayers","metaInf","registry","layerDefsVal","registerImmediateListener","STATE_NAMESPACES","anchors_slicedToArray","_layers","elems","_linkedLayer$getTrans2","getLayerByName","getTransformedDataFromIdentifiers","transformedData","transformedDataModel","PersistentAnchors","BrushAnchors","behaviour_effect_map_defineProperty","BEHAVIOURS","STACK","ANGLE","RADIUS","SIZE","COLOR","SHAPE","ENCODING","X0","Y0","nearestPointThreshold","strokeOpacity","connectNullData","SimpleLayer","BOTTOM","TOP","LEFT","RIGHT","axisOrientationMap","axis_orientation_defineProperty","_axisOrientationMap","AxisOrientation","LINEAR","BAND","TIME","ORDINAL","QUANTIZE","QUANTILE","LOG","POW","IDENTITY","SEQUENTIAL","THRESHOLD","CONTINOUS","DISCRETE","HIDDEN","scaleLinear","scales","scaleThreshold","scaleLog","scalePow","scaleIdentity","scaleOrdinal","scaleSequential","scaleQuantize","scaleQuantile","scaleTime","scaleMap","scale_creator_defineProperty","_scaleMap","ScaleType","createScale","scaleFactory","axisName","axisNamePadding","fixedBaseline","labels","rotation","smartTicks","numberOfTicks","showAxisName","showInnerTicks","showOuterTicks","yOffset","rotateAxis","instance","tickText","labelManager","renderConfig","getTickSize","yShift","xShift","tickFormatter","tickLabelDim","quadrant","rotationNormalizer","angleToRadian","angle","changeTickOrientation","selectContainer","axisInstance","_smartTicks","isSmartTicks","registerAnimationDoneHook","setFixedBaseline","setAxisNamePos","textNode","axisNameHeight","labelOffset","availableSpace","setAxisRange","rangeBounds","space_setter_defineProperty","adjustRange","getAxisOffset","timeDiff","avWidth","bars","spaceSetter","spaceConfig","heightForTicks","_context$availableSpa","availWidth","availHeight","isOffset","_context$renderConfig","_context$config2","_context$getAxisDimen","getAxisDimensions","tickDimensions","allTickDimensions","axisNameDimensions","tickDimHeight","tickDimWidth","namePadding","labelConfig","minTickDistance","_minTickDistance","minTickSpace","_minTickSpace","_minDiff","tickShifter","getTickValues","maxTickSpaces","widthForTicks","continous","totalTickWidth","getRotatedSpaces","rotatedHeight","rotatedWidth","getAxisComponentDimensions","axisTicks","largestTick","largestTickDimensions","smartTick","_context$config","labelFunc","_tickLabelStyle","originalLabel","getFormattedText","_axisNameStyle","getHorizontalAxisSpace","axisDimensions","axisDimHeight","minTickDiff","getMinTickDifference","cartesian_axis_helper_toConsumableArray","getVerticalAxisSpace","_context$config3","calculateBandSpace","largestDimHeight","minTickWidth","_getHorizontalAxisSpa","_getVerticalAxisSpace","setContinousAxisDomain","_context$config6","userDom","_domain","PROPS","axisComponentDimensions","oldConfig","createAxis","_renderConfig","logicalSpace","SimpleAxis","simple_axis_classCallCheck","_dependencies","_range","_domainLock","_axisDimensions","defCon","simpleConfig","bodyElem","dist","_scale","_axis","_animationDonePromises","setAxisComponentDimensions","axisClass","getTickFormatter","setTickConfig","domainVal","computeAxisDimensions","_getAxisComponentDime","labelHeight","labelWidth","calculateContinousSpace","_context$renderConfig6","axisNameWidth","_getHorizontalAxisSpa2","_getVerticalAxisSpace2","renderAxis","labelProps","axisNameSpace","all","LinearInterpolator","LogInterpolator","PowInterpolator","interpolatorMap","continous_axis_defineProperty","_interpolatorMap","ContinousAxis","continous_axis_classCallCheck","continous_axis_possibleConstructorReturn","continous_axis_getPrototypeOf","InterpolatorCls","_interpolator","_this$renderConfig","_this$config3","getNumberOfTicks","labelDim","tickLength","numberOfValues","_this$axisComponentDi","BandAxis","_get","band_axis_getPrototypeOf","_this$maxTickSpaces","_getRotatedSpaces","setOffset","_this$renderConfig2","TimeAxis","time_axis_classCallCheck","time_axis_possibleConstructorReturn","time_axis_getPrototypeOf","time_axis_get","_this$config2","x11Colors","Pink","LightPink","HotPink","DeepPink","PaleVioletRed","MediumVioletRed","LightSalmon","Salmon","DarkSalmon","LightCoral","IndianRed","Crimson","FireBrick","DarkRed","Red","OrangeRed","Tomato","Coral","DarkOrange","Orange","Gold","Yellow","LightYellow","LemonChiffon","LightGoldenrodYellow","PapayaWhip","Moccasin","PeachPuff","PaleGoldenrod","Khaki","DarkKhaki","Cornsilk","BlanchedAlmond","Bisque","NavajoWhite","Wheat","BurlyWood","Tan","RosyBrown","SandyBrown","Goldenrod","DarkGoldenrod","Peru","Chocolate","SaddleBrown","Sienna","Brown","Maroon","DarkOliveGreen","Olive","OliveDrab","YellowGreen","LimeGreen","Lime","LawnGreen","Chartreuse","GreenYellow","SpringGreen","MediumSpringGreen","LightGreen","PaleGreen","DarkSeaGreen","MediumSeaGreen","SeaGreen","ForestGreen","Green","DarkGreen","MediumAquamarine","Aqua","Cyan","LightCyan","PaleTurquoise","Aquamarine","Turquoise","MediumTurquoise","DarkTurquoise","LightSeaGreen","CadetBlue","DarkCyan","Teal","LightSteelBlue","PowderBlue","LightBlue","SkyBlue","LightSkyBlue","DeepSkyBlue","DodgerBlue","CornflowerBlue","SteelBlue","RoyalBlue","Blue","MediumBlue","DarkBlue","Navy","MidnightBlue","Lavender","Thistle","Plum","Violet","Orchid","Fuchsia","Magenta","MediumOrchid","MediumPurple","BlueViolet","DarkViolet","DarkOrchid","DarkMagenta","Purple","Indigo","DarkSlateBlue","SlateBlue","MediumSlateBlue","White","Snow","Honeydew","MintCream","Azure","AliceBlue","GhostWhite","WhiteSmoke","Seashell","Beige","OldLace","FloralWhite","Ivory","AntiqueWhite","Linen","LavenderBlush","MistyRose","Gainsboro","LightGray","Silver","DarkGrey","Grey","DimGrey","LightSlateGrey","SlateGrey","DarkSlateGrey","Black","palette","DEFAULT_GRADIENT_COLOR","DEFAULT_CONFIG","stops","getHslString","hslArr","convertToXllString","baseString","getActualHslColor","paletteColor","hexToHsv","props_toConsumableArray","newConfig","uniqueValues","getStops","newStops","color_strategy_toConsumableArray","rangeStops","newStopsLength","newRange","hslInterpolator","interpolateHslLong","indexedDomain","scaleDomain","indexedDomainMeasure","normalDomain","steppedDomain","_getStops","continousSteppedDomain","_getStops2","uniqueRange","domainValue","indexedRange","normalRange","strategyGetter","domainType","rangeType","schemeType","color_strategy_defineProperty","domainRange","ColorAxis","color_axis_classCallCheck","_domainType","_rangeType","_schemeType","getSchemeType","_colorStrategy","setColorStrategy","updateDomain","colorStrategy","getScheme","colorSchemes","hslColorArray","getRawColor","color_axis_toConsumableArray","scaleInfo","domainRangeFn","transformationArr","newH","newS","newL","newA","size_strategy_defineProperty","pieceWiseRange","numVal","size_strategy_toConsumableArray","intervals","newIntervals","discreteRange","SizeAxis","size_axis_classCallCheck","_sizeStrategy","setStrategy","domainInfo","domainFn","generator","ShapeAxis","shape_axis_classCallCheck","_generatedShapes","shapeType","shapeGenerator","generatorFn","generatedShapes","DATA_TYPES","group_transform","data_type_scale_map_defineProperty","_dataTypeScaleMap","groupByIndices","nestCollection","nestFn","identityTransform","transformMap","transform_factory_defineProperty","_transformMap","uniqueField","valueField","normalizedData","normalizeData","uniqueFieldIndex","valueFieldIndex","seriesKeyIndex","seriesKeys","tuples","_tuple","seriesKey","newArr","orderBy","orderIndex","groupByIndex","localeCompare","stackData","seriesData","transformFactory","getLayerColor","colorEncoding","colorFieldIndex","rawColor","transfromColor","styleType","intensity","stateColor","originalColor","fillColorInfo","transformColor","interactionStyles","elements","getPlotElementsFromSet","_d$meta","colorTransform","_ref4","helpers_slicedToArray","getAxesScales","_map2","_map4","xScale","yScale","getIndividualClassName","individualClassName","classNameStr","attachDataToVoronoi","_ref5","helpers_toConsumableArray","updateStyle","positionPoints","positioner","encodingTransform","getPlotMeasurement","dimensionalValues","fieldInfo","encodingFieldsInf","transformType","_bandScale","span","groupSpan","offsetValues","actualGroupWidth","dataProps","innerPadding","getGroupSpan","isAxisBandScale","axisPadding","groupPadding","listener_map_slicedToArray","encodingValue","getEncodingFieldInf","_map6","x0Field","y0Field","colorField","shapeField","sizeField","_map8","_map10","xFieldSubType","yFieldSubType","_map12","xFieldIndex","yFieldIndex","x0FieldIndex","y0FieldIndex","getValidTransform","layerConfig","encodingFieldInf","groupByField","groupByFieldMeasure","_transformedData","getTransformedData","_normalizedData","getNormalizedData","calculateDomainFromData","_updateLock","getRenderProps","registerChangeListener","renderLayer","throwback","commit","defaultOptions","default_options_defineProperty","_defaultOptions","newConf","defaultPolicy","_cacheEnabled","_cachedData","BaseLayer","base_layer_classCallCheck","base_layer_possibleConstructorReturn","base_layer_getPrototypeOf","base_layer_assertThisInitialized","alias","_points","_measurement","_store","localNs","initializeGlobalState","globalState","getState","helpers_defineProperty","base_layer_defineProperty","global","unitRowIndex","unitColIndex","_encodingFieldsInf","_encodingTransform","_alias","transformData","yEnc","xEnc","encodingType","transformedDataArr","fieldsLen","pointObj","_transformType","pointMap","_pointMap","_dataProps","_this$encodingFieldsI","base_layer_slicedToArray","xMeasure","yMeasure","_identifiers$","_identifiers$2","xMeasureIndex","yMeasureIndex","getAllAttrs","filteredPoints","base_layer_toConsumableArray","sizeVal","enc","_identifiers$getData","identifierData","identifierSchema","_this$encodingFieldsI2","tupleArr","transformedVal","base_layer_construct","userConf","drawLine","curveInterpolatorFn","linepath","LineLayer","line_classCallCheck","line_possibleConstructorReturn","line_getPrototypeOf","isXDim","isYDim","xPx","yPx","_getLayerColor","stroke","rowId","cachePoint","seriesClassName","containerSelection","animateGroup","groupTransition","groupAnimateStyle","stroke-opacity","getPathStyle","translatePoints","colorValFn","colorVal","getDrawFn","searchRadius","_point$data$data","getIdentifiersFromData","layerId","drawArea","easeEffect","renderer_slicedToArray","enterAreaPath","updateAreaPath","selectionEnter","AreaLayer","area_get","area_getPrototypeOf","_getAxesScales","classNameFn","y0Px","minOuterRadius","stroke-width","stroke-linejoin","innerRadiusFixer","states","fadeout","selected","ArcLayer","arc_classCallCheck","arc_possibleConstructorReturn","arc_getPrototypeOf","_prevPieData","pieData","pieIndex","prevData","_getFieldIndices","getFieldIndices","arc_helper_slicedToArray","angleField","radiusField","angleIndex","sizeIndex","radiusIndex","colorIndex","dataVal","uid","outerRadiusValue","angleVal","_previousInfo","getPreviousPoint","currIndex","prevArc","nextArc","_dataPoint$datum","_this$measurement","chartHeight","chartWidth","qualClassName","getRadiusRange","defaultRadius","radiusDomain","rangeValueGetter","getRangeValue","domainMultiplier","sizeAxisDomain","sizeMultiplier","_chartWidth","_chartHeight","consecutiveExits","exitCounter","arcFn","tweenPie","individualClass","tweenExit","exitArr","oldExitCounter","tweenExitPie","consecutiveExitArr","gElem","pieSlices","pieSliceInf","tData","drawText","selectionMerge","backgroundVal","textanchor","textStyle","background","backgroundPadding","_smartLabel$getOriSiz","backgroundEl","TextLayer","textEncoding","textField","textFormatter","backgroundEncoding","backgroundValue","textFieldIndex","_loop","textValue","text_slicedToArray","text-anchor","drawSymbols","mergedGroups","symbolGroups","symbolEnter","createShape","groupElement","Element","newShape","nodeName","src","href","shapeElement","pathStr","checkPath","exitGroups","defColorStyle","fillOpacity","shapes","sizes","PointLayer","point_classCallCheck","point_possibleConstructorReturn","point_getPrototypeOf","sizeEncoding","shapeEncoding","sizeValue","shapeFieldIndex","sizeFieldIndex","_config$offset","offsetX","offsetY","point_slicedToArray","maxSize","generateDataPoints","point_toConsumableArray","drawFn","_maxSize","_getPlotMeasurement2","widthMetrics","heightMetrics","offsetXValues","offsetYValues","measurementConf","getMeasurementConfig","widthSpan","heightSpan","distanceLimit","drawRects","barEnterFn","transitionBars","selTransition","resolveDimByField","axesInfo","spaceType","sizeConfig","enterSpace","minVal","maxVal","diffPx","zeroPos","axisType","axisType0","resolveDimensions","_resolveDimByField","enterWidth","enterX","xPos","_resolveDimByField2","enterHeight","BarLayer","bar_classCallCheck","bar_possibleConstructorReturn","bar_getPrototypeOf","_plotPadding","_plotSpan","bar_get","getTranslatedPoints","_context$encodingFiel","normalizedDataArr","clipElement","clipPathElement","bar_slicedToArray","barWidthMetrics","barHeightMetrics","barWidthOffsets","barHeightOffsets","barWidth","barWidthOffset","barHeight","barHeightOffset","uniqueFieldType","filterData","pointFound","bar_toConsumableArray","p2","tick_renderer","ticksEnter","TickLayer","_config$span","xSpan","ySpan","x0Px","drawTicks","sanitizeEncoding","layerFactory","compositeLayers","factoryObj","setLayerRegistry","reg","_layerRegistry","getSerializedConf","serializedDefs","defs","unitLayerDef","sDef","parseLayerDefinition","layerType","strs","layer_factory_toConsumableArray","getLayerInstance","layerConstructor","getLayerClass","composeLayers","sanitizeLayerConfig","DEFAULT_LAYERS","defaults_defineProperty","_DEFAULT_LAYERS","ROWS","COLUMNS","COL","ROW","CELL","X_AXES","Y_AXES","ENTRY_CELLS","EXIT_CELLS","PRIMARY","SECONDARY","local_options","local_options_defineProperty","_CONFIG$ROWS$COLUMNS$","SimpleGroup","Variable","ComposedVars","composed_vars_classCallCheck","texts","composed_vars_possibleConstructorReturn","composed_vars_getPrototypeOf","vars","_vars","member","getMinDiff","SimpleVariable","simple_var_classCallCheck","simple_var_possibleConstructorReturn","simple_var_getPrototypeOf","oneVar","_oneVar","dtFormat","minimumConsecutiveDifference","varInst","convertToVar","transformFields","field_sanitizer_slicedToArray","normalizedFields","normalizeFields","norFields","orderFields","fieldArray","temporalArr","categoricalArr","fieldList","numOfMeasures","allDimensions","field_sanitizer_toConsumableArray","rowsInfo","columnsInfo","rowDimensions","rowMeasures","rowTemporalFields","rowCategoricalFields","columnDimensions","columnMeasures","columnTemporalFields","columnCategoricalFields","VisualEncoder","_fieldInfo","_axisFrom","_headerFrom","__headerFrom","axisFrom","_getHeaderAxisFrom2","visual_encoder_slicedToArray","getHeaderAxisFrom","rowHeader","rowAxis","_getHeaderAxisFrom4","colHeader","colAxis","headerFrom","scaleMaps","dataTypeScaleMap","generateAxisFromMap","axesCreators","groupAxes","axisKey","currentAxes","cacheMaps","commonAxisKey","getAxisKey","axisConfig","getAxisConfig","axisInfo","axisOrientation","userAxisConfig","_rotationLock","resetDomain","createSimpleAxis","Cls","getIndex","arrIndex","CartesianEncoder","geomCellAxes","projections","rowFields","columnFields","rowIndex","columnIndex","xAxes","yAxes","lock","unlock","unitDomains","units","1","rIdx","unitsArr","_loop2","cIdx","len2","_resolver$axes","axesArr","adjustedDomain","alignZeroLine","getAdjustedDomain","y1ratio","y2ratio","allSameSign","facets","counter","primaryFacets","secondaryFacets","primaryFields","secondaryFields","primaryLen","secondaryLen","projArr","primaryField","secondaryField","facet","existIndex","axisFromIndex","cartesian_encoder_get","cartesian_encoder_getPrototypeOf","groupedModel","encodingObj","retriveDomainFromData","layerArray","serializedLayers","userLayerConfig","colField","colFieldName","rowField","configs","rowFieldName","rowFieldType","getDefaultMark","colFieldType","defConfigs","layerConfigs","getLayerConfFromFields","colFields","encodingArr","encoder_helper_toConsumableArray","colFieldExist","rowFieldExist","layerConf","mergedLayerConf","serializedLayerConfig","cartesian_encoder_toConsumableArray","PolarEncoder","pieAxes","domainProps","sanitizedRows","sanitizedColumns","polar_encoder_get","polar_encoder_getPrototypeOf","sanitizedFields","typeIndex","fieldSet","polar_encoder_toConsumableArray","facetFields","parentModel","layerEncoding","encType","polar_encoder_defineProperty","RetinalEncoder","newAxes","createRetinalAxis","fieldProps","getAxisType","encodingConfigs","isDistributionEqual","group_utils_toConsumableArray","rowType","initializeCacheMaps","cellMap","xAxesMap","yAxesMap","entryCellMap","exitCellMap","headerCreator","fieldHeaders","TextCell","getHeaderText","rowLength","userAxisFromConfig","_fields","group_utils_slicedToArray","firstField","secondField","firstFieldType","secondFieldType","setFacetsAndProjections","encoder","_encoder$simpleEncode","simpleEncoder","getFacetsAndProjections","group_utils_defineProperty","createSelection","appendObj","idFn","dataSelect","mergedSelection","getBorders","matrices","showRowBorders","showColBorders","showValueBorders","valueMatrix","_rows","leftRows","rightRows","_columns","topColumns","bottomColumns","_encoder$fieldInfo","allDimensionLength","allMeasuresLength","allTemporalFieldsLength","getRowBorders","borders","getColumnsBorders","getValueBorders","borderTypeRow","borderTypeCol","action_behaviour_map_defineProperty","ACTIONS","getLayerFromDef","existingLayer","_layerDeps","inst","colIndex","instanceArr","_timeDiffs","resolveEncodingTransform","layerInst","resolvable","depArr","sanitizeLayerDef","sanitizedDefs","sConf","getLayersBy","searchBy","removeLayersBy","createRenderPromise","_renderedPromise","_renderedResolve","getGridLayerDefinitions","getDefaultVisibilty","getLayerDefinition","_definition","_encoding","gridLines","gridBands","gridLineColor","zeroLineColor","gridBandColor","isLinearScale","grid_lines_defineProperty","isNegativeDomain","attachDataToGridLineLayers","gridLayerData","getGridLayerData","gridData","_jsonData$push","grid_lines_toConsumableArray","_gridbands","_gridlines","trackerClassName","arcLayerClassName","sideEffectClassName","src_local_options","src_local_options_defineProperty","_CONFIG$LAYERDEFS$TRA","cachedData","local_options_toConsumableArray","oldData","calculateDomainListener","unionDomainFromLayers","layerAxisIndex","getDataDomain","domainValues","layerDomain","fieldDomain","fieldStr","_layerAxisIndex","src_listener_map_slicedToArray","fieldsVal","removeExitLayers","layersMap","markSet","listenerInf","_lifeCycleManager","notify","axesObj","_timeDiffsByField","createGridLineLayer","vuConf","atomicDef","_ref7","_ref8","transformDataModels","transformVal","_ref11","_ref12","layerAxisIndexVal","axesVal","lyr","disableUpdate","attachDataToLayers","transformedDataModels","dataSource","enableUpdate","_dimensionMeasureMap","getDimensionMeasureMap","retinalEncodingsAndMeasures","_layer$encodingFields","_retinalEncodingsAndM","src_helper_toConsumableArray","retinalFields","attachAxisToLayers","axisInf","props_defineProperty","_PROPS","createSelectionSet","originalData","attachPropagationListener","firebolt_helper_slicedToArray","dispatchQueuedSideEffects","firebolt_helper_toConsumableArray","clearActionHistory","payloadGenerator","brush","selectionDataModel","propPayload","getRangeFromData","propCriteria","isDimension","payload_generator_toConsumableArray","__default","propagateValues","propagationFieldInf","propagationFields","sideEfffects","mergedModel","sourceUnit","sourceCanvas","parentAlias","propagationBehaviour","propFields","facetByFields","getModelWithFacetData","schema1","data1","schema2","data2","data_propagator_toConsumableArray","groupId","behaviourInstance","propagationConf","sourceBehaviour","enabled","propConf","propInf","UnitFireBolt","src_firebolt_classCallCheck","firebolt_possibleConstructorReturn","firebolt_getPrototypeOf","firebolt_assertThisInitialized","unitId","aliasName","propagationSourceCanvas","sourceUnitId","sourceSideEffects","sideEffectInstances","actionOnSource","mappedEffects","se","sideEffectChecker","enabledFn","payloadFn","sourceIdentifierFields","sourceBehaviours","firebolt_get","VisualUnit","visual_unit_classCallCheck","visual_unit_defineProperty","lifeCycleManager","_layerNamespaces","_transformedDataModels","localOptions","_firebolt","_rootSvg","class","renderGridLineLayers","_entry","grid_lines_slicedToArray","parentGroupClass","renderLayers","orderedLayers","layerParentGroup","layerDepOrder","_layerDepOrder","_sideEffectGroup","createSideEffectGroup","initSideEffects","rootSvg","_this$parentContainer","parentContainerInf","layerDefinition","layerDefinitions","components","layerIndex","startIndex","visual_unit_toConsumableArray","layersArr","_layersArr","markId","defArr","instanceValues","layerdeps","getLayerAxisIndex","_layer$config","stateStore","dimValue","getNearestDimensionalValue","entryVal","pointInf","getMarkInfFromLayers","markInf","parsedIdentifiers","transposeArray","getPointsFromIdentifiers","visual_unit_construct","getFieldNames","fields1","matrix_model_toConsumableArray","createSelectedDataModel","uniqueKeyGenerator","keyArray","newDm","nextDepthUniqueValues","projectRows","allColumnProjections","rowProjections","optionalProjections","projectFields","_getFieldNames2","matrix_model_slicedToArray","projFieldNames","colProjFieldNames","pushToMatrix","_matrix$rowIndex","facetInfo","colProjections","rowProj","projIdx","_getFieldNames4","rowProjFieldNames","projectedDm","createValueCells","suppliedLayers","GeomCell","matrixLayers","horizontalAxis","verticalAxis","datamodelTransform","layerConfigArr","getLayerConfig","normalizedColumns","normalizedRows","geomCellKey","getCellKey","columnId","allFacets","cell_creator_toConsumableArray","rowFacets","colFacets","geomCell","updateCells","facetKey","createAxisCells","axisInst","_axisInst$config","AxisCell","BlankCell","headerPlaceholderGn","selectionObj","selectionKeys","keySet","createTextCells","generatePlaceholders","facetsAndProjections","encoders","valuesMatrix","rowKeys","columnKeys","takeAxisFrom","takeHeaderFrom","axisPlaceholderGn","selObj","axesMatrix","selObjProp","axesForDraw","rowsPrimary","rowPrime","columnsPrimary","colPrime","_selectionObj","rowsSecondary","columnsSecondary","getObjects","section","hContext","computeMatrices","componentRegistry","globalConfig","autoGroupBy","otherEncodings","matrixGnContext","getCellDef","isRowSizeEqual","isColumnSizeEqual","colCells","rowCells","resetSimpleAxes","newCacheMap","valueCellContext","serializeLayerConfig","extractFields","layerFields","flattenArray","getFieldsFromSuppliedLayers","suppliedLayerConfig","aggregationFns","valueMatrixInfo","getMatrixModel","rowDataModels","colProj","firstLevelRowKeys","_rowDataModels","rowFacetFieldNames","selectedDataModel","_rowDataModels2","colFacetNames","firstLevelColumnKeys","dme","rIndex","cIndex","transposedColKeys","valueCellsCreator","placeholder","_mutateAxesFromMap","mutateAxesFromMap","xAxisSet","yAxisSet","axisId","createUnits","_generateMatrices","generateMatrices","leftHeaders","topHeaders","bottomHeaders","rightHeaders","cell_creator_slicedToArray","rowSec","colSec","leftFacets","rightFacets","rowPriority","colPriority","leftMatrix","rightMatrix","topMatrix","bottomMatrix","currentBottomLength","setAvailableSpace","rowMatrix","columnMatrix","RESOLVER_PROPS","MatrixResolver","matrix_resolver_classCallCheck","_registry","_layerConfig","_matrixLayers","_rowMatrix","_columnMatrix","_valueMatrix","_facets","_projections","_datamodelTransform","_units","_cacheMaps","_axes","maps","matrix_resolver_toConsumableArray","_horizontalAxis","_verticalAxis","matrixType","sideEffectRegistry","_this$dependencies","unitConfig","extractUnitConfig","globalStates","_this$getAllFields","retContext","getRetinalFieldsDomain","retinalEncoder","setCommonDomain","_this$axes","retinalAxes","updateModel","placeholders","bottomLeft","bottomRight","_this$dependencies3","matrix_resolver_slicedToArray","topCols","bottomCols","rowHeaders","blankCellCreator","showHeaders","footers","topLeft","topRight","ValueMatrix","matrixArr","value_matrix_classCallCheck","instancesById","cellValue","_instancesById","_matrix","_filterFn","rowWidth","currentRowWidth","getLogicalSpace","rowHeight","currentRowHeight","setMatrixInstances","_composition","createMatrices","matrixConfig","unsubscribeChangeListeners","retinalConfig","sanitizeRetinalConfig","retinalConf","confValue","getEncoder","groupType","fieldSanitizer","setAxisAndHeaders","placeholderInfo","getMatrices","_groupedDataModel","createRetinalAxes","setDomains","cornerMatrices","createHeaders","metaData","border","unionUnitDomains","registerDomainChangeListener","visual_group_props_defineProperty","visual_group_props_PROPS","cellRegistry","VisualGroup","visual_group_classCallCheck","visual_group_possibleConstructorReturn","visual_group_getPrototypeOf","componentSubRegistry","visual_group_assertThisInitialized","_selection","createUnitState","visual_group_helper_slicedToArray","createLayerState","setupChangeListeners","variable","findInGroup","channel","group_utils_this","facetType","projType","getRetinalAxes","getSimpleAxes","_this$resolver$getAll","visual_group_defineProperty","existingRemoveSet","select_toConsumableArray","firebolt_action_behaviour_map_defineProperty","action_behaviour_map_actionBehaviourMap","propagationBehaviourMap","_propagationBehaviour","firebolt_behaviour_effect_map_defineProperty","firebolt_behaviour_effect_map_behaviourEffectMap","propagationSideEffects","_propagationSideEffec","SCALE_FUNCTIONS","VALUE","canvasAlias","check","assembleModelFromIdentifiers","src_firebolt_helper_toConsumableArray","LegendFireBolt","_Firebolt","legend_firebolt_classCallCheck","legend_firebolt_possibleConstructorReturn","legend_firebolt_getPrototypeOf","legend_firebolt_inherits","legend_firebolt_createClass","behaviourName","getCriteriaFromData","firebolt_physical_defineProperty","physical_physicalActions","boundingBox","gradientDimensions","axisScale","rangeShifter","drag_defineProperty","getSelectionCriteria","selectionBoxMeasure","drawingInfMeasure","subjectStartPoint","gradientDimension","legendGradContainer","legendSelGroup","enterFn","getMousePos","boundingClientRect","selection_box_drag_defineProperty","fadeOut","brighten","LegendHighlighter","legend_highlighter_classCallCheck","legend_highlighter_possibleConstructorReturn","legend_highlighter_getPrototypeOf","legendContainer","resetLogicalSpace","title","_title","ALIGN","DEFAULT_MEASUREMENT","LEGEND_TITLE","borderStyle","borderColor","bounds","upper","ICON_MAP","getScaleInfo","scaleType","steps","scaleFn","getInterpolatedData","domainForLegend","interpolatedFn","getDomainBounds","domainBounds","domainLeg","ele","legend_helper_defineProperty","getScaleFactor","SimpleLegend","simple_legend_classCallCheck","_metaData","_fieldName","_labelManager","_cells","defaultMeasurement","_computedStyle","legendBehaviours","_canvasAlias","getItemMeasures","_labelManager$getOriS","effPadding","effBorder","effMargin","dataFromScale","titleSpace","getTitleSpace","titleHeight","titleWidth","labelSpaces","getLabelSpaces","_computeItemSpaces","computeItemSpaces","maxItemSpaces","textOrientation","itemSpaces","iconSpaces","maxIconWidth","labelSpace","itemSpace","iconSpace","titleSpaces","_this$measurement2","titleCreator","titleContainer","_this$config4","_this$measurement3","renderTitle","simple_legend_defineProperty","legendOrientation","position_config_defineProperty","_legendOrientation","datasets","itemContainerMeasures","getStepSpacesInfo","iconHeight","iconWidth","stepPadding","horizontal","vertical","positionConfig","_positionConfig","alignmentMap","_alignmentMap","itemStack","_itemStack","createLegendSkeleton","gradWidth","gradHeight","maxGradHeight","maxGradWidth","legendBody","legendItem","getItemContainers","legendInstance","positionObj","createItemSkeleton","itemSkeleton","alignClass","applyItemStyle","measureType","stepColorCheck","_context$measurement","renderIcon","defaultIcon","DiscreteLegend","_getScaleInfo","discrete_legend_toConsumableArray","discrete_legend_defineProperty","discrete_legend_get","discrete_legend_getPrototypeOf","renderDiscreteItem","_context$measurement2","_item$icon","text-align","getGradientDomain","accumulator","currentValue","MAX_VALUE","MIN_VALUE","legendGradSvg","legendGradCont","linearGradient","makeLinearGradient","legendRect","GradientLegend","gradient_legend_toConsumableArray","gradient_legend_defineProperty","newAxis","axisSpace","axisDomainLength","_legendGradientSvg","gradient_legend_get","gradient_legend_getPrototypeOf","renderGradient","_createLegendSkeleton","StepLegend","step_legend_toConsumableArray","step_legend_defineProperty","lowerBounds","upperBounds","step_legend_get","step_legend_getPrototypeOf","stepData","renderStepItem","_context$measurement3","_item$icon2","_positionConfig$posit","PADDING","BORDER","MARGIN","TITLE","TITLE_TEMPLATE_NOT_ALLOWED_TAGS","LEGEND_TYPE_MAP","constants_defineProperty","_LEGEND_TYPE_MAP","share","operators_construct","operators_toConsumableArray","strings","htmlCode","expLn","frag","createDocumentFragment","treeShakeNode","nodeType","Node","ELEMENT_NODE","tagName","_didIteratorError","_iteratorError","_step","_iterator","childNodes","err","actionModel","ActionModel","action_model_classCallCheck","_registrableComponents","canvas","once","visualGroup","matrixInstance","_cell$valueOf$firebol","registerPropagationBehaviourMap","dissociateBehaviour","_len5","_key5","dissociateSideEffect","policy","registrableComponents","mergedPolicy","aliases","comp","*","propagationPayload","propagationCanvas","crossInteractionPolicy","legend","minHeight","minCharacters","maxLines","verticalAlign","collapse","src_options","isInteger","minUnitWidth","minUnitHeight","oldConf","ROW_MATRIX_INDEX","2","COLUMN_MATRIX_INDEX","WIDTH","HEIGHT","CENTER","ROW_LEFT","ROW_RIGHT","COLUMN_BOTTOM","COLUMN_TOP","ROW_SPAN","COL_SPAN","ROW_ROOT","COLUMN_ROOT","GenericLayout","generic_layout_classCallCheck","_matrices","_centerMatrix","_mountPoint","DEFAULT_CONFIGURATION","grid_layout_defaults_defineProperty","_DEFAULT_CONFIGURATIO","_FieldNames$BORDER","FieldNames","DEFAULT_MEASUREMENTS","_DEFAULT_MEASUREMENTS","BLANK_BORDERS","columnFilter","previousRow","currentRow","prevCell","nextRow","prevRow","calcRowSpan","isNull","calcColSpan","mask","filteredRow","span_maker_toConsumableArray","cellSpanMaker","viewMatrix","spans","ridx","currSpan","applyBorders","borderType","applyRowBorders","showBorders","applyColBorders","renderMatrix","containerForMatrix","_cellSpanMaker","renderTable","rowData","findInPage","page","combineMatrices","isTransposed","joinedMatrix","utils_toConsumableArray","computeLogicalSpace","maxMeasures","_config$isTransposed","unitMeasures","_getMeasureInfo","getMeasureInfo","firstMeasure","secondMeasure","minMeasures","getMinMeasures","_logicalSpace","utils_defineProperty","valueItem","maxMeasure","firstMeasureValue","secondMeasureValue","valueArray","_item$space","fMeasure","sMeasure","createMatrixEachLevel","_arr$i","extraCellsRemover","beg","distribution","extraCellLengths","VisualMatrix","visual_matrix_classCallCheck","_lastLevelKey","_primaryMatrix","_secondaryMatrix","_maxMeasures","_availableSpace","_layoutMatrix","_tree","_createTree2","createTree","matrixTree","lastLevelKey","layoutMatrix","primaryMatrix","secondaryMatrix","breakPage","primaryMatrixLength","newMatrix","keyLength","heightMeasures","populateMaxMeasures","widthMeasures","calculateDepth","viewableMatrix","createViewPortMatrix","viewableMeasures","redistributeSpaces","childDepth","createMatrixInstances","matrixInfo","layout","breakPointer","_breakPointer","brokenMatrix","breakMatrix","nextLevel","removeExtraCells","RowVisualMatrix","row_matrix_classCallCheck","row_matrix_possibleConstructorReturn","row_matrix_getPrototypeOf","maxHeights","maxWidths","matrixInst","cellDimOptions","matrixIndex","_this2$getCellDimensi","getCellDimensions","widths","rowHeights","columnWidths","primary","secondary","begCellLen","endCellLen","remainaingAvailWidth","remainaingWidth","cWidths","conditions","maxPrioritySpace","availableWidth","currentWidth","prioritySpace","logicalWidths","getPriorityDistribution","mWidth","mHeight","redistributeViewSpaces","computeViewableSpaces","rHeights","gutter","spaceTakenByColumn","spaces","getDistributedHeight","heightWithoutGutter","distSum","gutterSum","availableHeight","colLen","distHeight","borderWidth","colHeight","colWidth","heights","ColumnVisualMatrix","column_matrix_classCallCheck","column_matrix_possibleConstructorReturn","column_matrix_getPrototypeOf","remainaingHeight","heightDist","divider","spaceTakenByRow","getDistributedWidth","layoutConfig","distWidth","rowLen","oldLogicalSpace","heightDistribution","setViewSpaces","pointerType","viewSpaces","pointer","computations_defineProperty","GridLayout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","_layoutId","_viewInfo","defaultViewInfo","generateVisualMatrices","begColCells","endColCells","gutterSpace","_top","layout_helper_slicedToArray","_center","_bottom","layout_helper_toConsumableArray","RowMatrix","ColumnMatrix","centerMatrix","layout_get","computeLayoutMeasurements","_layout$measurement","rowMatrixWidth","getMatrixMeasurement","maxRowMatrixWidth","columnMatrixWidth","maxColumnMatrixHeight","columnViewPages","getViewableSpaces","columnViewSpace","columnPointer","columnMatrixHeight","rowMatrixHeight","rowViewableSpaces","computations_toConsumableArray","rowWidthsPrimary","rowWidthsSecondary","columnViewableSpaces","columnHeightsPrimary","columnHeightsSecondary","setViewInformation","pageNumber","pageType","totalPages","viewInfo","viewMatricesInfo","layout_defineProperty","renderGrid","currentPage","rowPointer","getViewMatrices","rowMatrices","getViewableMatrices","columnMatrices","centralMatrixPointer","rowMatrixLen","columnMatrixLen","rowPages","columnPages","layoutDimensions","getViewMeasurements","_layout$config3","rowSpaces","leftWidth","rightWidth","colSpaces","topHeight","bottomHeight","centerHeight","viewWidth","viewHeight","renderMatrices","TransactionSupport","INTERFACE_IMPl","CLASSPREFIX","HEADER","DATA","AXES","FACET_BY_FIELDS","FIELDS","TRANSFORM","LAYER_DEF","CONFIG","DETAIL_FIELDS","TEXT","AXIS","GEOM","BLANK","SimpleCell","simple_cell_classCallCheck","enums_defaults_defineProperty","_DEFAULT_CONFIG","_CONSTANTS$MARGIN","CONSTANTS","DEFAULT_PROPS","minSpacing","src_props_defineProperty","visual_cell_src_props_PROPS","caption","smartText","axis_cell_classCallCheck","axis_cell_possibleConstructorReturn","axis_cell_getPrototypeOf","_availHeight","_availWidth","axis_cell_assertThisInitialized","computeAxisSpace","logicalWidth","logicalHeight","spaceFixer","_axis$getLogicalSpace","wrapperDiv","blank_cell_classCallCheck","blank_cell_possibleConstructorReturn","blank_cell_getPrototypeOf","blank_cell_assertThisInitialized","setSmartText","_context$minSpacing","minHeightSpace","minWidthSpace","paddedHeight","paddedWidth","text_cell_classCallCheck","text_cell_possibleConstructorReturn","text_cell_getPrototypeOf","_className","text_cell_assertThisInitialized","computeTextSpace","_context$minSpacing2","minText","_minTextSpace","smartSpace","textAlign","vAlign","_this$smartText","translation","middle","geom_cell_classCallCheck","geom_cell_possibleConstructorReturn","geom_cell_getPrototypeOf","_unit","_datamodel","_facetByFields","_transform","_caption","geom_cell_assertThisInitialized","lockModel","unlockModel","captionSpace","computeGeomSpace","getCaptionSpace","captionDom","DEFAULT_PLACEHOLDERS","src_defaults_defineProperty","_DEFAULT_PLACEHOLDERS","createHeading","cellType","_minTickDiff","legendInitializer","legendConfig","prevLegends","legends","headerHeight","legendCreator","LegendCls","dataset","scaleProps","_scale$config","stepMapper","dataInfo","legendMeasures","getGroupByData","setLegendMeasures","LayoutComponent","layoutComponent_classCallCheck","_boundBox","_renderAt","_alignWith","_alignment","_componentName","DummyComponent","newDimensions","renderAt","component","componentName","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_CLASS_NAME","NODE_PREFIX","DefinitionModel","definitionModel_classCallCheck","_host","host","_cut","cut","_ratioWeight","ratioWeight","_preferred","preferred","_lanes","lanes","_remainingHeight","_remainingWidth","remainingHeight","remainingWidth","getNodeId","_uid","yExtraSpace","smallestHeight","getCutType","smallestExtraHeightHorizontally","MAX_SAFE_INTEGER","containerHeight","hostHeight","xExtraSpace","smallestWidth","smallestExtraWidthVertically","containerWidth","hostWidth","createPlaceHolderComponent","placeComponent","definitionModel","leftOvercomponentRationWidth","isPreferred","isGridComponent","componentRatioWidth","leftHeight","_component$getLogical","componentHeight","componentWidth","firstLaneConfig","firstLane","secondLane","tree_classCallCheck","_parentCut","_this$_children","tree_toConsumableArray","parentCut","bound","nodeconfig","searchNode","childNode","nodeId","deleteSearchNode","LayoutModel","measurements","layout_model_classCallCheck","_measurements","_root","setBoundBox","addChildren","lane","allocateBoundingBox","totalWeight","carry","lastSibling","ratio","setHostSpatialConfig","setHostPosition","negotiateDimension","alteredDim","nonAlteredDim","cumultiveExtraSpaceAmt","childrenLength","extraSpaceAmt","computePosition","determineBoundBox","bb","_lastSibling$boundBox","_left","_height","_width","_instance$parent$boun","setSpatialConfig","Utils","utils_classCallCheck","utils_createClass","isDOMElement","getID","getElement","findContainer","coordinate","removeDiv","divId","DataPoint","data_point_classCallCheck","DataParser","data_parser_classCallCheck","data_parser_createClass","defaultDataPointLogic","nodepoints","getnodePoints","datapoint","HTMLDataAdapter","_DataParser","html_data_classCallCheck","html_data_possibleConstructorReturn","html_data_getPrototypeOf","html_data_inherits","html_data_createClass","getCoordinates","html_data_get","Renderer","renderer_classCallCheck","renderer_createClass","initRenderer","__logicalTree","HTMLRenderer","_Renderer","html_renderer_classCallCheck","html_renderer_possibleConstructorReturn","html_renderer_getPrototypeOf","_coordinates","html_renderer_inherits","html_renderer_createClass","createhtml","mainDiv","html_renderer_get","parentDiv","createAndCustomiseParent","hasHost","createAndPositionDiv","_objectSpread","div","coordinates","findNode","nodeID","renderer","renderHTML","DrawingManager","drawing_manager_classCallCheck","_componentMap","componentMap","_layoutClassName","layoutClassName","_renderer","drawing_manager_createClass","drawLayout","resolveAligment","componentData","alignWith","newNodeConfig","refNode","alignment","drawComponent","DefinitionManager","definition_manager_classCallCheck","_prioritySequence","_totalHeight","_totalWidth","_targetComponentMap","prepareTargetComponentMap","targetComponentMap","canvasComponent","tempDefModel","componentRef","getComponent","placeGridComponent","gridComponents","iscolumnPreffered","_placeComponent","rowpreffred","LayoutDef","layout_def_classCallCheck","_layoutDefinition","layout_def_createClass","addComponent","layoutDefinition","addMultipleComponent","componentArray","sanitizedDefinition","sanitizeConfig","hostObj","hostID","childHost","resetComponentMap","LayoutManager","layout_manager_classCallCheck","_dimension","_skeletonType","skeletonType","_layoutDef","_drawingManager","_rootNodeID","con","resetNode","updateNode","compute","_layout","calLayOutDef","_context$dimension","layoutDef","prioritySequence","generateConfigModel","negotiate","broadcast","layoutComponents","componentArr","compo","MuzeComponent","_this$boundBox","HeaderComponent","headerComponent_classCallCheck","headerComponent_possibleConstructorReturn","headerComponent_getPrototypeOf","setParams","cont","renderHeader","LegendComponent","legendComponent_classCallCheck","legendComponent_possibleConstructorReturn","legendComponent_getPrototypeOf","legendSpace","sectionComponents","_this$params$config$m","_this$params$config","legendMount","legWidth","legHeight","sections","currHeight","currWidth","legendInfo","leg","legendHeight","legendWidth","renderLegend","MatrixComponent","matrix_component_classCallCheck","matrix_component_possibleConstructorReturn","matrix_component_getPrototypeOf","GridComponent","grid_component_classCallCheck","grid_component_possibleConstructorReturn","grid_component_getPrototypeOf","_this$component$viewI","matrixDim","matrixName","updateWrapper","matrixWrapper","_this$component$0$0$b","sanitizeGrid","TITLE_CONFIG","SUB_TITLE_CONFIG","LAYOUT_ALIGN","getRenderDetails","_mount$getBoundingCli","heightAttr","widthAttr","visGroup","_visGroup$placeholder","titleConfig","subtitleConfig","subtitle","legendPosition","layoutArrangement","arrangeComponents","_titleLayouts","titleLayouts","component_resolver_defineProperty","legendLayouts","titlePosition","subtitlePosition","availableHeightForCanvas","availableWidthForCanvas","_createHeaders","canvasHeight","canvasWidth","headerOptions","resolveTitleSubTitleContent","rawContent","escapeHTML","htmlEscapes","&","<",">","\"","'","/","_createHeading","createLegend","getLegendSpace","canvases","mountSpace","canvas_local_options_defineProperty","_localOptions","canvasOptions","_canvasOptions","_sanitized","sub","setupChangeListener","allOptions","_allOptions","canvas_helper_toConsumableArray","nameSpaceProps","equalityChecker","option","updateChecker","dispatchProps","_cachedProps","createLayoutManager","defaultInteractionPolicy","isMeasure","group_firebolt_toConsumableArray","getFieldsFromChannel","colDim","fieldInf","unitFireBolt","unitColFacets","equals","unitRowFacets","propagateWith","defaultCrossInteractionPolicy","propagationCanvasAlias","propagationUnit","GroupFireBolt","group_firebolt_classCallCheck","_interactionPolicy","_crossInteractionPolicy","applyInteractionPolicy","policies","changeBehaviourStateOnPropagation","changeSideEffectStateOnPropagation","APP_INITIAL_STATE","app","Canvas","globalDependencies","canvas_classCallCheck","canvas_possibleConstructorReturn","canvas_getPrototypeOf","canvas_slicedToArray","canvas_assertThisInitialized","_layoutManager","initedComponents","initCanvas","createGroupState","_VisualGroup$getState2","canvas_helper_slicedToArray","localState","register","renderDetails","promises","prepareLayout","triggerReflow","renderLayout","layoutManager","grid","titleWrapper","titleCell","layout_maker_objectSpread","subtitleWrapper","subtitleCell","colorLegendWrapper","gridWrapper","registerComponents","setLayoutInfForUnits","getBoundBox","getRootNodeId","setLabelRotationForAxes","animDonePromises","axisArr","unitAxis","animationDone","getAxes","initialSettings","regEntry","COMPONENTS","SUBREGISTRIES","regObj","globalCache","defaultRegistry","overrideRegistryDefinitions","overrideRegistry","muze","_transactor2","muze_slicedToArray","env","globalStore","componentSubRegistryDef","settings","withSettings","enableChainedTransaction","transactionModel","transactionEndpoint","transactionItems","_slicedToArray","Smartlabel","SideEffects","standards","Behaviours","pkg","operators","utils","lookupWhat","lookupDetails","lookupTarget","deps"],"mappings":"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","file":"muze.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"muze\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"muze\"] = factory();\n\telse\n\t\troot[\"muze\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DataModel\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DataModel\"] = factory();\n\telse\n\t\troot[\"DataModel\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const DataModel = require('./export');\n\nmodule.exports = DataModel.default ? DataModel.default : DataModel;\n","/**\n * DataFormat Enum defines the format of the input data.\n * Based on the format of the data the respective adapter is loaded.\n *\n * @readonly\n * @enum {string}\n */\nconst DataFormat = {\n    FLAT_JSON: 'FlatJSON',\n    DSV_STR: 'DSVStr',\n    DSV_ARR: 'DSVArr',\n    AUTO: 'Auto'\n};\n\nexport default DataFormat;\n","/**\n * DimensionSubtype enum defines the sub types of the Dimensional Field.\n *\n * @readonly\n * @enum {string}\n */\nconst DimensionSubtype = {\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    GEO: 'geo',\n    BINNED: 'binned'\n};\n\nexport default DimensionSubtype;\n","/**\n * MeasureSubtype enum defines the sub types of the Measure Field.\n *\n * @readonly\n * @enum {string}\n */\nconst MeasureSubtype = {\n    CONTINUOUS: 'continuous'\n};\n\nexport default MeasureSubtype;\n","/**\n * FieldType enum defines the high level field based on which visuals are controlled.\n * Measure in a high level is numeric field and Dimension in a high level is string field.\n *\n * @readonly\n * @enum {string}\n */\nconst FieldType = {\n    MEASURE: 'measure',\n    DIMENSION: 'dimension'\n};\n\nexport default FieldType;\n","/**\n * Filtering mode enum defines the filering modes of DataModel.\n *\n * @readonly\n * @enum {string}\n */\nconst FilteringMode = {\n    NORMAL: 'normal',\n    INVERSE: 'inverse',\n    ALL: 'all'\n};\n\nexport default FilteringMode;\n","/**\n * Creates a JS native date object from input\n *\n * @param {string | number | Date} date Input using which date object to be created\n * @return {Date} : JS native date object\n */\nfunction convertToNativeDate (date) {\n    if (date instanceof Date) {\n        return date;\n    }\n\n    return new Date(date);\n}\n/**\n * Apply padding before a number if its less than 1o. This is used when constant digit's number to be returned\n * between 0 - 99\n *\n * @param {number} n Input to be padded\n * @return {string} Padded number\n */\nfunction pad (n) {\n    return (n < 10) ? (`0${n}`) : n;\n}\n/*\n * DateFormatter utility to convert any date format to any other date format\n * DateFormatter parse a date time stamp specified by a user abiding by rules which are defined\n * by user in terms of token. It creates JS native date object from the user specified format.\n * That native date can also be displayed\n * in any specified format.\n * This utility class only takes care of format conversion only\n */\n\n/*\n * Escapes all the special character that are used in regular expression.\n * Like\n * RegExp.escape('sgfd-$') // Output: sgfd\\-\\$\n *\n * @param text {String} : text which is to be escaped\n */\nRegExp.escape = function (text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * DateTimeFormatter class to convert any user format of date time stamp to any other format\n * of date time stamp.\n *\n * @param {string} format Format of the date given. For the above date,\n * 'year: %Y, month: %b, day: %d'.\n * @class\n */\n/* istanbul ignore next */ function DateTimeFormatter (format) {\n    this.format = format;\n    this.dtParams = undefined;\n    this.nativeDate = undefined;\n}\n\n// The identifier of the tokens\nDateTimeFormatter.TOKEN_PREFIX = '%';\n\n// JS native Date constructor takes the date params (year, month, etc) in a certail sequence.\n// This defines the sequence of the date parameters in the constructor.\nDateTimeFormatter.DATETIME_PARAM_SEQUENCE = {\n    YEAR: 0,\n    MONTH: 1,\n    DAY: 2,\n    HOUR: 3,\n    MINUTE: 4,\n    SECOND: 5,\n    MILLISECOND: 6\n};\n\n/*\n * This is a default number parsing utility. It tries to parse a number in integer, if parsing is unsuccessful, it\n * gives back a default value.\n *\n * @param: defVal {Number} : Default no if the parsing to integer is not successful\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be parsed.\n */\nDateTimeFormatter.defaultNumberParser = function (defVal) {\n    return function (val) {\n        let parsedVal;\n        if (isFinite(parsedVal = parseInt(val, 10))) {\n            return parsedVal;\n        }\n\n        return defVal;\n    };\n};\n\n/*\n * This is a default number range utility. It tries to find an element in the range. If not found it returns a\n * default no as an index.\n *\n * @param: range {Array} : The list which is to be serached\n * @param: defVal {Number} : Default no if the serach and find does not return anything\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be found\n */\nDateTimeFormatter.defaultRangeParser = function (range, defVal) {\n    return (val) => {\n        let i;\n        let l;\n\n        if (!val) { return defVal; }\n\n        const nVal = val.toLowerCase();\n\n        for (i = 0, l = range.length; i < l; i++) {\n            if (range[i].toLowerCase() === nVal) {\n                return i;\n            }\n        }\n\n        if (i === undefined) {\n            return defVal;\n        }\n        return null;\n    };\n};\n\n/*\n * Defines the tokens which are supporter by the dateformatter. Using this definitation a value gets extracted from\n * the user specifed date string. This also formats the value for display purpose from native JS date.\n * The definition of each token contains the following named properties\n * {\n *     %token_name% : {\n *         name: name of the token, this is used in reverse lookup,\n *         extract: a function that returns the regular expression to extract that piece of information. All the\n *                  regex should be gouped by using ()\n *         parser: a function which receives value extracted by the above regex and parse it to get the date params\n *         formatter: a formatter function that takes milliseconds or JS Date object and format the param\n *                  represented by the token only.\n *     }\n * }\n *\n * @return {Object} : Definition of the all the supported tokens.\n */\nDateTimeFormatter.getTokenDefinitions = function () {\n    const daysDef = {\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ],\n        long: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ]\n    };\n    const monthsDef = {\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ],\n        long: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ]\n    };\n\n    const definitions = {\n        H: {\n            // 24 hours format\n            name: 'H',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n\n                return d.getHours().toString();\n            }\n        },\n        l: {\n            // 12 hours format\n            name: 'l',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours() % 12;\n\n                return (hours === 0 ? 12 : hours).toString();\n            }\n        },\n        p: {\n            // AM or PM\n            name: 'p',\n            index: 3,\n            extract () { return '(AM|PM)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'AM' : 'PM');\n            }\n        },\n        P: {\n            // am or pm\n            name: 'P',\n            index: 3,\n            extract () { return '(am|pm)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'am' : 'pm');\n            }\n        },\n        M: {\n            // Two digit minutes 00 - 59\n            name: 'M',\n            index: 4,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const mins = d.getMinutes();\n\n                return pad(mins);\n            }\n        },\n        S: {\n            // Two digit seconds 00 - 59\n            name: 'S',\n            index: 5,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const seconds = d.getSeconds();\n\n                return pad(seconds);\n            }\n        },\n        K: {\n            // Milliseconds\n            name: 'K',\n            index: 6,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const ms = d.getMilliseconds();\n\n                return ms.toString();\n            }\n        },\n        a: {\n            // Short name of day, like Mon\n            name: 'a',\n            index: 2,\n            extract () { return `(${daysDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.short[day]).toString();\n            }\n        },\n        A: {\n            // Long name of day, like Monday\n            name: 'A',\n            index: 2,\n            extract () { return `(${daysDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.long[day]).toString();\n            }\n        },\n        e: {\n            // 8 of March, 11 of November\n            name: 'e',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return day.toString();\n            }\n        },\n        d: {\n            // 08 of March, 11 of November\n            name: 'd',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return pad(day);\n            }\n        },\n        b: {\n            // Short month, like Jan\n            name: 'b',\n            index: 1,\n            extract () { return `(${monthsDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.short[month]).toString();\n            }\n        },\n        B: {\n            // Long month, like January\n            name: 'B',\n            index: 1,\n            extract () { return `(${monthsDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.long[month]).toString();\n            }\n        },\n        m: {\n            // Two digit month of year like 01 for January\n            name: 'm',\n            index: 1,\n            extract () { return '(\\\\d+)'; },\n            parser (val) { return DateTimeFormatter.defaultNumberParser()(val) - 1; },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return pad(month + 1);\n            }\n        },\n        y: {\n            // Short year like 90 for 1990\n            name: 'y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser (val) {\n                if (val) {\n                    const l = val.length;\n                    val = val.substring(l - 2, l);\n                }\n\n                return DateTimeFormatter.defaultNumberParser()(val);\n            },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                let year = d.getFullYear().toString();\n                let l;\n\n                if (year) {\n                    l = year.length;\n                    year = year.substring(l - 2, l);\n                }\n\n                return year;\n            }\n        },\n        Y: {\n            // Long year like 1990\n            name: 'Y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const year = d.getFullYear().toString();\n\n                return year;\n            }\n        }\n    };\n\n    return definitions;\n};\n\n/*\n * The tokens which works internally is not user friendly in terms of memorizing the names. This gives a formal\n * definition to the informal notations.\n *\n * @return {Object} : Formal definition of the tokens\n */\nDateTimeFormatter.getTokenFormalNames = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n\n    return {\n        HOUR: definitions.H,\n        HOUR_12: definitions.l,\n        AMPM_UPPERCASE: definitions.p,\n        AMPM_LOWERCASE: definitions.P,\n        MINUTE: definitions.M,\n        SECOND: definitions.S,\n        SHORT_DAY: definitions.a,\n        LONG_DAY: definitions.A,\n        DAY_OF_MONTH: definitions.e,\n        DAY_OF_MONTH_CONSTANT_WIDTH: definitions.d,\n        SHORT_MONTH: definitions.b,\n        LONG_MONTH: definitions.B,\n        MONTH_OF_YEAR: definitions.m,\n        SHORT_YEAR: definitions.y,\n        LONG_YEAR: definitions.Y\n    };\n};\n\n/*\n * This defines the rules and declares dependencies that resolves a date parameter (year, month etc) from\n * the date time parameter array.\n *\n * @return {Object} : An object that contains dependencies and a resolver function. The dependencies values are fed\n *                  to the resolver function in that particular sequence only.\n */\nDateTimeFormatter.tokenResolver = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const defaultResolver = (...args) => { // eslint-disable-line require-jsdoc\n        let i = 0;\n        let arg;\n        let targetParam;\n        const l = args.length;\n\n        for (; i < l; i++) {\n            arg = args[i];\n            if (args[i]) {\n                targetParam = arg;\n            }\n        }\n\n        if (!targetParam) { return null; }\n\n        return targetParam[0].parser(targetParam[1]);\n    };\n\n    return {\n        YEAR: [definitions.y, definitions.Y,\n            defaultResolver\n        ],\n        MONTH: [definitions.b, definitions.B, definitions.m,\n            defaultResolver\n        ],\n        DAY: [definitions.a, definitions.A, definitions.e, definitions.d,\n            defaultResolver\n        ],\n        HOUR: [definitions.H, definitions.l, definitions.p, definitions.P,\n            function (hourFormat24, hourFormat12, ampmLower, ampmUpper) {\n                let targetParam;\n                let amOrpm;\n                let isPM;\n                let val;\n\n                if (hourFormat12 && (amOrpm = (ampmLower || ampmUpper))) {\n                    if (amOrpm[0].parser(amOrpm[1]) === 'pm') {\n                        isPM = true;\n                    }\n\n                    targetParam = hourFormat12;\n                } else if (hourFormat12) {\n                    targetParam = hourFormat12;\n                } else {\n                    targetParam = hourFormat24;\n                }\n\n                if (!targetParam) { return null; }\n\n                val = targetParam[0].parser(targetParam[1]);\n                if (isPM) {\n                    val += 12;\n                }\n                return val;\n            }\n        ],\n        MINUTE: [definitions.M,\n            defaultResolver\n        ],\n        SECOND: [definitions.S,\n            defaultResolver\n        ]\n    };\n};\n\n/*\n * Finds token from the format rule specified by a user.\n * @param format {String} : The format of the input date specified by the user\n * @return {Array} : An array of objects which contains the available token and their occurence index in the format\n */\nDateTimeFormatter.findTokens = function (format) {\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenLiterals = Object.keys(definitions);\n    const occurrence = [];\n    let i;\n    let forwardChar;\n\n    while ((i = format.indexOf(tokenPrefix, i + 1)) >= 0) {\n        forwardChar = format[i + 1];\n        if (tokenLiterals.indexOf(forwardChar) === -1) { continue; }\n\n        occurrence.push({\n            index: i,\n            token: forwardChar\n        });\n    }\n\n    return occurrence;\n};\n\n/*\n * Format any JS date to a specified date given by user.\n *\n * @param date {Number | Date} : The date object which is to be formatted\n * @param format {String} : The format using which the date will be formatted for display\n */\nDateTimeFormatter.formatAs = function (date, format) {\n    const nDate = convertToNativeDate(date);\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    let formattedStr = String(format);\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    let token;\n    let formattedVal;\n    let i;\n    let l;\n\n    for (i = 0, l = occurrence.length; i < l; i++) {\n        token = occurrence[i].token;\n        formattedVal = definitions[token].formatter(nDate);\n        formattedStr = formattedStr.replace(new RegExp(tokenPrefix + token, 'g'), formattedVal);\n    }\n\n    return formattedStr;\n};\n\n/*\n * Parses the user specified date string to extract the date time params.\n *\n * @return {Array} : Value of date time params in an array [year, month, day, hour, minutes, seconds, milli]\n */\nDateTimeFormatter.prototype.parse = function (dateTimeStamp, options) {\n    const tokenResolver = DateTimeFormatter.tokenResolver();\n    const dtParams = this.extractTokenValue(dateTimeStamp);\n    const dtParamSeq = DateTimeFormatter.DATETIME_PARAM_SEQUENCE;\n    const noBreak = options && options.noBreak;\n    const dtParamArr = [];\n    const args = [];\n    let resolverKey;\n    let resolverParams;\n    let resolverFn;\n    let val;\n    let i;\n    let param;\n    let resolvedVal;\n    let l;\n\n    for (resolverKey in tokenResolver) {\n        if (!{}.hasOwnProperty.call(tokenResolver, resolverKey)) { continue; }\n\n        args.length = 0;\n        resolverParams = tokenResolver[resolverKey];\n        resolverFn = resolverParams.splice(resolverParams.length - 1, 1)[0];\n\n        for (i = 0, l = resolverParams.length; i < l; i++) {\n            param = resolverParams[i];\n            val = dtParams[param.name];\n\n            if (val === undefined) {\n                args.push(null);\n            } else {\n                args.push([param, val]);\n            }\n        }\n\n        resolvedVal = resolverFn.apply(this, args);\n\n        if ((resolvedVal === undefined || resolvedVal === null) && !noBreak) {\n            break;\n        }\n\n        dtParamArr[dtParamSeq[resolverKey]] = resolvedVal;\n    }\n\n    return dtParamArr;\n};\n\n/*\n * Extract the value of the token from user specified date time string.\n *\n * @return {Object} : An key value pair which contains the tokens as key and value as pair\n */\nDateTimeFormatter.prototype.extractTokenValue = function (dateTimeStamp) {\n    const format = this.format;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const tokenObj = {};\n\n    let lastOccurrenceIndex;\n    let occObj;\n    let occIndex;\n    let targetText;\n    let regexFormat;\n\n    let l;\n    let i;\n\n    regexFormat = String(format);\n\n    const tokenArr = occurrence.map(obj => obj.token);\n    const occurrenceLength = occurrence.length;\n    for (i = occurrenceLength - 1; i >= 0; i--) {\n        occIndex = occurrence[i].index;\n\n        if (occIndex + 1 === regexFormat.length - 1) {\n            lastOccurrenceIndex = occIndex;\n            continue;\n        }\n\n        if (lastOccurrenceIndex === undefined) {\n            lastOccurrenceIndex = regexFormat.length;\n        }\n\n        targetText = regexFormat.substring(occIndex + 2, lastOccurrenceIndex);\n        regexFormat = regexFormat.substring(0, occIndex + 2) +\n            RegExp.escape(targetText) +\n            regexFormat.substring(lastOccurrenceIndex, regexFormat.length);\n\n        lastOccurrenceIndex = occIndex;\n    }\n\n    for (i = 0; i < occurrenceLength; i++) {\n        occObj = occurrence[i];\n        regexFormat = regexFormat.replace(tokenPrefix + occObj.token, definitions[occObj.token].extract());\n    }\n\n    const extractValues = dateTimeStamp.match(new RegExp(regexFormat)) || [];\n    extractValues.shift();\n\n    for (i = 0, l = tokenArr.length; i < l; i++) {\n        tokenObj[tokenArr[i]] = extractValues[i];\n    }\n    return tokenObj;\n};\n\n/*\n * Give back the JS native date formed from  user specified date string\n *\n * @return {Date} : Native JS Date\n */\nDateTimeFormatter.prototype.getNativeDate = function (dateTimeStamp) {\n    if (dateTimeStamp instanceof Date) {\n        return dateTimeStamp;\n    } else if (isFinite(dateTimeStamp) && !!this.format) {\n        return new Date(dateTimeStamp);\n    }\n\n    const dtParams = this.dtParams = this.parse(dateTimeStamp);\n\n    dtParams.unshift(null);\n    this.nativeDate = new (Function.prototype.bind.apply(Date, dtParams))();\n    return this.nativeDate;\n};\n\n/*\n * Represents JS native date to a user specified format.\n *\n * @param format {String} : The format according to which the date is to be represented\n * @return {String} : The formatted date string\n */\nDateTimeFormatter.prototype.formatAs = function (format, dateTimeStamp) {\n    let nativeDate;\n\n    if (dateTimeStamp) {\n        nativeDate = this.nativeDate = this.getNativeDate(dateTimeStamp);\n    } else if (!(nativeDate = this.nativeDate)) {\n        nativeDate = this.getNativeDate(dateTimeStamp);\n    }\n\n    return DateTimeFormatter.formatAs(nativeDate, format);\n};\n\nexport { DateTimeFormatter as default };\n","/**\n * The utility function to calculate major column.\n *\n * @param {Object} store - The store object.\n * @return {Function} Returns the push function.\n */\nexport default (store) => {\n    let i = 0;\n    return (...fields) => {\n        fields.forEach((val, fieldIndex) => {\n            if (!(store[fieldIndex] instanceof Array)) {\n                store[fieldIndex] = Array.from({ length: i });\n            }\n            store[fieldIndex].push(val);\n        });\n        i++;\n    };\n};\n","/* eslint-disable */\nconst OBJECTSTRING = 'object';\nconst objectToStrFn = Object.prototype.toString;\nconst objectToStr = '[object Object]';\nconst arrayToStr = '[object Array]';\n\nfunction checkCyclicRef(obj, parentArr) {\n    let i = parentArr.length;\n    let bIndex = -1;\n\n    while (i) {\n        if (obj === parentArr[i]) {\n            bIndex = i;\n            return bIndex;\n        }\n        i -= 1;\n    }\n\n    return bIndex;\n}\n\nfunction merge(obj1, obj2, skipUndef, tgtArr, srcArr) {\n    var item,\n        srcVal,\n        tgtVal,\n        str,\n        cRef;\n    // check whether obj2 is an array\n    // if array then iterate through it's index\n    // **** MOOTOOLS precution\n\n    if (!srcArr) {\n        tgtArr = [obj1];\n        srcArr = [obj2];\n    }\n    else {\n        tgtArr.push(obj1);\n        srcArr.push(obj2);\n    }\n\n    if (obj2 instanceof Array) {\n        for (item = 0; item < obj2.length; item += 1) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (typeof tgtVal !== OBJECTSTRING) {\n                if (!(skipUndef && tgtVal === undefined)) {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                    srcVal = obj1[item] = tgtVal instanceof Array ? [] : {};\n                }\n                cRef = checkCyclicRef(tgtVal, srcArr);\n                if (cRef !== -1) {\n                    srcVal = obj1[item] = tgtArr[cRef];\n                }\n                else {\n                    merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                }\n            }\n        }\n    }\n    else {\n        for (item in obj2) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (tgtVal !== null && typeof tgtVal === OBJECTSTRING) {\n                // Fix for issue BUG: FWXT-602\n                // IE < 9 Object.prototype.toString.call(null) gives\n                // '[object Object]' instead of '[object Null]'\n                // that's why null value becomes Object in IE < 9\n                str = objectToStrFn.call(tgtVal);\n                if (str === objectToStr) {\n                    if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                        srcVal = obj1[item] = {};\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else if (str === arrayToStr) {\n                    if (srcVal === null || !(srcVal instanceof Array)) {\n                        srcVal = obj1[item] = [];\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (skipUndef && tgtVal === undefined) {\n                    continue;\n                }\n                obj1[item] = tgtVal;\n            }\n        }\n    }\n    return obj1;\n}\n\n\nfunction extend2 (obj1, obj2, skipUndef) {\n    //if none of the arguments are object then return back\n    if (typeof obj1 !== OBJECTSTRING && typeof obj2 !== OBJECTSTRING) {\n        return null;\n    }\n\n    if (typeof obj2 !== OBJECTSTRING || obj2 === null) {\n        return obj1;\n    }\n\n    if (typeof obj1 !== OBJECTSTRING) {\n        obj1 = obj2 instanceof Array ? [] : {};\n    }\n    merge(obj1, obj2, skipUndef);\n    return obj1;\n}\n\nexport { extend2 as default };\n","import { DataFormat } from '../enums';\n\n/**\n * Checks whether the value is an array.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an array otherwise returns false.\n */\nexport function isArray (val) {\n    return Array.isArray(val);\n}\n\n/**\n * Checks whether the value is an object.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an object otherwise returns false.\n */\nexport function isObject (val) {\n    return val === Object(val);\n}\n\n/**\n * Checks whether the value is a string value.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is a string value otherwise returns false.\n */\nexport function isString (val) {\n    return typeof val === 'string';\n}\n\n/**\n * Checks whether the value is callable.\n *\n * @param {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is callable otherwise returns false.\n */\nexport function isCallable (val) {\n    return typeof val === 'function';\n}\n\n/**\n * Returns the unique values from the input array.\n *\n * @param {Array} data - The input array.\n * @return {Array} Returns a new array of unique values.\n */\nexport function uniqueValues (data) {\n    return [...new Set(data)];\n}\n\nexport const getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function isArrEqual(arr1, arr2) {\n    if (!isArray(arr1) || !isArray(arr2)) {\n        return arr1 === arr2;\n    }\n\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * It is the default number format function for the measure field type.\n *\n * @param {any} val - The input value.\n * @return {number} Returns a number value.\n */\nexport function formatNumber(val) {\n    return val;\n}\n\n/**\n * Returns the detected data format.\n *\n * @param {any} data - The input data to be tested.\n * @return {string} Returns the data format name.\n */\nexport const detectDataFormat = (data) => {\n    if (isString(data)) {\n        return DataFormat.DSV_STR;\n    } else if (isArray(data) && isArray(data[0])) {\n        return DataFormat.DSV_ARR;\n    } else if (isArray(data) && (data.length === 0 || isObject(data[0]))) {\n        return DataFormat.FLAT_JSON;\n    }\n    return null;\n};\n","import { FieldType } from './enums';\nimport { getUniqueId } from './utils';\n\nconst fieldStore = {\n    data: {},\n\n    createNamespace (fieldArr, name) {\n        const dataId = name || getUniqueId();\n\n        this.data[dataId] = {\n            name: dataId,\n            fields: fieldArr,\n\n            fieldsObj () {\n                let fieldsObj = this._cachedFieldsObj;\n\n                if (!fieldsObj) {\n                    fieldsObj = this._cachedFieldsObj = {};\n                    this.fields.forEach((field) => {\n                        fieldsObj[field.name()] = field;\n                    });\n                }\n                return fieldsObj;\n            },\n            getMeasure () {\n                let measureFields = this._cachedMeasure;\n\n                if (!measureFields) {\n                    measureFields = this._cachedMeasure = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.MEASURE) {\n                            measureFields[field.name()] = field;\n                        }\n                    });\n                }\n                return measureFields;\n            },\n            getDimension () {\n                let dimensionFields = this._cachedDimension;\n\n                if (!this._cachedDimension) {\n                    dimensionFields = this._cachedDimension = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.DIMENSION) {\n                            dimensionFields[field.name()] = field;\n                        }\n                    });\n                }\n                return dimensionFields;\n            },\n        };\n        return this.data[dataId];\n    },\n};\n\nexport default fieldStore;\n","/**\n * The wrapper class on top of the primitive value of a field.\n *\n * @todo Need to have support for StringValue, NumberValue, DateTimeValue\n * and GeoValue. These types should expose predicate API mostly.\n */\nclass Value {\n\n  /**\n   * Creates new Value instance.\n   *\n   * @param {*} val - the primitive value from the field cell.\n   * @param {string | Field} field - The field from which the value belongs.\n   */\n    constructor (val, field) {\n        Object.defineProperty(this, '_value', {\n            enumerable: false,\n            configurable: false,\n            writable: false,\n            value: val\n        });\n\n        this.field = field;\n    }\n\n  /**\n   * Returns the field value.\n   *\n   * @return {*} Returns the current value.\n   */\n    get value () {\n        return this._value;\n    }\n\n  /**\n   * Converts to human readable string.\n   *\n   * @override\n   * @return {string} Returns a human readable string of the field value.\n   *\n   */\n    toString () {\n        return String(this.value);\n    }\n\n  /**\n   * Returns the value of the field.\n   *\n   * @override\n   * @return {*} Returns the field value.\n   */\n    valueOf () {\n        return this.value;\n    }\n}\n\nexport default Value;\n","/**\n * Iterates through the diffSet array and call the callback with the current\n * index.\n *\n * @param {string} rowDiffset - The row diffset string e.g. '0-4,6,10-13'.\n * @param {Function} callback - The callback function to be called with every index.\n */\nexport function rowDiffsetIterator (rowDiffset, callback) {\n    if (rowDiffset.length > 0) {\n        const rowDiffArr = rowDiffset.split(',');\n        rowDiffArr.forEach((diffStr) => {\n            const diffStsArr = diffStr.split('-');\n            const start = +(diffStsArr[0]);\n            const end = +(diffStsArr[1] || diffStsArr[0]);\n            if (end >= start) {\n                for (let i = start; i <= end; i += 1) {\n                    callback(i);\n                }\n            }\n        });\n    }\n}\n","/**\n * The helper function that returns an array of common schema\n * from two fieldStore instances.\n *\n * @param {FieldStore} fs1 - The first FieldStore instance.\n * @param {FieldStore} fs2 - The second FieldStore instance.\n * @return {Array} An array containing the common schema.\n */\nexport function getCommonSchema (fs1, fs2) {\n    const retArr = [];\n    const fs1Arr = [];\n    fs1.fields.forEach((field) => {\n        fs1Arr.push(field.schema().name);\n    });\n    fs2.fields.forEach((field) => {\n        if (fs1Arr.indexOf(field.schema().name) !== -1) {\n            retArr.push(field.schema().name);\n        }\n    });\n    return retArr;\n}\n","export { DataFormat, FilteringMode } from '../enums';\n/**\n * The event name for data propagation.\n */\nexport const PROPAGATION = 'propagation';\n\n/**\n * The name of the unique row id column in DataModel.\n */\nexport const ROW_ID = '__id__';\n\n/**\n * The enums for operation names performed on DataModel.\n */\nexport const DM_DERIVATIVES = {\n    SELECT: 'select',\n    PROJECT: 'project',\n    GROUPBY: 'group',\n    COMPOSE: 'compose',\n    CAL_VAR: 'calculatedVariable',\n    BIN: 'bin'\n};\n\nexport const JOINS = {\n    CROSS: 'cross',\n    LEFTOUTER: 'leftOuter',\n    RIGHTOUTER: 'rightOuter',\n    NATURAL: 'natural',\n    FULLOUTER: 'fullOuter'\n};\n\nexport const LOGICAL_OPERATORS = {\n    AND: 'and',\n    OR: 'or'\n};\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { getCommonSchema } from './get-common-schema';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { JOINS } from '../constants';\nimport { prepareJoinData } from '../helper';\n/**\n * Default filter function for crossProduct.\n *\n * @return {boolean} Always returns true.\n */\nfunction defaultFilterFn() { return true; }\n\n/**\n * Implementation of cross product operation between two DataModel instances.\n * It internally creates the data and schema for the new DataModel.\n *\n * @param {DataModel} dataModel1 - The left DataModel instance.\n * @param {DataModel} dataModel2 - The right DataModel instance.\n * @param {Function} filterFn - The filter function which is used to filter the tuples.\n * @param {boolean} [replaceCommonSchema=false] - The flag if the common name schema should be there.\n * @return {DataModel} Returns The newly created DataModel instance from the crossProduct operation.\n */\nexport function crossProduct (dm1, dm2, filterFn, replaceCommonSchema = false, jointype = JOINS.CROSS) {\n    const schema = [];\n    const data = [];\n    const applicableFilterFn = filterFn || defaultFilterFn;\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreName = dm1FieldStore.name;\n    const dm2FieldStoreName = dm2FieldStore.name;\n    const name = `${dm1FieldStore.name}.${dm2FieldStore.name}`;\n    const commonSchemaList = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    if (dm1FieldStoreName === dm2FieldStoreName) {\n        throw new Error('DataModels must have different alias names');\n    }\n    // Here prepare the schema\n    dm1FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1 && !replaceCommonSchema) {\n            tmpSchema.name = `${dm1FieldStore.name}.${tmpSchema.name}`;\n        }\n        schema.push(tmpSchema);\n    });\n    dm2FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1) {\n            if (!replaceCommonSchema) {\n                tmpSchema.name = `${dm2FieldStore.name}.${tmpSchema.name}`;\n                schema.push(tmpSchema);\n            }\n        } else {\n            schema.push(tmpSchema);\n        }\n    });\n\n    // Here prepare Data\n    rowDiffsetIterator(dm1._rowDiffset, (i) => {\n        let rowAdded = false;\n        let rowPosition;\n        rowDiffsetIterator(dm2._rowDiffset, (ii) => {\n            const tuple = [];\n            const userArg = {};\n            userArg[dm1FieldStoreName] = {};\n            userArg[dm2FieldStoreName] = {};\n            dm1FieldStore.fields.forEach((field) => {\n                tuple.push(field.partialField.data[i]);\n                userArg[dm1FieldStoreName][field.name()] = field.partialField.data[i];\n            });\n            dm2FieldStore.fields.forEach((field) => {\n                if (!(commonSchemaList.indexOf(field.schema().name) !== -1 && replaceCommonSchema)) {\n                    tuple.push(field.partialField.data[ii]);\n                }\n                userArg[dm2FieldStoreName][field.name()] = field.partialField.data[ii];\n            });\n\n            let cachedStore = {};\n            let cloneProvider1 = () => dm1.detachedRoot();\n            let cloneProvider2 = () => dm2.detachedRoot();\n\n            const dm1Fields = prepareJoinData(userArg[dm1FieldStoreName]);\n            const dm2Fields = prepareJoinData(userArg[dm2FieldStoreName]);\n            if (applicableFilterFn(dm1Fields, dm2Fields, cloneProvider1, cloneProvider2, cachedStore)) {\n                const tupleObj = {};\n                tuple.forEach((cellVal, iii) => {\n                    tupleObj[schema[iii].name] = cellVal;\n                });\n                if (rowAdded && JOINS.CROSS !== jointype) {\n                    data[rowPosition] = tupleObj;\n                }\n                else {\n                    data.push(tupleObj);\n                    rowAdded = true;\n                    rowPosition = i;\n                }\n            } else if ((jointype === JOINS.LEFTOUTER || jointype === JOINS.RIGHTOUTER) && !rowAdded) {\n                const tupleObj = {};\n                let len = dm1FieldStore.fields.length - 1;\n                tuple.forEach((cellVal, iii) => {\n                    if (iii <= len) {\n                        tupleObj[schema[iii].name] = cellVal;\n                    }\n                    else {\n                        tupleObj[schema[iii].name] = null;\n                    }\n                });\n                rowAdded = true;\n                rowPosition = i;\n                data.push(tupleObj);\n            }\n        });\n    });\n\n    return new DataModel(data, schema, { name });\n}\n","/**\n * The default sort function.\n *\n * @param {*} a - The first value.\n * @param {*} b - The second value.\n * @return {number} Returns the comparison result e.g. 1 or 0 or -1.\n */\nfunction defSortFn (a, b) {\n    const a1 = `${a}`;\n    const b1 = `${b}`;\n    if (a1 < b1) {\n        return -1;\n    }\n    if (a1 > b1) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * The helper function for merge sort which creates the sorted array\n * from the two halves of the input array.\n *\n * @param {Array} arr - The target array which needs to be merged.\n * @param {number} lo - The starting index of the first array half.\n * @param {number} mid - The ending index of the first array half.\n * @param {number} hi - The ending index of the second array half.\n * @param {Function} sortFn - The sort function.\n */\nfunction merge (arr, lo, mid, hi, sortFn) {\n    const mainArr = arr;\n    const auxArr = [];\n    for (let i = lo; i <= hi; i += 1) {\n        auxArr[i] = mainArr[i];\n    }\n    let a = lo;\n    let b = mid + 1;\n\n    for (let i = lo; i <= hi; i += 1) {\n        if (a > mid) {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        } else if (b > hi) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else if (sortFn(auxArr[a], auxArr[b]) <= 0) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        }\n    }\n}\n\n/**\n * The helper function for merge sort which would be called\n * recursively for sorting the array halves.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {number} lo - The starting index of the array half.\n * @param {number} hi - The ending index of the array half.\n * @param {Function} sortFn - The sort function.\n * @return {Array} Returns the target array itself.\n */\nfunction sort (arr, lo, hi, sortFn) {\n    if (hi === lo) { return arr; }\n\n    const mid = lo + Math.floor((hi - lo) / 2);\n    sort(arr, lo, mid, sortFn);\n    sort(arr, mid + 1, hi, sortFn);\n    merge(arr, lo, mid, hi, sortFn);\n\n    return arr;\n}\n\n/**\n * The implementation of merge sort.\n * It is used in DataModel for stable sorting as it is not sure\n * what the sorting algorithm used by browsers is stable or not.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {Function} [sortFn=defSortFn] - The sort function.\n * @return {Array} Returns the input array itself in sorted order.\n */\nexport function mergeSort (arr, sortFn = defSortFn) {\n    if (arr.length > 1) {\n        sort(arr, 0, arr.length - 1, sortFn);\n    }\n    return arr;\n}\n","import { DimensionSubtype, MeasureSubtype } from '../enums';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { mergeSort } from './merge-sort';\nimport { fieldInSchema } from '../helper';\nimport { isCallable, isArray, } from '../utils';\n/**\n * Generates the sorting functions to sort the data of a DataModel instance\n * according to the input data type.\n *\n * @param {string} dataType - The data type e.g. 'measure', 'datetime' etc.\n * @param {string} sortType - The sorting order i.e. 'asc' or 'desc'.\n * @param {integer} index - The index of the data which will be sorted.\n * @return {Function} Returns the the sorting function.\n */\nfunction getSortFn (dataType, sortType, index) {\n    let retFunc;\n    switch (dataType) {\n    case MeasureSubtype.CONTINUOUS:\n    case DimensionSubtype.TEMPORAL:\n        if (sortType === 'desc') {\n            retFunc = (a, b) => b[index] - a[index];\n        } else {\n            retFunc = (a, b) => a[index] - b[index];\n        }\n        break;\n    default:\n        retFunc = (a, b) => {\n            const a1 = `${a[index]}`;\n            const b1 = `${b[index]}`;\n            if (a1 < b1) {\n                return sortType === 'desc' ? 1 : -1;\n            }\n            if (a1 > b1) {\n                return sortType === 'desc' ? -1 : 1;\n            }\n            return 0;\n        };\n    }\n    return retFunc;\n}\n\n/**\n * Groups the data according to the specified target field.\n *\n * @param {Array} data - The input data array.\n * @param {number} fieldIndex - The target field index within schema array.\n * @return {Array} Returns an array containing the grouped data.\n */\nfunction groupData(data, fieldIndex) {\n    const hashMap = new Map();\n    const groupedData = [];\n\n    data.forEach((datum) => {\n        const fieldVal = datum[fieldIndex];\n        if (hashMap.has(fieldVal)) {\n            groupedData[hashMap.get(fieldVal)][1].push(datum);\n        } else {\n            groupedData.push([fieldVal, [datum]]);\n            hashMap.set(fieldVal, groupedData.length - 1);\n        }\n    });\n\n    return groupedData;\n}\n\n/**\n * Creates the argument value used for sorting function when sort is done\n * with another fields.\n *\n * @param {Array} groupedDatum - The grouped datum for a single dimension field value.\n * @param {Array} targetFields - An array of the sorting fields.\n * @param {Array} targetFieldDetails - An array of the sorting field details in schema.\n * @return {Object} Returns an object containing the value of sorting fields and the target field name.\n */\nfunction createSortingFnArg(groupedDatum, targetFields, targetFieldDetails) {\n    const arg = {\n        label: groupedDatum[0]\n    };\n\n    targetFields.reduce((acc, next, idx) => {\n        acc[next] = groupedDatum[1].map(datum => datum[targetFieldDetails[idx].index]);\n        return acc;\n    }, arg);\n\n    return arg;\n}\n\n/**\n * Sorts the data before return in dataBuilder.\n *\n * @param {Object} dataObj - An object containing the data and schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nfunction sortData(dataObj, sortingDetails) {\n    const { data, schema } = dataObj;\n    let fieldName;\n    let sortMeta;\n    let fDetails;\n    let i = sortingDetails.length - 1;\n\n    for (; i >= 0; i--) {\n        fieldName = sortingDetails[i][0];\n        sortMeta = sortingDetails[i][1];\n        fDetails = fieldInSchema(schema, fieldName);\n\n        if (!fDetails) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        if (isCallable(sortMeta)) {\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortMeta(a[fDetails.index], b[fDetails.index]));\n        } else if (isArray(sortMeta)) {\n            const groupedData = groupData(data, fDetails.index);\n            const sortingFn = sortMeta[sortMeta.length - 1];\n            const targetFields = sortMeta.slice(0, sortMeta.length - 1);\n            const targetFieldDetails = targetFields.map(f => fieldInSchema(schema, f));\n\n            groupedData.forEach((groupedDatum) => {\n                groupedDatum.push(createSortingFnArg(groupedDatum, targetFields, targetFieldDetails));\n            });\n\n            mergeSort(groupedData, (a, b) => {\n                const m = a[2];\n                const n = b[2];\n                return sortingFn(m, n);\n            });\n\n            // Empty the array\n            data.length = 0;\n            groupedData.forEach((datum) => {\n                data.push(...datum[1]);\n            });\n        } else {\n            sortMeta = String(sortMeta).toLowerCase() === 'desc' ? 'desc' : 'asc';\n            mergeSort(data, getSortFn(fDetails.type, sortMeta, fDetails.index));\n        }\n    }\n\n    dataObj.uids = [];\n    data.forEach((value) => {\n        dataObj.uids.push(value.pop());\n    });\n}\n\n\n/**\n * Builds the actual data array.\n *\n * @param {Array} fieldStore - An array of field.\n * @param {string} rowDiffset - A string consisting of which rows to be included eg. '0-2,4,6';\n * @param {string} colIdentifier - A string consisting of the details of which column\n * to be included eg 'date,sales,profit';\n * @param {Object} sortingDetails - An object containing the sorting details of the DataModel instance.\n * @param {Object} options - The options required to create the type of the data.\n * @return {Object} Returns an object containing the multidimensional array and the relative schema.\n */\nexport function dataBuilder (fieldStore, rowDiffset, colIdentifier, sortingDetails, options) {\n    const defOptions = {\n        addUid: false,\n        columnWise: false\n    };\n    options = Object.assign({}, defOptions, options);\n\n    const retObj = {\n        schema: [],\n        data: [],\n        uids: []\n    };\n    const addUid = options.addUid;\n    const reqSorting = sortingDetails && sortingDetails.length > 0;\n    // It stores the fields according to the colIdentifier argument\n    const tmpDataArr = [];\n    // Stores the fields according to the colIdentifier argument\n    const colIArr = colIdentifier.split(',');\n\n    colIArr.forEach((colName) => {\n        for (let i = 0; i < fieldStore.length; i += 1) {\n            if (fieldStore[i].name() === colName) {\n                tmpDataArr.push(fieldStore[i]);\n                break;\n            }\n        }\n    });\n\n    // Inserts the schema to the schema object\n    tmpDataArr.forEach((field) => {\n        /** @todo Need to use extend2 here otherwise user can overwrite the schema. */\n        retObj.schema.push(field.schema());\n    });\n\n    if (addUid) {\n        retObj.schema.push({\n            name: 'uid',\n            type: 'identifier'\n        });\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        retObj.data.push([]);\n        const insertInd = retObj.data.length - 1;\n        let start = 0;\n        tmpDataArr.forEach((field, ii) => {\n            retObj.data[insertInd][ii + start] = field.partialField.data[i];\n        });\n        if (addUid) {\n            retObj.data[insertInd][tmpDataArr.length] = i;\n        }\n        // Creates an array of unique identifiers for each row\n        retObj.uids.push(i);\n\n        // If sorting needed then there is the need to expose the index\n        // mapping from the old index to its new index\n        if (reqSorting) { retObj.data[insertInd].push(i); }\n    });\n\n    // Handles the sort functionality\n    if (reqSorting) {\n        sortData(retObj, sortingDetails);\n    }\n\n    if (options.columnWise) {\n        const tmpData = Array(...Array(retObj.schema.length)).map(() => []);\n        retObj.data.forEach((tuple) => {\n            tuple.forEach((data, i) => {\n                tmpData[i].push(data);\n            });\n        });\n        retObj.data = tmpData;\n    }\n\n    return retObj;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n\n/**\n * Performs the union operation between two dm instances.\n *\n * @todo Fix the conflicts between union and difference terminology here.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function difference (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n   // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     * @param {boolean} addData - If true only tuple will be added to the data.\n     */\n    function prepareDataHelper(dm, fieldsObj, addData) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                if (addData) { data.push(tuple); }\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj, false);\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj, true);\n\n    return new DataModel(data, schema, { name });\n}\n\n","import { isArray } from '../utils';\n\n/**\n * Reducer function that returns the sum of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the sum of the array.\n */\nfunction sum (arr) {\n    if (isArray(arr)) {\n        const totalSum = arr.reduce((acc, curr) =>\n            ((curr === null || curr === undefined) ? acc : acc + +curr)\n        , null);\n\n        return Number.isNaN(totalSum) ? null : totalSum;\n    }\n    return null;\n}\n\n/**\n * Reducer function that returns the average of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the mean value of the array.\n */\nfunction avg (arr) {\n    if (isArray(arr)) {\n        const totalSum = sum(arr);\n        const len = arr.length || 1;\n        return (Number.isNaN(totalSum) || totalSum === null) ? null : totalSum / len;\n    }\n    return null;\n}\n\n/**\n * Reducer function that gives the min value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the minimum value of the array.\n */\nfunction min (arr) {\n    if (isArray(arr)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = arr.filter(num =>\n            !(num === undefined || num === null || Number.isNaN(+num)));\n\n        return (filteredValues.length) ? Math.min(...filteredValues) : null;\n    }\n    return null;\n}\n\n/**\n * Reducer function that gives the max value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the maximum value of the array.\n */\nfunction max (arr) {\n    if (isArray(arr)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = arr.filter(num =>\n            !(num === undefined || num === null || Number.isNaN(+num)));\n\n        return (filteredValues.length) ? Math.max(...filteredValues) : null;\n    }\n    return null;\n}\n\n/**\n * Reducer function that gives the first value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the first value of the array.\n */\nfunction first (arr) {\n    return arr[0];\n}\n\n/**\n * Reducer function that gives the last value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the last value of the array.\n */\nfunction last (arr) {\n    return arr[arr.length - 1];\n}\n\n/**\n * Reducer function that gives the count value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the length of the array.\n */\nfunction count (arr) {\n    if (isArray(arr)) {\n        return arr.length;\n    }\n    return null;\n}\n\n/**\n * Calculates the variance of the input array.\n *\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the variance of the input array.\n */\nfunction variance (arr) {\n    let mean = avg(arr);\n    return avg(arr.map(num => (num - mean) ** 2));\n}\n\n/**\n * Calculates the square root of the variance of the input array.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the square root of the variance.\n */\nfunction std (arr) {\n    return Math.sqrt(variance(arr));\n}\n\n\nconst fnList = {\n    sum,\n    avg,\n    min,\n    max,\n    first,\n    last,\n    count,\n    std\n};\n\nconst defaultReducerName = 'sum';\n\nexport {\n    defaultReducerName,\n    sum as defReducer,\n    fnList,\n};\n","import { defReducer, fnList } from '../operator';\n\n/**\n * A page level storage which stores, registers, unregisters reducers for all the datamodel instances. There is only one\n * reducer store available in a page. All the datamodel instances receive same instance of reducer store. DataModel\n * out of the box provides handful of {@link reducer | reducers} which can be used as reducer funciton.\n *\n * @public\n * @namespace DataModel\n */\nclass ReducerStore {\n    constructor () {\n        this.store = new Map();\n        this.store.set('defReducer', defReducer);\n\n        Object.entries(fnList).forEach((key) => {\n            this.store.set(key[0], key[1]);\n        });\n    }\n\n    /**\n     * Changes the `defaultReducer` globally. For all the fields which does not have `defAggFn` mentioned in schema, the\n     * value of `defaultReducer` is used for aggregation.\n     *\n     * @public\n     * @param {string} [reducer='sum'] - The name of the default reducer. It picks up the definition from store by doing\n     * name lookup. If no name is found then it takes `sum` as the default reducer.\n     * @return {ReducerStore} Returns instance of the singleton store in page.\n     */\n    defaultReducer (...params) {\n        if (!params.length) {\n            return this.store.get('defReducer');\n        }\n\n        let reducer = params[0];\n\n        if (typeof reducer === 'function') {\n            this.store.set('defReducer', reducer);\n        } else {\n            reducer = String(reducer);\n            if (Object.keys(fnList).indexOf(reducer) !== -1) {\n                this.store.set('defReducer', fnList[reducer]);\n            } else {\n                throw new Error(`Reducer ${reducer} not found in registry`);\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     * Registers a {@link reducer | reducer}.\n     * A {@link reducer | reducer} has to be registered before it is used.\n     *\n     * @example\n     *  // find the mean squared value of a given set\n     *  const reducerStore = DataModel.Reducers();\n     *\n     *  reducers.register('meanSquared', (arr) => {\n     *      const squaredVal = arr.map(item => item * item);\n     *      let sum = 0;\n     *      for (let i = 0, l = squaredVal.length; i < l; i++) {\n     *          sum += squaredVal[i++];\n     *      }\n     *\n     *      return sum;\n     *  })\n     *\n     *  // datamodel (dm) is already prepared with cars.json\n     *  const dm1 = dm.groupBy(['origin'], {\n     *      accleration: 'meanSquared'\n     *  });\n     *\n     * @public\n     *\n     * @param {string} name formal name for a reducer. If the given name already exists in store it is overridden by new\n     *      definition.\n     * @param {Function} reducer definition of {@link reducer} function.\n     *\n     * @return {Function} function for unregistering the reducer.\n     */\n    register (name, reducer) {\n        if (typeof reducer !== 'function') {\n            throw new Error('Reducer should be a function');\n        }\n\n        name = String(name);\n        this.store.set(name, reducer);\n\n        return () => { this.__unregister(name); };\n    }\n\n    __unregister (name) {\n        if (this.store.has(name)) {\n            this.store.delete(name);\n        }\n    }\n\n    resolve (name) {\n        if (name instanceof Function) {\n            return name;\n        }\n        return this.store.get(name);\n    }\n}\n\nconst reducerStore = (function () {\n    let store = null;\n\n    function getStore () {\n        if (store === null) {\n            store = new ReducerStore();\n        }\n        return store;\n    }\n    return getStore();\n}());\n\nexport default reducerStore;\n","import { getCommonSchema } from './get-common-schema';\n\n/**\n * The filter function used in natural join.\n * It generates a function that will have the logic to join two\n * DataModel instances by the process of natural join.\n *\n * @param {DataModel} dm1 - The left DataModel instance.\n * @param {DataModel} dm2 - The right DataModel instance.\n * @return {Function} Returns a function that is used in cross-product operation.\n */\nexport function naturalJoinFilter (dm1, dm2) {\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    // const dm1FieldStoreName = dm1FieldStore.name;\n    // const dm2FieldStoreName = dm2FieldStore.name;\n    const commonSchemaArr = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    return (dm1Fields, dm2Fields) => {\n        let retainTuple = true;\n        commonSchemaArr.forEach((fieldName) => {\n            if (dm1Fields[fieldName].value ===\n                dm2Fields[fieldName].value && retainTuple) {\n                retainTuple = true;\n            } else {\n                retainTuple = false;\n            }\n        });\n        return retainTuple;\n    };\n}\n","import DataModel from '../export';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n/**\n * Performs the union operation between two dm instances.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function union (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n    // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     */\n    function prepareDataHelper (dm, fieldsObj) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                data.push(tuple);\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj);\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj);\n\n    return new DataModel(data, schema, { name });\n}\n","import { crossProduct } from './cross-product';\nimport { JOINS } from '../constants';\nimport { union } from './union';\n\n\nexport function leftOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel1, dataModel2, filterFn, false, JOINS.LEFTOUTER);\n}\n\nexport function rightOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel2, dataModel1, filterFn, false, JOINS.RIGHTOUTER);\n}\n\nexport function fullOuterJoin (dataModel1, dataModel2, filterFn) {\n    return union(leftOuterJoin(dataModel1, dataModel2, filterFn), rightOuterJoin(dataModel1, dataModel2, filterFn));\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\n\n/**\n * In {@link DataModel}, every tabular data consists of column, a column is stored as field.\n * Field contains all the data for a given column in an array.\n *\n * Each record consists of several fields; the fields of all records form the columns.\n * Examples of fields: name, gender, sex etc.\n *\n * In DataModel, each field can have multiple attributes which describes its data and behaviour.\n * A field can have two types of data: Measure and Dimension.\n *\n * A Dimension Field is the context on which a data is categorized and the measure is the numerical values that\n * quantify the data set.\n * In short a dimension is the lens through which you are looking at your measure data.\n *\n * Refer to {@link Schema} to get info about possible field attributes.\n *\n * @public\n * @class\n */\nexport default class Field {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        this.partialField = partialField;\n        this.rowDiffset = rowDiffset;\n    }\n\n    /**\n     * Generates the field type specific domain.\n     *\n     * @public\n     * @abstract\n     */\n    domain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the the field schema.\n     *\n     * @public\n     * @return {string} Returns the field schema.\n     */\n    schema () {\n        return this.partialField.schema;\n    }\n\n    /**\n     * Returns the name of the field.\n     *\n     * @public\n     * @return {string} Returns the name of the field.\n     */\n    name () {\n        return this.partialField.name;\n    }\n\n    /**\n     * Returns the type of the field.\n     *\n     * @public\n     * @return {string} Returns the type of the field.\n     */\n    type () {\n        return this.partialField.schema.type;\n    }\n\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return this.partialField.schema.subtype;\n    }\n\n    /**\n     * Returns the description of the field.\n     *\n     * @public\n     * @return {string} Returns the description of the field.\n     */\n    description () {\n        return this.partialField.schema.description;\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @public\n     * @return {string} Returns the display name of the field.\n     */\n    displayName () {\n        return this.partialField.schema.displayName || this.partialField.schema.name;\n    }\n\n    /**\n     * Returns the data associated with the field.\n     *\n     * @public\n     * @return {Array} Returns the data.\n     */\n    data () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            data.push(this.partialField.data[i]);\n        });\n        return data;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @abstract\n     */\n    formattedData () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import Field from '../field';\n\n/**\n * Represents dimension field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Dimension extends Field {\n    /**\n     * Returns the domain for the dimension field.\n     *\n     * @override\n     * @public\n     * @return {any} Returns the calculated domain.\n     */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @abstract\n     */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n     /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { DimensionSubtype } from '../../enums';\nimport Dimension from '../dimension';\n\n/**\n * Represents categorical field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Categorical extends Dimension {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return DimensionSubtype.CATEGORICAL;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum === null) {\n                return;\n            }\n\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n        return domain;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport Dimension from '../dimension';\nimport { DateTimeFormatter } from '../../utils';\n\n/**\n * Represents temporal field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Temporal extends Dimension {\n     /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        super(partialField, rowDiffset);\n\n        this._cachedMinDiff = null;\n    }\n\n     /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be\n        // occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum === null) {\n                return;\n            }\n\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n\n        return domain;\n    }\n\n\n    /**\n     * Calculates the minimum consecutive difference from the associated field data.\n     *\n     * @public\n     * @return {number} Returns the minimum consecutive diff in milliseconds.\n     */\n    minimumConsecutiveDifference () {\n        if (this._cachedMinDiff) {\n            return this._cachedMinDiff;\n        }\n\n        const sortedData = this.data().sort((a, b) => a - b);\n        const arrLn = sortedData.length;\n        let minDiff = Number.POSITIVE_INFINITY;\n        let prevDatum;\n        let nextDatum;\n        let processedCount = 0;\n\n        for (let i = 1; i < arrLn; i++) {\n            prevDatum = sortedData[i - 1];\n            nextDatum = sortedData[i];\n\n            if (nextDatum === prevDatum) {\n                continue;\n            }\n\n            minDiff = Math.min(minDiff, nextDatum - sortedData[i - 1]);\n            processedCount++;\n        }\n\n        if (!processedCount) {\n            minDiff = null;\n        }\n        this._cachedMinDiff = minDiff;\n\n        return this._cachedMinDiff;\n    }\n\n    /**\n     * Returns the format specified in the input schema while creating field.\n     *\n     * @public\n     * @return {string} Returns the datetime format.\n     */\n    format () {\n        return this.partialField.schema.format;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum === null) {\n                data.push(null);\n            } else {\n                data.push(DateTimeFormatter.formatAs(datum, this.format()));\n            }\n        });\n        return data;\n    }\n}\n\n","import Dimension from '../dimension';\n\n/**\n * Represents binned field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Binned extends Dimension {\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the last and first values of bins config array.\n     */\n    calculateDataDomain () {\n        const binsArr = this.partialField.schema.bins;\n        return [binsArr[0], binsArr[binsArr.length - 1]];\n    }\n\n    /**\n     * Returns the bins config provided while creating the field instance.\n     *\n     * @public\n     * @return {Array} Returns the bins array config.\n     */\n    bins () {\n        return this.partialField.schema.bins;\n    }\n}\n","import { formatNumber } from '../../utils';\nimport { defaultReducerName } from '../../operator/group-by-function';\nimport Field from '../field';\n\n/**\n * Represents measure field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Measure extends Field {\n  /**\n   * Returns the domain for the measure field.\n   *\n   * @override\n   * @public\n   * @return {any} Returns the calculated domain.\n   */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n  /**\n   * Returns the unit of the measure field.\n   *\n   * @public\n   * @return {string} Returns unit of the field.\n   */\n    unit () {\n        return this.partialField.schema.unit;\n    }\n\n  /**\n   * Returns the aggregation function name of the measure field.\n   *\n   * @public\n   * @return {string} Returns aggregation function name of the field.\n   */\n    defAggFn () {\n        return this.partialField.schema.defAggFn || defaultReducerName;\n    }\n\n  /**\n   * Returns the number format of the measure field.\n   *\n   * @public\n   * @return {Function} Returns number format of the field.\n   */\n    numberFormat () {\n        const { numberFormat } = this.partialField.schema;\n        return numberFormat instanceof Function ? numberFormat : formatNumber;\n    }\n\n  /**\n   * Calculates the corresponding field domain.\n   *\n   * @public\n   * @abstract\n   */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { MeasureSubtype } from '../../enums';\nimport Measure from '../measure';\n\n/**\n * Represents continuous field subtype.\n *\n * @public\n * @class\n * @extends Measure\n */\nexport default class Continuous extends Measure {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return MeasureSubtype.CONTINUOUS;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the min and max values.\n     */\n    calculateDataDomain () {\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum === null) {\n                return;\n            }\n\n            if (datum < min) {\n                min = datum;\n            }\n            if (datum > max) {\n                max = datum;\n            }\n        });\n\n        return [min, max];\n    }\n}\n","/**\n * A interface to represent a parser which is responsible to parse the field.\n *\n * @public\n * @interface\n */\nexport default class FieldParser {\n    /**\n     * Parses a single value of a field and return the sanitized form.\n     *\n     * @public\n     * @abstract\n     */\n    parse () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import FieldParser from '../field-parser';\n\n/**\n * A FieldParser which parses the categorical values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class CategoricalParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the stringified form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the stringified value.\n   */\n    parse (val) {\n        return (val === undefined || val === null) ? null : String(val).trim();\n    }\n}\n","import { DateTimeFormatter } from '../../../utils';\nimport FieldParser from '../field-parser';\n\n/**\n * A FieldParser which parses the temporal values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class TemporalParser extends FieldParser {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {Object} schema - The schema object for the corresponding field.\n     */\n    constructor (schema) {\n        super();\n        this.schema = schema;\n        this._dtf = null;\n    }\n\n    /**\n     * Parses a single value of a field and returns the millisecond value.\n     *\n     * @public\n     * @param {string|number} val - The value of the field.\n     * @return {number} Returns the millisecond value.\n     */\n    parse (val) {\n        if (val === null || val === undefined) {\n            return null;\n        }\n\n        if (this.schema.format) {\n            this._dtf = this._dtf || new DateTimeFormatter(this.schema.format);\n            return this._dtf.getNativeDate(val).getTime();\n        }\n\n        // If format is not present which means the value is such that\n        // it could be directly passed to Date constructor.\n        return +new Date(val);\n    }\n}\n","import FieldParser from '../field-parser';\n\n/**\n * A FieldParser which parses the binned values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class BinnedParser extends FieldParser {\n  /**\n   * Parses a single binned value of a field and returns the sanitized value.\n   *\n   * @public\n   * @param {string} val - The value of the field.\n   * @return {string} Returns the sanitized value.\n   */\n    parse (val) {\n        if (val === null || val === undefined) {\n            return null;\n        }\n\n        const regex = /^\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*-\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*$/;\n        val = String(val);\n\n        const matched = val.match(regex);\n        if (!matched) {\n            return null;\n        }\n\n        return `${Number.parseFloat(matched[1])}-${Number.parseFloat(matched[2])}`;\n    }\n}\n","import FieldParser from '../field-parser';\n\n/**\n * A FieldParser which parses the continuous values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class ContinuousParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the number form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the number value.\n   */\n    parse (val) {\n        val = parseFloat(val, 10);\n        return Number.isNaN(val) ? null : val;\n    }\n}\n","/**\n * Stores the full data and the metadata of a field. It provides\n * a single source of data from which the future Field\n * instance can get a subset of it with a rowDiffset config.\n *\n * @class\n * @public\n */\nexport default class PartialField {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} name - The name of the field.\n     * @param {Array} data - The data array.\n     * @param {Object} schema - The schema object of the corresponding field.\n     * @param {FieldParser} parser - The parser instance corresponding to that field.\n     */\n    constructor (name, data, schema, parser) {\n        this.name = name;\n        this.schema = schema;\n        this.parser = parser;\n        this.data = this._sanitize(data);\n    }\n\n    /**\n     * Sanitizes the field data.\n     *\n     * @private\n     * @param {Array} data - The actual input data.\n     * @return {Array} Returns the sanitized data.\n     */\n    _sanitize (data) {\n        return data.map(datum => this.parser.parse(datum));\n    }\n}\n","import { FieldType, DimensionSubtype, MeasureSubtype } from './enums';\nimport {\n    Categorical,\n    Temporal,\n    Binned,\n    Continuous,\n    CategoricalParser,\n    TemporalParser,\n    BinnedParser,\n    ContinuousParser,\n    PartialField\n} from './fields';\n\n/**\n * Creates a field instance according to the provided data and schema.\n *\n * @param {Array} data - The field data array.\n * @param {Object} schema - The field schema object.\n * @return {Field} Returns the newly created field instance.\n */\nfunction createUnitField(data, schema) {\n    data = data || [];\n    let partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.TEMPORAL:\n            partialField = new PartialField(schema.name, data, schema, new TemporalParser(schema));\n            return new Temporal(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.BINNED:\n            partialField = new PartialField(schema.name, data, schema, new BinnedParser());\n            return new Binned(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        }\n    default:\n        partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n        return new Categorical(partialField, `0-${data.length - 1}`);\n    }\n}\n\n\n/**\n * Creates a field instance from partialField and rowDiffset.\n *\n * @param {PartialField} partialField - The corresponding partial field.\n * @param {string} rowDiffset - The data subset config.\n * @return {Field} Returns the newly created field instance.\n */\nexport function createUnitFieldFromPartial(partialField, rowDiffset) {\n    const { schema } = partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            return new Continuous(partialField, rowDiffset);\n        default:\n            return new Continuous(partialField, rowDiffset);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            return new Categorical(partialField, rowDiffset);\n        case DimensionSubtype.TEMPORAL:\n            return new Temporal(partialField, rowDiffset);\n        case DimensionSubtype.BINNED:\n            return new Binned(partialField, rowDiffset);\n        default:\n            return new Categorical(partialField, rowDiffset);\n        }\n    default:\n        return new Categorical(partialField, rowDiffset);\n    }\n}\n\n/**\n * Creates the field instances with input data and schema.\n *\n * @param {Array} dataColumn - The data array for fields.\n * @param {Array} schema - The schema array for fields.\n * @param {Array} headers - The array of header names.\n * @return {Array.<Field>} Returns an array of newly created field instances.\n */\nexport function createFields(dataColumn, schema, headers) {\n    const headersObj = {};\n\n    if (!(headers && headers.length)) {\n        headers = schema.map(item => item.name);\n    }\n\n    headers.forEach((header, i) => {\n        headersObj[header] = i;\n    });\n\n    return schema.map(item => createUnitField(dataColumn[headersObj[item.name]], item));\n}\n","import { DataFormat } from './enums';\n\nexport default {\n    dataFormat: DataFormat.AUTO\n};\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in DSV array to a manageable internal format.\n *\n * @param {Array.<Array>} arr - A 2D array containing of the DSV data.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv data is header or not.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    [\"a\", \"b\", \"c\"],\n *    [1, 2, 3],\n *    [4, 5, 6],\n *    [7, 8, 9]\n * ];\n */\nfunction DSVArr (arr, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    let header;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    if (options.firstRowHeader) {\n        // If header present then mutate the array.\n        // Do in-place mutation to save space.\n        header = arr.splice(0, 1)[0];\n    } else {\n        header = [];\n    }\n\n    arr.forEach(field => push(...field));\n\n    return [header, columns];\n}\n\nexport default DSVArr;\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","import { dsvFormat as d3Dsv } from 'd3-dsv';\nimport DSVArr from './dsv-arr';\n\n/**\n * Parses and converts data formatted in DSV string to a manageable internal format.\n *\n * @todo Support to be given for https://tools.ietf.org/html/rfc4180.\n * @todo Sample implementation https://github.com/knrz/CSV.js/.\n *\n * @param {string} str - The input DSV string.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv string data is header or not.\n * @param {string} [options.fieldSeparator=\",\"] - The separator of two consecutive field.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = `\n * a,b,c\n * 1,2,3\n * 4,5,6\n * 7,8,9\n * `\n */\nfunction DSVStr (str, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n        fieldSeparator: ','\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    const dsv = d3Dsv(options.fieldSeparator);\n    return DSVArr(dsv.parseRows(str), options);\n}\n\nexport default DSVStr;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in JSON to a manageable internal format.\n *\n * @param {Array.<Object>} arr - The input data formatted in JSON.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    {\n *      \"a\": 1,\n *      \"b\": 2,\n *      \"c\": 3\n *    },\n *    {\n *      \"a\": 4,\n *      \"b\": 5,\n *      \"c\": 6\n *    },\n *    {\n *      \"a\": 7,\n *      \"b\": 8,\n *      \"c\": 9\n *    }\n * ];\n */\nfunction FlatJSON (arr) {\n    const header = {};\n    let i = 0;\n    let insertionIndex;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    arr.forEach((item) => {\n        const fields = [];\n        for (let key in item) {\n            if (key in header) {\n                insertionIndex = header[key];\n            } else {\n                header[key] = i++;\n                insertionIndex = i - 1;\n            }\n            fields[insertionIndex] = item[key];\n        }\n        push(...fields);\n    });\n\n    return [Object.keys(header), columns];\n}\n\nexport default FlatJSON;\n","import FlatJSON from './flat-json';\nimport DSVArr from './dsv-arr';\nimport DSVStr from './dsv-str';\nimport { detectDataFormat } from '../utils';\n\n/**\n * Parses the input data and detect the format automatically.\n *\n * @param {string|Array} data - The input data.\n * @param {Object} options - An optional config specific to data format.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n */\nfunction Auto (data, options) {\n    const converters = { FlatJSON, DSVStr, DSVArr };\n    const dataFormat = detectDataFormat(data);\n\n    if (!dataFormat) {\n        throw new Error('Couldn\\'t detect the data format');\n    }\n\n    return converters[dataFormat](data, options);\n}\n\nexport default Auto;\n","import { FieldType, FilteringMode, DimensionSubtype, MeasureSubtype, DataFormat } from './enums';\nimport fieldStore from './field-store';\nimport Value from './value';\nimport {\n    rowDiffsetIterator\n} from './operator';\nimport { DM_DERIVATIVES, LOGICAL_OPERATORS } from './constants';\nimport { createFields, createUnitFieldFromPartial } from './field-creator';\nimport defaultConfig from './default-config';\nimport * as converter from './converter';\nimport { extend2, detectDataFormat } from './utils';\n\n/**\n * Prepares the selection data.\n */\nfunction prepareSelectionData (fields, i) {\n    const resp = {};\n    for (let field of fields) {\n        resp[field.name()] = new Value(field.partialField.data[i], field);\n    }\n    return resp;\n}\n\nexport function prepareJoinData (fields) {\n    const resp = {};\n    Object.keys(fields).forEach((key) => { resp[key] = new Value(fields[key], key); });\n    return resp;\n}\n\nexport const updateFields = ([rowDiffset, colIdentifier], partialFieldspace, fieldStoreName) => {\n    let collID = colIdentifier.length ? colIdentifier.split(',') : [];\n    let partialFieldMap = partialFieldspace.fieldsObj();\n    let newFields = collID.map(coll => createUnitFieldFromPartial(partialFieldMap[coll].partialField, rowDiffset));\n    return fieldStore.createNamespace(newFields, fieldStoreName);\n};\n\nexport const persistDerivation = (model, operation, config = {}, criteriaFn) => {\n    let derivative;\n    if (operation !== DM_DERIVATIVES.COMPOSE) {\n        derivative = {\n            op: operation,\n            meta: config,\n            criteria: criteriaFn\n        };\n        model._derivation.push(derivative);\n    }\n    else {\n        derivative = [...criteriaFn];\n        model._derivation.length = 0;\n        model._derivation.push(...derivative);\n    }\n};\n\nexport const selectHelper = (rowDiffset, fields, selectFn, config, sourceDm) => {\n    const newRowDiffSet = [];\n    let lastInsertedValue = -1;\n    let { mode } = config;\n    let li;\n    let cachedStore = {};\n    let cloneProvider = () => sourceDm.detachedRoot();\n    const selectorHelperFn = index => selectFn(\n        prepareSelectionData(fields, index),\n        index,\n        cloneProvider,\n        cachedStore\n    );\n\n    let checker;\n    if (mode === FilteringMode.INVERSE) {\n        checker = index => !selectorHelperFn(index);\n    } else {\n        checker = index => selectorHelperFn(index);\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        if (checker(i)) {\n            if (lastInsertedValue !== -1 && i === (lastInsertedValue + 1)) {\n                li = newRowDiffSet.length - 1;\n                newRowDiffSet[li] = `${newRowDiffSet[li].split('-')[0]}-${i}`;\n            } else {\n                newRowDiffSet.push(`${i}`);\n            }\n            lastInsertedValue = i;\n        }\n    });\n    return newRowDiffSet.join(',');\n};\n\nexport const filterPropagationModel = (model, propModels, config = {}) => {\n    const operation = config.operation || LOGICAL_OPERATORS.AND;\n    const filterByMeasure = config.filterByMeasure || false;\n    let fns = [];\n    if (!propModels.length) {\n        fns = [() => false];\n    } else {\n        fns = propModels.map(propModel => ((dataModel) => {\n            const dataObj = dataModel.getData();\n            const schema = dataObj.schema;\n            const fieldsConfig = dataModel.getFieldsConfig();\n            const fieldsSpace = dataModel.getFieldspace().fieldsObj();\n            const data = dataObj.data;\n            const domain = Object.values(fieldsConfig).reduce((acc, v) => {\n                acc[v.def.name] = fieldsSpace[v.def.name].domain();\n                return acc;\n            }, {});\n\n            return (fields) => {\n                const include = !data.length ? false : data.some(row => schema.every((propField) => {\n                    if (!(propField.name in fields)) {\n                        return true;\n                    }\n                    const value = fields[propField.name].valueOf();\n                    if (filterByMeasure && propField.type === FieldType.MEASURE) {\n                        return value >= domain[propField.name][0] && value <= domain[propField.name][1];\n                    }\n\n                    if (propField.type !== FieldType.DIMENSION) {\n                        return true;\n                    }\n                    const idx = fieldsConfig[propField.name].index;\n                    return row[idx] === fields[propField.name].valueOf();\n                }));\n                return include;\n            };\n        })(propModel));\n    }\n\n    let filteredModel;\n    if (operation === LOGICAL_OPERATORS.AND) {\n        const clonedModel = model.clone(false, false);\n        filteredModel = clonedModel.select(fields => fns.every(fn => fn(fields)), {\n            saveChild: false,\n            mode: FilteringMode.ALL\n        });\n    } else {\n        filteredModel = model.clone(false, false).select(fields => fns.some(fn => fn(fields)), {\n            mode: FilteringMode.ALL,\n            saveChild: false\n        });\n    }\n\n    return filteredModel;\n};\n\nexport const cloneWithSelect = (sourceDm, selectFn, selectConfig, cloneConfig) => {\n    const cloned = sourceDm.clone(cloneConfig.saveChild);\n    const rowDiffset = selectHelper(\n        cloned._rowDiffset,\n        cloned.getPartialFieldspace().fields,\n        selectFn,\n        selectConfig,\n        sourceDm\n    );\n    cloned._rowDiffset = rowDiffset;\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n    // Store reference to child model and selector function\n    if (cloneConfig.saveChild) {\n        persistDerivation(cloned, DM_DERIVATIVES.SELECT, { config: selectConfig }, selectFn);\n    }\n\n    return cloned;\n};\n\nexport const cloneWithProject = (sourceDm, projField, config, allFields) => {\n    const cloned = sourceDm.clone(config.saveChild);\n    let projectionSet = projField;\n    if (config.mode === FilteringMode.INVERSE) {\n        projectionSet = allFields.filter(fieldName => projField.indexOf(fieldName) === -1);\n    }\n    // cloned._colIdentifier = sourceDm._colIdentifier.split(',')\n    //                         .filter(coll => projectionSet.indexOf(coll) !== -1).join();\n    cloned._colIdentifier = projectionSet.join(',');\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n    // Store reference to child model and projection fields\n    if (config.saveChild) {\n        persistDerivation(\n            cloned,\n            DM_DERIVATIVES.PROJECT,\n            { projField, config, actualProjField: projectionSet },\n            null\n        );\n    }\n\n    return cloned;\n};\n\nexport const sanitizeUnitSchema = (unitSchema) => {\n    // Do deep clone of the unit schema as the user might change it later.\n    unitSchema = extend2({}, unitSchema);\n    if (!unitSchema.type) {\n        unitSchema.type = FieldType.DIMENSION;\n    }\n\n    if (!unitSchema.subtype) {\n        switch (unitSchema.type) {\n        case FieldType.MEASURE:\n            unitSchema.subtype = MeasureSubtype.CONTINUOUS;\n            break;\n        default:\n        case FieldType.DIMENSION:\n            unitSchema.subtype = DimensionSubtype.CATEGORICAL;\n            break;\n        }\n    }\n\n    return unitSchema;\n};\n\nexport const sanitizeSchema = schema => schema.map(unitSchema => sanitizeUnitSchema(unitSchema));\n\nexport const updateData = (relation, data, schema, options) => {\n    schema = sanitizeSchema(schema);\n    options = Object.assign(Object.assign({}, defaultConfig), options);\n    const converterFn = converter[options.dataFormat];\n\n    if (!(converterFn && typeof converterFn === 'function')) {\n        throw new Error(`No converter function found for ${options.dataFormat} format`);\n    }\n\n    const [header, formattedData] = converterFn(data, options);\n    const fieldArr = createFields(formattedData, schema, header);\n\n    // This will create a new fieldStore with the fields\n    const nameSpace = fieldStore.createNamespace(fieldArr, options.name);\n    relation._partialFieldspace = nameSpace;\n    // If data is provided create the default colIdentifier and rowDiffset\n    relation._rowDiffset = formattedData.length && formattedData[0].length ? `0-${formattedData[0].length - 1}` : '';\n    relation._colIdentifier = (schema.map(_ => _.name)).join();\n    relation._dataFormat = options.dataFormat === DataFormat.AUTO ? detectDataFormat(data) : options.dataFormat;\n    return relation;\n};\n\nexport const fieldInSchema = (schema, field) => {\n    let i = 0;\n\n    for (; i < schema.length; ++i) {\n        if (field === schema[i].name) {\n            return {\n                type: schema[i].subtype || schema[i].type,\n                index: i\n            };\n        }\n    }\n    return null;\n};\n\n\nexport const getOperationArguments = (child) => {\n    const derivation = child._derivation;\n    let params = [];\n    let operation;\n    if (derivation && derivation.length === 1) {\n        operation = derivation[0].op;\n        switch (operation) {\n        case DM_DERIVATIVES.SELECT:\n            params = [derivation[0].criteria];\n            break;\n        case DM_DERIVATIVES.PROJECT:\n            params = [derivation[0].meta.actualProjField];\n            break;\n        case DM_DERIVATIVES.GROUPBY:\n            operation = 'groupBy';\n            params = [derivation[0].meta.groupByString.split(','), derivation[0].criteria];\n            break;\n        default:\n            break;\n        }\n    }\n\n    return {\n        operation,\n        params\n    };\n};\n\nconst applyExistingOperationOnModel = (propModel, dataModel) => {\n    const { operation, params } = getOperationArguments(dataModel);\n    let selectionModel = propModel[0];\n    let rejectionModel = propModel[1];\n    if (operation && params.length) {\n        selectionModel = propModel[0][operation](...params, {\n            saveChild: false\n        });\n        rejectionModel = propModel[1][operation](...params, {\n            saveChild: false\n        });\n    }\n    return [selectionModel, rejectionModel];\n};\n\nconst getFilteredModel = (propModel, path) => {\n    for (let i = 0, len = path.length; i < len; i++) {\n        const model = path[i];\n        propModel = applyExistingOperationOnModel(propModel, model);\n    }\n    return propModel;\n};\n\nconst propagateIdentifiers = (dataModel, propModel, config = {}, propModelInf = {}) => {\n    const nonTraversingModel = propModelInf.nonTraversingModel;\n    const excludeModels = propModelInf.excludeModels || [];\n\n    if (dataModel === nonTraversingModel) {\n        return;\n    }\n\n    const propagate = excludeModels.length ? excludeModels.indexOf(dataModel) === -1 : true;\n\n    propagate && dataModel.handlePropagation(propModel, config);\n\n    const children = dataModel._children;\n    children.forEach((child) => {\n        let [selectionModel, rejectionModel] = applyExistingOperationOnModel(propModel, child);\n        propagateIdentifiers(child, [selectionModel, rejectionModel], config, propModelInf);\n    });\n};\n\nexport const getRootGroupByModel = (model) => {\n    if (model._parent && model._derivation.find(d => d.op !== 'group')) {\n        return getRootGroupByModel(model._parent);\n    }\n    return model;\n};\n\nexport const getRootDataModel = (model) => {\n    if (model._parent) {\n        return getRootDataModel(model._parent);\n    }\n    return model;\n};\n\nexport const getPathToRootModel = (model, path = []) => {\n    if (model._parent !== null) {\n        path.push(model);\n        getPathToRootModel(model._parent, path);\n    }\n    return path;\n};\n\nexport const propagateToAllDataModels = (identifiers, rootModels, propagationInf, config) => {\n    let criteria;\n    let propModel;\n    const { propagationNameSpace, propagateToSource } = propagationInf;\n    const propagationSourceId = propagationInf.sourceId;\n    const propagateInterpolatedValues = config.propagateInterpolatedValues;\n    const filterFn = (entry) => {\n        const filter = config.filterFn || (() => true);\n        return filter(entry, config);\n    };\n\n    let criterias = [];\n\n    if (identifiers === null && config.persistent !== true) {\n        criterias = [{\n            criteria: []\n        }];\n    } else {\n        let actionCriterias = Object.values(propagationNameSpace.mutableActions);\n        if (propagateToSource !== false) {\n            actionCriterias = actionCriterias.filter(d => d.config.sourceId !== propagationSourceId);\n        }\n\n        const filteredCriteria = actionCriterias.filter(filterFn).map(action => action.config.criteria);\n\n        const excludeModels = [];\n\n        if (propagateToSource !== false) {\n            const sourceActionCriterias = Object.values(propagationNameSpace.mutableActions);\n\n            sourceActionCriterias.forEach((actionInf) => {\n                const actionConf = actionInf.config;\n                if (actionConf.applyOnSource === false && actionConf.action === config.action &&\n                        actionConf.sourceId !== propagationSourceId) {\n                    excludeModels.push(actionInf.model);\n                    criteria = sourceActionCriterias.filter(d => d !== actionInf).map(d => d.config.criteria);\n                    criteria.length && criterias.push({\n                        criteria,\n                        models: actionInf.model,\n                        path: getPathToRootModel(actionInf.model)\n                    });\n                }\n            });\n        }\n\n\n        criteria = [].concat(...[...filteredCriteria, identifiers]).filter(d => d !== null);\n        criterias.push({\n            criteria,\n            excludeModels: [...excludeModels, ...config.excludeModels || []]\n        });\n    }\n\n    const rootModel = rootModels.model;\n\n    const propConfig = Object.assign({\n        sourceIdentifiers: identifiers,\n        propagationSourceId\n    }, config);\n\n    const rootGroupByModel = rootModels.groupByModel;\n    if (propagateInterpolatedValues && rootGroupByModel) {\n        propModel = filterPropagationModel(rootGroupByModel, criteria, {\n            filterByMeasure: propagateInterpolatedValues\n        });\n        propagateIdentifiers(rootGroupByModel, propModel, propConfig);\n    }\n\n    criterias.forEach((inf) => {\n        const propagationModel = filterPropagationModel(rootModel, inf.criteria);\n        const path = inf.path;\n\n        if (path) {\n            const filteredModel = getFilteredModel(propagationModel, path.reverse());\n            inf.models.handlePropagation(filteredModel, propConfig);\n        } else {\n            propagateIdentifiers(rootModel, propagationModel, propConfig, {\n                excludeModels: inf.excludeModels,\n                nonTraversingModel: propagateInterpolatedValues && rootGroupByModel\n            });\n        }\n    });\n};\n\nexport const propagateImmutableActions = (propagationNameSpace, rootModels, propagationInf) => {\n    const immutableActions = propagationNameSpace.immutableActions;\n\n    for (const action in immutableActions) {\n        const actionInf = immutableActions[action];\n        const actionConf = actionInf.config;\n        const propagationSourceId = propagationInf.config.sourceId;\n        const filterImmutableAction = propagationInf.propConfig.filterImmutableAction ?\n            propagationInf.propConfig.filterImmutableAction(actionConf, propagationInf.config) : true;\n        if (actionConf.sourceId !== propagationSourceId && filterImmutableAction) {\n            const criteriaModel = actionConf.criteria;\n            propagateToAllDataModels(criteriaModel, rootModels, {\n                propagationNameSpace,\n                propagateToSource: false,\n                sourceId: propagationSourceId\n            }, actionConf);\n        }\n    }\n};\n\nexport const addToPropNamespace = (propagationNameSpace, config = {}, model) => {\n    let sourceNamespace;\n    const isMutableAction = config.isMutableAction;\n    const criteria = config.criteria;\n    const key = `${config.action}-${config.sourceId}`;\n\n    if (isMutableAction) {\n        sourceNamespace = propagationNameSpace.mutableActions;\n    } else {\n        sourceNamespace = propagationNameSpace.immutableActions;\n    }\n\n    if (criteria === null) {\n        delete sourceNamespace[key];\n    } else {\n        sourceNamespace[key] = {\n            model,\n            config\n        };\n    }\n\n    return this;\n};\n","import { FilteringMode } from './enums';\nimport { getUniqueId } from './utils';\nimport { persistDerivation, updateFields, cloneWithSelect, cloneWithProject, updateData } from './helper';\nimport { crossProduct, difference, naturalJoinFilter, union } from './operator';\nimport { DM_DERIVATIVES } from './constants';\n\n/**\n * Relation provides the definitions of basic operators of relational algebra like *selection*, *projection*, *union*,\n * *difference* etc.\n *\n * It is extended by {@link DataModel} to inherit the functionalities of relational algebra concept.\n *\n * @class\n * @public\n * @module Relation\n * @namespace DataModel\n */\nclass Relation {\n\n    /**\n     * Creates a new Relation instance by providing underlying data and schema.\n     *\n     * @private\n     *\n     * @param {Object | string | Relation} data - The input tabular data in dsv or json format or\n     * an existing Relation instance object.\n     * @param {Array} schema - An array of data schema.\n     * @param {Object} [options] - The optional options.\n     */\n    constructor (...params) {\n        let source;\n\n        this._parent = null;\n        this._derivation = [];\n        this._children = [];\n\n        if (params.length === 1 && ((source = params[0]) instanceof Relation)) {\n            // parent datamodel was passed as part of source\n            this._colIdentifier = source._colIdentifier;\n            this._rowDiffset = source._rowDiffset;\n            this._dataFormat = source._dataFormat;\n            this._parent = source;\n            this._partialFieldspace = this._parent._partialFieldspace;\n            this._fieldStoreName = getUniqueId();\n            this.__calculateFieldspace().calculateFieldsConfig();\n        } else {\n            updateData(this, ...params);\n            this._fieldStoreName = this._partialFieldspace.name;\n            this.__calculateFieldspace().calculateFieldsConfig();\n            this._propagationNameSpace = {\n                mutableActions: {},\n                immutableActions: {}\n            };\n        }\n    }\n\n    /**\n     * Retrieves the {@link Schema | schema} details for every {@link Field | field} as an array.\n     *\n     * @public\n     *\n     * @return {Array.<Schema>} Array of fields schema.\n     *      ```\n     *      [\n     *          { name: 'Name', type: 'dimension' },\n     *          { name: 'Miles_per_Gallon', type: 'measure', numberFormat: (val) => `${val} miles / gallon` },\n     *          { name: 'Cylinder', type: 'dimension' },\n     *          { name: 'Displacement', type: 'measure', defAggFn: 'max' },\n     *          { name: 'HorsePower', type: 'measure', defAggFn: 'max' },\n     *          { name: 'Weight_in_lbs', type: 'measure', defAggFn: 'avg',  },\n     *          { name: 'Acceleration', type: 'measure', defAggFn: 'avg' },\n     *          { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *          { name: 'Origin' }\n     *      ]\n     *      ```\n     */\n    getSchema () {\n        return this.getFieldspace().fields.map(d => d.schema());\n    }\n\n    /**\n     * Returns the name of the {@link DataModel} instance. If no name was specified during {@link DataModel}\n     * initialization, then it returns a auto-generated name.\n     *\n     * @public\n     *\n     * @return {string} Name of the DataModel instance.\n     */\n    getName() {\n        return this._fieldStoreName;\n    }\n\n    getFieldspace () {\n        return this._fieldspace;\n    }\n\n    __calculateFieldspace () {\n        this._fieldspace = updateFields([this._rowDiffset, this._colIdentifier],\n             this.getPartialFieldspace(), this._fieldStoreName);\n        return this;\n    }\n\n    getPartialFieldspace () {\n        return this._partialFieldspace;\n    }\n\n    /**\n     * Performs {@link link_of_cross_product | cross-product} between two {@link DataModel} instances and returns a\n     * new {@link DataModel} instance containing the results. This operation is also called theta join.\n     *\n     * Cross product takes two set and create one set where each value of one set is paired with each value of another\n     * set.\n     *\n     * This method takes an optional predicate which filters the generated result rows. If the predicate returns true\n     * the combined row is included in the resulatant table.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.join(originDM)));\n     *\n     *  console.log(carsDM.join(originDM,\n     *      obj => obj.[originDM.getName()].Origin === obj.[carsDM.getName()].Origin));\n     *\n     * @text\n     * This is chained version of `join` operator. `join` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel to be joined with the current instance DataModel.\n     * @param {SelectionPredicate} filterFn - The predicate function that will filter the result of the crossProduct.\n     *\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    join (joinWith, filterFn) {\n        return crossProduct(this, joinWith, filterFn);\n    }\n\n    /**\n     * {@link natural_join | Natural join} is a special kind of cross-product join where filtering of rows are performed\n     * internally by resolving common fields are from both table and the rows with common value are included.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.naturalJoin(originDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel with which the current instance of DataModel on which the method is\n     *      called will be joined.\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    naturalJoin (joinWith) {\n        return crossProduct(this, joinWith, naturalJoinFilter(this, joinWith), true);\n    }\n\n    /**\n     * {@link link_to_union | Union} operation can be termed as vertical stacking of all rows from both the DataModel\n     * instances, provided that both of the {@link DataModel} instances should have same column names.\n     *\n     * @example\n     * console.log(EuropeanMakerDM.union(USAMakerDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} unionWith - DataModel instance for which union has to be applied with the instance on which\n     *      the method is called\n     *\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    union (unionWith) {\n        return union(this, unionWith);\n    }\n\n    /**\n     * {@link link_to_difference | Difference } operation only include rows which are present in the datamodel on which\n     * it was called but not on the one passed as argument.\n     *\n     * @example\n     * console.log(highPowerDM.difference(highExpensiveDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} differenceWith - DataModel instance for which difference has to be applied with the instance\n     *      on which the method is called\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    difference (differenceWith) {\n        return difference(this, differenceWith);\n    }\n\n    /**\n     * {@link link_to_selection | Selection} is a row filtering operation. It expects a predicate and an optional mode\n     * which control which all rows should be included in the resultant DataModel instance.\n     *\n     * {@link SelectionPredicate} is a function which returns a boolean value. For selection operation the selection\n     * function is called for each row of DataModel instance with the current row passed as argument.\n     *\n     * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n     * of rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resultant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  // with selection mode NORMAL:\n     *  const normDt = dt.select(fields => fields.Origin.value === \"USA\")\n     *  console.log(normDt));\n     *\n     * // with selection mode INVERSE:\n     * const inverDt = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.INVERSE })\n     * console.log(inverDt);\n     *\n     * // with selection mode ALL:\n     * const dtArr = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.ALL })\n     * // print the selected parts\n     * console.log(dtArr[0]);\n     * // print the inverted parts\n     * console.log(dtArr[1]);\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Function} selectFn - The predicate function which is called for each row with the current row.\n     * ```\n     *  function (row, i, cloneProvider, store)  { ... }\n     * ```\n     * @param {Object} config - The configuration object to control the inclusion exclusion of a row in resultant\n     * DataModel instance.\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection.\n     * @return {DataModel} Returns the new DataModel instance(s) after operation.\n     */\n    select (selectFn, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n\n        const cloneConfig = { saveChild: config.saveChild };\n        let oDm;\n\n        if (config.mode === FilteringMode.ALL) {\n            const selectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.NORMAL },\n                cloneConfig\n            );\n            const rejectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.INVERSE },\n                cloneConfig\n            );\n            oDm = [selectDm, rejectDm];\n        } else {\n            oDm = cloneWithSelect(\n                this,\n                selectFn,\n                config,\n                cloneConfig\n            );\n        }\n\n        return oDm;\n    }\n\n    /**\n     * Retrieves a boolean value if the current {@link DataModel} instance has data.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'CarName', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     * const data = [];\n     *\n     * const dt = new DataModel(schema, data);\n     * console.log(dt.isEmpty());\n     *\n     * @public\n     *\n     * @return {Boolean} True if the datamodel has no data, otherwise false.\n     */\n    isEmpty () {\n        return !this._rowDiffset.length || !this._colIdentifier.length;\n    }\n\n    /**\n     * Creates a clone from the current DataModel instance with child parent relationship.\n     *\n     * @private\n     * @param {boolean} [saveChild=true] - Whether the cloned instance would be recorded in the parent instance.\n     * @return {DataModel} - Returns the newly cloned DataModel instance.\n     */\n    clone (saveChild = true, linkParent = true) {\n        let retDataModel;\n        if (linkParent === false) {\n            const dataObj = this.getData({\n                getAllFields: true\n            });\n            const data = dataObj.data;\n            const schema = dataObj.schema;\n            const jsonData = data.map((row) => {\n                const rowObj = {};\n                schema.forEach((field, i) => {\n                    rowObj[field.name] = row[i];\n                });\n                return rowObj;\n            });\n            retDataModel = new this.constructor(jsonData, schema);\n        }\n        else {\n            retDataModel = new this.constructor(this);\n        }\n\n        if (saveChild) {\n            this._children.push(retDataModel);\n        }\n        return retDataModel;\n    }\n\n    /**\n     * {@link Projection} is filter column (field) operation. It expects list of fields' name and either include those\n     * or exclude those based on {@link FilteringMode} on the resultant variable.\n     *\n     * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n     * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resulatant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  const dm = new DataModel(schema, data);\n     *\n     *  // with projection mode NORMAL:\n     *  const normDt = dt.project([\"Name\", \"HorsePower\"]);\n     *  console.log(normDt.getData());\n     *\n     *  // with projection mode INVERSE:\n     *  const inverDt = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.INVERSE })\n     *  console.log(inverDt.getData());\n     *\n     *  // with selection mode ALL:\n     *  const dtArr = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.ALL })\n     *  // print the normal parts\n     *  console.log(dtArr[0].getData());\n     *  // print the inverted parts\n     *  console.log(dtArr[1].getData());\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n     * @param {Object} [config] - An optional config to control the creation of new DataModel\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n     *\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    project (projField, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const { mode } = config;\n\n        let normalizedProjField = projField.reduce((acc, field) => {\n            if (field.constructor.name === 'RegExp') {\n                acc.push(...allFields.filter(fieldName => fieldName.search(field) !== -1));\n            } else if (field in fieldConfig) {\n                acc.push(field);\n            }\n            return acc;\n        }, []);\n\n        normalizedProjField = Array.from(new Set(normalizedProjField)).map(field => field.trim());\n        let dataModel;\n\n        if (mode === FilteringMode.ALL) {\n            let projectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.NORMAL,\n                saveChild: config.saveChild\n            }, allFields);\n            let rejectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.INVERSE,\n                saveChild: config.saveChild\n            }, allFields);\n            dataModel = [projectionClone, rejectionClone];\n        } else {\n            let projectionClone = cloneWithProject(this, normalizedProjField, config, allFields);\n            dataModel = projectionClone;\n        }\n\n        return dataModel;\n    }\n\n    getFieldsConfig () {\n        return this._fieldConfig;\n    }\n\n    calculateFieldsConfig () {\n        this._fieldConfig = this._fieldspace.fields.reduce((acc, fieldDef, i) => {\n            acc[fieldDef.name()] = {\n                index: i,\n                def: { name: fieldDef.name(), type: fieldDef.type(), subtype: fieldDef.subtype() }\n            };\n            return acc;\n        }, {});\n        return this;\n    }\n\n\n    /**\n     * Frees up the resources associated with the current DataModel instance and breaks all the links instance has in\n     * the DAG.\n     *\n     * @public\n     */\n    dispose () {\n        this._parent.removeChild(this);\n        this._parent = null;\n    }\n\n    /**\n     * Removes the specified child {@link DataModel} from the child list of the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(schema, data);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\")\n     * dt.removeChild(dt2);\n     *\n     * @private\n     *\n     * @param {DataModel} child - Delegates the parent to remove this child.\n     */\n    removeChild (child) {\n        let idx = this._children.findIndex(sibling => sibling === child);\n        idx !== -1 ? this._children.splice(idx, 1) : true;\n    }\n\n    /**\n     * Adds the specified {@link DataModel} as a parent for the current {@link DataModel} instance.\n     *\n     * The optional criteriaQueue is an array containing the history of transaction performed on parent\n     *  {@link DataModel} to get the current one.\n     *\n     * @param {DataModel} parent - The datamodel instance which will act as parent.\n     * @param {Array} criteriaQueue - Queue contains in-between operation meta-data.\n     */\n    addParent (parent, criteriaQueue = []) {\n        persistDerivation(this, DM_DERIVATIVES.COMPOSE, null, criteriaQueue);\n        this._parent = parent;\n        parent._children.push(this);\n    }\n}\n\nexport default Relation;\n","/* eslint-disable default-case */\n\nimport { FieldType, DimensionSubtype, DataFormat } from './enums';\nimport {\n    persistDerivation,\n    getRootGroupByModel,\n    propagateToAllDataModels,\n    getRootDataModel,\n    propagateImmutableActions,\n    addToPropNamespace,\n    sanitizeUnitSchema\n} from './helper';\nimport { DM_DERIVATIVES, PROPAGATION } from './constants';\nimport {\n    dataBuilder,\n    rowDiffsetIterator,\n    groupBy\n} from './operator';\nimport { createBinnedFieldData } from './operator/bucket-creator';\nimport Relation from './relation';\nimport reducerStore from './utils/reducer-store';\nimport { createFields } from './field-creator';\n\n/**\n * DataModel is an in-browser representation of tabular data. It supports\n * {@link https://en.wikipedia.org/wiki/Relational_algebra | relational algebra} operators as well as generic data\n * processing opearators.\n * DataModel extends {@link Relation} class which defines all the relational algebra opreators. DataModel gives\n * definition of generic data processing operators which are not relational algebra complient.\n *\n * @public\n * @class\n * @extends Relation\n * @memberof Datamodel\n */\nclass DataModel extends Relation {\n    /**\n     * Creates a new DataModel instance by providing data and schema. Data could be in the form of\n     * - Flat JSON\n     * - DSV String\n     * - 2D Array\n     *\n     * By default DataModel finds suitable adapter to serialize the data. DataModel also expects a\n     * {@link Schema | schema} for identifying the variables present in data.\n     *\n     * @constructor\n     * @example\n     * const data = loadData('cars.csv');\n     * const schema = [\n     *      { name: 'Name', type: 'dimension' },\n     *      { name: 'Miles_per_Gallon', type: 'measure', unit : 'cm', scale: '1000', numberformat: val => `${val}G`},\n     *      { name: 'Cylinders', type: 'dimension' },\n     *      { name: 'Displacement', type: 'measure' },\n     *      { name: 'Horsepower', type: 'measure' },\n     *      { name: 'Weight_in_lbs', type: 'measure' },\n     *      { name: 'Acceleration', type: 'measure' },\n     *      { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *      { name: 'Origin', type: 'dimension' }\n     * ];\n     * const dm = new DataModel(data, schema, { name: 'Cars' });\n     * table(dm);\n     *\n     * @public\n     *\n     * @param {Array.<Object> | string | Array.<Array>} data Input data in any of the mentioned formats\n     * @param {Array.<Schema>} schema Defination of the variables. Order of the variables in data and order of the\n     *      variables in schema has to be same.\n     * @param {object} [options] Optional arguments to specify more settings regarding the creation part\n     * @param {string} [options.name] Name of the datamodel instance. If no name is given an auto generated name is\n     *      assigned to the instance.\n     * @param {string} [options.fieldSeparator=','] specify field separator type if the data is of type dsv string.\n     */\n    constructor (...args) {\n        super(...args);\n\n        this._onPropagation = [];\n        this._sortingDetails = [];\n    }\n\n    /**\n     * Reducers are simple functions which reduces an array of numbers to a representative number of the set.\n     * Like an array of numbers `[10, 20, 5, 15]` can be reduced to `12.5` if average / mean reducer function is\n     * applied. All the measure fields in datamodel (variables in data) needs a reducer to handle aggregation.\n     *\n     * @public\n     *\n     * @return {ReducerStore} Singleton instance of {@link ReducerStore}.\n     */\n    static get Reducers () {\n        return reducerStore;\n    }\n\n    /**\n     * Retrieve the data attached to an instance in JSON format.\n     *\n     * @example\n     * // DataModel instance is already prepared and assigned to dm variable\n     *  const data = dm.getData({\n     *      order: 'column',\n     *      formatter: {\n     *          origin: (val) => val === 'European Union' ? 'EU' : val;\n     *      }\n     *  });\n     *  console.log(data);\n     *\n     * @public\n     *\n     * @param {Object} [options] Options to control how the raw data is to be returned.\n     * @param {string} [options.order='row'] Defines if data is retieved in row order or column order. Possible values\n     *      are `'rows'` and `'columns'`\n     * @param {Function} [options.formatter=null] Formats the output data. This expects an object, where the keys are\n     *      the name of the variable needs to be formatted. The formatter function is called for each row passing the\n     *      value of the cell for a particular row as arguments. The formatter is a function in the form of\n     *      `function (value, rowId, schema) => { ... }`\n     *      Know more about {@link Fomatter}.\n     *\n     * @return {Array} Returns a multidimensional array of the data with schema. The return format looks like\n     *      ```\n     *          {\n     *              data,\n     *              schema\n     *          }\n     *      ```\n     */\n    getData (options) {\n        const defOptions = {\n            order: 'row',\n            formatter: null,\n            withUid: false,\n            getAllFields: false,\n            sort: []\n        };\n        options = Object.assign({}, defOptions, options);\n        const fields = this.getPartialFieldspace().fields;\n\n        const dataGenerated = dataBuilder.call(\n            this,\n            this.getPartialFieldspace().fields,\n            this._rowDiffset,\n            options.getAllFields ? fields.map(d => d.name()).join() : this._colIdentifier,\n            options.sort,\n            {\n                columnWise: options.order === 'column',\n                addUid: !!options.withUid\n            }\n        );\n\n        if (!options.formatter) {\n            return dataGenerated;\n        }\n\n        const { formatter } = options;\n        const { data, schema, uids } = dataGenerated;\n        const fieldNames = schema.map((e => e.name));\n        const fmtFieldNames = Object.keys(formatter);\n        const fmtFieldIdx = fmtFieldNames.reduce((acc, next) => {\n            const idx = fieldNames.indexOf(next);\n            if (idx !== -1) {\n                acc.push([idx, formatter[next]]);\n            }\n            return acc;\n        }, []);\n\n        if (options.order === 'column') {\n            fmtFieldIdx.forEach((elem) => {\n                const fIdx = elem[0];\n                const fmtFn = elem[1];\n\n                data[fIdx].forEach((datum, datumIdx) => {\n                    data[fIdx][datumIdx] = fmtFn.call(\n                        undefined,\n                        datum,\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        } else {\n            data.forEach((datum, datumIdx) => {\n                fmtFieldIdx.forEach((elem) => {\n                    const fIdx = elem[0];\n                    const fmtFn = elem[1];\n\n                    datum[fIdx] = fmtFn.call(\n                        undefined,\n                        datum[fIdx],\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        }\n\n        return dataGenerated;\n    }\n\n    /**\n     * Groups the data using particular dimensions and by reducing measures. It expects a list of dimensions using which\n     * it projects the datamodel and perform aggregations to reduce the duplicate tuples. Refer this\n     * {@link link_to_one_example_with_group_by | document} to know the intuition behind groupBy.\n     *\n     * DataModel by default provides definition of few {@link reducer | Reducers}.\n     * {@link ReducerStore | User defined reducers} can also be registered.\n     *\n     * This is the chained implementation of `groupBy`.\n     * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n     *\n     * @example\n     * const groupedDM = dm.groupBy(['Year'], { horsepower: 'max' } );\n     * console.log(groupedDm);\n     *\n     * @public\n     *\n     * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n     * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n     *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n     *      schema of the variable.\n     *\n     * @return {DataModel} Returns a new DataModel instance after performing the groupby.\n     */\n    groupBy (fieldsArr, reducers = {}, config = { saveChild: true }) {\n        const groupByString = `${fieldsArr.join()}`;\n        let params = [this, fieldsArr, reducers];\n        const newDataModel = groupBy(...params);\n\n        if (config.saveChild) {\n            this._children.push(newDataModel);\n            persistDerivation(\n                newDataModel,\n                DM_DERIVATIVES.GROUPBY,\n                { fieldsArr, groupByString, defaultReducer: reducerStore.defaultReducer() },\n                reducers\n            );\n        }\n\n        newDataModel._parent = this;\n        return newDataModel;\n    }\n\n    /**\n     * Performs sorting operation on the current {@link DataModel} instance according to the specified sorting details.\n     * Like every other operator it doesn't mutate the current DataModel instance on which it was called, instead\n     * returns a new DataModel instance containing the sorted data.\n     *\n     * DataModel support multi level sorting by listing the variables using which sorting needs to be performed and\n     * the type of sorting `ASC` or `DESC`.\n     *\n     * In the following example, data is sorted by `Origin` field in `DESC` order in first level followed by another\n     * level of sorting by `Acceleration` in `ASC` order.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * let sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\"] // Default value is ASC\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * // Sort with a custom sorting function\n     * sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\", (a, b) => a - b] // Custom sorting function\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @text\n     * DataModel also provides another sorting mechanism out of the box where sort is applied to a variable using\n     * another variable which determines the order.\n     * Like the above DataModel contains three fields `Origin`, `Name` and `Acceleration`. Now, the data in this\n     * model can be sorted by `Origin` field according to the average value of all `Acceleration` for a\n     * particular `Origin` value.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * const sortedDm = dm.sort([\n     *     ['Origin', ['Acceleration', (a, b) => avg(...a.Acceleration) - avg(...b.Acceleration)]]\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @public\n     *\n     * @param {Array.<Array>} sortingDetails - Sorting details based on which the sorting will be performed.\n     * @return {DataModel} Returns a new instance of DataModel with sorted data.\n     */\n    sort (sortingDetails) {\n        const rawData = this.getData({\n            order: 'row',\n            sort: sortingDetails\n        });\n        const header = rawData.schema.map(field => field.name);\n        const dataInCSVArr = [header].concat(rawData.data);\n\n        const sortedDm = new this.constructor(dataInCSVArr, rawData.schema, { dataFormat: 'DSVArr' });\n        sortedDm._sortingDetails = sortingDetails;\n        return sortedDm;\n    }\n\n    /**\n     * Performs the serialization operation on the current {@link DataModel} instance according to the specified data\n     * type. When an {@link DataModel} instance is created, it de-serializes the input data into its internal format,\n     * and during its serialization process, it converts its internal data format to the specified data type and returns\n     * that data regardless what type of data is used during the {@link DataModel} initialization.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance.\n     * const csvData = dm.serialize(DataModel.DataFormat.DSV_STR, { fieldSeparator: \",\" });\n     * console.log(csvData); // The csv formatted data.\n     *\n     * const jsonData = dm.serialize(DataModel.DataFormat.FLAT_JSON);\n     * console.log(jsonData); // The json data.\n     *\n     * @public\n     *\n     * @param {string} type - The data type name for serialization.\n     * @param {Object} options - The optional option object.\n     * @param {string} options.fieldSeparator - The field separator character for DSV data type.\n     * @return {Array|string} Returns the serialized data.\n     */\n    serialize (type, options) {\n        type = type || this._dataFormat;\n        options = Object.assign({}, { fieldSeparator: ',' }, options);\n\n        const fields = this.getFieldspace().fields;\n        const colData = fields.map(f => f.formattedData());\n        const rowsCount = colData[0].length;\n        let serializedData;\n        let rowIdx;\n        let colIdx;\n\n        if (type === DataFormat.FLAT_JSON) {\n            serializedData = [];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = {};\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row[fields[colIdx].name()] = colData[colIdx][rowIdx];\n                }\n                serializedData.push(row);\n            }\n        } else if (type === DataFormat.DSV_STR) {\n            serializedData = [fields.map(f => f.name()).join(options.fieldSeparator)];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row.join(options.fieldSeparator));\n            }\n            serializedData = serializedData.join('\\n');\n        } else if (type === DataFormat.DSV_ARR) {\n            serializedData = [fields.map(f => f.name())];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row);\n            }\n        } else {\n            throw new Error(`Data type ${type} is not supported`);\n        }\n\n        return serializedData;\n    }\n\n    addField (field) {\n        const fieldName = field.name();\n        this._colIdentifier += `,${fieldName}`;\n        const partialFieldspace = this._partialFieldspace;\n\n        if (!partialFieldspace.fieldsObj()[field.name()]) {\n            partialFieldspace.fields.push(field);\n        } else {\n            const fieldIndex = partialFieldspace.fields.findIndex(fieldinst => fieldinst.name() === fieldName);\n            fieldIndex >= 0 && (partialFieldspace.fields[fieldIndex] = field);\n        }\n\n        // flush out cached namespace values on addition of new fields\n        partialFieldspace._cachedFieldsObj = null;\n        partialFieldspace._cachedDimension = null;\n        partialFieldspace._cachedMeasure = null;\n\n        this.__calculateFieldspace().calculateFieldsConfig();\n        return this;\n    }\n\n    /**\n    * Creates a new variable calculated from existing variables. This method expects the definition of the newly created\n    * variable and a function which resolves the value of the new variable from existing variables.\n    *\n    * Can create a new measure based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const newDm = dataModel.calculateVariable({\n    *      name: 'powerToWeight',\n    *      type: 'measure'\n    *  }, ['horsepower', 'weight_in_lbs', (hp, weight) => hp / weight ]);\n    *\n    *\n    * Can create a new dimension based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const child = dataModel.calculateVariable(\n    *     {\n    *       name: 'Efficiency',\n    *       type: 'dimension'\n    *     }, ['horsepower', (hp) => {\n    *      if (hp < 80) { return 'low'; },\n    *      else if (hp < 120) { return 'moderate'; }\n    *      else { return 'high' }\n    *  }]);\n    *\n    * @public\n    *\n    * @param {Object} schema - The schema of newly defined variable.\n    * @param {Array.<string|function>} dependency - An array containing the dependency variable names and a resolver\n    * function as the last element.\n    * @param {Object} config - An optional config object.\n    * @param {boolean} [config.saveChild] - Whether the newly created DataModel will be a child.\n    * @param {boolean} [config.replaceVar] - Whether the newly created variable will replace the existing variable.\n    * @return {DataModel} Returns an instance of DataModel with the new field.\n    */\n    calculateVariable (schema, dependency, config) {\n        schema = sanitizeUnitSchema(schema);\n        config = Object.assign({}, { saveChild: true, replaceVar: false }, config);\n\n        const fieldsConfig = this.getFieldsConfig();\n        const depVars = dependency.slice(0, dependency.length - 1);\n        const retrieveFn = dependency[dependency.length - 1];\n\n        if (fieldsConfig[schema.name] && !config.replaceVar) {\n            throw new Error(`${schema.name} field already exists in datamodel`);\n        }\n\n        const depFieldIndices = depVars.map((field) => {\n            const fieldSpec = fieldsConfig[field];\n            if (!fieldSpec) {\n                // @todo dont throw error here, use warning in production mode\n                throw new Error(`${field} is not a valid column name.`);\n            }\n            return fieldSpec.index;\n        });\n\n        const clone = this.clone();\n\n        const fs = clone.getFieldspace().fields;\n        const suppliedFields = depFieldIndices.map(idx => fs[idx]);\n\n        let cachedStore = {};\n        let cloneProvider = () => this.detachedRoot();\n\n        const computedValues = [];\n        rowDiffsetIterator(clone._rowDiffset, (i) => {\n            const fieldsData = suppliedFields.map(field => field.partialField.data[i]);\n            computedValues[i] = retrieveFn(...fieldsData, i, cloneProvider, cachedStore);\n        });\n        const [field] = createFields([computedValues], [schema], [schema.name]);\n        clone.addField(field);\n\n        if (config.saveChild) {\n            persistDerivation(clone, DM_DERIVATIVES.CAL_VAR, { config: schema, fields: depVars }, retrieveFn);\n        }\n\n        return clone;\n    }\n\n    /**\n     * Propagates changes across all the connected DataModel instances.\n     *\n     * @param {Array} identifiers - A list of identifiers that were interacted with.\n     * @param {Object} payload - The interaction specific details.\n     *\n     * @return {DataModel} DataModel instance.\n     */\n    propagate (identifiers, config = {}, addToNameSpace, propConfig = {}) {\n        const isMutableAction = config.isMutableAction;\n        const propagationSourceId = config.sourceId;\n        const payload = config.payload;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const rootGroupByModel = getRootGroupByModel(this);\n        const rootModels = {\n            groupByModel: rootGroupByModel,\n            model: rootModel\n        };\n\n        addToNameSpace && addToPropNamespace(propagationNameSpace, config, this);\n        propagateToAllDataModels(identifiers, rootModels, { propagationNameSpace, sourceId: propagationSourceId },\n            Object.assign({\n                payload\n            }, config));\n\n        if (isMutableAction) {\n            propagateImmutableActions(propagationNameSpace, rootModels, {\n                config,\n                propConfig\n            }, this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Associates a callback with an event name.\n     *\n     * @param {string} eventName - The name of the event.\n     * @param {Function} callback - The callback to invoke.\n     * @return {DataModel} Returns this current DataModel instance itself.\n     */\n    on (eventName, callback) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation.push(callback);\n            break;\n        }\n        return this;\n    }\n\n    /**\n     * Unsubscribes the callbacks for the provided event name.\n     *\n     * @param {string} eventName - The name of the event to unsubscribe.\n     * @return {DataModel} Returns the current DataModel instance itself.\n     */\n    unsubscribe (eventName) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation = [];\n            break;\n\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to invoke the method associated with propagation.\n     *\n     * @param {Object} payload The interaction payload.\n     * @param {DataModel} identifiers The propagated DataModel.\n     * @memberof DataModel\n     */\n    handlePropagation (propModel, payload) {\n        let propListeners = this._onPropagation;\n        propListeners.forEach(fn => fn.call(this, propModel, payload));\n    }\n\n    /**\n     * Performs the binning operation on a measure field based on the binning configuration. Binning means discretizing\n     * values of a measure. Binning configuration contains an array; subsequent values from the array marks the boundary\n     * of buckets in [inclusive, exclusive) range format. This operation does not mutate the subject measure field,\n     * instead, it creates a new field (variable) of type dimension and subtype binned.\n     *\n     * Binning can be configured by\n     * - providing custom bin configuration with non-uniform buckets,\n     * - providing bins count,\n     * - providing each bin size,\n     *\n     * When custom `buckets` are provided as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', buckets: [30, 80, 100, 110] }\n     *  const binnedDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binsCount` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', binsCount: 5, start: 0, end: 100 }\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binSize` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHorsepower', binSize: 20, start: 5}\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @public\n     *\n     * @param {string} measureFieldName - The name of the target measure field.\n     * @param {Object} config - The config object.\n     * @param {string} [config.name] - The name of the new field which will be created.\n     * @param {string} [config.buckets] - An array containing the bucket ranges.\n     * @param {string} [config.binSize] - The size of each bin. It is ignored when buckets are given.\n     * @param {string} [config.binsCount] - The total number of bins to generate. It is ignored when buckets are given.\n     * @param {string} [config.start] - The start value of the bucket ranges. It is ignored when buckets are given.\n     * @param {string} [config.end] - The end value of the bucket ranges. It is ignored when buckets are given.\n     * @return {DataModel} Returns a new {@link DataModel} instance with the new field.\n     */\n    bin (measureFieldName, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        if (!fieldsConfig[measureFieldName]) {\n            throw new Error(`Field ${measureFieldName} doesn't exist`);\n        }\n\n        const binFieldName = config.name || `${measureFieldName}_binned`;\n\n        if (fieldsConfig[binFieldName]) {\n            throw new Error(`Field ${binFieldName} already exists`);\n        }\n\n        const measureField = this.getFieldspace().fieldsObj()[measureFieldName];\n        const { binnedData, bins } = createBinnedFieldData(measureField, this._rowDiffset, config);\n\n        const binField = createFields([binnedData], [\n            {\n                name: binFieldName,\n                type: FieldType.DIMENSION,\n                subtype: DimensionSubtype.BINNED,\n                bins\n            }], [binFieldName])[0];\n\n        const clone = this.clone();\n        clone.addField(binField);\n\n        persistDerivation(clone, DM_DERIVATIVES.BIN, { measureFieldName, config, binFieldName }, null);\n\n        return clone;\n    }\n\n    /**\n     * Creates a new {@link DataModel} instance with completely detached root from current {@link DataModel} instance,\n     * the new {@link DataModel} instance has no parent-children relationship with the current one, but has same data as\n     * the current one.\n     * This API is useful when a completely different {@link DataModel} but with same data as the current instance is\n     * needed.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *  const detachedDm = dm.detachedRoot();\n     *\n     * // has different namespace\n     * console.log(dm.getPartialFieldspace().name);\n     * console.log(detachedDm.getPartialFieldspace().name);\n     *\n     * // has same data\n     * console.log(dm.getData());\n     * console.log(detachedDm.getData());\n     *\n     * @public\n     *\n     * @return {DataModel} Returns a detached {@link DataModel} instance.\n     */\n    detachedRoot () {\n        const data = this.serialize(DataFormat.FLAT_JSON);\n        const schema = this.getSchema();\n\n        return new DataModel(data, schema);\n    }\n}\n\nexport default DataModel;\n","import { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport DataModel from '../export';\nimport reducerStore from '../utils/reducer-store';\nimport { FieldType } from '../enums';\n\n/**\n * This function sanitize the user given field and return a common Array structure field\n * list\n * @param  {DataModel} dataModel the dataModel operating on\n * @param  {Array} fieldArr  user input of field Array\n * @return {Array}           arrays of field name\n */\nfunction getFieldArr (dataModel, fieldArr) {\n    const retArr = [];\n    const fieldStore = dataModel.getFieldspace();\n    const dimensions = fieldStore.getDimension();\n\n    Object.entries(dimensions).forEach(([key]) => {\n        if (fieldArr && fieldArr.length) {\n            if (fieldArr.indexOf(key) !== -1) {\n                retArr.push(key);\n            }\n        } else {\n            retArr.push(key);\n        }\n    });\n\n    return retArr;\n}\n\n/**\n * This sanitize the reducer provide by the user and create a common type of object.\n * user can give function Also\n * @param  {DataModel} dataModel     dataModel to worked on\n * @param  {Object|function} [reducers={}] reducer provided by the users\n * @return {Object}               object containing reducer function for every measure\n */\nfunction getReducerObj (dataModel, reducers = {}) {\n    const retObj = {};\n    const pReducers = reducers;\n    const fieldStore = dataModel.getFieldspace();\n    const measures = fieldStore.getMeasure();\n    let reducer = reducerStore.defaultReducer();\n    if (typeof reducers === 'function') {\n        reducer = reducers;\n    }\n    Object.entries(measures).forEach(([key]) => {\n        if (typeof reducers[key] === 'string') {\n            pReducers[key] = reducerStore.resolve(pReducers[key]) ? reducerStore.resolve(pReducers[key]) : reducer;\n        }\n        if (typeof reducers[key] !== 'function') {\n            pReducers[key] = undefined;\n        }\n        retObj[key] = pReducers[key] || reducerStore.resolve(measures[key].defAggFn()) || reducer;\n    });\n    return retObj;\n}\n\n/**\n * main function which perform the group-by operations which reduce the measures value is the\n * fields are common according to the reducer function provided\n * @param  {DataModel} dataModel the dataModel to worked\n * @param  {Array} fieldArr  fields according to which the groupby should be worked\n * @param  {Object|Function} reducers  reducers function\n * @param {DataModel} existingDataModel Existing datamodel instance\n * @return {DataModel} new dataModel with the group by\n */\nfunction groupBy (dataModel, fieldArr, reducers, existingDataModel) {\n    const sFieldArr = getFieldArr(dataModel, fieldArr);\n    const reducerObj = getReducerObj(dataModel, reducers);\n    const fieldStore = dataModel.getFieldspace();\n    const fieldStoreObj = fieldStore.fieldsObj();\n    const dbName = fieldStore.name;\n    const dimensionArr = [];\n    const measureArr = [];\n    const schema = [];\n    const hashMap = {};\n    const data = [];\n    let newDataModel;\n\n    // Prepare the schema\n    Object.entries(fieldStoreObj).forEach(([key, value]) => {\n        if (sFieldArr.indexOf(key) !== -1 || reducerObj[key]) {\n            schema.push(extend2({}, value.schema()));\n\n            switch (value.schema().type) {\n            case FieldType.MEASURE:\n                measureArr.push(key);\n                break;\n            default:\n            case FieldType.DIMENSION:\n                dimensionArr.push(key);\n            }\n        }\n    });\n    // Prepare the data\n    let rowCount = 0;\n    rowDiffsetIterator(dataModel._rowDiffset, (i) => {\n        let hash = '';\n        dimensionArr.forEach((_) => {\n            hash = `${hash}-${fieldStoreObj[_].partialField.data[i]}`;\n        });\n        if (hashMap[hash] === undefined) {\n            hashMap[hash] = rowCount;\n            data.push({});\n            dimensionArr.forEach((_) => {\n                data[rowCount][_] = fieldStoreObj[_].partialField.data[i];\n            });\n            measureArr.forEach((_) => {\n                data[rowCount][_] = [fieldStoreObj[_].partialField.data[i]];\n            });\n            rowCount += 1;\n        } else {\n            measureArr.forEach((_) => {\n                data[hashMap[hash]][_].push(fieldStoreObj[_].partialField.data[i]);\n            });\n        }\n    });\n\n    // reduction\n    let cachedStore = {};\n    let cloneProvider = () => dataModel.detachedRoot();\n    data.forEach((row) => {\n        const tuple = row;\n        measureArr.forEach((_) => {\n            tuple[_] = reducerObj[_](row[_], cloneProvider, cachedStore);\n        });\n    });\n    if (existingDataModel) {\n        existingDataModel.__calculateFieldspace();\n        newDataModel = existingDataModel;\n    }\n    else {\n        newDataModel = new DataModel(data, schema, { name: dbName });\n    }\n    return newDataModel;\n}\n\nexport { groupBy, getFieldArr, getReducerObj };\n","import { rowDiffsetIterator } from './row-diffset-iterator';\n\nconst generateBuckets = (binSize, start, end) => {\n    const buckets = [];\n    let next = start;\n\n    while (next < end) {\n        buckets.push(next);\n        next += binSize;\n    }\n    buckets.push(next);\n\n    return buckets;\n};\n\nconst findBucketRange = (bucketRanges, value) => {\n    let leftIdx = 0;\n    let rightIdx = bucketRanges.length - 1;\n    let midIdx;\n    let range;\n\n    // Here use binary search as the bucketRanges is a sorted array\n    while (leftIdx <= rightIdx) {\n        midIdx = leftIdx + Math.floor((rightIdx - leftIdx) / 2);\n        range = bucketRanges[midIdx];\n\n        if (value >= range.start && value < range.end) {\n            return range;\n        } else if (value >= range.end) {\n            leftIdx = midIdx + 1;\n        } else if (value < range.start) {\n            rightIdx = midIdx - 1;\n        }\n    }\n\n    return null;\n};\n\n /**\n  * Creates the bin data from input measure field and supplied configs.\n  *\n  * @param {Measure} measureField - The Measure field instance.\n  * @param {string} rowDiffset - The datamodel rowDiffset values.\n  * @param {Object} config - The config object.\n  * @return {Object} Returns the binned data and the corresponding bins.\n  */\nexport function createBinnedFieldData (measureField, rowDiffset, config) {\n    let { buckets, binsCount, binSize, start, end } = config;\n    const [dMin, dMax] = measureField.domain();\n\n    if (!buckets) {\n        start = (start !== 0 && (!start || start > dMin)) ? dMin : start;\n        end = (end !== 0 && (!end || end < dMax)) ? (dMax + 1) : end;\n\n        if (binsCount) {\n            binSize = Math.ceil(Math.abs(end - start) / binsCount);\n        }\n\n        buckets = generateBuckets(binSize, start, end);\n    }\n\n    if (buckets[0] > dMin) {\n        buckets.unshift(dMin);\n    }\n    if (buckets[buckets.length - 1] <= dMax) {\n        buckets.push(dMax + 1);\n    }\n\n    const bucketRanges = [];\n    for (let i = 0; i < buckets.length - 1; i++) {\n        bucketRanges.push({\n            start: buckets[i],\n            end: buckets[i + 1]\n        });\n    }\n\n    const binnedData = [];\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const datum = measureField.partialField.data[i];\n        if (datum === null) {\n            binnedData.push(null);\n            return;\n        }\n\n        const range = findBucketRange(bucketRanges, datum);\n        binnedData.push(`${range.start}-${range.end}`);\n    });\n\n    return { binnedData, bins: buckets };\n}\n","import { fnList } from '../operator/group-by-function';\n\nexport const { sum, avg, min, max, first, last, count, std: sd } = fnList;\n","import DataModel from './datamodel';\nimport {\n  compose,\n  bin,\n  select,\n  project,\n  groupby as groupBy,\n  calculateVariable,\n  sort,\n  crossProduct,\n  difference,\n  naturalJoin,\n  leftOuterJoin,\n  rightOuterJoin,\n  fullOuterJoin,\n  union\n} from './operator';\nimport * as Stats from './stats';\nimport * as enums from './enums';\nimport { DateTimeFormatter } from './utils';\nimport { DataFormat, FilteringMode } from './constants';\nimport pkg from '../package.json';\n\nDataModel.Operators = {\n    compose,\n    bin,\n    select,\n    project,\n    groupBy,\n    calculateVariable,\n    sort,\n    crossProduct,\n    difference,\n    naturalJoin,\n    leftOuterJoin,\n    rightOuterJoin,\n    fullOuterJoin,\n    union\n};\nDataModel.Stats = Stats;\nObject.assign(DataModel, enums);\nDataModel.DateTimeFormatter = DateTimeFormatter;\nDataModel.DataFormat = DataFormat;\nDataModel.FilteringMode = FilteringMode;\nDataModel.version = pkg.version;\n\nexport default DataModel;\n","\n/**\n * DataModel's opearators are exposed as composable functional operators as well as chainable operators. Chainable\n * operators are called on the instances of {@link Datamodel} and {@link Relation} class.\n *\n * Those same operators can be used as composable operators from `DataModel.Operators` namespace.\n *\n * All these operators have similar behaviour. All these operators when called with the argument returns a function\n * which expects a DataModel instance.\n *\n * @public\n * @module Operators\n * @namespace DataModel\n */\n\n/**\n * This is functional version of selection operator. {@link link_to_selection | Selection} is a row filtering operation.\n * It takes {@link SelectionPredicate | predicate} for filtering criteria and returns a function.\n * The returned function is called with the DataModel instance on which the action needs to be performed.\n *\n * {@link SelectionPredicate} is a function which returns a boolean value. For selection opearation the selection\n * function is called for each row of DataModel instance with the current row passed as argument.\n *\n * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n * of rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * [Warn] Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * [Error] `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @example\n * const select = DataModel.Operators.select;\n * usaCarsFn = select(fields => fields.Origin.value === 'USA');\n * usaCarsDm = usaCarsFn(dm);\n * console.log(usaCarsDm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {SelectionPredicate} selectFn - Predicate funciton which is called for each row with the current row\n *      ```\n *          function (row, i)  { ... }\n *      ```\n * @param {Object} [config] - The configuration object to control the inclusion exclusion of a row in resultant\n *      DataModel instance\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const select = (...args) => dm => dm.select(...args);\n\n/**\n * This is functional version of projection operator. {@link link_to_projection | Projection} is a column filtering\n * operation.It expects list of fields name and either include those or exclude those based on {@link FilteringMode} on\n * the  resultant variable.It returns a function which is called with the DataModel instance on which the action needs\n * to be performed.\n *\n * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n * @param {Object} [config] - An optional config to control the creation of new DataModel\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const project = (...args) => dm => dm.project(...args);\n\n/**\n * This is functional version of binnig operator. Binning happens on a measure field based on a binning configuration.\n * Binning in DataModel does not aggregate the number of rows present in DataModel instance after binning, it just adds\n * a new field with the binned value. Refer binning {@link example_of_binning | example} to have a intuition of what\n * binning is and the use case.\n *\n * Binning can be configured by\n * - providing custom bin configuration with non uniform buckets\n * - providing bin count\n * - providing each bin size\n *\n * When custom buckets are provided as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const buckets = {\n *      start: 30\n *      stops: [80, 100, 110]\n *  };\n *  const config = { buckets, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(dm);\n *\n * @text\n * When `binCount` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binCount: 5, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @text\n * When `binSize` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binSize: 200, name: 'binnedHorsepower' }\n *  const binnedDm = dataModel.bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {String} name Name of measure which will be used to create bin\n * @param {Object} config Config required for bin creation\n * @param {Array.<Number>} config.bucketObj.stops Defination of bucket ranges. Two subsequent number from arrays\n *      are picked and a range is created. The first number from range is inclusive and the second number from range\n *      is exclusive.\n * @param {Number} [config.bucketObj.startAt] Force the start of the bin from a particular number.\n *      If not mentioned, the start of the bin or the lower domain of the data if stops is not mentioned, else its\n *      the first value of the stop.\n * @param {Number} config.binSize Bucket size for each bin\n * @param {Number} config.binCount Number of bins which will be created\n * @param {String} config.name Name of the new binned field to be created\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const bin = (...args) => dm => dm.bin(...args);\n\n/**\n * This is functional version of `groupBy` operator.Groups the data using particular dimensions and by reducing\n * measures. It expects a list of dimensions using which it projects the datamodel and perform aggregations to reduce\n * the duplicate tuples. Refer this {@link link_to_one_example_with_group_by | document} to know the intuition behind\n * groupBy.\n *\n * DataModel by default provides definition of few {@link reducer | Reducers}.\n * {@link ReducerStore | User defined reducers} can also be registered.\n *\n * This is the chained implementation of `groupBy`.\n * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n *\n * @example\n * const groupBy = DataModel.Operators.groupBy;\n * const groupedFn = groupBy(['Year'], { horsepower: 'max' } );\n * groupedDM = groupByFn(dm);\n *\n * @public\n *\n * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n *      schema of the variable.\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const groupBy = (...args) => dm => dm.groupBy(...args);\n\n/**\n * Enables composing operators to run multiple operations and save group of operataion as named opration on a DataModel.\n * The resulting DataModel will be the result of all the operation provided. The operations provided will be executed in\n * a serial manner ie. result of one operation will be the input for the next operations (like pipe operator in unix).\n *\n * Suported operations in compose are\n * - `select`\n * - `project`\n * - `groupBy`\n * - `bin`\n * - `compose`\n *\n * @example\n * const compose = DataModel.Operators.compose;\n * const select = DataModel.Operators.select;\n * const project = DataModel.Operators.project;\n *\n * let composedFn = compose(\n *    select(fields => fields.netprofit.value <= 15),\n *    project(['netprofit', 'netsales']));\n *\n * const dataModel = new DataModel(data1, schema1);\n *\n * let composedDm = composedFn(dataModel);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<Operators>} operators: An array of operation that will be applied on the\n * datatable.\n *\n * @returns {DataModel} Instance of resultant DataModel\n */\nexport const compose = (...operations) =>\n    (dm, config = { saveChild: true }) => {\n        let currentDM = dm;\n        let frstChild;\n        const derivations = [];\n        const saveChild = config.saveChild;\n\n        operations.forEach((operation) => {\n            currentDM = operation(currentDM);\n            derivations.push(...currentDM._derivation);\n            if (!frstChild) {\n                frstChild = currentDM;\n            }\n        });\n\n        saveChild && currentDM.addParent(dm, derivations);\n        if (derivations.length > 1) {\n            frstChild.dispose();\n        }\n\n        return currentDM;\n    };\n","/**\n * Wrapper on calculateVariable() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const calculateVariable = (...args) => dm => dm.calculateVariable(...args);\n\n/**\n * Wrapper on sort() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const sort = (...args) => dm => dm.sort(...args);\n","import { crossProduct } from './cross-product';\nimport { naturalJoinFilter } from './natural-join-filter-function';\n\nexport function naturalJoin (dataModel1, dataModel2) {\n    return crossProduct(dataModel1, dataModel2, naturalJoinFilter(dataModel1, dataModel2), true);\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hyperdis\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hyperdis\"] = factory();\n\telse\n\t\troot[\"hyperdis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import {\n    pullableRecent,\n    pullableEnd\n} from './utils';\n\nexport default class ElectricNode {\n    constructor () {\n        this.edges = [];\n        this.listeners = {\n            nextFrame: [],\n            currentFrame: []\n        };\n    }\n\n    addEdges (...nodes) {\n        this.edges.push(...nodes);\n        return this;\n    }\n\n    regListenerForCurrFrame (fn) {\n        const lstnrs = this.listeners.currentFrame;\n        let index = lstnrs.push(pullableRecent(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.currentFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    regListenerForNextFrame (fn) {\n        const lstnrs = this.listeners.nextFrame;\n        let index = lstnrs.push(pullableEnd(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.nextFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    hasNextFrameListener () {\n        return !!this.listeners.nextFrame.length;\n    }\n}\n","export default class GraphNode {\n    constructor (name, qualifiedName, options) {\n        /* istanbul ignore next */options = options || {};\n        this.name = name;\n        this.qualifiedName = qualifiedName;\n        this.edges = [];\n        this.outgoingEdges = [];\n        this._seed = null;\n        this.requireResolve = true;\n        this.retriever = options.retriever;\n        this.history = [];\n        this.resolver = null;\n        this.electricEdges = [];\n    }\n\n    addDependencies (...dep) {\n        this.edges.push(...dep);\n        dep.forEach(entry => entry.outgoingEdges.push(this));\n        return this;\n    }\n\n    addElectricNode (node) {\n        this.electricEdges.push(node);\n        return this;\n    }\n\n    get seed () {\n        return this._seed;\n    }\n\n    set seed (value) {\n        this._seed = value;\n        this.requireResolve = true;\n        return this;\n    }\n\n    resolve () {\n        this.seed = this.resolver(...this.retrieveDetails());\n        this.history.push(this.seed);\n        this.requireResolve = false;\n        return this;\n    }\n\n    retrieveDetails () {\n        if (this.edges.length === 0) {\n            return [{\n                name: this.name,\n                qualifiedName: this.qualifiedName,\n                value: this.seed\n            }];\n        }\n        return this.retriever(...this.edges.map(edge => edge.qualifiedName));\n    }\n\n    repeatHead () {\n        const\n            history = this.history,\n            head = history[history.length - 1];\n        // @todo- Akash, write test case if history.length === 0 to pass code coverage\n        if (history.length === 0) {\n            return this;\n        }\n        history.push(head);\n        return this;\n    }\n\n    flush () {\n        const hist = this.history,\n            head = hist[hist.length - 1];\n        hist.length = 0;\n        hist.push(head);\n        return this;\n    }\n\n    isRoot () {\n        return this.name === null;\n    }\n}\n","import {\n    isSimpleObject,\n    resolver,\n    // upstreamNodes,\n    flat,\n    resolveDependencyOrder,\n    getUpstreamNodes,\n    ForeignSet,\n    fetch,\n    CustomResolver,\n    scheduler\n} from './utils';\nimport Node from './graph-node';\nimport ElectricNode from './electric-node';\n\nexport default class Graph {\n    constructor () {\n        this.qualifiedNodeMap = {};\n        this.retriever = fetch(this.qualifiedNodeMap);\n        this.root = new Node(null, null, { retriever: this.retriever });\n        this.root.resolver = resolver.accumulate;\n\n        this._wholeSet = null;\n        this._propagate = true;\n        this.propagationOverride = {\n            currentFrameListeners: false,\n            nextFrameListeners: false\n        };\n\n        this._schedule = scheduler((payload) => {\n            let qname;\n            for (qname in payload.flushTarget) {\n                if (!({}).hasOwnProperty.call(this.qualifiedNodeMap, qname)) {\n                    return;\n                }\n                this.qualifiedNodeMap[qname].flush();\n            }\n        });\n    }\n\n    createNodesFrom (obj, mount) {\n        let val,\n            resolveReqList;\n        const qualifiedNodeMap = this.qualifiedNodeMap,\n            root = this.root,\n            retriever = this.retriever;\n\n        (function rec (objn, qualifiedName, history) {\n            let key,\n                qname,\n                perv,\n                node;\n\n            for (key in objn) {\n                if (!({}).hasOwnProperty.call(objn, key)) {\n                    continue;\n                }\n                qname = `${qualifiedName}${key}`;\n                node = new Node(key, qname, { retriever });\n                qualifiedNodeMap[qname] = node;\n\n                if ((perv = history.perv) !== undefined) {\n                    perv.addDependencies(node);\n                } else {\n                    // top most level entries\n                    root.addDependencies(node);\n                }\n\n                if (isSimpleObject(val = objn[key])) {\n                    rec(val, `${qualifiedName}${key}.`, { perv: node });\n                    node.resolver = resolver.accumulate;\n                } else if (val instanceof CustomResolver) {\n                    node.resolver = val.get();\n                    node.addDependencies(...val.getDependencies().map(qname => qualifiedNodeMap[qname]));\n                } else {\n                    node.resolver = resolver.identity;\n                    node.seed = val;\n                    // node.resolve();\n                }\n            }\n        }(obj, mount === null ? '' : `${mount}.`, {\n            perv: qualifiedNodeMap[mount]\n        }));\n\n        this._wholeSet = new ForeignSet(Object.keys(this.qualifiedNodeMap));\n\n        // Recalculate the model without firing the listeners\n        // @todo selective branch resolve. Currently resolve gets called even for a branch which was updated\n        resolveReqList = this.constructor.getResolvedList(root).concat(root).filter(node => node.requireResolve);\n        resolveReqList.forEach(node => node.resolve());\n        getUpstreamNodes(resolveReqList).forEach(node => node.resolve());\n        return this;\n    }\n\n    getNodeValue (prop) {\n        if (prop in this.qualifiedNodeMap) {\n            return this.qualifiedNodeMap[prop].seed;\n        }\n        return undefined;\n    }\n\n    createElectricNodeOf (props, fnSpec) {\n        const nodes = props.map(prop => this.qualifiedNodeMap[prop]),\n            eNode = new ElectricNode().addEdges(...nodes);\n\n        nodes.forEach(node => node.addElectricNode(eNode));\n        return eNode[`regListenerFor${fnSpec.type}`](fnSpec.fn);\n    }\n\n    update (...params) {\n        let changedSet,\n            upstreamNodes;\n        const\n            electricEdges = [],\n            nodes = params.map((entry) => {\n                entry[0].seed = entry[1];\n                return entry[0];\n            });\n        nodes.forEach(node => node.resolve());\n        electricEdges.push(...flat(...nodes.map(node => node.electricEdges)));\n        changedSet = new ForeignSet(nodes.map(node => node.qualifiedName));\n\n        if (!this._propagate) {\n            this.__execUniqueElectricEdges(electricEdges);\n            this._propagate = true;\n            return this;\n        }\n\n        upstreamNodes = getUpstreamNodes(nodes);\n        upstreamNodes.forEach(upstreamNode => upstreamNode.resolve());\n        changedSet.append(upstreamNodes.map(node => node.qualifiedName));\n        electricEdges.push(...flat(...upstreamNodes.map(node => node.electricEdges)));\n\n        this.__execUniqueElectricEdges(Array.from(new Set(electricEdges)), changedSet);\n        return this;\n    }\n\n    __execUniqueElectricEdges (electricEdges, changedSet) {\n        const\n            cfLstnrs = [], // current frame listeners\n            nfLstnrs = []; // next frame listeners\n        if (changedSet) {\n            const\n                differenceSet = ForeignSet.difference(this._wholeSet, changedSet),\n                entries = differenceSet.toArray();\n\n            entries.forEach(entry => this.qualifiedNodeMap[entry].repeatHead());\n        }\n\n        electricEdges.forEach((e) => {\n            cfLstnrs.push(...e.listeners.currentFrame);\n        });\n        electricEdges.forEach((e) => {\n            nfLstnrs.push(...e.listeners.nextFrame);\n        });\n\n        !this.propagationOverride.currentFrameListeners && cfLstnrs.forEach(fn => fn());\n        !this.propagationOverride.nextFrameListeners && this._schedule(nfLstnrs, { flushTarget: changedSet });\n        this.resetPropagationOverride();\n        return this;\n    }\n\n    resetNodeValue (...qnames) {\n        const nodes = qnames.map(qname => this.qualifiedNodeMap[qname]),\n            args = nodes.map(node => [node, node.seed]);\n        this.update(...args);\n        return this;\n    }\n\n    static getResolvedList (node) {\n        const resolved = [];\n        resolveDependencyOrder(node, resolved, {});\n        return resolved;\n    }\n\n    stopPropagation () {\n        this._propagate = false;\n        return this;\n    }\n\n    resetPropagationOverride () {\n        this.propagationOverride.currentFrameListeners = false;\n        this.propagationOverride.nextFrameListeners = false;\n        return this;\n    }\n\n    setPropagationOverride (key) {\n        this.propagationOverride[`${key}Listeners`] = true;\n        return this;\n    }\n\n    getNodeFromQualifiedName (qname) {\n        return this.qualifiedNodeMap[qname];\n    }\n}\n","import Model from './model';\n\nexport default Model;\n","import Graph from './graph';\nimport { CustomResolver, fetchAggregator } from './utils';\n\n/**\n * The container class for Hyperdis. Hyperdis is an enabler for observable object with few interesting features like,\n * calculated property, next frame and same frame listeners, multiple listeners etc with a dependency resolving system.\n * It internally uses a graph to hold the hierarchial relationship of a object. Model is merely a container which\n * ties all the components together.\n *\n * @todo Circular dependency detection is not present\n *\n * @example check src/index.spec.js\n * @class\n */\nclass Model {\n    constructor () {\n        this._graph = new Graph();\n        this._lockFlag = false;\n        this._reqQ = [];\n    }\n\n    /**\n     * Static method to create and init the model with an observable seed\n     *\n     * @param {Object} obj The target object which is required to be made observable\n     * @return {Model} instance of the observable object model\n     */\n    static create (obj) {\n        return new Model()._addPropInModel(null, obj);\n    }\n\n    /**\n     * Appends more observable property on the already observable instance. This mutates the original model.\n     *\n     * This function works in two mode. One being\n     * @param {String} mountPoint the property on which the new set of properties will be mounted. If its a nested\n     *                          property then the mountPoint has to be written such a way so it feels like you are\n     *                          accessing the object. If the mount point is not found then he obeservables are added in\n     *                          the root.\n     * @param {Object} The target object which is required to be made observable\n     *\n     * Another being\n     * @param {Object} The target object which is required to be made observable\n     *\n     * @return {Model} instance of the observable object model\n     */\n    append (...params) {\n        let mountPoint,\n            obj;\n\n        if (params.length === 1) {\n            mountPoint = null;\n            obj = params[0];\n        } else {\n            mountPoint = params[0];\n            obj = params[1];\n        }\n\n        this._addPropInModel(mountPoint, obj);\n        return this;\n    }\n\n    /**\n     * Creates a calculated variable from existing variable. This variable can't be updated from outside.\n     * @param {string} mountpoint property path on which the new variable will be placed\n     * @param {string} name name of the variable. If the variable could have hierarchy like `limits.start`\n     * @param {Function} fn funtion where the dependent variables are injected based on the dependency requirement\n     */\n    calculatedProp (...params) {\n        let calculationConfig,\n            customResolver,\n            varName,\n            mount,\n            fetchFn;\n\n        if (params.length > 2) {\n            mount = params[0];\n            varName = params[1];\n            fetchFn = params[2];\n        } else {\n            mount = null;\n            varName = params[0];\n            fetchFn = params[1];\n        }\n\n        calculationConfig = fetchFn(fetchAggregator);\n        customResolver = new CustomResolver(calculationConfig.fn);\n        customResolver.addDependencies(...calculationConfig.dependencies);\n\n        this._addPropInModel(mount, { [varName]: customResolver });\n        return this;\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    _addPropInModel (mountPoint, obj) {\n        this._graph.createNodesFrom(obj, mountPoint);\n        return this;\n    }\n\n    /**\n     * Register a listener in the current frame when a property or group of properties is changed.\n     *\n     * @example\n     * This function takes a single or group of property and handler which is called when any of the properties are\n     * changed.\n     * When a single property is changed the handler is called with two parameter, what was the old value of the state\n     * property and what is the new value.\n     * myState.on('range.start', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 9);\n     * // Output\n     * Value before prop change 1\n     * Value after prop change 9\n     *\n     * If a handler is registered on change of a property which has another state property as value, then the handler\n     * gets called whenever any state property connected to it gets changed\n     *\n     * myState.on('range', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 10);\n     * myState.prop('range.type.absolute', false);\n     *\n     * // Output\n     * Value before prop change\n     * range {\n     *      start: 9,\n     *      end: 5,\n     *      type: {\n     *          absolute: true\n     *      }\n     * }\n     * Value after prop change\n     * range: {\n     *      start: 10,\n     *      end: 5,\n     *      type: {\n     *          absolute: false\n     *      }\n     * }\n     * If a handler is registered with more than one property change then, the handler is called when any of the\n     * properties gets changed. In this cast the handler is called with more than one parameter: each for one state\n     * property which is registered for listening. Each parameter is of type array containing [oldValue, newValue]\n     *\n     * myState.on('range.start', 'range.end', (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * myState.prop('range.start', 12);\n     *\n     * // Output\n     * Start [10, 12]\n     * End [5, 5]\n     *\n     * myState.prop('range.end', 7);\n     *\n     * // Output\n     * Start [12, 12]\n     * End [5, 7]\n     *\n     * The on returns a function which is when called the listener registered gets unregistered\n     *\n     * let unsub = myState.on(['range.start', 'range.end'], (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * // Unsubscribe\n     * unsub()\n     *\n     * On takes an optional boolean value as the last parameter, which if passed as a true value the handler gets called\n     * during registration itself.\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    on (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed in the current stack frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'CurrFrame',\n                fn\n            });\n\n        if (instantCall) {\n            // Bar current next frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('nextFrame').resetNodeValue(...props);\n        }\n        return unsub;\n    }\n\n    /**\n     * Register a listener for the next frame when a property or group of properties is changed.\n     *\n     * @example\n     * See the examples for the on listener\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties. Here the oldvalue is last value of the last frame\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    next (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed at the tick of next animation frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'NextFrame',\n                fn\n            });\n\n        // @todo check support for this from the graph side\n        if (instantCall) {\n            // Bar current frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('currentFrame').resetNodeValue(...props);\n        }\n\n        return unsub;\n    }\n\n    /**\n     * Lock queues the request of property change and releases the change when unlock is called. This is helpful when\n     * multiple property is getting called and the model listeners are to be fired once at the end of update.\n     *\n     * @return {Model} instance of the model\n     */\n    lock () {\n        this._lockFlag = true;\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * Unlock unleashes the change done after the lock was called.\n\n     * @return {Model} instance of the model\n     */\n    unlock () {\n        this._lockFlag = false;\n        this.setProp(...this._reqQ);\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * This acts as getter and setter. If the function is called by passing only one argument, it retrieve the value\n     * associated with the property. If the same function is called using two parameters, first one being the property\n     * and second one being the value, then the value is set for the property and the handlers are called (if any)\n     * which got registered using the on function\n     *\n     * Getter\n     * @param {string} prop property path whose value to be retrieved\n     * @return {Object} value of the property at the time of call\n     *\n     * Setter\n     * @param {string} property property path whose value to be ser\n     * @return {Model} instance of the model\n     */\n    prop (...params) {\n        let prop,\n            val,\n            len;\n\n        switch (len = params.length) {\n        case 1:\n            prop = params[0];\n            break;\n\n        case 2:\n            prop = params[0];\n            val = params[1];\n            break;\n\n        default:\n            return this;\n        }\n\n        if (len === 2) {\n            this._lockFlag ? this._reqQ.push([prop, val]) : this.setProp([prop, val]);\n            return this;\n        }\n\n        return this._graph.getNodeValue(prop);\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    setProp (...props) {\n        // Filter out the calculated variables, so that it cant be changed from outside\n        // @todo if a node is not leafValue, and change is called, ignore it too\n        // props = props.filter(prop => !(VirtualObj.walkTill(prop[0].split('.'), this._vObj).leafValue()\n        //     instanceof CalculatedVar));\n\n        if (props.length === 0) {\n            return this;\n        }\n\n        this._graph.update(...props.map(prop => [this._graph.getNodeFromQualifiedName(prop[0]), prop[1]]));\n        return this;\n    }\n\n    /**\n     * Retrieves the graph representation of the object\n     * @return {Graph} instance of the graph associated to the model\n     */\n    graph () {\n        return this._graph;\n    }\n\n    /**\n     * Get serialized data from the model\n     *\n     * @return {Object} Serialized data\n     */\n    serialize () {\n        return this._graph.root.seed;\n    }\n}\n\nexport default Model;\n","/* global window */\n\nimport ForeignSet from './set';\n\nconst\n    isSimpleObject = (obj) => {\n        let token;\n        if (typeof obj === 'object') {\n            if (obj === null) { return false; }\n            token = Object.prototype.toString.call(obj);\n            if (token === '[object Object]') {\n                return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n            }\n        }\n        return false;\n    },\n    minMsThreshold = 16,\n    /* istanbul ignore next */win = typeof window === 'undefined' ? (this || {}) : window,\n    /* istanbul ignore next */ reqAnimFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame ||\n        win.mozRequestAnimationFrame || win.oRequestAnimationFrame ||\n        win.msRequestAnimationFrame ||\n        function (callback) {\n            setTimeout(callback, minMsThreshold);\n        },\n\n    getTimeBasedId = () => {\n        if (getTimeBasedId.__lastTime === new Date().getTime()) {\n            return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n        }\n\n        getTimeBasedId.__id = 0;\n        getTimeBasedId.__lastTime = new Date().getTime();\n        return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n    },\n    pullableRecent = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const\n                    hist = node.history,\n                    l = hist.length - 1;\n                return [hist[l - 1 < 0 ? 0 : l - 1], hist[l]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    pullableEnd = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const hist = node.history;\n                return [hist[0], hist[hist.length - 1]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    unique = fns => fns\n                    .reduce((store, fn) => {\n                // @warn function with side effect, it mutates the store passed during initialization\n                        if (fn.__id in store.map) {\n                            return store;\n                        }\n\n                        store.map[fn.__id] = 1;\n                        store.unique.push(fn);\n\n                        return store;\n                    }, { map: {}, unique: [] })\n                    .unique,\n    compose = fns => () => {\n        fns.forEach(fn => fn());\n    },\n    flat = (...params) => {\n        const res = [];\n        params.forEach(param => res.push(...param));\n        return res;\n    },\n    identityMap = arrays => arrays,\n    splitPathProp = (path) => {\n        const pathArr = path.split('.'),\n            len = pathArr.length;\n        return [pathArr.slice(0, len - 1), pathArr[len - 1]];\n    },\n    scheduler = (onFinishCallback) => {\n        let queue = [],\n            animationFrame = null;\n\n        onFinishCallback = onFinishCallback &&\n            typeof onFinishCallback === 'function' && onFinishCallback || (() => { });\n\n        return (listeners, payload) => {\n            [].push.apply(queue, listeners);\n            if (animationFrame === null) {\n                animationFrame = reqAnimFrame(() => {\n                    const tempQ = queue.slice(0);\n                    queue.length = 0;\n                    animationFrame = null;\n\n                    unique(tempQ).forEach(fn => fn());\n                    onFinishCallback(payload);\n                });\n            }\n        };\n    },\n    fetch = namedNode => (...params) => params.map((param) => {\n        const node = namedNode[param];\n        return {\n            name: node.name,\n            qualifiedName: node.qualifiedName,\n            value: node.seed\n        };\n    }),\n    fetchAggregator = (...params) => ({\n        dependencies: params.slice(0, params.length - 1),\n        fn: params[params.length - 1]\n    }),\n    getUpstreamNodes = (list) => {\n        let res = [];\n        const map = {};\n        list.forEach(node => map[node.qualifiedName] = -1);\n        function rec (arr) {\n            arr.forEach((node) => {\n                let qname,\n                    placedIndex,\n                    preArr,\n                    postArr;\n                if (!((qname = node.qualifiedName) in map)) {\n                    map[qname] = res.push(node) - 1;\n                } else {\n                    placedIndex = map[qname];\n                    if (placedIndex !== -1 && placedIndex !== res.length - 1) {\n                        // If not the last element, readjust the array so that the later dependency position is saved\n                        preArr = res.slice(0, placedIndex);\n                        postArr = res.slice(placedIndex + 1);\n                        res = preArr.concat(postArr);\n\n                        // reset the index in map\n                        postArr.forEach((elem, i) => map[elem.qualifiedName] = i + preArr.length);\n                        map[qname] = res.push(node) - 1;\n                    }\n                }\n                rec(node.outgoingEdges);\n            });\n        }\n        rec(list);\n        return res;\n    },\n    resolver = {\n        accumulate: (...params) => {\n            const resp = {};\n            params.forEach((nodeDetails) => {\n                Object.assign(resp, { [nodeDetails.name]: nodeDetails.value });\n            });\n            return resp;\n        },\n        identity: nodeDetails => nodeDetails.value\n    };\n\nfunction resolveDependencyOrder (node, resolved, resolveMap) {\n    let qname;\n    node.edges.forEach((neighbour) => {\n        resolveDependencyOrder(neighbour, resolved, resolveMap);\n    });\n\n    if (node.isRoot() || (qname = node.qualifiedName) in resolveMap) {\n        return;\n    }\n    resolved.push(node);\n    resolveMap[qname] = 1;\n}\n\nclass CustomResolver {\n    constructor (resolver) {\n        this.fn = resolver;\n        this.dep = [];\n    }\n\n    addDependencies(...dep) {\n        this.dep.push(...dep);\n        return this;\n    }\n\n    getDependencies () {\n        return this.dep;\n    }\n\n    get () {\n        return this.fn;\n    }\n}\n\nexport {\n    isSimpleObject,\n    scheduler,\n    compose,\n    flat,\n    identityMap,\n    pullableEnd,\n    pullableRecent,\n    unique,\n    splitPathProp,\n    resolver,\n    ForeignSet,\n    resolveDependencyOrder,\n    fetch,\n    fetchAggregator,\n    CustomResolver,\n    getUpstreamNodes\n};\n","const makeEntry = (arr, sCon) => {\n    arr.forEach((elem) => {\n        if (elem === undefined || elem === null) {\n            return;\n        }\n        sCon[elem] = 1;\n    });\n};\n\nexport default class ForeignSet {\n    constructor (arr) {\n        this._set = {};\n        makeEntry(arr, this._set);\n    }\n\n    append (arr) {\n        makeEntry(arr, this._set);\n        return this;\n    }\n\n    toArray () {\n        return Object.keys(this._set);\n    }\n\n    static difference (set1, set2) {\n        let key;\n        const filteredKeys = [],\n            s1 = set1._set,\n            s2 = set2._set;\n        for (key in s1) {\n            if (!({}).hasOwnProperty.call(s1, key)) {\n                continue;\n            }\n            if (key in s2) {\n                continue;\n            }\n            filteredKeys.push(key);\n        }\n        return new ForeignSet(filteredKeys);\n    }\n}\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar _containerManager = require('./container-manager');\n\nvar _containerManager2 = _interopRequireDefault(_containerManager);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    BLANK = '',\n    htmlSplCharSpace = { ' ': '&nbsp;' },\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\n/*\n * Create new instance of SmartLabelManager.\n *\n * SmartLabelManager controls the lifetime of the execution space where the text's metrics will be calculated.\n * This takes a string for a given style and returns the height, width.\n * If a bound box is defined it wraps the text and returns the wrapped height and width.\n * It allows to append ellipsis at the end if the text is truncated.\n *\n * @param {String | Number} id - Id of the instance. If the same id is passed, it disposes the old instance and\n *                              save the new one;\n * @param {String | HTMLElement} container - The id or the instance of the container where the intermediate dom\n *                              elements are to be attached. If not passed, it appends in div\n *\n * @param {Boolean} useEllipses - This decides if a ellipses to be appended if the text is truncated.\n * @param {Object} options - Control options\n *                          {\n *                              maxCacheLimit: No of letter to be cached. Default: 500.\n *                          }\n * @constructor\n */\nfunction SmartLabelManager(id, container, useEllipses, options) {\n    var wrapper,\n        prop,\n        max,\n        prevInstance,\n        isBrowserLess = false,\n        store = SmartLabelManager.store;\n\n    if (typeof id === 'undefined' || typeof id === 'object') {\n        return;\n    }\n\n    if (prevInstance = store[id]) {\n        prevInstance.dispose();\n    }\n\n    store[id] = this;\n    options = options || {};\n    options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n    if (typeof container === 'string') {\n        container = doc.getElementById(container);\n    }\n\n    wrapper = slLib.createContainer(container);\n    wrapper.innerHTML = slLib.testStrAvg;\n\n    if (documentSupport.isHeadLess || !documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth) {\n        isBrowserLess = true;\n    }\n\n    wrapper.innerHTML = '';\n    for (prop in slLib.parentContainerStyle) {\n        wrapper.style[prop] = slLib.parentContainerStyle[prop];\n    }\n\n    this.id = id;\n    this.parentContainer = wrapper;\n\n    this._containerManager = new _containerManager2['default'](wrapper, isBrowserLess, 10);\n    this._showNoEllipses = !useEllipses;\n    this._init = true;\n    this.style = {};\n    this.options = options;\n\n    this.setStyle();\n}\n\n/*\n * getSmartText returns the text separated by <br/> whenever a break is necessary. This is to recgonize one\n * generalized format independent of the implementation (canvas based solution, svg based solution). This method\n * converts the output of getSmartText().text to array of lines if the text is wrapped. It sets a named property\n * `lines` on the object passed as parameter.\n *\n * @param {Object} smartlabel - the object returned by getSmartText based on which line arr which to be formed.\n *\n * @return {Object} - The same object which was passed in the arguments. Also a named property `lines` is set.\n */\nSmartLabelManager.textToLines = function (smartlabel) {\n    smartlabel = smartlabel || {};\n\n    if (!smartlabel.text) {\n        smartlabel.text = '';\n    } else if (typeof smartlabel.text !== 'string') {\n        smartlabel.text = smartlabel.text.toString();\n    }\n\n    smartlabel.lines = smartlabel.text.split(/\\n|<br\\s*?\\/?>/ig);\n    return smartlabel;\n};\n\n// Saves all the instance created so far\nSmartLabelManager.store = {};\n\n// Calculates space taken by a character with an approximation value which is calculated by repeating the\n// character by string length times.\nSmartLabelManager.prototype._calCharDimWithCache = function (text, calculateDifference, length) {\n    if (!this._init) {\n        return false;\n    }\n\n    var size,\n        csArr,\n        tw,\n        twi,\n        cachedStyle,\n        asymmetricDifference,\n        maxAdvancedCacheLimit = this.options.maxCacheLimit,\n        container = this._container,\n        style = this.style || {},\n        cache = this._advancedCache || (this._advancedCache = {}),\n        advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []),\n        cacheName = text + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK),\n        cacheInitName = text + 'init' + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK);\n\n    htmlSplCharSpace[text] && (text = htmlSplCharSpace[text]);\n\n    if (!calculateDifference) {\n        asymmetricDifference = 0;\n    } else {\n        if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n            container.innerHTML = text.repeat ? text.repeat(length) : Array(length + 1).join(text); // jshint ignore:line\n            tw = container.offsetWidth;\n\n            container.innerHTML = text;\n            twi = container.offsetWidth;\n\n            asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n            advancedCacheKey.push(cacheInitName);\n            if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n                delete cache[advancedCacheKey.shift()];\n            }\n        }\n    }\n\n    if (cachedStyle = cache[cacheName]) {\n        csArr = cachedStyle.split(',');\n        return {\n            width: parseFloat(csArr[0], 10),\n            height: parseFloat(csArr[1], 10)\n        };\n    }\n\n    container.innerHTML = text;\n\n    size = {\n        height: container.offsetHeight,\n        width: container.offsetWidth + asymmetricDifference\n    };\n\n    cache[cacheName] = size.width + ',' + size.height;\n    advancedCacheKey.push(cacheName);\n    if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n    }\n\n    return size;\n};\n\n// Provide function to calculate the height and width based on the environment and available support from dom.\nSmartLabelManager.prototype._getWidthFn = function () {\n    var contObj = this._containerObj,\n        container = this._container,\n        svgText = contObj.svgText;\n\n    if (svgText) {\n        return function (str) {\n            var bbox, width;\n\n            svgText.textContent = str;\n            bbox = svgText.getBBox();\n            width = bbox.width - SVG_BBOX_CORRECTION;\n            if (width < 1) {\n                width = bbox.width;\n            }\n\n            return width;\n        };\n    } else {\n        return function (str) {\n            container.innerHTML = str;\n            return container.offsetWidth;\n        };\n    }\n};\n\n/*\n * Sets the style based on which the text's metrics to be calculated.\n *\n * @param {Object} style - The style object which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                      }\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.setStyle = function (style) {\n    if (!this._init) {\n        return this;\n    }\n\n    var sCont;\n\n    if (style === this.style && !this._styleNotSet) {\n        return;\n    }\n\n    if (!style) {\n        style = this.style;\n    }\n\n    slLib.setLineHeight(style);\n    this.style = style;\n\n    this._containerObj = sCont = this._containerManager.get(style);\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n\n    return this;\n};\n\n/*\n * Decides whether ellipses to be shown if the node is truncated\n *\n * @param {Boolean} useEllipses - decides if a ellipses to be appended if the text is truncated. Default: false\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n    if (!this._init) {\n        return this;\n    }\n    this._showNoEllipses = !useEllipses;\n    return this;\n};\n\n/*\n * Get wrapped or truncated text if a bound box is defined around it. The result text would be separated by <br/>\n * if wrapped\n *\n * @param {String} text - the subject text\n * @param {Number} maxWidth - width in px of the the bound box\n * @param {Number} maxHeight - height in px of the the bound box\n * @param {Boolean} noWrap - whether the text to be wrapped. Default false.\n *\n * @return {Object} - The metrics of the text bounded by the box\n *                  {\n *                      height : height of the wrapped text\n *                      width : width of the wrapped text\n *                      isTruncated : whether the text is truncated\n *                      maxHeight : Maximum height given\n *                      maxWidth : Maximum width given\n *                      oriText : Original text sent\n *                      oriTextHeight : Original text height\n *                      oriTextWidth : Original text width\n *                      text : SMART TEXT\n *                  }\n */\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var len,\n        trimStr,\n        tempArr,\n        tmpText,\n        maxWidthWithEll,\n        toolText,\n        oriWidth,\n        oriHeight,\n        newCharIndex,\n        nearestChar,\n        tempChar,\n        getWidth,\n        initialLeft,\n        initialTop,\n        getOriSizeImproveObj,\n        spanArr,\n        x,\n        y,\n        minWidth,\n        elem,\n        chr,\n        elemRightMostPoint,\n        elemLowestPoint,\n        lastBR,\n        removeFromIndex,\n        removeFromIndexForEllipses,\n        hasHTMLTag = false,\n        maxStrWidth = 0,\n        lastDash = -1,\n        lastSpace = -1,\n        lastIndexBroken = -1,\n        strWidth = 0,\n        strHeight = 0,\n        oriTextArr = [],\n        i = 0,\n        ellipsesStr = this._showNoEllipses ? '' : '...',\n        lineHeight = this._lineHeight,\n        context = this._context,\n        container = this._container,\n        sCont = this._containerObj,\n        ellipsesWidth = sCont.ellipsesWidth,\n        dotWidth = sCont.dotWidth,\n        characterArr = [],\n        dashIndex = -1,\n        spaceIndex = -1,\n        lastLineBreak = -1,\n        fastTrim = function fastTrim(str) {\n        str = str.replace(/^\\s\\s*/, '');\n        var ws = /\\s/,\n            i = str.length;\n        while (ws.test(str.charAt(i -= 1))) {/* jshint noempty:false */}\n        return str.slice(0, i + 1);\n    },\n        smartLabel = {\n        text: text,\n        maxWidth: maxWidth,\n        maxHeight: maxHeight,\n        width: null,\n        height: null,\n        oriTextWidth: null,\n        oriTextHeight: null,\n        oriText: text,\n        isTruncated: false\n    };\n\n    getWidth = this._getWidthFn();\n\n    // In some browsers, offsetheight of a single-line text is getting little (1 px) heigher value of the\n    // lineheight. As a result, smartLabel is unable to return single-line text.\n    // To fix this, increase the maxHeight a little amount. Hence maxHeight =  lineHeight * 1.2\n    if (maxHeight === lineHeight) {\n        maxHeight *= 1.2;\n    }\n\n    if (container) {\n        if (!documentSupport.isBrowserLess) {\n            hasHTMLTag = slLib.xmlTagRegEx.test(text);\n            if (!hasHTMLTag) {\n                // Due to support of <,> for xml we convert &lt;, &gt; to <,> respectively so to get the correct\n                // width it is required to convert the same before calculation for the new improve version of the\n                // get text width.\n                tmpText = text.replace(slLib.ltgtRegex, function (match) {\n                    return match === '&lt;' ? '<' : '>';\n                });\n                getOriSizeImproveObj = this.getOriSize(tmpText, true);\n\n                smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n                smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n            } else {\n                container.innerHTML = text;\n                smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n                smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n            }\n\n            if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n                smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n                smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n                return smartLabel;\n            }\n\n            if (lineHeight > maxHeight) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = 0;\n                smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n        }\n\n        // Calculate width with ellipses\n        text = fastTrim(text).replace(/(\\s+)/g, ' ');\n        maxWidthWithEll = this._showNoEllipses ? maxWidth : maxWidth - ellipsesWidth;\n\n        if (!hasHTMLTag) {\n            oriTextArr = text.split('');\n            len = oriTextArr.length;\n            trimStr = '', tempArr = [];\n            tempChar = oriTextArr[0];\n\n            if (this._cache[tempChar]) {\n                minWidth = this._cache[tempChar].width;\n            } else {\n                minWidth = getWidth(tempChar);\n                this._cache[tempChar] = { width: minWidth };\n            }\n\n            if (maxWidthWithEll > minWidth) {\n                tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split('');\n                i = tempArr.length;\n            } else if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            } else if (ellipsesStr) {\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            strWidth = getWidth(tempArr.join(''));\n            strHeight = this._lineHeight;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = smartLabel.oriText;\n                            smartLabel.width = getWidth(smartLabel.text);\n                            smartLabel.height = this._lineHeight;\n                            return smartLabel;\n                        }\n                    }\n                }\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = strWidth;\n                smartLabel.height = this._lineHeight;\n                return smartLabel;\n            } else {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (tempChar === ' ' && !context) {\n                        tempChar = '&nbsp;';\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            /** @todo use regular expressions for better performance. */\n                            lastSpace = text.substr(0, tempArr.length).lastIndexOf(' ');\n                            lastDash = text.substr(0, tempArr.length).lastIndexOf('-');\n                            if (lastSpace > lastIndexBroken) {\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                tempArr.splice(lastSpace, 1, '<br/>');\n                                lastIndexBroken = lastSpace;\n                                newCharIndex = lastSpace + 1;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === tempArr.length - 1) {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '<br/>-');\n                                } else {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '-<br/>');\n                                }\n                                lastIndexBroken = lastDash;\n                                newCharIndex = lastDash + 1;\n                            } else {\n                                tempArr.splice(tempArr.length - 1, 1, '<br/>' + oriTextArr[i]);\n                                lastLineBreak = tempArr.length - 2;\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastLineBreak + 1).join(''));\n                                lastIndexBroken = lastLineBreak;\n                                newCharIndex = i;\n                            }\n                            strHeight += this._lineHeight;\n                            if (strHeight > maxHeight) {\n                                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                                smartLabel.tooltext = smartLabel.oriText;\n                                // The max width among all the lines will be the width of the string.\n                                smartLabel.width = maxWidth;\n                                smartLabel.height = strHeight - this._lineHeight;\n                                return smartLabel;\n                            } else {\n                                maxStrWidth = max(maxStrWidth, strWidth);\n                                trimStr = null;\n                                nearestChar = slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                                strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n                                if (tempArr.length < newCharIndex + nearestChar) {\n                                    tempArr = tempArr.concat(text.substr(tempArr.length, newCharIndex + nearestChar - tempArr.length).split(''));\n                                    i = tempArr.length - 1;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                maxStrWidth = max(maxStrWidth, strWidth);\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = maxStrWidth;\n                smartLabel.height = strHeight;\n                return smartLabel;\n            }\n        } else {\n            toolText = text.replace(slLib.spanAdditionRegx, '$2');\n            text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n            text = text.replace(/(<br\\s*\\/*\\>)/g, '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>');\n\n            container.innerHTML = text;\n\n            spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n            for (x = 0, y = spanArr.length; x < y; x += 1) {\n                elem = spanArr[x];\n                //chech whether this span is temporary inserted span from it's class\n                if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n                    chr = elem.innerHTML;\n                    if (chr !== '') {\n                        if (chr === ' ') {\n                            spaceIndex = characterArr.length;\n                        } else if (chr === '-') {\n                            dashIndex = characterArr.length;\n                        }\n\n                        characterArr.push({\n                            spaceIdx: spaceIndex,\n                            dashIdx: dashIndex,\n                            elem: elem\n                        });\n                        oriTextArr.push(chr);\n                    }\n                }\n            }\n\n            i = 0;\n            len = characterArr.length;\n            minWidth = characterArr[0].elem.offsetWidth;\n\n            if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n\n                return smartLabel;\n            } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            initialLeft = characterArr[0].elem.offsetLeft;\n            initialTop = characterArr[0].elem.offsetTop;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n                        if (container.offsetWidth > maxWidth) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            } else {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    lastBR = null;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n\n                        if (elemRightMostPoint > maxWidth) {\n                            lastSpace = characterArr[i].spaceIdx;\n                            lastDash = characterArr[i].dashIdx;\n                            if (lastSpace > lastIndexBroken) {\n                                characterArr[lastSpace].elem.innerHTML = '<br/>';\n                                lastIndexBroken = lastSpace;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === i) {\n                                    // in case the overflowing character itself is the '-'\n                                    characterArr[lastDash].elem.innerHTML = '<br/>-';\n                                } else {\n                                    characterArr[lastDash].elem.innerHTML = '-<br/>';\n                                }\n                                lastIndexBroken = lastDash;\n                            } else {\n                                elem.parentNode.insertBefore(lastBR = doc.createElement('br'), elem);\n                            }\n\n                            //check whether this break made current element outside the area height\n                            if (elem.offsetHeight + elem.offsetTop > maxHeight) {\n                                //remove the lastly inserted line break\n                                if (lastBR) {\n                                    lastBR.parentNode.removeChild(lastBR);\n                                } else if (lastIndexBroken === lastDash) {\n                                    characterArr[lastDash].elem.innerHTML = '-';\n                                } else {\n                                    characterArr[lastSpace].elem.innerHTML = ' ';\n                                }\n                                removeFromIndex = i;\n                                //break the looping condition\n                                i = len;\n                            } else {\n                                removeFromIndexForEllipses = null;\n                            }\n                        }\n                    } else {\n                        //check whether this break made current element outside the area height\n                        if (elemLowestPoint > maxHeight) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            }\n\n            if (removeFromIndex < len) {\n                //set the trancated property of the smartlabel\n                smartLabel.isTruncated = true;\n\n                /** @todo is this really needed? */\n                removeFromIndexForEllipses = removeFromIndexForEllipses ? removeFromIndexForEllipses : removeFromIndex;\n\n                for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n                    elem = characterArr[i].elem;\n                    //chech whether this span is temporary inserted span from it's class\n                    elem.parentNode.removeChild(elem);\n                }\n\n                for (; i >= 0; i -= 1) {\n                    elem = characterArr[i].elem;\n                    if (slLib.classNameBrReg.test(elem.className)) {\n                        //chech whether this span is temporary inserted span from it's class\n                        elem.parentNode.removeChild(elem);\n                    } else {\n                        i = 0;\n                    }\n                }\n            }\n\n            //get the smart text\n            smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&');\n            if (smartLabel.isTruncated) {\n                smartLabel.text += ellipsesStr;\n                smartLabel.tooltext = toolText;\n            }\n        }\n\n        smartLabel.height = container.offsetHeight;\n        smartLabel.width = container.offsetWidth;\n\n        return smartLabel;\n    } else {\n        smartLabel.error = new Error('Body Tag Missing!');\n        return smartLabel;\n    }\n};\n\n/*\n * Get the height and width of a text.\n *\n * @param {String} text - Text whose metrics to be measured\n * @param {Boolean} Optional detailedCalculationFlag - this flag if set it calculates per letter position\n *                          information and returns it. Ideally you dont need it unless you want to post process the\n *                          string. And its an EXPENSIVE OPERATION.\n *\n * @return {Object} - If detailedCalculationFlag is set to true the returned object would be\n *                  {\n *                      height: height of the text\n *                      width: width of the text\n *                      detailObj: detail calculation of letters in the format {lettername: width}\n *                  }\n *                  If detailedCalculationFlag is set to false the returned object wont have the detailObj prop.\n */\nSmartLabelManager.prototype.getOriSize = function (text, detailedCalculationFlag) {\n    if (!this._init) {\n        return false;\n    }\n\n    var textArr,\n        letter,\n        lSize,\n        i,\n        l,\n        cumulativeSize = 0,\n        height = 0,\n        indiSizeStore = {};\n\n    if (!detailedCalculationFlag) {\n        return this._calCharDimWithCache(text);\n    }\n\n    // Calculate the width of every letter with an approximation\n    textArr = text.split('');\n    for (i = 0, l = textArr.length; i < l; i++) {\n        letter = textArr[i];\n        lSize = this._calCharDimWithCache(letter, true, textArr.length);\n        height = max(height, lSize.height);\n        cumulativeSize += lSize.width;\n        indiSizeStore[letter] = lSize.width;\n    }\n\n    return {\n        width: round(cumulativeSize),\n        height: height,\n        detailObj: indiSizeStore\n    };\n};\n\n/*\n * Dispose the container and object allocated by the smartlabel\n */\nSmartLabelManager.prototype.dispose = function () {\n    if (!this._init) {\n        return this;\n    }\n\n    this._containerManager && this._containerManager.dispose && this._containerManager.dispose();\n\n    delete this._container;\n    delete this._context;\n    delete this._cache;\n    delete this._containerManager;\n    delete this._containerObj;\n    delete this.id;\n    delete this.style;\n    delete this.parentContainer;\n    delete this._showNoEllipses;\n\n    return this;\n};\n\nexports['default'] = SmartLabelManager;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nvar lib = {\n\tinit: function init(win) {\n\t\tvar doc = win.document,\n\t\t    nav = win.navigator,\n\t\t    userAgent = nav.userAgent,\n\t\t    DIV = 'DIV',\n\t\t    ceil = Math.ceil,\n\t\t    floor = Math.floor,\n\t\t    containerInstanceCount = 0,\n\t\t    clsNameSpace = 'fusioncharts-smartlabel-',\n\t\t    containerClass = clsNameSpace + 'container',\n\t\t    classNameWithTag = clsNameSpace + 'tag',\n\t\t    classNameWithTagBR = clsNameSpace + 'br';\n\n\t\tlib = {\n\t\t\twin: win,\n\n\t\t\tcontainerClass: containerClass,\n\n\t\t\tclassNameWithTag: classNameWithTag,\n\n\t\t\tclassNameWithTagBR: classNameWithTagBR,\n\n\t\t\tmaxDefaultCacheLimit: 500,\n\n\t\t\tclassNameReg: new RegExp('\\b' + classNameWithTag + '\\b'),\n\n\t\t\tclassNameBrReg: new RegExp('\\b' + classNameWithTagBR + '\\b'),\n\n\t\t\tspanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n\n\t\t\tspanAdditionReplacer: '$1<span class=\"' + classNameWithTag + '\">$2</span>',\n\n\t\t\tspanRemovalRegx: new RegExp('\\\\<span[^\\\\>]+?' + classNameWithTag + '[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>', 'ig'),\n\n\t\t\txmlTagRegEx: new RegExp('<[^>][^<]*[^>]+>', 'i'),\n\n\t\t\tltgtRegex: /&lt;|&gt;/g,\n\n\t\t\tbrReplaceRegex: /<br\\/>/ig,\n\n\t\t\ttestStrAvg: 'WgI',\n\n\t\t\t// This style is applied over the parent smartlabel container. The container is kept hidden from the viewport\n\t\t\tparentContainerStyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '-9999em',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\tpadding: '0px',\n\t\t\t\twidth: '1px',\n\t\t\t\theight: '1px',\n\t\t\t\toverflow: 'hidden'\n\t\t\t},\n\n\t\t\t// All the style which might affect the text metrics\n\t\t\tsupportedStyle: {\n\t\t\t\tfont: 'font',\n\t\t\t\tfontFamily: 'font-family',\n\t\t\t\t'font-family': 'font-family',\n\t\t\t\tfontWeight: 'font-weight',\n\t\t\t\t'font-weight': 'font-weight',\n\t\t\t\tfontSize: 'font-size',\n\t\t\t\t'font-size': 'font-size',\n\t\t\t\tlineHeight: 'line-height',\n\t\t\t\t'line-height': 'line-height',\n\t\t\t\tfontStyle: 'font-style',\n\t\t\t\t'font-style': 'font-style'\n\t\t\t},\n\n\t\t\t// Get the support list for html the document where the text calcution is to be done.\n\t\t\tgetDocumentSupport: function getDocumentSupport() {\n\t\t\t\tvar childRetriverFn, childRetriverString, noClassTesting;\n\n\t\t\t\tif (doc.getElementsByClassName) {\n\t\t\t\t\tchildRetriverFn = 'getElementsByClassName';\n\t\t\t\t\tchildRetriverString = classNameWithTag;\n\t\t\t\t\tnoClassTesting = true;\n\t\t\t\t} else {\n\t\t\t\t\tchildRetriverFn = 'getElementsByTagName';\n\t\t\t\t\tchildRetriverString = 'span';\n\t\t\t\t\tnoClassTesting = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisIE: /msie/i.test(userAgent) && !win.opera,\n\t\t\t\t\thasSVG: Boolean(win.SVGAngle || doc.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n\t\t\t\t\tisHeadLess: new RegExp(' HtmlUnit').test(userAgent),\n\t\t\t\t\tisWebKit: new RegExp(' AppleWebKit/').test(userAgent),\n\t\t\t\t\tchildRetriverFn: childRetriverFn,\n\t\t\t\t\tchildRetriverString: childRetriverString,\n\t\t\t\t\tnoClassTesting: noClassTesting\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n    * Create a html div element and attach it with a parent. All the subsequent operations are performed\n    * by upding this dom tree only.\n    *\n    * @param {HTMLElement} - The html element where the newly created div is to be attached. If not passed,\n    *                      the new div is appended on the body.\n    */\n\t\t\tcreateContainer: function createContainer(containerParent) {\n\t\t\t\tvar body, container;\n\n\t\t\t\tif (containerParent && (containerParent.offsetWidth || containerParent.offsetHeight)) {\n\t\t\t\t\tif (containerParent.appendChild) {\n\t\t\t\t\t\tcontainerParent.appendChild(container = doc.createElement(DIV));\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbody = doc.getElementsByTagName('body')[0];\n\n\t\t\t\t\tif (body && body.appendChild) {\n\t\t\t\t\t\tcontainer = doc.createElement(DIV);\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\tcontainerInstanceCount += 1;\n\t\t\t\t\t\tbody.appendChild(container);\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Finds a approximate position where the text is to be broken\n\t\t\tgetNearestBreakIndex: function getNearestBreakIndex(text, maxWidth, sl) {\n\t\t\t\tif (!text || !text.length) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar difference,\n\t\t\t\t    getWidth = sl._getWidthFn(),\n\t\t\t\t    charLen = 0,\n\t\t\t\t    increment = 0,\n\t\t\t\t    oriWidth = getWidth(text),\n\t\t\t\t    avgWidth = oriWidth / text.length;\n\n\t\t\t\tdifference = maxWidth;\n\t\t\t\tcharLen = ceil(maxWidth / avgWidth);\n\n\t\t\t\tif (oriWidth < maxWidth) {\n\t\t\t\t\treturn text.length - 1;\n\t\t\t\t}\n\n\t\t\t\tif (charLen > text.length) {\n\t\t\t\t\tdifference = maxWidth - oriWidth;\n\t\t\t\t\tcharLen = text.length;\n\t\t\t\t}\n\n\t\t\t\twhile (difference > 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (difference < 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn charLen;\n\t\t\t},\n\n\t\t\t/*\n    * Determine lineheight of a text for a given style. It adds propery lineHeight to the style passed\n    *\n    * @param {Object} - The style based on which the text's metric needs to be calculated. The calculation happens\n    *                  based on fontSize property, if its not present a default font size is assumed.\n    *\n    * @return {Object} - The style that was passed with lineHeight as a named propery set on the object.\n    */\n\t\t\tsetLineHeight: function setLineHeight(styleObj) {\n\t\t\t\tvar fSize = styleObj.fontSize = styleObj.fontSize || '12px';\n\t\t\t\tstyleObj.lineHeight = styleObj.lineHeight || styleObj['line-height'] || parseInt(fSize, 10) * 1.2 + 'px';\n\t\t\t\treturn styleObj;\n\t\t\t}\n\t\t};\n\n\t\treturn lib;\n\t}\n};\n\nexports['default'] = lib;\nmodule.exports = exports['default'];","const Muze = require('./muze');\n\nmodule.exports = Muze.default ? Muze.default : Muze;\n","'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction ContainerManager(parentContainer, isBrowserLess, maxContainers) {\n    var svg;\n\n    maxContainers = maxContainers > 5 ? maxContainers : 5;\n    maxContainers = maxContainers < 20 ? maxContainers : 20;\n\n    this.maxContainers = maxContainers;\n    this.first = null;\n    this.last = null;\n    this.containers = {};\n    this.length = 0;\n    this.rootNode = parentContainer;\n\n    if (isBrowserLess) {\n        svg = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'height', '0');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'width', '0');\n        this.svgRoot = svg;\n        this.rootNode.appendChild(svg);\n    }\n}\n\nContainerManager.prototype.get = function (style) {\n    var diff,\n        key,\n        containerObj,\n        containers = this.containers,\n        len = this.length,\n        max = this.maxContainers,\n        keyStr = '';\n\n    for (key in slLib.supportedStyle) {\n        if (style[key] !== undefined) {\n            keyStr += slLib.supportedStyle[key] + ':' + style[key] + ';';\n        }\n    }\n\n    if (!keyStr) {\n        return false;\n    }\n\n    if (containerObj = containers[keyStr]) {\n        if (this.first !== containerObj) {\n            containerObj.prev && (containerObj.prev.next = containerObj.next);\n            containerObj.next && (containerObj.next.prev = containerObj.prev);\n            containerObj.next = this.first;\n            containerObj.next.prev = containerObj;\n            this.last === containerObj && (this.last = containerObj.prev);\n            containerObj.prev = null;\n            this.first = containerObj;\n        }\n    } else {\n        if (len >= max) {\n            diff = len - max + 1;\n            // +1 is to remove an extra entry to make space for the new container to be added.\n            while (diff--) {\n                this.removeContainer(this.last);\n            }\n        }\n        containerObj = this.addContainer(keyStr);\n    }\n\n    return containerObj;\n};\n\nContainerManager.prototype.addContainer = function (keyStr) {\n    var node, container;\n\n    this.containers[keyStr] = container = {\n        next: null,\n        prev: null,\n        node: null,\n        ellipsesWidth: 0,\n        lineHeight: 0,\n        dotWidth: 0,\n        avgCharWidth: 4,\n        keyStr: keyStr,\n        charCache: {}\n    };\n\n    // Since the container objects are arranged from most recent to least recent order, we need to add the new\n    // object at the beginning of the list.\n    container.next = this.first;\n    container.next && (container.next.prev = container);\n    this.first = container;\n    if (!this.last) {\n        this.last = container;\n    }\n    this.length += 1;\n\n    node = container.node = doc.createElement('div');\n    this.rootNode.appendChild(node);\n\n    if (documentSupport.isIE && !documentSupport.hasSVG) {\n        node.style.setAttribute('cssText', keyStr);\n    } else {\n        node.setAttribute('style', keyStr);\n    }\n\n    node.setAttribute('aria-hidden', 'true');\n    node.setAttribute('role', 'presentation');\n    node.style.display = 'inline-block';\n\n    node.innerHTML = slLib.testStrAvg; // A test string.\n    container.lineHeight = node.offsetHeight;\n    container.avgCharWidth = node.offsetWidth / 3;\n\n    if (documentSupport.isBrowserLess) {\n        node = container.svgText = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n        node.setAttribute('style', keyStr);\n        this.svgRoot.appendChild(node);\n\n        node.textContent = slLib.testStrAvg; // A test string.\n        container.lineHeight = node.getBBox().height;\n        container.avgCharWidth = (node.getBBox().width - SVG_BBOX_CORRECTION) / 3;\n\n        node.textContent = '...';\n        container.ellipsesWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n        node.textContent = '.';\n        container.dotWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n    } else {\n        node.innerHTML = '...';\n        container.ellipsesWidth = node.offsetWidth;\n        node.innerHTML = '.';\n        container.dotWidth = node.offsetWidth;\n        node.innerHTML = '';\n    }\n\n    return container;\n};\n\nContainerManager.prototype.removeContainer = function (cObj) {\n    var keyStr = cObj.keyStr;\n\n    if (!keyStr || !this.length || !cObj) {\n        return;\n    }\n    this.length -= 1;\n\n    cObj.prev && (cObj.prev.next = cObj.next);\n    cObj.next && (cObj.next.prev = cObj.prev);\n    this.first === cObj && (this.first = cObj.next);\n    this.last === cObj && (this.last = cObj.prev);\n\n    cObj.node.parentNode.removeChild(cObj.node);\n\n    delete this.containers[keyStr];\n};\n\nContainerManager.prototype.dispose = function () {\n    var key,\n        containers = this.containers;\n\n    this.maxContainers = null;\n    for (key in containers) {\n        this.removeContainer(containers[key]);\n    }\n\n    this.rootNode.parentNode.removeChild(this.rootNode);\n\n    this.rootNode = null;\n    this.first = null;\n    this.last = null;\n};\n\nmodule.exports = ContainerManager;","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  scale.invertExtent = function(r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1, a, b, t,\n        hiIndex;\n    values.push(values[n] + this.step());\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo));\n    hiIndex = getClosestIndexOf(values, hi);\n    b = lo===hi ? a : Math.max(a, hiIndex - 1);\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) t = a, a = n - b, b = n - t; // map + swap\n    return (a > b) ? undefined : domain().slice(a, b+1);\n  };\n\n  scale.invert = function (r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1,\n        a,\n        t;\n\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo, 'left'));\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    return domain()[reverse ? n - a : a];\n  }\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction getClosestIndexOf (arr, value, side) {\n  var low = 0,\n      arrLen = arr.length,\n      high = arrLen - 1,\n      highVal,\n      mid,\n      d1,\n      d2;\n\n  while (low < high) {\n      mid = Math.floor((low + high) / 2);\n      d1 = Math.abs(arr[mid] - value);\n      d2 = Math.abs(arr[mid + 1] - value);\n\n      if (d2 <= d1) {\n          low = mid + 1;\n      }\n      else {\n          high = mid;\n      }\n  }\n\n  if (!side) {\n      return high;\n  }\n\n  highVal = arr[high];\n  if (highVal === value) {\n      return high;\n  } else if (highVal > value) {\n      if (high === 0) { return high; }\n      return side === 'left'? high - 1 : high;\n  } else {\n      if (high === arr.length - 1) { return high; }\n      return side === 'left'? high : high + 1;\n  }\n}","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute} from \"./duration\";\n\nvar hour = interval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export const UNIT_GLOBAL_NAMESPACE = 'app.units';\nexport const UNIT_LOCAL_NAMESPACE = 'local.units';\nexport const LAYER_LOCAL_NAMESPACE = 'local.layers';\nexport const LAYER_GLOBAL_NAMESPACE = 'app.layers';\nexport const GROUP_GLOBAL_NAMESPACE = 'app.group';\nexport const GROUP_LOCAL_NAMESPACE = 'local.group';\nexport const CANVAS_LOCAL_NAMESPACE = 'local.canvas';\nexport const CANVAS_GLOBAL_NAMESPACE = 'app.canvas';\n\n","const ReservedFields = {\n    ROW_ID: '__id__'\n};\n\nexport default ReservedFields;\n","const CommonProps = {\n    ACTION_INF: 'actionInf',\n    ON_LAYER_DRAW: 'onlayerdraw'\n};\n\nexport default CommonProps;\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickTransform = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"))\n        .style('transform', tickTransform);\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.tickTransform = function(_) {\n    return arguments.length ? (tickTransform = _, axis) : tickTransform;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","export var slice = Array.prototype.slice;\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","/* global window, requestAnimationFrame, cancelAnimationFrame */\nimport { FieldType, DimensionSubtype } from 'datamodel';\nimport {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom\n} from 'd3-axis';\nimport {\n    symbolCircle,\n    symbolCross,\n    symbolDiamond,\n    symbolSquare,\n    symbolStar,\n    symbolWye,\n    symbolTriangle,\n    symbol,\n    stack as d3Stack,\n    stackOffsetDiverging,\n    stackOrderNone,\n    stackOrderAscending,\n    stackOrderDescending,\n    stackOffsetNone,\n    stackOffsetExpand,\n    stackOffsetWiggle,\n    pie,\n    arc,\n    line,\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    area\n} from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport {\n    interpolate,\n    interpolateRgb,\n    piecewise,\n    interpolateNumber,\n    interpolateHslLong\n} from 'd3-interpolate';\nimport {\n    easeCubic,\n    easeBounce,\n    easePoly,\n    easeBack,\n    easeCircle,\n    easeLinear,\n    easeElastic\n} from 'd3-ease';\nimport {\n   color,\n   rgb,\n   hsl\n} from 'd3-color';\nimport { voronoi } from 'd3-voronoi';\nimport Model from 'hyperdis';\nimport * as STACK_CONFIG from './enums/stack-config';\n\nconst HTMLElement = window.HTMLElement;\n\nconst isSimpleObject = (obj) => {\n    let token;\n    if (typeof obj === 'object') {\n        if (obj === null) { return false; }\n        token = Object.prototype.toString.call(obj);\n        if (token === '[object Object]') {\n            return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n        }\n    }\n    return false;\n};\n\n/**\n * Returns unique id\n * @return {string} Unique id string\n */\nconst\n    getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Deep copies an object and returns a new object.\n * @param {Object} o Object to clone\n * @return {Object} New Object.\n */\nconst clone = (o) => {\n    const output = {};\n    let v;\n    for (const key in o) {\n        if ({}.hasOwnProperty.call(o, key)) {\n            v = o[key];\n            output[key] = isSimpleObject(v) ? clone(v) : v;\n        }\n    }\n    return output;\n};\n\n/**\n* Checks the existence of keys in an object\n* @param {Array} keys Set of keys which are to be checked\n* @param {Object} obj whose keys are checked from the set of keys provided\n* @return {Object} Error if the keys are absent, or the object itself\n*/\nconst checkExistence = (keys, obj) => {\n    const nonExistentKeys = [];\n    keys.forEach((key) => {\n        if (key in obj) {\n            return;\n        }\n        nonExistentKeys.push(key);\n    });\n    return nonExistentKeys;\n};\n\nconst sanitizeIP = {\n    typeObj: (keys, obj) => {\n        if (typeof obj !== 'object') {\n            return Error('Argument type object expected');\n        }\n\n        const nonExistentKeys = checkExistence(keys, obj);\n        if (nonExistentKeys.length) {\n            return Error(`Missing keys from parameter ${nonExistentKeys.join(', ')}`);\n        }\n        return obj;\n    },\n\n    /* istanbul ignore next */ htmlElem: (elem) => {\n        if (!(elem instanceof HTMLElement)) {\n            return Error('HTMLElement required');\n        }\n        return elem;\n    }\n};\n\n/**\n * Gets the maximum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Maximum value\n */\nconst getMax = (data, field) => Math.max(...data.filter(d => !isNaN(d[field])).map(d => d[field]));\n\n/**\n * Gets the minimum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Minimum value\n */\nconst getMin = (data, field) => Math.min(...data.filter(d => !isNaN(d[field])).map(d => d[field]));\n\n/**\n * Gets the domain from the data based on the field name and type of field\n * @param  {Array.<Object> | Array.<Array>} data       Data Array\n * @param  {Array.<string>} fields    Array of fields from where the domain will be calculated\n * @param {string} fieldType Type of field - nominal, quantitiative, temporal.\n * @return {Array} Usually contains a min and max value if field is quantitative or\n * an array of values if field type is nominal or ordinal\n */\nconst getDomainFromData = (data, fields, fieldType) => {\n    let domain;\n    let domArr;\n    data = data[0] instanceof Array ? data : [data];\n    switch (fieldType) {\n    case DimensionSubtype.CATEGORICAL:\n        domain = [].concat(...data.map(arr => arr.map(d => d[fields[0]]).filter(d => d !== undefined)));\n        break;\n    default:\n        domArr = data.map((arr) => {\n            const firstMin = getMin(arr, fields[0]);\n            const secondMin = getMin(arr, fields[1]);\n            const firstMax = getMax(arr, fields[0]);\n            const secondMax = getMax(arr, fields[1]);\n            return [Math.min(firstMin, secondMin), Math.max(firstMax, secondMax)];\n        });\n        domain = [Math.min(...domArr.map(d => d[0])), Math.max(...domArr.map(d => d[1]))];\n        break;\n    }\n    return domain;\n};\n\n/**\n * Union Domain values\n * @param {Array.<Array>} domains Array of domain values\n * @param {string} fieldType type of field - dimension,measure or datetime.\n * @return {Array} Unioned domain of all domain values.\n */\nconst unionDomain = (domains, fieldType) => {\n    let domain;\n    domains = domains.filter(dom => dom && dom.length);\n    if (fieldType === DimensionSubtype.CATEGORICAL) {\n        domain = domain = [].concat(...domains);\n    } else {\n        domain = [Math.min(...domains.map(d => d[0])), Math.max(...domains.map(d => d[1]))];\n    }\n\n    return domain;\n};\n\nconst symbolFns = {\n    circle: symbolCircle,\n    cross: symbolCross,\n    diamond: symbolDiamond,\n    square: symbolSquare,\n    star: symbolStar,\n    wye: symbolWye,\n    triangle: symbolTriangle\n};\n\nconst easeFns = {\n    cubic: easeCubic,\n    bounce: easeBounce,\n    linear: easeLinear,\n    elastic: easeElastic,\n    back: easeBack,\n    poly: easePoly,\n    circle: easeCircle\n};\n\n/**\n * Returns the maximum or minimum points of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @param {string} minOrMax minimum or maximum.\n * @return {Object} Minimum or maximum point.\n */\nconst getExtremePoint = (points, compareValue, minOrMax) => {\n    let extremePoint;\n    let point;\n    const len = points.length;\n    let minOrMaxVal = minOrMax === 'max' ? -Infinity : Infinity;\n    let val;\n\n    for (let i = 0; i < len; i++) {\n        point = points[i];\n        val = point[compareValue];\n        if (minOrMax === 'min' ? val < minOrMaxVal : val > minOrMaxVal) {\n            minOrMaxVal = val;\n            extremePoint = point;\n        }\n    }\n\n    return extremePoint;\n};\n\n/**\n * Returns the minimum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Minimum point.\n */\nconst getMinPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'min');\n\n/**\n * Returns the maximum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Maximum point.\n */\nconst getMaxPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'max');\n\n/**\n * Gets the index of the closest value of the given value from the array.\n * @param {Array} arr Array of values\n * @param {number} value Value from which the nearest value will be calculated.\n * @param {string} side side property.\n * @return {number} index of the closest value\n */\n/* istanbul ignore next */const getClosestIndexOf = (arr, value, side) => {\n    let low = 0;\n    const arrLen = arr.length;\n    let high = arrLen - 1;\n\n    let mid;\n    let d1;\n    let d2;\n\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        d1 = Math.abs(arr[mid] - value);\n        d2 = Math.abs(arr[mid + 1] - value);\n\n        if (d2 <= d1) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n\n    if (!side) {\n        return high;\n    }\n\n    const highVal = arr[high];\n    if (highVal === value) {\n        return high;\n    } else if (highVal > value) {\n        if (high === 0) { return high; }\n        return side === 'left' ? high - 1 : high;\n    }\n    if (high === arr.length - 1) { return high; }\n    return side === 'left' ? high : high + 1;\n};\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst getWindow = () => window;\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst reqAnimFrame = (() => requestAnimationFrame)();\n\nconst cancelAnimFrame = (() => cancelAnimationFrame)();\n\n/**\n * Capitalizes the first letter of the word\n * @param {string} text word\n * @return {string} Capitalized word\n */\nconst capitalizeFirst = (text) => {\n    text = text.toLowerCase();\n\n    return text.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1));\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\n/* istanbul ignore next */ const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Returns the class name appended with a given id.\n * @param {string} cls class name\n * @param {string} id unique identifier\n * @param {string} prefix string needed to add before the classname\n * @return {string} qualified class name\n */\n/* istanbul ignore next */const getQualifiedClassName = (cls, id, prefix) => {\n    cls = cls.replace(/^\\.*/, '');\n    return [`${prefix}-${cls}`, `${prefix}-${cls}-${id}`];\n};\n\n/**\n * This method is used to set the default value for variables\n * without sullying the code with conditional statements.\n *\n * @export\n * @param {any} param The parameter to test.\n * @param {any} value The default value to assign.\n * @return {any} The value.\n */\n/* istanbul ignore next */ const defaultValue = (param, value) => {\n    if (typeof param === 'undefined' || (typeof param === 'object' && !param)) {\n        return value;\n    }\n    return param;\n};\n\n/**\n * DESCRIPTION TODO\n *\n * @export\n * @param {Object} graph graph whose dependency order has to be generated\n * @return {Object}\n */\nconst getDependencyOrder = (graph) => {\n    const dependencyOrder = [];\n    const visited = {};\n    const keys = Object.keys(graph);\n    /**\n     * DESCRIPTION TODO\n     *\n     * @export\n     * @param {Object} name\n     * @return {Object}\n     */\n    const visit = (name) => {\n        if (dependencyOrder.length === keys.length) {\n            return true;\n        }\n        visited[name] = true;\n        const edges = graph[name];\n        for (let e = 0; e < edges.length; e++) {\n            const dep = edges[e];\n            if (!visited[dep]) {\n                visit(dep);\n            }\n        }\n\n        dependencyOrder.push(name);\n        return false;\n    };\n\n    for (let i = 0; i < keys.length; i++) {\n        if (visit(keys[i], i)) break;\n    }\n\n    return dependencyOrder;\n};\n\n/**\n * Iterates over the properties of an object and applies the function\n *\n * @param {any} obj object to be iterated upon\n * @param {any} fn  function to be applied on it\n */\nconst objectIterator = (obj, fn) => {\n    for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            fn(key, obj);\n        }\n    }\n};\n\n/**\n * This class creates a d3 voronoi for retrieving the nearest neighbour of any point from a set of two\n * dimensional points\n * @class Voronoi\n */\n/* istanbul ignore next */ class Voronoi {\n    /**\n     * Initialize the voronoi with the data given.\n     * @param {Array.<Object>} data Array of points.\n     */\n    constructor (data) {\n        this._voronoi = voronoi().x(d => d.x).y(d => d.y);\n        this.data(data);\n    }\n\n    /**\n     * Sets the data to voronoi\n     * @param {Array.<Object>} data Array of objects.\n     * @return {Voronoi} Instance of voronoi.\n     */\n    data (data) {\n        if (data) {\n            this._voronoiFn = this._voronoi(data);\n        }\n        return this;\n    }\n\n    /**\n     * Finds the closest point to the x and y position given.\n     * @param {number} x x value\n     * @param {number} y y value\n     * @param {number} radius search radius.\n     * @return {Object} Details of the nearest point.\n     */\n    find (x, y, radius) {\n        return this._voronoiFn.find(x, y, radius);\n    }\n}\n\nconst addListenerToNamespace = (namespaceInf, fn, context) => {\n    let key = namespaceInf.key;\n    const namespace = namespaceInf.namespace;\n    if (namespace) {\n        !context._listeners[namespace] && (context._listeners[namespace] = []);\n        if (!key) {\n            key = Object.keys(context._listeners[namespace]).length;\n        }\n        context._listeners[namespace][key] = fn;\n    } else {\n        key = Object.keys(context._listeners).length;\n        context._listeners[key] = fn;\n    }\n};\n\n/**\n *\n *\n * @param {*} obj\n * @param {*} fields\n *\n */\nconst getObjProp = (obj, ...fields) => {\n    if (obj === undefined || obj === null) {\n        return obj;\n    }\n    let retObj = obj;\n    for (let i = 0, len = fields.length; i < len; i++) {\n        retObj = retObj[fields[i]];\n        if (retObj === undefined || retObj === null) {\n            break;\n        }\n    }\n    return retObj;\n};\n\n/**\n * Methods to handle changes to table configuration and reactivity are handled by this\n * class.\n */\n/**\n *  Common store class\n *\n * @class Store\n */\nclass Store {\n    /**\n     * Creates an instance of Store.\n     * @param {Object} config The object to create the state store with.\n     * @memberof Store\n     */\n    constructor (config) {\n        // create reactive model\n        this.model = Model.create(config);\n        this._listeners = {};\n    }\n\n    /**\n     * This method returns a plain JSON object\n     * with all the fields in the state store.\n     *\n     * @return {Object} Serialized representation of state store.\n     * @memberof Store\n     */\n    serialize () {\n        return this.model.serialize();\n    }\n\n    /**\n     * This method is used to update the value of a property in the state store.\n     *\n     * @param {string} propName The name of the property.\n     * @param {number} value The new value of the property.\n     * @memberof Store\n     */\n    commit (propName, value) {\n        // check if appropriate enum has been used\n        this.model.prop(propName, value);\n    }\n\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */registerChangeListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.next(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */ registerImmediateListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.on(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to get the name of the property\n     * from the state store.\n     *\n     * @param {string} propName The name of the field in state store.\n     * @return {any} The value of the field.\n     * @memberof Store\n     */\n    get (propName) {\n        return this.model.prop(propName);\n    }\n\n    /**\n     * This method is used to register a computed property that is computed every time\n     * the store value changes.\n     *\n     * @param {string} propName The name of the property to create.\n     * @param {Function} callBack The function to execute when depemdent props change.\n     * @memberof Store\n     */\n    computed (propName, callBack) {\n        return this.model.calculatedProp(propName, callBack);\n    }\n\n    append (propName, value) {\n        this.model.append(propName, value);\n        return this;\n    }\n\n    unsubscribeAll () {\n        Object.values(this._listeners).forEach(fn => fn());\n        return this;\n    }\n\n    unsubscribe (namespaceInf = {}) {\n        const { namespace, key } = namespaceInf;\n        const listeners = this._listeners[namespace];\n        if (key) {\n            const fn = getObjProp(listeners, key);\n            fn && fn();\n        } else {\n            Object.values(listeners).forEach(fn => fn());\n            this._listeners[namespace] = [];\n        }\n        return this;\n    }\n}\n\n/**\n * Sanitize an input number / string mixed number. Currently dot in the no is not supported.\n *\n * @param {number | string} val pure number or string mixed number\n * @return {number | null}  Number if it can be extracted. Otherwise null\n */\nconst intSanitizer = (val) => {\n    const arr = val.toString().match(/(\\d+)(px)*/g);\n    if (!arr) {\n        // If only characters are passed\n        return null;\n    }\n\n    return parseInt(arr[0], 10);\n};\n\n/**\n * Setter getter creator from config\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args. (Optional)\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @param {Object} holder an empty object on which the getters and setters will be mounted\n * @param {Object} options options config based on which the getters and setters are determined.\n * @param {Hyperdis} model optional model to attach the property. If not sent new moel is created.\n * @return {Array}\n */\nconst transactor = (holder, options, model, namespaceInf = {}) => {\n    let conf;\n    const store = model && model instanceof Model ? model : Model.create({});\n    const stateProps = {};\n    for (const prop in options) {\n        if ({}.hasOwnProperty.call(options, prop)) {\n            conf = options[prop];\n            const addAsMethod = conf.meta ? conf.meta.addAsMethod : true;\n            let nameSpaceProp;\n            const namespace = namespaceInf.namespace;\n            if (namespace) {\n                nameSpaceProp = `${namespace}.${prop}`;\n            } else {\n                nameSpaceProp = prop;\n            }\n            if (!store.prop(`${nameSpaceProp}`)) {\n                stateProps[prop] = conf.value;\n            }\n            if (addAsMethod !== false) {\n                holder[prop] = ((context, meta, nsProp) => (...params) => {\n                    let val;\n                    let compareTo;\n                    const paramsLen = params.length;\n                    const prevVal = store.prop(nsProp);\n                    if (paramsLen) {\n                        // If parameters are passed then it's a setter\n                        const spreadParams = meta && meta.spreadParams;\n                        val = params;\n                        const values = [];\n                        if (meta) {\n                            for (let i = 0; i < paramsLen; i++) {\n                                val = params[i];\n                                const sanitization = meta.sanitization && (spreadParams ? meta.sanitization[i] :\n                                    meta.sanitization);\n                                const typeCheck = meta.typeCheck && (spreadParams ? meta.typeCheck[i] : meta.typeCheck);\n                                if (sanitization && typeof sanitization === 'function') {\n                                    // Sanitize if required\n                                    val = sanitization(val, prevVal, holder);\n                                }\n\n                                if (typeCheck) {\n                                    // Checking if a setter is valid\n                                    if (typeof typeCheck === 'function') {\n                                        let typeExpected = meta.typeExpected;\n                                        if (typeExpected && spreadParams) {\n                                            typeExpected = typeExpected[i];\n                                        }\n                                        if (typeExpected) {\n                                            compareTo = typeExpected;\n                                        } else {\n                                            compareTo = true;\n                                        }\n\n                                        if (typeCheck(val) === compareTo) {\n                                            values.push(val);\n                                        }\n                                    } else if (typeof typeCheck === 'string') {\n                                        if (typeCheck === 'constructor') {\n                                            const typeExpected = spreadParams ? meta.typeExpected[i] :\n                                                meta.typeExpected;\n                                            if (val && (val.constructor.name === typeExpected)) {\n                                                values.push(val);\n                                            }\n                                        }\n                                    } else {\n                                        // context.prop(key, val);\n                                        values.push(val);\n                                    }\n                                } else {\n                                    values.push(val);\n                                }\n                            }\n                            const preset = meta.preset;\n                            const oldValues = context.prop(nsProp);\n                            preset && preset(values[0], holder);\n                            if (spreadParams) {\n                                oldValues.forEach((value, i) => {\n                                    if (values[i] === undefined) {\n                                        values[i] = value;\n                                    }\n                                });\n                            }\n                            values.length && context.prop(nsProp, spreadParams ? values : values[0]);\n                        } else {\n                            context.prop(nsProp, spreadParams ? val : val[0]);\n                        }\n                        return holder;\n                    }\n                // No parameters are passed hence its a getter\n                    return context.prop(nsProp);\n                })(store, conf.meta, nameSpaceProp);\n            }\n        }\n    }\n\n    if (namespaceInf.namespace === undefined) {\n        store.append(stateProps);\n    } else {\n        const namespace = namespaceInf.namespace;\n        store.append(namespace, stateProps);\n    }\n\n    return [holder, store];\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} props\n */\nconst generateGetterSetters = (context, props) => {\n    Object.entries(props).forEach((propInfo) => {\n        const prop = propInfo[0];\n        const typeChecker = propInfo[1].typeChecker;\n        const defVal = propInfo[1].defaultValue;\n        const sanitization = propInfo[1].sanitization;\n        const prototype = context.constructor.prototype;\n        if (!(Object.hasOwnProperty.call(prototype, prop))) {\n            if (defVal) {\n                context[`_${prop}`] = defVal;\n            }\n            context[prop] = (...params) => {\n                if (params.length) {\n                    let value = params[0];\n                    if (sanitization) {\n                        value = sanitization(context, params[0]);\n                    }\n                    if (typeChecker && !typeChecker(value)) {\n                        return context[`_${prop}`];\n                    }\n                    context[`_${prop}`] = value;\n                    return context;\n                } return context[`_${prop}`];\n            };\n        }\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} prop\n */\nconst getArraySum = (arr, prop) => arr.reduce((total, elem) => {\n    total += prop ? elem[prop] : elem;\n    return total;\n}, 0);\n\n/**\n *\n *\n * @param {*} arr1\n * @param {*} arr2\n *\n */\nconst arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) { return false; }\n    for (let i = arr1.length; i >= 0; i--) {\n        if (arr1[i] !== arr2[i]) { return false; }\n    }\n\n    return true;\n};\n\n/* eslint valid-typeof:0 */\n/**\n * Returns a validation function which can be used to validate variables against a type and value\n *\n * @param {any} type type of value that the object should have\n * @return {Object} validation function\n */\nconst isEqual = type => (oldVal, newVal) => {\n    if (type === 'Array') {\n        if (!oldVal) {\n            return false;\n        }\n        return arraysEqual(oldVal, newVal);\n    } else if (type === 'Object') {\n        return Object.is(oldVal, newVal);\n    } return oldVal === newVal;\n};\n\n/**\n * Description @todo\n *\n * @param {any} transactionModel @todo\n * @param {any} transactionEndpoint @todo\n * @param {any} transactionItems @todo\n * @return {any} @todo\n */\nconst enableChainedTransaction = (transactionModel, transactionEndpoint, transactionItems) =>\n    transactionItems.forEach(item => transactionModel.on(item, ([, newVal]) => transactionEndpoint[item](newVal)));\n\n/**\n * Chceks if the element is istanceof HTMLElement\n *\n * @param {Object} elem any JS Object\n */\nconst isHTMLElem = elem => elem instanceof HTMLElement;\n\nconst ERROR_MSG = {\n    INTERFACE_IMPL: 'Method not implemented'\n};\n\n/**\n * Merges the sink object in the source by recursively iterating through the object properties\n * @param {Object} source Source Object\n * @param {Object} sink Sink Object\n * @return {Object} Merged object\n */\nconst mergeRecursive = (source, sink) => {\n    for (const prop in sink) {\n        if (isSimpleObject(source[prop]) && isSimpleObject(sink[prop])) {\n            mergeRecursive(source[prop], sink[prop]);\n        } else if (sink[prop] instanceof Object && sink[prop].constructor === Object) {\n            source[prop] = {};\n            mergeRecursive(source[prop], sink[prop]);\n        } else {\n            source[prop] = sink[prop];\n        }\n    }\n    return source;\n};\n\nconst interpolateArray = (data, fitCount) => {\n    const linearInterpolate = function (before, after, atPoint) {\n        return before + (after - before) * atPoint;\n    };\n    const newData = [];\n    const springFactor = ((data.length - 1) / (fitCount - 1));\n    newData[0] = data[0]; // for new allocation\n    for (let i = 1; i < fitCount - 1; i++) {\n        const tmp = i * springFactor;\n        const before = (Math.floor(tmp)).toFixed();\n        const after = (Math.ceil(tmp)).toFixed();\n        const atPoint = tmp - before;\n        newData[i] = linearInterpolate(data[before], data[after], atPoint);\n    }\n    newData[fitCount - 1] = data[data.length - 1]; // for new allocation\n    return newData;\n};\n\n/**\n *\n *\n * @param {*} fn\n */\nconst nextFrame = (fn) => {\n    setTimeout(() => {\n        fn();\n    }, 0);\n};\n\n/**\n *\n *\n * @param {*} angle\n */\nconst angleToRadian = angle => angle * Math.PI / 180;\n\n/**\n *\n *\n * @param {*} newName\n * @param {*} oldName\n */\nconst replaceCSSPrefix = () => {\n    // @todo\n};\n\n/**\n * Gets the  interpolator function from d3 color\n *\n */\nconst interpolator = () => interpolate;\n\n/**\n * Gets the number interpolator from d3 color\n *\n */\nconst numberInterpolator = () => interpolateNumber;\n\n/**\n * Gets the rgb interpolator from d3 color\n *\n */\nconst colorInterpolator = () => interpolateRgb;\n\n/**\n * Gets the hsl interpolator from d3 color\n *\n */\nconst hslInterpolator = () => interpolateHslLong;\n\nconst transformColors = () => ({\n    color,\n    rgb,\n    hsl\n});\n\n/**\n * Gets the piecewise interpolator from d3 color\n *\n */\nconst piecewiseInterpolator = () => piecewise;\n\nfunction hue2rgb (p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n\n  /**\n   * Converts an HSL color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n   * Assumes h, s, and l are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  l       The lightness\n   * @return  Array           The RGB representation\n   */\nconst hslToRgb = (h, s, l, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\n  /**\n   * Converts an RGB color value to HSV. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes r, g, and b are contained in the set [0, 255] and\n   * returns h, s, and v in the set [0, 1].\n   *\n   * @param   Number  r       The red color value\n   * @param   Number  g       The green color value\n   * @param   Number  b       The blue color value\n   * @return  Array           The HSV representation\n   */\nconst rgbToHsv = (r, g, b, a = 1) => {\n    r = +r; g = +g; b = +b; a = +a;\n    r /= 255; g /= 255; b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h;\n    let s;\n    const l = (max + min) / 2;\n\n    if (max === min) {\n        h = s = 0; // achromatic\n    } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n        default: break;\n        }\n        h /= 6;\n    }\n    return [h, s, l, a];\n};\n\n  /**\n   * Converts an HSV color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes h, s, and v are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  v       The value\n   * @return  Array           The RGB representation\n   */\nconst hsvToRgb = (h, s, v, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n    default: break;\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\nconst hexToHsv = (hex) => {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n    const r = parseInt(result[1], 16);\n    const g = parseInt(result[2], 16);\n    const b = parseInt(result[3], 16);\n    const a = result[4] ? parseInt(result[4], 16) : 1;\n    return rgbToHsv(r, g, b, a);\n};\n\nconst detectColor = (col) => {\n    const matchRgb = /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/;\n    const matchHsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g;\n\n    // Source :  https://gist.github.com/sethlopezme/d072b945969a3cc2cc11\n     // eslint-disable-next-line\n    const matchRgba = /rgba?\\(((25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,\\s*?){2}(25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,?\\s*([01]\\.?\\d*?)?\\)/;\n     // eslint-disable-next-line\n    const matchHsla = /^hsla\\((0|360|35\\d|3[0-4]\\d|[12]\\d\\d|0?\\d?\\d),(0|100|\\d{1,2})%,(0|100|\\d{1,2})%,(0?\\.\\d|1(\\.0)?)\\)$/;\n    const matchHex = /^#([0-9a-f]{3}){1,2}$/i;\n\n    if (matchRgb.test(col) || matchRgba.test(col)) {\n        return 'rgb';\n    } else if (matchHsl.test(col) || matchHsla.test(col)) {\n        return 'hsl';\n    } else if (matchHex.test(col)) {\n        return 'hex';\n    } return col;\n};\n\n/**\n *\n *\n * @param {*} model\n * @param {*} propModel\n *\n */\nconst filterPropagationModel = (model, propModel, measures) => {\n    const { data, schema } = propModel.getData();\n    let filteredModel;\n    if (schema.length) {\n        const fieldMap = model.getFieldsConfig();\n        filteredModel = model.select((fields) => {\n            const include = data.some(row => schema.every((propField, idx) => {\n                if (!measures && (!(propField.name in fieldMap) ||\n                        fieldMap[propField.name].def.type === FieldType.MEASURE)) {\n                    return true;\n                }\n                return row[idx] === fields[propField.name].valueOf();\n            }));\n            return include;\n        }, {\n            saveChild: false\n        });\n    } else {\n        filteredModel = propModel;\n    }\n\n    return filteredModel;\n};\n\nconst assembleModelFromIdentifiers = (model, identifiers) => {\n    let schema = [];\n    let data;\n    const fieldMap = model.getFieldsConfig();\n    if (identifiers.length) {\n        const fields = identifiers[0];\n        const len = fields.length;\n        for (let i = 0; i < len; i++) {\n            const field = fields[i];\n            const fieldObj = fieldMap[field] && Object.assign({}, fieldMap[field].def);\n            if (fieldObj) {\n                schema.push(Object.assign(fieldObj));\n            }\n        }\n\n        data = [];\n        const header = identifiers[0];\n        for (let i = 1; i < identifiers.length; i += 1) {\n            const vals = identifiers[i];\n            const temp = {};\n            vals.forEach((fieldVal, cIdx) => {\n                temp[header[cIdx]] = fieldVal;\n            });\n            data.push(temp);\n        }\n    } else {\n        data = [];\n        schema = [];\n    }\n\n    return new model.constructor(data, schema);\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} criteria\n *\n */\nconst getDataModelFromRange = (dataModel, criteria, mode) => {\n    if (criteria === null) {\n        return null;\n    }\n    const selFields = Object.keys(criteria);\n    const selFn = fields => selFields.every((field) => {\n        const val = fields[field].value;\n        const range = criteria[field][0] instanceof Array ? criteria[field][0] : criteria[field];\n        if (typeof range[0] === 'string') {\n            return range.find(d => d === val) !== undefined;\n        }\n        return range ? val >= range[0] && val <= range[1] : true;\n    });\n\n    return dataModel.select(selFn, {\n        saveChild: false,\n        mode\n    });\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} identifiers\n *\n */\nconst getDataModelFromIdentifiers = (dataModel, identifiers, mode) => {\n    let filteredDataModel;\n    if (identifiers instanceof Array) {\n        const fieldsConfig = dataModel.getFieldsConfig();\n\n        const dataArr = identifiers.slice(1, identifiers.length);\n        if (identifiers instanceof Function) {\n            filteredDataModel = identifiers(dataModel, {}, false);\n        } else if (identifiers instanceof Array && identifiers[0].length) {\n            const filteredSchema = identifiers[0].filter(d => d in fieldsConfig);\n            filteredDataModel = dataModel.select((fields) => {\n                let include = true;\n                filteredSchema.forEach((propField, idx) => {\n                    const value = fields[propField].valueOf();\n                    const index = dataArr.findIndex(d => d[idx] === value);\n                    include = include && index !== -1;\n                });\n                return include;\n            }, {\n                saveChild: false,\n                mode\n            });\n        }\n    } else {\n        filteredDataModel = getDataModelFromRange(dataModel, identifiers, mode);\n    }\n    return filteredDataModel;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} listenerMap\n */\nconst registerListeners = (context, listenerMap, ...params) => {\n    const propListenerMap = listenerMap(context, ...params);\n    for (const key in propListenerMap) {\n        if ({}.hasOwnProperty.call(propListenerMap, key)) {\n            const namespace = params[0];\n            let ns = null;\n            if (namespace) {\n                ns = namespace.local;\n            }\n            const mapObj = propListenerMap[key];\n            const propType = mapObj.type;\n            const props = mapObj.props;\n            const listenerFn = mapObj.listener;\n            context.store()[propType](props, listenerFn, false, {\n                namespace: ns\n            });\n        }\n    }\n};\n\nconst isValidValue = value => !isNaN(value) && value !== -Infinity && value !== Infinity;\n/**\n *\n *\n * @param {*} str\n *\n */\nconst escapeHTML = (str) => {\n    const htmlEscapes = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '/': '&#x2F;'\n    };\n    const htmlEscaper = /[&<>\"'/]/g;\n    return (`${str}`).replace(htmlEscaper, match => htmlEscapes[match]);\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst transposeArray = arr => arr[0].map((col, i) => arr.map(row => row[i]));\nconst toArray = arr => (arr instanceof Array ? arr : [arr]);\nconst extendsClass = (cls, extendsFrom, found) => {\n    if (!cls) {\n        return false;\n    }\n    const prototype = cls.prototype;\n    if (prototype instanceof extendsFrom) {\n        found = true;\n    } else {\n        found = extendsClass(prototype, extendsFrom, found);\n    }\n    return found;\n};\n\n/**\n *\n * @param {*} dm1\n * @param {*} dm2\n */\nconst concatModels = (dm1, dm2) => {\n    const dataObj1 = dm1.getData();\n    const dataObj2 = dm2.getData();\n    const data1 = dataObj1.data;\n    const data2 = dataObj2.data;\n    const schema1 = dataObj1.schema;\n    const schema2 = dataObj2.schema;\n    const tuples1 = {};\n    const tuples2 = {};\n    const commonTuples = {};\n    for (let i = 0; i < data1.length; i++) {\n        for (let ii = 0; ii < data2.length; ii++) {\n            const row1 = data1[i];\n            const row2 = data2[ii];\n            const dim1Values = row1.filter((d, idx) => schema1[idx].type === FieldType.DIMENSION);\n            const dim2Values = row2.filter((d, idx) => schema2[idx].type === FieldType.DIMENSION);\n            const allDimSame = dim1Values.every(value => dim2Values.indexOf(value) !== -1);\n            if (allDimSame) {\n                const key = dim1Values.join();\n                !commonTuples[key] && (commonTuples[key] = {});\n                row1.forEach((value, idx) => {\n                    commonTuples[key][schema1[idx].name] = value;\n                });\n                row2.forEach((value, idx) => {\n                    commonTuples[key][schema2[idx].name] = value;\n                });\n            } else {\n                const dm1Key = dim1Values.join();\n                const dm2Key = dim2Values.join();\n                if (!commonTuples[dm1Key] && !commonTuples[dm2Key]) {\n                    !tuples1[dm1Key] && (tuples1[dm1Key] = {});\n                    !tuples2[dm2Key] && (tuples2[dm2Key] = {});\n                    row1.forEach((value, idx) => {\n                        tuples1[dm1Key][schema1[idx].name] = value;\n                    });\n                    row2.forEach((value, idx) => {\n                        tuples2[dm2Key][schema2[idx].name] = value;\n                    });\n                }\n            }\n        }\n    }\n\n    const commonSchema = [...schema1, ...schema2.filter(s2 => schema1.findIndex(s1 => s1.name === s2.name) === -1)];\n    const data = [...Object.values(tuples1), ...Object.values(tuples2), ...Object.values(commonTuples)];\n    return [data, commonSchema];\n};\n\nconst getSymbol = type => symbol().type(symbolFns[type]);\n\nconst stackOrders = {\n    [STACK_CONFIG.ORDER_NONE]: stackOrderNone,\n    [STACK_CONFIG.ORDER_ASCENDING]: stackOrderAscending,\n    [STACK_CONFIG.ORDER_DESCENDING]: stackOrderDescending\n};\nconst stackOffsets = {\n    [STACK_CONFIG.OFFSET_DIVERGING]: stackOffsetDiverging,\n    [STACK_CONFIG.OFFSET_NONE]: stackOffsetNone,\n    [STACK_CONFIG.OFFSET_EXPAND]: stackOffsetExpand,\n    [STACK_CONFIG.OFFSET_WIGGLE]: stackOffsetWiggle\n};\n\n// eslint-disable-next-line require-jsdoc\nconst stack = params => d3Stack().keys(params.keys).offset(stackOffsets[params.offset])\n                .order(stackOrders[params.order])(params.data);\n\n/**\n * Groups the data into a hierarchical tree structure based on one or more fields.\n * @param { Object } params Configuration properties for nesting data\n * @param { Array.<Array> } params.data Data which needs to be grouped\n * @param { Array.<number> } params.keys Field indices by which the data will be grouped\n * @return { Array.<Object> } Grouped data array\n */\nconst nestCollection = (params) => {\n    const nestFn = nest();\n    params.keys.forEach(key => nestFn.key(d => d[key]));\n    return nestFn.entries(params.data);\n};\n\nconst pathInterpolators = {\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    stepAfter: curveStepAfter,\n    catmullRom: curveCatmullRom,\n    step: curveStep,\n    stepBefore: curveStepBefore,\n    linear: curveLinear\n};\n\nconst Symbols = {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom,\n    line,\n    area,\n    pie,\n    arc,\n    nest\n};\n\nconst Scales = {\n    band: scaleBand\n};\n\nconst getSmallestDiff = (points) => {\n    points = points.sort((a, b) => a - b);\n    let minDiff = points[1] - points[0];\n    for (let i = 2; i < points.length; i++) {\n        minDiff = Math.min(minDiff, points[i] - points[i - 1]);\n    }\n\n    return minDiff;\n};\n\nconst require = (lookupWhat, lookupDetails) => ({\n    resolvable: (store) => {\n        const lookupTarget = store[lookupWhat];\n        const depArr = lookupDetails.slice(0, lookupDetails.length - 1);\n        const fn = lookupDetails[lookupDetails.length - 1]; // fn\n\n        const deps = depArr.map(str => lookupTarget[str]);\n        return {\n            fn: fn(...deps),\n            depArr\n        };\n    }\n});\n\nconst nextAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n    function (callback) {\n        setTimeout(callback, 16);\n    };\n\nexport {\n    require,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    stack,\n    nestCollection,\n    getSymbol,\n    transformColors,\n    detectColor,\n    hexToHsv,\n    hslToRgb,\n    rgbToHsv,\n    hsvToRgb,\n    concatModels,\n    toArray,\n    angleToRadian,\n    escapeHTML,\n    generateGetterSetters,\n    getArraySum,\n    interpolator,\n    piecewiseInterpolator,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    colorInterpolator,\n    numberInterpolator,\n    ERROR_MSG,\n    reqAnimFrame,\n    nextAnimFrame,\n    filterPropagationModel,\n    transposeArray,\n    cancelAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    symbolFns,\n    easeFns,\n    clone,\n    isEqual,\n    interpolateArray,\n    getMinPoint,\n    defaultValue,\n    getMaxPoint,\n    getClosestIndexOf,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    Store,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    transactor,\n    enableChainedTransaction,\n    isHTMLElem,\n    isSimpleObject,\n    nextFrame,\n    registerListeners,\n    replaceCSSPrefix,\n    getObjProp,\n    extendsClass,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    hslInterpolator,\n    getSmallestDiff\n};\n","export function linear(t) {\n  return +t;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","export const ORDER_ASCENDING = 'ascending';\nexport const ORDER_DESCENDING = 'descending';\nexport const ORDER_NONE = 'none';\nexport const OFFSET_DIVERGING = 'diverging';\nexport const OFFSET_NONE = 'none';\nexport const OFFSET_EXPAND = 'expand';\nexport const OFFSET_WIGGLE = 'wiggle';\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import { select, event as d3event, selection, clientPoint } from 'd3-selection';\nimport { drag as d3drag } from 'd3-drag';\nimport 'd3-transition';\nimport { mergeRecursive } from './common-utils';\n/**\n * This function takes a raw DOM element or\n * a string and returns a d3 selection of that element.\n *\n * @param {HTMLElement | string} element The element to wrap in d3 selection.\n * @return {Selection} Instance of d3 selection.\n */\nconst selectElement = element => select(element);\n\n/**\n * It creates a new d3 element on the parent element\n * @param  {Selection} parent Element to which the element is to be appended\n * @param  {Object} elemType Type of the new element\n * @param  {Array} data Data for the new element\n * @param  {Object} selector classname/id/tagname for the element\n * @return {HTMLElement} Newly Created Element\n */\nconst makeElement = (parent, elemType, data, selector, callbacks = {}, keyFn) => {\n    if ((parent instanceof HTMLElement || parent instanceof SVGElement)) {\n        parent = selectElement(parent);\n    }\n\n    const selectorVal = selector ? selector[0] : null;\n    let selectorType = null;\n    let actualSelector = null;\n    let element = null;\n    let enterSel = null;\n    let mergeSel = null;\n    let filter;\n    if (selectorVal) {\n        if (selectorVal === '#') {\n            selectorType = 'id';\n            actualSelector = selector;\n        } else {\n            selectorType = 'class';\n            actualSelector = selector[0] === '.' ? selector : `.${selector}`;\n        }\n    } else {\n        actualSelector = elemType;\n        filter = true;\n    }\n    element = parent.selectAll(actualSelector);\n\n    filter && (element = element.filter(function () {\n        return this.parentNode === parent.node();\n    }));\n    element = element.data(data, keyFn);\n\n    enterSel = element.enter()\n                            .append(elemType || 'div');\n    callbacks.enter && enterSel.each(function (...params) {\n        callbacks.enter(selectElement(this), ...params);\n    });\n\n    mergeSel = enterSel.merge(element);\n    callbacks.update && mergeSel.each(function (...params) {\n        callbacks.update(selectElement(this), ...params);\n    });\n    if (selectorType === 'class') {\n        mergeSel.classed(selectorVal === '.' ? selector.substring(1, selector.length) : selector, true);\n    } else if (selectorType === 'id') {\n        mergeSel.attr('id', selector.substring(1, selector.length));\n    }\n    const exitSel = element.exit();\n\n    if (callbacks.exit) {\n        exitSel.each(function (...params) {\n            callbacks.exit(selectElement(this), ...params);\n        });\n    } else {\n        exitSel.remove();\n    }\n    return mergeSel;\n};\n\n/**\n * This function applies styles to an element\n *  @param  {Object} elem Element Selection\n * @param  {Object} styleObj Style Object to be applied\n * @return {Element} Newly Created Element\n*/\nconst applyStyle = (elem, styleObj) => {\n    Object.entries(styleObj).forEach((d) => {\n        elem.style(d[0], d[1]);\n    }, this);\n    return elem;\n};\n\n/**\n * This function appends a dom element in another element.\n * @param {HTMLElement | SVGElement} element1 The element in which to append the second element\n * @param {HTMLElement | SVGElement} element2 The element which will be appended.\n */\nconst appendElement = (element1, element2) => {\n    element1.appendChild(element2);\n};\n\n/**\n * Sets the attributes to the element.\n * @param {HTMLElement | SVGElement} element Element on which attributes will be applied\n * @param {Object} attrs Attributes which need to be applied\n */\nconst setElementAttrs = (element, attrs) => {\n    for (const key in attrs) {\n        if ({}.hasOwnProperty.call(attrs, key)) {\n            element.attr(key, attrs[key]);\n        }\n    }\n};\n\n/**\n * Sets attributes in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which attrs will be applied\n * @param {Array.<Object>} attrs Array of attributes\n * @param {string} className className of elements to select.\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setAttrs = (element, attrs, className) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    className !== undefined ? element.selectAll(`.${className}`).each(function () {\n        setElementAttrs(select(this), attrs);\n    }) : setElementAttrs(element, attrs);\n    return element;\n};\n\n/**\n * Adds a css class to elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst addClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, true) :\n                elem.classed(className, true);\n    });\n};\n\n/**\n * Removes the css class from elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst removeClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, false) :\n                elem.classed(className, false);\n    });\n};\n\n/**\n * Sets styles in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which styles will be applied\n * @param {Array.<Object>} styles Array of style attributes\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setStyles = (element, styles) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            element.style(key, styles[key]);\n        }\n    }\n    return element;\n};\n\n/**\n * Creates svg or html elements by binding data to the selection.Removes extra elements\n * on exit.\n * @param {Object} params Parameter object\n * @param {SVGElement | HTMLElement} params.container Container element where all elements will be appended\n * @param {string} params.selector Selector by which elements will be selected from dom\n * @param {string} params.append Append tag\n * @param {Function} params.each Function which will be executed for each data point and element.\n */\nconst createElements = (params) => {\n    const container = select(params.container);\n    let data;\n    let sel;\n\n    data = params.data;\n    if (typeof data === 'number') {\n        data = Array(data).fill().map((d, i) => i);\n    }\n    sel = container.selectAll(params.selector).data(data);\n\n    sel = container.selectAll(params.selector).filter(function () {\n        return this.parentNode === container.node();\n    }).data(params.data);\n\n    const selectionMerge = sel.enter().append(params.append).merge(sel).each(function (d, i) {\n        params.each(d, select(this), i);\n    });\n\n    selectionMerge.attr('class', params.className || '');\n    sel.exit().remove();\n};\n\n/**\n * Clips an element with given measurement. Basically it is used to hide overflowing portions\n * of any element.\n * @param {SVGElement} container svg element which needs to be clipped.\n * @param {Object} measurement Dimensions of the clipped rectangle.\n * @param {string} id Unique id of the clip element\n */\nconst clipElement = (container, measurement, id) => {\n    const clipPathElement = makeElement(select(container), 'clipPath', [1], `#${id}`);\n    const clipPathRect = makeElement(clipPathElement, 'rect', [1]);\n    clipPathRect.attr('x', measurement.x)\n                    .attr('y', measurement.x)\n                    .attr('width', measurement.width)\n                    .attr('height', measurement.height);\n    clipPathElement.attr('clip-path', `url(#${id})`);\n};\n\n/**\n * Returns the element of the corresponding classname.\n * @param {HTMLElement | SVGElement} node html or svg node element.\n * @param {string} className css class to be applied.\n * @return {HTMLElement | SVGElement} html or svg element.\n */\nconst getElementsByClassName = (node, className) => select(node).selectAll(className).nodes();\n\n/**\n * Gets the mouse position relative to an svg type of element\n * @param {SVGElement} element Any svg element like rect, circle, etc.\n * @param {Event} event Event object.\n * @return {Object} x and y position relative to the container element passed.\n */\nconst getMousePos = (element, event) => {\n    const boundingClientRect = element.getBoundingClientRect();\n    return {\n        x: event.x - boundingClientRect.x,\n        y: event.y - boundingClientRect.y\n    };\n};\n\nconst getClientPoint = (...params) => {\n    const pos = clientPoint(...params);\n    return {\n        x: pos[0],\n        y: pos[1]\n    };\n};\n\n/** This function appends a dom element in another element.\n * @param {Object} tag The tag name of the element to append\n * @param {Object} mount Mount point fo the element\n * @return {Object} selection of the appended element\n */\nconst createElement = (tag, mount) => select(mount).append(tag).node();\n\n/**\n * Gets the d3 event function\n * @return {Object} d3 event\n */\nconst getEvent = () => d3event;\n\n/**\n * Gets the d3 drag function\n * @return {Object} d3 drag\n */\nconst getD3Drag = () => d3drag;\n\nconst getSmartComputedStyle = (group, css) => {\n    let textEl;\n    const testText = 'W';\n    const mandatoryStyle = {\n        'fill-opacity': 0\n    };\n    const className = typeof css === 'string' ? css : (css instanceof Array ? css.join(' ') : undefined);\n\n    if (group.node() instanceof HTMLElement) {\n        textEl = group.append('div').html(testText);\n    } else {\n        textEl = group.append('text').text(testText);\n    }\n\n    if (className) {\n        textEl.attr('class', className);\n    } else if (typeof css === 'object') {\n        delete css['fill-opacity'];\n        mergeRecursive(mandatoryStyle, css);\n    }\n\n    textEl.style(mandatoryStyle);\n\n    const computedStyle = window.getComputedStyle(textEl.node());\n    const styleForSmartLabel = {\n        fontSize: computedStyle.fontSize,\n        fontFamily: computedStyle.fontFamily,\n        fontWeight: computedStyle.fontWeight,\n        fontStyle: computedStyle.fontStyle\n    };\n\n    textEl.remove();\n\n    return styleForSmartLabel;\n};\n\nconst hasTouch = () => 'ontouchstart' in document.documentElement;\n\nexport {\n    hasTouch,\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint\n};\n","/**\n * This class represents a selection applied on a data array.\n *\n * @class Selection\n */\nclass Selection {\n    /**\n     * Creates an instance of Selection.\n     * @param {Array<DataObject>} data Array of DataObjects.\n     * @memberof Selection\n     */\n    constructor () {\n        this._data = [];\n        // // map of id to data\n        this._idMap = {};\n\n        this._mode = '';\n        // data.forEach((item, idx) => {\n        //     const index = item.id || idx;\n        //     this._idMap[index] = item;\n        // });\n        // // array to store data in enter phase\n        this._enterdata = [];\n        // // array to store data in exit phase\n        this._exitdata = [];\n    }\n    /**\n     *  Gets the object bound to a class\n     *\n     * @return {Object} current data set bound to the class\n     * @memberof Selection\n     */\n    getObjects () {\n        return Object.keys(this._idMap).map(e => this._idMap[e]);\n    }\n\n    /**\n     * This method is used to supply seed data to a selection.\n     *\n     * @param {Array} newData Seed data to create the enter selection.\n     * @param {Functon | undefined } idGetter This function is used to uniqely identify a data entry.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    data (newData, idGetter) {\n        if (idGetter) {\n            this._data = [];\n            this._idGetter = idGetter;\n            const tempMap = {};\n\n            newData.forEach((...params) => {\n                const index = idGetter(...params);\n                tempMap[index] = params[0];\n            });\n            // check if any data items have been removed\n            const purgedIds = [];\n\n            Object.keys(this._idMap).forEach((id) => {\n                if (!tempMap[id]) {\n                    purgedIds.push(id);\n                }\n            });\n\n            Object.keys(tempMap).forEach((id) => {\n                if (!this._idMap[id]) {\n                    this._enterdata.push(tempMap[id]);\n                } else {\n                    this._idMap[id] = tempMap[id];\n                    this._data.push(tempMap[id]);\n                }\n            });\n            // move the purged items to exit selection\n            purgedIds.forEach((id) => {\n                const purged = this._idMap[id];\n                this._exitdata.push(purged);\n                // this._data = this._data.slice(id, 1);\n                delete this._idMap[id];\n            });\n            // this._data = this._data.slice(temp, this._data.length);\n\n            return this;\n        }\n        // no id getter supplied so use indices\n        if (newData.length > this._data.length) {\n            const startIdx = this._data.length;\n            for (let i = startIdx; i < newData.length; i += 1) {\n                this._enterdata.push(newData[i]);\n            }\n        } else {\n            // push to exit selection\n            const temp = newData.length;\n            for (let i = temp; i < this._data.length; i += 1) {\n                const purged = this._data[i];\n                delete this._idMap[purged.id];\n                this._exitdata.push(purged);\n            }\n            this._data = this._data.slice(temp, this._data.length);\n        }\n        return this;\n    }\n\n    /**\n     * Applies the supplied callback to each data element\n     * and returns a new selection.\n     *\n     * @param {Function} callback Callback to execute on each item.\n     * @return {Selection} New selection with data created using callback.\n     * @memberof EnterSelection\n     */\n    append (callback) {\n        this[`_${this._mode}data`].forEach((...params) => {\n            const data = params[0];\n            const id = this._idGetter ? this._idGetter(...params) : (data.id || params[1]);\n            this._idMap[id] = callback(...params);\n        });\n        this._mode = '';\n        return this;\n    }\n\n    /**\n     * This method returns an enter selection that\n     * allows or update operations.\n     *\n     * @return {EnterSelection} Instance of enter selection.\n     * @memberof Selection\n     */\n    enter () {\n        this._mode = 'enter';\n        return this;\n        // return new EnterSelection(this._enterdata, this._idMap, this._idGetter);\n    }\n\n    /**\n     * This method is used to set key value pairs\n     * on data objects.\n     *\n     * @param {string} key Name of property.\n     * @param {any} value Value of property.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    attr (key, value) {\n        this._data.forEach(item => item.attr(key, value));\n        return this;\n    }\n\n    /**\n     * This method merges the data of one selection with another.\n     *\n     * @param {Selection} selection Instance of selection.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    merge (selection) {\n        selection._data.forEach((...params) => {\n            const id = this._idGetter ? this._idGetter(...params) : (params[0].id || params[1]);\n            this._idMap[id] = params[0];\n            this._data.push(params[0]);\n        });\n        // reset enter selection\n        this._enterdata = [];\n        return this;\n    }\n\n    /**\n     * Returns a selection with exit data.\n     *\n     * @return {Selection} Instance of selection.\n     * @memberof Selection\n     */\n    exit () {\n        this._mode = 'exit';\n        // const exitdata = this._exitdata;\n        // const exitSelection = new Selection(exitdata);\n        // this._exitdata = [];\n        return this;\n    }\n\n    each (fn) {\n        Object.keys(this._idMap).forEach((e) => {\n            fn(this._idMap[e]);\n        });\n        return this;\n    }\n\n    map (fn) {\n        Object.keys(this._idMap).forEach((...params) => {\n            this._idMap[params[0]] = fn(this._idMap[params[0]], ...params);\n        });\n        return this;\n    }\n\n    /**\n     * Executes the cleanup operation associated with data objets.\n     *\n     * @memberof Selection\n     */\n    remove () {\n        // do cleanup on DDO's\n        const data = this[`_${this._mode}data`];\n\n        data.forEach(item => item.remove());\n        if (this._mode === '') {\n            this.each(e => e.remove());\n        }\n        this[`_${this._mode}data`] = [];\n        this._mode = '';\n    }\n}\n\nexport default Selection;\n","const events = [\n    'initialized',\n    'beforeupdate',\n    'updated',\n    'beforedraw',\n    'drawn',\n    'beforeremove',\n    'removed',\n    'animationend'\n];\n\nconst compositions = [\n    'canvas',\n    'unit',\n    'layer',\n    'axis',\n    'facet-headers',\n    'legend',\n    'caption'\n];\n\nconst EVENT_LIST = [];\n\ncompositions.forEach((composition) => {\n    events.forEach((event) => {\n        EVENT_LIST.push(`${composition}.${event}`);\n    });\n});\n\nexport default EVENT_LIST;\n","import EVENT_LIST from './event-list';\nimport { createPromise } from './helper';\n\n/**\n * At first call it accepts one function\n * calling it second time accepts notification object.\n * notification object then called with first accepted function\n *\n * @param {Function} resolveFn a promise's resolve function\n * @return {Function} a function to accept notification object\n */\nconst resolver = resolveFn => notification => resolveFn(notification);\n\n/**\n * Checks if the property string is present in the source object\n *\n * @param {Object} source source object whom you want to check the property\n * @param {string} property key name that need to be checked\n * @return {boolean} returns true if the property found in the source object\n */\nconst hasOwn = (source, property) => Object.prototype.hasOwnProperty.call(source, property);\n\n/**\n * LifeCycleManager which goes as a dependendecy to a muze\n * it accepts notification from the entire library throughout\n * the exeecution life\n *\n * @export\n * @class LifeCycleManager\n */\nexport default class LifeCycleManager {\n\n    /**\n     * Creates an instance of LifeCycleManager.\n     * @memberof LifeCycleManager\n     */\n    constructor () {\n        this._eventList = EVENT_LIST;\n        this._promises = new Map();\n        this._notifiers = {};\n        this._lifeCycles = {};\n        this._unreleasedLifeCycles = {};\n        this._boot();\n    }\n\n    /**\n     * Fills all the notifiers with resolver callback\n     *\n     * @memberof LifeCycleManager\n     */\n    _boot () {\n        this._notifiers = this._eventList.reduce((acc, name) => {\n            acc[name] = resolver;\n            return acc;\n        }, {});\n        this._preparePromises();\n    }\n\n    /**\n     * Public method which gives the promise corresponding\n     * to the event name\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    retrieve (eventName) {\n        return this._promises.get(eventName);\n    }\n\n    /**\n     * Creates a promise that will be passed to user's callback\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} a pending promise waiting for resolve to be called\n     * @memberof LifeCycleManager\n     */\n    _makeNotifierPromise (eventName) {\n        return new Promise((resolve) => {\n            this._notifiers[eventName] = resolver(resolve);\n        });\n    }\n\n    /**\n     * Prepares the promise map with pending promises\n     * all the promises are in a pending state where their's\n     * resolve function waiting to be called with notification object\n     * @memberof LifeCycleManager\n     */\n    _preparePromises () {\n        this._eventList.forEach((eventName) => {\n            const promise = this._makeNotifierPromise(eventName);\n            this._promises.set(eventName, promise);\n            createPromise(promise, eventName, this);\n        });\n    }\n\n    /**\n     * Resolves the promise with notification object\n     *\n     * @param {string} eventName name of the event in the system\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     *\n     * @memberof LifeCycleManager\n     */\n    _resolvePromise (eventName, notification) {\n        this._notifiers[eventName](notification);\n    }\n\n    /**\n     * Public method which is being called by different\n     * subcompoents of the system at different execution atages\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    notify (notification) {\n        // get the composition name from notification\n        // or from static formalName() method\n        const composition = notification.formalName || notification.client.constructor.formalName();\n        notification.formalName = composition;\n        this._releasePromisesFromCache();\n        this._notify(composition, notification);\n    }\n\n    /**\n     * Notify user the with promsie in a callback\n     * if callback not found then cache it\n     *\n     * @param {string} composition\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    _notify (composition, notification) {\n        const stage = notification.action;\n        const eventName = `${composition}.${stage}`;\n\n        // resolves promise with the notification object\n        this._resolvePromise(eventName, notification);\n\n        // get the promise from the promise map\n        const promise = this.retrieve(eventName);\n\n        if (this._lifeCycles[composition]) {\n            if (this._lifeCycles[composition][stage]) {\n                // if user given call back exists, then call with promise\n                this._callLifeCycleCallback(composition, stage, promise);\n            } else {\n                // otherwise cache the promise\n                this._cachePromise(composition, stage, promise);\n            }\n        } else {\n            this._cachePromise(composition, stage, promise);\n        }\n    }\n\n    /**\n     * Calls the user's callback with callback\n     *\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _callLifeCycleCallback (composition, stage, promise) {\n        const eventName = `${composition}.${stage}`;\n        this._lifeCycles[composition][stage](promise);\n        this._resetTargetPromise(eventName);\n    }\n\n    /**\n     * Try to clear the cached promsies once we have\n     * macthed callbacks from the user\n     *\n     * @memberof LifeCycleManager\n     */\n    _releasePromisesFromCache () {\n        const compositions = Object.keys(this._unreleasedLifeCycles);\n        compositions.forEach((composition) => {\n            const stages = Object.keys(this._unreleasedLifeCycles[composition]);\n            stages.forEach((stage) => {\n                if (this._lifeCycles[composition]) {\n                    if (this._lifeCycles[composition][stage]) {\n                        // take the promise from unreleased lifeCycles\n                        const promise = this._unreleasedLifeCycles[composition][stage];\n                        // call the user given callback with that promise\n                        this._callLifeCycleCallback(composition, stage, promise);\n                        // delete promise from unreleased lifeCycles\n                        delete this._unreleasedLifeCycles[composition][stage];\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Cache the promise in the map. This cache\n     * then get consumed if we get user callbacks\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _cachePromise (composition, stage, promise) {\n        if (!hasOwn(this._unreleasedLifeCycles, composition)) {\n            this._unreleasedLifeCycles[composition] = {};\n        }\n\n        if (!hasOwn(this._unreleasedLifeCycles[composition], stage)) {\n            this._unreleasedLifeCycles[composition][stage] = {};\n        }\n        this._unreleasedLifeCycles[composition][stage] = promise;\n    }\n\n    /**\n     * It register's the callbacks gievn the user\n     *\n     * @param {Object} [lifeCycles={}] a object with list of callbacks\n     * @memberof LifeCycleManager\n     */\n    register (lifeCycles = {}) {\n        this._lifeCycles = lifeCycles;\n        // as we get all the callbacks, try to call them\n        // from unreleased promise map\n        this._releasePromisesFromCache();\n    }\n\n    /**\n     * Reset the promise into pending state\n     *\n     * @param {string} eventName name of the event happening\n     * @memberof LifeCycleManager\n     */\n    _resetTargetPromise (eventName) {\n        setTimeout(() => {\n            this._notifiers[eventName] = resolver;\n            this._promises.set(eventName, this._makeNotifierPromise(eventName));\n        }, 0);\n    }\n}\n","import LifeCycleManager from './lifecycle-manager';\n\nexport default LifeCycleManager;\n","export const createPromise = (promise, eventName, context) => {\n    promise.then(() => {\n        const prm = context._makeNotifierPromise(eventName);\n        context._promises.set(eventName, prm);\n        createPromise(prm, eventName, context);\n    });\n};\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\nexport const LONGTOUCH = 'longtouch';\nexport const TOUCHDRAG = 'touchdrag';\nexport const ALL_ACTIONS = '*';\n","const SELECTION_NEW_ENTRY = 1;\nconst SELECTION_NEW_EXIT = -1;\nconst SELECTION_NULL = 0;\nconst SELECTION_OLD_ENTRY = 2;\nconst SELECTION_OLD_EXIT = -2;\n\nexport {\n    SELECTION_NEW_ENTRY,\n    SELECTION_NEW_EXIT,\n    SELECTION_NULL,\n    SELECTION_OLD_ENTRY,\n    SELECTION_OLD_EXIT\n};\n","import SelectionSet from './selection-set';\n\nexport default SelectionSet;\n","import {\n    SELECTION_NEW_ENTRY, SELECTION_NEW_EXIT, SELECTION_NULL, SELECTION_OLD_ENTRY, SELECTION_OLD_EXIT\n} from '../enums/selection';\n/* eslint-disable guard-for-in */\n\n/**\n * This component is used to keep track of the row tuples of the data which gets added and removed. This keeps\n * information of which rows are in previous and new entry set and previous and new exit set. This is initialized by\n * {@link Firebolt}.\n *\n * @public\n *\n * @class SelectionSet\n */\nclass SelectionSet {\n    /**\n     * Creates an instance of selection set\n     *\n     * @param {Array.<string>} completeSet Set of unique ids.\n     */\n    constructor (completeSet, _volatile) {\n        this.completeSet = completeSet;\n        this._set = completeSet.reduce((obj, key) => {\n            obj[key] = SELECTION_NULL;\n            return obj;\n        }, {});\n        this._volatile = _volatile;\n        this._completeSetCount = completeSet.length;\n        this._lockedSelection = {};\n        this._resetted = true;\n    }\n\n    /**\n     * Adds a set of ids to the selection set. This also moves the other rows to exit set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    add (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_ENTRY;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_ENTRY && set[key] !== SELECTION_OLD_ENTRY) {\n                set[key] = set[key] < 0 ? SELECTION_OLD_EXIT : SELECTION_NEW_EXIT;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Adds an array of ids to the old entry set.\n     *\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    update (ids) {\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_OLD_ENTRY;\n        });\n\n        return this;\n    }\n\n    /**\n     * Moves all ids which in new entry set  to old entry set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateEntry () {\n        const set = this._set;\n\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_ENTRY ? SELECTION_OLD_ENTRY : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Moves an array of ids which are in new exit set to old exit set.\n     *\n     * @public\n     *\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateExit () {\n        const set = this._set;\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_EXIT ? SELECTION_OLD_EXIT : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Removes an array of ids from the selection set. It also moves the remaining row ids to entry set.\n     *\n     * @public\n     * @param {Array.<string>} ids Array of unique ids\n     *\n     * @return {SelectionSet}  Instance of selection set\n     */\n    remove (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_EXIT;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_EXIT && set[key] !== SELECTION_OLD_EXIT) {\n                set[key] = set[key] === 0 ? SELECTION_NEW_ENTRY : SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n\n    getSets () {\n        const set = this._set;\n        const retObj = {\n            entrySet: [[], []],\n            exitSet: [[], []],\n            completeSet: []\n        };\n\n        for (const key in set) {\n            if (set[key] > 0) {\n                set[key] === SELECTION_OLD_ENTRY && retObj.entrySet[0].push(key);\n                set[key] === SELECTION_NEW_ENTRY && retObj.entrySet[1].push(key);\n            } else if (set[key] < 0) {\n                set[key] === SELECTION_OLD_EXIT && retObj.exitSet[0].push(key);\n                set[key] === SELECTION_NEW_EXIT && retObj.exitSet[1].push(key);\n            }\n            retObj.completeSet.push(key);\n        }\n\n        ['entrySet', 'exitSet'].forEach((type) => {\n            retObj[type] = retObj[type].map(e => e.map(Number));\n        });\n        retObj.completeSet = retObj.completeSet.map(Number);\n\n        return retObj;\n    }\n\n    /**\n     * Resets an array of ids in the selection set to initial state. It sets the value of every unique id value to\n     * null in the selection set which means they are neither in entry set nor in exit set. If no ids are passed,\n     * then it resets all the ids to null.\n     *\n     * @public\n     *\n     * @param {Array} ids Array of unique ids.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    reset (ids) {\n        const set = this._set;\n        if (ids) {\n            ids.forEach((i) => {\n                set[i] = SELECTION_NULL;\n            });\n        } else {\n            const lockedSel = this._lockedSelection;\n            for (const key in set) {\n                if (!(key in lockedSel)) {\n                    set[key] = SELECTION_NULL;\n                }\n            }\n        }\n        this._resetted = true;\n        return this;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     *\n     * @public\n     *\n     * @return {Array.<string>} Array of unique ids\n     */\n    getEntrySet () {\n        const set = this._set;\n        const addSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_ENTRY && addSet.push(key);\n        }\n\n        return addSet;\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in entry set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old entry set or new entry set\n     */\n    getExistingEntrySet (addSet) {\n        const set = this._set;\n        return addSet.filter(d => set[d] === SELECTION_NEW_ENTRY || set[d] === SELECTION_OLD_ENTRY);\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old exit set or new exit set\n     */\n    getExistingExitSet (removeSet) {\n        const set = this._set;\n        return removeSet.filter(d => set[d] === SELECTION_NEW_EXIT || set[d] === SELECTION_OLD_EXIT);\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldEntry () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_ENTRY && updateSet.push(key);\n        }\n        return updateSet;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldExit () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_EXIT && updateSet.push(key);\n        }\n\n        return updateSet;\n    }\n\n    /**\n     * Gets the array of ids which are in the exit set.\n     *\n     * @public\n     * @return {Array.<string>} Array of unique ids\n     */\n    getExitSet () {\n        const set = this._set;\n        const removeSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_EXIT && removeSet.push(key);\n        }\n        return removeSet;\n    }\n\n    /**\n     * Gets all the ids which are either in exit or entry set.\n     *\n     * @public\n     * @return {Array} Array of unique ids\n     */\n    getCompleteSet () {\n        const set = this._set;\n        const completeSet = [];\n\n        for (const key in set) {\n            completeSet.push(key);\n        }\n\n        return completeSet;\n    }\n\n    getCompleteSetCount () {\n        return this._completeSetCount;\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Swaps the add set and remove set in the selection set.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    toggle () {\n        const set = this._set;\n\n        for (const key in set) {\n            if (set[key] === SELECTION_NEW_ENTRY) {\n                set[key] = SELECTION_NEW_EXIT;\n            } else if (set[key] === SELECTION_NEW_EXIT) {\n                set[key] = SELECTION_NEW_ENTRY;\n            } else if (set[key] === SELECTION_OLD_ENTRY) {\n                set[key] = SELECTION_OLD_EXIT;\n            } else {\n                set[key] = SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n}\n\nexport default SelectionSet;\n","import { clone } from 'muze-utils';\nimport * as SELECTION from '../enums/selection';\n\nexport const initializeSideEffects = (context, sideEffects) => {\n    const sideEffectsMap = context._sideEffects;\n    const config = context.config();\n    sideEffects = sideEffects instanceof Array ? sideEffects : Object.values(sideEffects);\n    sideEffects.forEach((SideEffect) => {\n        const formalName = SideEffect.formalName();\n        const sideEffectInstance = sideEffectsMap[formalName];\n        sideEffectsMap[formalName] = sideEffectInstance || new SideEffect(context);\n        const sideEffectConf = config[formalName];\n        sideEffectConf && sideEffectsMap[formalName].config(sideEffectConf);\n    });\n    return sideEffectsMap;\n};\n\nexport const initializeBehaviouralActions = (context, actions) => {\n    const dispatchableBehaviours = {};\n\n    actions = actions instanceof Array ? actions : Object.values(actions);\n    actions.forEach((Action) => {\n        dispatchableBehaviours[Action.formalName()] = new Action(context);\n    });\n    return dispatchableBehaviours;\n};\n\nexport const initializePhysicalActions = (context, actions) => {\n    const physicalActions = {};\n\n    for (const name in actions) {\n        if (!({}).hasOwnProperty.call(name, actions)) {\n            physicalActions[name] = actions[name](context);\n        }\n    }\n    return physicalActions;\n};\n\nexport const changeSideEffectAvailability = (context, fn, toEnable) => {\n    const sideEffects = context.sideEffects();\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            let change = true;\n            if (fn && fn(key) === false) {\n                change = false;\n            }\n            if (change) {\n                toEnable ? sideEffects[key].enable() : sideEffects[key].disable();\n            }\n        }\n    }\n};\n\nexport const getMergedSet = set => [...new Set([...set[0], ...set[1]])];\n\nexport const getSourceFields = (propagationInf, criteria = {}) => {\n    const sourceIdentifiers = propagationInf.sourceIdentifiers;\n    let sourceFields;\n    if (sourceIdentifiers) {\n        sourceFields = sourceIdentifiers.getSchema().map(d => d.name);\n    } else if (criteria instanceof Array) {\n        sourceFields = criteria[0];\n    } else {\n        sourceFields = Object.keys(criteria || {});\n    }\n    return sourceFields;\n};\n\nconst conditionsMap = {\n    newEntry: [SELECTION.SELECTION_NEW_ENTRY],\n    oldEntry: [SELECTION.SELECTION_OLD_ENTRY],\n    mergedEnter: [SELECTION.SELECTION_NEW_ENTRY, SELECTION.SELECTION_OLD_ENTRY],\n    newExit: [SELECTION.SELECTION_NEW_EXIT],\n    oldExit: [SELECTION.SELECTION_OLD_EXIT],\n    mergedExit: [SELECTION.SELECTION_NEW_EXIT, SELECTION.SELECTION_OLD_EXIT],\n    complete: []\n};\n\nexport const getModelFromSet = (type, model, set) => {\n    if (model) {\n        return model.select((fields, i) =>\n           (conditionsMap[type].some(condition => set[i] === condition)), {\n               saveChild: false\n           });\n    }\n    return null;\n};\n\nexport const getSetInfo = (type, set, config) => {\n    let model = null;\n    const filteredDataModel = config.filteredDataModel;\n    const selectionSet = config.selectionSet;\n    if (!config.propagationData) {\n        if (selectionSet.resetted()) {\n            model = null;\n        } else {\n            model = getModelFromSet(type, config.dataModel, config.selectionSet._set);\n        }\n    } else if (filteredDataModel) {\n        model = type === 'mergedEnter' ? filteredDataModel[0] : filteredDataModel[1];\n    }\n    return {\n        uids: set,\n        length: set.length,\n        model\n    };\n};\n\nexport const getSideEffects = (behaviour, behaviourEffectMap) => {\n    const sideEffects = [];\n    for (const key in behaviourEffectMap) {\n        const behaviours = key.split(',');\n        const found = behaviours.some(d => d === behaviour);\n        if (found) {\n            sideEffects.push({\n                effects: behaviourEffectMap[key],\n                behaviours\n            });\n        }\n    }\n    return sideEffects;\n};\n\nexport const unionSets = (context, behaviours) => {\n    let combinedSet = {};\n    const models = {\n        mergedEnter: null,\n        mergedExit: null\n    };\n    behaviours.forEach((behaviour) => {\n        const entryExitSet = context._entryExitSet[behaviour];\n        if (entryExitSet) {\n            combinedSet = Object.assign(combinedSet, clone(entryExitSet));\n            ['mergedEnter', 'mergedExit'].forEach((type) => {\n                const model = entryExitSet[type].model;\n                let existingModel = models[type];\n                if (!existingModel) {\n                    existingModel = models[type] = model;\n                } else if (`${model.getSchema().map(d => d.name).sort()}` ===\n                    `${existingModel.getSchema().map(d => d.name).sort()}`) {\n                    existingModel = models[type] = model.union(existingModel);\n                } else {\n                    existingModel = model;\n                }\n                combinedSet[type].model = existingModel;\n            });\n        }\n    });\n    return combinedSet;\n};\n","import {\n    mergeRecursive,\n    hasTouch,\n    filterPropagationModel,\n    FieldType,\n    selectElement,\n    isSimpleObject\n} from 'muze-utils';\nimport { ALL_ACTIONS } from './enums/actions';\nimport SelectionSet from './selection-set';\nimport {\n    initializeBehaviouralActions,\n    initializeSideEffects,\n    changeSideEffectAvailability,\n    initializePhysicalActions,\n    unionSets,\n    getSideEffects\n} from './helper';\n\n/**\n * This class is responsible for dispatching behavioural actions and side effects. It also keeps the information of\n * registered physical actions, behavioural actions and side effects. Also, it keeps the map of physical and behavioural\n * actions and behavioural actions and side effects. Whenever any behavioural action is dispatched, it also propagates\n * the rows which got affected to the other datamodels. This class is initialized by {@link VisualUnit} and legend to\n * manage it's interaction.\n *\n * @public\n * @class Firebolt\n * @module Firebolt\n */\nexport default class Firebolt {\n    constructor (context, actions, sideEffects, behaviourEffectMap) {\n        this.context = context;\n        this._sideEffectDefinitions = {};\n        this._sideEffects = {};\n        this._propagationInf = {};\n        this._actions = {\n            behavioural: {},\n            physical: {}\n        };\n        this._selectionSet = {};\n        this._volatileSelectionSet = {};\n        this._propagationFields = {};\n        this._sourceSideEffects = {\n            selectionBox: () => false\n        };\n        this._propagationBehaviourMap = {};\n        this._sourceBehaviours = {};\n        this._actionBehaviourMap = {};\n        this._config = {};\n        this._behaviourEffectMap = {};\n        this._entryExitSet = {};\n        this._actionHistory = {};\n        this._queuedSideEffects = {};\n\n        this.mapSideEffects(behaviourEffectMap);\n        this.registerBehaviouralActions(actions.behavioural);\n        this.registerSideEffects(sideEffects);\n        this.registerPhysicalBehaviouralMap(actions.physicalBehaviouralMap);\n        this.registerPhysicalActions(actions.physical);\n    }\n\n    config (...config) {\n        if (config.length) {\n            this._config = mergeRecursive(this._config, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    mapSideEffects (behEffectMap) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        for (const key in behEffectMap) {\n            if ({}.hasOwnProperty.call(behEffectMap, key)) {\n                const sideEffects = behEffectMap[key] || [];\n                let preventDefaultActions = false;\n                let effectNames;\n                if (isSimpleObject(sideEffects)) {\n                    effectNames = sideEffects.effects;\n                    preventDefaultActions = sideEffects.preventDefaultActions;\n                } else {\n                    effectNames = sideEffects;\n                }\n                !behaviourEffectMap[key] && (behaviourEffectMap[key] = []);\n                this._behaviourEffectMap[key] = [...new Set(preventDefaultActions ? effectNames :\n                    [...behaviourEffectMap[key], ...effectNames])];\n            }\n        }\n        return this;\n    }\n\n    registerBehaviouralActions (actions) {\n        const behaviours = initializeBehaviouralActions(this, actions);\n        this.prepareSelectionSets(behaviours);\n        Object.assign(this._actions.behavioural, behaviours);\n        return this;\n    }\n\n    prepareSelectionSets () {\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        this.initializeSideEffects();\n        return this;\n    }\n\n    applySideEffects (sideEffects, selectionSet, payload) {\n        const sideEffectStore = this.sideEffects();\n        const actionHistory = this._actionHistory;\n        const queuedSideEffects = this._queuedSideEffects;\n        sideEffects.forEach((sideEffect) => {\n            let options;\n            let name;\n            const effects = sideEffect.effects;\n            const behaviours = sideEffect.behaviours;\n            const combinedSet = unionSets(this, behaviours, selectionSet);\n            effects.forEach((effect) => {\n                if (typeof effect === 'object') {\n                    name = effect.name;\n                    options = effect.options;\n                } else {\n                    name = effect;\n                }\n\n                const sideEffectInstance = sideEffectStore[name];\n                if (sideEffectInstance.isEnabled()) {\n                    if (!sideEffectInstance.constructor.mutates() &&\n                        Object.values(actionHistory).some(d => d.isMutableAction)) {\n                        queuedSideEffects[`${name}-${behaviours.join()}`] = {\n                            name,\n                            params: [combinedSet, payload, options]\n                        };\n                    } else {\n                        this.dispatchSideEffect(name, combinedSet, payload, options);\n                    }\n                }\n            });\n        });\n        return this;\n    }\n\n    dispatchSideEffect (name, selectionSet, payload, options = {}) {\n        const sideEffectStore = this.sideEffects();\n        const sideEffect = sideEffectStore[name];\n        let disable = false;\n        if (options.filter && options.filter(sideEffect)) {\n            disable = true;\n        }\n        !disable && sideEffectStore[name].apply(selectionSet, payload, options);\n    }\n\n    registerPropagationBehaviourMap (map) {\n        this._propagationBehaviourMap = Object.assign(this._propagationBehaviourMap, map || {});\n        return this;\n    }\n\n    dispatchBehaviour (behaviour, payload, propagationInfo = {}) {\n        const propagate = propagationInfo.propagate !== undefined ? propagationInfo.propagate : true;\n        const behaviouralActions = this._actions.behavioural;\n        const action = behaviouralActions[behaviour];\n        const behaviourEffectMap = this._behaviourEffectMap;\n        const sideEffects = getSideEffects(behaviour, behaviourEffectMap);\n        this._propagationInf = propagationInfo;\n\n        if (action) {\n            const selectionSet = action.dispatch(payload);\n            const propagationSelectionSet = this.getPropagationSelectionSet(selectionSet);\n            this._entryExitSet[behaviour] = propagationSelectionSet;\n            const shouldApplySideEffects = this.shouldApplySideEffects(propagate);\n\n            if (propagate) {\n                this.propagate(behaviour, payload, selectionSet.find(d => d.sourceSelectionSet), sideEffects);\n            }\n            if (shouldApplySideEffects) {\n                const applicableSideEffects = this.getApplicableSideEffects(sideEffects, payload, propagationInfo);\n                this.applySideEffects(applicableSideEffects, propagationSelectionSet, payload);\n            }\n        }\n\n        return this;\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet.find(d => !d.sourceSelectionSet);\n    }\n\n    shouldApplySideEffects () {\n        return true;\n    }\n\n    changeBehaviourStateOnPropagation (behaviour, value) {\n        if (value instanceof Function) {\n            this._sourceBehaviours[behaviour] = value;\n        } else {\n            this._sourceBehaviours[behaviour] = () => value;\n        }\n        return this;\n    }\n\n    changeSideEffectStateOnPropagation (sideEffect, value) {\n        if (value instanceof Function) {\n            this._sourceSideEffects[sideEffect] = value;\n        } else {\n            this._sourceSideEffects[sideEffect] = () => value;\n        }\n    }\n\n    propagate () {\n        return this;\n    }\n\n    sideEffects (...sideEffects) {\n        if (sideEffects.length) {\n            this._sideEffects = sideEffects[0];\n            return this;\n        }\n        return this._sideEffects;\n    }\n\n    enableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, true);\n        return this;\n    }\n\n    disableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, false);\n        return this;\n    }\n\n    dissociateBehaviour (behaviour, physicalAction) {\n        const actionBehaviourMap = this._actionBehaviourMap;\n        for (const key in actionBehaviourMap) {\n            if (key === physicalAction) {\n                const behaviourMap = actionBehaviourMap[key];\n                behaviourMap.behaviours = behaviourMap.behaviours.filter(d => d !== behaviour);\n                this.mapActionsAndBehaviour(key);\n            }\n        }\n\n        return this;\n    }\n\n    dissociateSideEffect (sideEffect, behaviour) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        behaviourEffectMap[behaviour] = behaviourEffectMap[behaviour].filter(d => (d.name || d) !== sideEffect);\n        return this;\n    }\n\n    getApplicableSideEffects (sideEffects) {\n        return sideEffects;\n    }\n\n    attachPropagationListener (dataModel) {\n        dataModel.unsubscribe('propagation');\n        dataModel.on('propagation', this.onDataModelPropagation());\n        return this;\n    }\n\n    onDataModelPropagation () {\n        return (propValue) => {\n            const payload = propValue.payload;\n            const action = payload.action;\n\n            this.dispatchBehaviour(action, payload, {\n                propagate: false\n            });\n        };\n    }\n\n    createSelectionSet (uniqueIds, behaviouralActions) {\n        const behaviours = behaviouralActions || this._actions.behavioural;\n        const selectionSet = this._selectionSet;\n        const volatileSelectionSet = this._volatileSelectionSet;\n\n        for (const key in behaviours) {\n            if ({}.hasOwnProperty.call(behaviours, key)) {\n                selectionSet[key] = new SelectionSet(uniqueIds);\n                volatileSelectionSet[key] = new SelectionSet(uniqueIds, true);\n            }\n        }\n        this._volatileSelectionSet = volatileSelectionSet;\n        this.selectionSet(selectionSet);\n        return this;\n    }\n\n    selectionSet (...selectionSet) {\n        if (selectionSet.length) {\n            this._selectionSet = selectionSet[0];\n            return this;\n        }\n        return this._selectionSet;\n    }\n\n    initializeSideEffects () {\n        const sideEffectDefinitions = this._sideEffectDefinitions;\n        this.sideEffects(initializeSideEffects(this, sideEffectDefinitions));\n        return this;\n    }\n\n    registerPhysicalActions (actions) {\n        const initedActions = initializePhysicalActions(this, actions);\n        Object.assign(this._actions.physical, initedActions);\n        return this;\n    }\n\n    /**\n     * Allows to propagate the datamodel with only the supplied fields. When propagation is done, then the fields\n     * which are supplied for the specified behavioural action is propagated.\n     *\n     * @public\n     *\n     * @param {string} action Name of behavioural action. If '*' is specified, then for all behavioural actions it is\n     * applied.\n     * @param {Array} fields Array of field names which will be propagated.\n     * @param {boolean} append If true, then it is appended to the existing propagation data model fields else only\n     * those fields are projected from propagation data model and propagated.\n     *\n     * @return {Firebolt} Instance of firebolt\n     */\n    propagateWith (action, fields, append = false) {\n        const behaviouralActions = this._actions.behavioural;\n        if (fields.length) {\n            if (action === ALL_ACTIONS) {\n                for (const key in behaviouralActions) {\n                    this._propagationFields[key] = {\n                        fields,\n                        append\n                    };\n                }\n            } else {\n                this._propagationFields[action] = {\n                    fields,\n                    append\n                };\n            }\n            return this;\n        }\n        return this._propagationFields;\n    }\n\n    /**\n     * Map actions and behaviours\n     * @return {Firebolt} Firebolt instance\n     */\n    mapActionsAndBehaviour (phyAction) {\n        const initedPhysicalActions = this._actions.physical;\n        const map = this._actionBehaviourMap;\n\n        for (const action in map) {\n            if (!({}).hasOwnProperty.call(action, map) && action === (phyAction || action)) {\n                let target;\n                const mapObj = map[action];\n                target = mapObj.target;\n                const touch = mapObj.touch;\n                if (!target) {\n                    target = this.context.getDefaultTargetContainer();\n                }\n                const bind = hasTouch() ? touch === true || touch === undefined : !touch;\n                bind && this.bindActionWithBehaviour(initedPhysicalActions[action],\n                    target, mapObj.behaviours);\n            }\n        }\n        return this;\n    }\n\n    registerPhysicalBehaviouralMap (map) {\n        this._actionBehaviourMap = mergeRecursive(this._actionBehaviourMap, map);\n        return this;\n    }\n\n    /**\n     * Binds a target element with an action.\n     *\n     * @param {Function} action Action method\n     * @param {string} target Class name of element\n     * @param {Array} behaviourList Array of behaviours\n     * @return {FireBolt} Instance of firebolt\n     */\n    bindActionWithBehaviour (action, targets, behaviourList) {\n        if (typeof (targets) === 'string') {\n            targets = [targets];\n        }\n        targets.forEach((target) => {\n            const mount = this.context.mount();\n            const nodes = target.node instanceof Function ? target : selectElement(mount).selectAll(target);\n            if (!nodes.empty()) {\n                if (nodes instanceof Array) {\n                    nodes.forEach((node) => {\n                        action(selectElement(node), behaviourList);\n                    });\n                } else {\n                    action(nodes, behaviourList);\n                }\n            }\n        });\n        return this;\n    }\n\n    getPropagationInf () {\n        return this._propagationInf;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.context;\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all');\n        const xFields = context.fields().x || [];\n        const yFields = context.fields().y || [];\n        const xMeasures = xFields.every(field => field.type() === FieldType.MEASURE);\n        const yMeasures = yFields.every(field => field.type() === FieldType.MEASURE);\n        return {\n            model: filteredDataModel,\n            uids: criteria === null ? null : (propagationInf.data ? filterPropagationModel(this.getFullData(),\n                propagationInf.data[0], xMeasures && yMeasures).getData().uids : filteredDataModel[0].getData().uids)\n        };\n    }\n\n    getSelectionSets (action) {\n        const sourceId = this.context.id();\n        const propagationInf = this._propagationInf || {};\n        const propagationSource = propagationInf.sourceId;\n        let applicableSelectionSets = [];\n        if (propagationSource !== sourceId) {\n            applicableSelectionSets = [this._volatileSelectionSet[action]];\n        }\n\n        if (propagationSource) {\n            applicableSelectionSets.push(this.selectionSet()[action]);\n        }\n        return applicableSelectionSets;\n    }\n\n    getFullData () {\n        return this.context.data();\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Returns the entry and exit set information of the specified behavioural action.\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of behavioural action.\n     *\n     * @return {Object} Entry exit set information.\n     */\n    getEntryExitSet (behaviour) {\n        return this._entryExitSet[behaviour];\n    }\n}\n","import { getSetInfo, getMergedSet, getSourceFields } from '../../helper';\n\n/**\n * This is the base class has all the common functionalities needed for all behavioural actions. Any other behavioural\n * action needs to extend this class.\n *\n * @public\n * @class GenericBehaviour\n * @module GenericBehaviour\n */\nexport default class GenericBehaviour {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n    }\n\n    /**\n     * Returns entry and exit set information. This method is called by firebolt when ```dispatchBehaviour``` is called\n     * dynamically or when any physical action is triggered on the chart.\n     *\n     * @param {Object} payload Payload information.\n     * @param {Object|Array} payload.criteria Identifiers of data interacted with.\n     *\n     * @return {Array} Entry and exit set information.\n     */\n    dispatch (payload) {\n        const criteria = payload.criteria;\n        const firebolt = this.firebolt;\n        const formalName = this.constructor.formalName();\n        const selectionSets = firebolt.getSelectionSets(formalName);\n        const {\n            model: filteredDataModel,\n            uids\n        } = this.firebolt.getAddSetFromCriteria(criteria, this.firebolt.getPropagationInf());\n        const entryExitSets = selectionSets.map((selectionSet) => {\n            this.setSelectionSet(uids, selectionSet);\n            return this.getEntryExitSet(selectionSet, filteredDataModel, payload);\n        });\n\n        return entryExitSets;\n    }\n\n    /**\n     * Updates the selection set by adding uids to the instance of {@link SelectionSet} or removing them.\n     * {@link SelectionSet} keeps the information of which rows are in the entry set and exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of row ids which got affected during interaction.\n     * @param {SelectionSet} selectionSet Instance of selection set.\n     *\n     * @return {GenericBehaviour} Instance of behaviour.\n     */\n    setSelectionSet () {\n        return this;\n    }\n\n    getEntryExitSet (selectionSet, filteredDataModel, payload) {\n        const {\n            entrySet,\n            exitSet,\n            completeSet\n        } = selectionSet.getSets();\n        const propagationInf = this.firebolt.getPropagationInf();\n        const dataModel = this.firebolt.getFullData();\n        const setConfig = {\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            dataModel,\n            filteredDataModel,\n            propagationData: propagationInf.data,\n            selectionSet\n        };\n\n        return {\n            entrySet: [getSetInfo('oldEntry', entrySet[0], setConfig),\n                getSetInfo('newEntry', entrySet[1], setConfig)],\n            exitSet: [getSetInfo('oldEntry', exitSet[0], setConfig),\n                getSetInfo('newExit', exitSet[1], setConfig)],\n            mergedEnter: getSetInfo('mergedEnter', getMergedSet(entrySet), setConfig),\n            mergedExit: getSetInfo('mergedExit', getMergedSet(exitSet), setConfig),\n            completeSet: getSetInfo('complete', completeSet, setConfig),\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            fields: getSourceFields(propagationInf, payload.criteria),\n            sourceSelectionSet: selectionSet._volatile === true\n        };\n    }\n\n    static mutates () {\n        return false;\n    }\n\n    enable () {\n        this._enabled = true;\n    }\n\n    disable () {\n        this._enabled = false;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n}\n\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class VolatileBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n                // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                    || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            selectionSet.updateExit();\n            const { entrySet } = selectionSet.getSets();\n            selectionSet.reset(getMergedSet(entrySet));\n            selectionSet.add(addSet);\n            selectionSet.update(existingAddSet);\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n    }\n}\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n","import VolatileBehaviour from './volatile';\nimport { HIGHLIGHT } from '../../enums/behaviours';\n\nexport default class HighlightBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return HIGHLIGHT;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport * as BEHAVIOURNAMES from '../../enums/behaviours';\n\n/**\n * This is the behaviour for brushing a region on the chart. It accepts a payload\n * which contains the x and y range of the data and other configuration. It will then\n * create a selection box from the range and select the points which fall within the range.\n */\nexport default class BrushBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return BEHAVIOURNAMES.BRUSH;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport { FILTER } from '../../enums/behaviours';\n\nexport default class FilterBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return FILTER;\n    }\n\n    static mutates () {\n        return true;\n    }\n}\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class PersistentBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            const propagationInf = this.firebolt.getPropagationInf();\n            // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            if (propagationInf.propagate === false) {\n                selectionSet.updateExit();\n                const { entrySet } = selectionSet.getSets();\n                selectionSet.reset(getMergedSet(entrySet));\n                selectionSet.add(addSet);\n                selectionSet.update(existingAddSet);\n            } else {\n                // existing add set\n                if (existingAddSet.length) {\n                    selectionSet.updateExit();\n                    selectionSet.remove(existingAddSet);\n                } else {\n                    selectionSet.updateEntry();\n                    selectionSet.add(addSet);\n                }\n                const { exitSet } = selectionSet.getSets();\n                const mergedExitSet = getMergedSet(exitSet);\n                const completeSetCount = selectionSet.getCompleteSet().length;\n                if (mergedExitSet.length === completeSetCount) {\n                    selectionSet.reset();\n                }\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n\n        return this;\n    }\n}\n","import PersistentBehaviour from './persistent';\nimport { SELECT } from '../../enums/behaviours';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return SELECT;\n    }\n}\n\n","import { DimensionSubtype, MeasureSubtype } from 'muze-utils';\n/**\n * Gets the drag action configuration\n * @param {VisualUnit} instance instance of visual unit\n * @param {Object} config x y positions\n * @return {Object} Payload of behaviour\n*/\n/* istanbul ignore next */ const getDragActionConfig = (sourceInfo, config, fieldsConfig) => {\n    if (!(sourceInfo.axes.x || sourceInfo.axes.y)) {\n        return {\n            criteria: null\n        };\n    }\n\n    const axes = sourceInfo.axes;\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const axisFields = sourceInfo.fields;\n    const xField = axisFields.x[0].getMembers()[0];\n    const yField = axisFields.y[0].getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n    const dimensions = {};\n    const stPos = config.startPos;\n    const endPos = config.endPos;\n\n    if (stPos.x === endPos.x && stPos.y === endPos.y) {\n        return {\n            criteria: null\n        };\n    }\n\n    const dragDim = xFieldType === MeasureSubtype.CONTINUOUS ? (yFieldType === MeasureSubtype.CONTINUOUS ?\n        ['x', 'y'] : ['y']) : ['x'];\n    const criteria = {};\n    const isXDimension = xFieldType === DimensionSubtype.CATEGORICAL;\n    const isYDimension = yFieldType === DimensionSubtype.CATEGORICAL;\n    const xRange = xAxis.constructor.type() === 'band' ? xAxis.scale().invertExtent(stPos.x, endPos.x) :\n        xAxis.invert(stPos.x, endPos.x);\n    const yRange = yAxis.constructor.type() === 'band' ? yAxis.scale().invertExtent(stPos.y, endPos.y) :\n        yAxis.invert(stPos.y, endPos.y);\n    const selectedDomains = {\n        x: stPos.x === endPos.x ? [] : (isXDimension ? xRange : xRange.sort((a, b) => a - b)),\n        y: stPos.y === endPos.y ? [] : (isYDimension ? yRange : yRange.sort((a, b) => a - b))\n    };\n    const rangeObj = {};\n\n    if (dragDim.length === 2) {\n        rangeObj[xField] = selectedDomains.x;\n        rangeObj[yField] = selectedDomains.y;\n        if (xField === yField) {\n            const xdom = selectedDomains.x;\n            const ydom = selectedDomains.y;\n            const min = xdom[0] > ydom[0] ? ydom : xdom;\n            const max = min === ydom ? xdom : ydom;\n            if (min[1] < max[0]) {\n                rangeObj[xField] = [];\n            } else {\n                rangeObj[xField] = [max[0], min[1] < max[1] ? min[1] : max[1]];\n            }\n            dimensions.x = [stPos.x, endPos.x];\n            dimensions.y = [stPos.y, endPos.y];\n        }\n    } else {\n        criteria[dragDim[0]] = selectedDomains[dragDim[0]] || [];\n\n        if (dragDim[0] === 'x') {\n            rangeObj[xField] = criteria.x;\n            if (xFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.x = (config.snap && stPos.x !== endPos.x) ? xAxis.getNearestRange(stPos.x, endPos.x) :\n                    [stPos.x, endPos.x];\n            }\n        } else {\n            rangeObj[yField] = criteria.y;\n            if (yFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.y = (config.snap && stPos.y !== endPos.y) ? yAxis.getNearestRange(stPos.y, endPos.y) :\n                    [stPos.y, endPos.y];\n            }\n        }\n    }\n\n    return {\n        criteria: rangeObj,\n        dimensions\n    };\n};\n\nexport default getDragActionConfig;\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './drag-action-config';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const attachDragEvent = (targetEl, behaviours, firebolt, touch) => {\n    let startPos = {};\n    let endPos = {};\n    let drawingInf;\n\n    const d3Drag = getD3Drag();\n    let touchStart;\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n        drawingInf = firebolt.context.getDrawingContext();\n        touchStart = new Date().getTime();\n    }).on('drag', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        if (touch && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos\n        }, firebolt.context.data().getFieldsConfig());\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }).on('end', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        const duration = new Date().getTime() - touchStart;\n\n        if (touch && duration > 100 && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos,\n            snap: true\n        }, firebolt.context.data().getFieldsConfig());\n        payload.dragEnd = true;\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }));\n};\n\n","import { getClientPoint, getEvent } from 'muze-utils';\nimport { CONSOLIDATED, FRAGMENTED } from '../../enums/constants';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} instance instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const context = firebolt.context;\n        const tooltipConf = context.config().interaction.tooltip;\n        const mode = tooltipConf.mode;\n        const pos = getClientPoint(context.getDrawingContext().svgContainer, event);\n        const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n            getAllPoints: mode === CONSOLIDATED || mode === FRAGMENTED,\n            data: args,\n            event\n        });\n        const payload = {\n            criteria: nearestPoint ? nearestPoint.id : null,\n            showInPosition: nearestPoint.showInPosition,\n            target: nearestPoint.target,\n            position: pos,\n            mode\n        };\n\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                            criteria: null\n                        }));\n                    });\n};\n\nexport default hover;\n","export const CLASSPREFIX = 'muze';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\n\n","import { getClientPoint } from 'muze-utils';\n\nexport const generatePayloadFromEvent = function (args, event, firebolt) {\n    const context = firebolt.context;\n    const pos = getClientPoint(context.getDrawingContext().svgContainer, event.touches ? event.touches[0] : event);\n    const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n        data: args,\n        event\n    });\n    return {\n        criteria: nearestPoint ? nearestPoint.id : null,\n        showInPosition: nearestPoint.showInPosition,\n        target: nearestPoint.target,\n        position: pos\n    };\n};\n","import { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport { longtouch } from './longtouch';\nimport { touchdrag } from './touch-drag';\nimport * as ACTIONNAMES from '../../enums/actions';\nimport click from './click';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click,\n    [ACTIONNAMES.LONGTOUCH]: longtouch,\n    [ACTIONNAMES.TOUCHDRAG]: touchdrag\n};\n\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt);\n};\n\nexport default drag;\n","/* global setTimeout */\nimport { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nexport const longtouch = firebolt => (targetEl, behaviours) => {\n    let event;\n    let touchEnd;\n    const dispatchBehaviour = function (args) {\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    touchEnd = false;\n    event = getEvent();\n    targetEl.on('touchstart', (args) => {\n        event = getEvent();\n        touchEnd = false;\n        setTimeout(() => {\n            if (!touchEnd) {\n                dispatchBehaviour(args);\n            } else {\n                behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                    criteria: null\n                }));\n            }\n        }, 100);\n    }).on('touchend', () => {\n        touchEnd = true;\n    });\n};\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const touchdrag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt, true);\n};\n\n","import GenericSideEffect from './generic-sideeffect';\n\nexport default GenericSideEffect;\n","import { mergeRecursive, getUniqueId } from 'muze-utils';\n\n/**\n * This is the base class of all side effects. It contains all common methods like setting configuration, disabling,\n * enabling side effect, etc. Every new side effect has to inherit this class or {@link SpawnableSideEffect} or\n * {@link SurrogateSideEffect} class. All side effects are initialized by firebolt. The instance of firebolt is\n * passed on initialization. The firebolt instance contains ```context``` which is the instance of visual unit with\n * which the firebolt is attached.\n *\n * @public\n * @class\n * @module GenericSideEffect\n */\nexport default class GenericSideEffect {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n        this._strategy = 'default';\n        this._config = {};\n        this._id = getUniqueId();\n        this._strategies = {};\n        this.config(this.constructor.defaultConfig());\n    }\n\n    /**\n     * Returns the default configuration of the side effect.\n     *\n     * @public\n     * @return {Object} Default configuration of side effect.\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the formal name of a side effect. This method must be implemented by all side effects which changes\n     * or adds any element in the visualization.\n     *\n     * @return {string} Formal name of side effect.\n     */\n    static formalName () {\n        return 'generic';\n    }\n\n    static target () {\n        return 'all';\n    }\n\n    /**\n     * Returns true if the side effects mutates the data of chart.\n     *\n     * @public\n     *\n     * @return {boolean} If the side effect mutates the data of chart.\n     */\n    static mutates () {\n        return false;\n    }\n\n    /**\n     * Sets or gets the configuration of side effect.\n     *\n     * When setter,\n     * @param {Object} config Configuration of side effect.\n     * @return {GenericSideEffect} Side effect instance.\n     *\n     * When getter,\n     * @return {Object} Side effect configuration.\n     */\n    config (...params) {\n        if (params.length) {\n            this._config = mergeRecursive(this._config, params[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    disable () {\n        this._enabled = false;\n        return this;\n    }\n\n    enable () {\n        this._enabled = true;\n        return this;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n\n    /**\n     * Applies the interaction effect on the chart. This is where the implemntation of the side effect is defined.\n     *\n     * @param {Object} selectionSet Contains the entry and exit set of data which got affected during interaction.\n     * @param {Object} selectionSet.mergedEnter Combined previous entry and new entry set.\n     * @param {DataModel} selectionSet.mergedEnter.model Instance of data model containing all rows which got\n     * affected during interaction.\n     * @param {Array} selectionSet.mergedEnter.uids Ids of all rows which were affected during interaction.\n     * @param {Object} selectionSet.mergedExit Combined previous exit and new exit set.\n     * @param {DataModel} selectionSet.mergedExit.model Instance of data model containing rows which were not affected\n     * during interaction.\n     * @param {Array} selectionSet.mergedExit.uids Ids of all rows which were not affected during interaction.\n     * @param {Object} selectionSet.entrySet Entry set information.\n     * @param {Array} selectionSet.entrySet[0].uids All row ids which got affected during previous interaction.\n     * @param {Array} selectionSet.entrySet[1].uids All row ids which got affected during current interaction.\n     * @param {Array} selectionSet.exitSet[0].uids All row ids which were not affected during previous interaction.\n     * @param {Array} selectionSet.exitSet[1].uids All row ids which were not affected during current interaction.\n     * @param {Object} payload Payload information of the behavioural action on trigger of which this side effect\n     * is applied.\n     * @param {Object} options Optional information for side effect like strategy, etc.\n     */\n    apply () {\n        return this;\n    }\n\n    /**\n     * Adds a new strategy method for this side effect. The strategy method is implemented by side effect class.\n     *\n     * @param {string} name Name of the strategy.\n     * @param {Function} fn Strategy method.\n     *\n     * @return {GenericSideEffect} Instance of side effect.\n     */\n    addStrategy (name, fn) {\n        this._strategies[name] = fn;\n        return this;\n    }\n}\n","import GenericSideEffect from './generic';\n\n/**\n * This class is inherited by all side effects which changes the look of any existing elements in the visualization.\n * For example, if a side effect wants to change the color of bar plots, then it is a surrogate side effect.\n *\n * To use this,\n * ```\n *      const SurrogateSideEffect = muze.SideEffects.standards.SurrogateSideEffect;\n *\n *      class BarColorChanger extends SurrogateSideEffect {\n *          static formalName () {\n *              return 'colorChanger';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n *\n * @module SurrogateSideEffect\n * @class\n * @extends GenericSideEffect\n */\nexport default class SurrogateSideEffect extends GenericSideEffect {\n    /**\n     * Applies or removes interaction styles from plot elements. An array of row ids needs to be passed\n     * which identifies the plot elements and applies styles to them.\n     *\n     * To apply the interaction style,\n     * ```\n     *      const entryRowIds = entrySet[0].uids;\n     *      const interactionStyle = [{\n     *          type: 'fill',\n     *          intensity: [0, 0, 15, 0] // hsla configuration\n     *      }];\n     *\n     *      this.applyInteractionStyle(entryRowIds, interactionStyle, 'brighten', true);\n     * ```\n     * @public\n     * @param {Array} set Array of row ids.\n     * @param {Array} config Style configuration.\n     * @param {Object} config[0] fill or stroke configuration.\n     * @param {string} config[0].type Type of style - fill or stroke.\n     * @param {Array} config[0].intensity hsla configuration.\n     * @param {string} interactionType Type of interaction. This is needed for storing the styles for\n     * each type of interaction in the plot elements.\n     * @param {boolean} apply Whether to apply or remove the interaction style.\n     *\n     * @return {SurrogateSideEffect} Instance of surrogate side effect.\n     */\n    applyInteractionStyle (set, config = {}, interactionType, apply) {\n        const layers = this.firebolt.context.layers();\n        layers.forEach(layer => layer.config().interactive !== false &&\n            layer.applyInteractionStyle(interactionType, set.uids, apply));\n        return this;\n    }\n}\n","import { makeElement } from 'muze-utils';\n\nimport GenericSideEffect from './generic';\n\n/**\n * Any side effect which will add any new element to the chart like drawing a rectangular box or any annotation over\n * the chart needs to inherit this class. This class has methods which returns the container where the dom elements\n * needs to be created.\n *\n * To use this,\n * ```\n *      const SpawnableSideEffect = muze.SideEffects.standards.SpawnableSideEffect;\n *\n *      class SelectionBox extends SpawnableSideEffect {\n *          static formalName () {\n *              return 'selectionBox';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n * @class\n * @extends GenericSideEffect\n * @module SpawnableSideEffect\n */\nexport default class SpawnableSideEffect extends GenericSideEffect {\n    /**\n     * Creates a html or svg element in the container.\n     *\n     * @public\n     * @param {SVGElement|HTMLElement} container Container where the dom element will be rendered.\n     * @param {string} elemType Type of dom element.\n     * @param {Array} data Array of objects with which the dom elements will be binded.\n     * @param {string} className class name of the element.\n     *\n     * @return {Selection} D3 Selection of the element.\n     */\n    createElement (container, elemType, data, className, callbacks) {\n        return makeElement(container, elemType, data, className, callbacks);\n    }\n\n    /**\n     * Returns the drawing information for side effect like svg container, dimensions of the visual unit.\n     *\n     * @public\n     * @return {Object} Drawing information for side effect.\n     * ```\n     *      sideEffectGroup: // svg container where the side effect needs to be appended.\n     *      svgContainer: // svg container of the {@link VisualUnit}.\n     *      htmlContainer: // html div container of the {@link VisualUnit}.\n     *      width: // Width of the {@link VisualUnit}\n     *      height: // Height of the {@link VisualUnit}\n     * ```\n     */\n    drawingContext (...drawingContext) {\n        if (drawingContext.length) {\n            this._drawingContext = drawingContext[0];\n            return this;\n        }\n        return this._drawingContext();\n    }\n\n    show () {\n        return this;\n    }\n\n    hide () {\n        return this;\n    }\n}\n","import { selectElement } from 'muze-utils';\n\nexport const getBoxDimensionsFromPayload = (payload, axes, axisFields) => {\n    let x1;\n    let x2;\n    let y1;\n    let y2;\n    let xRange;\n    let yRange;\n    let direction;\n    const criteria = payload.criteria;\n    const dimensions = payload.dimensions || {};\n    const xDim = dimensions.x;\n    const yDim = dimensions.y;\n\n    if (criteria === null) {\n        return null;\n    }\n\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const xLinear = xAxis.constructor.type() === 'linear';\n    const yLinear = yAxis.constructor.type() === 'linear';\n    const xField = `${axisFields.x[0]}`;\n    const yField = `${axisFields.y[0]}`;\n    const xCriteria = criteria[xField];\n    const yCriteria = criteria[yField];\n\n    if (xCriteria && xCriteria[0] instanceof Array) {\n        xRange = xCriteria[0];\n        yRange = xCriteria[1];\n    } else {\n        xRange = xCriteria || [];\n        yRange = yCriteria || [];\n    }\n    direction = xCriteria && yCriteria ? 'both' : (xCriteria ? 'vertical' : 'horizontal');\n    if (xRange && xRange.length) {\n        if ((yAxis.constructor.type() === 'band' && xLinear)) {\n            x1 = x2 = undefined;\n            direction = 'horizontal';\n        } else {\n            const domain = xAxis.domain();\n            const bandScale = xAxis.constructor.type() === 'band';\n            let x1Val;\n            let x2Val;\n            if (bandScale) {\n                let x1DomainIndex = domain.indexOf(xRange[0]);\n                let x2DomainIndex = domain.indexOf(xRange[xRange.length - 1]);\n                [x1DomainIndex, x2DomainIndex] = [x1DomainIndex, x2DomainIndex].sort((a, b) => a - b);\n                x1Val = domain[x1DomainIndex];\n                x2Val = domain[x2DomainIndex];\n            } else {\n                x1Val = xRange[0];\n                x2Val = xRange[xRange.length - 1];\n            }\n            x1 = xAxis.getScaleValue(x1Val);\n            x2 = xAxis.getScaleValue(x2Val);\n            x2 += bandScale ? xAxis.getUnitWidth() : 0;\n        }\n    } else {\n        x1 = x2 = undefined;\n    }\n    if (yRange && yRange.length) {\n        if ((xAxis.constructor.type() === 'band' && yLinear)) {\n            y1 = y2 = undefined;\n            direction = 'vertical';\n        } else {\n            const domain = yAxis.domain();\n            const bandScale = yAxis.constructor.type() === 'band';\n            let y1Val;\n            let y2Val;\n            if (bandScale) {\n                let y1DomainIndex = domain.indexOf(yRange[0]);\n                let y2DomainIndex = domain.indexOf(yRange[yRange.length - 1]);\n                [y1DomainIndex, y2DomainIndex] = [y1DomainIndex, y2DomainIndex].sort(((a, b) => b - a));\n                y1Val = domain[y1DomainIndex];\n                y2Val = domain[y2DomainIndex];\n            } else {\n                y1Val = yRange[0];\n                y2Val = yRange[yRange.length - 1];\n            }\n            y1 = yAxis.getScaleValue(y1Val);\n            y2 = yAxis.getScaleValue(y2Val);\n            y2 += yAxis.constructor.type() === 'band' ? yAxis.getUnitWidth() : 0;\n        }\n    } else {\n        y1 = y2 = undefined;\n    }\n\n    if ((yLinear && xLinear) || !payload.dragEnd) {\n        if (xDim) {\n            [x1, x2] = xDim;\n        }\n        if (yDim) {\n            [y1, y2] = yDim;\n        }\n    }\n\n    return {\n        dimension: {\n            x1,\n            x2,\n            y1,\n            y2\n        },\n        direction\n    };\n};\n\nexport const changeVisibility = (context, sideEffectGroup, visible) => {\n    const config = context.config();\n    const className = config.defClassName;\n    const classPrefix = config.classPrefix;\n    selectElement(sideEffectGroup).selectAll(`.${classPrefix}-${className}`)\n                    .style('display', visible ? 'block' : 'none');\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    isValidValue\n} from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport './styles.scss';\nimport SpawnableSideEffect from '../spawnable';\nimport { selectionBoxDrag } from '../../actions/physical/selection-box-drag';\nimport { getBoxDimensionsFromPayload, changeVisibility } from './helper';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\nclass SelectionBox extends SpawnableSideEffect {\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            defClassName: 'selection-box-group',\n            className: '',\n            classPrefix: CLASSPREFIX,\n            box: {\n                defClassName: 'selection-box',\n                className: ''\n            },\n            transition: {\n                duration: 200\n            }\n        };\n    }\n\n    static formalName () {\n        return 'selectionBox';\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     * @param {Object} dimension Dimensions of the selection box.\n     * @param {number} dimension.x1 Starting x position\n     * @param {number} dimension.x2 Ending x position\n     * @param {number} dimension.y1 Starting y position\n     * @param {number} dimension.y2 Ending y position\n     * @param {Object} conf Configuration needed to draw the selection box\n     * @param {number} unitWidth Width of the visual unit.\n     * @param {number} unitHeight Height of the visual unit.\n     */\n    apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const config = this._config;\n        const boxConf = config.box;\n        const firebolt = this.firebolt;\n        const drawingInf = this.drawingContext();\n        const mountPoint = drawingInf.sideEffectGroup;\n        const unitWidth = drawingInf.width;\n        const unitHeight = drawingInf.height;\n        const classPrefix = config.classPrefix;\n        const selectionGroupClassName = config.defClassName;\n\n        if (payload.criteria === null) {\n            this.hide(drawingInf);\n            return this;\n        }\n\n        const sourceInf = firebolt.context.getSourceInfo();\n        const { dimension, direction } = getBoxDimensionsFromPayload(payload, sourceInf.axes,\n            sourceInf.fields);\n        const transition = payload.dragEnd && config.transition;\n\n        if (direction === 'both' || direction === 'vertical') {\n            x = Math.min(dimension.x1, dimension.x2);\n            width = Math.abs(dimension.x2 - dimension.x1);\n        } else {\n            x = 0;\n            width = unitWidth;\n        }\n        if (direction === 'both' || direction === 'horizontal') {\n            y = Math.min(dimension.y1, dimension.y2);\n            height = Math.abs(dimension.y2 - dimension.y1);\n        } else {\n            height = unitHeight;\n            y = 0;\n        }\n        this.show(drawingInf);\n        // Create the data array for drawing the rectangle\n        const points = [\n            {\n                x,\n                y,\n                width,\n                height\n            }\n        ];\n        // Create the container group for selection box.\n        const selectionGroup = makeElement(selectElement(mountPoint), 'g', [1],\n            `.${classPrefix}-${selectionGroupClassName}`);\n        const sideEffect = this;\n        const selection = selectionGroup.selectAll('rect').data(points);\n        const selectionBox = selection.enter().append('rect')\n                        .each(function () {\n                            selectionBoxDrag(firebolt)(selectElement(this), ['brush'], sideEffect);\n                        })\n                        .merge(selection)\n                        .each(function (attrs) {\n                            let element = selectElement(this);\n                            transition && (element = element.transition().duration(transition.duration));\n                            for (const key in attrs) {\n                                if ({}.hasOwnProperty.call(attrs, key)) {\n                                    isValidValue(attrs[key]) && element.attr(key, attrs[key]);\n                                }\n                            }\n                        });\n        // Get the qualified class name for selection box rectangle\n        const boxClassName = getQualifiedClassName(boxConf.defClassName, this._id, classPrefix);\n        selectionBox.classed(boxClassName.join(' '), true);\n        selectionBox.classed(boxConf.className, true);\n\n        return this;\n    }\n\n    hide (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, false);\n    }\n\n    show (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, true);\n    }\n}\n\nexport default SelectionBox;\n\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './helpers/drag-action-config';\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let subject;\n    let drawingInf;\n    const context = firebolt.context;\n    const onDrag = (payload) => {\n        behaviours.forEach(action => firebolt.dispatchBehaviour(action, payload));\n    };\n    const d3Drag = getD3Drag();\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        drawingInf = context.getDrawingContext();\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        subject.x += event.dx;\n        subject.y += event.dy;\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            }, context.data().getFieldsConfig());\n            onDrag(payload);\n        }\n    }).on('end', () => {\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                },\n                snap: true\n            }, context.data().getFieldsConfig());\n            payload.dragEnd = true;\n            onDrag(payload);\n        }\n    }));\n};\n","export const CLASSPREFIX = 'muze';\nexport const ARROW_RIGHT = 'right';\nexport const ARROW_TOP = 'top';\nexport const ARROW_BOTTOM = 'bottom';\nexport const ARROW_LEFT = 'left';\nexport const TOOLTIP_LEFT = 'left';\nexport const TOOLTIP_RIGHT = 'right';\nexport const TOOLTIP_BOTTOM = 'bottom';\nexport const TOOLTIP_TOP = 'top';\nexport const INITIAL_STYLE = {\n    position: 'absolute',\n    width: 0,\n    height: 0\n};\n","import { CLASSPREFIX } from './constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'tooltip-box',\n    connectorClassName: 'tooltip-connectors',\n    className: '',\n    row: {\n        margin: 0\n    },\n    content: {\n        spacing: 5,\n        iconContainerSize: 10,\n        iconScale: 1,\n        iconShape: 'circle',\n        iconColor: '#ff0000',\n        rowMargin: '0px',\n        margin: 10,\n        separator: ':',\n        className: 'tooltip-content-container',\n        parentClassName: 'tooltip-content-parent-container'\n    },\n    arrow: {\n        size: 10,\n        disabled: false,\n        defClassName: 'tooltip-arrow',\n        className: '',\n        color: 'rgba(195,195,195,0.85)'\n    }\n};\n","import { getQualifiedClassName } from 'muze-utils';\nimport { TOOLTIP_LEFT, TOOLTIP_RIGHT, ARROW_RIGHT, ARROW_LEFT, TOOLTIP_BOTTOM } from './constants';\n\nexport const getArrowPos = (orient, dim, measurement, config) => {\n    let arrowPos;\n    const { x, y, boxHeight, boxWidth } = measurement;\n    const arrowDisabled = config.arrow.disabled;\n    const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n\n    if (orient === ARROW_LEFT || orient === ARROW_RIGHT) {\n        let start = 0;\n        let diff = boxHeight / 2;\n        const plotBottom = dim.y + dim.height;\n        const boxBottom = y + boxHeight;\n\n        if (dim.y > y) {\n            start = dim.y - y;\n            diff = (plotBottom >= boxBottom ? (boxBottom - dim.y) : dim.height) / 2;\n        } else if (boxBottom > plotBottom) {\n            diff = Math.abs(y - (dim.y + dim.height)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    } else {\n        let start = 0;\n        let diff = boxWidth / 2;\n        const plotRight = dim.x + dim.width;\n        const boxRight = x + boxWidth;\n\n        if (dim.x > x) {\n            start = dim.x - x;\n            diff = (plotRight >= boxRight ? (boxRight - dim.x) : dim.width) / 2;\n        } else if (boxRight > plotRight) {\n            diff = Math.abs(x - (dim.x + dim.width)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    }\n    return arrowPos;\n};\n\n/**\n * Places the arrow in the specified arrow position. It also applies appropriate arrow\n * class name to the arrow element.\n * @param {string} position Left, bottom or right position of the arrow;\n * @param {number} arrowPos position of arrow in pixels\n * @return {Tooltip} Instance of tooltip.\n */\nexport const placeArrow = (context, position, arrowPos) => {\n    const tooltipArrow = context._tooltipArrow;\n    const tooltipBackground = context._tooltipBackground;\n    const config = context._config;\n    const classPrefix = config.classPrefix;\n    const arrowConf = config.arrow;\n    const className = getQualifiedClassName(arrowConf.defClassName, context._id, config.classPrefix);\n\n    tooltipArrow.style('display', 'block');\n    tooltipArrow.attr('class', `${className.join(' ')}`);\n    if (position === TOOLTIP_LEFT || position === TOOLTIP_RIGHT) {\n        tooltipArrow.style('top', `${arrowPos}px`);\n        tooltipArrow.style('left', '');\n        tooltipBackground.style('top', `${arrowPos}px`);\n        tooltipBackground.style('left', '');\n    } else {\n        position === TOOLTIP_BOTTOM ? tooltipArrow.style('top', '100%') : tooltipArrow.style('top',\n            `-${arrowConf.size}px`);\n        tooltipArrow.style('left', `${arrowPos}px`);\n        position === TOOLTIP_BOTTOM ? tooltipBackground.style('top', '100%') : tooltipBackground.style('top',\n            `-${arrowConf.size + 3}px`);\n        tooltipBackground.style('left', `${arrowPos}px`);\n    }\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow`, true);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${context._arrowOrientation}`, false);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${position}`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${context._arrowOrientation}`, false);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${position}`, true);\n    return this;\n};\n\nexport const reorderContainers = (parentContainer, className) => {\n    parentContainer.selectAll(className).sort((a, b) => a - b);\n};\n","import {\n    getClosestIndexOf,\n    DateTimeFormatter,\n    DimensionSubtype,\n    MeasureSubtype,\n    FieldType\n} from 'muze-utils';\n\nconst timeFormats = {\n    millisecond: '%A, %b %e, %H:%M:%S.%L',\n    second: '%A, %b %e, %H:%M:%S',\n    minute: '%A, %b %e, %H:%M',\n    hour: '%A, %b %e, %H:%M',\n    day: '%A, %b %e, %Y',\n    month: '%B %Y',\n    year: '%Y'\n};\nconst timeDurations = [\n    ['millisecond', 'second', 'minute', 'hour', 'day', 'month', 'year'],\n    [1, 1000, 60000, 3600000, 86400000, 2592000000, 31536000000]\n];\nconst getNearestInterval = (interval) => {\n    const index = getClosestIndexOf(timeDurations[1], interval);\n    return timeDurations[0][index];\n};\nconst defaultTooltipFormatters = (type, formatter) => {\n    const formatters = {\n        [DimensionSubtype.TEMPORAL]: (value, interval) => {\n            const nearestInterval = getNearestInterval(interval);\n            return DateTimeFormatter.formatAs(value, timeFormats[nearestInterval]);\n        },\n        [MeasureSubtype.CONTINUOUS]: value => formatter(value ? value.toFixed(2) : value),\n        [DimensionSubtype.CATEGORICAL]: value => value\n    };\n    return formatters[type];\n};\n\nconst getTabularData = (data, schema, fieldspace, timeDiffs) => {\n    const rows = [];\n    rows.push(schema.map(d => d.name));\n    data.forEach((d) => {\n        const row = [];\n        schema.forEach((fieldObj, i) => {\n            const interval = fieldObj.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[fieldObj.name] : 0;\n            const numberFormat = fieldObj.type === FieldType.MEASURE && fieldspace.fields[i].numberFormat();\n            const formatterFn = defaultTooltipFormatters(fieldObj.subtype || fieldObj.type, numberFormat);\n            const value = formatterFn(d[i], interval);\n            row.push(value);\n        });\n        rows.push(row);\n    });\n    return rows;\n};\n\nexport const buildTooltipData = (dataModel, config = {}, context) => {\n    let fieldValues = [];\n    const dataObj = dataModel.getData();\n    const data = dataObj.data;\n    const schema = dataObj.schema;\n    const formatters = config.formatters;\n    const separator = config.separator;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const fieldspace = dataModel.getFieldspace();\n    const dimensionMeasureMap = context.dimensionMeasureMap;\n    const axes = context.axes;\n    const detailFields = context.detailFields || [];\n    const dimensions = schema.filter(d => d.type === FieldType.DIMENSION);\n    const measures = schema.filter(d => d.type === FieldType.MEASURE);\n    // const containsRetinalField = schema.find(d => d.name in dimensionMeasureMap);\n    const containsDetailField = schema.find(d => detailFields.indexOf(d.name) !== -1);\n    const timeDiffs = context.timeDiffs;\n    const dataLen = data.length;\n    const getRowContent = (field, type) => {\n        let value;\n        let formattedValue;\n        let measureIndex;\n        const values = [];\n        const index = fieldsConfig[field].index;\n        const interval = fieldsConfig[field].def.subtype === DimensionSubtype.TEMPORAL ?\n                timeDiffs[field] : 0;\n        const formatterFn = (formatters && formatters[field]) || defaultTooltipFormatters(type, val => val);\n\n        if (value !== null) {\n            let uniqueVals = type === MeasureSubtype.CONTINUOUS ? data.map(d => d[index]) :\n                [...new Set(data.map(d => d[index]))];\n            uniqueVals = uniqueVals.filter(d => d !== '');\n            const colorAxis = axes.color[0];\n            const shapeAxis = axes.shape[0];\n            const sizeAxis = axes.size[0];\n            const isRetinalField = (colorAxis || shapeAxis || sizeAxis) && dataLen > 1 &&\n                    type !== MeasureSubtype.CONTINUOUS;\n\n            uniqueVals.forEach((val, i) => {\n                let key;\n                const associatedMeasures = dimensionMeasureMap[field];\n\n                if (associatedMeasures && associatedMeasures.length && dataLen > 1) {\n                    key = val;\n                    let icon = {\n                        value: ''\n                    };\n\n                    if (isRetinalField) {\n                        icon = {\n                            type: 'icon',\n                            color: colorAxis.getColor(val),\n                            shape: shapeAxis.getShape(val),\n                            size: sizeAxis.getSize(val) * config.iconScale\n                        };\n                    }\n                    if (associatedMeasures.length > 1) {\n                        values.push([icon, `${key}`]);\n                        associatedMeasures.forEach((measure) => {\n                            measureIndex = fieldsConfig[measure].index;\n                            value = data[i][measureIndex];\n                            formattedValue = defaultTooltipFormatters(MeasureSubtype.CONTINUOUS,\n                                fieldspace.fields[measureIndex].numberFormat())(value, interval);\n                            values.push([{\n                                value: `${measure}${separator}`,\n                                style: {\n                                    'margin-left': `${config.margin}px}`\n                                },\n                                className: `${config.classPrefix}-tooltip-key`\n                            }, {\n                                value: `${formattedValue}`,\n                                className: `${config.classPrefix}-tooltip-value`\n                            }]);\n                        });\n                    } else {\n                        measureIndex = fieldsConfig[associatedMeasures[0]].index;\n                        value = data[i][measureIndex];\n                        formattedValue = defaultTooltipFormatters(MeasureSubtype.CONTINUOUS,\n                            fieldspace.fields[measureIndex].numberFormat())(value, interval);\n                        values.push([icon, {\n                            value: `${key}${separator}`,\n                            className: `${config.classPrefix}-tooltip-key`\n                        }, {\n                            value: `${formattedValue}`,\n                            className: `${config.classPrefix}-tooltip-value`\n                        }]);\n                    }\n                } else {\n                    key = field;\n                    value = val;\n                    formattedValue = formatterFn(value, interval);\n                    values.push([{\n                        value: `${key}${separator}`,\n                        className: `${config.classPrefix}-tooltip-key`\n                    }, {\n                        value: `${formattedValue}`,\n                        className: `${config.classPrefix}-tooltip-value`\n                    }]);\n                }\n            });\n        }\n        return values;\n    };\n    let displayFormat = 'keyValue';\n\n    if (dataLen > 1 && containsDetailField) {\n        fieldValues = getTabularData(data, schema, fieldspace, timeDiffs);\n        displayFormat = 'table';\n    } else {\n        dimensions.forEach((item) => {\n            const type = item.subtype ? item.subtype : item.type;\n            fieldValues = [...fieldValues, ...getRowContent(item.name, type)];\n        });\n\n        const allMeasures = [...new Set(...Object.values(dimensionMeasureMap))];\n        const filteredMeasures = dataLen > 1 ? measures.filter(d => allMeasures.indexOf(d.name) === -1)\n            : measures;\n\n        filteredMeasures.forEach((item) => {\n            const type = item.subtype ? item.subtype : item.type;\n            fieldValues = [...fieldValues, ...getRowContent(item.name, type)];\n        });\n    }\n\n    return {\n        content: fieldValues,\n        displayFormat\n    };\n};\n\n/**\n * This contains the strategy methods for showing tooltip in the chart.\n * @param {VisualUnit} context Attached instance.\n */\nexport const strategy = {\n    keyValue: (data, config, context) => {\n        const values = buildTooltipData(data, config, context);\n        return values;\n    }\n};\n\nexport const DEFAULT_STRATEGY = 'keyValue';\n","import {\n    selectElement,\n    mergeRecursive,\n    makeElement,\n    setAttrs,\n    setStyles,\n    getSymbol,\n    isSimpleObject\n} from 'muze-utils';\nimport { DEFAULT_STRATEGY, strategy } from './strategy';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class is used to manage the content of tooltip.\n */\nexport default class Content {\n    /**\n     * Creates an instance of content.\n     */\n    constructor () {\n        this._model = null;\n        this._strategy = DEFAULT_STRATEGY;\n        this._formatter = null;\n        this._config = this.constructor.defaultConfig();\n    }\n   /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        const config = defaultConfig.content;\n        config.classPrefix = defaultConfig.classPrefix;\n        return config;\n    }\n\n    config (...c) {\n        if (c.length > 0) {\n            this._config = mergeRecursive(this._config, c[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Update model. The format contains presentation strategy which determines how to show the content.\n     * If no strategy is mentioned then default is to show key value pair\n    */\n    update (item) {\n        this._model = item.model;\n        this._strategy = item.strategy !== undefined ? item.strategy : DEFAULT_STRATEGY;\n        this._formatter = item.formatter;\n        return this;\n    }\n\n    context (ctx) {\n        this._context = ctx;\n        return this;\n    }\n\n    render (mount) {\n        let data;\n        const config = this._config;\n        const iconContainerSize = config.iconContainerSize;\n        const formatter = this._formatter;\n        const rowMargin = config.rowMargin;\n        const model = this._model;\n\n        this._mount = mount;\n        if (model instanceof Array) {\n            data = model;\n        } else {\n            data = formatter instanceof Function ? formatter(this._model, this._context) :\n                strategy[this._strategy](this._model, this.config(), this._context);\n        }\n\n        if (data instanceof Function) {\n            mount.html(data());\n        } else {\n            let content = data;\n            let displayFormat = 'default';\n\n            if (isSimpleObject(data)) {\n                content = data.content;\n                displayFormat = data.displayFormat;\n            }\n\n            const body = makeElement(mount, 'div', [displayFormat], `${config.classPrefix}-tooltip-content`, {},\n                d => d);\n\n            if (displayFormat === 'table') {\n                const table = makeElement(body, 'table', [1], `${config.classPrefix}-tooltip-table`);\n                const tbody = makeElement(table, 'tbody', [1], `${config.classPrefix}-tooltip-table-tbody`);\n                const rows = makeElement(tbody, 'tr', content, `${config.classPrefix}-tooltip-table-row`);\n                rows.each(function (d, i) {\n                    selectElement(this).classed(`${config.classPrefix}-tooltip-table-row-${i}`, true);\n                });\n                const cells = makeElement(rows, 'td', d => d, `${config.classPrefix}-tooltip-table-cell`);\n                cells.each(function (d) {\n                    selectElement(this).html(d);\n                });\n            } else {\n                const rows = makeElement(body, 'div', content, `${config.classPrefix}-tooltip-row`);\n                const cells = makeElement(rows, 'span', d => d, `${config.classPrefix}-tooltip-content`);\n                cells.attr('class', `${config.classPrefix}-tooltip-content`);\n                setStyles(rows, {\n                    margin: rowMargin\n                });\n                setStyles(cells, {\n                    display: 'inline-block',\n                    'margin-right': `${config.spacing}px`\n                });\n\n                cells.each(function (d) {\n                    const el = selectElement(this);\n                    el.html('');\n                    if (d instanceof Object) {\n                        if (d.type === 'icon') {\n                            const svg = makeElement(el, 'svg', [1]);\n                            const path = makeElement(svg, 'path', [1]);\n                            const shape = d.shape instanceof Function ? d.shape : getSymbol(d.shape);\n\n                            setAttrs(svg, {\n                                x: 0,\n                                y: 0,\n                                width: iconContainerSize,\n                                height: iconContainerSize\n                            });\n                            setAttrs(path, {\n                                d: shape.size(d.size)(),\n                                transform: `translate(${iconContainerSize / 2}, ${iconContainerSize / 2})`\n                            });\n                            setStyles(path, {\n                                fill: d.color\n                            });\n                            setStyles(svg, {\n                                width: `${iconContainerSize}px`,\n                                height: `${iconContainerSize}px`\n                            });\n                        } else {\n                            el.html(d.value);\n                            d.className && el.classed(d.className, true);\n                            setStyles(el, d.style);\n                        }\n                    } else {\n                        el.html(d);\n                    }\n                });\n            }\n        }\n        return this;\n    }\n\n    clear () {\n        this._model = null;\n        return this;\n    }\n}\n","import {\n    mergeRecursive,\n    getQualifiedClassName,\n    getUniqueId,\n    selectElement,\n    setStyles,\n    makeElement\n} from 'muze-utils';\nimport { ARROW_BOTTOM, ARROW_LEFT, ARROW_RIGHT, TOOLTIP_LEFT, TOOLTIP_RIGHT, TOOLTIP_BOTTOM, TOOLTIP_TOP,\n    INITIAL_STYLE } from './constants';\nimport { defaultConfig } from './default-config';\nimport { getArrowPos, placeArrow, reorderContainers } from './helper';\nimport './styles.scss';\nimport Content from './content';\n\n/**\n * This component is responsible for creating a tooltip element. It appends the tooltip\n * in the body element.\n * @class Tooltip\n */\nexport default class Tooltip {\n    /**\n     * Initializes the tooltip with the container element and configuration\n     * @param {HTMLElement} container container where the tooltip will be mounted.\n     * @param {string} className Class name of the tooltip.\n     */\n    constructor (htmlContainer, svgContainer) {\n        let connectorContainer = svgContainer;\n        this._id = getUniqueId();\n        this._config = {};\n        this.config({});\n        const tooltipConf = this._config;\n        const classPrefix = tooltipConf.classPrefix;\n        const contentClass = tooltipConf.content.parentClassName;\n        const container = makeElement(htmlContainer, 'div', [1], `${classPrefix}-tooltip-container`);\n        this._container = container;\n        this._tooltipContainer = container.append('div').style('position', 'absolute');\n        this._contentContainer = this._tooltipContainer.append('div').attr('class', `${classPrefix}-${contentClass}`);\n        this._tooltipBackground = this._tooltipContainer.append('div').style('position', 'relative');\n        this._tooltipArrow = this._tooltipContainer.append('div');\n\n        if (!svgContainer) {\n            connectorContainer = htmlContainer.append('svg').style('pointer-events', 'none');\n        }\n        this._contents = {};\n        this._tooltipConnectorContainer = selectElement(connectorContainer)\n            .append('g')\n            .attr('class', `${tooltipConf.classPrefix}-${tooltipConf.connectorClassName}`);\n        const id = this._id;\n        const defClassName = tooltipConf.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, id, tooltipConf.classPrefix);\n\n        setStyles(this._tooltipArrow, INITIAL_STYLE);\n        setStyles(this._tooltipBackground, INITIAL_STYLE);\n        this.addClass(qualifiedClassName.join(' '));\n        this.addClass(tooltipConf.className);\n        this.hide();\n    }\n\n    /**\n     * Sets the configuration of tooltip.\n     * @param {Object} config Configuration of tooltip\n     * @return {Tooltip} Instance of tooltip\n     */\n    config (...config) {\n        if (config.length > 0) {\n            const defConf = mergeRecursive({}, this.constructor.defaultConfig());\n            this._config = mergeRecursive(defConf, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n    /**\n     * Sets the class name of tooltip\n     * @param {string} className tooltip class name\n     * @return {Tooltip} Instance of tooltip.\n     */\n    addClass (className) {\n        this._tooltipContainer.classed(className, true);\n        return this;\n    }\n\n    context (...ctx) {\n        if (ctx.length) {\n            this._context = ctx[0];\n            return this;\n        }\n        return this._context;\n    }\n\n    content (name, data, contentConfig = {}) {\n        const config = this.config();\n        const { classPrefix } = config;\n        const contentClass = config.content.className;\n        const formatter = config.formatter;\n        const className = contentConfig.className || `${classPrefix}-${contentClass}-${name}`;\n        const content = this._contents[name] = this._contents[name] || new Content();\n        const container = makeElement(this._contentContainer, 'div', [contentConfig.order], className);\n        container.attr('class', `${classPrefix}-${contentClass} ${className}`);\n        reorderContainers(this._contentContainer, `.${classPrefix}-${contentClass}`);\n        const contentConf = config.content;\n        contentConfig.classPrefix = this._config.classPrefix;\n        content.config(contentConf);\n\n        if (data === null) {\n            content.clear();\n            container.remove();\n            delete this._contents[name];\n        } else {\n            content.update({\n                model: data,\n                formatter: contentConfig.formatter || formatter\n            });\n            content.context(this._context);\n            content.render(container);\n        }\n\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n        }\n        return this;\n    }\n\n    getContents () {\n        return Object.values(this._contents);\n    }\n\n    /**\n     * Positions the tooltip at the given x and y position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Tooltip} Instance of tooltip.\n     */\n    position (x, y, conf = {}) {\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n            return this;\n        }\n        this.show();\n        const target = this._target;\n        const repositionArrow = conf.repositionArrow;\n\n        if (target && repositionArrow) {\n            const node = this._tooltipContainer.node();\n            const config = this._config;\n            const arrowDisabled = config.arrow.disabled;\n            const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n            const arrowOrient = this._arrowOrientation;\n            const outsidePlot = arrowOrient === ARROW_LEFT || arrowOrient === ARROW_RIGHT ?\n                (y + node.offsetHeight - arrowWidth) < target.y || y > (target.y + target.height) :\n                (x + node.offsetWidth - arrowWidth) < target.x || x > (target.x + target.width);\n\n            if (!arrowDisabled) {\n                if (outsidePlot) {\n                    let path;\n                    this._tooltipArrow.style('display', 'none');\n                    this._tooltipBackground.style('display', 'none');\n                    this._tooltipConnectorContainer.style('display', 'block');\n                    const connector = this._tooltipConnectorContainer.selectAll('path').data([1]);\n                    const enter = connector.enter().append('path');\n                    if (arrowOrient === ARROW_LEFT) {\n                        path = `M ${x} ${y + node.offsetHeight / 2} L ${target.x + target.width}`\n                            + ` ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_RIGHT) {\n                        path = `M ${x + node.offsetWidth} ${y + node.offsetHeight / 2}`\n                                + ` L ${target.x} ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_BOTTOM) {\n                        path = `M ${x + node.offsetWidth / 2} ${y + node.offsetHeight}`\n                            + ` L ${target.x + target.width / 2} ${target.y}`;\n                    }\n                    enter.merge(connector).attr('d', path).style('display', 'block');\n                } else {\n                    const arrowPos = getArrowPos(arrowOrient, target, {\n                        x,\n                        y,\n                        boxHeight: node.offsetHeight,\n                        boxWidth: node.offsetWidth\n                    }, this._config);\n\n                    placeArrow(this, this._arrowOrientation, arrowPos);\n                    this._tooltipConnectorContainer.style('display', 'none');\n                }\n            }\n        }\n\n        const offset = this._offset || {\n            x: 0,\n            y: 0\n        };\n        this._tooltipContainer.style('left', `${offset.x + x}px`).style('top',\n            `${offset.y + y}px`);\n\n        return this;\n    }\n\n    /**\n     * Positions the tooltip relative to a rectangular box. It takes care of tooltip overflowing the\n     * boundaries.\n     * @param {Object} dim Dimensions of the plot.\n     */\n    positionRelativeTo (dim, tooltipConf = {}) {\n        let obj;\n        let orientation = tooltipConf.orientation;\n        this.show();\n        if (!dim) {\n            this.hide();\n            return this;\n        }\n\n        const extent = this._extent;\n        const node = this._tooltipContainer.node();\n\n        this._tooltipContainer.style('top', '0px')\n                        .style('left', '0px');\n        const offsetWidth = node.offsetWidth + 2;\n        const offsetHeight = node.offsetHeight + 2;\n        const config = this._config;\n        const offset = this._offset;\n        const arrowDisabled = config.arrow.disabled;\n        const arrowSize = arrowDisabled ? 0 : config.arrow.size;\n        const draw = tooltipConf.draw !== undefined ? tooltipConf.draw : true;\n        const topSpace = dim.y;\n        // When there is no space in right\n        const dimX = dim.x + dim.width + offset.x;\n        const rightSpace = extent.width - dimX;\n        const leftSpace = dim.x + offset.x - extent.x;\n        const positionTop = topSpace > (offsetHeight + arrowSize);\n        const positionRight = rightSpace >= offsetWidth + arrowSize;\n        const positionLeft = leftSpace >= offsetWidth + arrowSize;\n\n        const positionHorizontal = () => {\n            let position;\n            let x = dim.x + dim.width;\n            let y = dim.y;\n\n            if (positionRight) {\n                position = TOOLTIP_LEFT;\n                x += arrowSize;\n            } else if (positionLeft) {\n                x = dim.x - offsetWidth;\n                position = TOOLTIP_RIGHT;\n                x -= arrowSize;\n            } else {\n                position = 'left';\n                x += arrowSize;\n            }\n            if (dim.height < offsetHeight) {\n                y = Math.max(0, dim.y + dim.height / 2 - offsetHeight / 2);\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        const positionVertical = () => {\n            let position;\n            let y;\n            // Position tooltip at the center of plot\n            let x = dim.x - offsetWidth / 2 + dim.width / 2;\n\n            // Overflows to the right\n            if ((extent.width - (dim.x + offset.x)) < offsetWidth) {\n                x = extent.width - offsetWidth - offset.x;\n            } else if ((x + offset.x) < extent.x) { // Overflows to the left\n                x = extent.x;\n            }\n\n            if (positionTop) {\n                y = dim.y - offsetHeight - arrowSize;\n                position = TOOLTIP_BOTTOM;\n            } else {\n                y = dim.y + dim.height + arrowSize;\n                position = TOOLTIP_TOP;\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        this._target = dim;\n        if (!orientation) {\n            if (positionTop) {\n                orientation = 'vertical';\n            } else if (positionRight || positionLeft) {\n                orientation = 'horizontal';\n            } else {\n                orientation = 'vertical';\n            }\n        }\n\n        if (orientation === 'horizontal') {\n            obj = positionHorizontal();\n        } else if (orientation === 'vertical') {\n            obj = positionVertical();\n        }\n\n        this._position = {\n            x: obj.x,\n            y: obj.y\n        };\n\n        this._arrowPos = obj.arrowPos;\n        if (!arrowDisabled) {\n            placeArrow(this, obj.position, obj.arrowPos);\n        } else {\n            this._tooltipArrow.style('display', 'none');\n            this._tooltipBackground.style('display', 'none');\n        }\n        this._arrowOrientation = obj.position;\n        draw && this.position(obj.x, obj.y);\n        return this;\n    }\n\n    /**\n     * Hides the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    hide () {\n        this._tooltipContainer.style('display', 'none');\n        this._tooltipConnectorContainer.style('display', 'none');\n        return this;\n    }\n\n    /**\n     * Shows the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    show () {\n        this._tooltipContainer.style('display', 'block');\n        return this;\n    }\n\n    extent (extent) {\n        this._extent = extent;\n        return this;\n    }\n\n    offset (offset) {\n        this._offset = offset;\n        return this;\n    }\n\n    remove () {\n        this._tooltipContainer.remove();\n        this._tooltipBackground.remove();\n        this._tooltipConnectorContainer.remove();\n        return this;\n    }\n}\n","import { FieldType } from 'muze-utils';\n\nexport const strategies = {\n    showSelectedItems: (dm) => {\n        const dataObj = dm.getData();\n        const measures = dataObj.schema.filter(d => d.type === FieldType.MEASURE);\n        const aggregatedModel = dm.groupBy([''], measures.reduce((acc, v) => {\n            acc[v.name] = v.defAggFn === 'count' ? 'sum' : v.defAggFn;\n            return acc;\n        }, {}));\n        const fieldsObj = dm.getFieldspace().fieldsObj();\n        const fieldsConf = aggregatedModel.getFieldsConfig();\n        let values = [{\n            value: `${dataObj.data.length}`,\n            style: {\n                'font-weight': 'bold'\n            }\n        }, 'Items Selected'];\n        const measureNames = measures.map(d => d.name);\n        if (measureNames.length) {\n            values = [...values, ...[`(${fieldsObj[measureNames[0]].defAggFn().toUpperCase()}) ${measureNames[0]}`,\n                {\n                    value: `${aggregatedModel.getData().data[0][fieldsConf[measureNames[0]].index].toFixed(2)}`,\n                    style: {\n                        'font-weight': 'bold'\n                    }\n                }]];\n        }\n        return [values];\n    }\n};\n","import { Tooltip as TooltipRenderer } from '@chartshq/muze-tooltip';\nimport { FieldType } from 'muze-utils';\nimport { spaceOutBoxes } from '../helper';\nimport { strategies } from './strategies';\nimport { FRAGMENTED } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nexport default class Tooltip extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._tooltips = {};\n        this._strategies = strategies;\n        this._strategy = 'default';\n    }\n\n    static defaultConfig () {\n        return {\n            padding: 5,\n            offset: {\n                x: 0,\n                y: 0\n            }\n        };\n    }\n\n    static formalName () {\n        return 'tooltip';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        let totalHeight = 0;\n        let totalWidth = 0;\n        const dataModel = selectionSet.mergedEnter.model;\n        const context = this.firebolt.context;\n        const drawingInf = this.drawingContext();\n        if ((dataModel.isEmpty() || payload.criteria === null) || selectionSet.isSourceFieldPresent === false) {\n            this.hide(options, null);\n            return this;\n        }\n\n        const tooltips = this._tooltips;\n        const config = this.config();\n        const boundBox = {\n            width: drawingInf.width,\n            height: drawingInf.height\n        };\n        const showInPosition = payload.showInPosition;\n        const pad = config.padding;\n        const dataModels = [];\n        const fragmented = config.mode === FRAGMENTED;\n        const sourceInf = context.getSourceInfo();\n        const fields = sourceInf.fields;\n        const xFieldDim = fields.x[0] ? fields.x[0].type() === FieldType.DIMENSION : false;\n        const showVertically = !!xFieldDim;\n        const tooltipPos = payload.position;\n        const boxes = [];\n        const enter = {};\n        const uids = dataModel.getData().uids;\n        if (fragmented) {\n            dataModels.push(...uids.map(d => dataModel.select((fieldsArr, i) => i === d, {\n                saveChild: false\n            })));\n        } else {\n            dataModels.push(dataModel);\n        }\n\n        let target = payload.target;\n        let targetFields = [];\n        if (target) {\n            targetFields = target[0] || [];\n            const sourceFields = payload.sourceFields;\n            const indices = [];\n            for (let i = 0, len = targetFields.length; i < len; i++) {\n                if (sourceFields.indexOf(targetFields[i]) !== -1) {\n                    indices.push(i);\n                }\n            }\n            target = target.map(d => d.filter((v, i) => indices.indexOf(i) !== -1));\n        }\n\n        const plotDimensions = context.getPlotPointsFromIdentifiers(target || payload.criteria, {\n            getBBox: true\n        });\n\n        // Show tooltip for each datamodel\n        for (let i = 0; i < dataModels.length; i++) {\n            let plotDim = plotDimensions[i];\n            if (fragmented) {\n                const dimensions = dataModels[i].getData().schema.filter(d => d.type === FieldType.DIMENSION)\n                    .map(d => d.name);\n                plotDim = context.getPlotPointsFromIdentifiers(dataModels[i].project(dimensions), { getBBox: true });\n                plotDim = plotDim && plotDim[0];\n            }\n\n            let dt = dataModels[i];\n            if (config.fields) {\n                dt = dt.project(config.fields, {\n                    saveChild: false\n                });\n            }\n            if (config.dataTransform) {\n                dt = config.dataTransform(dt, i);\n            }\n\n            enter[i] = true;\n            const { parentContainer: layoutContainer, parentContainerDimensions } = drawingInf;\n            const layoutBoundBox = layoutContainer.getBoundingClientRect();\n            const unitBoundBox = drawingInf.htmlContainer.getBoundingClientRect();\n\n            const offsetLeft = unitBoundBox.left - layoutBoundBox.left;\n            const offsetTop = unitBoundBox.top - layoutBoundBox.top;\n            const tooltipInst = tooltips[i] = tooltips[i] || new TooltipRenderer(layoutContainer,\n                    drawingInf.svgContainer);\n\n            sourceInf.payload = payload;\n            sourceInf.firebolt = this.firebolt;\n            sourceInf.detailFields = context.detailFields();\n            sourceInf.timeDiffs = context.timeDiffsByField();\n            tooltipInst.context(sourceInf);\n            const strategy = strategies[options.strategy];\n            tooltipInst.content(options.strategy || this._strategy, dt, {\n                formatter: strategy,\n                order: options.order\n            })\n                            .config(this.config())\n                            .extent({\n                                x: 0,\n                                y: 0,\n                                width: parentContainerDimensions.width,\n                                height: parentContainerDimensions.height\n                            })\n                            .offset({\n                                x: offsetLeft + (config.offset.x || 0),\n                                y: offsetTop + (config.offset.y || 0)\n                            });\n\n            if (showInPosition) {\n                tooltipInst.position(tooltipPos.x + pad, tooltipPos.y + pad);\n            } else if (plotDim) {\n                tooltipInst.positionRelativeTo({\n                    x: plotDim.x,\n                    y: plotDim.y,\n                    width: plotDim.width || 0,\n                    height: plotDim.height || 0\n                }, {\n                    orientation: fragmented ?\n                        (showVertically ? 'horizontal' : 'vertical') : undefined\n                });\n            } else {\n                tooltipInst.hide();\n                break;\n            }\n\n            if (fragmented) {\n                const position = tooltipInst._position;\n                const tooltipBoundBox = tooltipInst._tooltipContainer.node().getBoundingClientRect();\n\n                totalHeight += tooltipBoundBox.height + pad;\n                totalWidth += tooltipBoundBox.width + pad;\n                if (showVertically ? totalHeight > drawingInf.height : totalWidth > drawingInf.width) {\n                    break;\n                }\n                boxes.push({\n                    x: position.x,\n                    y: position.y,\n                    width: tooltipBoundBox.width,\n                    height: tooltipBoundBox.height,\n                    tooltip: tooltipInst\n                });\n            }\n        }\n\n        for (const key in tooltips) {\n            if (!enter[key]) {\n                const tooltip = tooltips[key];\n                tooltip.content(payload.action, null);\n                if (!tooltip.getContents().length) {\n                    tooltip.remove();\n                    delete tooltips[key];\n                }\n            }\n        }\n        if (fragmented) {\n            spaceOutBoxes(boxes, boundBox, showVertically);\n            boxes.forEach(box => box.tooltip.position(box.x, box.y, {\n                repositionArrow: true\n            }));\n        }\n        return this;\n    }\n\n    hide (options) {\n        const tooltips = this._tooltips;\n        for (const key in tooltips) {\n            if ({}.hasOwnProperty.call(tooltips, key)) {\n                const strategy = options.strategy || this._strategy;\n                tooltips[key].content(strategy, null);\n                tooltips[key].hide();\n            }\n        }\n    }\n}\n","export const spaceOutBoxes = (boxes, extent, showVertically) => {\n    let y;\n    let height;\n    let x;\n    let width;\n    let i;\n    const pad = 5;\n    const len = boxes.length;\n    const spaceOutIfOverlap = (firstBox, secondBox, opposite) => {\n        x = firstBox.x;\n        width = firstBox.width;\n        y = firstBox.y;\n        height = firstBox.height;\n        const bottom = y + height;\n        const right = x + width;\n\n        if (showVertically) {\n            if (opposite ? y < (secondBox.y + secondBox.height) : bottom > secondBox.y) {\n                secondBox.y = opposite ? firstBox.y - secondBox.height - pad :\n                        bottom + pad;\n            }\n        } else if (opposite ? x < (secondBox.x + secondBox.width) : right > secondBox.x) {\n            secondBox.x = opposite ? firstBox.x - secondBox.width - pad :\n                    right + pad;\n        }\n    };\n\n    boxes.sort((a, b) => (showVertically ? a.y - b.y : a.x - b.x));\n    i = 0;\n\n    for (i = 0; i < len - 1; i++) {\n        spaceOutIfOverlap(boxes[i], boxes[i + 1]);\n    }\n\n    if ((boxes[i].y + boxes[i].height) > extent.height ||\n            (boxes[i].x + boxes[i].width) > extent.width) {\n        if (showVertically) {\n            boxes[i].y -= (boxes[i].height + boxes[i].y) - extent.height;\n        } else {\n            boxes[i].x -= (boxes[i].width + boxes[i].x) - extent.width;\n        }\n        for (i = len - 1; i > 0; i--) {\n            spaceOutIfOverlap(boxes[i], boxes[i - 1], true);\n        }\n    }\n    return boxes;\n}\n;\n","import { selectElement, FieldType } from 'muze-utils';\n\nimport './styles.scss';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nexport default class Crossline extends SpawnableSideEffect {\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-crossline-group`,\n            bandClass: `${CLASSPREFIX}-crossband`,\n            lineClass: `${CLASSPREFIX}-crossline`\n        };\n    }\n\n    static formalName () {\n        return 'crossline';\n    }\n\n    apply (selectionSet, payload) {\n        let height;\n        let bandWidth;\n        let px;\n        let width;\n        const {\n            className,\n            bandClass,\n            lineClass\n        } = this.config();\n        const dataModel = selectionSet.mergedEnter.model;\n        const drawingInf = this.drawingContext();\n        if (payload.criteria && dataModel && dataModel.isEmpty()) {\n            return this;\n        }\n        if (payload.criteria === null || !dataModel) {\n            this.hide();\n            return this;\n        }\n\n        const dataObj = dataModel.getData();\n        const sourceInf = this.firebolt.context.getSourceInfo();\n        const axes = sourceInf.axes;\n        const axisFields = sourceInf.fields;\n        const fields = selectionSet.fields;\n        const data = dataObj.data;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const svgContainer = drawingInf.sideEffectGroup;\n\n        const elemData = [];\n        fields.forEach((field) => {\n            const fieldIndex = fieldsConfig[field] && fieldsConfig[field].index;\n            const dataArr = data.map(d => d[fieldIndex]);\n            const axisIndex = [['x', 0], ['x', 1], ['y', 0], ['y', 1]].find((arr) => {\n                const fieldInst = axisFields[arr[0]][arr[1]];\n                return fieldInst && fieldInst.type() === FieldType.DIMENSION &&\n                    fieldInst.getMembers().indexOf(field) !== -1;\n            });\n            if (axisIndex !== undefined && data.length) {\n                const type = axisIndex[0];\n                const axis = axes[type][axisIndex[1]];\n                const value = dataArr[0];\n                bandWidth = axis.getUnitWidth() || 0;\n                px = axis.getScaleValue(value) + bandWidth / 2 + drawingInf.xOffset;\n                const plotWidth = Math.max(...this.firebolt.context.layers().map(layer => layer.getPlotSpan()[type]));\n                const pad = Math.max(...this.firebolt.context.layers().map(layer => layer.getPlotPadding()[type]));\n                height = drawingInf.height;\n                width = drawingInf.width;\n                const startPx = px - plotWidth / 2 - pad / 2;\n                const endPx = px + plotWidth / 2 + pad / 2;\n                const dataPoint = {};\n                if (type === 'y') {\n                    dataPoint.d = `M 0 ${startPx} L 0 ${endPx} L ${width} ${endPx} L ${width} ${startPx} Z`;\n                } else {\n                    dataPoint.d = `M ${startPx} 0 L ${endPx} 0 L ${endPx} ${height} L ${startPx} ${height} Z`;\n                }\n                dataPoint.className = plotWidth ? bandClass : lineClass;\n                elemData.push(dataPoint);\n            }\n        });\n        if (elemData.length) {\n            const parentGroup = this.createElement(svgContainer, 'g', [1], className);\n            const elem = this.createElement(parentGroup, 'path', elemData);\n            elem.attr('d', d => d.d).style('pointer-events', 'none')\n                            .attr('class', d => d.className);\n        }\n        return this;\n    }\n\n    hide () {\n        const className = this.config().className;\n        const drawingInf = this.drawingContext();\n        selectElement(drawingInf.sideEffectGroup).selectAll(`.${className}`).remove();\n    }\n}\n","const fadeFn = (set, context, strategy) => {\n    const {\n        mergedEnter,\n        mergedExit,\n        exitSet,\n        completeSet\n    } = set;\n\n    if (!mergedEnter.length && !mergedExit.length) {\n        context.applyInteractionStyle(completeSet, {}, strategy, false);\n    } else {\n        context.applyInteractionStyle(exitSet[1], {}, strategy, true);\n        context.applyInteractionStyle(mergedEnter, {}, strategy, false);\n    }\n};\n\nexport const strategies = {\n    fade: fadeFn,\n    focus: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'focus', false);\n        } else {\n            context.applyInteractionStyle(mergedExit, {}, 'focus', true);\n            context.applyInteractionStyle(mergedEnter, {}, 'focus', false);\n        }\n    },\n    highlight: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            entrySet,\n            exitSet,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'highlight', false);\n        } else {\n            context.applyInteractionStyle(entrySet[1], {}, 'highlight', true);\n            context.applyInteractionStyle(exitSet[1], {}, 'highlight', false);\n        }\n    }\n};\n","import SurrogateSideEffect from '../surrogate';\nimport { strategies } from './strategy';\n\nexport default class PlotHighlighter extends SurrogateSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategy = 'highlight';\n        this._strategies = strategies;\n    }\n\n    static formalName () {\n        return 'highlighter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        if (selectionSet.isSourceFieldPresent !== false) {\n            strategy(selectionSet, this, options.strategy || this._strategy);\n        }\n\n        return this;\n    }\n}\n","import SurrogateSideEffect from '../surrogate';\n\nexport default class FilterEffect extends SurrogateSideEffect {\n    static formalName () {\n        return 'filter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static mutates () {\n        return true;\n    }\n\n    apply (selectionSet, payload) {\n        const context = this.firebolt.context;\n        const entryModel = selectionSet.mergedEnter.model;\n        if (payload.criteria === null) {\n            context.clearCaching().resetData();\n        } else {\n            context.enableCaching().data(entryModel);\n        }\n        return this;\n    }\n}\n","import { DataModel, STATE_NAMESPACES, getObjProp } from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst addLayer = (layerDefs, layerRegistry, context, sideEffect) => {\n    const layers = [];\n    if (layerDefs) {\n        layerDefs.forEach((layerDef) => {\n            const mark = layerDef.mark;\n            const layerCls = layerRegistry[mark];\n            if (layerCls && layerCls.shouldDrawAnchors()) {\n                const depLayerEncoding = layerDef.def.encoding;\n                const encoding = {\n                    x: getObjProp(depLayerEncoding, 'x', 'field'),\n                    y: getObjProp(depLayerEncoding, 'y', 'field'),\n                    color: getObjProp(depLayerEncoding, 'color', 'field'),\n                    size: {\n                        field: getObjProp(depLayerEncoding, 'size', 'field'),\n                        value: sideEffect.defaultSizeValue()\n                    }\n                };\n                const name = `${layerDef.def.name}-${sideEffect.constructor.formalName()}`;\n                const layerObj = {\n                    instances: context.addLayer({\n                        name,\n                        mark: 'point',\n                        className: sideEffect.constructor.defaultConfig().className,\n                        encoding,\n                        transform: {\n                            type: 'identity'\n                        },\n                        transition: sideEffect.getTransitionConfig(),\n                        calculateDomain: false,\n                        source: dm => dm.select(() => false, {\n                            saveChild: false\n                        }),\n                        interactive: false,\n                        render: false\n                    }),\n                    linkedLayer: layerDef.def.name\n                };\n                layers.push(layerObj);\n            }\n        });\n    }\n    return layers;\n};\n\nexport default class AnchorEffect extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._layersMap = {};\n        this.addAnchorLayers();\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-anchors-group`\n        };\n    }\n\n    static formalName () {\n        return 'anchors';\n    }\n\n    addAnchorLayers () {\n        const context = this.firebolt.context;\n        const metaInf = context.metaInf();\n        const layerRegistry = context.registry().layerRegistry;\n        const layerDefsVal = context.layerDef();\n        context.store().registerImmediateListener(\n            `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}.layerDef`, ([, layerDefs]) => {\n                this._layers = addLayer(layerDefs, layerRegistry, context, this);\n            });\n        this._layers = addLayer(layerDefsVal, layerRegistry, context, this);\n        return this;\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n\n    /**\n     * Returns the default area value of the anchor point.\n     * @return { number } Default area value of anchor.\n     */\n    defaultSizeValue () {\n        return 100;\n    }\n\n    apply (selectionSet) {\n        const self = this;\n        const dataModel = selectionSet.mergedEnter.model;\n        if (selectionSet.isSourceFieldPresent !== false) {\n            const drawingInf = this.drawingContext();\n            const sideEffectGroup = drawingInf.sideEffectGroup;\n            const className = `${this.config().className}`;\n            const layers = this._layers;\n            const parentGroup = this.createElement(sideEffectGroup, 'g', [1], `${className}-container`);\n            const anchorGroups = this.createElement(parentGroup, 'g', Object.values(layers));\n            anchorGroups.each(function (layer) {\n                const instances = layer.instances;\n                const elems = self.createElement(this, 'g', instances, className);\n                const linkedLayer = self.firebolt.context.getLayerByName(layer.linkedLayer);\n                const [transformedData, schema] = linkedLayer.getTransformedDataFromIdentifiers(dataModel);\n                const transformedDataModel = new DataModel(transformedData, schema);\n                elems.each(function (d, i) {\n                    instances[i].data(transformedDataModel).mount(this);\n                });\n            });\n        }\n        return this;\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class PersistentAnchors extends AnchorEffect {\n    static formalName () {\n        return 'persistent-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-persistent-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class BrushAnchors extends AnchorEffect {\n    static formalName () {\n        return 'brush-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-brush-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import * as BEHAVIOURS from './enums/behaviours';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: ['selectionBox', {\n        name: 'highlighter',\n        options: {\n            strategy: 'fade'\n        }\n    }, 'brush-anchors'],\n    [`${BEHAVIOURS.BRUSH},${BEHAVIOURS.SELECT}`]: [{\n        name: 'tooltip',\n        options: {\n            strategy: 'showSelectedItems',\n            order: 0,\n            filter: context => context.config().mode === 'fragmented'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'highlight'\n        }\n    }, 'crossline', {\n        name: 'tooltip',\n        options: {\n            order: 9999\n        }\n    }, 'anchors'],\n    [BEHAVIOURS.FILTER]: ['filter'],\n    [BEHAVIOURS.SELECT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'focus'\n        }\n    }, 'persistent-anchors']\n};\n","export const CLASSPREFIX = 'muze';\nexport const STACK = 'stack';\nexport const GROUP = 'group';\nexport const IDENTITY = 'identity';\nexport const ANGLE = 'angle';\nexport const RADIUS = 'radius';\nexport const SIZE = 'size';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const OUTER_RADIUS_VALUE = 'outerRadiusValue';\nexport const TEXT_ANCHOR_MIDDLE = 'middle';\nexport const ENCODING = {\n    X: 'x',\n    Y: 'y',\n    X0: 'x0',\n    Y0: 'y0'\n};\n\nexport const ASCENDING = 'asc';\n\nexport const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { CLASSPREFIX, STACK } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-area',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: STACK\n    },\n    interaction: {\n\n    },\n    nearestPointThreshold: 10,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        y0: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * This is an interface class which any new layer class has to extend.\n *\n * @example\n * class BarLayer extends BaseLayer {\n *   update (params) {\n *       // super.update(params);\n *       // Update the bar layer\n *   }\n * }\n * @class\n */\nexport default class SimpleLayer {\n\n    formalName () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets or gets the dependencies.\n     * @param {Object} dependencies Dependencies needed by layer\n     * @return {BaseLayer} Instance of base layer.\n     */\n    dependencies () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the config of the layer\n     *\n     * @param {Object} config Configuration of layer\n     * @return {Object} configuration of layer\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Acts as a getter or setter function\n     * When setter\n     * Returns the datamodel of the layer\n     * @param { DataModel } dataModel instance of DataModel\n     * @return { DataModel } DataModel instance of the layer\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized schema of the layer\n     * @return {Object} Serialized schema\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the unique identifier of this layer\n     * @return {string} id of the layer\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n    /*\n     * This method resolves the x, y, x0 and y0 values from the transformed data.\n     * It also checks the type of transformed data for example, if it is a stacked data\n     * then it fetches the y and y0 values from the stacked data.\n     * @param {Array.<Array>} transformedData transformed data\n     * @param {Object} fieldMap field definitions\n     * @param {string} transformType type of transformed data - stack, group or identity.\n     * @return {Array.<Object>} Normalized data\n     * @private\n     */\n    normalizeTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of dataModel\n     * @param {Object} config configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     * @private\n     */\n    getTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a nominal field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @return {Array} Domain values array.\n     */\n    _calculateDomainFromData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, color, etc.\n     * @return {Object} Axis domains\n     */\n    getDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for getting nearest point\n     * @return {BaseLayer} Instance of base layer\n     */\n    getNearestPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for highlighting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    highlightPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for deselecting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    dehighlightPoint () {\n        return this;\n    }\n\n    linkLayerStore () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets the container element for the layer to be renderered.\n     * @param {SVGElement} mountPoint SVG element or group element.\n     */\n    mount () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n","export const props = {\n    axes: {},\n    mount: {},\n    measurement: {},\n    metaInf: {},\n    data: {},\n    config: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { Symbols } from 'muze-utils';\nimport * as AxisOrientation from '../enums/axis-orientation';\n\n/**\n * @module Axis\n * This file exports constants that are used to reference axis orientations\n * in a consistent manner.\n */\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\n\n/**\n  * This object is used to associate the axis orientation with the d3 class\n  * used to represent that axis.\n  */\nexport const axisOrientationMap = {\n    [AxisOrientation.LEFT]: Symbols.axisLeft,\n    [AxisOrientation.BOTTOM]: Symbols.axisBottom,\n    [AxisOrientation.RIGHT]: Symbols.axisRight,\n    [AxisOrientation.TOP]: Symbols.axisTop\n};\n","/**\n * @module axis\n * This file exports constants used to reference scale type\n * consistently throughout the project.\n */\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const TIME = 'temporal';\nexport const COLOR = 'color';\nexport const ORDINAL = 'ordinal';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\nexport const LOG = 'log';\nexport const POW = 'pow';\nexport const IDENTITY = 'identity';\nexport const SEQUENTIAL = 'sequential';\nexport const THRESHOLD = 'threshold';\n","export const CLASSPREFIX = 'muze';\n\nexport const CONTINOUS = 'continous';\nexport const DISCRETE = 'discrete';\nexport const SEQUENTIAL = 'sequential';\nexport const ORDINAL = 'ordinal';\nexport const LINEAR = 'linear';\nexport const THRESHOLD = 'threshold';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\n\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\n\nexport const DOMAIN = 'domain';\nexport const BAND = 'band';\nexport const HIDDEN = 'hidden';\nexport const NUMBER = 'number';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\n\nexport const RGB = 'rgb';\nexport const HEX = 'hex';\nexport const HSLA = 'hsla';\nexport const HSL = 'hsl';\n\n","import { scales, colorSchemes } from 'muze-utils';\n\nimport {\n    SEQUENTIAL,\n    ORDINAL,\n    LINEAR,\n    CONTINOUS,\n    THRESHOLD,\n    QUANTIZE\n} from './enums/constants';\n\nimport * as ScaleType from './enums/scale-type';\n\nconst {\n    scaleLinear,\n    scaleThreshold,\n    scaleLog,\n    scalePow,\n    scaleIdentity,\n    scaleOrdinal,\n    scaleSequential,\n    scaleQuantize,\n    scaleQuantile,\n    schemeCategory10,\n    schemeCategory20,\n    schemeCategory20b,\n    scaleBand,\n    scaleTime\n} = scales;\nexport const scaleMap = {\n    [ScaleType.LINEAR]: scaleLinear,\n    [ScaleType.BAND]: scaleBand,\n    [ScaleType.QUANTIZE]: scaleQuantize,\n    [ScaleType.QUANTILE]: scaleQuantile,\n    [ScaleType.THRESHOLD]: scaleThreshold,\n    [ScaleType.SEQUENTIAL]: scaleSequential,\n    [ScaleType.LOG]: scaleLog,\n    [ScaleType.POW]: scalePow,\n    [ScaleType.IDENTITY]: scaleIdentity,\n    [ScaleType.TIME]: scaleTime,\n    [ScaleType.COLOR]: scaleLinear,\n    [ScaleType.ORDINAL]: scaleOrdinal\n};\nexport const SCHEMES = {\n    SCHEME1: schemeCategory10,\n    SCHEME2: schemeCategory20,\n    SCHEME3: schemeCategory20b\n};\n\n/**\n * Accepts a scheme in a string format and returns the scale from d3-scale-chromatic\n *\n * @export\n * @param {string} scheme a string representing the kind of scheme for the color axis\n * @return {Object} The corresponding scale from a scheme type from d3 chromatic scale\n */\nexport function getScheme (scheme) {\n    if (scheme[0] === 'i') {\n        return scaleSequential(colorSchemes[scheme]);\n    }\n    return scaleOrdinal(colorSchemes[scheme]);\n}\n\n/**\n *\n *\n * @export\n * @param {*} scheme\n *\n */\nexport function getSchemeType (scheme) {\n    let schemeType = '';\n    if (scheme && typeof (scheme) === 'string') {\n        schemeType = scheme[0] === 'i' ? SEQUENTIAL : ORDINAL;\n    } else {\n        schemeType = ORDINAL;\n    }\n    return schemeType;\n}\n\n/**\n * This function is used to create a scale that is assigned to\n * an instance of axis.\n *\n * @export\n * @param {Object} params the input parameters to create a Scale object\n * @param {string} params.type the type of scale\n * @param {Array} params.range the range of scale\n * @return {Object} instance of scale\n */\nexport function createScale (params) {\n    if (!params.type || !scaleMap[params.type]) {\n        throw new Error(`${params.type} is not a valid scale type`);\n    }\n    if (!Array.isArray(params.range)) {\n        throw new Error('range parameter must be an array');\n    }\n    let scaleFactory = null;\n    const range = params.range;\n    // @todo: do it using scale decorator\n    if (params.type === LINEAR && params.interpolator) {\n        scaleFactory = scaleMap[params.interpolator];\n        if (params.interpolator === ScaleType.POW) {\n            return scaleFactory().range(range).exponent(params.exponent);\n        } else if (params.interpolator === ScaleType.LOG) {\n            return scaleFactory().range(range).base([params.base]);\n        }\n    } else {\n        scaleFactory = scaleMap[params.type];\n    }\n\n    if (params.type === QUANTIZE) {\n        scaleFactory().nice();\n    }\n    return scaleFactory().range(range);\n}\n\n/**\n * This method is used to update the range of a scale\n * so that the core module can remain agnostic of the d3\n * scale api.\n *\n * @export\n * @param {Scale} scale Instance of d3 Scale.\n * @param {Array} range new range of the scale.\n * @return {Scale} Updated scale.\n */\nexport function updateScaleRange (scale, range) {\n    return scale.range(range);\n}\n\n/**\n *\n *\n * @export\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} steps\n *\n */\nexport function getScaleType (domainType, rangeType, steps) {\n    if (rangeType === CONTINOUS) {\n        return LINEAR;\n    }\n    if (domainType === CONTINOUS) {\n        if (steps instanceof Array) {\n            return THRESHOLD;\n        }\n        return QUANTIZE;\n    }\n    return ORDINAL;\n}\n","import { getUniqueId } from 'muze-utils';\nimport { CLASSPREFIX } from '../enums/constants';\n\n/**\n *\n *\n */\nexport const defaultConfig = {\n    id: getUniqueId(),\n    axisName: {\n        defClassName: 'axis-name'\n    },\n    axisNamePadding: 12,\n    base: 10,\n    classPrefix: CLASSPREFIX,\n    className: `${CLASSPREFIX}-axis`,\n    exponent: 1,\n    interpolator: 'linear',\n    fixedBaseline: true,\n    labels: {\n        rotation: null,\n        smartTicks: null\n    },\n    orientation: 'left',\n    numberFormat: val => val,\n    padding: 0.3,\n    nice: true,\n    numberOfTicks: 10,\n    rotate: false,\n    show: true,\n    showAxisName: true,\n    showInnerTicks: true,\n    showOuterTicks: true,\n    style: {},\n    type: 'linear',\n    tickFormat: null,\n    tickValues: null,\n    xOffset: 0,\n    yOffset: 0\n};\n\n","/**\n * This file exports functionality that is used to render axis.\n */\nimport { selectElement, makeElement, angleToRadian } from 'muze-utils';\nimport * as AxisOrientation from './enums/axis-orientation';\nimport { LINEAR, HIDDEN, BOTTOM, TOP } from './enums/constants';\n\n/**\n *\n *\n * @param {*} instance\n * @param {*} container\n * @param {*} labelManager\n * @param {*} config\n */\nconst rotateAxis = (instance, tickText, labelManager) => {\n    let rotation;\n    const axis = instance.axis();\n    const config = instance.config();\n    const renderConfig = instance.renderConfig();\n    const smartTicks = instance.smartTicks();\n    const scale = axis.scale();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n    const ticks = labelFunc();\n    const {\n        orientation,\n        fixedBaseline,\n        type\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n\n    rotation = labels.rotation;\n\n    const tickSize = instance.getTickSize();\n    tickText.each(function (d, index) {\n        let yShift;\n        let xShift;\n        let datum = smartTicks[index] ? smartTicks[index].text : d;\n\n        const tickFormatter = axis.tickFormat() ? axis.tickFormat : null;\n\n        const temp = tickSize ? (tickFormatter ? tickFormatter()(datum) : datum) : '';\n\n        datum = temp.toString();\n\n        const tickLabelDim = labelManager.getOriSize(datum);\n\n        const width = tickLabelDim.width * 0.5;\n        const height = tickLabelDim.height * 0.5;\n\n        if (rotation < 0) {\n            rotation = 360 + rotation;\n        }\n\n        const quadrant = 4 - Math.floor(rotation / 90);\n        const rotationNormalizer = ((quadrant % 2 === 0) ? rotation : 180 * Math.ceil(rotation / 180) - rotation) % 180;\n\n        yShift = Math.sqrt(height ** 2 + width ** 2) * Math.sin(angleToRadian(rotationNormalizer));\n\n        if ((quadrant === 3 || quadrant === 2) && !(rotationNormalizer > 67.5 && rotationNormalizer <= 90)) {\n            yShift += height * 2;\n        }\n        xShift = width;\n\n        if (rotation === 90) {\n            xShift = height;\n        } else if (rotation === 270) {\n            xShift = -height;\n        } else {\n            xShift = 0;\n        }\n\n        if (orientation === AxisOrientation.TOP) {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift + xShift / 2 : xShift;\n            selectElement(this)\n                            .attr('transform', `translate(${-xShift + tickSize}\n                                ${-yShift - tickSize}) rotate(${rotation})`);\n        } else {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift - xShift / 2 : xShift;\n\n            selectElement(this)\n                            .attr('transform', `translate(${xShift - tickSize}\n                                ${yShift + tickSize}) rotate(${rotation})`);\n        }\n        selectElement(this).transition()\n                        .duration(1000).text(datum);\n    });\n    return tickText;\n};\n\n/**\n *\n *\n * @param {*} tickText\n * @param {*} axisInstance\n */\nconst changeTickOrientation = (selectContainer, axisInstance, tickSize) => {\n    const {\n        _smartTicks\n    } = axisInstance;\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const {\n        orientation,\n        classPrefix\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n    const {\n        rotation,\n        smartTicks: isSmartTicks\n    } = labels;\n\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.selectAll('tspan').remove();\n\n   // rotate labels if not enough space is available\n    if (rotation && (orientation === TOP || orientation === BOTTOM)) {\n        rotateAxis(axisInstance, tickText, labelManager);\n    } else if (!rotation && !isSmartTicks) {\n        tickText.attr('transform', '');\n    } else {\n        tickText.text('');\n        if (orientation === TOP || orientation === BOTTOM) {\n            tickText.attr('y', 0)\n                            .attr('x', 0)\n                            .attr('transform', '')\n                            .text('');\n            const tspan = makeElement(tickText, 'tspan', (d, i) => {\n                if (_smartTicks[i]) {\n                    return _smartTicks[i].lines;\n                } return [];\n            }, `${classPrefix}-smart-text`);\n\n            tspan.attr('dy', '0')\n                            .style('opacity', '0')\n\n                            .transition()\n                            .duration(1000)\n                            .on('end', axisInstance.registerAnimationDoneHook())\n                            .attr('dy', (d, i) => {\n                                if (orientation === BOTTOM || i !== 0) {\n                                    return _smartTicks[0].oriTextHeight;\n                                }\n                                return -_smartTicks[0].oriTextHeight * (_smartTicks[0].lines.length - 1) - tickSize;\n                            })\n                            .style('opacity', 1)\n                            .text(e => e)\n                            .attr('x', 0);\n        } else {\n            const tspan = makeElement(tickText, 'tspan', (d, i) => _smartTicks[i].lines, `${classPrefix}-smart-text`);\n            tspan.text(e => e);\n        }\n    }\n\n    return tickText;\n};\n\nconst setFixedBaseline = (axisInstance) => {\n    const {\n        fixedBaseline\n    } = axisInstance.config();\n    if (fixedBaseline) {\n        axisInstance.setFixedBaseline();\n    }\n};\n\n/**\n *\n *\n * @param {*} textNode\n * @param {*} orientation\n * @param {*} measures\n */\nconst setAxisNamePos = (textNode, orientation, measures) => {\n    const {\n        axisNameHeight,\n        yOffset,\n        labelOffset,\n        availableSpace\n    } = measures;\n    switch (orientation) {\n    case AxisOrientation.LEFT:\n        textNode.attr('transform',\n            `translate(${-(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(-90)`);\n        break;\n    case AxisOrientation.RIGHT:\n        textNode.attr('transform',\n             `translate(${(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(90)`);\n        break;\n    case AxisOrientation.TOP:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${-availableSpace.height + axisNameHeight})`);\n        break;\n    case AxisOrientation.BOTTOM:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${availableSpace.height - axisNameHeight / 2})`);\n        break;\n    default:\n    }\n    return textNode;\n};\n\n/**\n * This method is used to render the axis inside an\n * svg container.\n *\n * @export\n * @param {Object} axisInstance the nput object required to render axis\n * @param {string} axisInstance.orientation the orientation of axis\n * @param {Object} axisInstance.scale instance of d3 scale\n * @param {SVGElement} axisInstance.container the container in which to render\n */\nexport function renderAxis (axisInstance) {\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const mount = axisInstance.mount();\n    const range = axisInstance.range();\n    const axis = axisInstance.axis();\n    const scale = axisInstance.scale();\n    const domain = axisInstance.domain() || [];\n    const {\n        _axisNameStyle,\n        _tickLabelStyle,\n        formatter,\n        tickValues\n     } = axisInstance;\n    const {\n        orientation,\n        name,\n        xOffset,\n        yOffset,\n        axisNamePadding,\n        className,\n        id,\n        classPrefix\n     } = config;\n    const {\n        show,\n        showAxisName,\n        labels\n    } = renderConfig;\n    if (!show || !domain.length) {\n        return;\n    }\n\n    const tickSize = axisInstance.getTickSize();\n\n    const selectContainer = makeElement(selectElement(mount), 'g', [axisInstance], `${className}`, {},\n        key => key.config().id);\n\n    // Set style for tick labels\n    labelManager.setStyle(_tickLabelStyle);\n\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    formatter && axis.tickFormat(formatter(tickValues || axis.tickValues() || labelFunc()));\n\n    // Get range(length of range)\n    const availableSpace = Math.abs(range[0] - range[1]);\n\n    // Get width and height taken by axis labels\n    const labelProps = axisInstance.axisComponentDimensions().largestTickDimensions;\n\n    // Draw axis ticks\n    selectContainer.attr('transform', `translate(${xOffset},${yOffset})`);\n    setFixedBaseline(axisInstance);\n    if (labels.smartTicks === false || tickSize === 0) {\n        selectContainer.transition()\n                        .duration(1000)\n                        .on('end', axisInstance.registerAnimationDoneHook())\n                        .call(axis);\n    } else {\n        selectContainer.call(axis);\n    }\n    selectContainer.selectAll('.tick').classed(`${classPrefix}-ticks`, true);\n    selectContainer.selectAll('.tick line').classed(`${classPrefix}-tick-lines`, true);\n\n    // Set classes for ticks\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.classed(`${classPrefix}-ticks`, true)\n                    .classed(`${classPrefix}-ticks-${id}`, true);\n\n    changeTickOrientation(selectContainer, axisInstance, tickSize);\n\n    // Create axis name\n    const textNode = makeElement(selectContainer, 'text', [name], `${classPrefix}-axis-name`)\n                    .attr('text-anchor', 'middle')\n                    .classed(`${classPrefix}-axis-name-${id}`, true)\n                    .text(d => d);\n\n    // Hide axis name if show is off\n    textNode.classed(HIDDEN, !showAxisName);\n\n     // render labels based on orientation of axis\n    const labelOffset = availableSpace / 2;\n\n    // Set style for axis name\n    labelManager.setStyle(_axisNameStyle);\n    const axisNameSpace = labelManager.getOriSize(name);\n    const measures = {\n        labelProps,\n        tickSize,\n        axisNamePadding,\n        axisNameHeight: axisNameSpace.height,\n        axisNameWidth: axisNameSpace.width,\n        yOffset,\n        xOffset,\n        labelOffset,\n        availableSpace: axisInstance.availableSpace()\n    };\n    // Set position for axis name\n    setAxisNamePos(textNode, orientation, measures);\n}\n","import { BOTTOM, TOP } from '../enums/axis-orientation';\n\nconst setAxisRange = (context, type, rangeBounds, offset) => {\n    context.range(rangeBounds);\n    offset && context.config({ [`${type}Offset`]: offset });\n};\n\nconst getAxisOffset = (timeDiff, range, domain) => {\n    const pvr = Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    const width = (pvr * timeDiff);\n    const avWidth = (range[1] - range[0]);\n    const bars = avWidth / width;\n    const barWidth = avWidth / (bars + 1);\n    const diff = avWidth - barWidth * bars;\n\n    return diff / 2;\n};\n\nexport const adjustRange = (minDiff, range, domain, orientation) => {\n    const diff = getAxisOffset(minDiff, range, domain);\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        range[0] += diff;\n        range[1] -= diff;\n    } else {\n        range[0] -= diff;\n        range[1] += diff;\n    }\n    return range;\n};\n\nexport const spaceSetter = (context, spaceConfig) => {\n    let tickInterval;\n    let heightForTicks;\n    const {\n        width: availWidth,\n        height: availHeight,\n        padding\n    } = context.availableSpace();\n    const {\n        top,\n        left,\n        bottom,\n        right\n    } = padding;\n    const {\n        isOffset\n    } = spaceConfig;\n    const {\n        showAxisName,\n        labels\n    } = context.renderConfig();\n    const {\n        rotation\n    } = labels;\n    const {\n        orientation,\n        fixedBaseline,\n        axisNamePadding,\n        tickValues\n    } = context.config();\n    const {\n        tickDimensions,\n        allTickDimensions,\n        axisNameDimensions,\n        tickSize\n    } = context.getAxisDimensions();\n    const {\n        height: tickDimHeight,\n        width: tickDimWidth\n    } = tickDimensions;\n    const namePadding = showAxisName ? axisNamePadding : 0;\n    const labelConfig = { smartTicks: true, rotation: labels.rotation };\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minDiff = context._minDiff;\n    const domain = context.domain();\n    const axisNameHeight = axisNameDimensions.height;\n\n    return {\n        time: {\n            x: () => {\n                const tickShifter = tickDimWidth / 2;\n\n                setAxisRange(context, 'y', adjustRange(minDiff,\n                    [tickShifter, availWidth - left - right - tickShifter], domain, orientation),\n                        isOffset ? availHeight : null);\n\n                tickInterval = ((availWidth) / context.getTickValues().length)\n                                     - minTickDistance.width;\n\n                heightForTicks = availHeight - axisNameDimensions.availHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickSpace.width && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = labels.rotation === null ? -90 : rotation;\n\n                    // Remove ticks if not enough height\n                    if (tickInterval < minTickSpace.height) {\n                        heightForTicks = availHeight;\n                        tickInterval = minTickSpace.height;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                let widthForTicks = availWidth;\n                const tickShifter = tickDimHeight / 2;\n\n                setAxisRange(context, 'x', adjustRange(minDiff,\n                    [availHeight - top - bottom - tickShifter, tickShifter], domain, orientation),\n                        isOffset ? availWidth : null);\n\n                if ((availWidth - axisNameHeight - namePadding) <= minTickDistance.width) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        band: {\n            x: () => {\n                setAxisRange(context, 'y', [0, availWidth - left - right], isOffset ? availHeight : null);\n                const range = context.range();\n\n                // Get Tick Interval\n                tickInterval = ((range[1] - range[0]) / (tickValues || domain).length) - minTickDistance.width;\n\n                // Get height available for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickSpace.width && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation === null ? -90 : rotation;\n                    labelConfig.smartTicks = false;\n\n                    // Ticks with overlapping height\n                    if (tickInterval < minTickSpace.height) {\n                        heightForTicks = 0;\n                        tickInterval = 0;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                        context.range([minTickSpace.height / 2, availWidth - minTickSpace.height / 2]);\n                    }\n                } else if (tickValues) {\n                    const interval = (availWidth / domain.length) - minTickDistance.width;\n                    if (interval < minTickSpace.width) {\n                        context.range([minTickSpace.height / 2, availWidth - minTickSpace.height / 2]);\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false, showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                setAxisRange(context, 'x', [availHeight - bottom, top], isOffset ? availWidth : null);\n\n                let widthForTicks = availWidth;\n                if (availWidth - axisNameHeight - namePadding <= minTickDistance.width) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        continous: {\n            x: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.width / 2;\n                const baseline = fixedBaseline ? 0 : tickShifter;\n\n                setAxisRange(context, 'y', [baseline + left, availWidth - right - tickShifter],\n                    isOffset ? availHeight : null);\n\n                const range = context.range();\n\n                // Get Tick widths and available space\n                const totalTickWidth = allTickDimensions.length * (tickDimensions.width + minTickDistance.width);\n                const availableSpace = range[1] - range[0];\n\n                 // Rotate labels if not enough width\n                if (availableSpace < totalTickWidth && labels.rotation === null) {\n                    labelConfig.rotation = -90;\n                }\n\n                // Remove ticks if not enough height\n                if (availHeight - axisNameHeight - namePadding < tickDimensions.height) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availHeight < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            },\n            y: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.height / 2;\n                const baseline = fixedBaseline ? 1 : tickShifter;\n\n                setAxisRange(context, 'x', [availHeight - bottom - baseline, tickShifter + top],\n                    isOffset ? availWidth : null);\n\n                // Remove display of ticks if no space is left\n                if (availWidth < tickDimensions.width + axisNameHeight + namePadding) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availWidth < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            }\n        }\n    };\n};\n","import { TOP, LEFT, BOTTOM } from '../enums/axis-orientation';\n\nexport const getRotatedSpaces = (rotation = 0, width, height) => {\n    let rotatedHeight = height;\n    let rotatedWidth = width;\n    if (rotation) {\n        const angle = ((rotation || 0) * Math.PI) / 180;\n        rotatedWidth = Math.abs(height * Math.sin(angle)) + Math.abs(width * Math.cos(angle));\n        rotatedHeight = Math.abs(width * Math.sin(angle)) + Math.abs(height * Math.cos(angle));\n    }\n    return { width: rotatedWidth, height: rotatedHeight };\n};\n\nexport const setOffset = (context) => {\n    let x = 0;\n    let y = 0;\n    const logicalSpace = context.logicalSpace();\n    const config = context.config();\n    const {\n        orientation,\n        xOffset,\n        yOffset\n    } = config;\n    if (orientation === LEFT) {\n        x = xOffset === undefined ? logicalSpace.width : xOffset;\n    }\n    if (orientation === TOP) {\n        y = yOffset === undefined ? logicalSpace.height : yOffset;\n    }\n    context.config({ xOffset: x, yOffset: y });\n};\n\nexport const getNumberOfTicks = (availableSpace, labelDim, axis, axisInstance) => {\n    const ticks = axis.scale().ticks();\n    const { numberOfTicks } = axisInstance.config();\n    const tickLength = ticks.length;\n    let numberOfValues = tickLength;\n\n    if (tickLength * (labelDim * 1.5) > availableSpace) {\n        numberOfValues = Math.floor(availableSpace / (labelDim * 1.5));\n    }\n\n    numberOfValues = Math.min(numberOfTicks, Math.max(2, numberOfValues));\n\n    return axis.scale().ticks(numberOfValues);\n};\n\nexport const getAxisComponentDimensions = (context) => {\n    let largestTick = '';\n    let largestTickDimensions = { width: 0, height: 0 };\n    let smartTick = {};\n    let axisTicks;\n    const allTickDimensions = [];\n    const scale = context.scale();\n    const { showAxisName } = context.renderConfig();\n    const { tickValues, name } = context.config();\n    const { labelManager } = context.dependencies();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    // set the style on the shared label manager instance\n    labelManager.setStyle(context._tickLabelStyle);\n\n    // get the values along the domain\n    axisTicks = tickValues || labelFunc();\n\n    // Get the tick labels\n    axisTicks = axisTicks.map((originalLabel, i) => {\n        const label = context.getFormattedText(originalLabel, i, axisTicks);\n\n    // convert to string for quant values\n        const tickDimensions = labelManager.getOriSize(label);\n\n    // Get spaces for all labels\n        allTickDimensions.push(tickDimensions);\n\n    // Getting largest label\n        if (tickDimensions.width > largestTickDimensions.width) {\n            largestTick = label;\n            smartTick = context.smartTicks() ? context.smartTicks()[i] : {};\n            largestTickDimensions = tickDimensions;\n        }\n        return label;\n    });\n\n    labelManager.setStyle(context._axisNameStyle);\n    const axisNameDimensions = showAxisName ? labelManager.getOriSize(name) : { width: 0, height: 0 };\n\n    return {\n        axisNameDimensions,\n        largestTick,\n        largestTickDimensions,\n        allTickDimensions,\n        axisTicks,\n        smartTick,\n        tickSize: context.getTickSize()\n    };\n};\n\nexport const computeAxisDimensions = (context) => {\n    let tickDimensions = {};\n    const { labels } = context.renderConfig();\n    const { smartTicks, rotation } = labels;\n    const {\n        largestTickDimensions,\n        axisTicks,\n        smartTick,\n        axisNameDimensions,\n        allTickDimensions,\n        tickSize\n    } = getAxisComponentDimensions(context);\n    const { height: labelHeight, width: labelWidth } = largestTickDimensions;\n\n    // get the domain of axis\n    const domain = context.domain();\n    // const angle = ((rotation || 0) * Math.PI) / 180;\n\n    if (domain.length === 0) {\n        return null;\n    }\n    if (smartTicks) {\n        tickDimensions = smartTick;\n    } else {\n        tickDimensions = { width: labelWidth, height: labelHeight };\n    }\n    tickDimensions = getRotatedSpaces(rotation, tickDimensions.width, tickDimensions.height);\n\n    if (tickSize === 0) {\n        tickDimensions = { width: 0, height: 0 };\n    }\n    return {\n        allTickDimensions,\n        tickSize,\n        tickDimensions,\n        axisNameDimensions,\n        largestTickDimensions,\n        axisTicks\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getHorizontalAxisSpace = (context, axisDimensions, range) => {\n    let width;\n    let height;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    width = range && range.length ? range[1] - range[0] : 0;\n\n    height = 0;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        width = ((max - min) / Math.abs(minTickDiff)) * (tickDimWidth + context._minTickDistance.width);\n    }\n    if (!width || width === 0) {\n        height = Math.max(tickDimWidth, tickDimHeight);\n    } else {\n        height = tickDimHeight;\n    }\n    height += (showAxisName ? axisDimHeight + axisNamePadding : 0) + tickSize;\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getVerticalAxisSpace = (context, axisDimensions) => {\n    let height;\n    let width;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    height = 0;\n    width = tickDimWidth;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        height = ((max - min) / Math.abs(minTickDiff)) * tickDimHeight;\n    }\n    width += (showAxisName ? axisDimHeight : 0) + tickSize + axisNamePadding;\n\n    return {\n        height,\n        width\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateBandSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show } = context.renderConfig();\n    const { largestTickDimensions, axisTicks, allTickDimensions } = axisDimensions;\n    const { height: largestDimHeight } = largestTickDimensions;\n    const minTickWidth = context._minTickDistance.width;\n    if (orientation === TOP || orientation === BOTTOM) {\n        let {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n\n        if (!width || width === 0) {\n            width = allTickDimensions.reduce((t, n) =>\n                t + Math.min(n.width, n.height) + minTickWidth, 0);\n        }\n        if (show === false) {\n            height = 0;\n        }\n\n        return {\n            width,\n            height\n        };\n    }\n\n    let {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    if (!height || height === 0) {\n        height = axisTicks.length * (largestDimHeight + context._minTickDistance.height) + largestDimHeight;\n    }\n    if (show === false) {\n        width = 0;\n    }\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateContinousSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show, showAxisName } = context.renderConfig();\n    const { axisNameDimensions } = axisDimensions;\n\n    if (show === false) {\n        return {\n            width: 0,\n            height: 0\n        };\n    }\n\n    const { width: axisNameWidth } = axisNameDimensions;\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        const {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n        const axisWidth = Math.max(width, axisNameWidth);\n\n        return {\n            width: axisWidth,\n            height\n        };\n    }\n    const {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    const effHeight = Math.max(height, showAxisName ? axisNameWidth : 0);\n\n    return {\n        width,\n        height: effHeight\n    };\n};\n\nexport const setContinousAxisDomain = (context, domain) => {\n    const { nice, domain: userDom } = context.config();\n    if (userDom) {\n        domain = userDom;\n    }\n    if (domain.length && domain[0] === domain[1]) {\n        domain = [0, +domain[0] * 2];\n    }\n    context.scale().domain(domain);\n    nice && context.scale().nice();\n    context._domain = context.scale().domain();\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    availableSpace: {},\n    axisDimensions: {},\n    axisComponentDimensions: {},\n    config: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._config || {});\n            value = mergeRecursive(oldConfig, value);\n            value.axisNamePadding = Math.max(value.axisNamePadding, 0);\n            if (value.orientation !== oldConfig.orientation) {\n                context.axis(context.createAxis(value));\n            }\n            const {\n                labels,\n                show,\n                showInnerTicks,\n                showOuterTicks,\n                showAxisName\n            } = value;\n            context.renderConfig({\n                labels,\n                show,\n                showInnerTicks,\n                showOuterTicks,\n                showAxisName\n            });\n            return value;\n        }\n    },\n    renderConfig: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._renderConfig || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    logicalSpace: {},\n    mount: {\n    },\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.logicalSpace(null);\n            return value;\n        }\n    },\n\n    smartTicks: {},\n    tickSize: {},\n    maxTickSpaces: {}\n};\n","import {\n    mergeRecursive,\n    getSmartComputedStyle,\n    selectElement,\n    generateGetterSetters,\n    getUniqueId\n} from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { defaultConfig } from './default-config';\nimport { renderAxis } from '../axis-renderer';\nimport { BAND } from '../enums/constants';\nimport { spaceSetter } from './space-setter';\nimport {\n    getAxisComponentDimensions,\n    computeAxisDimensions,\n    calculateContinousSpace\n} from './helper';\nimport { PROPS } from './props';\n\nexport default class SimpleAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @memberof SimpleAxis\n     */\n    constructor (config, dependencies) {\n        this._id = getUniqueId();\n\n        this._dependencies = dependencies;\n        this._mount = null;\n        this._range = [];\n        this._domain = [];\n        this._domainLock = false;\n        this._axisDimensions = {};\n        this._smartTicks = [];\n\n        const defCon = mergeRecursive({}, this.constructor.defaultConfig());\n        const simpleConfig = mergeRecursive(defCon, config);\n\n        const bodyElem = selectElement('body');\n        const classPrefix = simpleConfig.classPrefix;\n        this._tickLabelStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-ticks`);\n        this._axisNameStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-axis-name`);\n\n        dependencies.labelManager.setStyle(this._tickLabelStyle);\n        const dist = dependencies.labelManager.getOriSize('w');\n\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n        this._minTickSpace = dependencies.labelManager.getOriSize('www');\n\n        generateGetterSetters(this, PROPS);\n        this.config(simpleConfig);\n\n        this._scale = this.createScale(this._config);\n        this._axis = this.createAxis(this._config);\n        this._animationDonePromises = [];\n    }\n\n    /**\n     * Returns the default configuration of simple axis\n     *  @return {Object} default configurations\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    scale (...params) {\n        if (params.length) {\n            this._scale = params[0];\n            return this;\n        }\n        return this._scale;\n    }\n\n    resetDomain () {\n        this._domain = [];\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    axis (...params) {\n        if (params.length) {\n            this._axis = params[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            let dom = domain[0];\n            const userDom = this.config().domain;\n            if (userDom) {\n                dom = userDom;\n            }\n            this.scale().domain(dom);\n            this._domain = this.scale().domain();\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    setAxisComponentDimensions () {\n        this.axisComponentDimensions(getAxisComponentDimensions(this));\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const scale = createScale({\n            padding,\n            interpolator,\n            exponent,\n            base,\n            range,\n            type: this.constructor.type()\n        });\n\n        return scale;\n    }\n\n    getTickFormatter (tickFormat, numberFormat) {\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(numberFormat(val), i, ticks);\n        }\n        return () => val => numberFormat(val);\n    }\n\n    resetLogicalSpace () {\n        this.logicalSpace(null);\n        this.range([]);\n        const {\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName\n        } = this.config();\n        this.renderConfig({\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName\n        });\n    }\n\n    getFormattedText (text, index, axisTicks) {\n        const formatter = this.formatter;\n        const scale = this.scale();\n        return formatter ? formatter(axisTicks)(text, index) : (scale.tickFormat ? scale.tickFormat()(text) : text);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const {\n            tickFormat,\n            numberFormat,\n            orientation\n        } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            this.formatter = this.getTickFormatter(tickFormat, numberFormat);\n\n            return axis;\n        }\n        return null;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).continous.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).continous.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        return this;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this.scale()(domainVal);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        return this.axis().tickSize();\n    }\n\n    /**\n     * Gets the space occupied by the parts of an axis\n     *\n     * @return {Object} object with details about sizes of the axis.\n     * @memberof SimpleAxis\n     */\n    getAxisDimensions (...params) {\n        this.axisDimensions(computeAxisDimensions(this, ...params));\n        return this.axisDimensions();\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateContinousSpace(this));\n            this.logicalSpace();\n        }\n\n        return this.logicalSpace();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (...value) {\n        const values = value.map(d => this.scale().invert(d)) || [];\n        return value.length === 1 ? values[0] : values;\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        let p1;\n        let p2;\n        let extent;\n        const {\n            type\n        } = this.config();\n        const scale = this.scale();\n        const range = scale.range();\n        const reverse = range[0] > range[1];\n\n        if (type === BAND) {\n            extent = scale.invertExtent(v1, v2);\n            p1 = scale(reverse ? extent[extent.length - 1] : extent[0]);\n            p2 = scale(reverse ? extent[0] : extent[extent.length - 1]) + scale.bandwidth();\n            return [p1, p2];\n        }\n        return [v1, v2];\n    }\n\n    getMinTickDifference () {\n        return this.domain();\n    }\n\n    getFormattedTickValues (tickValues) {\n        return tickValues;\n    }\n\n    /**\n     * This method returns the width in pixels for one\n     * unit along the axis. It is only applicable to band scale\n     * and returns undefined for other scale type.\n     *\n     * @return {number} the width of one band along band scale axis\n     * @memberof SimpleAxis\n     */\n    getUnitWidth () {\n        return 0;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof SimpleAxis\n     */\n    serialize () {\n        return {\n            name: this.name,\n            type: this.type,\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to render the axis inside\n     * the supplied svg container.\n     *\n     * @param {SVGElement} svg the svg element in which to render the path\n     * @memberof SimpleAxis\n     */\n    /* istanbul ignore next */render () {\n        if (this.mount()) {\n            this.setTickConfig();\n            renderAxis(this);\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    remove () {\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    unsubscribe () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    isReverse () {\n        const range = this.range();\n        return range[0] > range[1];\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getPixelToValueRatio () {\n        const scale = this.scale();\n        const range = scale.range();\n        const domain = scale.domain();\n\n        return Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    }\n\n     /**\n     * Notifies when all animations/transitions of the axis are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n}\n\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LinearInterpolator {\n\n    createScale (config) {\n        const {\n            range\n        } = config;\n        const scaleFactory = scaleMap.linear;\n        this._scale = scaleFactory().range(range);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LogInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            base\n        } = config;\n        const scaleFactory = scaleMap.log;\n        this._scale = scaleFactory().range(range).base(base);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal <= 0) {\n            return 1;\n        }\n\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain[0] <= 0) {\n            return [Math.max(1, domain[0]), Math.max(1, domain[1])];\n        } return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class PowInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            exponent\n        } = config;\n        const scaleFactory = scaleMap.pow;\n        this._scale = scaleFactory().range(range).exponent(exponent);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { spaceSetter } from './space-setter';\nimport { LINEAR, LOG, POW } from '../enums/scale-type';\nimport { LogInterpolator, PowInterpolator, LinearInterpolator } from './interpolators';\nimport {\n    getNumberOfTicks,\n    setContinousAxisDomain\n} from './helper';\n\nexport const interpolatorMap = {\n    [LOG]: LogInterpolator,\n    [POW]: PowInterpolator,\n    [LINEAR]: LinearInterpolator\n};\n\nexport default class ContinousAxis extends SimpleAxis {\n    constructor (config, dependencies) {\n        config.tickFormat = config.tickFormat || (val => val);\n        super(config, dependencies);\n    }\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const InterpolatorCls = interpolatorMap[interpolator];\n\n        this._interpolator = new InterpolatorCls();\n        let scale = this._interpolator.createScale({\n            padding,\n            exponent,\n            base,\n            range\n        });\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ContinousAxis\n     */\n    static type () {\n        return LINEAR;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this._interpolator.getScaleValue(domainVal);\n    }\n /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n\n        return axis.tickSize();\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (domain) {\n        if (domain && domain.length) {\n            setContinousAxisDomain(this, domain);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        } else if (domain) {\n            this._domain = [];\n        } return this._domain;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).continous.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).continous.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} tickValues\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        const {\n            tickValues\n        } = this.config();\n        const {\n            showInnerTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        if (!showInnerTicks) {\n            axis.tickValues([]);\n            return this;\n        }\n\n        if (tickValues) {\n            tickValues instanceof Array && this.axis().tickValues(tickValues);\n            return this;\n        }\n        axis.tickValues(this.getTickValues());\n\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickValues () {\n        let labelDim = 0;\n        const {\n            orientation,\n            tickValues\n        } = this.config();\n        const range = this.range();\n        const axis = this.axis();\n\n        const availableSpace = Math.abs(range[0] - range[1]);\n\n        const labelProps = this.axisComponentDimensions().largestTickDimensions;\n\n        if (tickValues) {\n            return axis.scale().ticks(tickValues);\n        }\n        labelDim = labelProps[orientation === BOTTOM || orientation === TOP ? 'width' : 'height'];\n\n        return getNumberOfTicks(availableSpace, labelDim, axis, this);\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline (tickText) {\n        const {\n            orientation\n        } = this.config();\n        const {\n            labels\n        } = this.renderConfig();\n\n        const {\n            rotation\n        } = labels;\n        const axis = this.axis();\n        const ticks = axis.scale().ticks();\n        const { width, height } = this.axisComponentDimensions().allTickDimensions[0];\n        axis.tickTransform((d) => {\n            if (d === ticks[0]) {\n                if ((orientation === LEFT || orientation === RIGHT)) {\n                    return `translate(0, -${(height) / 3}px)`;\n                }\n                if ((orientation === TOP || orientation === BOTTOM) && !rotation) {\n                    return `translate(${width / 2}px,  ${0}px)`;\n                }\n            } return '';\n        });\n        return tickText;\n    }\n\n}\n","import SimpleAxis from './simple-axis';\nimport { BAND } from '../enums/scale-type';\nimport { TOP, BOTTOM } from '../enums/axis-orientation';\nimport { calculateBandSpace, setOffset, getRotatedSpaces } from './helper';\nimport { spaceSetter } from './space-setter';\n\nexport default class BandAxis extends SimpleAxis {\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof BandAxis\n     */\n    createScale (range) {\n        const scale = super.createScale(range);\n        const { padding } = this.config();\n        if (typeof padding === 'number') {\n            scale.padding(padding);\n        }\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BandAxis\n     */\n    static type () {\n        return BAND;\n    }\n\n     /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).band.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).band.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks = '';\n        let smartlabel;\n        const domain = this.domain();\n        const { labelManager } = this._dependencies;\n        const { tickValues, tickFormat } = this.config();\n        const { labels } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n        const tickFormatter = tickFormat || (val => val);\n\n        tickValues && this.axis().tickValues(tickValues);\n        smartTicks = tickValues || domain;\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i, values), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n            setOffset(this);\n            this.logicalSpace();\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     *\n     *\n     * @memberof BandAxis\n     */\n    getTickValues () {\n        return this.axis().scale().domain();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    getUnitWidth () {\n        return this.scale().bandwidth();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        axis.tickSizeInner(showInnerTicks ? 6 : 0);\n        axis.tickSizeOuter(showOuterTicks ? 6 : 0);\n        return axis.tickSize();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (...value) {\n        const values = value.map(d => this.scale().invert(d)) || [];\n        return value.length === 1 ? values[0] && values[0].toString() : values.map(d => d.toString());\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { TIME } from '../enums/scale-type';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { calculateBandSpace, getRotatedSpaces, setContinousAxisDomain } from './helper';\nimport { spaceSetter } from './space-setter';\n\n/**\n *\n *\n * @export\n * @class TimeAxis\n * @extends {SimpleAxis}\n */\nexport default class TimeAxis extends SimpleAxis {\n\n    constructor (...params) {\n        super(...params);\n        this._minDiff = Infinity;\n    }\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof TimeAxis\n     */\n    createScale (range) {\n        let scale = super.createScale(range);\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TimeAxis\n     */\n    static type () {\n        return TIME;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const {\n            tickFormat,\n            orientation\n        } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            this.formatter = this.getTickFormatter(tickFormat);\n            return axis;\n        }\n        return null;\n    }\n\n    getTickFormatter (tickFormat) {\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(val, i, ticks);\n        }\n        return null;\n    }\n\n     /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n        return super.getTickSize();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TimeAxis\n     */\n    getTickValues () {\n        return this.config().tickValues || this.scale().ticks();\n    }\n\n    /**\n     *\n     *\n     * @param {*} diff\n     *\n     * @memberof TimeAxis\n     */\n    minDiff (diff) {\n        this._minDiff = Math.min(this._minDiff, diff);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (domain) {\n        if (domain) {\n            setContinousAxisDomain(this, domain);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        } return this._domain;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n            this.logicalSpace();\n        }\n        return this.logicalSpace();\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).time.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).time.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks;\n        let smartlabel;\n        const { tickFormat, tickValues } = this.config();\n        const { labels } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { labelManager } = this._dependencies;\n        const domain = this.getTickValues();\n        const scale = this.scale();\n        tickValues && this.axis().tickValues(tickValues);\n\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        smartTicks = tickValues || domain;\n        const tickFormatter = tickFormat || scale.tickFormat();\n         // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i, values), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n}\n","export const x11Colors = {\n    Pink: { hex: 'ffc0cb', rgb: '255,192,203' },\n    LightPink: { hex: 'ffb6c1', rgb: '255,182,193' },\n    HotPink: { hex: 'ff69b4', rgb: '255,105,180' },\n    DeepPink: { hex: 'ff1493', rgb: '255,20,147' },\n    PaleVioletRed: { hex: 'db7093', rgb: '219,112,147' },\n    MediumVioletRed: { hex: 'c71585', rgb: '199,21,133' },\n    LightSalmon: { hex: 'ffa07a', rgb: '255,160,122' },\n    Salmon: { hex: 'fa8072', rgb: '250,128,114' },\n    DarkSalmon: { hex: 'e9967a', rgb: '233,150,122' },\n    LightCoral: { hex: 'f08080', rgb: '240,128,128' },\n    IndianRed: { hex: 'cd5c5c', rgb: '205,92,92' },\n    Crimson: { hex: 'dc143c', rgb: '220,20,60' },\n    FireBrick: { hex: 'b22222', rgb: '178,34,34' },\n    DarkRed: { hex: '8b0000', rgb: '139,0,0' },\n    Red: { hex: 'ff0000', rgb: '255,0,0' },\n    OrangeRed: { hex: 'ff4500', rgb: '255,69,0' },\n    Tomato: { hex: 'ff6347', rgb: '255,99,71' },\n    Coral: { hex: 'ff7f50', rgb: '255,127,80' },\n    DarkOrange: { hex: 'ff8c00', rgb: '255,140,0' },\n    Orange: { hex: 'ffa500', rgb: '255,165,0' },\n    Gold: { hex: 'ffd700', rgb: '255,215,0' },\n    Yellow: { hex: 'ffff00', rgb: '255,255,0' },\n    LightYellow: { hex: 'ffffe0', rgb: '255,255,224' },\n    LemonChiffon: { hex: 'fffacd', rgb: '255,250,205' },\n    LightGoldenrodYellow: { hex: 'fafad2', rgb: '250,250,210' },\n    PapayaWhip: { hex: 'ffefd5', rgb: '255,239,213' },\n    Moccasin: { hex: 'ffe4b5', rgb: '255,228,181' },\n    PeachPuff: { hex: 'ffdab9', rgb: '255,218,185' },\n    PaleGoldenrod: { hex: 'eee8aa', rgb: '238,232,170' },\n    Khaki: { hex: 'f0e68c', rgb: '240,230,140' },\n    DarkKhaki: { hex: 'bdb76b', rgb: '189,183,107' },\n    Cornsilk: { hex: 'fff8dc', rgb: '255,248,220' },\n    BlanchedAlmond: { hex: 'ffebcd', rgb: '255,235,205' },\n    Bisque: { hex: 'ffe4c4', rgb: '255,228,196' },\n    NavajoWhite: { hex: 'ffdead', rgb: '255,222,173' },\n    Wheat: { hex: 'f5deb3', rgb: '245,222,179' },\n    BurlyWood: { hex: 'deb887', rgb: '222,184,135' },\n    Tan: { hex: 'd2b48c', rgb: '210,180,140' },\n    RosyBrown: { hex: 'bc8f8f', rgb: '188,143,143' },\n    SandyBrown: { hex: 'f4a460', rgb: '244,164,96' },\n    Goldenrod: { hex: 'daa520', rgb: '218,165,32' },\n    DarkGoldenrod: { hex: 'b8860b', rgb: '184,134,11' },\n    Peru: { hex: 'cd853f', rgb: '205,133,63' },\n    Chocolate: { hex: 'd2691e', rgb: '210,105,30' },\n    SaddleBrown: { hex: '8b4513', rgb: '139,69,19' },\n    Sienna: { hex: 'a0522d', rgb: '160,82,45' },\n    Brown: { hex: 'a52a2a', rgb: '165,42,42' },\n    Maroon: { hex: '800000', rgb: '128,0,0' },\n    DarkOliveGreen: { hex: '556b2f', rgb: '85,107,47' },\n    Olive: { hex: '808000', rgb: '128,128,0' },\n    OliveDrab: { hex: '6b8e23', rgb: '107,142,35' },\n    YellowGreen: { hex: '9acd32', rgb: '154,205,50' },\n    LimeGreen: { hex: '32cd32', rgb: '50,205,50' },\n    Lime: { hex: '00ff00', rgb: '0,255,0' },\n    LawnGreen: { hex: '7cfc00', rgb: '124,252,0' },\n    Chartreuse: { hex: '7fff00', rgb: '127,255,0' },\n    GreenYellow: { hex: 'adff2f', rgb: '173,255,47' },\n    SpringGreen: { hex: '00ff7f', rgb: '0,255,127' },\n    MediumSpringGreen: { hex: '00fa9a', rgb: '0,250,154' },\n    LightGreen: { hex: '90ee90', rgb: '144,238,144' },\n    PaleGreen: { hex: '98fb98', rgb: '152,251,152' },\n    DarkSeaGreen: { hex: '8fbc8f', rgb: '143,188,143' },\n    MediumSeaGreen: { hex: '3cb371', rgb: '60,179,113' },\n    SeaGreen: { hex: '2e8b57', rgb: '46,139,87' },\n    ForestGreen: { hex: '228b22', rgb: '34,139,34' },\n    Green: { hex: '008000', rgb: '0,128,0' },\n    DarkGreen: { hex: '006400', rgb: '0,100,0' },\n    MediumAquamarine: { hex: '66cdaa', rgb: '102,205,170' },\n    Aqua: { hex: '00ffff', rgb: '0,255,255' },\n    Cyan: { hex: '00ffff', rgb: '0,255,255' },\n    LightCyan: { hex: 'e0ffff', rgb: '224,255,255' },\n    PaleTurquoise: { hex: 'afeeee', rgb: '175,238,238' },\n    Aquamarine: { hex: '7fffd4', rgb: '127,255,212' },\n    Turquoise: { hex: '40e0d0', rgb: '64,224,208' },\n    MediumTurquoise: { hex: '48d1cc', rgb: '72,209,204' },\n    DarkTurquoise: { hex: '00ced1', rgb: '0,206,209' },\n    LightSeaGreen: { hex: '20b2aa', rgb: '32,178,170' },\n    CadetBlue: { hex: '5f9ea0', rgb: '95,158,160' },\n    DarkCyan: { hex: '008b8b', rgb: '0,139,139' },\n    Teal: { hex: '008080', rgb: '0,128,128' },\n    LightSteelBlue: { hex: 'b0c4de', rgb: '176,196,222' },\n    PowderBlue: { hex: 'b0e0e6', rgb: '176,224,230' },\n    LightBlue: { hex: 'add8e6', rgb: '173,216,230' },\n    SkyBlue: { hex: '87ceeb', rgb: '135,206,235' },\n    LightSkyBlue: { hex: '87cefa', rgb: '135,206,250' },\n    DeepSkyBlue: { hex: '00bfff', rgb: '0,191,255' },\n    DodgerBlue: { hex: '1e90ff', rgb: '30,144,255' },\n    CornflowerBlue: { hex: '6495ed', rgb: '100,149,237' },\n    SteelBlue: { hex: '4682b4', rgb: '70,130,180' },\n    RoyalBlue: { hex: '4169e1', rgb: '65,105,225' },\n    Blue: { hex: '0000ff', rgb: '0,0,255' },\n    MediumBlue: { hex: '0000cd', rgb: '0,0,205' },\n    DarkBlue: { hex: '00008b', rgb: '0,0,139' },\n    Navy: { hex: '000080', rgb: '0,0,128' },\n    MidnightBlue: { hex: '191970', rgb: '25,25,112' },\n    Lavender: { hex: 'e6e6fa', rgb: '230,230,250' },\n    Thistle: { hex: 'd8bfd8', rgb: '216,191,216' },\n    Plum: { hex: 'dda0dd', rgb: '221,160,221' },\n    Violet: { hex: 'ee82ee', rgb: '238,130,238' },\n    Orchid: { hex: 'da70d6', rgb: '218,112,214' },\n    Fuchsia: { hex: 'ff00ff', rgb: '255,0,255' },\n    Magenta: { hex: 'ff00ff', rgb: '255,0,255' },\n    MediumOrchid: { hex: 'ba55d3', rgb: '186,85,211' },\n    MediumPurple: { hex: '9370db', rgb: '147,112,219' },\n    BlueViolet: { hex: '8a2be2', rgb: '138,43,226' },\n    DarkViolet: { hex: '9400d3', rgb: '148,0,211' },\n    DarkOrchid: { hex: '9932cc', rgb: '153,50,204' },\n    DarkMagenta: { hex: '8b008b', rgb: '139,0,139' },\n    Purple: { hex: '800080', rgb: '128,0,128' },\n    Indigo: { hex: '4b0082', rgb: '75,0,130' },\n    DarkSlateBlue: { hex: '483d8b', rgb: '72,61,139' },\n    SlateBlue: { hex: '6a5acd', rgb: '106,90,205' },\n    MediumSlateBlue: { hex: '7b68ee', rgb: '123,104,238' },\n    White: { hex: 'ffffff', rgb: '255,255,255' },\n    Snow: { hex: 'fffafa', rgb: '255,250,250' },\n    Honeydew: { hex: 'f0fff0', rgb: '240,255,240' },\n    MintCream: { hex: 'f5fffa', rgb: '245,255,250' },\n    Azure: { hex: 'f0ffff', rgb: '240,255,255' },\n    AliceBlue: { hex: 'f0f8ff', rgb: '240,248,255' },\n    GhostWhite: { hex: 'f8f8ff', rgb: '248,248,255' },\n    WhiteSmoke: { hex: 'f5f5f5', rgb: '245,245,245' },\n    Seashell: { hex: 'fff5ee', rgb: '255,245,238' },\n    Beige: { hex: 'f5f5dc', rgb: '245,245,220' },\n    OldLace: { hex: 'fdf5e6', rgb: '253,245,230' },\n    FloralWhite: { hex: 'fffaf0', rgb: '255,250,240' },\n    Ivory: { hex: 'fffff0', rgb: '255,255,240' },\n    AntiqueWhite: { hex: 'faebd7', rgb: '250,235,215' },\n    Linen: { hex: 'faf0e6', rgb: '250,240,230' },\n    LavenderBlush: { hex: 'fff0f5', rgb: '255,240,245' },\n    MistyRose: { hex: 'ffe4e1', rgb: '255,228,225' },\n    Gainsboro: { hex: 'dcdcdc', rgb: '220,220,220' },\n    LightGray: { hex: 'd3d3d3', rgb: '211,211,211' },\n    Silver: { hex: 'c0c0c0', rgb: '192,192,192' },\n    DarkGrey: { hex: 'a9a9a9', rgb: '169,169,169' },\n    Grey: { hex: '808080', rgb: '128,128,128' },\n    DimGrey: { hex: '696969', rgb: '105,105,105' },\n    LightSlateGrey: { hex: '778899', rgb: '119,136,153' },\n    SlateGrey: { hex: '708090', rgb: '112,128,144' },\n    DarkSlateGrey: { hex: '2f4f4f', rgb: '47,79,79' },\n    Black: { hex: '000000', rgb: '0,0,0' }\n};\n","import {\n    LINEAR\n} from '../enums/constants';\n/**\n * Set of default colors\n */\nexport const palette = [\n    '#086bb6',\n    '#f37d45',\n    '#f5ce02',\n    '#67bda0',\n    '#c54e4e',\n    '#ae70af'\n];\n\nexport const DEFAULT_GRADIENT_COLOR = '#eaeaea';\n\nexport const DEFAULT_CONFIG = {\n    range: palette,\n    value: palette[0],\n    step: false,\n    stops: 5,\n    type: LINEAR\n};\n","import { mergeRecursive, detectColor, hexToHsv, rgbToHsv } from 'muze-utils';\nimport { x11Colors } from './color-maps';\nimport { palette, DEFAULT_GRADIENT_COLOR } from './defaults';\nimport { LINEAR, RGB, HEX, HSL, HSLA } from '../enums/constants';\n\nexport const getHslString = hslArr => `hsla(${hslArr[0] * 360},${hslArr[1] * 100}%,${hslArr[2] * 100}%,\\\n${hslArr[3] || 1})`;\n\nexport const convertToXllString = baseString => (baseString.split(' ') || [])\n                .reduce((x, e) => `${x}${e.charAt(0).toUpperCase()}${e.slice(1)}`, '');\n\nexport const getActualHslColor = (e, paletteColor) => {\n    let color = '';\n    if (typeof e === 'string') {\n        e = e.replace(/ /g, '');\n        e = e.toLowerCase();\n        if (detectColor(e) === HSL || detectColor(e) === HSLA) {\n            color = e.match(/(\\d+(\\.\\d+)?)/g);\n            color = [color[0] / 360, color[1] / 100, color[2] / 100, color[3] || 1];\n        } else if (detectColor(e) === HEX) {\n            color = hexToHsv(e);\n        } else if (detectColor(e) === RGB) {\n            const col = e.substring(e.indexOf('(') + 1, e.lastIndexOf(')')).split(/,\\s*/);\n            color = rgbToHsv(...col);\n        } else if (x11Colors[convertToXllString(e)]) {\n            color = rgbToHsv(...x11Colors[convertToXllString(e)].rgb.split(','));\n        }\n    } else if (!(e instanceof Array)) {\n        color = rgbToHsv(paletteColor);\n    } else {\n        color = e;\n    }\n    return color;\n};\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => {\n            const defCon = mergeRecursive({}, context.constructor.defaultConfig());\n            if (config.type === LINEAR) {\n                config.range = config.range || [defCon.range[0]];\n                config.range = config.range.length > 1 ? config.range : [DEFAULT_GRADIENT_COLOR, ...config.range];\n            }\n            const oldConfig = mergeRecursive(defCon, context.config());\n            const newConfig = mergeRecursive(oldConfig, config);\n\n            if (newConfig.range instanceof Array) {\n                newConfig.range = newConfig.range.map((e, i) => getActualHslColor(e, palette[i]));\n                newConfig.stops = config.stops || newConfig.range.length;\n            }\n            newConfig.value = getActualHslColor(newConfig.value, newConfig.value);\n            return newConfig;\n        }\n    },\n    domain: {},\n    scale: {},\n    uniqueValues: {}\n};\n","import { numberInterpolator, piecewiseInterpolator, hslInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, SEQUENTIAL, ORDINAL, QUANTILE } from '../enums/scale-type';\nimport { getHslString } from './props';\n\nconst getStops = (domain, stops) => {\n    let newStops = [];\n\n    if (stops instanceof Array) {\n        newStops = stops.slice().sort();\n        newStops = [...new Set([domain[0], ...stops, domain[1]])].sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i <= stops; i++) {\n            newStops[i] = interpolator(i / stops);\n        }\n    }\n\n    if (newStops[0] < domain[0]) {\n        newStops.shift();\n    }\n    return { domain, newStops };\n};\n\nconst rangeStops = (newStopsLength, range) => {\n    let newRange = [];\n    const maxRangeLength = Math.min(range.length, 18);\n\n    if (newStopsLength > maxRangeLength) {\n        const interpolator = piecewiseInterpolator()(hslInterpolator(), range.map(e => getHslString(e)));\n        for (let i = 0; i < newStopsLength; i++) {\n            newRange[i] = interpolator(i / (newStopsLength - 1));\n        }\n    } else {\n        newRange = range.slice(0, newStopsLength);\n    }\n    return { newRange };\n};\n\n/**\n*\n*\n* @param {*} domain\n*\n*/\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomainMeasure = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { domain, uniqueVals, scaleDomain: [0, 1], range };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain, nice: true, range };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} stops\n *\n */\nconst steppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, stops);\n    const { newRange } = rangeStops(newStops.length - 1, range);\n\n    return { uniqueVals, domain: newStops, nice: true, range: newRange };\n};\n\nconst continousSteppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, range.length - 1);\n    const hslRange = range.map(e => getHslString(e));\n    return { uniqueVals, domain: newStops, nice: true, range: hslRange };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst uniqueRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst indexedRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale) => scale(domainValue);\n\n/**\n *\n *\n * @param {*} stops\n */\nconst strategies = () => ({\n    [`${CONTINOUS}-${CONTINOUS}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomain,\n        value: () => uniqueRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${ORDINAL}`]: {\n        scale: ORDINAL,\n        domainRange: () => normalDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}-${ORDINAL}`]: {\n        scale: LINEAR,\n        domainRange: () => continousSteppedDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${ORDINAL}`]: {\n        scale: QUANTILE,\n        domainRange: () => steppedDomain,\n        value: () => normalRange\n\n    }\n});\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} stops\n */\nexport const strategyGetter = (domainType, rangeType, schemeType, stops) =>\n     strategies(stops)[`${domainType}-${rangeType}-${schemeType || ''}`];\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters, rgbToHsv } from 'muze-utils';\nimport { createScale, getScheme, getSchemeType } from '../scale-creator';\nimport { CONTINOUS, DISCRETE, COLOR } from '../enums/constants';\nimport { strategyGetter } from './color-strategy';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { PROPS, getHslString } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ColorAxis {\n\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} config input parameters.\n    * @param {Object | undefined} params.range Type of color range.\n    * @param {string} params.name the label to show on axis.\n    * @param {string} params.type The type of scale to handle.\n    * @memberof ColorAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n        this.config(config);\n\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = (this._config.type === 'linear' && !this._config.step) ? CONTINOUS : DISCRETE;\n\n        this._schemeType = getSchemeType(this._config.range);\n\n        this._colorStrategy = this.setColorStrategy(this._domainType, this._rangeType, this._schemeType);\n        this._scale = this.createScale(this._colorStrategy);\n\n        this._id = getUniqueId();\n\n        this.updateDomain(config.domain);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return COLOR;\n    }\n\n    /**\n     *\n     *\n     * @param {*} colorStrategy\n     *\n     * @memberof ColorAxis\n     */\n    createScale (colorStrategy) {\n        const { range } = this.config();\n        if (range && typeof (range) === 'string') {\n            return getScheme(range);\n        }\n        return createScale({\n            type: colorStrategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setColorStrategy (domainType, rangeType, schemeType) {\n        const { stops } = this.config();\n\n        return strategyGetter(domainType, rangeType, schemeType, stops);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getHslString (hslColorArray) {\n        return getHslString(hslColorArray);\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getColor (domainVal) {\n        return this.getHslString(this.getRawColor(domainVal));\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getRawColor (domainVal) {\n        if (this.domain() && domainVal !== undefined) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const color = this._colorStrategy.value(range)(domainVal, scale, this.domain(), this.uniqueValues());\n\n            if (typeof color === 'string') {\n                const col = color.substring(color.indexOf('(') + 1, color.lastIndexOf(')')).split(/,\\s*/);\n                return rgbToHsv(...col);\n            }\n            return [...color];\n        }\n        return [...this.config().value];\n    }\n\n    /**\n     *\n     *\n     * @param {*} [domain=[]]\n     *\n     * @memberof ColorAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const domainRangeFn = this._colorStrategy.domainRange();\n            const scaleInfo = domainRangeFn(domain, this.config().stops, range);\n\n            this.domain(scaleInfo.domain);\n            scaleInfo.range && this.scale().range(scaleInfo.range);\n            this.uniqueValues(scaleInfo.uniqueVals);\n            this.scale().domain(scaleInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            config: this.config()\n        };\n    }\n\n    transformColor (color, transformationArr) {\n        const h = color[0] * 360;\n        const s = color[1] * 100;\n        const l = color[2] * 100;\n        const a = color[3] || 1;\n        const newH = h + transformationArr[0];\n        const newS = s + transformationArr[1];\n        const newL = l + transformationArr[2];\n        const newA = a + transformationArr[3] || 0;\n\n        return { color: `hsla(${newH},${newS}%,${newL}%,${newA})`, hsla: [newH / 360, newS / 100, newL / 100, newA] };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n\n}\n","export const DEFAULT_CONFIG = {\n    value: 36,\n    range: [36, 1000]\n};\n","import { numberInterpolator, piecewiseInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, THRESHOLD } from '../enums/scale-type';\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} intervals\n *\n */\nconst steppedDomain = (domain, intervals) => {\n    let newIntervals = [];\n    if (intervals instanceof Array) {\n        newIntervals = intervals.slice().sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i < intervals; i++) {\n            newIntervals[i] = interpolator(i / (intervals - 1));\n        }\n    }\n    if (newIntervals[0] < domain[0]) {\n        newIntervals.shift();\n    }\n    const retDomain = newIntervals;\n    return { uniqueVals: newIntervals, domain: retDomain, nice: true };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst discreteRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n    const interpolator = numberInterpolator()(...scale.range());\n    return interpolator(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst pieceWiseRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    const fn = piecewiseInterpolator()(numberInterpolator(), [...scale.range()]);\n    return fn(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale) => scale(domainValue);\n\n/**\n *\n *\n * @param {*} intervals\n */\nconst strategies = {\n    [`${DISCRETE}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: indexedDomain,\n        range: pieceWiseRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: normalDomain,\n        range: normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}`]: {\n        scale: THRESHOLD,\n        domain: steppedDomain,\n        range: discreteRange\n    }\n};\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} intervals\n */\nexport const strategyGetter = (domainType, rangeType) =>\n     strategies[`${domainType}-${rangeType}`];\n","export const PROPS = {\n    config: {},\n    domain: {\n        sanitization: (context, value) => {\n            context.scale().domain(value);\n            return value;\n        }\n    },\n    range: {},\n    scale: {},\n    uniqueValues: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SIZE, CONTINOUS, DISCRETE } from '../enums/constants';\nimport { strategyGetter } from './size-strategy';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class SizeAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @param {Object} config input parameters.\n     * @memberof SizeAxis\n     */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig(), config);\n        // @todo: Will use configuration override using scale decorator\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = CONTINOUS;\n\n        this._sizeStrategy = this.setStrategy(this._domainType, this._rangeType);\n        this._scale = this.createScale(this._sizeStrategy);\n        this._range = this._config.range;\n\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setStrategy (domainType, rangeType) {\n        return strategyGetter(domainType, rangeType);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SizeAxis\n     */\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SIZE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof SizeAxis\n     */\n    getSize (domainVal = 0) {\n        let sizeVal = 1;\n        const {\n            value\n        } = this.config();\n        const scale = this.scale();\n        const domain = this.domain() || [1, 1];\n\n        if (!scale || domain[0] === domain[1]) {\n            sizeVal = value;\n        } else {\n            return this._sizeStrategy.range(domainVal, scale, this.domain(), this.uniqueValues());\n        }\n        return sizeVal;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SizeAxis\n     */\n    updateDomain (domain) {\n        if (domain) {\n            const domainFn = this._sizeStrategy.domain;\n\n            const domainInfo = domainFn(domain, this.config().intervals);\n\n            this.domain(domainInfo.domain);\n            this.uniqueValues(domainInfo.uniqueVals);\n\n            this.scale().domain(domainInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","export const DEFAULT_CONFIG = {\n    generator: null,\n    value: 'circle',\n    range: ['circle', 'diamond', 'star', 'cross', 'square', 'wye', 'triangle']\n};\n","export const PROPS = {\n    config: {},\n    domain: {},\n    scale: {},\n    uniqueValues: {},\n    generator: {}\n};\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, getSymbol, generateGetterSetters, mergeRecursive } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SHAPE } from '../enums/constants';\nimport { shapeGenerator } from './helper';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ShapeAxis {\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} params input parameters.\n    * @param {Object | undefined} params.range Type of color scheme.\n    * @memberof ShapeAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(this._config, config);\n\n        this._scale = createScale({\n            type: 'ordinal',\n            range: this._config.range\n        });\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SHAPE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} value\n     *\n     * @memberof ShapeAxis\n     */\n    getShape (value) {\n        if (!this.scale() || !this.domain() || !value) {\n            return this.config().value;\n        }\n\n        if (this._generatedShapes) {\n            return this._generatedShapes[value];\n        }\n\n        const shapeType = this.scale()(value);\n        if (shapeType === 'string') {\n            return getSymbol(shapeType);\n        }\n\n        return shapeType;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof ShapeAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            this.uniqueValues(domain);\n            this.domain(domain);\n            this.scale().domain(domain);\n\n            if (this.config().generator) {\n                this._generatedShapes = shapeGenerator(domain, this.config().generator);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.config().range,\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","/**\n *\n *\n * @param {*} domain\n * @param {*} generatorFn\n *\n */\nexport const shapeGenerator = (domain, generatorFn) => {\n    const generatedShapes = {};\n    domain.forEach((value) => {\n        generatedShapes[value] = generatorFn(value);\n    });\n    return generatedShapes;\n};\n","import * as ScaleType from './enums/scale-type';\n\nconst DATA_TYPES = {\n    DIMENSION: 'dimension',\n    CATEGORICAL: 'categorical',\n    MEASURE: 'measure',\n    TEMPORAL: 'temporal'\n};\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    [DATA_TYPES.DIMENSION]: ScaleType.BAND,\n    [DATA_TYPES.MEASURE]: ScaleType.LINEAR,\n    [DATA_TYPES.TEMPORAL]: ScaleType.TIME\n};\n\n","import { nestCollection } from 'muze-utils';\n\n/**\n * Create multiple datasets from a single dataset by grouping the data using\n * a dimensional field.\n * @param {Array} schema Name and type of fields are stored in schema\n * @param {Array} data Data array\n * @param {Object} config Configuration object\n * @return {Array} Grouped data array\n */\nexport default (schema, data, config) => {\n    const groupBy = config.groupBy instanceof Array ? config.groupBy : [config.groupBy];\n    const groupByIndices = groupBy.map(fieldName => schema.findIndex(d => d.name === fieldName));\n\n    if (groupByIndices.find(d => d === -1) !== undefined) {\n        throw new Error(`Groupby field ${groupBy} not found in schema`);\n    }\n\n    return nestCollection({\n        keys: groupByIndices,\n        data\n    });\n};\n","/**\n * @module Transform\n * This file exports a function that is used to implement\n * the identity transform\n */\n /* eslint no-unused-vars: 0 */\n /**\n  * This function accepts data and returns the data unchanged.\n  * @param {Object} schema The schema.\n  * @param {Array} data The data array.\n  * @param {Object} config The config object.\n  * @return {Array} The unchanged data.\n  */\n function identityTransform (schema, data, config) {\n     return data;\n }\n\n export default identityTransform;\n","/**\n * @module Transform\n * This file exports the transform factory.\n */\nimport * as TransformType from '../enums/transform-type';\nimport identity from '../identity-transform';\nimport group from '../group-transform';\nimport stack from '../stack-transform';\n\n/* istanbul ignore next */\nconst transformMap = {\n    [TransformType.IDENTITY]: identity,\n    [TransformType.GROUP]: group,\n    [TransformType.STACK]: stack\n};\n\n/**\n * This function is used to retirn a transform associated\n * with the given type.\n *\n * @param {string} type The type of the transform.\n * @return {Function} The transform function.\n */\nfunction transformFactory (type) {\n    const transform = transformMap[type];\n    if (typeof transform !== 'function') {\n        throw new Error('Invalid transform type supplied.');\n    }\n    return transform;\n}\n\nexport default transformFactory;\n","/**\n * @module Transform\n * This module exports constants that are used to reference transforms in\n * a consistent manner throughout the project.\n */\n/* eslint one-var: 0 */\n export const IDENTITY = 'identity';\n export const GROUP = 'group';\n export const STACK = 'stack';\n export const FRACTURE = 'fracture';\n","import { stack } from 'muze-utils';\n\nimport group from '../group-transform';\n/*\n    Normalize the data to a form which can be given to d3 stack for stacking the data\n    ['Product', 'Sales', 'Region'],\n    0 ['A', 2000, 'North'],\n    1 ['A', 3000, 'South'],\n    2 ['B', 3000, 'South'],\n    3 ['B', 2000, 'North'],\n    4 ['C', 3000, 'South'],\n    5 ['C', 2000, 'North']\n            |\n            |\n    ['Product', 'North', 'South'],\n    ['A', 2000, 3000],\n    ['B', 2000, 3000],\n    ['C', 2000, 3000]\n*/\n// eslint-disable-next-line require-jsdoc\nconst normalizeData = (data, schema, valueField, uniqueField, groupBy) => {\n    const groupedData = group(schema, data, {\n        groupBy: uniqueField\n    });\n    const uniqueFieldIndex = schema.findIndex(d => d.name === uniqueField);\n    const valueFieldIndex = schema.findIndex(d => d.name === valueField);\n    const seriesKeyIndex = schema.findIndex(d => d.name === groupBy);\n    const seriesKeys = data.map(d => d[seriesKeyIndex]).filter((item, pos, arr) => arr.indexOf(item) === pos).sort();\n    const fieldNames = schema.reduce((acc, obj, i) => {\n        acc[i] = obj.name;\n        return acc;\n    }, {});\n    const dataArr = groupedData.map((arr) => {\n        const tuples = {};\n        const rowObj = arr.values.reduce((acc, row) => {\n            acc = row.reduce((obj, value, i) => {\n                if (i === seriesKeyIndex) {\n                    obj[value] = row[valueFieldIndex];\n                    tuples[value] = row;\n                } else if (i !== valueFieldIndex) {\n                    obj[fieldNames[i]] = value;\n                }\n                return obj;\n            }, acc);\n            return acc;\n        }, {});\n        rowObj._tuple = tuples;\n            // Set missing values field to zero value\n        seriesKeys.forEach((seriesKey) => {\n            if (rowObj[seriesKey] === undefined) {\n                rowObj[seriesKey] = 0;\n                const newArr = new Array(arr.values[0].length);\n                newArr[uniqueFieldIndex] = arr.key;\n                newArr[seriesKeyIndex] = seriesKey;\n                rowObj._tuple[seriesKey] = newArr;\n            }\n        });\n        return rowObj;\n    });\n\n    return {\n        data: dataArr,\n        keys: seriesKeys\n    };\n};\n/**\n * Generate a stacked representation of data\n * @param {Array} schema schema Array\n * @param {Array} data data array\n * @param {Object} config Configuration object\n * @return {Array} stacked data\n */\nexport default (schema, data, config) => {\n    const uniqueField = config.uniqueField;\n    const valueField = config.value;\n    const groupBy = config.groupBy;\n    const sort = config.sort || 'descending';\n    const normalizedData = normalizeData(data, schema, valueField, uniqueField, groupBy);\n    const keys = normalizedData.keys;\n    const map = {};\n    const orderBy = config.orderBy;\n    const orderIndex = schema.findIndex(d => d.name === orderBy);\n    const groupByIndex = schema.findIndex(d => d.name === groupBy);\n    if (orderIndex !== -1) {\n        keys.forEach((key) => {\n            const name = data.find(d => d[groupByIndex] === key);\n            map[key] = name[orderIndex];\n        });\n        normalizedData.keys.sort((a, b) => map[a].localeCompare(map[b]));\n    }\n\n    const stackData = stack({\n        keys: normalizedData.keys,\n        offset: config.offset || 'diverging',\n        order: sort,\n        data: normalizedData.data\n    });\n    stackData.forEach((seriesData) => {\n        seriesData.forEach((dataObj) => {\n            dataObj.data = dataObj.data._tuple[seriesData.key];\n        });\n    });\n    return stackData;\n};\n\n","import {\n    FieldType,\n    getDomainFromData,\n    setStyles,\n    easeFns,\n    selectElement,\n    DimensionSubtype,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { transformFactory } from '@chartshq/transform';\nimport { IDENTITY, STACK, GROUP, COLOR, SHAPE, SIZE, ENCODING } from '../enums/constants';\n\nconst BAND = ScaleType.BAND;\n\nexport const getLayerColor = ({ datum, index }, { colorEncoding, colorAxis, colorFieldIndex }) => {\n    let rawColor = '';\n    let color = '';\n    if (colorEncoding && colorEncoding.value instanceof Function) {\n        color = colorEncoding.value(datum, index);\n        rawColor = colorEncoding.value(datum, index);\n    } else {\n        rawColor = colorAxis.getRawColor(datum._data[colorFieldIndex]);\n        color = colorAxis.getHslString(rawColor);\n    }\n    return { color, rawColor };\n};\n\nconst transfromColor = (colorAxis, datum, styleType, intensity) => {\n    datum.meta.stateColor[styleType] = datum.meta.stateColor[styleType] || datum.meta.originalColor;\n    const fillColorInfo = colorAxis.transformColor(datum.meta.stateColor[styleType], intensity);\n    datum.meta.stateColor[styleType] = fillColorInfo.hsla;\n\n    return fillColorInfo;\n};\n\nexport const applyInteractionStyle = (context, selectionSet, interactionStyles, config) => {\n    const elements = context.getPlotElementsFromSet(selectionSet);\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const apply = config.apply;\n    const interactionType = config.interactionType;\n    interactionStyles.forEach((style) => {\n        const styleType = style.type;\n        elements.style(styleType, ((d) => {\n            const { colorTransform, stateColor, originalColor } = d.meta;\n            colorTransform[interactionType] = colorTransform[interactionType] || {};\n            if (apply && !colorTransform[interactionType][styleType]) {\n                // fade selections\n                colorTransform[interactionType][styleType] = style.intensity;\n                const color = transfromColor(colorAxis, d, styleType, style.intensity).color;\n                return color;\n            }\n            if (!apply && colorTransform[interactionType][styleType]) {\n                 // unfade selections\n                colorTransform[interactionType][styleType] = null;\n                return transfromColor(colorAxis, d, styleType, style.intensity.map(e => -e)).color;\n            }\n            const [h, s, l, a] = stateColor[styleType] ? stateColor[styleType] : originalColor;\n            return `hsla(${h * 360},${s * 100}%,${l * 100}%, ${a || 1})`;\n        }));\n    });\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const fadeUnfadeSelection = (context, selectionSet, hasFaded, interaction) => {\n    const interactionConfig = { interaction, apply: hasFaded };\n    applyInteractionStyle(context, selectionSet, 'fade', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const focusUnfocusSelection = (context, selectionSet, isFocussed, interaction) => {\n    const interactionConfig = { interaction, apply: isFocussed };\n    applyInteractionStyle(context, selectionSet, 'focus', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} axes\n *\n */\nexport const getAxesScales = (axes) => {\n    const [xAxis, yAxis] = [ENCODING.X, ENCODING.Y].map(e => axes[e]);\n    const [xScale, yScale] = [xAxis, yAxis].map(e => e && e.scale());\n    return {\n        xAxis,\n        yAxis,\n        xScale,\n        yScale\n    };\n};\n\n/**\n *\n *\n * @param {*} encoding\n * @param {*} fieldsConfig\n *\n */\nexport const getEncodingFieldInf = (encoding, fieldsConfig) => {\n    const [xField, yField, x0Field, y0Field, colorField, shapeField, sizeField] =\n        [ENCODING.X, ENCODING.Y, ENCODING.X0, ENCODING.Y0, COLOR, SHAPE, SIZE].map(e => encoding[e] &&\n            encoding[e].field);\n\n    const [xFieldType, yFieldType] = [xField, yField, x0Field, y0Field].map(e => fieldsConfig[e] &&\n        fieldsConfig[e].def.type);\n\n    const [xFieldSubType, yFieldSubType] = [xField, yField].map(e => fieldsConfig[e] && (fieldsConfig[e].def.subtype ||\n        fieldsConfig[e].def.type));\n\n    const [xFieldIndex, yFieldIndex, x0FieldIndex, y0FieldIndex] = [xField, yField, x0Field, y0Field]\n        .map(e => fieldsConfig[e] && fieldsConfig[e].index);\n\n    return {\n        xField,\n        yField,\n        colorField,\n        shapeField,\n        sizeField,\n        x0Field,\n        y0Field,\n        xFieldType,\n        yFieldType,\n        xFieldSubType,\n        yFieldSubType,\n        xFieldIndex,\n        yFieldIndex,\n        x0FieldIndex,\n        y0FieldIndex\n    };\n};\n\n/**\n *\n *\n * @param {*} layerConfig\n * @param {*} fieldsConfig\n *\n */\nexport const getValidTransform = (layerConfig, fieldsConfig, encodingFieldInf) => {\n    let transformType;\n    const {\n        transform\n    } = layerConfig;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const groupByField = transform.groupBy;\n    const groupByFieldMeasure = fieldsConfig[groupByField] && fieldsConfig[groupByField].def.type === FieldType.MEASURE;\n    transformType = transform.type;\n    if (!xField || !yField || groupByFieldMeasure || !groupByField || xFieldType === FieldType.DIMENSION &&\n        yFieldType === FieldType.DIMENSION) {\n        transformType = IDENTITY;\n    }\n    return transformType;\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} config\n * @param {*} transformType\n *\n */\nexport const transformData = (dataModel, config, transformType, encodingFieldInf) => {\n    const data = dataModel.getData({ withUid: true });\n    const schema = data.schema;\n    const transform = config.transform;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const uniqueField = xFieldType === FieldType.MEASURE ? yField : xField;\n\n    return transformFactory(transformType)(schema, data.data, {\n        groupBy: transform.groupBy,\n        uniqueField,\n        sort: transform.sort || 'none',\n        offset: transform.offset,\n        orderBy: transform.orderBy,\n        value: yFieldType === FieldType.MEASURE ? yField : xField\n    }, data.uids);\n};\n\nexport const getIndividualClassName = (d, i, data, context) => {\n    const className = context.config().individualClassName;\n    let classNameStr = '';\n    if (className instanceof Function) {\n        classNameStr = className(d, i, data, context);\n    }\n    return classNameStr;\n};\n\n/*\n * This method resolves the x, y, x0 and y0 values from the transformed data.\n * It also checks the type of transformed data for example, if it is a stacked data\n * then it fetches the y and y0 values from the stacked data.\n * @param {Array.<Array>} transformedData transformed data\n * @param {Object} fieldsConfig field definitions\n * @param {string} transformType type of transformed data - stack, group or identity.\n * @return {Array.<Object>} Normalized data\n*/\nexport const getNormalizedData = (transformedData, fieldsConfig, encodingFieldInf, transformType) => {\n    const transformedDataArr = transformType === IDENTITY ? [transformedData] : transformedData;\n    const {\n        xFieldType,\n        xFieldIndex,\n        yFieldIndex,\n        x0FieldIndex,\n        y0FieldIndex\n    } = encodingFieldInf;\n    const fieldsLen = Object.keys(fieldsConfig).length;\n    /**\n     * Returns normalized data from transformed data. It recursively traverses through\n     * the transformed data if there it is nested.\n     */\n    return transformedDataArr.map((data) => {\n        const values = transformType === GROUP ? data.values : data;\n        return values.map((d) => {\n            let pointObj = {};\n            let tuple;\n            if (transformType === STACK) {\n                tuple = d.data || [];\n                let y;\n                let y0;\n                let x;\n                let x0;\n                if (d[1] >= d[0]) {\n                    y = x0 = d[1];\n                    x = y0 = d[0];\n                } else {\n                    y = x0 = d[0];\n                    x = y0 = d[1];\n                }\n\n                pointObj = xFieldType === FieldType.MEASURE ? {\n                    x,\n                    x0,\n                    y: tuple[yFieldIndex],\n                    y0: tuple[yFieldIndex]\n                } : {\n                    x: tuple[xFieldIndex],\n                    x0: tuple[xFieldIndex],\n                    y,\n                    y0\n                };\n                pointObj._data = tuple;\n                pointObj._id = tuple[fieldsLen];\n            } else {\n                pointObj = {\n                    x: d[xFieldIndex],\n                    y: d[yFieldIndex],\n                    x0: d[x0FieldIndex],\n                    y0: d[y0FieldIndex]\n                };\n                pointObj._data = d;\n                pointObj._id = d[fieldsLen];\n            }\n            return pointObj;\n        });\n    }).filter(d => d.length);\n};\n\nexport const calculateDomainFromData = (data, encodingFieldInf, transformType) => {\n    const {\n        xFieldSubType,\n        yFieldSubType,\n        xField,\n        yField,\n        x0Field,\n        y0Field\n    } = encodingFieldInf;\n    const domains = {};\n    const yEnc = ENCODING.Y;\n    const xEnc = ENCODING.X;\n    if (xField) {\n        domains.x = getDomainFromData(data, x0Field || transformType === STACK ? [xEnc, ENCODING.X0] : [xEnc, xEnc],\n            xFieldSubType);\n    }\n    if (yField) {\n        domains.y = getDomainFromData(data, y0Field || transformType === STACK ? [ENCODING.Y0, ENCODING.Y] :\n            [yEnc, yEnc], yFieldSubType);\n    }\n\n    return domains;\n};\n\nexport const attachDataToVoronoi = (voronoi, points) => {\n    voronoi.data([].concat(...points).filter(d => d._id !== undefined).map((d) => {\n        const point = d.update;\n        return {\n            x: point.x,\n            y: point.y,\n            data: d\n        };\n    }));\n};\n\n/**\n *\n *\n * @param {*} target\n * @param {*} styles\n * @param {*} remove\n */\nexport const updateStyle = (target, styles, remove) => {\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            target.style(key, remove ? null : styles[key]);\n        }\n    }\n};\n\n/**\n *\n *\n * @param {*} mount\n * @param {*} context\n */\nexport const animateGroup = (mount, context) => {\n    let groupTransition;\n    let update;\n    const { transition, groupAnimateStyle } = context;\n    const { duration, effect, disabled } = transition;\n    if (groupAnimateStyle) {\n        setStyles(mount.node(), groupAnimateStyle.enter);\n        update = groupAnimateStyle.update;\n        if (!disabled) {\n            groupTransition = mount.transition()\n                .ease(easeFns[effect])\n                .duration(duration)\n                .on('end', function () {\n                    updateStyle(selectElement(this), update, true);\n                });\n        } else {\n            groupTransition = mount;\n        }\n        updateStyle(groupTransition, update);\n    }\n};\n\nexport const positionPoints = (context, points) => {\n    const positioner = context.encodingTransform();\n    if (positioner) {\n        return positioner(points, context, { smartLabel: context._dependencies.smartLabel });\n    }\n    return points;\n};\n\n/**\n  * Gets the width of each group. It gets the width from axis if it is available for\n  * example when the scale is nominal else it calculates the width from the\n  * range of the axis and number of data points.\n  *\n  * @param {SimpleAxis} axis instance of axis\n  * @param {number} minDiff Minimum difference between data points\n  * @return {number} width of each bar\n  * @private\n*/\nexport const getGroupSpan = (axis, minDiff) => {\n    let groupSpan;\n    const width = axis.getUnitWidth();\n    const scale = axis.scale();\n    const range = scale.range();\n    const domain = scale.domain();\n    !width ? groupSpan = (Math.abs(range[1] - range[0]) / Math.abs(domain[1] - domain[0])) * minDiff :\n        (groupSpan = width);\n\n    return groupSpan;\n};\n\nexport const getPlotMeasurement = (context, dimensionalValues) => {\n    const fieldInfo = context.encodingFieldsInf();\n    const axes = context.axes();\n    const transformType = context.transformType();\n    const config = context.config();\n    const bandScale = context._bandScale;\n\n    return ['x', 'y'].map((type) => {\n        let span = 0;\n        let groupSpan = 0;\n        let padding = 0;\n        let offsetValues = [];\n        if (fieldInfo[`${type}FieldType`] === FieldType.DIMENSION) {\n            let actualGroupWidth;\n            const isTemporal = fieldInfo[`${type}FieldSubType`] === DimensionSubtype.TEMPORAL;\n            const timeDiff = isTemporal ? context.dataProps().timeDiffs[type] : 0;\n            const axis = axes[type];\n            const pad = config[`pad${type.toUpperCase()}`];\n            const innerPadding = config.innerPadding;\n            const keys = dimensionalValues;\n            const scale = axis.scale();\n            groupSpan = getGroupSpan(axis, timeDiff);\n            const isAxisBandScale = axis.constructor.type() === BAND;\n            const axisPadding = axis.config().padding;\n            // If it is a grouped bar then the width of each bar in a grouping is retrieved from\n            // a band scale. The band scale will have range equal to width of one group of bars and\n            // the domain is set to series keys.\n            if (transformType === 'group') {\n                const groupPadding = isAxisBandScale ? 0 : axisPadding * groupSpan / 2;\n                bandScale.range([groupPadding, groupSpan - groupPadding]).domain(keys).paddingInner(innerPadding);\n                span = bandScale.bandwidth();\n                actualGroupWidth = groupSpan - (isAxisBandScale ? 0 : axisPadding * groupSpan);\n                offsetValues = keys.map(key => bandScale(key) - (isAxisBandScale ? 0 : (groupSpan / 2)));\n            } else if (pad !== undefined) {\n                let offset;\n                if (isAxisBandScale) {\n                    const step = scale.step();\n                    offset = scale.padding() * step;\n                    span = scale.bandwidth() + offset;\n                } else {\n                    span = groupSpan;\n                }\n                offsetValues = keys.map(() => (isAxisBandScale ? -(offset / 2) : -(span / 2)));\n            } else {\n                padding = isAxisBandScale ? 0 : axisPadding * groupSpan;\n                span = groupSpan - padding;\n                actualGroupWidth = span;\n                offsetValues = keys.map(() => (isAxisBandScale ? 0 : -(span / 2)));\n            }\n\n            groupSpan = actualGroupWidth;\n            padding = isAxisBandScale ? axisPadding * axis.scale().step() : axisPadding * groupSpan;\n        }\n\n        return {\n            span,\n            offsetValues,\n            groupSpan,\n            padding\n        };\n    });\n};\n\nexport const initializeGlobalState = (context) => {\n    const store = context.store();\n    const globalState = context.constructor.getState()[0];\n    const namespace = context.metaInf().namespace;\n    for (const prop in globalState) {\n        store.append(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${prop}`, {\n            [namespace]: null\n        });\n    }\n};\n","import { CommonProps, STATE_NAMESPACES } from 'muze-utils';\nimport { getValidTransform, getEncodingFieldInf } from '../helpers';\nimport * as PROPS from '../enums/props';\n\nconst renderLayer = (context) => {\n    const mount = context.mount();\n    if (mount) {\n        context.render(mount);\n        context.dependencies().throwback.commit(CommonProps.ON_LAYER_DRAW, true);\n    }\n};\n\nexport const listenerMap = (context, ns) => [\n    {\n        props: [`${ns.local}.${PROPS.DATA}`],\n        listener: ([, data]) => {\n            const config = context.config();\n            const encodingValue = config.encoding;\n            if (data && encodingValue) {\n                const fieldsConfig = data.getFieldsConfig();\n                const encodingFieldsInf = getEncodingFieldInf(encodingValue, fieldsConfig);\n                context.encodingFieldsInf(encodingFieldsInf);\n                context.transformType(getValidTransform(config, fieldsConfig, encodingFieldsInf));\n                context._transformedData = context.getTransformedData(data, config,\n                    context.transformType(), encodingFieldsInf);\n                context._normalizedData = context.getNormalizedData(context._transformedData, fieldsConfig);\n                const domain = context.calculateDomainFromData(context._normalizedData, context.encodingFieldsInf(),\n                    context.data().getFieldsConfig());\n                context._domain = domain;\n                !context._updateLock && context.domain(domain);\n            }\n        },\n        type: 'registerImmediateListener'\n    },\n    {\n        props: [`${ns.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            const calculateDomain = config.calculateDomain;\n            const props = context.getRenderProps();\n            const store = context.store();\n            const namespaceInf = {\n                namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${context.metaInf().namespace}`,\n                key: 'renderListener'\n            };\n            store.unsubscribe(namespaceInf);\n            if (calculateDomain === false) {\n                props.push(`${ns.local}.${PROPS.DATA}`);\n            }\n            store.registerChangeListener(props,\n                () => {\n                    renderLayer(context);\n                }, false, namespaceInf);\n        },\n        type: 'registerImmediateListener'\n    }\n];\n\n","export const DATA = 'data';\nexport const CONFIG = 'config';\nexport const MEASUREMENT = 'measurement';\nexport const DOMAIN = 'domain';\nexport const MOUNT = 'mount';\n","import { mergeRecursive } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nexport const defaultOptions = {\n    [PROPS.CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig, context) => {\n                const constructor = context.constructor;\n                const newConf = mergeRecursive({}, constructor.defaultConfig());\n                return constructor.defaultPolicy(newConf, config);\n            }\n        }\n    },\n    [PROPS.DATA]: {\n        value: null,\n        meta: {\n            preset: (data, context) => {\n                if (context._cacheEnabled) {\n                    context._cachedData.push(data);\n                } else {\n                    context._cachedData = [data];\n                }\n            }\n        }\n    }\n    // [PROPS.MOUNT]: {\n    //     value: null\n    // },\n    // [PROPS.AXES]: {\n    //     value: null\n    // },\n    // [PROPS.MEASUREMENT]: {\n    //     value: null\n    // }\n};\n","import {\n    getUniqueId,\n    mergeRecursive,\n    FieldType,\n    selectElement,\n    ReservedFields,\n    registerListeners,\n    transactor,\n    DataModel,\n    clone,\n    generateGetterSetters,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { SimpleLayer } from '../simple-layer';\nimport * as PROPS from '../enums/props';\nimport { props } from './props';\nimport {\n    transformData,\n    calculateDomainFromData,\n    getNormalizedData,\n    applyInteractionStyle,\n    initializeGlobalState\n} from '../helpers';\nimport { listenerMap } from './listener-map';\nimport { defaultOptions } from './default-options';\n\n/**\n * An abstract class which gives definition of common layer functionality like\n * - transforming data for various modes. Supported modes: identity, group and stack.\n * - calculating data domain\n * - linking dependent layers\n * - merging policy of configuration\n * - interaction sideffect helpers\n * - retrieving dom elements from data using id\n * - retrieving the physical dimensions of marks\n * - disposing layer\n *\n * Every layer has to extend base layer and give concrete definition.\n * This layer does not have any default visual. A new layer has to define the logic of `render` for rendering the\n * visuals\n *\n * @public\n * @class\n * @module BaseLayer\n */\nexport default class BaseLayer extends SimpleLayer {\n\n    /**\n     * Creates a layer using a configuration and data.\n     *\n     * @public\n     * @constructor\n     * @param {DataModel} data Instance of DataModel to be used. This DataModel instance serves as the data for a layer.\n     * @param {Object} axes Axes instances to be used for rendering the layer. Axes are used for mapping data from\n     *      value to px.\n     * @param {SimpleAxis} axes.x X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {SimpleAxis} axes.y X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {ColorAxis} axes.color Axis for coloring a layer using color interpolators\n     * @param {ShapeAxis} axes.shape Axis for providing a shape\n     * @param {SizeAxis} axes.size Axis for determining size of a mark using size interpolator\n     * @param {LayerConfig} config Configuration of the layer\n     * @param {Object} dependencies Dependencies of the layer\n     * @param {SmartLabel} dependencies.smartLabel Smartlabel singleton instance\n     */\n    constructor (data, axes, config, dependencies = {}) {\n        super();\n\n        generateGetterSetters(this, props);\n        this.data(data);\n        this.axes(axes);\n        this.config(config);\n        this.alias(this.constructor.formalName() + getUniqueId());\n        this.dependencies(dependencies);\n        this._points = [];\n        this._cachedData = [];\n        this._id = getUniqueId();\n        this._measurement = {};\n        this._animationDonePromises = [];\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            {\n                config: {},\n                data: {}\n            }\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            const localNs = `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            initializeGlobalState(this);\n            const store = this.store();\n            store.append(`${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}`, {\n                [metaInf.namespace]: null\n            });\n\n            transactor(this, defaultOptions, store.model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE\n            }, {\n                unitRowIndex: metaInf.unitRowIndex,\n                unitColIndex: metaInf.unitColIndex\n            });\n            return this;\n        }\n        return this._store;\n    }\n\n    domain (...dom) {\n        const prop = `${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`;\n        if (dom.length) {\n            this.store().commit(prop, dom[0]);\n            return this;\n        }\n        return this.store().get(prop);\n    }\n\n    /**\n     * Creates a layer instance\n     * @return {BaseLayer} Instance of a layer\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Default configuration of the layer. This configuration gets merged to the user passed configuration using a\n     * plolicy. Base layer only returns part of configuraion, any layer overridding base layer should return its own\n     * configuration.\n     *\n     * @public\n     * @static\n     *\n     * @return {Object} Default configuration\n     */\n    static defaultConfig () {\n        return {\n            transform: {\n                type: 'identity'\n            }\n        };\n    }\n\n    /**\n     * Policy defines how user config gets merged to default config. The default policy here does a deep copy\n     * operation.\n     * Any policy which does more than deep copying should define the policy as a static member.\n     *\n     * @static\n     * @public\n     *\n     * @param {LayerConfig} conf Configuration with which the user config will be merged\n     * @param {LayerConfig} userConf Configuration given by the user\n     *\n     * @return {LayerConfig} Merged layer configuration\n     */\n    static defaultPolicy (conf, userConf) {\n        return mergeRecursive(conf, userConf);\n    }\n\n    /**\n     * Determines a name for a layer. This name of the layer is used in the input data to refer to this layer.\n     * ```\n     *  .layers([\n     *      mark: 'bar',\n     *      encoding: { ... }\n     *  ])\n     * ```\n     *\n     * @static\n     * @public\n     *\n     * @return {string} name of layer\n     */\n    static formalName () {\n        return 'base';\n    }\n\n    encodingFieldsInf (...fieldsInf) {\n        if (fieldsInf.length) {\n            this._encodingFieldsInf = fieldsInf[0];\n            return this;\n        }\n        return this._encodingFieldsInf;\n    }\n\n    encodingTransform (...encodingTransform) {\n        if (encodingTransform.length) {\n            this._encodingTransform = encodingTransform[0];\n            return this;\n        }\n        return this._encodingTransform;\n    }\n\n    /**\n     * Provides a alias for a layer. Like it's possible to have same layer (like bar) multiple times, but among multiple\n     * layers of same type if one layer has to be referred, alias is used. If no alias is given then `formalName` is set\n     * as the alias name.\n     *\n     *\n     * If used as setter\n     * @param  {string} alias Name of the alias\n     * @return {BaseLayer} Instance of current base layer\n     *\n     * If used as getter\n     * @return {string} Alias of the current layer\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            this._alias = params[0];\n            return this;\n        }\n        return this._alias || this.constructor.formalName();\n    }\n\n    dependencies (...params) {\n        if (params.length) {\n            this._dependencies = params[0];\n            return this;\n        }\n        return this._dependencies;\n    }\n\n    enableCaching () {\n        this._cacheEnabled = true;\n        return this;\n    }\n\n    clearCaching () {\n        this._cacheEnabled = false;\n        return this.data(this._cachedData[0]);\n    }\n\n    /**\n     * Serialize the schema. Merge config is used for serialization.\n     *\n     * @public\n     *\n     * @return {LayerConfig} Serialized schema\n     */\n    serialize () {\n        return this.config();\n    }\n\n    /**\n     * Returns the unique identifier of this layer. Id is auto generated during the creation proceess of a schema.\n     *\n     * @public\n     *\n     * @return {string} id of the layer\n     */\n    id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the transformed data based on given transform type.\n     * It first gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of DataModel\n     * @param {Object} config Configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     */\n    getTransformedData (dataModel, config, transformType, encodingFieldsInf) {\n        return transformData(dataModel, config, transformType, encodingFieldsInf);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a categorical field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @param {Object} fieldsConfig Configuration of fields\n     * @return {Array} Domain values array.\n     */\n    calculateDomainFromData (data) {\n        let domains = {};\n        const isEmpty = this.data().isEmpty();\n\n        if (!isEmpty) {\n            domains = calculateDomainFromData(data, this.encodingFieldsInf(), this.transformType());\n        }\n        return domains;\n    }\n\n    static shouldDrawAnchors () {\n        return false;\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getDataDomain (encodingType) {\n        const domains = this.store()\n            .get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`);\n        return encodingType !== undefined ? domains[encodingType] || [] : domains;\n    }\n\n    /**\n     * Normalizes the transformed data and returns it.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getNormalizedData (transformedData, fieldsConfig) {\n        return getNormalizedData(transformedData, fieldsConfig, this.encodingFieldsInf(), this.transformType());\n    }\n\n    /**\n     * Gets the nearest point closest to the given x and y coordinate. If no nearest point is found, then it returns\n     * null.\n     *\n     * @public\n     *\n     * @param {number} x X Coordinate.\n     * @param {number} y Y Coordinate.\n     *\n     * @return {Object} Information of the nearest point.\n     * ```\n     *      {\n     *          // id property contains the field names and their corresponding values in a 2d array. This is the data\n     *          // associated with the nearest point.\n     *          id: // Example data: [['Origin'], ['USA']],\n     *          dimensions: // Physical dimensions of the point.\n     *          layerId: // Id of the layer instance.\n     *      }\n     * ```\n     */\n    getNearestPoint () {\n        return null;\n    }\n\n    applyInteractionStyle (interactionType, selectionSet, apply, styles) {\n        const interactionConfig = this.config().interaction || {};\n\n        let interactionStyles = interactionConfig[interactionType];\n        interactionStyles = styles || interactionStyles;\n        if (interactionStyles) {\n            applyInteractionStyle(this, selectionSet, interactionStyles, {\n                apply,\n                interactionType\n            });\n        }\n    }\n\n    disableUpdate () {\n        this._updateLock = true;\n        return this;\n    }\n\n    enableUpdate () {\n        this._updateLock = false;\n        return this;\n    }\n    /**\n     *\n     *\n     *\n     * @memberof BaseLayer\n     */\n    transformType (...transformType) {\n        if (transformType.length) {\n            this._transformType = transformType[0];\n            return this;\n        }\n        return this._transformType;\n    }\n\n    /**\n     * Renders the layer\n     * @return {BaseLayer} Instance of the layer.\n     */\n    render () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BaseLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Disposes the entire layer.\n     *\n     * @return {BaseLayer} Instance of layer.\n     */\n    remove () {\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     * Stores point in an object with key as the categorical value or temporal value\n     *\n     * @param {string} key categorical value or temporal value\n     * @param {Object} data Information of the data point\n     * @return {BarLayer} Instance of bar layer\n     */\n    cachePoint (key, data) {\n        if (key === null) {\n            return this;\n        }\n        const pointMap = this._pointMap;\n        !pointMap[key] && (pointMap[key] = []);\n        pointMap[key].push(data);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} dataProps\n     *\n     * @memberof BaseLayer\n     */\n    dataProps (...dataProps) {\n        if (dataProps.length) {\n            this._dataProps = dataProps[0];\n            return this;\n        }\n        return this._dataProps;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} id\n     *\n     * @memberof BaseLayer\n     */\n    getIdentifiersFromData (data) {\n        const schema = this.data().getData().schema;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const identifiers = [[], []];\n        const {\n                xFieldType,\n                yFieldType,\n                xField,\n                yField\n            } = this.encodingFieldsInf();\n\n        const [xMeasure, yMeasure] = [xFieldType, yFieldType].map(type => type === FieldType.MEASURE);\n        schema.forEach((d, i) => {\n            const name = d.name;\n            if (fieldsConfig[name].def.type === FieldType.DIMENSION) {\n                identifiers[0].push(name);\n                identifiers[1].push(data[i]);\n            }\n        });\n\n        if (xMeasure && yMeasure) {\n            const xMeasureIndex = fieldsConfig[xField].index;\n            const yMeasureIndex = fieldsConfig[yField].index;\n            identifiers[0].push(...[xField, yField]);\n            identifiers[1].push(...[data[xMeasureIndex], data[yMeasureIndex]]);\n        }\n        return identifiers;\n    }\n\n    getPlotSpan () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    getPlotPadding () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    /**\n     * Returns the information of the marks corresponding to the supplied identifiers. Identifiers are a set of field\n     * names and their corresponding values in an array. It can also be an instance of datamodel.\n     *\n     * For example,\n     * ```\n     *  const identifiers = [\n     *      ['Origin', 'Cylinders'],\n     *      ['USA', '8']\n     *  ];\n     *  const points = barLayer.getPointsFromIdentifiers(identifiers);\n     * ```\n     * @public\n     * @param {Array|DataModel} identifiers Identifiers of the marks.\n     * @param {Object} config Optional configuration which describes how to get the information.\n     * @param {boolean} config.getAllAttrs If true, then returns all the information of the points, else returns only\n     * the positions of the points.\n     * @param {boolean} config.getBBox If true, then returns the bounding box of all the marks.\n     *\n     * @return {Array} Array of points contains\n     */\n    getPointsFromIdentifiers (identifiers, config = {}) {\n        const getAllAttrs = config.getAllAttrs;\n        const getBBox = config.getBBox;\n        if (!this.data()) {\n            return [];\n        }\n        let fieldNames;\n        let values;\n        if (identifiers instanceof DataModel) {\n            const dataObj = identifiers.getData();\n            fieldNames = dataObj.schema.map(d => d.name);\n            values = dataObj.data;\n        } else {\n            fieldNames = identifiers[0];\n            values = identifiers.slice(1, identifiers.length);\n        }\n\n        const points = this._points;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPoints = [].concat(...points).filter((point) => {\n            const { _data, _id } = point;\n\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === _data[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === _id) !== -1;\n                } return true;\n            });\n        });\n        return getAllAttrs ? filteredPoints : filteredPoints.map((d) => {\n            const obj = clone(d);\n            if (getBBox) {\n                const update = obj.update || obj;\n                if (obj.size !== undefined) {\n                    const sizeVal = Math.sqrt(obj.size / Math.PI) * 2;\n                    update.width = sizeVal;\n                    update.height = sizeVal;\n                    update.x -= sizeVal / 2;\n                    update.y -= sizeVal / 2;\n                } else {\n                    if (update.width === undefined) {\n                        update.width = 2;\n                    }\n                    if (update.height === undefined) {\n                        update.height = 2;\n                    }\n                }\n            }\n\n            return obj.update || obj;\n        }).sort((a, b) => a.y - b.y);\n    }\n\n    getTransformedDataFromIdentifiers (identifiers) {\n        const { data: identifierData, schema: identifierSchema } = identifiers.getData();\n        const normalizedData = this._normalizedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            yField,\n            xField,\n            yFieldType,\n            xFieldType\n        } = this.encodingFieldsInf();\n        let measureIndex;\n        let enc;\n        if (xFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[xField].index;\n            enc = 'x';\n        } else if (yFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[yField].index;\n            enc = 'y';\n        }\n\n        const transformedData = [];\n        normalizedData.forEach((dataArr) => {\n            dataArr.forEach((dataObj) => {\n                const tupleArr = dataObj._data;\n                const exist = identifierSchema.every((obj, i) =>\n                    identifierData.findIndex(d => tupleArr[fieldsConfig[obj.name].index] === d[i]) !== -1);\n                if (exist) {\n                    const transformedVal = dataObj[enc];\n                    const row = dataObj._data;\n                    const tuple = {};\n                    for (const key in fieldsConfig) {\n                        const index = fieldsConfig[key].index;\n                        tuple[key] = row[index];\n                        if (index === measureIndex) {\n                            tuple[key] = transformedVal;\n                        }\n                    }\n                    transformedData.push(tuple);\n                }\n            });\n        });\n\n        return [transformedData, this.data().getData().schema];\n    }\n\n    /**\n     * Returns the dom elements associated with the supplied set of row ids.\n     * Each element in the layer is mapped with a row of the datamodel. When given an array of row ids, it returns all\n     * the elements which is mapped with those row ids.\n     *\n     * @public\n     * @param {Array} set Array of row ids\n     *\n     * @return {Selection} D3 Selection of dom elements.\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(data =>\n            (data ? set.indexOf(data._id) !== -1 : false));\n    }\n\n    /**\n     * Notifies when all animations/transitions of the layer are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n\n    getRenderProps () {\n        const metaInf = this.metaInf();\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.unitRowIndex}0`,\n            `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.unitColIndex}0`];\n    }\n}\n","import {\n    selectElement,\n    makeElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\nimport { updateStyle } from '../../helpers';\n\nconst line = Symbols.line;\n\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nexport const drawLine = (context) => {\n    let filteredPoints;\n    const { layer, container, points, interpolate, connectNullData, className, style, transition } = context;\n    const mount = selectElement(container).attr('class', className);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const linepath = line()\n                .curve(curveInterpolatorFn)\n                .x(d => d.update.x)\n                .y(d => d.update.y)\n                .defined(d => d.update.y !== null);\n\n    filteredPoints = points;\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n\n    updateStyle(mount, style);\n    let element = makeElement(mount, 'path', [1]);\n    element.classed(points[0].className, true);\n    if (!transition.disabled) {\n        element = element.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    }\n    element.attr('d', linepath(filteredPoints))\n                    .style('fill-opacity', 0);\n    return element;\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-line',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: 'group'\n    },\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    nearestPointThreshold: 20,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n\n","import {\n    Voronoi,\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    FieldType,\n    getObjProp\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawLine } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    animateGroup,\n    getLayerColor,\n    positionPoints,\n    getIndividualClassName\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to render straight or smoothed line paths. The mark type of this layer is ```line```.\n *\n * @public\n *\n * @class\n * @module LineLayer\n * @extends BaseLayer\n */\nexport default class LineLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of LineLayer.\n     * @param {*} args\n     * @memberof LineLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof LineLayer\n     */\n    static formalName () {\n        return 'line';\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof LineLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Default configuration of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof LineLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField && !transform.groupBy) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     * Returns the draw method for line\n     * @return {Function} Draw method of line layer\n     */\n    getDrawFn () {\n        return drawLine;\n    }\n\n    static shouldDrawAnchors () {\n        return true;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @param {number} seriesIndex index of series\n     * @return {Array} Array of points\n     */\n    translatePoints (data, encodingFieldsInf, axes) {\n        let points = [];\n        const xAxis = axes.x;\n        const yAxis = axes.y;\n        const colorAxis = axes.color;\n        const encoding = this.config().encoding;\n        const { xFieldType, yFieldType } = encodingFieldsInf;\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const colorFieldIndex = colorField && fieldsConfig[colorField].index;\n        const style = {};\n        const meta = {};\n\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const { color, rawColor } = getLayerColor({ datum: d, index: i }, {\n                colorEncoding, colorAxis, colorFieldIndex });\n\n            style.stroke = color;\n            style['fill-opacity'] = 0;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n\n            const point = {\n                enter: {},\n                update: {\n                    x: xPx,\n                    y: d.y === null ? null : yPx\n                },\n                style,\n                _data: d._data,\n                _id: d._id,\n                rowId: d._id,\n                source: d._data,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the line plot\n     * @param {SVGElement} container svg element\n     * @return {LineLayer} instance of line layer\n     */\n    render (container) {\n        let points;\n        let seriesClassName;\n        let style;\n\n        const config = this.config();\n        const {\n            encoding,\n            interpolate,\n            className,\n            defClassName,\n            transition\n        } = config;\n        const normalizedData = this._normalizedData;\n        const transformedData = this._transformedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const keys = transformedData.map(d => d.key);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n        const colorField = encoding.color.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n        this._points = [];\n        this._pointMap = {};\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        makeElement(container, 'g', normalizedData, null, {\n            enter: (group) => {\n                animateGroup(group, {\n                    transition,\n                    groupAnimateStyle: {\n                        enter: {\n                            'stroke-opacity': 0,\n                            'fill-opacity': this.getPathStyle()['fill-opacity']\n                        },\n                        update: {\n                            'stroke-opacity': encoding.strokeOpacity.value\n                        }\n                    }\n                });\n            },\n            update: (group, dataArr, i) => {\n                points = this.translatePoints(dataArr, this.encodingFieldsInf(), axes, i);\n                this._points.push(points);\n                seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n\n                let color;\n                const colorValFn = encoding.color.value;\n                const colorVal = points.find(d => d._data[colorFieldIndex] !== null &&\n                        d._data[colorFieldIndex] !== undefined);\n\n                if (colorValFn) {\n                    color = colorValFn(dataArr, i, normalizedData);\n                } else {\n                    color = axes.color.getColor(colorVal && colorVal._data[colorFieldIndex]);\n                }\n\n                style = this.getPathStyle(color);\n                this.getDrawFn()({\n                    layer: this,\n                    container: group.node(),\n                    interpolate,\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: style || {},\n                    connectNullData: config.connectNullData\n                });\n            }\n        }, d => d[0]._data[colorFieldIndex] || d[0]._id);\n\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            stroke: color,\n            'fill-opacity': '0'\n        };\n    }\n\n    /**\n     * Gets the nearest point closest to the given position\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point information\n     */\n    getNearestPoint (x, y, config) {\n        let searchRadius = config.searchRadius;\n        const data = this.data();\n\n        if (!data || (data && data.isEmpty())) {\n            return null;\n        }\n\n        searchRadius = searchRadius !== undefined ? searchRadius : this.config().nearestPointThreshold;\n        const point = this._voronoi.find(x, y, searchRadius);\n        const dimensions = getObjProp(point, 'data', 'data', 'update');\n\n        if (point) {\n            const { _data, _id } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(_data, _id);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: 2,\n                    height: 2\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import {\n    easeFns,\n    selectElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\n\nconst area = Symbols.area;\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nconst /* istanbul ignore next */ drawArea = (params) => {\n    let filteredPoints;\n    const { layer, container, points, style, transition, className, connectNullData, interpolate } = params;\n\n    const { effect: easeEffect, duration } = transition;\n    const mount = selectElement(container);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const selection = mount.selectAll('path').data([params.points]);\n    const [enterAreaPath, updateAreaPath] = ['enter', 'update'].map(e => area().curve(curveInterpolatorFn)\n                    .x(d => d[e].x)\n                    .y1(d => d[e].y)\n                    .y0(d => d[e].y0)\n                    .defined(d => d[e].y !== null\n            ));\n\n    filteredPoints = points;\n    mount.attr('class', className);\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n    const selectionEnter = selection.enter().append('path').attr('d', enterAreaPath(filteredPoints));\n    selection.merge(selectionEnter).transition().ease(easeFns[easeEffect])\n                    .duration(duration)\n                    .on('end', layer.registerAnimationDoneHook())\n                    .attr('d', updateAreaPath(filteredPoints))\n                    .each(function (d) {\n                        const element = selectElement(this);\n\n                        element.classed(d[0].className, true);\n                        Object.keys(style).forEach(key => element.style(key, style[key]));\n                    });\n};\n\nexport default drawArea;\n","import { FieldType } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { LineLayer } from '../line';\nimport drawArea from './renderer';\nimport './styles.scss';\nimport { STACK, ENCODING } from '../../enums/constants';\nimport { getAxesScales, positionPoints, getLayerColor, getIndividualClassName } from '../../helpers';\n\n/**\n * Area layer renders a closed path. The mark type of this layer is ```area```. This layer can be used\n * to create stacked or multi-series areas and vertical range area plots by using the encoding properties.\n *\n * To create this layer using layer configuration from canvas,\n * ```\n *      canvas.layers([{\n *          mark: 'area',\n *          transform: {\n *              type: 'stack' // Produces a stacked area.\n *          }\n *      }]);\n * ```\n *\n * @public\n *\n * @class\n * @module AreaLayer\n * @extends LineLayer\n */\nexport default class AreaLayer extends LineLayer {\n    /** oation of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof AreaLayer\n     */\n    static formalName () {\n        return 'area';\n    }\n\n    /**\n     * Calculates the domain from data. It calls its parent class's method which is line layer\n     * to get the domain and overwrites the domain according to its need.\n     * @return {Array} Domain values\n     */\n    calculateDomainFromData (data, encodingFieldsInf, fieldsConfig) {\n        const domains = super.calculateDomainFromData(data, fieldsConfig);\n        [ENCODING.X, ENCODING.Y].forEach((type) => {\n            const { [`${type}FieldType`]: fieldType } = encodingFieldsInf;\n            if (fieldType === FieldType.MEASURE && domains[type] !== undefined) {\n                domains[type][0] = Math.min(domains[type][0], 0);\n            }\n        });\n        return domains;\n    }\n\n    /**\n     * Returns the drawing method of this layer\n     * @return {Function} Draw method\n     */\n    getDrawFn () {\n        return drawArea;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @return {Array} Array of points\n     */\n    translatePoints (data, encodingFieldsInf, axes) {\n        let points = [];\n        const transformType = this.transformType();\n        const colorAxis = axes.color;\n        const config = this.config();\n        const encoding = config.encoding;\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const colorFieldIndex = colorField && fieldsConfig[colorField].index;\n        const { xField, yField, y0Field } = encodingFieldsInf;\n        const {\n            xAxis,\n            yAxis\n       } = getAxesScales(axes);\n        const classNameFn = config.individualClassName;\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const y0Px = (y0Field || transformType === STACK) ? yAxis.getScaleValue(d.y0) : yAxis.getScaleValue(0);\n            const { color, rawColor } = getLayerColor({ datum: d, index: i }, {\n                colorEncoding, colorAxis, colorFieldIndex });\n            const style = {};\n            const meta = {};\n            style.fill = color;\n            // style['fill-opacity'] = 0;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n            const point = {\n                enter: {\n                    x: xPx,\n                    y: d.y === null ? d.y : yAxis.getScaleValue(0),\n                    y0: d.y0 === null ? d.y0 : yAxis.getScaleValue(0)\n                },\n                update: {\n                    x: xPx,\n                    y: d.y === null ? d.y : yPx,\n                    y0: d.y0 === null ? d.y0 : y0Px\n                },\n                _id: d._id,\n                _data: d._data,\n                source: d._data,\n                rowId: d._id,\n                className: classNameFn ? classNameFn(d, i, data, this) : '',\n                style,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            fill: color\n        };\n    }\n}\n\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-arc',\n    padding: { top: 1, bottom: 1, left: 1, right: 1 },\n    className: '',\n    minOuterRadius: 10,\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    height: 100,\n    width: 100,\n    sort: '',\n    cornerRadius: 0,\n    padAngle: 0,\n    padRadius: 0,\n    startAngle: 0,\n    endAngle: 360,\n    colors: ['#F44336', 'blue', 'green', 'yellow', 'orange', 'purple'],\n    transform: {\n        type: 'identity'\n    },\n    encoding: {\n        'stroke-width': {\n            value: '2px'\n        },\n        'stroke-linejoin': {\n            value: 'round'\n        },\n        angle: {\n            value: '1'\n        },\n        radius: {\n            value: '1'\n        },\n        opacity: {\n            value: '1'\n        },\n        color: {\n            value: '1'\n        },\n        shape: {\n            value: '1'\n        },\n        size: {\n            value: '1'\n        }\n    },\n    innerRadiusFixer: 10,\n    transition: {\n        effect: 'cubic',\n        duration: 500\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-arc-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-arc-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-arc-selected`\n        }\n    }\n};\n\n","import {\n    makeElement,\n    selectElement,\n    getQualifiedClassName,\n    isSimpleObject,\n    getDomainFromData,\n    Symbols,\n    FieldType,\n    ReservedFields,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { BaseLayer } from '../../base-layer';\nimport { ASCENDING, OUTER_RADIUS_VALUE } from '../../enums/constants';\nimport { getIndividualClassName } from '../../helpers';\nimport { getRangeValue, getRadiusRange, tweenPie, tweenExitPie, getFieldIndices, getPreviousPoint } from './arc-helper';\nimport './styles.scss';\n\nconst pie = Symbols.pie;\nconst arc = Symbols.arc;\n\n/**\n * Arc Layer creates a plot with polar coordinates.\n *\n * @public\n *\n * @class\n * @module ArcLayer\n * @extends BaseLayer\n */\nexport default class ArcLayer extends BaseLayer {\n\n    constructor (data, axes, config, dependencies) {\n        super(data, axes, config, dependencies);\n        this._prevPieData = {};\n    }\n\n    /**\n     * returns the default configuration of the layer\n     *\n     * @static\n     * @return {Object} Default configuration for arc layer\n     * @memberof ArcLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ArcLayer\n     */\n    static formalName () {\n        return 'arc';\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof ArcLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Transforms data in the appropriate data structure to be consumed by the layer for rendering\n     *\n     * @param {Object} data data model associated with the layer\n     * @param {Object} config configuration of the layer that contains encoding and other parameters\n     * @return {Object} Transformed pie data\n     * @memberof ArcLayer\n     */\n    getTransformedData (dataModel, config) {\n        let pieData = [];\n        const pieIndex = {};\n        const {\n            startAngle,\n            endAngle,\n            encoding,\n            sort,\n            minOuterRadius\n        } = config;\n        const prevData = this._transformedData || [];\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            angleIndex,\n            sizeIndex,\n            radiusIndex,\n            colorIndex\n        } = getFieldIndices(encoding, fieldsConfig);\n        const dataVal = dataModel.getData();\n        const data = dataVal.data;\n        const uids = dataVal.uids;\n\n        this._prevPieData = {};\n\n        prevData.forEach((e, index) => {\n            this._prevPieData[e.uid] = [e, index];\n            pieIndex[e.index] = e;\n        });\n        // Creating pie data using angle field provided. If the angle field is a dimension,\n        // all the angles will be equal(360/number of dimensions)\n\n        pieData = pie()\n            .startAngle((startAngle / 180) * Math.PI)\n            .endAngle(Math.PI * endAngle / 180)\n            .value(d => d[angleIndex] || 1)\n            .sortValues(null);\n\n        sort.length && radiusIndex && pieData.sort((a, b) => {\n            if (sort === ASCENDING) {\n                return a[radiusIndex] - b[radiusIndex];\n            } return b[radiusIndex] - a[radiusIndex];\n        });\n        const sizeVal = data.reduce((acc, d) => acc + (d[sizeIndex] || 0), 1);\n\n        // Adding the radius field values to each data point in pie data\n        pieData = pieData(data).map((d, i) => {\n            d.outerRadiusValue = data[i][radiusIndex] || minOuterRadius;\n            d.innerRadius = config.innerRadius;\n            d.colorVal = data[i][colorIndex];\n            d.angleVal = data[i][angleIndex];\n            d.sizeVal = sizeVal;\n            d.uid = uids[i];\n            d.rowId = d.uid;\n            d.source = data[i];\n            d._previousInfo = this._prevPieData[d.uid] ? this._prevPieData[d.uid][0] :\n                getPreviousPoint(pieIndex, d.index, config);\n            return d;\n        });\n        return pieData;\n    }\n\n    /**\n     * Returns normalized data after transformation (it is the same in the case of pie layer)\n     *\n     * @param {Object} data transformed data\n     * @return {Object} normalized data\n     * @memberof ArcLayer\n     */\n    getNormalizedData (data) {\n        return data;\n    }\n\n    /**\n     *\n     *\n     * @param {Object} data\n     * @return {}\n     * @memberof ArcLayer\n     */\n    calculateDomainFromData (data) {\n        const domainKey = OUTER_RADIUS_VALUE;\n        return {\n            radius: getDomainFromData([data], [domainKey, domainKey])\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {Object} x\n     * @param {Object} y\n     * @return {}\n     * @memberof ArcLayer\n     */\n    getNearestPoint (x, y, config = {}) {\n        const dataPoint = selectElement(config.event.target).data()[0];\n        if (isSimpleObject(dataPoint)) {\n            const { data, uid } = dataPoint.datum;\n            return {\n                id: this.getIdentifiersFromData(data, uid),\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    /**\n     *\n     *\n     * @param {*} set\n     *\n     * @memberof ArcLayer\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(d => set.indexOf(d.datum.uid) !== -1);\n    }\n\n    /**\n     *\n     *\n     * @param {Object} container\n     * @return {}\n     * @memberof ArcLayer\n     */\n    render (container) {\n        const {\n            height,\n            width\n        } = this.measurement();\n        const {\n            classPrefix,\n            defClassName,\n            minOuterRadius,\n            innerRadius,\n            outerRadius,\n            cornerRadius,\n            padAngle,\n            padRadius,\n            padding,\n            transition,\n            innerRadiusFixer\n       } = this.config();\n        const sizeAxis = this.axes().size;\n        const transformedData = this._transformedData;\n        const chartHeight = height - padding.top - padding.bottom;\n        const chartWidth = width - padding.left - padding.right;\n        const qualClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        // Sets range for radius\n        const range = getRadiusRange(chartWidth, chartHeight, {\n            minOuterRadius,\n            innerRadius,\n            outerRadius,\n            innerRadiusFixer\n        });\n        const colorAxis = this.axes().color;\n        const defaultRadius = outerRadius || Math.min(chartHeight, chartWidth) / 2;\n        const radiusDomain = this.domain().radius;\n        const rangeValueGetter = d => getRangeValue(d, range, radiusDomain, defaultRadius, sizeAxis);\n        // This returns a function that generates the arc path based on the datum provided\n        const path = arc()\n                // .outerRadius(d => rangeValueGetter(d))\n                .innerRadius(innerRadius ? Math.min(chartHeight / 2, chartWidth / 2, innerRadius) : 0)\n                .cornerRadius(cornerRadius)\n                .padAngle(padAngle)\n                .padRadius(padRadius);\n        this._chartWidth = chartWidth;\n        this._chartHeight = chartHeight;\n        // Creating the group that holds all the arcs\n        const g = makeElement(selectElement(container), 'g', [1], `${qualClassName[0]}-group`)\n                .classed(`${qualClassName[1]}-group`, true)\n                .attr('transform', `translate(${chartWidth / 2},${chartHeight / 2})`);\n        const tween = (elem) => {\n            makeElement(elem, 'path', (d, i) => [{\n                datum: d,\n                index: i,\n                arcFn: path,\n                meta: {\n                    originalColor: colorAxis.getRawColor(d.colorVal),\n                    stateColor: {},\n                    colorTransform: {}\n                }\n            }], `${qualClassName[0]}-path`)\n                            .style('fill', d => colorAxis.getColor(d.datum.colorVal))\n                            .transition()\n                            .duration(transition.duration)\n                            .on('end', this.registerAnimationDoneHook())\n                            .attrTween('d', (...params) => tweenPie(path, rangeValueGetter, params))\n                            .attr('class', (d, i) => {\n                                const individualClass = getIndividualClassName(d, i, transformedData, this);\n                                return `${qualClassName[0]}-path ${qualClassName[1]}-path-${d.index}\n                                    ${individualClass}`;\n                            });\n        };\n        const consecutiveExits = [];\n        let exitCounter = 0;\n        const tweenExit = (elem, d) => {\n            let exitArr = consecutiveExits[exitCounter];\n            const oldExitCounter = exitCounter;\n            if (!exitArr) {\n                exitArr = [{ elem, datum: d }];\n            } else if (exitArr[exitArr.length - 1].datum.index === d.index - 1) {\n                exitArr.push({ elem, datum: d });\n            } else {\n                exitCounter++;\n            }\n            consecutiveExits[oldExitCounter] = exitArr;\n        };\n        // Creating groups for all the arcs present individually\n        makeElement(g, 'g', transformedData, `${qualClassName[0]}`,\n            {\n                update: tween,\n                exit: tweenExit\n            })\n                        .attr('class', (d, i) => `${qualClassName[0]} ${qualClassName[1]}-${i}`);\n        tweenExitPie(consecutiveExits, transition, rangeValueGetter, path);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof BaseLayer\n     */\n    getPointsFromIdentifiers (identifiers) {\n        if (!this.data()) {\n            return [];\n        }\n        const fieldNames = identifiers[0];\n        const values = identifiers.slice(1, identifiers.length);\n        const pieSlices = selectElement(this.mount()).selectAll('path').data();\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPies = pieSlices.filter((tData) => {\n            const data = tData.datum.data;\n            const uid = tData.datum.uid;\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === data[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === uid) !== -1;\n                } return true;\n            });\n        });\n\n        const pieSliceInf = filteredPies[0];\n        if (pieSliceInf) {\n            const centroid = pieSliceInf.arcFn.centroid(pieSliceInf.datum);\n            return [{\n                x: centroid[0] + this._chartWidth / 2,\n                y: centroid[1] + this._chartHeight / 2,\n                width: 2,\n                height: 2\n            }];\n        }\n        return [];\n    }\n\n    getRenderProps () {\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`];\n    }\n}\n","import { getObjProp, interpolator, FieldType, selectElement } from 'muze-utils';\nimport { ANGLE, RADIUS, SIZE, COLOR } from '../../enums/constants';\n\n/**\n * Returns the range value from a value inside the domain\n *\n * @param {Object} domainValue Value whose range has to be returned\n * @return {number} range value\n * @memberof ArcLayer\n */\nexport const getRangeValue = (datum, range, domain, defaultRadius, sizeAxis) => {\n    let domainMultiplier = 1;\n    const {\n        outerRadiusValue,\n        sizeVal\n    } = datum;\n    const sizeAxisDomain = sizeAxis.domain();\n    const sizeMultiplier = sizeAxis.getSize(sizeVal) / (sizeAxisDomain ? sizeAxis.range()[1] : sizeAxis.config().value);\n\n    domainMultiplier *= (range[1] - range[0]) / (domain[1] - domain[0]);\n    const rangeVal = (range[0] + (outerRadiusValue - domain[0]) * domainMultiplier);\n    return (rangeVal || defaultRadius) * sizeMultiplier;\n};\n\n/**\n *\n *\n * @memberof ArcLayer\n */\nexport const getRadiusRange = (width, height, config) => {\n    const {\n        minOuterRadius,\n        innerRadius,\n        outerRadius,\n        innerRadiusFixer\n    } = config;\n\n    return [Math.max((innerRadius + innerRadiusFixer || 0), minOuterRadius), outerRadius || Math.min(height,\n        width) / 2];\n};\nexport const getPreviousPoint = (prevData, currIndex, config) => {\n    const prevArc = prevData[currIndex - 1];\n    const nextArc = prevData[currIndex];\n\n    if (prevArc && nextArc) {\n        return {\n            startAngle: prevArc.endAngle,\n            endAngle: nextArc.startAngle\n        };\n    } else if (!nextArc) {\n        return {\n            startAngle: config.endAngle * Math.PI * 2 / 360,\n            endAngle: config.endAngle * Math.PI * 2 / 360\n        };\n    }\n    return {\n        startAngle: config.startAngle * Math.PI * 2 / 360,\n        endAngle: config.startAngle * Math.PI * 2 / 360\n    };\n};\n\n/**\n *\n *\n * @param {*} path\n * @param {*} b\n *\n * @memberof ArcLayer\n */\nexport const tweenPie = (path, rangeValueGetter, b) => {\n    const { datum } = b[0];\n    const outerRadius = rangeValueGetter(datum);\n    datum.outerRadius = outerRadius;\n    datum._previousInfo.outerRadius = datum._previousInfo.outerRadius || outerRadius;\n    return function (t) {\n        return path(interpolator()(datum._previousInfo, datum)(t));\n    };\n};\n\n/**\n *\n *\n * @param {*} path\n * @param {*} b\n *\n * @memberof ArcLayer\n */\nexport const tweenExitPie = (consecutiveExits, transition, rangeValueGetter, path) => {\n    if (consecutiveExits.length > 0) {\n        consecutiveExits.forEach((consecutiveExitArr) => {\n            const startAngle = consecutiveExitArr[0].datum.startAngle;\n            const endAngle = consecutiveExitArr[consecutiveExitArr.length - 1].datum.endAngle;\n            const mid = (Math.PI * 2 * startAngle) / ((Math.PI * 2) + startAngle - endAngle);\n\n            consecutiveExitArr.forEach((e) => {\n                const { elem, datum } = e;\n\n                elem.each(function () {\n                    const gElem = selectElement(this);\n                    gElem.selectAll('path')\n                                    .transition()\n                                    .duration(transition.duration)\n                                    .attrTween('d', () => function (t) {\n                                        const outerRadius = rangeValueGetter(datum);\n                                        datum.outerRadius = outerRadius;\n                                        return path(interpolator()(datum, {\n                                            startAngle: mid,\n                                            endAngle: mid,\n                                            outerRadius\n                                        })(t));\n                                    })\n                                    .remove();\n                    gElem.remove();\n                });\n            });\n        });\n    }\n};\n\nexport const getFieldIndices = (encoding, fieldsConfig) => {\n    const [angleField, radiusField, colorField, sizeField] = [ANGLE, RADIUS, COLOR, SIZE]\n            .map(e => encoding[e].field);\n    const [angleIndex, sizeIndex, radiusIndex] = [angleField, sizeField, radiusField]\n        .map((e) => {\n            const conf = fieldsConfig[e];\n            if (conf && conf.def.type === FieldType.MEASURE) {\n                return conf.index;\n            }\n            return null;\n        });\n    const colorIndex = getObjProp(fieldsConfig, colorField, 'index');\n    return {\n        angleIndex,\n        sizeIndex,\n        radiusIndex,\n        colorIndex\n    };\n};\n","import {\n    setAttrs,\n    setStyles,\n    selectElement,\n    makeElement,\n    getSmartComputedStyle\n} from 'muze-utils';\n\n/**\n * Draws svg text in the specified container.\n * @param {SVGElement} container Container where labels will be appended.\n * @param {Array.<Object>} data Data of the elements.\n * @return {Selection} d3 selection of the elements.\n */\nconst drawText = (container, data, config, smartLabel) => {\n    const selection = selectElement(container).selectAll('g').data(data);\n\n    const selectionMerge = selection.enter().append('g')\n        .each(function (dataObj) {\n            setAttrs(this, dataObj.enter);\n        })\n        .merge(selection);\n    const style = getSmartComputedStyle(selectElement(container), config.className);\n    const fontSize = parseInt(style.fontSize, 10);\n\n    smartLabel.setStyle(style);\n    selectionMerge.each(function (dataObj) {\n        const element = selectElement(this);\n        const { update, text, color, textanchor, style: textStyle } = dataObj;\n        const background = dataObj.background;\n        let backgroundVal;\n        if (backgroundVal = background.value) {\n            const backgroundPadding = background.padding;\n            let diff;\n            const { width, height } = smartLabel.getOriSize(dataObj.text);\n            const backgroundEl = makeElement(element, 'rect', [1]);\n\n            if (textanchor === 'end') {\n                diff = width;\n            } else if (textanchor === 'start') {\n                diff = 0;\n            } else {\n                diff = width / 2;\n            }\n\n            setAttrs(backgroundEl.node(), {\n                x: update.x - diff - backgroundPadding / 2,\n                y: update.y - fontSize - backgroundPadding / 2,\n                width: width + backgroundPadding,\n                height: height + backgroundPadding\n            });\n            background && setStyles(backgroundEl, {\n                background: backgroundVal\n            });\n        }\n        const textEl = makeElement(element, 'text', d => [d]).text(text);\n        const textNode = textEl.node();\n        textStyle && setStyles(textNode, textStyle);\n        color && setStyles(textNode, {\n            fill: color\n        });\n        dataObj.className && textEl.classed(dataObj.className, true);\n        setAttrs(textNode, update);\n        textEl.attr('text-anchor', textanchor);\n    });\n    selection.exit().remove();\n    return selection;\n};\n\nexport default drawText;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-text',\n    classPrefix: CLASSPREFIX,\n    className: '',\n    transform: {\n        type: 'identity'\n    },\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: {},\n        text: {\n            value: '',\n            background: {\n                padding: 10\n            }\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-text-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-text-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-text-selected`\n        }\n    }\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    setStyles,\n    createElements\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawText from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\nimport { TEXT_ANCHOR_MIDDLE, ENCODING } from '../../enums/constants';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create labels for each data point. It has an encoding property ```text```\n * which determines from which field's data the value of the label will be taken. The text encoding\n * property is necessary for the layer to render the text.The mark type of this layer is ```text```.\n *\n * @public\n *\n * @class\n * @module TextLayer\n * @extends BaseLayer\n */\nexport default class TextLayer extends BaseLayer {\n    /**\n     * Returns the default configuration of the text layer\n     * @return {Object} Default configuration of the text layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'text';\n    }\n\n    elemType () {\n        return 'text';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes) {\n        let points = [];\n        const colorAxis = axes.color;\n        const textEncoding = encoding.text;\n        const { field: textField, value, formatter: textFormatter } = textEncoding;\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding && colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const colorFieldIndex = fieldsConfig[colorField] ? fieldsConfig[colorField].index : -1;\n        const textFieldIndex = textField ? fieldsConfig[textField] && fieldsConfig[textField].index : -1;\n        const xEnc = ENCODING.X;\n        const yEnc = ENCODING.Y;\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d._data;\n            const textValue = textField ? row[textFieldIndex] : value;\n\n            const [xPx, yPx] = [xEnc, yEnc].map(type => (axes[type] ? axes[type].getScaleValue(d[type]) +\n                    axes[type].getUnitWidth() / 2 : 0));\n\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            const point = {\n                enter: {},\n                update: {\n                    x: xPx,\n                    y: yPx\n                },\n                text: textFormatter ? textFormatter(textValue) : textValue,\n                color,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, this) : null,\n                    padding: backgroundPadding\n                },\n                meta: {\n                    stateColor: {},\n                    originalColor: rawColor,\n                    colorTransform: {}\n                },\n                style: {},\n                _data: row,\n                _id: d._id,\n                source: d._data,\n                rowId: d._id\n            };\n\n            if (d.x !== null && d.y !== null) {\n                points.push(point);\n            }\n\n            point.className = getIndividualClassName(d, i, data, this);\n        }\n\n        points = positionPoints(this, points);\n\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {textLayer} Instance of text layer\n     */\n    render (container) {\n        let points;\n        const config = this.config();\n        const encoding = config.encoding;\n        const normalizedData = this._normalizedData;\n        const className = config.className;\n        const qualifiedClassName = getQualifiedClassName(config.defClassName, this.id(), config.classPrefix);\n        const axes = this.axes();\n        const containerSelection = selectElement(container);\n\n        containerSelection.classed(`${qualifiedClassName.join(' ')} ${className}`, true);\n        createElements({\n            data: normalizedData,\n            append: 'g',\n            selector: 'g',\n            container,\n            each: (dataArr, group, i) => {\n                const node = group.node();\n                points = this.translatePoints(dataArr, encoding, axes, i);\n                setStyles(node, {\n                    'text-anchor': TEXT_ANCHOR_MIDDLE\n                });\n                drawText(node, points, {\n                    className: qualifiedClassName[0]\n                }, this._dependencies.smartLabel);\n            }\n        });\n        return this;\n    }\n}\n","/* global Element, document  */\nimport {\n    makeElement,\n    selectElement,\n    easeFns,\n    objectIterator,\n    getSymbol\n} from 'muze-utils';\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem) {\n    const groupElement = selectElement(elem);\n    const { shape, size, update } = d;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        if (newShape.nodeName === 'path' || newShape.nodeName === 'image') {\n            shapeElement.attr('transform', `scale(${size / 100})`);\n        } else {\n            shapeElement.attr('height', size);\n            shapeElement.attr('width', size);\n        }\n        shapeElement.attr('x', -size / 2);\n        shapeElement.attr('y', -size / 2);\n        selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = getSymbol(shape).size(size)(update);\n        }\n        makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    } else {\n        d.shape = 'circle';\n        createShape(d, elem);\n    }\n};\n\n/**\n * Draws symbols using d3 symbol api\n * @param {Object} params Contains the svg container, points and other symbol related attributes.\n */\n/* istanbul ignore next */ const drawSymbols = (params) => {\n    let mergedGroups;\n    const { layer, container, points, transition, className } = params;\n    const { duration, effect, disabled } = transition;\n    const mount = selectElement(container);\n\n    mount.attr('class', className);\n    const symbolGroups = mount.selectAll('g').data(points, params.keyFn);\n    const symbolEnter = symbolGroups.enter().append('g').attr('transform', d => `translate(${d.enter.x},${d.enter.y})`);\n    mergedGroups = symbolGroups.merge(symbolEnter)\n                    .each(function (d) {\n                        createShape(d, this);\n                    });\n    mergedGroups = disabled ? mergedGroups :\n        mergedGroups.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    mergedGroups.attr('transform', d => `translate(${d.update.x},${d.update.y})`)\n                    .each(function (d) {\n                        const style = d.style;\n                        const element = selectElement(this);\n                        objectIterator(style, key => element.style(key, style[key]));\n                        element.attr('class', `${className}`);\n                        element.classed(d.className, true);\n                    });\n\n    const exitGroups = symbolGroups.exit();\n    if (!disabled) {\n        exitGroups.transition().ease(easeFns[effect])\n                        .duration(duration)\n                        .on('end', function () {\n                            selectElement(this).remove();\n                        })\n                        .style('fill-opacity', 0)\n                        .style('stroke-opacity', 0);\n    } else {\n        exitGroups.remove();\n    }\n};\n\nexport default drawSymbols;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-point',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    defColorStyle: 'stroke',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -20, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }\n        ]\n    },\n    innerPadding: 0.1,\n    nearestPointThreshold: 10,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        size: {\n            value: 30\n        },\n        color: { },\n        shape: {\n            value: 'circle'\n        },\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    shapes: ['circle', 'cross', 'diamond', 'square', 'star', 'wye', 'triangle'],\n    sizes: [20, 30, 40, 50, 60, 70]\n};\n","import {\n    Voronoi,\n    selectElement,\n    getQualifiedClassName,\n    makeElement,\n    FieldType,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawSymbols from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    getLayerColor,\n    positionPoints,\n    getPlotMeasurement,\n    getIndividualClassName\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create various symbols for each data point. This is commonly used in\n * scatterplot visualizations. The mark type of this layer is ```point```.\n *\n * @public\n *\n * @class\n * @module PointLayer\n * @extends BaseLayer\n */\nexport default class PointLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of PointLayer.\n     * @param {*} args\n     * @memberof PointLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n        this._bandScale = Scales.band();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PointLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Returns the default configuration of the point layer\n     * @return {Object} Default configuration of the point layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof PointLayer\n     */\n    static formalName () {\n        return 'point';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof PointLayer\n     */\n    static drawFn () {\n        return drawSymbols;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes, config = {}) {\n        let points = [];\n        const {\n            size: sizeEncoding,\n            shape: shapeEncoding,\n            color: colorEncoding,\n            x,\n            y\n        } = encoding;\n        const sizeField = sizeEncoding.field;\n        const sizeValue = sizeEncoding.value;\n        const shapeField = shapeEncoding.field;\n        const xField = x.field;\n        const yField = y.field;\n        const { size: sizeAxis, shape: shapeAxis } = axes;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorField = colorEncoding && colorEncoding.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n        const measurement = this.measurement();\n        const shapeFieldIndex = fieldsConfig[shapeField] && fieldsConfig[shapeField].index;\n        const sizeFieldIndex = fieldsConfig[sizeField] && fieldsConfig[sizeField].index;\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d._data;\n            const size = sizeValue instanceof Function ? sizeValue(d, i) : sizeAxis.getSize(row[sizeFieldIndex]);\n            const shape = shapeAxis.getShape(row[shapeFieldIndex]);\n\n            let [xPx, yPx] = [ENCODING.X, ENCODING.Y].map((type) => {\n                const value = d[type] === null ? undefined : d[type];\n                const measure = type === ENCODING.X ? measurement.width : measurement.height;\n                return !encoding[type].field ? measure / 2 : axes[type].getScaleValue(value);\n            });\n\n            xPx += offsetX;\n            yPx += offsetY;\n\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            const style = {\n                fill: color,\n                stroke: color\n            };\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {\n                        x: xPx,\n                        y: yPx\n                    },\n                    update: {\n                        x: xPx,\n                        y: yPx\n                    },\n                    shape,\n                    size: Math.abs(size),\n                    meta: {\n                        stateColor: {},\n                        originalColor: rawColor,\n                        colorTransform: {}\n                    },\n                    style,\n                    _data: row,\n                    _id: d._id,\n                    source: d._data,\n                    rowId: d._id\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container.\n     *\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {BarLayer} Instance of bar layer\n     */\n    render (container) {\n        let maxSize = 0;\n        let seriesClassName;\n        const config = this.config();\n        const keys = this._transformedData.map(d => d.key);\n        const { transition, className, defClassName, classPrefix } = config;\n        const normalizedData = this._normalizedData;\n        const containerSelection = selectElement(container);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        this._points = [];\n        this._pointMap = {};\n\n        containerSelection.classed(qualifiedClassName.join(' '), true).classed(className, true);\n\n        this._points = this.generateDataPoints(normalizedData, keys);\n\n        makeElement(container, 'g', this._points, null, {\n            update: (group, points) => {\n                maxSize = Math.max(maxSize, ...points.map(d => d.size));\n                seriesClassName = `${qualifiedClassName[0]}`;\n                this.constructor.drawFn()({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    keyFn: d => d._id\n                });\n            }\n        }, data => data[0]._id);\n        this._maxSize = Math.sqrt(maxSize / Math.PI) * 2;\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    generateDataPoints (normalizedData, keys) {\n        const encoding = this.config().encoding;\n        const axes = this.axes();\n        const [widthMetrics, heightMetrics] = getPlotMeasurement(this, keys);\n        const offsetXValues = widthMetrics.offsetValues || [];\n        const offsetYValues = heightMetrics.offsetValues || [];\n        return normalizedData.map((dataArr, i) => {\n            const measurementConf = this.getMeasurementConfig(offsetXValues[i], offsetYValues[i], widthMetrics.span,\n                heightMetrics.span);\n            return this.translatePoints(dataArr, encoding, axes, measurementConf);\n        }).filter(d => d.length);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0) + widthSpan / 2,\n                y: (offsetY || 0) + heightSpan / 2\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n\n    /**\n     * Gets the nearest point from a position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Point details\n     */\n    getNearestPoint (x, y) {\n        const distanceLimit = Math.max(this._maxSize, this.config().nearestPointThreshold);\n\n        if (!this.data()) {\n            return null;\n        }\n\n        const point = this._voronoi.find(x, y, distanceLimit);\n        const dimensions = point && point.data.data.update;\n        const radius = point ? Math.sqrt(point.data.data.size / Math.PI) : 0;\n\n        if (point) {\n            const { _data, _id } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(_data, _id);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: radius,\n                    height: radius\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import { makeElement, easeFns } from 'muze-utils';\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} datum\n * @param {*} index\n * @param {*} context\n */\nconst transitionBars = (layer, elem, datum, index, context) => {\n    const { transition } = context;\n    const { duration, disabled, effect } = transition;\n    const selection = elem;\n\n    const selTransition = disabled ? selection :\n        selection.transition()\n        .duration(duration)\n        .ease(easeFns[effect])\n        .on('end', layer.registerAnimationDoneHook());\n    const update = datum.update || datum;\n    const updateStyle = datum.style || {};\n    datum.className && selection.classed(datum.className, true);\n    Object.entries(update).forEach(attr => (!isNaN(attr[1]) && selTransition.attr(attr[0], attr[1])));\n    Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n};\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} d\n */\nconst barEnterFn = (elem, d) => {\n    const selection = elem;\n    const enter = d.enter || {};\n    Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n};\n\n/**\n * Draws rectangles by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Bar Selection\n */\n/* istanbul ignore next */ export const drawRects = (params) => {\n    const { layer, points, container, keyFn } = params;\n    const updateFns = {\n        enter (elem, d) { barEnterFn(elem, d); },\n        update (elem, d, i) { transitionBars(layer, elem, d, i, params); }\n    };\n    return makeElement(container, 'rect', points, null, updateFns, keyFn);\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-bar',\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transform: {\n        type: 'stack'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    innerPadding: 0.1,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        x0: {},\n        y0: {}\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-bar-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-bar-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-bar-selected`\n        }\n    }\n};\n\n","import { MeasureSubtype, DimensionSubtype } from 'muze-utils';\nimport { STACK } from '../../enums/constants';\nimport { getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fieldInfo\n * @param {*} config\n * @param {*} data\n *\n */\nconst resolveDimByField = (type, axesInfo, config, data) => {\n    const spaceType = type === 'x' ? 'width' : 'height';\n    const [fieldType, axis] = [config[`${type}FieldType`], axesInfo[`${type}Axis`]];\n    const {\n        transformType,\n        sizeEncoding,\n        sizeConfig,\n        measurement\n    } = config;\n\n    const sizeValue = sizeEncoding.value;\n    let enter = 0;\n    let pos;\n    let space = 0;\n    let enterSpace = 0;\n    if (fieldType !== undefined) {\n        if (config[`${type}0Field`]) {\n            const minVal = data[type];\n            const maxVal = data[`${type}0`];\n            let min;\n            let max;\n            if (minVal === null || maxVal === null) {\n                return {\n                    enterSpace: undefined,\n                    enter: undefined,\n                    pos: undefined,\n                    space: undefined\n                };\n            } else if (fieldType === MeasureSubtype.CONTINUOUS || fieldType === DimensionSubtype.TEMPORAL) {\n                min = Math.min(minVal, maxVal);\n                max = Math.max(minVal, maxVal);\n            } else {\n                min = minVal;\n                max = maxVal;\n            }\n            const scales = type === 'x' ? [min, max] : [max, min];\n            pos = axis.getScaleValue(scales[0]) + axis.getUnitWidth() / 2;\n            space = Math.abs(axis.getScaleValue(scales[1]) - pos) + axis.getUnitWidth() / 2;\n\n            enter = pos;\n            enterSpace = 0;\n        } else if (fieldType === DimensionSubtype.CATEGORICAL || fieldType === DimensionSubtype.TEMPORAL) {\n            pos = axis.getScaleValue(data[type]) +\n                (sizeConfig[type === 'x' ? 'barWidthOffset' : 'barHeightOffset'] || 0);\n\n            space = sizeConfig[type === 'x' ? 'barWidth' : 'barHeight'];\n            if (sizeValue !== undefined) {\n                const diffPx = sizeValue * space;\n                space -= diffPx;\n                pos += diffPx / 2;\n            }\n            enter = pos;\n            enterSpace = space;\n        } else {\n            const zeroPos = axis.getScaleValue(0);\n            const axisType = axis.getScaleValue(data[type]);\n            const axisType0 = axis.getScaleValue(data[`${type}0`]);\n\n            enterSpace = 0;\n            if (type === 'x') {\n                pos = data[type] < 0 || transformType === STACK ? axisType : zeroPos;\n                space = Math.abs(pos - (transformType === STACK ? axisType0 : (data[type] >= 0 ? axisType : zeroPos)));\n            } else {\n                pos = transformType === STACK || data[type] >= 0 ? axisType : zeroPos;\n                space = Math.abs(pos - (transformType === STACK ? axisType0 : (data[type] >= 0 ? zeroPos : axisType)));\n            }\n            enter = zeroPos;\n        }\n    } else {\n        pos = 0;\n        space = measurement[spaceType];\n    }\n\n    return {\n        enterSpace,\n        enter,\n        pos,\n        space\n    };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} config\n * @param {*} axes\n *\n */\nconst resolveDimensions = (data, config, axes) => {\n    const axesInfo = {\n        xAxis: axes.x,\n        yAxis: axes.y\n    };\n    const {\n        enterSpace: enterWidth,\n        enter: enterX,\n        pos: xPos,\n        space: width\n    } = resolveDimByField('x', axesInfo, config, data);\n\n    const {\n        enterSpace: enterHeight,\n        enter: enterY,\n        pos: yPos,\n        space: height\n    } = resolveDimByField('y', axesInfo, config, data);\n    return {\n        enter: {\n            x: enterX,\n            y: enterY,\n            width: enterWidth,\n            height: enterHeight\n        },\n        update: {\n            x: xPos,\n            y: yPos,\n            width,\n            height\n        }\n    };\n};\n\n/**\n * Generates an array of objects containing x, y, width and height of the bars from the data\n * @param  {Array.<Array>} data Data Array\n * @param  {Object} encoding  Config\n * @param  {Object} axes     Axes object\n * @param {Object} conf config object for point generation\n * @return {Array.<Object>}  Array of points\n */\nexport const getTranslatedPoints = (context, data, sizeConfig) => {\n    let points = [];\n    const encoding = context.config().encoding;\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const fieldsConfig = context.data().getFieldsConfig();\n    const colorEncoding = encoding.color;\n    const colorField = colorEncoding.field;\n    const sizeEncoding = encoding.size || {};\n    const {\n            x0Field,\n            y0Field,\n            xFieldSubType,\n            yFieldSubType\n        } = context.encodingFieldsInf();\n    const measurement = context.measurement();\n    const isXDim = xFieldSubType === DimensionSubtype.CATEGORICAL || xFieldSubType === DimensionSubtype.TEMPORAL;\n    const isYDim = yFieldSubType === DimensionSubtype.CATEGORICAL || yFieldSubType === DimensionSubtype.TEMPORAL;\n    const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n    const transformType = context.transformType();\n    const colorFieldIndex = colorField && fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n    for (let i = 0, len = data.length; i < len; i++) {\n        const d = data[i];\n        const style = {};\n        const meta = {};\n        const dimensions = resolveDimensions(d, {\n            xFieldType: xFieldSubType,\n            yFieldType: yFieldSubType,\n            x0Field,\n            y0Field,\n            transformType,\n            measurement,\n            sizeConfig,\n            sizeEncoding\n        }, axes);\n\n        const { color, rawColor } = getLayerColor({ datum: d, index: i },\n            { colorEncoding, colorAxis, colorFieldIndex });\n\n        style.fill = color;\n        meta.stateColor = {};\n        meta.originalColor = rawColor;\n        meta.colorTransform = {};\n\n        const update = dimensions.update;\n\n        if (!isNaN(update.x) && !isNaN(update.y) && d._id !== undefined) {\n            let point = null;\n            point = {\n                enter: dimensions.enter,\n                update,\n                style,\n                _data: d._data,\n                _id: d._id,\n                source: d._data,\n                rowId: d._id,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, context);\n            points.push(point);\n            // Store each point in a hashmap with key as the dimensional or temporal field value\n            context.cachePoint(d[key], point);\n        }\n    }\n\n    points = positionPoints(context, points);\n    return points;\n};\n","import {\n    getClosestIndexOf,\n    getQualifiedClassName,\n    selectElement,\n    createElements,\n    clipElement,\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawRects } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getPlotMeasurement } from '../../helpers';\nimport './styles.scss';\nimport { getTranslatedPoints } from './bar-helper';\n\nconst MEASURE = FieldType.MEASURE;\nconst scaleBand = Scales.band;\n\n/**\n * Bar layer creates rectangle marks. The mark type of this layer is ```bar```. This layer can be used\n * to create stacked or grouped bars, range bars, heatmap plots and also reference bands by using\n * the encoding properties.\n *\n * @public\n *\n * @class\n * @module BarLayer\n * @extends BaseLayer\n */\nexport default class BarLayer extends BaseLayer {\n    /**\n     * Creates an instance of bar layer\n     */\n    constructor (...params) {\n        super(...params);\n        this._bandScale = scaleBand();\n        this._plotPadding = {\n            x: 0,\n            y: 0\n        };\n        this._plotSpan = {\n            x: 0,\n            y: 0\n        };\n        this._pointMap = {};\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BarLayer\n     */\n    elemType () {\n        return 'rect';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BarLayer\n     */\n    static formalName () {\n        return 'bar';\n    }\n\n    /**\n     * Returns the default configuration of the bar layer\n     * @return {Object} Default configuration of the bar layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof BarLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const colorField = encoding.color.field;\n        const transform = config.transform;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} fieldsConfig\n     *\n     * @memberof BarLayer\n     */\n    calculateDomainFromData (data, encodingFieldInf, fieldsConfig) {\n        const domain = super.calculateDomainFromData(data, encodingFieldInf, fieldsConfig);\n        ['x', 'y'].forEach((d) => {\n            if (encodingFieldInf[`${d}FieldType`] === MEASURE && domain[d]) {\n                encodingFieldInf[`${d}0Field}`] ? domain[d] = domain[d].sort((a, b) => a - b) :\n                    (domain[d][0] = Math.min(domain[d][0], 0));\n            }\n        });\n        return domain;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the bars from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @param {Object} conf config object for point generation\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, sizeConfig) {\n        return getTranslatedPoints(this, data, sizeConfig);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGGroup} container SVGGroup where plot will be rendered.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    render (container) {\n        const config = this.config();\n        const transition = config.transition;\n        const normalizedDataArr = this._normalizedData;\n        const transformedData = this._transformedData;\n        const keys = transformedData.map(d => d.key);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const height = axes.y && axes.y.scale().range()[0];\n        const width = axes.x && axes.x.scale().range()[1];\n        const defClassName = config.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const className = config.className;\n        const containerSelection = selectElement(container);\n        const dimensions = Object.values(fieldsConfig).filter(e => e.def.type === FieldType.DIMENSION)\n            .map(e => e.index);\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        clipElement(container, {\n            x: 0,\n            y: 0,\n            width,\n            height\n        }, `id-${this.id()}`);\n\n        this._points = this.generateDataPoints(normalizedDataArr, keys);\n\n        createElements({\n            data: this._points,\n            container,\n            selector: 'g',\n            append: 'g',\n            each: (points, group, i) => {\n                const seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n                group.style('display', 'block');\n                drawRects({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: {},\n                    keyFn: d => dimensions.map(key => d._data[key]).join('-')\n                });\n            }\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} normalizedData\n     * @param {*} keys\n     *\n     * @memberof BarLayer\n     */\n    generateDataPoints (normalizedData, keys) {\n        const [barWidthMetrics, barHeightMetrics] = getPlotMeasurement(this, keys);\n        const barWidthOffsets = barWidthMetrics.offsetValues || [];\n        const barHeightOffsets = barHeightMetrics.offsetValues || [];\n        this._plotSpan = {\n            x: barWidthMetrics.groupSpan || 0,\n            y: barHeightMetrics.groupSpan || 0\n        };\n        this._plotPadding = {\n            x: barWidthMetrics.padding || 0,\n            y: barHeightMetrics.padding || 0\n        };\n\n        this._pointMap = {};\n        return normalizedData.map((data, i) => this.translatePoints(data,\n            {\n                barWidth: barWidthMetrics.span,\n                barWidthOffset: barWidthOffsets[i] || 0,\n                barHeight: barHeightMetrics.span,\n                barHeightOffset: barHeightOffsets[i] || 0\n            }));\n    }\n\n    getPlotPadding () {\n        return this._plotPadding;\n    }\n\n    /**\n     * Gets the nearest point of the position passed.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point.\n     */\n    getNearestPoint (x, y) {\n        if (!this.data()) {\n            return null;\n        }\n        let axis;\n        let value;\n        let index;\n        let points;\n        let uniqueFieldType;\n        let uniqueFieldIndex;\n        let filterData;\n        let identifiers;\n        let pointFound = null;\n        const dataModel = this.data();\n        const dataObj = dataModel.getData();\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const axes = this.axes();\n        const data = dataObj.data;\n        const pointMap = this._pointMap;\n        const {\n                xField,\n                yField,\n                xFieldSubType,\n                yFieldSubType\n            } = this.encodingFieldsInf();\n\n        if (xFieldSubType === MeasureSubtype.CONTINUOUS) {\n            axis = axes.y;\n            value = axis.invert(y);\n            uniqueFieldIndex = fieldsConfig[yField].index;\n            uniqueFieldType = yFieldSubType;\n        } else {\n            axis = axes.x;\n            value = axis.invert(x);\n            uniqueFieldIndex = fieldsConfig[xField].index;\n            uniqueFieldType = xFieldSubType;\n        }\n\n        if (uniqueFieldType === DimensionSubtype.CATEGORICAL) {\n            points = pointMap[value];\n        }\n\n        if (uniqueFieldType === DimensionSubtype.TEMPORAL) {\n            filterData = [...new Set(data.map(d => d[uniqueFieldIndex]))];\n            index = getClosestIndexOf(filterData, value);\n            value = filterData[index];\n            points = pointMap[value];\n        }\n        const len = points && points.length;\n        points && points.sort((p1, p2) => p1.update.y - p2.update.y);\n        for (let i = 0; i < len; i++) {\n            const point = points[i];\n            const update = point.update;\n            if (x >= update.x && x <= (update.width + update.x) && y >= update.y && y <= (update.height + update.y)) {\n                pointFound = point;\n                break;\n            }\n            pointFound = null;\n        }\n\n        const values = pointFound && pointFound._data;\n        if (values) {\n            identifiers = this.getIdentifiersFromData(values, pointFound._id);\n        }\n        return pointFound ? {\n            dimensions: [pointFound.update],\n            id: identifiers,\n            layerId: this.id()\n        } : pointFound;\n    }\n\n    getPlotSpan () {\n        return this._plotSpan;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-tick',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }]\n    },\n    innerPadding: 0.1,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: { },\n        x: {},\n        y: {},\n        x0: {},\n        y0: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-tick-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-tick-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-tick-selected`\n        }\n    }\n};\n","import { selectElement } from 'muze-utils';\n\n/**\n * Draws ticks by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Ticks Selection\n */\nexport default /* istanbul ignore next */ (params) => {\n    const { points, container, keyFn, className } = params;\n    const mount = selectElement(container);\n    const ticks = mount.selectAll('path').data(points, keyFn);\n    const ticksEnter = ticks.enter().append('path');\n\n    mount.attr('class', className || '');\n    ticksEnter.each(function (d) {\n        const selection = selectElement(this);\n        const enter = d.enter || {};\n        Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n    });\n\n    ticks.exit().remove();\n    return ticks.merge(ticksEnter)\n                    .each(function (d) {\n                        const selection = selectElement(this);\n                        const update = d.update;\n                        const updateStyle = d.style || {};\n                        const x0 = update.x0 !== undefined ? update.x0 : update.x;\n                        const y0 = update.y0 !== undefined ? update.y0 : update.y;\n                        const path = `M ${update.x} ${update.y} L ${x0} ${y0}`;\n                        d.className && selection.classed(d.className, true);\n                        selection.attr('d', path);\n                        Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n                    });\n};\n\n","import { FieldType } from 'muze-utils';\nimport { PointLayer } from '../point';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport drawTicks from './renderer';\nimport './styles.scss';\nimport { getAxesScales, getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\n\n/**\n * This layer is used to create small lines. The orientation of the line is determined by the positional\n * encoding properties x0 and y0. The mark type of the layer is ```tick```.\n *\n * @public\n *\n * @class\n * @module TickLayer\n * @extends BaseLayer\n */\nexport default class TickLayer extends PointLayer {\n\n    /**\n     *\n     *\n     * @staticg\n     *\n     * @memberof TickLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static formalName () {\n        return 'tick';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static drawFn () {\n        return drawTicks;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TickLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes, config = {}) {\n        let points = [];\n        const {\n                xAxis,\n                yAxis\n            } = getAxesScales(axes);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n                xField,\n                yField,\n                x0Field,\n                y0Field,\n                xFieldType,\n                yFieldType\n            } = this.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding && colorEncoding.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n        const measurement = this.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n        const { x: xSpan, y: ySpan } = config.span;\n        for (let i = 0, len = data.length; i < len; i++) {\n            let xPx;\n            let x0Px;\n            let y0Px;\n            let yPx;\n            const d = data[i];\n            const row = d._data;\n            if (xField) {\n                xPx = xAxis.getScaleValue(d.x) + offsetX;\n                x0Px = xPx + xSpan;\n            }\n\n            if (yField) {\n                yPx = yAxis.getScaleValue(d.y) + offsetY;\n                y0Px = yPx !== null ? yPx + ySpan : null;\n            }\n\n            if (!xField) {\n                xPx = 0;\n                x0Px = measurement.width;\n                if (!isNaN(yPx)) {\n                    yPx += ySpan / 2;\n                    y0Px = yPx;\n                }\n            }\n\n            if (!yField) {\n                yPx = 0;\n                y0Px = measurement.height;\n                x0Px = xPx += xSpan / 2;\n            }\n\n            if (x0Field) {\n                x0Px = xAxis.getScaleValue(d.x0) + xSpan;\n                yPx += ySpan / 2;\n                y0Px -= ySpan / 2;\n            }\n\n            if (y0Field) {\n                y0Px = yAxis.getScaleValue(d.y0) + ySpan;\n                xPx += xSpan / 2;\n                x0Px -= xSpan / 2;\n            }\n            const style = {};\n            const meta = {};\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            style.stroke = color;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {},\n                    update: {\n                        x: xPx,\n                        y: yPx,\n                        x0: x0Px,\n                        y0: y0Px\n                    },\n                    style,\n                    _data: row,\n                    _id: d._id,\n                    source: row,\n                    rowId: d._id,\n                    meta\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0),\n                y: (offsetY || 0)\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n}\n","import { isSimpleObject, mergeRecursive, getObjProp } from 'muze-utils';\n\nconst parseLayerDefinition = (sink, definition, layerDef, layerType) => {\n    for (const key in definition) {\n        if (Object.hasOwnProperty.call(definition, key)) {\n            let strs;\n            let propValue;\n            const def = definition[key];\n            if (isSimpleObject(def)) {\n                sink[key] = {};\n                parseLayerDefinition(sink[key], def, layerDef, layerType);\n            } else if (typeof def === 'string' && (strs = def.split('.')) && strs[0] === layerType) {\n                propValue = getObjProp(layerDef, ...strs.slice(1, strs.length));\n                if (propValue !== undefined) {\n                    sink[key] = propValue;\n                }\n            } else {\n                sink[key] = def;\n            }\n        }\n    }\n};\n\nconst sanitizeEncoding = (encoding) => {\n    // Create object for each encoding value if encoding value is a string\n    for (const key in encoding) {\n        if (typeof encoding[key] === 'string') {\n            encoding[key] = {\n                field: encoding[key]\n            };\n        }\n    }\n};\n\n/**\n * Layer Factory creates layers based on the layer type. All types of layers needs to register in\n * the layer factory. For getting a layer instance, getLayer method needs to invoked with the\n * layerType and other arguments. It also registers the definition of composite layers.\n *\n * @public\n *\n * @module LayerFactory\n */\nconst layerFactory = (() => {\n    const compositeLayers = {};\n    const factoryObj = {\n        setLayerRegistry: (reg) => {\n            factoryObj._layerRegistry = reg;\n        },\n        getSerializedConf: (mark, layerDef) => {\n            let serializedDefs;\n            const defs = compositeLayers[mark];\n            const newConf = mergeRecursive({}, layerDef);\n\n                // If it is a composite layer then resolve all the definitions of each unit layer\n            if (defs) {\n                serializedDefs = defs.map((unitLayerDef) => {\n                    const sDef = {};\n                    parseLayerDefinition(sDef, unitLayerDef, newConf, mark);\n                    sanitizeEncoding(sDef.encoding);\n                    return sDef;\n                });\n            } else {\n                const encoding = newConf.encoding;\n                // Create object for each encoding value if encoding value is a string\n                sanitizeEncoding(encoding);\n                serializedDefs = newConf;\n            }\n\n            return serializedDefs;\n        },\n        getLayerInstance: (layerDef, ...params) => {\n            const layerRegistry = factoryObj._layerRegistry;\n            layerDef = !(layerDef instanceof Array) ? [layerDef] : layerDef;\n            const instances = layerDef.map((layerObj) => {\n                const layerConstructor = layerRegistry[layerObj.mark];\n                return layerConstructor.create(...params);\n            });\n            return instances.length === 1 ? instances[0] : instances;\n        },\n        getLayerClass: mark => factoryObj._layerRegistry[mark],\n        /**\n         * Registers a new composite layer definition in the layer factory.\n         *\n         * @public\n         *\n         * @param {string} layerType Mark type of the new composite layer.\n         * @param {Array} layerDefs Layer definitions of the composite layer.\n         */\n        composeLayers: (layerType, layerDefs) => {\n            compositeLayers[layerType] = layerDefs;\n        },\n        sanitizeLayerConfig: (layerDef) => {\n            const newConf = mergeRecursive({}, layerDef);\n            sanitizeEncoding(newConf.encoding);\n            return newConf;\n        }\n    };\n    return factoryObj;\n})();\n\nexport default layerFactory;\n","import layerFactory from './layer-factory';\n\nexport default layerFactory;\n","import { AreaLayer } from './layers/area';\nimport { ArcLayer } from './layers/arc';\nimport { LineLayer } from './layers/line';\nimport { TextLayer } from './layers/text';\nimport { PointLayer } from './layers/point';\nimport { BarLayer } from './layers/bar';\nimport { BaseLayer } from './base-layer';\nimport * as CONSTANTS from './enums/constants';\nimport { TickLayer } from './layers/tick';\n\nexport const DEFAULT_LAYERS = {\n    [CONSTANTS.AREA_LAYER]: AreaLayer,\n    [CONSTANTS.ARC_LAYER]: ArcLayer,\n    [CONSTANTS.LINE_LAYER]: LineLayer,\n    [CONSTANTS.TEXT_LAYER]: TextLayer,\n    [CONSTANTS.POINT_LAYER]: PointLayer,\n    [CONSTANTS.TICK_LAYER]: TickLayer,\n    [CONSTANTS.BAR_LAYER]: BarLayer,\n    [CONSTANTS.BASE_LAYER]: BaseLayer\n};\n","/**\n * This file exports constants that are used as enums in the\n *  crosstab group implementation.\n */\n/**\n * Width of the crosstab.\n */\nexport const X = 'x';\n/**\n * Width of the crosstab.\n */\nexport const Y = 'y';\n/**\n * Width of the crosstab.\n */\nexport const WIDTH = 'width';\n\n/**\n * Height of the crosstab.\n */\nexport const HEIGHT = 'height';\n\n/**\n * Field referring to object storing measurement configuration.\n */\nexport const MEASUREMENT = 'measurement';\n\n/**\n * Field referring to object storing configuration properties.\n */\nexport const CONFIG = 'config';\n\n/**\n * Width of visual unit in crosstab.\n */\nexport const MIN_UNIT_WIDTH = 'minUnitWidth';\n\n/**\n * Height of visual unit.\n */\nexport const MIN_UNIT_HEIGHT = 'minUnitHeight';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSIONS = 'dimensions';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURES = 'measures';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSION = 'dimension';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURE = 'measure';\n\n/**\n * Flag to specify if model should be pivoted.\n */\nexport const PIVOT = 'pivot';\n\n/**\n * Flag to specify format\n */\nexport const FORMAT = 'format';\n\n/**\n * Mount point where the variable will be hosted\n */\nexport const MOUNT = 'mount';\n\n/**\n * Data update flag\n */\nexport const HAS_DATA_UPDATED = 'hasDataUpdated';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROWS = 'rows';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMNS = 'columns';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COL = 'col';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROW = 'row';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMN = 'column';\n\n/**\n * Field referring to object storing color field\n */\nexport const COLOR = 'color';\n\n/**\n * Field referring to object storing shape field\n */\nexport const SHAPE = 'shape';\n\n/**\n * Field referring to object storing size field\n */\nexport const SIZE = 'size';\n\n/**\n * Field referring to object storing detail field\n */\nexport const DETAIL = 'detail';\n\n/**\n * Field referring to object storing set of layers\n */\nexport const LAYERS = 'layers';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const TRANSFORM = 'transform';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const ORDINAL = 'ordinal';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const LINEAR = 'linear';\n/**\n * Field referring to object storing the transforms\n */\nexport const LEFT = 'left';\n/**\n * Field referring to object storing the transforms\n */\nexport const RIGHT = 'right';\n/**\n * Field referring to object storing the transforms\n */\nexport const TOP = 'top';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTTOM = 'bottom';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const RETINAL = 'retinal';\n/**\n * Field referring to object storing the transforms\n */\nexport const CELL = 'cell';\n/**\n * Field referring to object storing the transforms\n */\nexport const X_AXES = 'xAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const Y_AXES = 'yAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const ENTRY_CELLS = 'entryCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const INITIALIZED = 'initialized';\n/**\n * Field referring to object storing the transforms\n */\nexport const EXIT_CELLS = 'exitCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const AXIS = 'axis';\n/**\n * Field referring to object storing the transforms\n */\nexport const UNIT = 'unit';\n/**\n * Field referring to object storing the transforms\n */\nexport const UPDATED = 'updated';\n/**\n * Field referring to object storing the transforms\n */\nexport const BEFORE_UPDATE = 'beforeupdate';\n/**\n * Field referring to object storing the transforms\n */\nexport const VALUE_MATRIX = 'valueMatrix';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET_HEADERS = 'facet-headers';\n/**\n * Field referring to object storing the transforms\n */\nexport const RADIUS = 'radius';\n/**\n * Field referring to object storing the transforms\n */\nexport const ANGLE = 'angle';\n/**\n * Field referring to object storing the transforms\n */\nexport const ARC = 'arc';\n/**\n * Field referring to object storing the transforms\n */\nexport const CARTESIAN = 'cartesian';\n/**\n * Field referring to object storing the transforms\n */\nexport const POLAR = 'polar';\n/**\n * Field referring to object storing the transforms\n */\nexport const CATEGORICAL = 'categorical';\n/**\n * Field referring to object storing the transforms\n */\nexport const TEMPORAL = 'temporal';\n/**\n * Field referring to object storing the transforms\n */\nexport const BAR = 'bar';\n/**\n * Field referring to object storing the transforms\n */\nexport const LINE = 'line';\n/**\n * Field referring to object storing the transforms\n */\nexport const POINT = 'point';\n/**\n * Field referring to object storing the transforms\n */\nexport const PRIMARY = 'Primary';\n/**\n * Field referring to object storing the transforms\n */\nexport const SECONDARY = 'Secondary';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTH = 'both';\n/**\n * Field referring to object storing the transforms\n */\nexport const INTERACTION = 'interaction';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_LINES = 'gridLines';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_BANDS = 'gridBands';\n/**\n * Field referring to object storing the transforms\n */\nexport const HEADER = 'header';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET = 'facet';\n\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Artboard.\n * Artboard merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module\n */\n\nexport default {\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * Interfaces for VisualGroup. Any new VisualGroup has to implement this class.\n * @class  SimpleGroup\n */\nclass SimpleGroup {\n\n    /**\n     * This method is used to set or get the DataModel instance.\n     *\n     * @param {DataModel | undefined} dataModel Instance of datamodel.\n\n     * @memberof  SimpleGroup\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to set or get the group specific configuration\n     * properties\n     *\n     * @param {Object | undefined} configObj The input configuration.\n     *                                or instance of visual group.\n     * @memberof  SimpleGroup\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to return a serialized representation of the\n     * instance's properties.\n     *\n     * @memberof  SimpleGroup\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to get or set the measurement object which houses\n     * layout properties like width and height.\n     *\n     * @param {Object  | undefined} mObj The measurement properties.\n     * @memberof  SimpleGroup\n     */\n    measurement () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n\nexport default SimpleGroup;\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n *\n *\n * @export\n * @class Variable\n */\nexport default class Variable {\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    type () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    toString () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n","import Variable from './variable';\n\n/**\n * This is a wrapper on top of multiple variables which are of same type but they are shown in the same axis.This is\n * required in case of range plots or ohlc plots where one plot is mapped to multiple measure fields. At that time,\n * we need to create a composed variable from multiple variables. This class just wraps them into one variable instance\n * and provides methods to get the type and other common functionalities which can be performed on a simple variable\n * instance.\n *\n * @public\n * @class ComposeVars\n */\nclass ComposedVars extends Variable {\n\n    /**\n     * Creates an instance of ComposeVars.\n     *\n     * @param {Array} texts Array of field names\n     */\n    constructor (...texts) {\n        super(...texts);\n        this.vars(texts);\n    }\n\n    vars (...params) {\n        if (params.length) {\n            this._vars = params[0];\n            return this;\n        }\n        return this._vars;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this.vars().forEach(d => d.data(dm[0]));\n            return this;\n        }\n        return this._data;\n    }\n\n    /**\n     * Get all the field names from composed variable instance.\n     *\n     * @public\n     * @return {Array} Array of field names.\n     */\n    getMembers () {\n        const vars = this.vars();\n        return vars.map(member => member.getMembers()[0]);\n    }\n\n    /**\n     * Type of field associated with this composed variable.\n     *\n     * @return {string} Type of variable (Measure/Dimension).\n     */\n    type () {\n        return this.vars()[0].type();\n    }\n\n    toString () {\n        return this.vars().map(d => d.toString()).join(',');\n    }\n\n    /**\n     * Returns the number formatter function of the variable.\n     *\n     * @return {Function} Number formatter function of the variable.\n     */\n    numberFormat () {\n        return this.vars()[0].numberFormat();\n    }\n\n    format (values) {\n        return this.vars()[0].format(values);\n    }\n\n    /**\n     * Returns the subtype of the fields associated with this variable instance.\n     *\n     * @public\n     * @return {string} Subtype of the variable.\n     */\n    subtype () {\n        return this.vars()[0].subtype();\n    }\n\n    /**\n     * Returns the consecutive minimum difference of the field values.\n     *\n     * @public\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        return this.vars()[0].getMinDiff();\n    }\n}\n\nexport default ComposedVars;\n","import { DateTimeFormatter } from 'muze-utils';\nimport Variable from './variable';\n\n/**\n * This is a wrapper on top of fields passed in rows or columns in canvas. This is used to get the type of field or\n * get min difference from the field values.\n *\n * @public\n * @class SimpleVariable\n */\nexport default class SimpleVariable extends Variable {\n\n    /**\n     * Creates an instance of simple variable instance.\n     *\n     * @param {string} text Field name.\n     */\n    constructor (text) {\n        super();\n        this.oneVar(text);\n    }\n\n    /**\n     * Gets the field name associated with this variable instance.\n     *\n     * @public\n     * @return {string} Name of the field.\n     */\n    oneVar (...oneV) {\n        if (oneV.length) {\n            this._oneVar = oneV[0];\n            return this;\n        }\n        return this._oneVar;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    toString () {\n        return this.oneVar();\n    }\n\n    /**\n     * Gets the number formatter function of this variable.\n     *\n     * @public\n     * @return {Function} Number formatter function.\n     */\n    numberFormat () {\n        if (this.type() === 'measure') {\n            const formatter = this.data().getFieldspace().getMeasure()[this.oneVar()];\n            return formatter.numberFormat();\n        } return val => val;\n    }\n\n    format (values) {\n        if (values && this.subtype() === 'temporal') {\n            const formatter = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            const dtFormat = new DateTimeFormatter(formatter);\n            values = values.map(e => dtFormat.getNativeDate(e));\n        }\n        return values;\n    }\n\n    /**\n     * Return the field names associated with this variable instance.\n     *\n     * @public\n     * @return {Array} Array of fields.\n     */\n    getMembers () {\n        return [this.oneVar()];\n    }\n\n    /**\n     * Returns the type of the variable. Whether it is measure or dimension.\n     *\n     * @public\n     * @return {string} Type of variable.\n     */\n    type () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.type;\n    }\n\n    /**\n     * Returns the subtype of the variable. Subtype can be categorical or temporal. If no subtype is found, then it\n     * returns the type of the variable.\n     *\n     * @public\n     * @return {string} Subtype of variable.\n     */\n    subtype () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.subtype || fieldDef.type;\n    }\n\n    /**\n     * Returns the minimum consecutive difference between the data values of this variable.\n     *\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        const fieldSpace = this.data().getFieldspace();\n        return fieldSpace.fieldsObj()[this.oneVar()].minimumConsecutiveDifference();\n    }\n\n    /**\n     * Returns true if two variable instances are same.If both variable has the same field names, they are equal.\n     *\n     * @return {Boolean} Whether two variable instances are same.\n     */\n    equals (varInst) {\n        return this.oneVar() === varInst.oneVar();\n    }\n}\n","import { ComposedVars, SimpleVariable } from '../variable';\nimport { DIMENSION, COLUMNS, ROWS, TEMPORAL } from '../enums/constants';\n\n/**\n * Gets the list of fields in a sorted order by measurement and dimension\n *\n * @param {Array} fieldList List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields sorted by measurement and dimensions\n */\nconst orderFields = (fieldArray, type) => {\n    const dimensionArr = [[], []];\n    const measureArr = [[], []];\n    const temporalArr = [[], []];\n    const categoricalArr = [[], []];\n\n    fieldArray.forEach((fieldList, index) => {\n        fieldList.forEach((field) => {\n            if (field.type() === DIMENSION) {\n                dimensionArr[index].push(field);\n                field.subtype() === TEMPORAL ? temporalArr[index].push(field) : categoricalArr[index].push(field);\n            } else {\n                measureArr[index].push(field);\n            }\n        });\n    });\n\n    const numOfMeasures = measureArr[0].length + (measureArr[1] ? measureArr[1].length : 0);\n\n    // Single array of fields\n    if (!fieldArray[1]) {\n        // Push measures to bottom\n        measureArr[1] = type === COLUMNS ? measureArr[0] : [];\n        // Push measures to left\n        measureArr[0] = type !== COLUMNS ? measureArr[0] : [];\n        // Bottom and right dimensions empty\n        dimensionArr[1] = [];\n        // Left and top filled with dimensions\n        dimensionArr[0] = dimensionArr[0];\n        if (numOfMeasures === 0) {\n            const allDimensions = [...dimensionArr[0], ...dimensionArr[1]];\n            if (type === COLUMNS) {\n                dimensionArr[1] = allDimensions[allDimensions.length - 1] ? [allDimensions[allDimensions.length - 1]]\n                        : [];\n                allDimensions.splice(-1, 1);\n            } else {\n                dimensionArr[1] = [];\n            }\n            dimensionArr[0] = [...allDimensions];\n        }\n    }\n\n    if (dimensionArr[0].length && dimensionArr[1].length && numOfMeasures > 0) {\n        dimensionArr[0] = [...dimensionArr[0], ...dimensionArr[1]];\n        dimensionArr[1] = [];\n    }\n    return {\n        fields: dimensionArr.map((list, i) => (i === 1 ?\n            measureArr[i].concat(dimensionArr[i]) : dimensionArr[i].concat(measureArr[i]))),\n        dimensions: [...dimensionArr[0], ...dimensionArr[1]],\n        measures: [...measureArr[0], ...measureArr[1]],\n        temporal: [...temporalArr[0], ...temporalArr[1]],\n        categorical: [...categoricalArr[0], ...categoricalArr[1]]\n    };\n};\n\n/**\n * Gets the list of normalized fields\n *\n * @param {Array} fields List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields normalized by measurement and dimensions\n */\nconst normalizeFields = (config, type) => {\n    const fieldsArr = [];\n    const fields = config[type];\n\n    if (!(fields[0] instanceof Array)) {\n        fieldsArr[0] = fields;\n    } else {\n        fieldsArr[0] = fields[0] || [];\n        fieldsArr[1] = fields[1] || [];\n    }\n    return fieldsArr;\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} datamodel\n *\n */\nconst convertToVar = (datamodel, fields) => {\n    const vars = [];\n\n    fields && fields.forEach((field) => {\n        if (field instanceof ComposedVars) {\n            vars.push(field);\n            field.data(datamodel);\n        } else {\n            vars.push(new SimpleVariable(field).data(datamodel));\n        }\n    });\n    return vars;\n};\n\n/**\n *\n *\n * @param {*} rows\n * @param {*} columns\n * @param {*} datamodel\n *\n */\nexport const transformFields = (datamodel, config) => {\n    const [rowsInfo, columnsInfo] = [ROWS, COLUMNS].map((fields) => {\n        const normalizedFields = normalizeFields(config, fields);\n        const norFields = [convertToVar(datamodel, normalizedFields[0])];\n\n        if (normalizedFields[1]) {\n            norFields[1] = convertToVar(datamodel, normalizedFields[1]);\n        }\n        return orderFields(norFields, fields);\n    });\n    const {\n        fields: rows,\n        dimensions: rowDimensions,\n        measures: rowMeasures,\n        temporal: rowTemporalFields,\n        categorical: rowCategoricalFields\n    } = rowsInfo;\n    const {\n        fields: columns,\n        dimensions: columnDimensions,\n        measures: columnMeasures,\n        temporal: columnTemporalFields,\n        categorical: columnCategoricalFields\n    } = columnsInfo;\n    return {\n        rows,\n        rowDimensions,\n        rowMeasures,\n        rowTemporalFields,\n        rowCategoricalFields,\n        columns,\n        columnTemporalFields,\n        columnCategoricalFields,\n        columnDimensions,\n        columnMeasures\n    };\n};\n","import { ERROR_MSG, mergeRecursive } from 'muze-utils';\nimport { transformFields } from './field-sanitizer';\nimport { getHeaderAxisFrom } from '../group-helper/group-utils';\nimport { ROW, COLUMN } from '../enums/constants';\n\n/**\n *\n *\n * @export\n * @class VisualEncoder\n */\nexport default class VisualEncoder {\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    createAxis () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    setCommonDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    getLayerConfig () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    fieldInfo (...info) {\n        if (info.length) {\n            this._fieldInfo = mergeRecursive(this._fieldInfo || {}, info[0]);\n            return this;\n        }\n        return this._fieldInfo;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof VisualEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        this.fieldInfo(transformFields(datamodel, config));\n        return this.fieldInfo();\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    axisFrom (...params) {\n        if (params.length) {\n            this._axisFrom = params[0];\n            return this;\n        }\n        return this._axisFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    headerFrom (...params) {\n        if (params.length) {\n            this._headerFrom = params[0];\n            return this;\n        }\n        return this.__headerFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisFrom\n     *\n     * @memberof CartesianEncoder\n     */\n    setAxisAndHeaders (axisFrom = {}, fields) {\n        const [rowHeader, rowAxis] = getHeaderAxisFrom(ROW, fields.rows, axisFrom);\n        const [colHeader, colAxis] = getHeaderAxisFrom(COLUMN, fields.columns, axisFrom);\n\n        this.axisFrom({\n            row: rowAxis,\n            column: colAxis\n        });\n        this.headerFrom({\n            row: rowHeader,\n            column: colHeader\n        });\n        return this;\n    }\n}\n","import { ContinousAxis, BandAxis, TimeAxis, ColorAxis, SizeAxis, ShapeAxis } from '@chartshq/muze-axis';\n\nexport const scaleMaps = {\n    linear: ContinousAxis,\n    band: BandAxis,\n    temporal: TimeAxis,\n    size: SizeAxis,\n    color: ColorAxis,\n    shape: ShapeAxis\n};\n","import { ScaleType } from '@chartshq/muze-axis';\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    dimension: ScaleType.BAND,\n    categorical: ScaleType.BAND,\n    temporal: ScaleType.TIME,\n    measure: ScaleType.LINEAR,\n    continuous: ScaleType.LINEAR\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { AxisOrientation } from '@chartshq/muze-axis';\nimport { scaleMaps } from '../enums/scale-maps';\nimport { getAxisType, getAxisKey } from '../group-helper';\nimport { dataTypeScaleMap } from '../data-type-scale-map';\nimport { CATEGORICAL, TEMPORAL, BAR, LINE, POINT, BOTH, Y } from '../enums/constants';\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst getAxisConfig = (axisInfo, field, axesCreators) => {\n    let axisOrientation;\n    const { index, axisIndex, axisType } = axisInfo;\n    const { config, position } = axesCreators;\n    const userAxisConfig = config.axes ? (config.axes[axisType] || {}) : {};\n    const {\n        LEFT,\n        RIGHT,\n        TOP,\n        BOTTOM\n    } = AxisOrientation;\n    const allOrientations = axisType === Y ? [LEFT, RIGHT] : [TOP, BOTTOM];\n\n    if (position === BOTH) {\n        axisOrientation = allOrientations[axisIndex];\n    } else {\n        axisOrientation = position;\n    }\n    const axisConfig = {\n        id: `${axisType}-${index}-${axisIndex}`,\n        name: field.toString(),\n        field: field.toString(),\n        numberFormat: field.numberFormat(),\n        orientation: axisOrientation,\n        showAxisName: true,\n        show: true,\n        type: dataTypeScaleMap[field.subtype()]\n    };\n    userAxisConfig.tickValues = field.format(userAxisConfig.tickValues);\n    userAxisConfig.domain = field.format(userAxisConfig.domain);\n\n    return mergeRecursive(axisConfig, userAxisConfig);\n};\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst createSimpleAxis = (axisConfig, field, axesCreators) => {\n    const { labelManager } = axesCreators;\n    const Cls = scaleMaps[dataTypeScaleMap[field.subtype()]];\n    const simpleAxis = new Cls(axisConfig, { labelManager });\n    return simpleAxis;\n};\n\nexport const getAdjustedDomain = (max, min) => {\n    const y1ratio = max[0] / (max[0] - min[0]);\n    const y2ratio = max[1] / (max[1] - min[1]);\n\n    // adjust min/max values for positive negative values zero line etc\n    let allSameSign = false;\n\n    // if all numbers are positive set floor to zero\n    if (min[0] > 0 && min[1] > 0 && min[1] > 0 && max[1] > 0) {\n        allSameSign = true;\n        min[0] = 0;\n        min[1] = 0;\n    }\n\n    // if all numbers are negative set ceiling to zero\n    if (min[0] < 0 && min[1] < 0 && min[1] < 0 && max[1] < 0) {\n        allSameSign = true;\n        max[0] = 0;\n        max[1] = 0;\n    }\n\n    // align zero line if necessary\n    if (!allSameSign && y1ratio !== y2ratio) {\n        if (y1ratio < y2ratio) {\n                    // adjust min[1]\n            min[1] = min[0] / max[0] * max[1];\n        } else {\n                    // adjust min[0]\n            min[0] = min[1] / max[1] * max[0];\n        }\n    }\n    return [\n        [min[0], max[0]],\n        [min[1], max[1]]\n    ];\n};\n\n/**\n *\n *\n * @param {*} axisType\n * @param {*} fieldInfo\n * @param {*} axesCreators\n * @param {*} groupAxes\n *\n */\nexport const generateAxisFromMap = (axisType, fieldInfo, axesCreators, groupAxes) => {\n    let axisKey;\n    const currentAxes = [];\n    const { fields, index } = fieldInfo;\n    const { cacheMaps } = axesCreators;\n    const map = cacheMaps[`${axisType}AxesMap`];\n\n    const commonAxisKey = getAxisKey(axisType, index);\n    fields.forEach((field, axisIndex) => {\n        axisKey = getAxisKey(axisType, index, axisIndex, dataTypeScaleMap[field.subtype()]);\n        const axisConfig = getAxisConfig({ index, axisIndex, axisType }, field, axesCreators);\n\n        let axis;\n        if (!map.has(axisKey)) {\n            axis = createSimpleAxis(axisConfig, field, axesCreators);\n        } else {\n            axis = map.get(axisKey);\n            axis._rotationLock = false;\n            axis.config(axisConfig);\n            axisConfig.domain ? axis.domain(axisConfig.domain) : axis.resetDomain();\n        }\n        currentAxes.push(axis);\n        map.set(axisKey, axis);\n    });\n\n    if (currentAxes.length) {\n        map.set(commonAxisKey, currentAxes);\n        groupAxes.add(commonAxisKey);\n    }\n\n    return currentAxes;\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n    const xAxes = [];\n    const yAxes = [];\n\n    xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes.push(xAxis);\n    });\n    yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes.push(yAxis);\n    });\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n * return a default mark based on predefined set of rules of type and subtype of the fields\n *\n * @param {string} colFieldType dimension/measure - temporal/ordinal/nominal\n * @param {string} rowFieldType dimension/measure - temporal/ordinal/nominal\n * @return {Object} return mark type\n */\nexport const getDefaultMark = (colFieldType, rowFieldType) => {\n    let mark;\n\n    if (colFieldType === CATEGORICAL || rowFieldType === CATEGORICAL) {\n        mark = BAR;\n    } else if (colFieldType === TEMPORAL || rowFieldType === TEMPORAL) {\n        mark = LINE;\n    } else {\n        mark = POINT;\n    }\n\n    return mark;\n};\n\n/**\n *\n *\n * @param {*} axesCreators\n * @param {*} [fieldInfo=[]]\n *\n */\nexport const createRetinalAxis = (axesCreators, fieldProps = {}) => {\n    const { axisType, fieldsConfig } = axesCreators;\n    const field = fieldProps.field;\n    const axis = [];\n    const Cls = scaleMaps[axisType];\n\n    fieldProps.type = fieldProps.type ? fieldProps.type : getAxisType(fieldsConfig, field || null);\n    axis.push(new Cls(fieldProps));\n    return axis;\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} val\n *\n */\nexport const getIndex = (arr, val) => {\n    let i = 0;\n    let arrIndex = -1;\n\n    while (arrIndex === -1 && i < arr.length) {\n        if (arr[i].toString() === val.toString()) {\n            arrIndex = i;\n        }\n        i++;\n    }\n    return arrIndex;\n};\n\n/**\n *\n *\n * @param {*} colFields\n * @param {*} rowFields\n * @param {*} userLayerConfig\n *\n * @memberof CartesianEncoder\n */\nexport const getLayerConfFromFields = (colFields, rowFields, userLayerConfig) => userLayerConfig.filter((conf) => {\n    const userConf = conf instanceof Array ? conf : [conf];\n    const encodingArr = [].concat(...userConf.map(d => d.encoding).filter(d => d !== undefined));\n\n    if (!encodingArr.length) {\n        return true;\n    }\n\n    const xFields = [].concat(...encodingArr.map(d => [d.x && d.x.field, d.x0 && d.x0.field]))\n                .filter(d => d !== undefined && d !== null);\n    const yFields = [].concat(...encodingArr.map(d => [d.y && d.y.field, d.y0 && d.y0.field]))\n                .filter(d => d !== undefined && d !== null);\n\n    if (!xFields.length && !yFields.length) {\n        return true;\n    }\n\n    const colFieldExist = xFields.length ? xFields.every(d => colFields.indexOf(d) !== -1) : false;\n    const rowFieldExist = yFields.length ? yFields.every(d => rowFields.indexOf(d) !== -1) : false;\n    if (xFields.length && yFields.length) {\n        return colFieldExist && rowFieldExist;\n    }\n    return colFieldExist || rowFieldExist;\n});\n","import { layerFactory } from '@chartshq/visual-layer';\nimport { mergeRecursive, STATE_NAMESPACES, unionDomain } from 'muze-utils';\nimport {\n    generateAxisFromMap,\n    getDefaultMark,\n    getIndex,\n    getLayerConfFromFields,\n    getAdjustedDomain\n} from './encoder-helper';\nimport { retriveDomainFromData } from '../group-helper';\n\nimport { ROW, COLUMN, COL, LEFT, TOP, CARTESIAN, MEASURE, BOTH, X, Y } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class CartesianEncoder\n * @extends {VisualEncoder}\n */\nexport default class CartesianEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     *\n     * @memberof CartesianEncoder\n     */\n    static type () {\n        return CARTESIAN;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof CartesianEncoder\n     */\n    createAxis (axesCreators, fieldInfo) {\n        const geomCellAxes = {};\n        const {\n            axes\n        } = axesCreators;\n        const {\n            projections,\n            indices\n        } = fieldInfo;\n        const {\n            rowFields,\n            columnFields\n        } = projections;\n        const {\n             rowIndex,\n             columnIndex\n        } = indices;\n        const axisFields = [{\n            fields: rowFields,\n            index: rowIndex\n        }, {\n            fields: columnFields,\n            index: columnIndex\n        }];\n        const xAxes = axes.x || [];\n        const yAxes = axes.y || [];\n\n        [rowFields, columnFields].forEach((fields, i) => {\n            const type = i === 0 ? ROW : COLUMN;\n            const axis = i === 0 ? Y : X;\n\n            if (fields.length > 1) {\n                axesCreators.position = BOTH;\n            } else {\n                axesCreators.position = this.axisFrom()[type];\n            }\n            geomCellAxes[axis] = generateAxisFromMap(axis, axisFields[i], axesCreators, axis === X ? xAxes : yAxes);\n        });\n        return geomCellAxes;\n    }\n\n    updateDomains (store, axes) {\n        const xAxes = axes.x;\n        const yAxes = axes.y;\n        store.model.lock();\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${0}${i}0`, xAxes[i][j].domain());\n            }\n        }\n        for (let i = 0; i < yAxes.length; i++) {\n            for (let j = 0; j < yAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${i}${0}0`, yAxes[i][j].domain());\n                yAxes[i][j]._domainLock = false;\n            }\n        }\n\n        store.model.unlock();\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const unitDomains = store.get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`);\n        const resolver = context.resolver();\n        const units = resolver.units();\n        const domains = {\n            0: {},\n            1: {}\n        };\n\n        for (let rIdx = 0, len = units.length; rIdx < len; rIdx++) {\n            const unitsArr = units[rIdx];\n            for (let cIdx = 0, len2 = unitsArr.length; cIdx < len2; cIdx++) {\n                const unit = unitsArr[cIdx];\n                const axisFields = unit.fields();\n                [axisFields.x, axisFields.y].forEach((fieldArr, axisType) => {\n                    fieldArr.forEach((field, axisIndex) => {\n                        const key = !axisType ? `0${cIdx}${axisIndex}` : `${rIdx}0${axisIndex}`;\n                        const dom = unitDomains[`${rIdx}${cIdx}`];\n                        if (dom && Object.keys(dom).length !== 0) {\n                            domains[axisType][key] = unionDomain([(domains[axisType] && domains[axisType][key]) || [],\n                                dom[`${field}`]], field.subtype());\n                        }\n                    });\n                });\n            }\n        }\n\n        const { x: xAxes, y: yAxes } = resolver.axes();\n        store.model.lock();\n        [xAxes, yAxes].forEach((axesArr, axisType) => {\n            axesArr.forEach((axes, idx) => {\n                const min = [];\n                const max = [];\n                let domain = [];\n                let adjustedDomain = [];\n                if (axes.length > 1 && axes[0].constructor.type() === 'linear' && axes[0].config().alignZeroLine) {\n                    axes.forEach((axis, i) => {\n                        const key = !axisType ? `0${idx}${i}` : `${idx}0${i}`;\n                        domain = domains[axisType][key];\n                        min[i] = domain[0];\n                        max[i] = domain[1];\n                    });\n                    adjustedDomain = getAdjustedDomain(max, min);\n                }\n\n                axes.forEach((axis, index) => {\n                    const key = !axisType ? `0${idx}${index}` : `${idx}0${index}`;\n                    domain = adjustedDomain[index] || domains[axisType][key];\n                    axis.domain(domain);\n                    const type = !axisType ? 'x' : 'y';\n                    store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type}.${idx}${index}`, domain);\n                });\n            });\n        });\n        store.model.unlock();\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields, type) {\n        let facets = [];\n        let projections = [];\n        let counter = 0;\n        const primaryFacets = [];\n        const secondaryFacets = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n        const axisFrom = this.axisFrom();\n\n        for (let i = 0; i < primaryLen; i++) {\n            let projArr = [primaryFields[i]];\n            const primaryField = primaryFields[i];\n\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter];\n                if (secondaryField && secondaryField.type() === MEASURE) {\n                    counter++;\n                    projArr = [primaryField, secondaryField];\n                }\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n                primaryFacets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                    secondaryFacets.push(secondaryField);\n                }\n            }\n        }\n        if ((primaryFacets.length || secondaryFacets.length) && !projections.length) {\n            type = type === COL ? COLUMN : type;\n            if ((axisFrom[type] === LEFT || axisFrom[type] === TOP) && primaryFacets.length) {\n                const axisFromIndex = primaryFacets.length - 1;\n                const facet = primaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(secondaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    secondaryFacets.splice(existIndex, 1);\n                }\n                primaryFacets.splice(axisFromIndex, 1);\n            } else {\n                const axisFromIndex = 0;\n                const facet = secondaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(primaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    primaryFacets.splice(existIndex, 1);\n                }\n                secondaryFacets.splice(axisFromIndex, 1);\n            }\n        }\n\n        facets = [...primaryFacets, ...secondaryFacets];\n        facets = facets.filter((el, index, self) => index === self.findIndex(t => (t.toString() === el.toString())));\n        return {\n            facets,\n            projections\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof CartesianEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        return super.fieldSanitizer(datamodel, config);\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     *\n     * @memberof CartesianEncoder\n     */\n    getRetinalFieldsDomain (dataModels, encoding) {\n        const groupedModel = dataModels.groupedModel;\n        const domains = {};\n        for (const key in encoding) {\n            if ({}.hasOwnProperty.call(encoding, key)) {\n                const encodingObj = encoding[key];\n                const field = encodingObj.field;\n                if (!encodingObj.domain && field) {\n                    const domain = retriveDomainFromData(groupedModel, field);\n                    domains[field] = domain;\n                }\n            }\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     * @memberof CartesianEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n        // let currentLayerIndex = 0;\n        layerArray.length && layerArray.forEach((layer, i) => {\n            const def = layerFactory.sanitizeLayerConfig(layer);\n            def.order = i;\n            serializedLayers.push(def);\n        });\n        return serializedLayers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof CartesianEncoder\n     */\n    getLayerConfig (fields, userLayerConfig) {\n        const layerConfig = [];\n        const {\n            columnFields,\n            rowFields\n        } = fields;\n\n        // let currentLayerIndex = 0;\n        columnFields.forEach((colField) => {\n            const colFieldName = colField.toString();\n            rowFields.forEach((rowField) => {\n                let configs = [];\n                const rowFieldName = rowField.toString();\n                const encoding = {\n                    x: {\n                        field: colFieldName\n                    },\n                    y: {\n                        field: rowFieldName\n                    }\n                };\n                const rowFieldType = rowField.subtype();\n                const colFieldType = colField.subtype();\n                const mark = getDefaultMark(colFieldType, rowFieldType);\n\n                const defConfigs = [{\n                    mark,\n                    def: {\n                        mark,\n                        encoding\n                    }\n                }];\n\n                const layerConfigs = getLayerConfFromFields(colField.getMembers(),\n                    rowField.getMembers(), userLayerConfig || []);\n                if (layerConfigs.length) {\n                    configs = layerConfigs.map((layerConf) => {\n                        const mergedLayerConf = mergeRecursive(mergeRecursive({}, defConfigs[0].def), layerConf);\n                        const serializedLayerConfig = layerFactory.getSerializedConf(mergedLayerConf.mark,\n                            mergedLayerConf);\n                        return {\n                            mark: mergedLayerConf.mark,\n                            order: mergedLayerConf.order,\n                            def: serializedLayerConfig\n                        };\n                    });\n                } else {\n                    configs = defConfigs;\n                }\n\n                layerConfig.push(...configs);\n            });\n        });\n        return layerConfig;\n    }\n}\n","import { layerFactory } from '@chartshq/visual-layer';\nimport { mergeRecursive, STATE_NAMESPACES } from 'muze-utils';\nimport VisualEncoder from './visual-encoder';\nimport { RADIUS, ANGLE, SIZE, MEASURE, ARC, POLAR, COLOR } from '../enums/constants';\n/**\n *\n *\n * @export\n * @class PolarEncoder\n * @extends {VisualEncoder}\n */\nexport default class PolarEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof PolarEncoder\n     */\n    createAxis (axesCreators, fieldInfo) {\n        const {\n            axes\n        } = axesCreators;\n        const geomCellAxes = axes;\n        const {\n            indices\n        } = fieldInfo;\n        const {\n            rowIndex,\n            columnIndex\n        } = indices;\n        // Dummy axes for polar, to create blank cells\n        const pieAxes = geomCellAxes.pie || [];\n\n        pieAxes[rowIndex] = pieAxes[rowIndex] || [];\n        pieAxes[rowIndex][columnIndex] = [];\n\n        geomCellAxes.pie = pieAxes;\n        geomCellAxes.x = null;\n        geomCellAxes.y = null;\n\n        return geomCellAxes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields) {\n        let counter = 0;\n        const facets = [];\n        const projections = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n\n        for (let i = 0; i < primaryLen; i++) {\n            const primaryField = primaryFields[i];\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter++];\n                const projArr = secondaryField ? [primaryField, secondaryField] : [primaryField];\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                }\n            }\n        }\n        return {\n            facets,\n            projections\n        };\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const domains = store.get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`);\n        const domainProps = {\n            radius: [Infinity, -Infinity]\n        };\n        Object.values(domains).forEach((domainVal) => {\n            for (const key in domainVal) {\n                domainProps[key] = [Math.min(domainVal[key][0], domainProps[key][0]),\n                    Math.min(domainVal[key][1], domainProps[key][1])];\n            }\n        });\n        store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`, domainProps.radius);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    setCommonDomain () {\n        // No domain to be set\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    static type () {\n        return POLAR;\n    }\n\n    layers (...layers) {\n        if (layers.length) {\n            this._layers = layers[0];\n            return this;\n        }\n        return this._layers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof PolarEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        let sanitizedRows = [[], []];\n        let sanitizedColumns = [[], []];\n        const fields = super.fieldSanitizer(datamodel, config);\n        const {\n            layers\n        } = config;\n        const {\n            rows,\n            columns\n        } = fields;\n        const layer = layers[0];\n        const encoding = layer.encoding;\n        const radius = encoding && encoding.radius ? encoding.radius.field : null;\n        const angle = encoding && encoding.angle ? encoding.angle.field : null;\n        const sanitizedFields = [sanitizedRows, sanitizedColumns];\n\n        [rows, columns].forEach((fieldType, typeIndex) => {\n            fieldType.forEach((fieldSet, i) => fieldSet.forEach((field) => {\n                if (field.toString() !== radius && field.toString() !== angle && field.type() !== MEASURE) {\n                    sanitizedFields[typeIndex][i].push(field);\n                }\n            }));\n        });\n        sanitizedColumns = [...new Set(sanitizedColumns)];\n        sanitizedRows = [...new Set(sanitizedRows)];\n        this.fieldInfo({ rows: sanitizedRows, columns: sanitizedColumns });\n        return this.fieldInfo();\n    }\n\n    getRetinalFieldsDomain (dataModels, encoding, facetFields, groupBy) {\n        let sizeField;\n        let colorField;\n        const fields = [];\n        const layers = this.layers();\n        const dataModel = dataModels.parentModel;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const domains = {};\n        if (layers && layers[0]) {\n            const layer = layers[0];\n            const layerEncoding = layer.def.encoding || {};\n\n            [RADIUS, ANGLE, SIZE, COLOR].forEach((encType) => {\n                const field = layerEncoding[encType] ? layerEncoding[encType].field : '';\n                const measureField = fieldsConfig[field] && fieldsConfig[field].def.type === MEASURE;\n                if (encType === SIZE && measureField) {\n                    sizeField = field;\n                }\n                if (encType === COLOR) {\n                    colorField = field;\n                }\n                fieldsConfig[field] && !measureField && fields.push(field);\n            });\n        }\n\n        if (sizeField) {\n            domains[sizeField] = dataModel.groupBy(facetFields, {\n                [sizeField]: 'sum'\n            }).getFieldspace().fieldsObj()[sizeField].domain();\n        }\n\n        if (colorField) {\n            const dm = dataModel.groupBy([...facetFields, ...fields], groupBy.measures);\n            domains[colorField] = dm.getFieldspace().fieldsObj()[colorField].domain();\n        }\n        return domains;\n    }\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof PolarEncoder\n     */\n    getLayerConfig (fields, userLayerConfig) {\n        let layerConfig = [];\n        const {\n                columnFields,\n                rowFields\n            } = fields;\n        const allFields = [...columnFields, ...rowFields];\n\n        allFields.forEach(() => {\n            const encoding = {};\n            let config = {\n                mark: ARC,\n                def: {\n                    encoding\n                }\n            };\n            if (userLayerConfig && userLayerConfig.length > 0) {\n                config = mergeRecursive(config, userLayerConfig[0]);\n            }\n            layerConfig.push(config);\n        });\n        if (layerConfig.length === 0) {\n            layerConfig = userLayerConfig;\n        }\n\n        this.layers(layerConfig);\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     *\n     * @memberof PolarEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n\n        layerArray.length && layerArray.forEach((layer) => {\n            const def = layerFactory.getSerializedConf(layer.mark, layer);\n            serializedLayers.push({\n                mark: layer.mark,\n                def\n            });\n        });\n        return serializedLayers;\n    }\n}\n","import { createRetinalAxis } from './encoder-helper';\nimport { COLOR, SHAPE, SIZE } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class RetinalEncoder\n * @extends {VisualEncoder}\n */\nexport default class RetinalEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     *\n     * @memberof RetinalEncoder\n     */\n    createAxis (axesCreators) {\n        const { fieldsConfig, config } = axesCreators;\n        const newAxes = {};\n\n        [COLOR, SHAPE, SIZE].forEach((axisType) => {\n            newAxes[`${axisType}`] = createRetinalAxis({ axisType, fieldsConfig }, config[axisType]);\n        });\n        return newAxes;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof RetinalEncoder\n     */\n    static type () {\n        return 'retinal';\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof RetinalEncoder\n     */\n    getLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n        userLayerConfig.forEach((e) => {\n            const config = e;\n            [COLOR, SHAPE, SIZE].forEach((axis) => {\n                if (encodingConfigs[axis] && encodingConfigs[axis].field) {\n                    const def = config.def;\n                    if (config.def instanceof Array) {\n                        def.forEach((conf) => {\n                            conf.encoding = conf.encoding || {};\n                            !conf.encoding[axis] && (conf.encoding[axis] = {});\n                            conf.encoding[axis].field = encodingConfigs[axis].field;\n                        });\n                    } else {\n                        def.encoding = def.encoding || {};\n                        !def.encoding[axis] && (def.encoding[axis] = {});\n                        def.encoding[axis].field = encodingConfigs[axis].field;\n                    }\n                }\n            });\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} context\n     *\n     * @memberof RetinalEncoder\n     */\n    setCommonDomain (context) {\n        const { domains, axes, encoding } = context;\n\n        Object.entries(encoding).forEach((enc) => {\n            if (enc[1] && enc[1].field) {\n                const encType = enc[0];\n                const field = enc[1].field;\n\n                if (field) {\n                    axes[encType].forEach((axis) => {\n                        const domain = domains[field];\n                        !enc[1].domain && axis.updateDomain(domain);\n                    });\n                }\n            }\n        });\n        return axes;\n    }\n}\n","import { Store, dataSelect, FieldType } from 'muze-utils';\nimport { DATA_UPDATE_COUNTER } from '../enums/defaults';\nimport { Variable } from '../variable';\nimport { PolarEncoder, CartesianEncoder } from '../encoder';\nimport {\n    DIMENSION,\n    MEASURE,\n    ORDINAL,\n    LINEAR,\n    ROW,\n    COLUMN,\n    COL,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    COLOR,\n    SIZE,\n    TEMPORAL,\n    SHAPE,\n    INTERACTION,\n    GRID_LINES,\n    GRID_BANDS,\n    HEADER,\n    FACET,\n    X,\n    Y,\n    POLAR\n} from '../enums/constants';\n\n/**\n * Creates an instance of a store which contains the arguments to make the class reactive\n *\n * @return {Object} instance of store\n * @memberof VisualGroup\n */\nexport const initStore = () => new Store({\n    [DATA_UPDATE_COUNTER]: DATA_UPDATE_COUNTER\n});\n\n/**\n *\n *\n * @param {*} arr\n */\nexport const isDistributionEqual = arr => [...arr[0], ...arr[1]].reduce((isEqual, row) => {\n    const rowType = row.type();\n\n    if (rowType === MEASURE || rowType === TEMPORAL) {\n        isEqual = true;\n    }\n    return isEqual;\n}, false);\n\n/**\n *\n *\n */\nexport const initializeCacheMaps = () => ({\n    cellMap: new Map(),\n    xAxesMap: new Map(),\n    yAxesMap: new Map(),\n    entryCellMap: new Map(),\n    exitCellMap: new Map()\n});\n\n/**\n *\n *\n * @param {*} axisName\n * @param {*} id\n */\nexport const getAxisKey = (axisName, ...params) => `${axisName}-axis-${params.join('-')}`;\n\n/**\n *\n *\n * @param {*} rowId\n * @param {*} columnId\n */\nexport const getCellKey = (rowId, columnId) => `cell-${rowId}-${columnId}`;\n\n/**\n *\n *\n * @param {*} config\n *\n */\nexport const extractUnitConfig = (config) => {\n    const unitConfig = {};\n    const attrNames = [INTERACTION, GRID_LINES, GRID_BANDS];\n\n    attrNames.forEach((attr) => {\n        if (config[attr] !== undefined) {\n            unitConfig[attr] = config[attr];\n        }\n    });\n    return unitConfig;\n};\n\n/**\n *\n *\n * @param {*} headers\n * @param {*} index\n * @param {*} rowLength\n *\n * @memberof MatrixResolver\n */\nexport const getHeaderText = (headers, index, rowLength) => {\n    let header = '';\n\n    if (index === rowLength - 1 && headers.length > rowLength) {\n        for (let i = index; i < headers.length - 1; i++) {\n            header += `${headers[i].toString()} / `;\n        }\n        header += headers[headers.length - 1].toString();\n        return header;\n    } else if (headers[index]) {\n        return headers[index].toString();\n    }\n    return '';\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} fieldHeaders\n * @param {*} TextCell\n * @param {*} labelManager\n *\n */\nexport const headerCreator = (fields, fieldHeaders, TextCell, labelManager) => {\n    const headers = fields.length > 0 ? fields[0].map((cell, i) => new TextCell({ type: HEADER }, { labelManager })\n                    .source(getHeaderText(fieldHeaders, i, fields[0].length))\n                    .config({ show: cell.config().show })) : [];\n    return headers;\n};\n\n/**\n *\n *\n * @param {*} variable\n * @param {*} allFields\n *\n */\nexport const findInGroup = (variable, allFields) => {\n    let channel = null;\n\n    [COLOR, SIZE, SHAPE].forEach((e) => {\n        if (this.store.get(e) && variable === this.store.get(e)[0]) {\n            channel = e;\n        }\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    [ROW, COL].forEach((facetType) => {\n        allFields[`${facetType}Facets`].forEach((e) => {\n            if (e.toString() === variable) {\n                channel = { channel: FACET, type: facetType === COL ? COLUMN : ROW };\n            }\n        });\n    });\n\n    if (channel) {\n        return channel;\n    }\n\n    [ROW, COL].forEach((projType) => {\n        allFields[`${projType}Projections`].forEach((e) => {\n            e.forEach((m) => {\n                if (m.toString() === variable) {\n                    channel = projType === COL ? X : Y;\n                }\n            });\n        });\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    return null;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} field\n */\nexport const getAxisType = (fieldsConfig, field) => {\n    let fieldType = ORDINAL;\n\n    if (field && fieldsConfig[field].def.type !== DIMENSION) {\n        fieldType = LINEAR;\n    }\n    return fieldType;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} fieldName\n *\n */\nexport const retriveDomainFromData = (datamodel, fieldName) => {\n    const field = datamodel.getFieldspace().fields.find(d => d.name() === fieldName.toString());\n    return field.domain();\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    let xAxes = null;\n    let yAxes = null;\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n\n    xAxisSet && xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes = xAxes || [];\n        xAxes.push(xAxis);\n    });\n\n    yAxisSet && yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes = yAxes || [];\n        yAxes.push(yAxis);\n    });\n\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n *\n *\n * @param {*} layers\n *\n */\nexport const getEncoder = (layers) => {\n    let encoder = new CartesianEncoder();\n\n    if (layers) {\n        // Figuring out the kind of layers the group will have\n        encoder = layers.every(e => e.mark === 'arc') ? new PolarEncoder() : encoder;\n    }\n    return encoder;\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} userAxisFromConfig\n *\n */\nexport const getHeaderAxisFrom = (type, fields, userAxisFromConfig) => {\n    let axisFrom = userAxisFromConfig[type];\n    let headerFrom = '';\n    const options = type === ROW ? [LEFT, RIGHT] : [BOTTOM, TOP];\n    const [firstField, secondField] = fields;\n    const firstFieldType = i => (firstField.length ? firstField[i].type() : null);\n    const secondFieldType = i => (secondField.length ? secondField[i].type() : null);\n\n    if (firstFieldType(firstField.length - 1) === DIMENSION && secondFieldType(0) === DIMENSION) {\n        headerFrom = axisFrom ? options[1 - options.indexOf(axisFrom)] : options[1];\n\n        if (type === COLUMN && (firstField[firstField.length - 1].toString() === secondField[0].toString())) {\n            axisFrom = TOP;\n        } else {\n            axisFrom = axisFrom || options[0];\n        }\n    } else if (secondFieldType(secondField.length - 1) === DIMENSION) {\n        headerFrom = type === ROW ? RIGHT : BOTTOM;\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else {\n        headerFrom = type === ROW ? LEFT : TOP;\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    if (firstFieldType(firstField.length - 1) === MEASURE && secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    } else if (secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else if (firstFieldType(firstField.length - 1) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    return [headerFrom, axisFrom];\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} layers\n *\n * @memberof MatrixResolver\n */\nexport const setFacetsAndProjections = (context, fieldInfo, encoder) => {\n    const {\n        fields,\n        type\n    } = fieldInfo;\n    const { facets, projections } = encoder.simpleEncoder.getFacetsAndProjections(fields, type);\n\n    context.facets({ [`${type}Facets`]: facets });\n    context.projections({ [`${type}Projections`]: projections });\n\n    return { facets, projections, fields };\n};\n\n/**\n * Creates a selection set from a data set with corresponding attributes\n *\n * @export\n * @param {Selection} sel contains previous selection\n * @param {Object} appendObj Object to be appended\n * @param {Array} data Data based on which the selection is entered/updated/removed\n * @param {Object} [attrs={}] Attributes to be set on the data\n * @return {Selection} Merged selection\n */\nexport const createSelection = (sel, appendObj, data, idFn) => {\n    let selection = sel || dataSelect([]);\n\n    selection = selection.data(data, idFn);\n\n    const enter = selection.enter().append(appendObj);\n    const mergedSelection = enter.merge(selection);\n\n    selection.exit() && selection.exit().remove();\n    return mergedSelection;\n};\n\nconst getRowBorders = (left, right) => {\n    const borders = {};\n    borders.top = false;\n    borders.bottom = false;\n    if (left.length > 1 || right.length > 1) {\n        borders.top = true;\n        borders.bottom = true;\n    }\n    return borders;\n};\n\nconst getColumnsBorders = (top, bottom) => {\n    const borders = {};\n    borders.left = false;\n    borders.right = false;\n    if (top.length || bottom.length) {\n        if ((top[0] && top[0].length > 1) || (bottom[0] && bottom[0].length > 1)) {\n            borders.left = true;\n            borders.right = true;\n        }\n    }\n    return borders;\n};\n\nconst getValueBorders = (rows, columns) => {\n    const borders = { top: true, left: true, bottom: true, right: true };\n    const borderTypeRow = [LEFT, RIGHT];\n    const borderTypeCol = [TOP, BOTTOM];\n    rows.forEach((e, i) => {\n        if (e[0] && e[0].length) {\n            borders[borderTypeRow[i]] = true;\n        } else {\n            borders[borderTypeRow[i]] = false;\n        }\n    });\n    columns.forEach((e, i) => {\n        if (e.length) {\n            borders[borderTypeCol[i]] = true;\n        } else {\n            borders[borderTypeCol[i]] = false;\n        }\n    });\n\n    return borders;\n};\n\nexport const getBorders = (matrices, encoder) => {\n    let showRowBorders = { top: false, bottom: false };\n    let showColBorders = { left: false, right: false };\n    let showValueBorders = { top: false, bottom: false, left: false, right: false };\n    const {\n        rows,\n        columns,\n        values: valueMatrix\n    } = matrices;\n    const [leftRows, rightRows] = rows;\n    const [topColumns, bottomColumns] = columns;\n    const {\n        rowDimensions,\n        columnDimensions,\n        rowTemporalFields,\n        columnTemporalFields,\n        columnMeasures,\n        rowMeasures\n    } = encoder.fieldInfo();\n    const allDimensionLength = rowDimensions.length + columnDimensions.length;\n    const allMeasuresLength = rowMeasures.length + columnMeasures.length;\n    const allTemporalFieldsLength = rowTemporalFields.length + columnTemporalFields.length;\n\n    if (encoder.constructor.type() === POLAR) {\n        if (!allDimensionLength) {\n            return { showRowBorders, showColBorders, showValueBorders };\n        }\n    } else if (!allMeasuresLength && !allTemporalFieldsLength && allDimensionLength <= 2) {\n        return { showRowBorders, showColBorders, showValueBorders };\n    }\n\n    showRowBorders = getRowBorders(leftRows, rightRows);\n    showColBorders = getColumnsBorders(topColumns, bottomColumns);\n    showValueBorders = getValueBorders([leftRows, rightRows], [topColumns, bottomColumns]);\n\n    if (valueMatrix.length > 1) {\n        showValueBorders.top = true;\n        showValueBorders.bottom = true;\n    }\n    if (valueMatrix.length && valueMatrix[0].length > 1) {\n        showValueBorders.left = true;\n        showValueBorders.right = true;\n    }\n    return { showRowBorders, showColBorders, showValueBorders };\n};\n\nexport const getFieldsFromSuppliedLayers = (suppliedLayerConfig, fieldsConfig) => {\n    let fields = [];\n    const encodingArr = suppliedLayerConfig.map(conf => (conf.encoding || {}));\n    fields = [...fields, [].concat(...encodingArr.map(enc => Object.values(enc).map(d => d.field)))];\n    fields = fields.filter(field => fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n    return fields;\n};\n\nexport const extractFields = (facetsAndProjections, layerFields) => {\n    const fields = Object.values(facetsAndProjections).map((arr) => {\n        const flattenArray = [].concat(...arr);\n        return [].concat(...flattenArray.map((field) => {\n            if (field instanceof Variable) {\n                return field.getMembers();\n            }\n            return field;\n        }));\n    });\n    return [].concat(...fields, ...layerFields);\n};\n","import Selection from './selection';\n/**\n * This function applies a selection operation on a data array.\n *\n * @export\n * @param {Array} [data=[]] The data array to be observed.\n * @return {Selection} Instance of a selection.\n */\nexport default function dataSelect (data = []) {\n    return new Selection(data);\n}\n\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: false\n    },\n    [ACTIONS.HOVER]: {\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.LONGTOUCH]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: true\n    },\n    [ACTIONS.TOUCHDRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: true\n    },\n    [ACTIONS.CLICK]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: false\n    }\n};\n","import {\n    FieldType,\n    getDependencyOrder,\n    getObjProp,\n    defaultValue,\n    objectIterator,\n    unionDomain,\n    makeElement,\n    DimensionSubtype,\n    getClosestIndexOf,\n    toArray,\n    MeasureSubtype\n} from 'muze-utils';\nimport { layerFactory } from '@chartshq/visual-layer';\n\nexport const getDimensionMeasureMap = (layers, fieldsConfig) => {\n    const retinalEncodingsAndMeasures = {};\n\n    layers.forEach((layer) => {\n        const {\n            colorField,\n            sizeField,\n            shapeField,\n            xField,\n            yField\n        } = layer.encodingFieldsInf();\n        const measures = [xField, yField].filter(field => fieldsConfig[field] && fieldsConfig[field].def.type ===\n            FieldType.MEASURE);\n        [colorField, sizeField, shapeField].forEach((field) => {\n            if (fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                !retinalEncodingsAndMeasures[field] && (retinalEncodingsAndMeasures[field] = []);\n                retinalEncodingsAndMeasures[field].push(...measures);\n            }\n        });\n    });\n\n    for (const key in retinalEncodingsAndMeasures) {\n        if ({}.hasOwnProperty.call(retinalEncodingsAndMeasures, key)) {\n            retinalEncodingsAndMeasures[key] = [...new Set(retinalEncodingsAndMeasures[key])];\n        }\n    }\n    return retinalEncodingsAndMeasures;\n};\n\nexport const transformDataModels = (transform, dataModel) => {\n    const dataModels = {};\n    for (const key in transform) {\n        if ({}.hasOwnProperty.call(transform, key)) {\n            const transformVal = transform[key];\n            dataModels[key] = transformVal(dataModel);\n        }\n    }\n\n    return dataModels;\n};\n\nexport const getLayerFromDef = (context, definition, existingLayer, namespaces) => {\n    let instances = existingLayer;\n    const dependencies = context._layerDeps;\n    const metaInf = context.metaInf();\n    if (!existingLayer) {\n        instances = layerFactory.getLayerInstance(definition);\n        toArray(instances).forEach((inst, i) => {\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: namespaces[i]\n            });\n            inst.store(context.store());\n        });\n    }\n    const layers = {};\n    const instanceArr = toArray(instances);\n    definition = toArray(definition);\n    definition.reduce((acc, def, idx) => {\n        const instance = instanceArr[idx];\n        instance.config(def);\n        instance.dependencies(dependencies);\n        instance.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        if (def.name) {\n            instance.alias(def.name);\n        }\n        layers[instance.alias()] = instance;\n        return acc;\n    }, {});\n    return layers;\n};\n\nexport const resolveEncodingTransform = (layerInst, store) => {\n    const encodingTransform = layerInst.config().encodingTransform || {};\n    const resolvable = encodingTransform.resolvable;\n    let depArr = [];\n    if (resolvable) {\n        const resolved = resolvable(store);\n        depArr = resolved.depArr;\n        layerInst.encodingTransform(resolved.fn);\n    } else if (encodingTransform instanceof Function) {\n        layerInst.encodingTransform(encodingTransform);\n    }\n    return depArr;\n};\n\nexport const createLayers = (context, layerDefinitions) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    const store = {\n        layers: {},\n        components: {\n            unit: context\n        }\n    };\n    let layerIndex = 0;\n    let layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef, i) => {\n        const mark = layerDef.mark;\n        const definition = layerDef.def;\n        const markId = `${mark}-${i}`;\n        const defArr = toArray(definition);\n        defArr.forEach((def) => {\n            def.order = layerDef.order + layerIndex;\n        });\n        layerIndex += defArr.length;\n        const instances = getLayerFromDef(context, definition, layersMap[markId], i);\n        store.layers = Object.assign(store.layers, instances);\n        const instanceValues = Object.values(instances);\n        layersArr = layersArr.concat(...instanceValues);\n        layersMap[markId] = instanceValues;\n        markSet[markId] = markId;\n        return layersArr;\n    }, []);\n    store.unit = context;\n    const layerdeps = {};\n    layers.forEach((layer) => {\n        const depArr = resolveEncodingTransform(layer, store);\n        layerdeps[layer.alias()] = depArr;\n    });\n\n    const order = getDependencyOrder(layerdeps);\n    layers = order.map(name => store.layers[name]);\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n    return layers;\n};\n\nexport const sanitizeLayerDef = (layerDefs) => {\n    const sanitizedDefs = [];\n    layerDefs.forEach((layerDef, i) => {\n        const def = layerDef.def;\n        const mark = layerDef.mark;\n        if (!def) {\n            const sConf = layerFactory.getSerializedConf(layerDef.mark, layerDef);\n            if (!sConf.name) {\n                sConf.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push({\n                mark: layerDef.mark,\n                def: sConf\n            });\n        } else {\n            if (!def.name) {\n                def.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push(layerDef);\n        }\n    });\n    return sanitizedDefs;\n};\n\nexport const attachDataToLayers = (layers, dm, transformedDataModels) => {\n    layers.forEach((layer) => {\n        const dataSource = layer.config().source;\n        const dataModel = dataSource instanceof Function ? dataSource(dm) :\n            (transformedDataModels[dataSource] || dm);\n        if (layer.data() !== dataModel) {\n            layer.data(dataModel);\n        }\n    });\n};\n\nexport const attachAxisToLayers = (axes, layers, layerAxisIndex) => {\n    layers.forEach((layer) => {\n        const layerId = layer.id();\n        const axesObj = {};\n\n        objectIterator(axes, (key) => {\n            const axisInf = layerAxisIndex[layerId];\n            if (axisInf) {\n                axes[key] && (axesObj[key] = axes[key][axisInf[key] || 0]);\n            }\n        });\n        Object.keys(axesObj).length && layer.axes(axesObj);\n    });\n};\n\nexport const getLayerAxisIndex = (layers, fields) => {\n    const layerAxisIndex = {};\n    layers.forEach((layer) => {\n        const { axis, encoding } = layer.config();\n        const id = layer.id();\n        ['x', 'y'].forEach((type) => {\n            let index;\n            const field = defaultValue(getObjProp(axis, type), encoding[type] && encoding[type].field);\n            if (fields[type]) {\n                index = fields[type].findIndex(fieldInst => fieldInst.getMembers().indexOf(field) !== -1);\n            } else {\n                index = 0;\n            }\n            !layerAxisIndex[id] && (layerAxisIndex[id] = {});\n            layerAxisIndex[id][type] = index;\n        });\n    });\n    return layerAxisIndex;\n};\n\nexport const unionDomainFromLayers = (layers, axisFields, layerAxisIndex, fieldsConfig) => {\n    let domains = {};\n    layers = layers.filter(layer => layer.getDataDomain() !== null);\n    layers.forEach((layer) => {\n        let domainValues = {};\n        const config = layer.config();\n        const encoding = config.encoding;\n        const layerDomain = layer.getDataDomain();\n        const layerId = layer.id();\n\n        if (layerDomain !== null && config.calculateDomain !== false) {\n            domainValues = Object.entries(layerDomain);\n            domains = domainValues.reduce((fieldDomain, domain) => {\n                const encodingType = domain[0];\n                const field = encoding[encodingType].field;\n                const axisIndex = layerAxisIndex[layerId][encodingType];\n                if (encodingType in axisFields) {\n                    const fieldStr = `${axisFields[encodingType][axisIndex]}`;\n                    fieldDomain[fieldStr] = fieldDomain[fieldStr] || [];\n                    fieldDomain[fieldStr] = unionDomain(([fieldDomain[fieldStr], domain[1]]),\n                        fieldsConfig[field].def.subtype ? fieldsConfig[field].def.subtype :\n                                fieldsConfig[field].def.type);\n                } else {\n                    fieldDomain[encodingType] = domain[1];\n                }\n                return fieldDomain;\n            }, domains);\n        }\n    });\n    return domains;\n};\n\nexport const renderLayers = (context, container, layers, measurement) => {\n    context._lifeCycleManager.notify({ client: layers, action: 'beforedraw', formalName: 'layer' });\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const orderedLayers = context.layers().sort((a, b) => a.config().order - b.config().order);\n    const layerParentGroup = makeElement(container, 'g', [1], `${classPrefix}-layer-group`);\n    const layerDepOrder = getDependencyOrder(context._layerDepOrder);\n    const groups = {};\n    makeElement(layerParentGroup, 'g', orderedLayers, null, {\n        update: (group, layer) => {\n            groups[layer.alias()] = {\n                group,\n                layer\n            };\n        }\n    });\n    const layerSeq = layerDepOrder.map(name => groups[name]);\n    layerSeq.forEach((o) => {\n        const layer = o.layer;\n        const group = o.group;\n        layer.measurement(measurement);\n        layer.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        layer.config().render !== false && layer.mount(group.node());\n    });\n    return this;\n};\n\nexport const getNearestDimensionalValue = (context, position) => {\n    const fields = context.fields();\n    if (!fields.x.length || !fields.y.length) {\n        return null;\n    }\n    const data = context.data();\n    const axes = context.axes();\n    const fieldsConfig = data.getFieldsConfig();\n    const xField = getObjProp(fields, 'x', 0).getMembers()[0];\n    const yField = getObjProp(fields, 'y', 0).getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n\n    const entryVal = [['x', xFieldType, xField], ['y', yFieldType, yField]].find(entry =>\n        entry[1] === DimensionSubtype.CATEGORICAL || entry[1] === DimensionSubtype.TEMPORAL);\n\n    if (!entryVal || (xFieldType !== MeasureSubtype.CONTINUOUS && yFieldType !== MeasureSubtype.CONTINUOUS)) {\n        return null;\n    }\n    const field = entryVal[2];\n    const index = fieldsConfig[field].index;\n    let key = axes[entryVal[0]][0].invert(position[entryVal[0]]);\n    if (entryVal[1] === DimensionSubtype.TEMPORAL) {\n        const filterData = [...new Set(data.getData().data.map(d => d[index]))];\n        key = filterData[getClosestIndexOf(filterData, key)];\n    }\n\n    return key !== undefined ? [[field], [key]] : null;\n};\n\nexport const getLayersBy = (layers, searchBy, value) => layers.filter((layer) => {\n    const name = searchBy === 'type' ? layer.constructor.formalName() : layer.alias();\n    return name === value;\n});\n\nexport const removeLayersBy = (layers, searchBy, value) => {\n    layers.filter((inst) => {\n        const name = searchBy === 'type' ? inst.config().mark : inst.alias();\n        if (name === value) {\n            inst.remove();\n            return false;\n        }\n        return true;\n    });\n};\n\nexport const createSideEffectGroup = (container, className) => makeElement(container, 'g', [1], className).node();\n\nexport const createRenderPromise = (unit) => {\n    const renderedPromise = unit._renderedPromise;\n    renderedPromise.then(() => {\n        unit._renderedPromise = new Promise((resolve) => {\n            unit._renderedResolve = resolve;\n        });\n        createRenderPromise(unit);\n    });\n};\n","import { getObjProp, defaultValue, makeElement, DimensionSubtype, DataModel } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport { GRIDLINEPARENTGROUPCLASS, GRIDBANDPARENTGROUPCLASS } from '../enums/constants';\nimport { TIMEDIFFS } from '../enums/reactive-props';\n\nconst LINEAR = ScaleType.LINEAR;\n\nconst getLayerDefinition = (context, axes, type, orientation) => {\n    let encoding;\n    const config = context.config();\n    const { classPrefix, gridLines, gridBands } = config;\n    const gridLineColor = gridLines.color;\n    const zeroLineColor = gridLines.zeroLineColor;\n    const defClassName = type === 'band' ? gridBands.defClassName : gridLines.defClassName;\n    const gridBandColor = gridBands[orientation].color;\n    const axis = axes[orientation][0];\n    const isLinearScale = axis.constructor.type() === LINEAR;\n\n    if (type === 'band' && isLinearScale) {\n        encoding = {\n            [orientation]: `${orientation}value`,\n            [`${orientation}0`]: `${orientation}value0`\n        };\n    } else {\n        encoding = {\n            [orientation]: isLinearScale ? `${orientation}value` : `${orientation}dim`\n        };\n    }\n    encoding.color = {\n        value: (data, i) => {\n            const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n            if (type === 'band') {\n                return gridBandColor[i % 2];\n            }\n            return isNegativeDomain && data[orientation] === 0 ? zeroLineColor : gridLineColor;\n        }\n    };\n\n    return {\n        definition: {\n            defClassName: `${defClassName}-${orientation}`,\n            className: config.className,\n            individualClassName: (data, i) => {\n                let className;\n                const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n                if (isNegativeDomain && data.y === 0 && type !== 'band') {\n                    className = `${classPrefix}-axis-zero-line`;\n                } else {\n                    className = `${classPrefix}-grid-${type}-${orientation}-${i % 2}`;\n                }\n                return className;\n            },\n            [`pad${orientation.toUpperCase()}`]: type === 'band' ? 0 : undefined,\n            encoding\n        },\n        axes: {\n            [orientation]: axis\n        },\n        interactive: false\n    };\n};\n\nconst getDefaultVisibilty = (show, axis) => {\n    if (axis.constructor.type() === LINEAR) {\n        return show;\n    }\n    return false;\n};\n\nexport const getGridLayerDefinitions = (context, config, type) => ['x', 'y'].map((axisType) => {\n    const axes = context.axes();\n    if (!axes[axisType]) {\n        return null;\n    }\n    const show = defaultValue(config[axisType] && config[axisType].show,\n        getDefaultVisibilty(config.show, axes[axisType][0]));\n\n    return show ? getLayerDefinition(context, axes, type, axisType) : null;\n}).filter(d => d !== null);\n\nexport const getGridLayerData = (axes, fields, fieldsConfig) => {\n    const gridData = {};\n    ['x', 'y'].forEach((type) => {\n        let ticks = axes[type][0].getTickValues();\n        const subtype = getObjProp(fieldsConfig, getObjProp(fields, type, 0).getMembers()[0], 'def', 'subtype');\n        const jsonData = [];\n        const schema = [\n            {\n                name: 'yvalue',\n                type: 'measure'\n            }, {\n                name: 'xvalue',\n                type: 'measure'\n            },\n            {\n                name: 'yvalue0',\n                type: 'measure'\n            }, {\n                name: 'xvalue0',\n                type: 'measure'\n            }, {\n                name: 'xdim',\n                type: 'dimension',\n                subtype\n            }, {\n                name: 'ydim',\n                type: 'dimension',\n                subtype\n            }\n        ];\n        const len = Math.max(ticks.length);\n        ticks = subtype === DimensionSubtype.TEMPORAL ? ticks.map(d => d.getTime()) : ticks;\n        for (let i = 0; i < len; i += 1) {\n            jsonData.push({\n                [`${type}value`]: ticks[i],\n                [`${type}value0`]: ticks[i + 1],\n                [`${type}dim`]: ticks[i],\n                [`${type}dim`]: ticks[i]\n            });\n        }\n        gridData[type] = new DataModel(jsonData, schema);\n    });\n    return gridData;\n};\n\nexport const createGridLineLayer = (context) => {\n    const vuConf = context.config();\n    const metaInf = context.metaInf();\n    ['band', 'line'].forEach((type) => {\n        let mark;\n        let config;\n        let instances;\n        if (type === 'band') {\n            mark = 'bar';\n            config = vuConf.gridBands;\n            instances = context._gridbands;\n        } else {\n            mark = 'tick';\n            config = vuConf.gridLines;\n            instances = context._gridlines;\n        }\n        const definitions = getGridLayerDefinitions(context, config, type);\n\n        definitions.forEach((atomicDef, i) => {\n            let layer;\n            const definition = atomicDef.definition;\n            const axesObj = atomicDef.axes;\n            const sConf = layerFactory.getSerializedConf(mark, definition);\n            sConf.mark = mark;\n            if (!instances[i]) {\n                layer = layerFactory.getLayerInstance(sConf);\n                layer.dependencies(context._layerDeps);\n            } else {\n                layer = instances[i];\n            }\n\n            layer\n                            .metaInf({\n                                unitRowIndex: metaInf.rowIndex,\n                                unitColIndex: metaInf.colIndex,\n                                namespace: `${metaInf.namespace}${type}${i}`\n                            })\n                            .store(context.store())\n                            .config(sConf)\n                            .dataProps({\n                                timeDiffs: context.store().get(TIMEDIFFS)\n                            })\n                            .axes(axesObj);\n            instances[i] = layer;\n        });\n    });\n};\n\nexport const attachDataToGridLineLayers = (context) => {\n    const axes = context.axes();\n    const measurement = {\n        width: context.width(),\n        height: context.height()\n    };\n\n    const gridLayerData = getGridLayerData(axes, context.fields(), context.data().getFieldsConfig());\n    [].concat(...context._gridbands, ...context._gridlines).forEach((inst) => {\n        inst.data(inst.axes().x ? gridLayerData.x : gridLayerData.y).measurement(measurement);\n    });\n};\n\nexport const renderGridLineLayers = (context, container) => {\n    const axes = context.axes();\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n\n    if (axes && ((axes.x && axes.x.length) || (axes.y && axes.y.length))) {\n        [[context._gridlines, `${classPrefix}-${GRIDLINEPARENTGROUPCLASS}`],\n            [context._gridbands, `${classPrefix}-${GRIDBANDPARENTGROUPCLASS}`]].forEach((entry) => {\n                const [instances, parentGroupClass] = entry;\n                const mountPoint = makeElement(container, 'g', [1], `.${parentGroupClass}`);\n                const className = `${parentGroupClass}-group`;\n                makeElement(mountPoint, 'g', instances, `.${className}`, {\n                    update: (group, instance) => {\n                        instance.dataProps({ timeDiffs: context._timeDiffs }).mount(group.node());\n                    }\n                });\n            });\n    }\n};\n","import { CLASSPREFIX, CONSOLIDATED } from './enums/constants';\n\n/**\n * Returns the default configuration of the visual unit\n * @return {Object} Default configuration of visual unit\n */\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'visual-unit',\n    className: '',\n    trackerClassName: 'visual-unit-tracker',\n    gridLines: {\n        defClassName: 'axis-grid-lines',\n        className: '',\n        show: true,\n        color: '#efefef',\n        zeroLineColor: '#b6b6b6'\n    },\n    gridBands: {\n        defClassName: 'axis-grid-bands',\n        className: '',\n        show: false,\n        y: {\n            color: ['#fff', '#fbfbfb']\n        },\n        x: {\n            color: ['#fff', '#f9f9f9']\n        }\n    },\n    arcLayerClassName: 'layer-arc',\n    interaction: {\n        tooltip: {\n            mode: CONSOLIDATED\n        }\n    },\n    sideEffectClassName: 'side-effect-container'\n};\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const GRIDBANDPARENTGROUPCLASS = 'grid-bands';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const RETINAL_FIELDS = 'retinalFields';\nexport const PARENT_ALIAS = 'parentAlias';\nexport const LAYERS = 'layers';\nexport const CACHED_DATA = 'cachedData';\nexport const STORE = 'store';\n","import { mergeRecursive } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { CONFIG, LAYERDEFS, TRANSFORM, DATA, LAYERS, TRANSFORMEDDATA } from './enums/reactive-props';\nimport { sanitizeLayerDef } from './helper';\n\nexport default {\n    [CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig) => (\n                mergeRecursive(oldConfig || mergeRecursive({}, defaultConfig), config)\n            )\n        }\n    },\n    [LAYERDEFS]: {\n        value: null,\n        meta: {\n            preset: layerDef => sanitizeLayerDef(layerDef)\n        }\n    },\n    [TRANSFORM]: {\n        value: null\n    },\n    [LAYERS]: {\n        value: null\n    },\n    [DATA]: {\n        value: null,\n        meta: {\n            preset: (data, context) => {\n                if (context._cache) {\n                    const cachedData = context.cachedData();\n                    context.cachedData([...cachedData, data]);\n                } else {\n                    const oldData = context.data();\n                    oldData && oldData.unsubscribe('propagation');\n                    context.cachedData([data]);\n                }\n            }\n        }\n    },\n    [TRANSFORMEDDATA]: {\n        value: null,\n        meta: {\n            addAsMethod: false\n        }\n    }\n};\n","export const CONFIG = 'config';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNT = 'mount';\nexport const TRANSFORM = 'transform';\nexport const TRANSFORMEDDATA = 'transformedData';\nexport const DATADOMAIN = 'dataDomain';\nexport const FIELDS = 'fields';\nexport const TIMEDIFFS = 'timeDiffs';\nexport const LAYERAXISINDEX = 'layerAxisIndex';\nexport const LAYERS = 'layers';\nexport const DOMAIN = 'domain';\n\n","import { DimensionSubtype, STATE_NAMESPACES } from 'muze-utils';\nimport * as PROPS from './enums/reactive-props';\nimport {\n    transformDataModels,\n    getDimensionMeasureMap,\n    attachDataToLayers,\n    attachAxisToLayers,\n    unionDomainFromLayers\n} from './helper';\n\nimport { createGridLineLayer, attachDataToGridLineLayers } from './helper/grid-lines';\n\nconst removeExitLayers = (layerDefs, context) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    layerDefs.forEach((layerDef, i) => {\n        const id = `${layerDef.mark}-${i}`;\n        markSet[id] = true;\n    });\n\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n};\n\nexport const calculateDomainListener = (context, namespace) => () => {\n    const domain = unionDomainFromLayers(context.layers(), context.fields(), context._layerAxisIndex,\n        context.data().getFieldsConfig());\n    context.store().commit(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${namespace}`, domain);\n};\n\nexport const listenerMap = (context, namespace, metaInf) => ([\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            config && context.firebolt().config(config.interaction);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.LAYERDEFS}`],\n        listener: ([, layerDefs]) => {\n            const fieldsVal = context.fields();\n            if (layerDefs && fieldsVal) {\n                removeExitLayers(layerDefs, context);\n                const axes = context.axes();\n                if (axes.x || axes.y) {\n                    const props = [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.rowIndex}0`,\n                        `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.colIndex}0`];\n                    const store = context.store();\n                    const listenerInf = {\n                        namespace: namespace.local,\n                        key: 'gridLineListener'\n                    };\n                    store.unsubscribe(listenerInf);\n                    store.registerChangeListener(props, () => {\n                        attachDataToGridLineLayers(context);\n                    }, false, listenerInf);\n                }\n\n                context.addLayer(layerDefs);\n                context._lifeCycleManager.notify({\n                    client: context.layers(),\n                    action: 'initialized',\n                    formalName: 'layer'\n                });\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`],\n        listener: ([, dataModel]) => {\n            const axisFields = context.fields();\n            const axesObj = context.axes();\n            if (dataModel && axisFields && axesObj) {\n                const timeDiffs = {};\n                const timeDiffsByField = {};\n                ['x', 'y'].forEach((type) => {\n                    const field = axisFields[type][0];\n                    if (field && field.subtype() === DimensionSubtype.TEMPORAL) {\n                        timeDiffs[type] = field.getMinDiff();\n                        timeDiffsByField[field] = timeDiffs[type];\n                        axesObj[type].forEach(axis => axis.minDiff(timeDiffs[type]));\n                    }\n                });\n                context._timeDiffsByField = timeDiffsByField;\n                context._timeDiffs = timeDiffs;\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: () => {\n            createGridLineLayer(context);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`,\n            `${namespace.local}.${PROPS.TRANSFORM}`],\n        listener: ([, dataModel], [, transform]) => {\n            if (dataModel) {\n                const dataModels = transformDataModels(transform, dataModel);\n                context.store().commit(`${namespace.local}.${PROPS.TRANSFORMEDDATA}`, dataModels);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.TRANSFORMEDDATA}`,\n            `${namespace.local}.${PROPS.LAYERS}`],\n        listener: ([, transformedData], [, layers]) => {\n            const layerAxisIndexVal = context._layerAxisIndex;\n            const axesVal = context.axes();\n            const dataModel = context.data();\n            if (transformedData && layers && axesVal && layerAxisIndexVal) {\n                context._lifeCycleManager.notify({ client: layers, action: 'beforeupdate', formalName: 'layer' });\n                const model = context.store().model;\n                layers.forEach(lyr => lyr.disableUpdate());\n                attachDataToLayers(layers, dataModel, transformedData);\n                model.lock();\n                layers.forEach((lyr) => {\n                    lyr.enableUpdate().domain(lyr._domain);\n                });\n                model.unlock();\n                context._dimensionMeasureMap = getDimensionMeasureMap(layers,\n                    dataModel.getFieldsConfig(), context.retinalFields());\n                attachAxisToLayers(axesVal, layers, layerAxisIndexVal);\n                context._lifeCycleManager.notify({ client: layers, action: 'updated', formalName: 'layer' });\n            }\n        }\n    }\n]);\n","import { FACET_BY_FIELDS, RETINAL_FIELDS, PARENT_ALIAS, LAYERS, CACHED_DATA } from './enums/constants';\n\nexport const PROPS = {\n    [FACET_BY_FIELDS]: {},\n    [RETINAL_FIELDS]: {},\n    [PARENT_ALIAS]: {},\n    [LAYERS]: {},\n    [CACHED_DATA]: {},\n    detailFields: {},\n    axes: {},\n    fields: {},\n    metaInf: {},\n    registry: {},\n    width: {},\n    height: {},\n    parentContainerInf: {}\n};\n","import { CommonProps } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { DATA } from '../enums/reactive-props';\n\nexport const initSideEffects = (sideEffects, firebolt) => {\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            sideEffects[key] instanceof SpawnableSideEffect && sideEffects[key].drawingContext(() => {\n                const context = firebolt.context;\n                return context.getDrawingContext();\n            });\n        }\n    }\n};\n\nexport const clearActionHistory = (context) => {\n    const actionHistory = context._actionHistory;\n    for (const key in actionHistory) {\n        if (actionHistory[key].isMutableAction) {\n            delete context._actionHistory[key];\n        }\n    }\n};\n\nexport const dispatchQueuedSideEffects = (context) => {\n    const queuedSideEffects = context._queuedSideEffects;\n    Object.entries(queuedSideEffects).forEach((entry) => {\n        const sideEffect = entry[1];\n        context.dispatchSideEffect(sideEffect.name, ...sideEffect.params);\n    });\n    context._queuedSideEffects = {};\n};\n\nexport const registerListeners = (firebolt) => {\n    const context = firebolt.context;\n    const store = context.store();\n\n    store.registerImmediateListener([`local.units.${context.metaInf().namespace}.${DATA}`], (dataModel) => {\n        const dm = dataModel[1];\n\n        if (dm) {\n            firebolt.createSelectionSet(firebolt.context.data().getData().uids);\n            firebolt.initializeSideEffects();\n            const originalData = firebolt.context.cachedData()[0];\n            firebolt.attachPropagationListener(originalData);\n        }\n    });\n\n    store.registerChangeListener([`local.units.${context.metaInf().namespace}.${DATA}`], () => {\n        if (!firebolt.context.mount()) {\n            const originalData = firebolt.context.cachedData()[0];\n            originalData.unsubscribe('propagation');\n        }\n    });\n\n    context._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW],\n        ([, onlayerdraw]) => {\n            if (onlayerdraw) {\n                dispatchQueuedSideEffects(firebolt);\n                clearActionHistory(firebolt);\n            }\n        });\n};\n","import { DimensionSubtype } from 'muze-utils';\n\nconst getRangeFromData = (instance, selectionDataModel, propConfig) => {\n    let criteria;\n    const dataObj = selectionDataModel[0].getData();\n    const propCriteria = propConfig.payload.criteria;\n    const sourceIdentifiers = propConfig.sourceIdentifiers;\n    const schema = dataObj.schema;\n    const fieldMap = instance.data().getFieldsConfig();\n    const data = dataObj.data;\n    const isActionSourceSame = instance.id() === propConfig.sourceId;\n\n    if (isActionSourceSame) {\n        criteria = propCriteria;\n    } else {\n        criteria = (sourceIdentifiers !== null) ? schema.reduce((acc, obj, index) => {\n            let range;\n            const field = obj.name;\n            const fieldObj = fieldMap[field];\n            const type = fieldObj && (fieldObj.def.subtype ? fieldObj.def.subtype : fieldObj.def.type);\n            const isDimension = type === DimensionSubtype.CATEGORICAL;\n\n            if (!fieldObj) {\n                return acc;\n            }\n\n            if (!isDimension) {\n                range = [Math.min(...data.map(d => d[index])), Math.max(...data.map(d => d[index]))];\n            } else {\n                range = data.map(d => d[index]);\n            }\n            acc[field] = range;\n            return acc;\n        }, {}) : null;\n    }\n    return criteria;\n};\n\nexport const payloadGenerator = {\n    brush: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const criteria = getRangeFromData(instance, selectionDataModel, propConfig);\n        const payload = Object.assign({}, propPayload);\n        payload.criteria = criteria;\n        return payload;\n    },\n\n    __default: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const sourceIdentifiers = propConfig.sourceIdentifiers;\n        const dataObj = selectionDataModel[0].getData();\n        let schema = dataObj.schema;\n        const payload = Object.assign({}, propPayload);\n        schema = dataObj.schema;\n        const data = dataObj.data;\n        const sourceFields = schema.map(d => d.name);\n        payload.criteria = !sourceIdentifiers && selectionDataModel[0].isEmpty() ? null :\n            [sourceFields, ...data];\n        payload.sourceFields = sourceIdentifiers ? sourceIdentifiers.getSchema().map(d => d.name) : [];\n        return payload;\n    }\n};\n\n","import { isSimpleObject, FieldType, DataModel } from 'muze-utils';\n\nconst getModelWithFacetData = (dm, data) => {\n    const dataObj = dm.getData();\n    const schema1 = dataObj.schema;\n    const data1 = dataObj.data;\n    const jsonData = [];\n    const schema2 = data[0].map(d => ({\n        name: `${d}`,\n        type: FieldType.DIMENSION\n    }));\n    const data2 = data[1];\n\n    data1.forEach((d) => {\n        const tuple = {};\n        schema1.forEach((obj, i) => {\n            tuple[obj.name] = d[i];\n        });\n        schema2.forEach((obj, i) => {\n            tuple[obj.name] = data2[i];\n        });\n        jsonData.push(tuple);\n    });\n\n    return new DataModel(jsonData, [...schema1, ...schema2]);\n};\n\nexport const propagateValues = (instance, action, config = {}) => {\n    let propagationData;\n    const payload = config.payload;\n    const selectionSet = config.selectionSet;\n    const propagationFieldInf = config.propagationFields[action] || {};\n    const propagationFields = propagationFieldInf.fields || [];\n    const append = propagationFieldInf.append;\n    const criteria = payload.criteria;\n    const context = instance.context;\n    const dataModel = context.cachedData()[0];\n    const sourceId = context.id();\n    const sideEfffects = instance.sideEffects();\n    const behaviourEffectMap = instance._behaviourEffectMap;\n    const mergedModel = selectionSet.mergedEnter.model;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    payload.sourceUnit = sourceId;\n    payload.action = action;\n    payload.sourceCanvas = context.parentAlias();\n    const propagationBehaviourMap = instance._propagationBehaviourMap;\n    const propagationBehaviour = propagationBehaviourMap[action] || action;\n\n    let propFields = [];\n    if (criteria === null) {\n        propagationData = null;\n    } else if (isSimpleObject(criteria)) {\n        propFields = Object.keys(criteria || {});\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    } else {\n        propFields = criteria[0];\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    }\n\n    const facetByFields = context.facetByFields();\n    if (propagationData !== null && propagationFields.length) {\n        const fields = propagationData.getData().schema.map(d => d.name);\n        propagationData = getModelWithFacetData(propagationData, facetByFields);\n        propFields = append ? [...fields, ...propagationFields] : propagationFields;\n        propagationData = propagationData.project(propFields);\n    }\n\n    let propagateInterpolatedValues = false;\n    if (propFields.length && propFields.every(field => fieldsConfig[field] &&\n        fieldsConfig[field].def.type === FieldType.MEASURE)) {\n        propagateInterpolatedValues = true;\n    }\n\n    const groupId = context.parentAlias();\n    payload.action = action;\n    const behaviourInstance = instance._actions.behavioural[propagationBehaviour];\n    const isMutableAction = behaviourInstance ? behaviourInstance.constructor.mutates() : false;\n\n    const filterFn = (entry, propagationConf) => {\n        const effects = behaviourEffectMap[entry.config.action];\n        const mutates = entry.config.groupId ?\n            effects.some(d => sideEfffects[d.name || d].constructor.mutates()) : true;\n        return entry.config.groupId !== propagationConf.groupId && mutates;\n    };\n\n    const sourceBehaviour = instance._actions.behavioural[action];\n    const mutates = sourceBehaviour ? sourceBehaviour.constructor.mutates() : false;\n    let propConfig = {\n        payload,\n        action,\n        criteria: propagationData,\n        isMutableAction: mutates,\n        propagateInterpolatedValues,\n        groupId,\n        sourceId: mutates ? groupId : sourceId,\n        filterFn,\n        enabled: (propConf, firebolt) => (action !== propagationBehaviour ?\n            propConf.payload.sourceCanvas === firebolt.context.parentAlias() : true)\n    };\n\n    dataModel.propagate(propagationData, propConfig, true);\n\n    if (action !== propagationBehaviour) {\n        propConfig = {\n            payload,\n            sourceId: isMutableAction ? groupId : sourceId,\n            criteria: propagationData,\n            isMutableAction,\n            propagateInterpolatedValues,\n            action: propagationBehaviour,\n            groupId,\n            applyOnSource: action === propagationBehaviour,\n            enabled: (propConf, firebolt) => propConf.payload.sourceCanvas !== firebolt.context.parentAlias(),\n            filterFn\n        };\n\n        dataModel.propagate(propagationData, propConfig, true, {\n            filterImmutableAction: (actionInf, propInf) => actionInf.groupId !== propInf.groupId\n        });\n    }\n};\n","import { FieldType } from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\nimport { registerListeners } from './helper';\nimport { payloadGenerator } from './payload-generator';\nimport { propagateValues } from './data-propagator';\n\n/**\n * This class manages the interactions of visual unit. It associates physical actions with\n * behavioural actions. It also propagates the behavioural actions to other datamodels.\n */\nexport default class UnitFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        registerListeners(this);\n    }\n\n    propagate (behaviour, payload, selectionSet, sideEffects) {\n        propagateValues(this, behaviour, {\n            payload,\n            selectionSet,\n            sideEffects,\n            propagationFields: this._propagationFields\n        });\n    }\n\n    getApplicableSideEffects (sideEffects, payload, propagationInf) {\n        const context = this.context;\n        const unitId = context.id();\n        const aliasName = context.parentAlias();\n        const propagationSourceCanvas = propagationInf.propPayload && propagationInf.propPayload.sourceCanvas;\n        const sourceUnitId = propagationInf.propPayload && propagationInf.propPayload.sourceUnit;\n        const sourceSideEffects = this._sourceSideEffects;\n        const sideEffectInstances = this.sideEffects();\n        const actionOnSource = sourceUnitId ? sourceUnitId === unitId : true;\n\n        const applicableSideEffects = payload.sideEffects ? [{\n            effects: payload.sideEffects,\n            behaviours: [payload.action]\n        }] : sideEffects;\n        applicableSideEffects.forEach((d) => {\n            let mappedEffects = d.effects;\n            mappedEffects = mappedEffects.filter((se) => {\n                const mutates = sideEffectInstances[se.name || se].constructor.mutates();\n                if (mutates && propagationInf.isMutableAction === false) {\n                    return false;\n                }\n                if (!actionOnSource && payload.criteria !== null) {\n                    const sideEffectChecker = sourceSideEffects[se.name || se];\n                    return sideEffectChecker ? sideEffectChecker(propagationInf.propPayload, context) : true;\n                }\n                if (propagationSourceCanvas === aliasName || actionOnSource) {\n                    return se.applyOnSource !== false;\n                }\n\n                return true;\n            });\n            d.effects = mappedEffects;\n        });\n        return applicableSideEffects;\n    }\n\n    shouldApplySideEffects (propagate) {\n        return propagate === false;\n    }\n\n    onDataModelPropagation () {\n        return (data, config) => {\n            let isSourceFieldPresent = true;\n            let isMutableAction = false;\n            const propPayload = config.payload;\n            const sourceIdentifiers = config.sourceIdentifiers;\n            const enabledFn = config.enabled;\n            const action = config.action;\n            const payloadFn = payloadGenerator[action] || payloadGenerator.__default;\n\n            if (sourceIdentifiers) {\n                const fieldsConfig = sourceIdentifiers.getFieldsConfig();\n                const sourceIdentifierFields = Object.keys(fieldsConfig);\n                const propFields = Object.keys(data[0].getFieldsConfig());\n                if (!Object.values(fieldsConfig).some(d => d.def.type === FieldType.MEASURE)) {\n                    isSourceFieldPresent = sourceIdentifierFields.some(d => propFields.indexOf(d) !== -1);\n                }\n            }\n\n            const payload = payloadFn(this.context, data, config);\n            const sourceBehaviours = this._sourceBehaviours;\n            const filterFn = sourceBehaviours[action] || sourceBehaviours['*'];\n            let enabled = true;\n\n            if (filterFn) {\n                enabled = filterFn(propPayload || {}, this.context);\n            }\n\n            if (enabledFn) {\n                enabled = enabledFn(config, this) && enabled !== false;\n            }\n\n            if (enabled) {\n                const effects = this._behaviourEffectMap[action];\n                const sideEffectInstances = this.sideEffects();\n                isMutableAction = config.groupId ?\n                    effects.some(d => sideEffectInstances[d.name || d].constructor.mutates()) : config.isMutableAction;\n\n                const propagationInf = {\n                    propagate: false,\n                    data,\n                    propPayload,\n                    sourceIdentifiers,\n                    persistent: false,\n                    isSourceFieldPresent,\n                    sourceId: config.propagationSourceId,\n                    isMutableAction: config.isMutableAction\n                };\n\n                this._actionHistory[action] = {\n                    payload,\n                    propagationInf,\n                    isMutableAction\n                };\n                this.dispatchBehaviour(action, payload, propagationInf);\n            }\n        };\n    }\n\n    prepareSelectionSets (behaviours) {\n        const data = this.context.data();\n        if (data) {\n            this.createSelectionSet(data.getData().uids, behaviours);\n        }\n        return this;\n    }\n\n    initializeSideEffects () {\n        if (this.context.data()) {\n            super.initializeSideEffects();\n        }\n        return this;\n    }\n\n    remove () {\n        this.context.cachedData()[0].unsubscribe('propagation');\n        return this;\n    }\n}\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    Store,\n    setAttrs,\n    getUniqueId,\n    getQualifiedClassName,\n    selectElement,\n    transactor,\n    makeElement,\n    registerListeners,\n    generateGetterSetters,\n    getDataModelFromIdentifiers,\n    isSimpleObject,\n    transposeArray,\n    CommonProps,\n    toArray,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { actionBehaviourMap } from './firebolt/action-behaviour-map';\nimport {\n    renderLayers,\n    getNearestDimensionalValue,\n    removeLayersBy,\n    getLayersBy,\n    getLayerFromDef,\n    getLayerAxisIndex,\n    sanitizeLayerDef,\n    createSideEffectGroup,\n    resolveEncodingTransform,\n    createRenderPromise\n} from './helper';\nimport { renderGridLineLayers } from './helper/grid-lines';\nimport localOptions from './local-options';\nimport { listenerMap, calculateDomainListener } from './listener-map';\nimport {\n    DOMAIN\n} from './enums/reactive-props';\nimport { PROPS } from './props';\nimport UnitFireBolt from './firebolt';\nimport { initSideEffects } from './firebolt/helper';\nimport './styles.scss';\n\nconst FORMAL_NAME = 'unit';\n\n/**\n * Visual Unit is hierarchical component created by {@link VisualGroup}. This component accepts layer definitions\n * and creates concrete layer instances from them, binds data and attaches axis to them. It also retreives the domain\n * from the layers and unions them and sets them on corresponding axis instances. This also creates the parent svg\n * groups for all the layers and delegates the rendering to all the layers.\n *\n * @public\n * @module VisualUnit\n * @class\n */\nexport default class VisualUnit {\n\n    /**\n     * Creates instance of visualization unit.\n     *\n     * @param {Object} registry  Component registry\n     * @param {Object} dependencies  Dependencies required by visual unit.\n     */\n    constructor (registry, dependencies) {\n        this._id = getUniqueId();\n        this._dependencies = dependencies;\n        this._layerDeps = {\n            throwback: new Store({\n                [CommonProps.ON_LAYER_DRAW]: false\n            }),\n            smartLabel: dependencies.smartLabel,\n            lifeCycleManager: dependencies.lifeCycleManager\n        };\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        createRenderPromise(this);\n        this._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW], () => {\n            this._renderedResolve();\n            this._lifeCycleManager.notify({ client: this.layers(), action: 'drawn', formalName: 'layer' });\n        });\n\n        this._lifeCycleManager = dependencies.lifeCycleManager;\n        this._layersMap = {};\n        this._gridlines = [];\n        this._gridbands = [];\n        this._layerNamespaces = {};\n        this._layerAxisIndex = {};\n        this._transformedDataModels = {};\n        layerFactory.setLayerRegistry(registry.layerRegistry);\n        generateGetterSetters(this, PROPS);\n        this.registry(registry);\n        this.cachedData([]);\n    }\n\n    static formalName () {\n        return FORMAL_NAME;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            localOptions\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            this.store().append(`${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}`, {\n                [`${metaInf.namespace}`]: null\n            });\n            const localNs = `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            transactor(this, localOptions, this.store().model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE\n            }, {\n                rowIndex: metaInf.rowIndex,\n                colIndex: metaInf.colIndex\n            });\n            this.firebolt(new UnitFireBolt(this, {\n                physical: physicalActions,\n                behavioural: behaviouralActions,\n                physicalBehaviouralMap: actionBehaviourMap\n            }, sideEffects, behaviourEffectMap));\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Static helper for creates a unit instance\n     *\n     * @param {Object} [id] optional unique identifier for a unit; , id is calculated internally\n     * @param {DataModel} data instance of datamodel\n     * @param {Array.<Layer>} layers layer configuration\n     * @param {Object} config configurtion for the visual unit\n     * @return {VisualUnit} Instance of a unit\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this visual unit. Firebolt dispatches the behavioural actions\n     * when any physical action happens on the elements of visual unit.\n     *\n     * @public\n     *\n     * @return {Firebolt} Instance of firebolt.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Returns the unique id of this visual unit.\n     *\n     * @public\n     * @return {string} Unique identifier.\n     */\n    id () {\n        return this._id;\n    }\n\n    lockModel () {\n        this._store.model.lock();\n        return this;\n    }\n\n    unlockModel () {\n        this._store.model.unlock();\n        return this;\n    }\n\n    timeDiffsByField (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._timeDiffsByField;\n    }\n\n    /**\n     * Renders the visual unit. It creates the layout and renders the axes and layers.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    render (container) {\n        const config = this.config();\n        const { className, defClassName, sideEffectClassName, classPrefix } = config;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const width = this.width();\n        const height = this.height();\n        const containerSelection = selectElement(container).style('position', 'relative');\n\n        this._rootSvg = makeElement(containerSelection, 'svg', [null], className)\n                        .style('width', `${width}px`).style('height', `${height}px`);\n\n        const node = this._rootSvg.node();\n        setAttrs(node, {\n            width,\n            height,\n            class: qualifiedClassName.join(' ')\n        });\n        renderGridLineLayers(this, node);\n        renderLayers(this, node, this.layers(), {\n            width,\n            height\n        });\n        this._sideEffectGroup = createSideEffectGroup(node, `${classPrefix}-${sideEffectClassName}`);\n        const firebolt = this.firebolt();\n        initSideEffects(firebolt.sideEffects(), firebolt);\n        return this;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Caches all the datamodels in an array from the next `data()` call on visual unit until `clearCaching()` or\n     * `resetData()` is called on it.\n     *\n     * @public\n     * @return {VisualUnit} Instance of visual unit.\n     */\n\n    enableCaching () {\n        this._cache = true;\n        return this;\n    }\n\n    /**\n     * Clears all the previous cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    clearCaching () {\n        this._cache = false;\n        this.cachedData([this.cachedData()[0]]);\n        return this;\n    }\n\n    /**\n     * Returns the drawing information from visual unit.Drawing context contains the dimensions of unit and the svg\n     * container of the visual unit.\n     *\n     * @public\n     *\n     * @return {Object} Drawing information.\n     *      ```\n     *          {\n     *              htmlContainer: // Html container of svg container of the visual unit\n     *              svgContainer: // Root svg container\n     *              width: // Width of the visual unit\n     *              height: // Height of the visual unit\n     *              sideEffectGroup: // Svg group for drawing side effect elements.\n     *              parentContainer: // Parent html container of the visual unit.\n     *              xOffset: // x offset space from the starting x position of the container,\n     *              yOffset: // y offset space from the starting y position of the container\n     *          }\n     *      ```\n     */\n    getDrawingContext () {\n        const rootSvg = this._rootSvg && this._rootSvg.node();\n        const width = this.width();\n        const height = this.height();\n        const { el, dimensions } = this.parentContainerInf();\n        return {\n            htmlContainer: this.mount(),\n            svgContainer: rootSvg,\n            width,\n            height,\n            sideEffectGroup: this._sideEffectGroup,\n            parentContainer: el,\n            parentContainerDimensions: dimensions,\n            xOffset: 0,\n            yOffset: 0\n        };\n    }\n\n    /**\n     * Returns the serialized configuration of visual unit.\n     *\n     * @return {Object} serialized configuration\n     */\n    serialize () {\n        return {\n            layers: this.layers().map(layer => layer.serialize()),\n            config: this.config(),\n            axes: this.axes().map(axis => axis.serialize())\n        };\n    }\n\n    mount (...mount) {\n        if (mount.length) {\n            this._mount = mount[0];\n            this.render(mount[0]);\n            this.firebolt().mapActionsAndBehaviour();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     * Adds a new layer to the visual unit. It takes a layer definition and creates layer instances from them. It does\n     * not render the layers. It returns the layer instances in an array. If the layer definition is a composite layer,\n     * then multiple layer instances will be returned in the array.\n     *\n     * To add a layer in the unit,\n     * ```\n     *      unit.addLayer({\n     *          name: 'bullet',\n     *          mark: 'bar',\n     *          encoding: {\n     *              x: 'Year',\n     *              y: 'Acceleration',\n     *              color: 'Origin'\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} layerDef Definition of new layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    addLayer (layerDefinition) {\n        const layerDefinitions = sanitizeLayerDef(toArray(layerDefinition));\n\n        const layersMap = this._layersMap;\n        const markSet = {};\n        const store = {\n            layers: {},\n            components: {\n                unit: this\n            }\n        };\n        let layerIndex = 0;\n        let startIndex = [].concat(...Object.values(this._layersMap)).length;\n        const metaInf = this.metaInf();\n        const props = this._layerNamespaces;\n        const layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef) => {\n            const definition = layerDef.def;\n            const markId = definition.name;\n            const defArr = toArray(definition);\n            const namespaces = [];\n            defArr.forEach((def) => {\n                def.order = layerDef.order + layerIndex;\n                const namespace = `${metaInf.namespace}${startIndex}`;\n                if (!layersMap[markId]) {\n                    startIndex++;\n                    if (definition.calculateDomain !== false) {\n                        props[`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${DOMAIN}.${namespace}`] = true;\n                    }\n                }\n                namespaces.push(namespace);\n            });\n            layerIndex += defArr.length;\n            const instances = getLayerFromDef(this, definition, layersMap[markId], namespaces);\n            store.layers = Object.assign(store.layers, instances);\n            const instanceValues = Object.values(instances);\n            layersArr = layersArr.concat(...instanceValues);\n            layersMap[markId] = instanceValues;\n            markSet[markId] = markId;\n            return layersArr;\n        }, []);\n\n        store.unit = this;\n        const layerdeps = {};\n        const layersArr = [].concat(...Object.values(this._layersMap));\n\n        layersArr.forEach((layer) => {\n            const alias = layer.alias();\n            store.layers[alias] = layer;\n            layerdeps[alias] = [];\n        });\n        layers.forEach((layer) => {\n            const depArr = resolveEncodingTransform(layer, store);\n            layerdeps[layer.alias()] = depArr;\n        });\n\n        this._layerDepOrder = layerdeps;\n        this._layerAxisIndex = Object.assign(this._layerAxisIndex, getLayerAxisIndex(layers, this.fields()));\n        const stateStore = this.store();\n\n        stateStore.unsubscribe({\n            key: 'calculateDomainListener',\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n        });\n        stateStore.registerImmediateListener(Object.keys(props), calculateDomainListener(this, metaInf.namespace),\n            false, {\n                key: 'calculateDomainListener',\n                namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n            });\n        this.layers(layersArr);\n        return layers;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    remove () {\n        const lifeCycleManager = this._dependencies.lifeCycleManager;\n        lifeCycleManager.notify({ client: this, action: 'beforeremove', formalName: 'unit' });\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        this.firebolt().remove();\n        // Remove layers\n        lifeCycleManager.notify({ client: this.layers(), action: 'beforeremove', formalName: 'layer' });\n        this.layers().forEach(layer => layer.remove());\n        lifeCycleManager.notify({ client: this.layers(), action: 'removed', formalName: 'layer' });\n        lifeCycleManager.notify({ client: this, action: 'removed', formalName: 'unit' });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof VisualUnit\n     */\n    getDataModelFromIdentifiers (identifiers, mode, parentModel) {\n        if (identifiers === null) {\n            return null;\n        }\n        const dataModel = parentModel || this.data();\n        return getDataModelFromIdentifiers(dataModel, identifiers, mode);\n    }\n\n    /**\n     * Resets the data of visual unit to original data model. It also clears the cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    resetData () {\n        this.data(this.cachedData()[0]);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getSourceInfo () {\n        return {\n            dimensionMeasureMap: this._dimensionMeasureMap,\n            fields: this.fields(),\n            data: this.data(),\n            axes: this.axes()\n        };\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getDefaultTargetContainer () {\n        const { classPrefix, defClassName } = this.config();\n        return [`.${classPrefix}-${defClassName}`];\n    }\n\n    /**\n     * Returns an array of layer instances which matches the supplied mark type.\n     *\n     * @public\n     *\n     * @param {string} type Mark type of layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    getLayersByType (type) {\n        const layers = getLayersBy(this.layers(), 'type', type);\n        return layers;\n    }\n\n    /**\n     * Returns the layer instance which matches the supplied layer name. If no layer is found, then it returns\n     * undefined.\n     *\n     * @public\n     * @param {string} name Name of layer.\n     *\n     * @return {VisualUnit} Layer instance.\n     */\n    getLayerByName (name) {\n        const layers = getLayersBy(this.layers(), 'name', name);\n        return layers[0];\n    }\n\n    /**\n     * Returns the point located nearest to the supplied x and y position. It returns the unique identifiers of the\n     * point. This function also accepts an additional configuration `getAllPoints` inside `config` object in the third\n     * argument which if set to true, then it returns the identifiers of all the points which falls on the nearest\n     * x value or y value if any one of the field is a dimension. Additionally, a target property is also returned\n     * which contains the identifier of the nearest point. If no nearest point is found, then it returns identifier\n     * as null.\n     *\n     * @public\n     *\n     * @param {number} x X Position of the point from where nearest point is to be found.\n     * @param {number} y Y Position of the point from where nearest point is to be found.\n     * @param {Object} config Additional configuration options.\n     * @param {boolean} config.getAllPoints If true, then returns all the points nearest to the x value or y value if\n     * it is dimension.\n     * @param {Object} config.data Data associated with the nearest point.\n     * @return {Object} Nearest point information\n     * ```\n     *      {\n     *          id: [['Origin'], ['USA'], ['Japan']], // Identifiers of all the points closest to the x value.\n     *          target: [['Origin'], ['Japan']] // Identifier of the nearest point.\n     *      }\n     * ```\n     */\n    getNearestPoint (x, y, config) {\n        let pointObj = {\n            id: null\n        };\n        const dimValue = getNearestDimensionalValue(this, {\n            x,\n            y\n        });\n\n        if (dimValue !== null && config.getAllPoints) {\n            pointObj.id = dimValue;\n            const pointInf = this.getMarkInfFromLayers(x, y, config);\n            pointObj.target = pointInf && pointInf.id ? pointInf.id : pointObj.id;\n            return pointObj;\n        }\n\n        const markInf = this.getMarkInfFromLayers(x, y, config) || { id: null };\n        pointObj = Object.assign({}, markInf);\n\n        pointObj.target = markInf.id;\n        return pointObj;\n    }\n\n    getMarkInfFromLayers (x, y, args) {\n        const layers = this.layers();\n        const len = layers.length;\n        let point = null;\n        // Iterate through the layers array and fetch the nearest point from each layer. If a valid\n        // nearest point is found from any layer, then return that point.\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            const config = layer.config();\n            if (config.interactive !== false) {\n                point = layer.getNearestPoint(x, y, args);\n            }\n            if (point) {\n                return point;\n            }\n        }\n        return point;\n    }\n\n    /**\n     * Get the information of all the marks such as x, y position and size from supplied identifiers. It\n     * returns an array of points whose data matches the given identifiers.\n     *\n     * @public\n     *\n     * @param {Array|Object} identifiers Field names and their corresponding values.\n     * ```\n     * identifiers can be given in an array of array,\n     *      ['Origin', 'Name'], // Names of the fields supplied in first array\n     *      ['USA', 'ford'], // Data values of each field supplied in rest of the arrays.\n     *      ['Japan', 'ford']\n     * or in an object,\n     *      {\n     *          Origin: ['USA']\n     *      }\n     * ```\n     * @param {Object} config Optional configurations which decides which information of the mark will\n     * be retrieved.\n     * @param {boolean} [config.getAllAttrs = false] If true, then returns all the information of each mark.\n     * @param {boolean} [config.getBBox = false] If true, then returns the bounding box of each mark.\n     *\n     * @return {Array} Array of objects containing the information of each point.\n     * ```\n     * By default, the method returns the array of points in this structure,\n     *      [\n     *          {\n     *              x: 20,\n     *              y: 100,\n     *              width: 200,\n     *              height: 100\n     *          }\n     *      ]\n     * If 'config.getAllAttrs' is true, then it returns all the information of each mark,\n     *      [\n     *      // Positions of mark on initial state of transition.\n     *          enter: {\n     *              x: 0,\n     *              y: 0\n     *          },\n     *          // Final positions of the mark\n     *          update: {\n     *              x: 20,\n     *              y: 10\n     *          },\n     *          style: // css styles of each mark\n     *          source: [200, 'USA'] // Row information of each mark\n     *          id: 20 // Row id of each mark\n     *      ]\n     * ```\n     */\n    getPlotPointsFromIdentifiers (identifiers, config = {}) {\n        let points = [];\n        let parsedIdentifiers = identifiers;\n        if (identifiers === null) {\n            return [];\n        }\n        const layers = this.layers();\n        const len = layers.length;\n        if (isSimpleObject(identifiers)) {\n            parsedIdentifiers = [Object.keys(identifiers)];\n            parsedIdentifiers = [...parsedIdentifiers, ...transposeArray(Object.values(identifiers))];\n        }\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            if (layer.config().interactive !== false) {\n                points = [...points, ...layer.getPointsFromIdentifiers(parsedIdentifiers, config)];\n            }\n        }\n        return points;\n    }\n\n    /**\n     * Removes the layer instance which matches the supplied layer name.\n     *\n     * @public\n     * @param {string} name Name of layer\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayerByName (name) {\n        removeLayersBy('name', name);\n        return this;\n    }\n\n    /**\n     * Removes all the layer instances which matches the supplied mark type.\n     *\n     * @public\n     * @param {string} type Mark type of layer.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayersByType (type) {\n        removeLayersBy('type', type);\n        return this;\n    }\n}\n","import { DataModel } from 'muze-utils';\n\nimport { retriveDomainFromData } from './group-utils';\n\n/**\n * Gets name of fields form the variables\n *\n * @param {*} fields1\n * @param {*} [fields2=[]]\n *\n */\nconst getFieldNames = (fields1, fields2 = []) => [fields1, fields2].map(fields => fields.reduce((acc, d) => {\n    acc = [...acc, ...d.getMembers()];\n    return acc;\n}, []));\n\n/**\n * Creates a selected datamodel from a parent datamodel and a set of field names\n *\n * @param {Object} datamodel provided as input\n * @param {Array} fieldNames schema  names\n * @param {Array} fieldValues values of those schema names to be selected\n * @return {Object} creates a new selected datamodel\n */\nconst createSelectedDataModel = (datamodel, fieldNames, fieldValues) =>\n    datamodel.select(fields => fieldNames.every((field, k) => fields[field].value === fieldValues[k]));\n\n/**\n *\n *\n * @param {*} facets\n * @param {*} keyArray\n *\n */\nconst uniqueKeyGenerator = (keyArray, context, depth = 0, val = []) => {\n    const {\n        facets,\n        dataModel,\n        uniqueValues\n    } = context;\n\n    // Get unique keys for the next depth recursively if required\n    if (facets[depth + 1]) {\n        const field = facets[depth];\n        uniqueValues.forEach((value) => {\n            const newDm = dataModel.select(fields => fields[field].value === value);\n            const nextDepthUniqueValues = retriveDomainFromData(newDm, facets[depth + 1]);\n            const newContext = {\n                facets,\n                dataModel: newDm,\n                uniqueValues: nextDepthUniqueValues\n            };\n\n            uniqueKeyGenerator(keyArray, newContext, depth + 1, [...val, value]);\n        });\n    } else {\n        uniqueValues.forEach((value) => {\n            keyArray.push([...val, value]);\n        });\n    }\n};\n\n/**\n * projects row model based on the set of row and/or column and other projection fields\n *\n * @param {Object} datamodel provided as input\n * @return {Object} Projected datamodel\n */\nconst projectRows = (datamodel, projections) => {\n    const {\n        allColumnProjections,\n        rowProjections,\n        optionalProjections\n    } = projections;\n\n    if (rowProjections.length > 0) {\n        return rowProjections.map((projectFields) => {\n            const [projFieldNames, colProjFieldNames] = getFieldNames(projectFields, allColumnProjections);\n            return datamodel.project([...projFieldNames, ...colProjFieldNames, ...optionalProjections]);\n        });\n    }\n    return [datamodel];\n};\n\n/**\n * Adds the datamodels to current row index based on column fields\n *\n * @param {Array} context current context\n * @param {Array} callback List of facets applied to the current datamodel\n */\nconst pushToMatrix = (context, callback) => {\n    let cells = [];\n    const {\n        matrix,\n        datamodel,\n        facetInfo,\n        fieldInfo\n    } = context;\n    // Get projected fields for current row\n    const {\n        rowProjections,\n        colProjections,\n        optionalProjections\n    } = fieldInfo;\n    const {\n        rowIndex,\n        columnIndex\n    } = facetInfo;\n    const rowProj = rowProjections[(rowIndex) % rowProjections.length] || [];\n\n    // Get the cells for the matrix from the return function of the callback on the datamodel.\n    // callback function -> (datamodel, {projections, indices}, facets)\n    if (colProjections.length > 0) {\n        cells = colProjections.map((projectFields, projIdx) => {\n            const [colProjFieldNames, rowProjFieldNames] = getFieldNames(projectFields, rowProj);\n            const projectedDm = datamodel.project([...colProjFieldNames, ...rowProjFieldNames, ...optionalProjections]);\n            const projections = { rowFields: rowProj, columnFields: projectFields };\n            const indices = { rowIndex, columnIndex: columnIndex * colProjections.length + projIdx };\n\n            return callback(projectedDm, { projections, indices }, facetInfo);\n        });\n    } else {\n        const projections = { rowFields: rowProj, columnFields: [] };\n        const indices = { rowIndex, columnIndex };\n\n        cells = [callback(datamodel, { projections, indices }, facetInfo)];\n    }\n\n    matrix[rowIndex] = matrix[rowIndex] || [];\n    matrix[rowIndex].push(...cells);\n};\n\n/**\n * Gets Matrixes for corresponding datamodel, facets and projections\n *\n * @param {Object} dataModel input datamodel\n * @param {Object} fieldMap corresponding fieldmap\n * @param {Array} facetsAndProjections contains the set of facets and projections for the matrices\n * @param {Function} callback Callback executed after datamodels are prepared after sel/proj\n * @return {Object} set of matrices with the corresponding row and column keys\n */\nexport const getMatrixModel = (dataModel, facetsAndProjections, callback) => {\n    let rowDataModels = [];\n    const rowKeys = [];\n    const columnKeys = [];\n    const allColumnProjections = [];\n    const matrix = [];\n    const facetInfo = [];\n\n    const fieldInfo = Object.assign({}, facetsAndProjections);\n    const {\n        rowFacets,\n        colFacets,\n        colProjections\n    } = fieldInfo;\n\n    colProjections.forEach((colProj) => {\n        allColumnProjections.push(...colProj);\n    });\n    fieldInfo.allColumnProjections = allColumnProjections;\n\n    // Performing row selection and projection\n    if (rowFacets.length > 0) {\n        // Get unique values for the root level of facet\n        const field = rowFacets[0].toString();\n        const firstLevelRowKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys in the form of an array of arrays for each row\n        uniqueKeyGenerator(rowKeys, { facets: rowFacets, dataModel, uniqueValues: firstLevelRowKeys });\n\n        // Apply selection -> projection -> row datamodels\n        rowKeys.forEach((val) => {\n            // Create faceted datamodel\n            const [rowFacetFieldNames] = getFieldNames(rowFacets);\n            const selectedDataModel = createSelectedDataModel(dataModel, rowFacetFieldNames, val);\n\n            // Project the datamodel based on the number of projections (based on last levels)\n            facetInfo.push([rowFacets, val]);\n            rowDataModels.push(...projectRows(selectedDataModel, fieldInfo));\n        });\n    } else {\n        // No row facets, hence only row projection\n        rowDataModels.push(...projectRows(dataModel, fieldInfo));\n    }\n\n    // Maintaining set of row datamodels for column resolution\n    rowDataModels = rowDataModels.length > 0 ? rowDataModels : [[]];\n\n    // Performing column selection and projection\n    if (colFacets.length > 0) {\n        const colFacetNames = colFacets.map(d => `${d}`);\n        // Get unique values for the root level of facet\n        const field = colFacetNames[0];\n        const firstLevelColumnKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys to create faceted datamodels: this time for columns\n        uniqueKeyGenerator(columnKeys, {\n            facets: colFacetNames,\n            dataModel,\n            uniqueValues: firstLevelColumnKeys\n        });\n\n        // For each row in the datamodel, apply selection -> projection -> push the projection to matri\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            columnKeys.forEach((val, cIndex) => {\n                matrix[rIndex] = matrix[rIndex] || [];\n\n                // If datamodel is not present in current row, choose parent datamodel\n                const datamodel = dme instanceof DataModel ? dme : dataModel;\n\n                // Selection is made on the datamodel for the current row\n                const selectedDataModel = createSelectedDataModel(datamodel, colFacetNames, val);\n                const context = {\n                    matrix,\n                    datamodel: selectedDataModel,\n                    facetInfo: {\n                        rowFacets: facetInfo[rIndex],\n                        colFacets: [colFacets, val],\n                        rowIndex: rIndex,\n                        columnIndex: cIndex\n                    },\n                    fieldInfo\n                };\n                pushToMatrix(context, callback);\n            });\n        });\n    } else {\n        // No column facets, hence only row projection\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            const context = {\n                matrix,\n                datamodel: dme || dataModel,\n                facetInfo: {\n                    rowFacets: facetInfo[rIndex],\n                    colFacets: [[], []],\n                    rowIndex: rIndex,\n                    columnIndex: 0\n                },\n                fieldInfo\n            };\n\n            pushToMatrix(context, callback);\n        });\n    }\n\n    // Getting column keys\n    const transposedColKeys = columnKeys.length > 0 ? columnKeys[0].map((col, i) =>\n                    columnKeys.map(row => row[i])) : columnKeys;\n\n    return { matrix, rowKeys, columnKeys: transposedColKeys };\n};\n","import { AxisOrientation } from '@chartshq/muze-axis';\nimport { getObjProp, FieldType, STATE_NAMESPACES } from 'muze-utils';\nimport { getMatrixModel } from './matrix-model';\nimport {\n    getCellKey,\n    isDistributionEqual,\n    mutateAxesFromMap,\n    createSelection,\n    getFieldsFromSuppliedLayers,\n    extractFields\n} from './group-utils';\nimport { ROW, ROWS, COLUMNS, COL, LEFT, RIGHT, TOP, BOTTOM, PRIMARY, SECONDARY, X, Y } from '../enums/constants';\n\n/**\n * Updates row and column cells with the geom cell corresponding to the facet keys\n *\n * @param {*} resolver\n * @param {*} facets\n */\nconst updateCells = (resolver, facets, geomCell) => {\n    [ROW, COL].forEach((field) => {\n        const cells = resolver[`${field}Cells`]();\n        const facetKey = facets[`${field}Facets`][1].join();\n\n        !cells[facetKey] && (cells[facetKey] = []);\n        cells[facetKey].push(geomCell);\n        resolver[`${field}Cells`](cells);\n    });\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} datamodel\n * @param {*} fieldInfo\n * @param {*} facets\n *\n */\nexport const createValueCells = (context, datamodel, fieldInfo, facets) => {\n    const {\n        projections,\n        indices\n    } = fieldInfo;\n    const {\n        rowFields,\n        columnFields\n    } = projections;\n    const {\n         rowIndex,\n         columnIndex\n    } = indices;\n    const {\n        suppliedLayers,\n        cell: GeomCell,\n        resolver,\n        config,\n        encoder,\n        detailFields\n    } = context;\n    const axes = resolver.axes();\n    const cacheMaps = resolver.cacheMaps();\n    const matrixLayers = resolver.matrixLayers();\n    const labelManager = resolver.dependencies().smartlabel;\n    const horizontalAxis = resolver.horizontalAxis();\n    const verticalAxis = resolver.verticalAxis();\n    const datamodelTransform = resolver.datamodelTransform();\n    const {\n        entryCellMap,\n        exitCellMap\n    } = cacheMaps;\n    const layerConfigArr = encoder.getLayerConfig({ columnFields, rowFields }, suppliedLayers || []);\n    const axesCreators = { config, labelManager, axes, cacheMaps };\n\n    fieldInfo.normalizedColumns = verticalAxis.fields;\n    fieldInfo.normalizedRows = horizontalAxis.fields;\n\n    const groupAxes = encoder.createAxis(axesCreators, fieldInfo);\n\n    matrixLayers[rowIndex] = matrixLayers[rowIndex] ? matrixLayers[rowIndex] : [];\n    matrixLayers[rowIndex][columnIndex] = layerConfigArr;\n\n    // return from map if already there otherwise create and put in map\n    const geomCellKey = getCellKey(rowIndex, columnIndex);\n    const fields = {\n        y: rowFields,\n        x: columnFields\n    };\n    const allFacets = [\n        [...facets.rowFacets[0], ...facets.colFacets[0]],\n        [...facets.rowFacets[1], ...facets.colFacets[1]]\n    ];\n    const geomCell = !exitCellMap.has(geomCellKey) ? new GeomCell() : exitCellMap.get(geomCellKey);\n\n    geomCell.data(datamodel)\n                    .axes(groupAxes)\n                    .fields(fields)\n                    .transform(datamodelTransform)\n                    .detailFields(detailFields)\n                    .facetByFields(allFacets);\n    entryCellMap.set(geomCellKey, geomCell);\n    exitCellMap.delete(geomCellKey);\n\n    updateCells(resolver, facets, geomCell);\n\n    return entryCellMap.get(geomCellKey);\n};\n\n/**\n * Creates axis cells based on the set of axes\n *\n * @param {Selection} selection Contains a selection of the axis units\n * @param {Array} axes Actual axis units\n * @param {number} axisIndex 0-> primary axis, 1-> secondary axis(when dual axis is made)\n * @param {Object} cells Contains a collection of the cells\n * @return {Object} return either set of axis/blank cells depending on the config\n */\n\nconst createAxisCells = (selection, axes, axisIndex, cells) =>\n    createSelection(selection, axis => axis, axes, (item, i) => i + item.reduce((e, n) => {\n        const id = n.id + axisIndex;\n        return e + id;\n    }, '')).map((axis) => {\n        if (axis && axis[axisIndex]) {\n            const axisInst = axis[axisIndex];\n            const { orientation, show } = axisInst.config();\n\n            return new cells.AxisCell().source(axisInst).config({\n                isOffset: orientation === AxisOrientation.LEFT || orientation === AxisOrientation.TOP,\n                show\n            });\n        }\n        return new cells.BlankCell().config({ show: false });\n    });\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @retur\n */\nconst axisPlaceholderGn = (context, selObj, cells) => {\n    const {\n        matrices\n    } = context;\n    const {\n        axesMatrix\n    } = matrices;\n\n    return (type, axisFrom) => {\n        const axes = axesMatrix[`${type}`];\n\n        if (axes && axes.length) {\n            if (type === X || type === Y) {\n                const fieldNames = type === Y ? ROWS : COLUMNS;\n\n                [PRIMARY, SECONDARY].forEach((fieldType, index) => {\n                    const selObjProp = `${fieldNames}${fieldType}`;\n                    let axisIndex = index;\n                    let axesForDraw = axes;\n                    if (axisFrom === RIGHT || axisFrom === BOTTOM) {\n                        axisIndex = 1 - axisIndex;\n                    }\n                    if (!getObjProp(axes, 0, axisIndex)) {\n                        axesForDraw = [];\n                    }\n                    selObj[selObjProp] = createAxisCells(selObj[selObjProp], axesForDraw, axisIndex, cells);\n                });\n            } else {\n                selObj.rowsPrimary = createAxisCells(selObj.rowPrime, axes.map(() => []), 0, cells);\n                selObj.columnsPrimary = createAxisCells(selObj.colPrime, axes[0], 0, cells);\n            }\n        }\n        return selObj;\n    };\n};\n\n/**\n * Creates header cells based on the set of headers\n *\n * @param {Object} selection Contains a selection of the header units\n * @param {string} headers Contains a list of the headers\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} return either set of header cells depending on the config\n */\nconst createTextCells = (selection, headers, cells, labelManager) => createSelection(selection,\n    label => new cells.TextCell({}, { labelManager }).source(label), headers, (key, i) => key + i);\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @param {*} labelManager\n *\n */\nconst headerPlaceholderGn = (context, selectionObj, cells, labelManager) => {\n    const {\n        axis,\n        keys,\n        type,\n        facet\n    } = context;\n    const counter = axis.length / keys.length;\n    const selectionKeys = keys.length ? axis.map((d, i) => keys[Math.floor(i / counter)]) : [];\n\n    return createSelection(selectionObj[`${type}Headers`], keySet => keySet, selectionKeys,\n        (keySet, i) => `${keySet.join(',')}-${i}`)\n                    .map(keySet => createTextCells(null, keySet, cells, labelManager)\n                                    .map((cell, k, i) => cell.source(keySet[i]).config(facet)));\n};\n\n/**\n * Creates a set of placeholders as a part of selection object\n *\n * @param {Array} normalizedOptions contains normalized rows and columns\n * @param {Array} matrices contains axis and value matrices\n * @param {aArrayny} projections contains set of row and column projections\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} Creates a set of placeholders as a part of selections\n */\nconst generatePlaceholders = (context, cells, labelManager) => {\n    let selectionObj;\n    const {\n        matrices,\n        fields,\n        facetsAndProjections,\n        selection,\n        facet,\n        encoders\n    } = context;\n    const {\n        rows,\n        columns\n    } = fields;\n    const {\n        valuesMatrix\n    } = matrices;\n    const {\n        rowProjections,\n        colProjections\n    } = facetsAndProjections;\n    const {\n        rowKeys,\n        columnKeys\n    } = valuesMatrix;\n    const takeAxisFrom = encoders.simpleEncoder._axisFrom;\n    const takeHeaderFrom = encoders.simpleEncoder._headerFrom;\n\n    selectionObj = selection || {};\n\n    ['pie', X, Y].forEach((axis) => {\n        const axisFrom = axis === X ? takeAxisFrom.column : takeAxisFrom.row;\n        selectionObj = axisPlaceholderGn(context, selectionObj, cells)(axis, axisFrom);\n    });\n\n    const {\n        rowsPrimary,\n        rowsSecondary,\n        columnsPrimary,\n        columnsSecondary\n    } = selectionObj;\n\n    const rowAxis = rowsPrimary && rowsPrimary.getObjects().length ? rowsPrimary.getObjects() :\n        (rowsSecondary && rowsSecondary.getObjects().length ? rowsSecondary.getObjects() : []);\n    const colAxis = columnsPrimary && columnsPrimary.getObjects().length ? columnsPrimary.getObjects() :\n        (columnsSecondary && columnsSecondary.getObjects().length ? columnsSecondary.getObjects() : []);\n\n    const headerConfig = [\n        { type: LEFT, section: rows[0], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: RIGHT, section: rows[1], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: TOP, section: columns[0], axis: colAxis, headerFrom: takeHeaderFrom.column },\n        { type: BOTTOM, section: columns[1], axis: colAxis, headerFrom: takeHeaderFrom.column }\n    ];\n\n    headerConfig.forEach((config, index) => {\n        let keys;\n        let length;\n        const {\n            type,\n            section,\n            axis,\n            headerFrom\n        } = config;\n\n        if (index < 2) {\n            keys = rowKeys;\n            length = rowProjections.length > 0 ? rowProjections.length : 1;\n        } else {\n            keys = columnKeys;\n            length = colProjections.length > 0 ? colProjections.length : 1;\n        }\n\n        if (section.length && headerFrom === type && axis && keys.length) {\n            const hContext = { axis, length, type };\n            let headers = [];\n            if (index < 2) {\n                hContext.keys = keys;\n                hContext.facet = facet.rows;\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            } else {\n                hContext.facet = facet.columns;\n                hContext.keys = keys[0].map((key, i) => keys.map(e => e[i]));\n\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            }\n            selectionObj[`${type}Headers`] = headers;\n        } else {\n            selectionObj[`${type}Headers`] = null;\n        }\n    });\n    return selectionObj;\n};\n\n/**\n * Generates matrices\n *\n * @param {Object} config Configuration to generate matrices\n * @param {Array} matrices Matrices containing the set of visual units and axes units\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} contains a collection of matrices\n */\nexport const generateMatrices = (context, matrices, cells, labelManager) => {\n    const {\n        unitHeight,\n        unitWidth,\n        facetsAndProjections,\n        normalizedRows,\n        normalizedColumns,\n        selection,\n        axisFrom,\n        facet,\n        encoders\n     } = context;\n    const placeholderContext = {\n        fields: {\n            rows: normalizedRows,\n            columns: normalizedColumns\n        },\n        matrices,\n        facetsAndProjections,\n        selection,\n        axisFrom,\n        facet,\n        encoders\n    };\n    // Generate placeholders for all matrices\n    const selectionObj = generatePlaceholders(placeholderContext, cells, labelManager);\n    const {\n        columnsPrimary,\n        columnsSecondary,\n        rowsPrimary,\n        rowsSecondary,\n        leftHeaders,\n        topHeaders,\n        bottomHeaders,\n        rightHeaders\n    } = selectionObj;\n    const [rowPrime, rowSec, colPrime, colSec] = [rowsPrimary, rowsSecondary, columnsPrimary, columnsSecondary]\n        .map(d => (d ? d.getObjects() : []));\n    const [leftFacets, rightFacets] = [leftHeaders, rightHeaders]\n        .map(e => (e ? e.getObjects()\n                        .map(f => f.getObjects()) : []));\n    let rowPriority = rowSec.length ? 1 : -1;\n    rowPrime.length && rowPriority++;\n    let colPriority = colSec.length ? 1 : -1;\n    colPrime.length && colPriority++;\n\n    // Compute left matrix using left headers and the axes on the rows\n    let leftMatrix = leftFacets.length ? leftFacets.map((d, i) => {\n        rowPrime[i] = rowPrime[i] ? [rowPrime[i]] : [];\n        return [...d, ...rowPrime[i]];\n    }) : (rowPrime ? rowPrime.map(d => [d]) : []);\n\n    // Compute right matrix using right headers and the axes on the rows\n    const rightMatrix = rowSec.length ? rowSec.map((d, i) => [d, ...(rightFacets[i] || [])]) : (rightFacets.length ?\n        rightFacets.map(d => [...d]) : []);\n\n    const topMatrix = [];\n    if (topHeaders) {\n        const headers = topHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                topMatrix[i] = topMatrix[i] || [];\n                topMatrix[i].push(x);\n            });\n        });\n    }\n    // Compute top matrix using the top headers and axes on the columns\n    if (colPrime.length) {\n        topMatrix.push(colPrime);\n    }\n\n    // Bottom and right matrices are prepared using the user config.\n    let bottomMatrix = [];\n    if (colSec.length) {\n        bottomMatrix.push(colSec);\n    }\n    const currentBottomLength = bottomMatrix.length;\n    if (bottomHeaders) {\n        const headers = bottomHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                bottomMatrix[i + currentBottomLength] = bottomMatrix[i + currentBottomLength] || [];\n                bottomMatrix[i + currentBottomLength].push(x);\n            });\n        });\n    }\n\n    if (!leftMatrix.length && !rightMatrix.length) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        leftMatrix = [[cell]];\n    }\n\n    if (!topMatrix.length && (!bottomMatrix.length || !bottomMatrix[0].length)) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        bottomMatrix = [[cell]];\n    }\n\n    return {\n        rows: [leftMatrix, rightMatrix],\n        columns: [topMatrix, bottomMatrix],\n        selectionObj,\n        colPriority,\n        rowPriority\n    };\n};\n\n/**\n * Computes matrices for a group\n *\n * @param {Object} datamodel on which the matrices are to be computed\n * @param {Object} config configuration of the matrices\n * @param {Object} layerRegistry contains the registered layers\n * @return {Object} conputed matrices\n * @memberof MatrixResolver\n */\nexport const computeMatrices = (context, config) => {\n    const {\n        resolver,\n        datamodel,\n        componentRegistry,\n        encoders\n    } = context;\n    const {\n            globalConfig,\n            selection,\n            transform\n        } = config;\n    const groupBy = globalConfig.autoGroupBy;\n    const { smartlabel: labelManager } = resolver.dependencies();\n    const fieldMap = datamodel.getFieldsConfig();\n    const layerConfig = resolver.layerConfig();\n    const registry = resolver.registry();\n    const { fields: normalizedRows } = resolver.horizontalAxis();\n    const { fields: normalizedColumns } = resolver.verticalAxis();\n    const otherEncodings = resolver.optionalProjections(config, layerConfig);\n    const facetsAndProjections = resolver.getAllFields();\n    const matrixGnContext = {\n        // Configuration to be passed to generate the  different matrices.\n        // A common config is used for both value matrices and other matrices\n        normalizedColumns,\n        normalizedRows,\n        facetsAndProjections,\n        layers: layerConfig,\n        fieldMap,\n        otherEncodings,\n        encoders,\n        facet: globalConfig.facet || {},\n        axisFrom: globalConfig.axisFrom || {},\n        selection\n    };\n    const cells = {\n        GeomCell: resolver.getCellDef(registry.GeomCell),\n        AxisCell: resolver.getCellDef(registry.AxisCell),\n        BlankCell: resolver.getCellDef(registry.BlankCell),\n        TextCell: resolver.getCellDef(registry.TextCell)\n    };\n    const isRowSizeEqual = isDistributionEqual(normalizedRows);\n    const isColumnSizeEqual = isDistributionEqual(normalizedColumns);\n\n    resolver.colCells({});\n    resolver.rowCells({});\n    resolver.datamodelTransform(transform || {});\n\n    // Cell creation begins here\n    resolver.resetSimpleAxes();\n\n    const {\n        entryCellMap\n    } = resolver.cacheMaps();\n    const newCacheMap = {\n        exitCellMap: entryCellMap,\n        entryCellMap: new Map()\n    };\n\n    resolver.cacheMaps(newCacheMap);\n\n    const valueCellContext = {\n        config: globalConfig,\n        suppliedLayers: encoders.simpleEncoder.serializeLayerConfig(resolver.layerConfig()),\n        resolver,\n        cell: cells.GeomCell,\n        encoder: encoders.simpleEncoder,\n        newCacheMap,\n        detailFields: config.detail\n    };\n    const fieldsConfig = datamodel.getFieldsConfig();\n    let groupedModel = datamodel;\n    if (!groupBy.disabled) {\n        const fields = getFieldsFromSuppliedLayers(valueCellContext.suppliedLayers, datamodel.getFieldsConfig());\n        const allFields = extractFields(facetsAndProjections, fields);\n\n        const dimensions = allFields.filter(field =>\n            fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n        const aggregationFns = groupBy.measures;\n\n        groupedModel = datamodel.groupBy(dimensions.length ? dimensions : [''], aggregationFns).project(allFields);\n    }\n\n    // return a callback function to create the cells from the matrix\n    const cellCreator = resolver.valueCellsCreator(valueCellContext);\n    // Creates value matrices from the datamodel and configs\n    const valueMatrixInfo = getMatrixModel(groupedModel, facetsAndProjections, cellCreator);\n\n    resolver.cacheMaps().exitCellMap.forEach((placeholder) => {\n        placeholder.remove();\n    });\n    resolver.cacheMaps().exitCellMap.clear();\n    resolver.valueMatrix(valueMatrixInfo.matrix);\n\n    const { xAxes, yAxes } = mutateAxesFromMap(resolver.cacheMaps(), resolver.axes());\n\n    resolver.axes({\n        x: xAxes,\n        y: yAxes\n    });\n    const store = resolver.store();\n\n    [xAxes, yAxes].forEach((axesArr, type) => {\n        const stateProps = {};\n        axesArr = axesArr || [];\n        axesArr.forEach((axes, idx) => {\n            axes.forEach((axis, axisIndex) => {\n                stateProps[`${idx}${axisIndex}`] = null;\n            });\n        });\n        store.append(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type ? 'y' : 'x'}`, stateProps);\n    });\n    resolver.createUnits(componentRegistry, config);\n\n    const matrices = {\n        valuesMatrix: valueMatrixInfo,\n        axesMatrix: resolver.axes()\n    };\n    // Create all matrices\n    const {\n        rows,\n        columns,\n        selectionObj,\n        rowPriority,\n        colPriority\n    } = generateMatrices(matrixGnContext, matrices, cells, labelManager);\n\n    resolver.rowMatrix(rows);\n    resolver.columnMatrix(columns);\n\n    return {\n        rows: resolver.rowMatrix(),\n        columns: resolver.columnMatrix(),\n        values: resolver.valueMatrix(),\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority: {\n            row: rowPriority,\n            col: colPriority\n        },\n        selection: selectionObj,\n        dataModels: {\n            groupedModel,\n            parentModel: datamodel\n        }\n    };\n};\n","export const RESOLVER_PROPS = {\n    dependencies: {},\n    units: {},\n    datamodelTransform: {},\n    layerConfig: {},\n    matrixLayers: {},\n    colCells: {},\n    rowCells: {},\n    rowMatrix: {},\n    columnMatrix: {},\n    valueMatrix: {},\n    encoder: {}\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { generateGetterSetters, STATE_NAMESPACES } from 'muze-utils';\nimport {\n     initializeCacheMaps,\n     headerCreator,\n     extractUnitConfig,\n     setFacetsAndProjections\n} from './group-utils';\nimport {\n     ROW, COL, LEFT, RIGHT, COLOR, SIZE, SHAPE, DETAIL, CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS, INITIALIZED,\n     AXIS, UNIT, BEFORE_UPDATE, UPDATED, VALUE_MATRIX, FACET_HEADERS\n} from '../enums/constants';\nimport { createValueCells, computeMatrices } from './cell-creator';\nimport { RESOLVER_PROPS } from './resolver-props';\n\n/**\n * Resolves the matrices from configuration provided\n *\n * @export\n * @class MatrixResolver\n */\nexport default class MatrixResolver {\n\n    /**\n     * Creates an instance of MatrixResolver.\n     * @param {Object} dependencies needed to run the resolver\n     * @memberof MatrixResolver\n     */\n    constructor (dependencies) {\n        this._registry = {};\n        this._layerConfig = [];\n        this._matrixLayers = [];\n        this._dependencies = dependencies;\n        this._rowMatrix = [];\n        this._columnMatrix = [];\n        this._valueMatrix = [];\n        this._facets = { rowFacets: [], colFacets: [] };\n        this._projections = { rowProjections: [], colProjections: [] };\n        this._datamodelTransform = {};\n        this._units = [];\n        this._cacheMaps = {};\n        this._axes = {\n            x: {},\n            y: {},\n            color: [],\n            size: [],\n            shape: []\n        };\n        generateGetterSetters(this, RESOLVER_PROPS);\n        this.cacheMaps(initializeCacheMaps());\n    }\n\n    /**\n     * Set:  Registers placeholders, Get: return {Object} those placeholders\n     *\n     * @param {Object} placeholders cells that will construct the group\n     * @return {Object} Either current instance or the set of placeholders\n     * @memberof MatrixResolver\n     */\n    registry (...placeholders) {\n        if (placeholders.length) {\n            Object.entries(placeholders[0]).forEach((val) => {\n                this._registry[val[0]] = val[1];\n            });\n            return this;\n        }\n        return this._registry;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    cacheMaps (...maps) {\n        if (maps.length) {\n            [CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS].forEach((e) => {\n                this._cacheMaps[`${e}Map`] = maps[0][`${e}Map`] || this._cacheMaps[`${e}Map`];\n            });\n            return this;\n        }\n        return this._cacheMaps;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    axes (...axes) {\n        if (axes.length) {\n            this._axes = Object.assign({}, this._axes, axes[0]);\n            return this;\n        }\n        return this._axes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} facets\n     *\n     * @memberof MatrixResolver\n     */\n    facets (...facets) {\n        if (facets.length) {\n            Object.entries(facets[0]).forEach((e) => {\n                this._facets[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._facets;\n    }\n\n    /**\n     *\n     *\n     * @param {*} projections\n     *\n     * @memberof MatrixResolver\n     */\n    projections (...projections) {\n        if (projections.length) {\n            Object.entries(projections[0]).forEach((e) => {\n                this._projections[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._projections;\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @param {*} layerConfig\n     *\n     * @memberof MatrixResolver\n     */\n    optionalProjections (config, layerConfig) {\n        const otherEncodings = {};\n        const optionalProjections = [];\n        const otherEncodingTypes = [SIZE, COLOR, SHAPE];\n\n        otherEncodingTypes.forEach((type) => {\n            if (config[type] && config[type].field) {\n                const enc = config[type];\n                otherEncodings[type] = enc.field;\n                optionalProjections.push(enc.field);\n            }\n        });\n\n        if (config[DETAIL]) {\n            optionalProjections.push(...config.detail);\n        }\n\n        if (layerConfig.length) {\n            layerConfig.forEach((layer) => {\n                if (layer.encoding) {\n                    Object.values(layer.encoding).forEach((enc) => {\n                        if (enc && optionalProjections.indexOf(enc.field) === -1) {\n                            optionalProjections.push(enc.field ? enc.field : enc);\n                        }\n                    });\n                }\n            });\n        }\n        this.projections({ optionalProjections });\n        return otherEncodings;\n    }\n\n    /**\n     * return the normalized set of rows and facets and projections\n     *\n     * @param {Object} rows parameters needed to set horizontal axis consisiting of rows\n     * @return {Object} facets, projections and normalized rows\n     * @memberof MatrixResolver\n     */\n    horizontalAxis (rows, encoder) {\n        if (rows) {\n            this._horizontalAxis = setFacetsAndProjections(this, { type: ROW, fields: rows }, encoder);\n            return this;\n        }\n        return this._horizontalAxis;\n    }\n\n    /**\n     * return the normalized set of columns and facets and projections\n     *\n     * @param {Object} columns parameters needed to set vertical axis consisiting of columns\n     * @return {Object} facets, projections and normalized columns\n     * @memberof MatrixResolver\n     */\n    verticalAxis (columns, encoder) {\n        if (columns) {\n            this._verticalAxis = setFacetsAndProjections(this, { type: COL, fields: columns }, encoder);\n            return this;\n        }\n        return this._verticalAxis;\n    }\n\n    /**\n     * Gets the class definition of a particular cell type(if the particular type has been extended, that particular\n     * definition is returned)\n     *\n     * @param {Object} cell cell whose class definition is to be retrieved\n     * @return {Object} cell definition\n     * @memberof MatrixResolver\n     */\n    getCellDef (cell) {\n        const registry = this.registry();\n\n        Object.values(registry).forEach((e) => {\n            if (e.prototype instanceof cell) {\n                cell = e;\n            }\n        });\n        return cell;\n    }\n\n    /**\n     * return a visual cell creator along with its axis information to be injected to the datamodel creation\n     * function\n     *\n     * @param {Object} GeomCell Type of cell to be created\n     * @return {Object} Created cell\n     * @memberof MatrixResolver\n     */\n    valueCellsCreator (context) {\n        // reset matrix layers\n        this.matrixLayers([]);\n\n        return (datamodel, fieldInfo, facets) => createValueCells(context, datamodel, fieldInfo, facets);\n    }\n\n    /**\n     * Callback to be applied on each cell of a matrix of a particular type\n     *\n     * @param {string} matrixType type of matrix on which callback is to be applied\n     * @param {Function} callback function to be applied to each cell\n     * @memberof MatrixResolver\n     */\n    forEach (matrixType, callback) {\n        this[matrixType]().forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                callback(rIndex, cIndex, col);\n            });\n        });\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getAllFields () {\n        const retObj = this.projections();\n\n        Object.entries(this.facets()).forEach((e) => {\n            retObj[e[0]] = e[1];\n        });\n        return retObj;\n    }\n\n    /**\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    resetSimpleAxes () {\n        return this.axes({\n            x: new Set(),\n            y: new Set()\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} componentRegistry\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createUnits (componentRegistry, config) {\n        const {\n            globalConfig,\n            alias\n        } = config;\n        const {\n            layerRegistry,\n            sideEffectRegistry\n        } = componentRegistry;\n        const {\n            smartlabel: smartLabel,\n            lifeCycleManager\n        } = this.dependencies();\n        // Provide the source for the matrix\n        const units = [[]];\n        // Setting unit configuration\n        const unitConfig = extractUnitConfig(globalConfig || {});\n        const globalState = VisualUnit.getState()[0];\n        const globalStates = {};\n        const store = this.store();\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            let unit = el.source();\n            if (!unit) {\n                const namespace = `${i}${j}`;\n\n                unit = VisualUnit.create({\n                    layerRegistry,\n                    sideEffectRegistry\n                }, {\n                    smartLabel,\n                    lifeCycleManager\n                });\n                globalStates[namespace] = null;\n                unit.metaInf({\n                    rowIndex: i,\n                    colIndex: j,\n                    namespace\n                });\n                unit.store(store);\n                el.source(unit);\n            }\n            !units[i] && (units[i] = []);\n            units[i][j] = unit;\n            unit.parentAlias(alias);\n            el.config(unitConfig);\n        });\n\n        for (const key in globalState) {\n            store.append(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${key}`, globalStates);\n        }\n\n        lifeCycleManager.notify({ client: units, action: INITIALIZED, formalName: UNIT });\n        return this.units(units);\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    setDomains (config, datamodel, encoders) {\n        const {\n            color,\n            shape,\n            size,\n            globalConfig\n        } = config;\n        const groupBy = globalConfig.autoGroupBy;\n        const {\n            rowFacets,\n            colFacets\n        } = this.getAllFields();\n        const encoding = {\n            color,\n            shape,\n            size\n        };\n        const facetFields = [...rowFacets.map(e => e.toString()), ...colFacets.map(e => e.toString())];\n        const retContext = {\n            domains: encoders.simpleEncoder.getRetinalFieldsDomain(datamodel, encoding, facetFields, groupBy),\n            axes: this.axes(),\n            encoding\n        };\n        encoders.retinalEncoder.setCommonDomain(retContext);\n        return this;\n    }\n\n    resetFacetsAndProjections () {\n        this._facets = {};\n        this._projections = {};\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getRetinalAxes () {\n        const {\n            color,\n            shape,\n            size\n        } = this.axes();\n\n        return {\n            color: [...color],\n            shape: [...shape],\n            size: [...size]\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     *\n     * @memberof MatrixResolver\n     */\n    getSimpleAxes (type) {\n        return this.axes()[`${type}`];\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createRetinalAxes (fieldsConfig, config, encoders) {\n        const layerConfig = this.layerConfig();\n        this.optionalProjections(config, layerConfig);\n        const retinalAxes = encoders.retinalEncoder.createAxis({\n            fieldsConfig,\n            config,\n            axes: this.axes()\n        });\n        const {\n            lifeCycleManager\n        } = this.dependencies();\n\n        [COLOR, SHAPE, SIZE].forEach((e) => {\n            this.axes()[e] = retinalAxes[e];\n        });\n\n        lifeCycleManager.notify({ client: this.axes(), action: INITIALIZED, formalName: AXIS });\n        lifeCycleManager.notify({ client: this.units(), action: BEFORE_UPDATE, formalName: UNIT });\n\n        const units = [];\n        const matrixLayers = this.matrixLayers();\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            el.axes(retinalAxes);\n            el.source() && el.source().retinalFields(config);\n            el.layerDef(encoders.retinalEncoder.getLayerConfig(config, matrixLayers[i][j]));\n            el.updateModel();\n\n            units.push(el.source());\n        });\n\n        lifeCycleManager.notify({ client: units, action: UPDATED, formalName: UNIT });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} placeholders\n     * @param {*} fieldNames\n     *\n     * @memberof MatrixResolver\n     */\n    createHeaders (placeholders, fieldNames, config) {\n        let bottomLeft = [];\n        let bottomRight = [];\n        const {\n            rows,\n            columns\n        } = placeholders;\n        const {\n            smartlabel: labelManager,\n            lifeCycleManager\n        } = this.dependencies();\n        const TextCell = this.getCellDef(this.registry().TextCell);\n        const BlankCell = this.getCellDef(this.registry().BlankCell);\n        const [leftRows, rightRows] = rows;\n        const [topCols, bottomCols] = columns;\n        const rowHeaders = fieldNames.rows;\n        const blankCellCreator = cell => new BlankCell().config({ show: cell.config().show });\n\n        // Headers and footers are created based on the rows. Thereafter, using the column information\n        // they are tabularized into the current structure\n        const headers = {\n            left: headerCreator(leftRows, rowHeaders[0], config.showHeaders ? TextCell : BlankCell, labelManager),\n            right: headerCreator(rightRows, rowHeaders[1], config.showHeaders ? TextCell : BlankCell, labelManager)\n        };\n        const footers = {\n            left: leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : [],\n            right: rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []\n        };\n        const [topLeft, topRight] = [LEFT, RIGHT].map(type => topCols.map((col, i) => {\n            if (i === topCols.length - 1) {\n                return headers[type];\n            }\n            return footers[type];\n        }));\n\n        // Creating only bottom matrices if there is no information on the top\n        if (topCols.length === 0) {\n            [bottomLeft, bottomRight] = [LEFT, RIGHT].map(type => bottomCols.map((col, i) => {\n                if (i === 0) {\n                    return headers[type];\n                }\n                return footers[type];\n            }));\n        } else {\n            bottomLeft = bottomCols.map(() => (leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : []));\n            bottomRight = bottomCols.map(() => (rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []));\n        }\n\n        lifeCycleManager.notify({\n            client: [topLeft, topRight, bottomLeft, bottomRight],\n            action: INITIALIZED,\n            formalName: FACET_HEADERS\n        });\n\n        return { topLeft, topRight, bottomLeft, bottomRight };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @param {*} componentRegistry\n     * @param {*} encoders\n     *\n     * @memberof MatrixResolver\n     */\n    getMatrices (datamodel, config, componentRegistry, encoders) {\n        const context = {\n            datamodel,\n            componentRegistry,\n            encoders,\n            resolver: this\n        };\n\n        return computeMatrices(context, config);\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            return this;\n        }\n        return this._store;\n    }\n}\n","/**\n * This is a wrapper class over the matrix of cells which gets created in visual group. Visual Group creates left,\n * right, bottom and top and center matrices and wraps them using this class.\n *\n * @public\n * @class ValueMatrix\n */\nclass ValueMatrix {\n\n    /**\n     * Creates an instance of ValueMatrix.\n     *\n     * @param {Array} matrixArr Matrix array.\n     */\n    constructor (matrixArr) {\n        const instancesById = {};\n\n        this.matrix(matrixArr || []);\n        this.filter(() => true);\n\n        this.each((el, rIdx, cIdx) => {\n            const cellValue = el.valueOf();\n            if (cellValue && cellValue.id) {\n                const id = cellValue.id();\n                instancesById[id] = {\n                    instance: cellValue,\n                    rowIndex: rIdx,\n                    colIndex: cIdx\n                };\n            }\n        });\n\n        this.instancesById(instancesById);\n    }\n\n    instancesById (...id) {\n        if (id.length) {\n            this._instancesById = id[0];\n            return this;\n        }\n        return this._instancesById;\n    }\n\n    /**\n     * Returns the array of matrices contained in this instance.\n     *\n     * @public\n     * @return {Array} Array of matrices.\n     */\n    matrix (...matrix) {\n        if (matrix.length) {\n            this._matrix = matrix[0];\n            return this;\n        }\n        return this._matrix;\n    }\n\n    /**\n     * Sets a filter criteria. This filter criteria gets applied when each function is called.\n     *\n     * @public\n     * @param {Function} fn Filter function.\n     *\n     * @return {ValueMatrix} Instance of value matrix.\n     */\n    filter (...fn) {\n        if (fn.length) {\n            this._filterFn = fn[0];\n            return this;\n        }\n        return this._filterFn;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    width () {\n        let rowWidth = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowWidth = 0;\n            row.forEach((cell) => {\n                currentRowWidth += cell.getLogicalSpace().width;\n            });\n            rowWidth = Math.max(rowWidth, currentRowWidth);\n        });\n        return rowWidth;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    height () {\n        let rowHeight = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowHeight = 0;\n            row.forEach((cell) => {\n                currentRowHeight = Math.max(currentRowHeight, cell.getLogicalSpace().height);\n            });\n            rowHeight += currentRowHeight;\n        });\n        return rowHeight;\n    }\n\n    /**\n     * Iterates through the two dimensional matrix array and calls the given callback function with the cell instance,\n     * row index, column index and the matrix array.\n     *\n     * @param {Function} fn Callback function which will get called for every cell.\n     * @return {ValueMatrix} Instance of the value matrix.\n     */\n    each (fn) {\n        const matrix = this.matrix();\n        const filterFn = this.filter();\n\n        matrix.forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                if (filterFn(col)) {\n                    fn(col, rIndex, cIndex, matrix);\n                }\n            });\n        });\n        return this;\n    }\n\n    findPlaceHolderById (id) {\n        return this.instancesById()[id];\n    }\n}\n\nexport default ValueMatrix;\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { STATE_NAMESPACES } from 'muze-utils';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { getEncoder, getBorders } from '../group-helper';\nimport { RetinalEncoder } from '../encoder';\nimport { registerDomainChangeListener, unsubscribeChangeListeners } from './change-listener';\nimport ValueMatrix from './value-matrix';\n\nexport const createUnitState = (context) => {\n    const [globalState] = VisualUnit.getState();\n    const store = context.store();\n    store.append(STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const initializeGlobalState = (context) => {\n    const globalState = context.constructor.getState()[0];\n    const store = context.store();\n    store.append(STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const createLayerState = (context) => {\n    const [globalState] = BaseLayer.getState();\n    context.store().append(STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, globalState);\n};\n\nconst sanitizeRetinalConfig = (retinalConf) => {\n    const conf = {};\n    for (const key in retinalConf) {\n        const confValue = retinalConf[key];\n        if (typeof confValue === 'string' || !confValue) {\n            conf[key] = {\n                field: retinalConf[key]\n            };\n        } else {\n            conf[key] = confValue;\n        }\n    }\n    return conf;\n};\n\nexport const setMatrixInstances = (context, placeholder) => {\n    let {\n        values,\n        rows,\n        columns\n    } = placeholder;\n    values = values || [];\n    rows = rows || [];\n    columns = columns || [];\n    context._composition.matrices = {\n        value: new ValueMatrix(values),\n        left: new ValueMatrix(rows[0]),\n        right: new ValueMatrix(rows[1]),\n        top: new ValueMatrix(columns[0]),\n        bottom: new ValueMatrix(columns[1])\n    };\n    return context;\n};\n\nexport const createMatrices = (context) => {\n    const rows = context.rows();\n    const columns = context.columns();\n    const color = context.color();\n    const datamodel = context.data();\n    const size = context.size();\n    const detail = context.detail();\n    const layers = context.layers();\n    const transform = context.transform();\n    const config = context.config();\n    const shape = context.shape();\n\n    // Get the resolver for the matrices\n    const resolver = context.resolver();\n    resolver.store(context.store());\n    // Prepare configuration for matrix preparation\n    let matrixConfig = {\n        selection: context.selection(),\n        alias: context.alias(),\n        globalConfig: config || {},\n        rows,\n        columns,\n        detail,\n        layers,\n        transform\n    };\n\n    unsubscribeChangeListeners(context);\n\n    const retinalConfig = sanitizeRetinalConfig({\n        color,\n        shape,\n        size\n    });\n\n    matrixConfig = Object.assign(matrixConfig, retinalConfig);\n    // Create the encoders for the group\n    const encoders = {};\n    encoders.retinalEncoder = new RetinalEncoder();\n    encoders.simpleEncoder = getEncoder(layers);\n    resolver.encoder(encoders.simpleEncoder);\n\n    // Set the group type\n    context.groupType(encoders.simpleEncoder.constructor.type());\n\n    // Get sanitized fields as instances of the Vars Class\n    const fields = encoders.simpleEncoder.fieldSanitizer(datamodel, matrixConfig);\n    encoders.simpleEncoder.setAxisAndHeaders(config ? config.axisFrom : {}, fields);\n    // Setting layers for the code\n    layers && resolver.layerConfig(layers);\n    // Set the row and column axes\n    resolver.horizontalAxis(fields.rows, encoders).verticalAxis(fields.columns, encoders);\n    // Getting the placeholders\n    const placeholderInfo = resolver.getMatrices(datamodel, matrixConfig, context.registry(), encoders);\n    context._groupedDataModel = placeholderInfo.dataModels.groupedModel;\n    // Set the selection object\n    context.selection(placeholderInfo.selection);\n\n    // Create retinal axes\n    resolver.createRetinalAxes(placeholderInfo.dataModels.parentModel.getFieldsConfig(), retinalConfig,\n            encoders);\n\n    // Domains are evaluated for each of the axes for commonality\n    resolver.setDomains(matrixConfig, placeholderInfo.dataModels, encoders);\n\n    // Create matrix instances\n    setMatrixInstances(context, placeholderInfo);\n\n    // Prepare corner matrices\n    context.cornerMatrices(resolver.createHeaders(placeholderInfo, fields, config));\n\n    // Set placeholder information\n    context.placeholderInfo(placeholderInfo);\n\n    context._composition.axes = resolver.axes();\n    context.metaData({\n        border: getBorders(placeholderInfo, encoders.simpleEncoder)\n    });\n\n    resolver.encoder().unionUnitDomains(context);\n\n    registerDomainChangeListener(context);\n    return context;\n};\n","import { STATE_NAMESPACES } from 'muze-utils';\n\nexport const setupChangeListeners = (context) => {\n    const store = context.store();\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.x.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.y.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n};\n\nexport const registerDomainChangeListener = (context) => {\n    const store = context.store();\n    store.registerChangeListener([`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`], () => {\n        context.resolver().encoder().unionUnitDomains(context);\n    }, false, {\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n\nexport const unsubscribeChangeListeners = (context) => {\n    context.store().unsubscribe({\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\nexport const PROPS = {\n    alias: {},\n    data: {},\n    cornerMatrices: {\n        defaultValue: {\n            topLeft: [],\n            topRight: [],\n            bottomLeft: [],\n            bottomRight: []\n        }\n    },\n    groupType: {},\n\n    metaData: {\n        defaultValue: {\n            border: {}\n        }\n    },\n    placeholderInfo: {\n        defaultValue: {}\n    },\n    resolver: {},\n    registry: {\n        sanitization: (context, value) => {\n            if (context.resolver) {\n                context.resolver().registry(value.cellRegistry);\n            }\n            return value;\n        }\n    },\n    selection: {},\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { generateGetterSetters } from 'muze-utils';\nimport localOptions from './local-options';\nimport { SimpleGroup } from '../simple-group';\nimport {\n    MatrixResolver,\n    findInGroup\n} from '../group-helper';\nimport { createUnitState, initializeGlobalState, setMatrixInstances, createMatrices, createLayerState } from './helper';\nimport { setupChangeListeners } from './change-listener';\nimport { PROPS } from './props';\nimport {\n    CONFIG,\n    MOUNT,\n    RETINAL,\n    Y\n} from '../enums/constants';\n\n/**\n * VisualGroup is instantiated by canvas for creating {@link VisualUnit} and axes instances.It creates the\n * the matrix of visual units and axes. It also creates the layout instance which manages the allocation\n * of space of matrices.\n *\n * To get instance of visual group,\n * ```\n *      const visualGroup = canvas.composition().visualGroup;\n * ```\n * @public\n *\n * @class VisualGroup\n */\nclass VisualGroup extends SimpleGroup {\n\n    /**\n     * Creates an instance of VisualGroup. Requires dependencies and other registry options for placeholders\n     * and layers that create individual units.\n     *\n     * @param {Object} registry Key value pair of compostions for the group\n     * @param {Object} dependencies Dependencies needed to run the group\n     * @memberof VisualGroup\n     */\n    constructor (registry, dependencies) {\n        super();\n\n        const {\n            componentSubRegistry\n        } = registry;\n\n        this._dependencies = dependencies;\n        // Generate getter/setter methods for all properties of the class\n        // One can get each property by calling the method and can set it\n        // by passing paramaters for the same. Thus, one can chain setter\n        // getter methods.\n        generateGetterSetters(this, PROPS);\n        generateGetterSetters(this, localOptions);\n        // Populate the store with default values\n        // initialize group compositions\n        this._composition = {};\n        // store reference to data\n        this._data = [];\n        // store reference to mountpoint\n        this._mount = null;\n        // selection object that takes care of updating of components\n        this._selection = {};\n        // Create instance of matrix resolver\n        this.resolver(new MatrixResolver(this._dependencies));\n        // matrix instance store each of the matrices\n        setMatrixInstances(this, {});\n         // Getting indiviual registered items\n        this.registry({\n            layerRegistry: componentSubRegistry.layerRegistry.get(),\n            cellRegistry: componentSubRegistry.cellRegistry.get()\n        });\n    }\n\n    static getState () {\n        return [{\n            domain: {\n                x: {},\n                y: {},\n                radius: {}\n            }\n        }, {}];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            initializeGlobalState(this);\n            createUnitState(this);\n            createLayerState(this);\n            // Register listeners\n            setupChangeListeners(this);\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Return the instances of matrices created by the visual group.\n     *\n     * @return {Object} Instance of matrices.\n     */\n    matrixInstance (...matrices) {\n        if (matrices.length) {\n            return this;\n        }\n        return this.composition().matrices;\n    }\n\n    /**\n     * Returns the composition of visual group.\n     *\n     * @public\n     *\n     * @return {Object} Composition of visual group. It contains instance of matrices {@link ValueMatrix}\n     * and instances of axis.\n     * ```\n     *          {\n     *              matrices: {\n     *                  value: // Instance of center value matrix.\n     *                  left: // Instance of left value matrix\n     *                  right: // Instance of right value matrix\n     *                  bottom: // Instance of bottom value matrix\n     *                  top: // Instance of top value matrix.\n     *              },\n     *              axes: {\n     *                  x: // Array of x axis.\n     *                  y: // Array of y axis\n     *                  color: // Array of color axis\n     *                  shape: // Array of shape axis\n     *                  size: // Array of size axis.\n     *              }\n     *          }\n     * ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    /**\n     * Locks the model to prevent change listeners to be triggered until unlocked\n     *\n     * @return {Object} Instance of class VisualGroup\n     * @memberof VisualGroup\n     */\n    lockModel () {\n        this.store().model.lock();\n        return this;\n    }\n\n    /**\n     * Unlocks the model so that all change listeners can be triggered\n     *\n     * @return {Object} Instance of class VisualGroup\n     */\n    unlockModel () {\n        this.store().model.unlock();\n        return this;\n    }\n\n    /**\n     * Returns the channel name of the variable. Channels are rows, columns, color, shape and size.\n     *\n     * @public\n     * @param {string} variable Name of the variable.\n     *\n     * @return {string} Name of the channel.\n     */\n    where (variable) {\n        return findInGroup(variable, this.resolver().getAllFields());\n    }\n\n    /**\n     * Gets the axis instances of the visual group based on the given axis type.\n     *\n     * @public\n     * @param {string} type Type of axis. X,Y or retinal axes.\n     *\n     * @return {Array} Array of axis instances.\n     */\n    getAxes (type) {\n        if (type === RETINAL) {\n            return this.resolver().getRetinalAxes();\n        }\n        return this.resolver().getSimpleAxes(type);\n    }\n\n    /**\n     * Returns the instances of cells based on the given type. Type can be given as `row' or `col`.\n     *\n     * @public\n     * @return {Array} Two dimensional array of cells.\n     */\n    getCells (type) {\n        return this.resolver()[`${type}Cells`]();\n    }\n\n    getFieldsFromChannel (channel) {\n        const {\n            rowProjections,\n            colProjections\n        } = this.resolver().getAllFields();\n        return channel === Y ? rowProjections : colProjections;\n    }\n\n    getCellsByFacetKey (facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey] || [];\n        return cells;\n    }\n\n    getAxesByFacetKey (axisType, facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey];\n        const axes = cells[0].valueOf().axes()[axisType] || [];\n\n        return axes;\n    }\n\n    /**\n     * This method is used to return a serialized representation of the instance's properties.\n     *\n     * @return {Object} Object with config proprties.\n     * @memberof VisualGroup\n     */\n    serialize () {\n        const store = this.store();\n\n        return {\n            [CONFIG]: store.get(CONFIG),\n            [MOUNT]: store.get(MOUNT)\n        };\n    }\n\n    /**\n     * Returns the grouped datamodel prepared by visual group. If there is no group by performed, then it returns the\n     * original data model passed to visual group.\n     *\n     * @return {DataModel} Grouped data model.\n     */\n    getGroupByData () {\n        return this._groupedDataModel;\n    }\n\n    createMatrices () {\n        createMatrices(this);\n    }\n}\n\nexport default VisualGroup;\n","import { PersistentBehaviour, SELECTION } from '@chartshq/muze-firebolt';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return 'select';\n    }\n\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            // new add set\n            const existingRemoveSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_OLD_EXIT\n                || selectionSet._set[d] === SELECTION.SELECTION_NEW_EXIT);\n                // existing add set\n            if (existingRemoveSet.length) {\n                selectionSet.updateEntry();\n                selectionSet.add(existingRemoveSet);\n            } else {\n                selectionSet.updateExit();\n                selectionSet.remove(addSet);\n            }\n            const { exitSet } = selectionSet.getSets();\n            const mergedExitSet = [...new Set(exitSet[1]), ...new Set(exitSet[0])];\n            const completeSetCount = selectionSet.getCompleteSet().length;\n            if (exitSet[1].length !== completeSetCount && mergedExitSet.length === completeSetCount) {\n                selectionSet.reset();\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nconst CLASSPREFIX = 'muze';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        target: `.${CLASSPREFIX}-gradient-rect`,\n        behaviours: [BEHAVIOURS.BRUSH]\n    },\n    [ACTIONS.HOVER]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.CLICK]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.SELECT]\n    }\n};\n\nexport const propagationBehaviourMap = {\n    [BEHAVIOURS.SELECT]: BEHAVIOURS.FILTER,\n    [BEHAVIOURS.BRUSH]: BEHAVIOURS.HIGHLIGHT\n};\n","import * as BEHAVIOURS from '../enums/behaviours';\nimport * as sideEffects from '../enums/side-effects';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: [sideEffects.SELECTIONBOX, {\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [sideEffects.Highlighter],\n    select: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }]\n};\n\nexport const propagationSideEffects = {\n    [BEHAVIOURS.BRUSH]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.SELECT]: ['filter']\n};\n\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n\n","export const SELECTIONBOX = 'selectionBox';\nexport const Highlighter = 'highlighter';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const CONFIG = 'config';\nexport const DATAMODEL = 'dataModel';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNTPOINT = 'mountPoint';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const TRANSFORM = 'transform';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const DEFAULTCOLOR = '#F44336';\nexport const DEFAULTSIZE = 50;\nexport const DEFAULTSHAPE = 'circle';\nexport const STEP = 'step';\nexport const GRADIENT = 'gradient';\nexport const ORDINAL = 'ordinal';\nexport const SCALE_FUNCTIONS = {\n    size: 'getSize',\n    shape: 'getShape',\n    color: 'getColor'\n};\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nexport const CENTER = 'center';\nexport const VALUE = 'value';\nexport const PATH = 'path';\nexport const SHAPE = 'shape';\nexport const ICON = 'icon';\nexport const RECT = 'rect';\nexport const START = 'start';\nexport const UPPER = 'upper';\nexport const LOWER = 'lower';\nexport const END = 'end';\nexport const SIZE = 'size';\nexport const DISCRETE = 'discrete';\nexport const MEASURE = 'measure';\n\n","import { assembleModelFromIdentifiers, getDataModelFromRange } from 'muze-utils';\nimport { propagationBehaviourMap } from './action-behaviour-map';\nimport { propagationSideEffects } from './behaviour-effect-map';\nimport { STEP, GRADIENT, DISCRETE, MEASURE } from '../enums/constants';\n\nexport const propagate = (firebolt, action, selectionSet, config = {}) => {\n    let propagationData;\n    const type = firebolt.context.constructor.type();\n    const payload = config.payload;\n    const data = firebolt.context.data();\n    const metaData = firebolt.context.metaData();\n    const fieldType = metaData.getData().schema[0].type;\n\n    const propPayload = {};\n    const sourceId = firebolt.context._id;\n    propPayload.action = propagationBehaviourMap[action] || action;\n    propPayload.sideEffects = propagationSideEffects[action];\n    propPayload.sourceCanvas = firebolt.context.canvasAlias();\n    const isMutableAction = firebolt._actions.behavioural[propPayload.action].constructor.mutates();\n    if (payload.criteria === null) {\n        propagationData = null;\n    } else {\n        const entrySet = selectionSet.mergedEnter;\n        let values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.value);\n        if (type === STEP || (type === DISCRETE && fieldType === MEASURE)) {\n            const field = Object.keys(payload.criteria || {})[0];\n            values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.range);\n            propagationData = values.length ? metaData.select((fields) => {\n                let check = false;\n                for (let i = 0; i < values.length; i++) {\n                    check = fields[field].value >= values[i][0] && fields[field].value <= values[i][1];\n                    if (check === true) {\n                        break;\n                    }\n                }\n                return check;\n            }, {\n                saveChild: false\n            }) : null;\n        } else if (type === GRADIENT) {\n            propagationData = getDataModelFromRange(metaData, payload.criteria);\n        } else if (values.length) {\n            propagationData = assembleModelFromIdentifiers(metaData, [payload.criteria[0], ...values.map(d => [d])]);\n        } else {\n            propPayload.criteria = null;\n            propagationData = metaData.select(() => true, {\n                saveChild: false\n            });\n        }\n    }\n\n    let propagateInterpolatedValues = false;\n\n    if (propagationData) {\n        const schema = propagationData.getSchema();\n        propagateInterpolatedValues = schema.every(d => d.type === MEASURE);\n    }\n\n    const propConfig = {\n        sourceId: `legend-${sourceId}`,\n        payload: propPayload,\n        criteria: propPayload.criteria === null ? null : propagationData,\n        isMutableAction,\n        propagateInterpolatedValues,\n        action: propPayload.action\n    };\n\n    metaData.propagate(propagationData, propConfig, true);\n};\n","import { Firebolt } from '@chartshq/muze-firebolt';\nimport { propagate } from './helper';\nimport { STEP, GRADIENT } from '../enums/constants';\n\n/**\n * This class manages the interactions of legend.\n * @export\n * @class LegendFireBolt\n * @extends {Firebolt}\n */\nexport class LegendFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this.initializeSideEffects();\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet[0];\n    }\n\n    propagate (behaviourName, payload, selectionSet) {\n        propagate(this, behaviourName, selectionSet, {\n            payload\n        });\n    }\n\n    getAddSetFromCriteria (criteria) {\n        let values;\n        let uniqueIds;\n        const type = this.context.constructor.type();\n\n        if (criteria === null) {\n            uniqueIds = null;\n        } else if (type === STEP) {\n            values = Object.values(criteria);\n            uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n        } else if (type === GRADIENT) {\n            uniqueIds = [];\n        } else {\n            values = criteria[1];\n            if (values) {\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.value) !== -1).map(d => d.id);\n            } else {\n                values = Object.values(criteria);\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n            }\n        }\n        return {\n            uids: uniqueIds,\n            model: null\n        };\n    }\n\n    getFullData () {\n        return null;\n    }\n}\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\n/**\n * Adds dragging action to the target element.\n * @param {firebolt} firebolt firebolt\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let endPos = {};\n    let payload;\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const boundingBox = context.measurement().gradientDimensions;\n    const axisType = context.config().align === 'horizontal' ? 'x' : 'y';\n    const axisScale = context.axis().source().scale();\n    const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n    }).on('drag', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                    axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n            }\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }).on('end', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n        if (startPos[axisType] === endPos[axisType]) {\n            payload = {\n                criteria: {}\n            };\n        } else {\n            payload = {\n                criteria: {\n                    [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                        axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n                }\n            };\n        }\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }));\n};\n\nexport default drag;\n","import { getEvent } from 'muze-utils';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} Firebolt instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        const event = getEvent();\n                        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, {\n                            criteria: null\n                        }));\n                        event.stopPropagation();\n                    });\n};\n\nexport default hover;\n","/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nconst click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\n\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport click from './click';\nimport * as ACTIONNAMES from '../../enums/actions';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click\n};\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\n","import {\n    getMousePos,\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\nimport { HEIGHT, WIDTH, HORIZONTAL } from '../../enums/constants';\n\nconst getSelectionCriteria = (subject, axis, measures) => {\n    let criteria = [];\n    const {\n        axisScale,\n        axisType\n    } = axis;\n    const {\n        startPos,\n        endPos,\n        selectionBoxMeasure,\n        drawingInfMeasure,\n        offset\n    } = measures;\n    const subjectStartPoint = subject[axisType];\n\n    if (startPos[axisType] === endPos[axisType]) {\n        criteria = [];\n    } else if (subjectStartPoint + selectionBoxMeasure >= drawingInfMeasure + offset) {\n        criteria = [axisScale.invert(drawingInfMeasure + offset - selectionBoxMeasure),\n            axisScale.invert(drawingInfMeasure + offset)];\n    } else if (subjectStartPoint - offset < offset) {\n        criteria = [axisScale.invert(offset * 2), axisScale.invert(selectionBoxMeasure + offset * 2)];\n    } else {\n        criteria = [axisScale.invert(subjectStartPoint), axisScale.invert(subjectStartPoint + selectionBoxMeasure)];\n    }\n    axisType === 'x' ? criteria : criteria.reverse();\n    return criteria;\n};\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let payload;\n    const endPos = {};\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const axisScale = context.axis().source().scale();\n    const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n    const drawingInfMeasure = context.measurement().gradientDimensions[axisType === 'x' ?\n        WIDTH : HEIGHT];\n    const offset = axisScale.range()[axisType === 'x' ? 0 : 1];\n    const measures = {\n        drawingInfMeasure,\n        offset\n    };\n    let subject = {};\n\n    targetEl.call(d3Drag().on('start', function () {\n        const event = getEvent();\n        startPos = getMousePos(this, event.sourceEvent);\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n\n        subject.x += event.dx;\n        subject.y += event.dy;\n\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(subject, { axisScale, axisType }, measures);\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }).on('end', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(event, { axisScale, axisType }, measures);\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true,\n            config: {\n                transition: {\n                    duration: 200\n                }\n            }\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }));\n};\n\n","import { makeElement } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { CLASSPREFIX, HEIGHT, WIDTH, HORIZONTAL, RECT } from '../../../enums/constants';\nimport { SELECTIONBOX } from '../../../enums/side-effects';\nimport { selectionBoxDrag } from '../../physical/selection-box-drag';\nimport './styles.scss';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\n/* istanbul ignore next */ class SelectionBox extends SpawnableSideEffect {\n    static formalName () {\n        return SELECTIONBOX;\n    }\n\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            className: 'legend-selection-box',\n            classPrefix: CLASSPREFIX\n        };\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     */\n    /* istanbul ignore next */ apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const firebolt = this.firebolt;\n        const context = firebolt.context;\n        const config = this.config();\n        const axis = context.axis().source();\n        const className = `${config.classPrefix}-${config.className}`;\n\n        const domain = payload.criteria[firebolt.context.fieldName()];\n        const axisScale = axis.scale();\n        const range = domain ? [axis.getScaleValue(domain[0]), axis.getScaleValue(domain[1])] : [];\n\n        const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n\n        const gradientDimension = firebolt.context.measurement().gradientDimensions[axisType === 'x' ?\n            HEIGHT : WIDTH];\n\n        const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n        const legendGradContainer = context.getDrawingContext().svgContainer;\n        const legendSelGroup = makeElement(legendGradContainer, 'g', [1], `${config.classPrefix}-selection-box-group`);\n\n        if (firebolt.context.config().align === HORIZONTAL) {\n            x = range[0] - rangeShifter || 0;\n            y = 0;\n            width = range[1] - range[0] || 0;\n            height = gradientDimension;\n        } else {\n            x = 0;\n            y = range[1] - rangeShifter || 0;\n            height = range[0] - range[1] || 0;\n            width = gradientDimension;\n        }\n        const enterFn = function (el) {\n            selectionBoxDrag(firebolt)(el, ['brush']);\n        };\n        const selBox = makeElement(legendSelGroup, RECT, [{ domain, x, y, width, height }], className,\n            { enter: enterFn });\n        selBox.attr('y', y)\n                        .attr('x', x)\n                        .attr(WIDTH, width)\n                        .attr(HEIGHT, height);\n    }\n}\n\nexport default SelectionBox;\n\n","import { selectElement } from 'muze-utils';\n\nexport const strategies = (firebolt) => {\n    const context = firebolt.context;\n    const classed = (set, className, change) => {\n        const classPrefix = context.config().classPrefix;\n        selectElement(context.mount())\n                        .selectAll(`.${classPrefix}-legend-columns`)\n                        .filter(d => set.uids.indexOf(d.id) !== -1)\n                        .selectAll('div')\n                        .classed(className, change);\n    };\n\n    return {\n        fade: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-fadeout`, false);\n            } else {\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-fadeout`, true);\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-fadeout`, false);\n            }\n        },\n        brighten: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-brighten`, false);\n            } else {\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-brighten`, true);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n            }\n        }\n    };\n};\n","import { GenericSideEffect } from '@chartshq/muze-firebolt';\nimport { strategies } from './strategies';\nimport { Highlighter } from '../../../enums/side-effects';\n\nexport default class LegendHighlighter extends GenericSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategies = strategies(this.firebolt);\n        this._strategy = 'brighten';\n    }\n\n    static formalName () {\n        return Highlighter;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    data: {},\n    fieldName: {},\n    legendContainer: {},\n    measurement: {\n        sanitization: (context, value) => {\n            const measurement = mergeRecursive(context._measurement, value);\n            ['padding', 'border', 'margin'].forEach((space) => {\n                measurement[space] = Math.min(measurement[space] > 0 ? measurement[space] : 0,\n                     measurement.maxWidth * 0.1, measurement.maxHeight * 0.1);\n            });\n            return measurement;\n        }\n    },\n    logicalSpace: {},\n    metaData: {},\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.resetLogicalSpace();\n            context.store().commit('range', value);\n            return value;\n        }\n    },\n    scale: {},\n    smartTicks: {},\n    store: {},\n    title: {\n        sanitization: (context, value) => mergeRecursive(context._title || {}, value)\n    }\n};\n","import { getSymbol } from 'muze-utils';\nimport {\n    CENTER,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\nexport const ALIGN = {\n    HORIZONTAL: 'horizontal',\n    VERTICAL: 'vertical'\n};\n\nexport const DEFAULT_MEASUREMENT = {\n    height: 30,\n    width: 30,\n    maxWidth: Infinity,\n    maxHeight: Infinity,\n    padding: 2,\n    margin: 2,\n    border: 1\n};\n\nexport const LEGEND_TITLE = {\n    text: '',\n    orientation: (pos) => {\n        if (pos === LEFT || pos === RIGHT) {\n            return LEFT;\n        } return CENTER;\n    }\n};\n\nexport const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    borderStyle: 'solid',\n    borderColor: 'rgba(0,0,0,0)',\n    formatter: {\n        bounds: {\n            lower: 'less than',\n            upper: 'more than'\n        }\n    },\n    item: {\n        text: {\n            orientation: 'right',\n            width: 10,\n            formatter: val => val\n        },\n        icon: {\n            className: 'legend-icon',\n            height: 20,\n            width: 20,\n            color: 'rgba(0,0,0,.5)',\n            type: 'square'\n        }\n    }\n};\n\n/**\n * Creates a map of pre defined icons\n *\n * @param {string} icon Accepts a icon name like 'square', 'cross', 'diamond' etc\n * @return {Object} icon object which can be used to draw the icons\n */\nexport const ICON_MAP = (icon) => {\n    if (icon && typeof (icon) === 'string') {\n        return getSymbol(icon);\n    } return icon;\n};\n","import { makeElement, numberInterpolator } from 'muze-utils';\n\nimport {\n    SCALE_FUNCTIONS,\n    WIDTH,\n    HEIGHT,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} scale\n *\n */\nexport const getScaleInfo = (scale) => {\n    const scaleType = scale.constructor.type();\n    const domain = scale.uniqueValues();\n    const steps = scale.config().stops || 1;\n    const scaleFn = SCALE_FUNCTIONS[scaleType];\n\n    return { scaleType, domain, steps, scaleFn };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} steps\n *\n */\nexport const getInterpolatedData = (domain, steps) => {\n    const domainForLegend = [];\n    const interpolatedFn = numberInterpolator()(domain[0], domain[1]);\n\n    for (let i = 0; i <= steps; i++) {\n        domainForLegend[i] = interpolatedFn(i / steps);\n    }\n    return domainForLegend;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} text\n * @param {*} measurement\n * @param {*} classPrefix\n */\nexport const titleCreator = (container, title, measurement, config) => {\n    const titleContainer = makeElement(container, 'table', [1], `${config.classPrefix}-legend-title`)\n            .style(WIDTH, `${measurement.width}px`)\n            .style(HEIGHT, `${measurement.height}px`)\n            .style('border-bottom', `${measurement.border}px ${config.borderStyle} ${config.borderColor}`)\n            .style('text-align', title.orientation instanceof Function ?\n                    title.orientation(config.position) : title.orientation);\n    return makeElement(titleContainer, 'td', [1], `${config.classPrefix}-legend-title-text`)\n                    .style(WIDTH, `${measurement.width}px`)\n                    .style(HEIGHT, '100%')\n                    .style('padding', `${measurement.padding}px`)\n                    .text(title.text)\n                    .node();\n};\n\n                                /**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getMaxMeasures = (data, prop, labelManager) => {\n    let maxHeight = -Infinity;\n    let maxWidth = -Infinity;\n\n    data.forEach((item) => {\n        const value = prop ? item[prop] : item;\n        const space = labelManager.getOriSize(value);\n        maxHeight = Math.max(space.height + 2, maxHeight);\n        maxWidth = Math.max(space.width + 2, maxWidth);\n    });\n\n    return { height: maxHeight, width: maxWidth };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getItemMeasures = (data, prop, labelManager, formatter) => {\n    const space = [];\n\n    data.forEach((item, index) => {\n        const value = prop ? item[prop] : item;\n        const { height, width } = labelManager.getOriSize(formatter(value));\n        space[index] = { height: height + 1, width: width + 1 };\n    });\n    return space;\n};\n\n/**\n *\n *\n * @param {*} textOrientation\n * @param {*} effPadding\n * @param {*} titleSpace\n *\n * @memberof Legend\n */\nexport const computeItemSpaces = (config, measures, data) => {\n    let totalHeight = 0;\n    let totalWidth = 0;\n    let maxItemSpaces = {\n        width: 0, height: 0\n    };\n    const {\n        effPadding,\n        titleWidth,\n        labelSpaces,\n        titleHeight,\n        maxWidth\n    } = measures;\n    const {\n        item,\n        align\n    } = config;\n    const {\n        icon,\n        text\n    } = item;\n    const textOrientation = text.orientation;\n    const itemSpaces = [];\n    const iconSpaces = [];\n    let maxIconWidth = 0;\n    labelSpaces.forEach((labelSpace, i) => {\n        const itemSpace = { width: 0, height: 0 };\n        const iconSpace = { width: 0, height: 0 };\n        const datum = data[i] || {};\n            // Compute each legend item height/width\n        if (textOrientation === LEFT || textOrientation === RIGHT) {\n            // Get label, icon and item widths\n            labelSpace.width += effPadding;\n            iconSpace.width = (datum.size ? 2 * Math.sqrt(datum.size / Math.PI) : icon.width) + effPadding;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n            itemSpace.width = labelSpace.width + maxIconWidth;\n\n            // Get label, icon and item heights\n            labelSpace.height = Math.max(labelSpace.height, icon.height) + effPadding;\n            iconSpace.height = labelSpace.height;\n            itemSpace.height = labelSpace.height;\n        } else {\n            // Get label, icon and item widths\n            labelSpace.width = Math.max(labelSpace.width, datum.size ? 2 * Math.sqrt(datum.size / Math.PI)\n            : icon.width) + effPadding;\n            iconSpace.width = labelSpace.width;\n            itemSpace.width = labelSpace.width;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n\n            // Get label, icon and item heights\n            labelSpace.height += effPadding;\n            iconSpace.height = icon.height + effPadding;\n            itemSpace.height = labelSpace.height + iconSpace.height;\n        }\n        // Compute height and width of legend for each alignment\n        if (align === 'horizontal') {\n            totalHeight = Math.max(totalHeight, itemSpace.height);\n        } else {\n            totalHeight += itemSpace.height;\n            totalWidth = Math.max(totalWidth, itemSpace.width, titleWidth) + effPadding;\n        }\n        maxItemSpaces = {\n            width: Math.max(itemSpace.width, maxItemSpaces.width),\n            height: Math.max(itemSpace.height, maxItemSpaces.height)\n        };\n        itemSpaces.push(itemSpace);\n        iconSpaces.push(iconSpace);\n    });\n    itemSpaces.forEach((itemSpace, i) => {\n        if (align === 'horizontal') {\n            itemSpace.height = totalHeight;\n            iconSpaces[i].width = maxIconWidth;\n            if (textOrientation === LEFT || textOrientation === RIGHT) {\n                labelSpaces[i].height = totalHeight;\n                iconSpaces[i].height = totalHeight;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n            } else {\n                labelSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = maxIconWidth;\n                labelSpaces[i].width = maxIconWidth;\n            }\n            totalWidth = Math.max(totalWidth + itemSpaces[i].width);\n        } else {\n            itemSpace.width = Math.max(totalWidth, maxWidth);\n            if (textOrientation === TOP || textOrientation === BOTTOM) {\n                labelSpaces[i].width = totalWidth;\n                iconSpaces[i].width = totalWidth;\n                maxIconWidth = totalWidth;\n            } else {\n                iconSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n                labelSpaces[i].width = maxItemSpaces.width - maxIconWidth;\n                totalWidth = Math.max(totalWidth, itemSpace.width) + effPadding;\n            }\n        }\n    });\n    totalWidth = Math.max(totalWidth, titleWidth);\n    totalHeight += titleHeight + effPadding;\n\n    return { totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth };\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} scaleInfo\n * @param {*} domainInfo\n *\n */\nexport const getDomainBounds = (type, scaleInfo, domainInfo) => {\n    const {\n        scaleFn,\n        scaleType,\n        scale\n    } = scaleInfo;\n    const {\n        domain,\n        domainBounds,\n        domainLeg,\n        steps\n    } = domainInfo;\n    const ele = domain[type === 'lower' ? 0 : domain.length - 1];\n    const step = steps[type === 'lower' ? 0 : steps.length - 1];\n\n    return {\n        [scaleType]: scaleType === 'size' ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n        value: domainBounds[type],\n        id: type === 'lower' ? 0 : domainLeg.length + 2,\n        range: [ele, step]\n    };\n};\n","import {\n    makeElement,\n    selectElement,\n    getUniqueId,\n    getSmartComputedStyle,\n    generateGetterSetters,\n    mergeRecursive\n} from 'muze-utils';\nimport { behaviouralActions } from '@chartshq/muze-firebolt';\nimport * as legendBehaviours from '../firebolt/behavioural';\n\nimport { LegendFireBolt } from '../firebolt/legend-firebolt';\nimport { actionBehaviourMap } from '../firebolt/action-behaviour-map';\nimport { physicalActions } from '../firebolt/physical';\nimport * as sideEffects from '../firebolt/side-effects';\nimport { behaviourEffectMap } from '../firebolt/behaviour-effect-map';\nimport { VALUE, PATH } from '../enums/constants';\nimport { PROPS } from './props';\nimport { DEFAULT_MEASUREMENT, DEFAULT_CONFIG, LEGEND_TITLE } from './defaults';\nimport { getItemMeasures, titleCreator, computeItemSpaces } from './legend-helper';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class SimpleLegend\n */\nexport default class SimpleLegend {\n\n    /**\n     * Creates an instance of Legend.\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @memberof Legend\n     */\n    constructor (dependencies) {\n        this._data = [];\n        this._metaData = [];\n        this._mount = null;\n        this._fieldName = null;\n        this._title = Object.assign({}, LEGEND_TITLE);\n        this._metaData = null;\n        this._labelManager = dependencies.labelManager;\n        this._cells = dependencies.cells;\n        this._id = getUniqueId();\n        this._measurement = Object.assign({}, this.constructor.defaultMeasurement());\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n\n        generateGetterSetters(this, PROPS);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'),\n            `${this.config().classPrefix}-legend-item-info`);\n\n        this._firebolt = new LegendFireBolt(this, {\n            behavioural: Object.assign({}, behaviouralActions, legendBehaviours),\n            physical: physicalActions,\n            physicalBehaviouralMap: actionBehaviourMap\n        }, sideEffects, behaviourEffectMap);\n    }\n\n    id () {\n        return this._id;\n    }\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new SimpleLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENT;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleLegend\n     */\n    firebolt (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return PATH;\n    }\n\n    canvasAlias (...alias) {\n        if (alias.length) {\n            this._canvasAlias = alias[0];\n            return this;\n        }\n        return this._canvasAlias;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    mount (...params) {\n        if (params.length) {\n            this._mount = params[0];\n            this.render();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces () {\n        const {\n            item,\n            classPrefix\n        } = this.config();\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n            `${classPrefix}-legend-item-info`));\n        return getItemMeasures(this.data(), VALUE, this._labelManager, item.text.formatter);\n    }\n\n    /**\n     * Sets the height and width of a legend based on provided max\n     * height and width and based on its contents\n     *\n     * @return {Instance} Current instance\n     * @memberof Legend\n     */\n    setLegendMeasures () {\n        const {\n           width,\n           height,\n           maxWidth,\n           maxHeight,\n           padding,\n           margin,\n           border\n       } = this.measurement();\n        const {\n            align\n        } = this.config();\n\n        // Effective padding, margin and padding\n        const effPadding = padding * 2;\n        const effBorder = border * 2;\n        const effMargin = margin * 2;\n\n        this.data(this.dataFromScale(this.scale()));\n        // Get space occupied by title\n        const titleSpace = this.getTitleSpace();\n        const titleHeight = titleSpace.height > 0 ? titleSpace.height + effPadding : 0;\n        const titleWidth = titleSpace.width + effPadding;\n\n        // Get space occupied by labels\n        const labelSpaces = this.getLabelSpaces(effPadding, align);\n\n        const {\n            totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth\n        } = computeItemSpaces(this.config(),\n        { effPadding, titleWidth, labelSpaces, titleHeight, maxWidth, maxHeight }, this.data());\n\n        this.measurement({\n            width: Math.max(totalWidth, width) + effMargin + effBorder,\n            height: Math.max(totalHeight, height) + effMargin + effBorder,\n            labelSpaces,\n            iconSpaces,\n            itemSpaces,\n            maxItemSpaces,\n            maxIconWidth,\n            titleSpaces: {\n                width: Math.min(maxWidth, this.measurement().width) - effMargin - effBorder,\n                height: titleHeight\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Returns the space occupied by the legend title\n     *\n     * @return {Object} Space occupied by title\n     * @memberof Legend\n     */\n    getTitleSpace () {\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n                                                 `${this.config().classPrefix}-legend-title`));\n        return this._labelManager.getOriSize(this.title().text ? this.title().text : '');\n    }\n\n    /**\n     * Creates the title for the legend\n     *\n     * @param {DOM} container Container made for the title\n     * @return {Selection} Title and it's node\n     * @memberof Legend\n     */\n    renderTitle (container) {\n        const { titleSpaces, border, padding, width } = this.measurement();\n        const { borderStyle, borderColor } = this.config();\n        return titleCreator(container, this.title(), {\n            height: titleSpaces.height,\n            width,\n            border,\n            padding,\n            borderStyle,\n            borderColor\n        }, this.config());\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const {\n            classPrefix,\n            borderStyle,\n            borderColor\n        } = this.config();\n        const {\n           maxWidth,\n           maxHeight,\n           width,\n           height,\n           margin,\n           border\n       } = this.measurement();\n        const legendContainer = makeElement(selectElement(this.mount()), 'div', [1], `${classPrefix}-legend-box`);\n\n        legendContainer.classed(`${classPrefix}-legend-box-${this._id}`, true);\n        legendContainer.style('float', 'left');\n        // set height and width\n        legendContainer.style('width', `${Math.min(maxWidth, width) - margin * 2}px`)\n                        .style('height', `${Math.min(maxHeight, height) - margin * 2}px`)\n                        .style('margin', `${margin}px`)\n                        .style('border', `${border}px ${borderStyle} ${borderColor}`);\n        this.legendContainer(legendContainer.node());\n\n        // create title\n        this.renderTitle(legendContainer);\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n  /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        const type = this.metaData().getData().schema[0].type;\n        if (type === 'measure') {\n            return {\n                [fieldName]: data.range\n            };\n        }\n        return [[fieldName], [data.value]];\n    }\n}\n","import {\n    LEFT,\n    RIGHT,\n    START,\n    END,\n    TOP,\n    BOTTOM,\n    HORIZONTAL,\n    VERTICAL,\n    CENTER,\n    SHAPE,\n    VALUE\n} from '../enums/constants';\n\nconst legendOrientation = {\n    [HORIZONTAL]: {\n        datasets: data => ({\n            row: [1],\n            column: data\n        }),\n        itemContainerMeasures: (measurement) => {\n            const {\n                itemSpaces,\n                width\n            } = measurement;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                },\n                column: {\n                    width: (d, i) => `${itemSpaces[i].width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, height } = measurement;\n            return {\n                iconHeight: height,\n                iconWidth: maxItemSpaces.width,\n                stepPadding: {\n                    horizontal: true,\n                    vertical: false\n                }\n            };\n        }\n    },\n    [VERTICAL]: {\n        datasets: data => ({\n            row: data,\n            column: d => [d]\n        }),\n        itemContainerMeasures: (measurement, config) => {\n            const {\n                width\n            } = measurement;\n            const { padding } = config;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${padding}px`\n                },\n                column: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, width } = measurement;\n            return {\n                iconHeight: maxItemSpaces.height,\n                iconWidth: width,\n                stepPadding: {\n                    horizontal: false,\n                    vertical: true\n                }\n            };\n        }\n    }\n};\n\nexport const positionConfig = {\n    [LEFT]: legendOrientation[VERTICAL],\n    [RIGHT]: legendOrientation[VERTICAL],\n    [TOP]: legendOrientation[HORIZONTAL],\n    [BOTTOM]: legendOrientation[HORIZONTAL]\n};\n\nexport const alignmentMap = {\n    [LEFT]: END,\n    [RIGHT]: START,\n    [TOP]: CENTER,\n    [BOTTOM]: CENTER\n};\n\n// Reverses data for step legend\nexport const stepData = data => ({\n    [LEFT]: data.reverse(),\n    [RIGHT]: data.reverse(),\n    [TOP]: data,\n    [BOTTOM]: data\n});\n\n// Changes the item layout based on the position of the text\nexport const itemStack = {\n    [LEFT]: [VALUE, SHAPE],\n    [RIGHT]: [SHAPE, VALUE],\n    [TOP]: [VALUE, SHAPE],\n    [BOTTOM]: [SHAPE, VALUE]\n};\n","import { makeElement, selectElement, applyStyle } from 'muze-utils';\nimport { ICON_MAP } from './defaults';\nimport { positionConfig, alignmentMap, itemStack } from './position-config';\nimport {\n    WIDTH,\n    HEIGHT,\n    CENTER,\n    VALUE,\n    RECT,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} legendInstance\n * @param {*} align\n *\n */\nexport const getItemContainers = (container, data, legendInstance) => {\n    const measurement = legendInstance.measurement();\n    const config = legendInstance.config();\n    const {\n        itemSpaces\n    } = measurement;\n    const {\n        classPrefix,\n        position\n    } = config;\n    const positionObj = positionConfig[position];\n    const datasets = positionObj.datasets(data);\n    const measures = positionObj.itemContainerMeasures(measurement, config);\n\n    const rows = makeElement(container, 'div', datasets.row, `${classPrefix}-legend-row`);\n    rows.style(HEIGHT, (d, i) => `${itemSpaces[i].height}px`);\n    rows.style(WIDTH, measures.row.width);\n    rows.style('padding', measures.row.padding);\n\n    const columns = makeElement(rows, 'div', datasets.column, `${classPrefix}-legend-columns`);\n    columns.style(WIDTH, measures.column.width);\n    columns.style('padding', measures.column.padding);\n\n    return columns;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} classPrefix\n * @param {*} data\n *\n * @memberof DiscreteLegend\n */\nexport const createLegendSkeleton = (context, container, classPrefix, data) => {\n    let gradWidth = 0;\n    let gradHeight = 0;\n    let maxGradHeight = 0;\n    let maxGradWidth = 0;\n    const measurement = context.measurement();\n    const {\n            margin,\n            border,\n            titleSpaces,\n            width,\n            height,\n            maxWidth,\n            maxHeight\n        } = measurement;\n\n    gradHeight = height - (titleSpaces.height + 2 * margin + 2 * border);\n    gradWidth = width - (margin * 2 + border * 2);\n\n    maxGradHeight = maxHeight - (titleSpaces.height + margin * 2 + border * 2);\n    maxGradWidth = maxWidth - (margin * 2 + border * 2);\n\n    let legendBody = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    legendBody.select(`.${classPrefix}-legend-overflow`).remove();\n        // Create a div with scroll when overflow\n    if (maxGradWidth && maxGradWidth < gradWidth) {\n        legendBody = legendBody.style(WIDTH, `${maxGradWidth}px`).style('overflow-x', 'scroll');\n    }\n        // Create a div with scroll when overflow\n    if (maxGradHeight && maxGradHeight < gradHeight) {\n        legendBody.style(HEIGHT, `${maxGradHeight}px`).style('overflow-y', 'scroll');\n    }\n\n    legendBody = makeElement(legendBody, 'div', [1], `${classPrefix}-legend-overflow`);\n\n    legendBody.style(WIDTH, `${gradWidth}px`);\n    legendBody.style(HEIGHT, `${gradHeight}px`);\n\n    const legendItem = getItemContainers(legendBody, data, context);\n    return { legendItem };\n};\n\n/**\n * Creates legend item based on alignment and text orientation\n *\n * @param {Selection} container Point where items are to be mounted\n * @return {Instance} Current instance\n * @memberof Legend\n */\nexport const createItemSkeleton = (context, container) => {\n    const {\n        classPrefix,\n        item\n    } = context.config();\n    const textOrientation = item.text.orientation;\n\n    const stack = itemStack[textOrientation];\n    const itemSkeleton = makeElement(container, 'div', (d, i) => stack.map(e => [e, d[e], d.color, d.size,\n        d.value, context.fieldName(), i]), `${classPrefix}-legend-item-info`);\n\n    const alignClass = alignmentMap[textOrientation];\n\n    itemSkeleton.classed(alignClass, true);\n    return { itemSkeleton };\n};\n\n/**\n *\n *\n * @param {*} measureType\n * @param {*} stepColorCheck\n */\nexport const applyItemStyle = (item, measureType, stepColorCheck, context) => {\n    const {\n        padding,\n        labelSpaces,\n        iconSpaces,\n        maxIconWidth\n    } = context.measurement();\n    const diff = stepColorCheck ? -padding * 2 : 0;\n\n    if (item[0] === VALUE) {\n        return `${labelSpaces[item[6]][measureType]}px`;\n    }\n    return `${measureType === 'width' && !stepColorCheck ? maxIconWidth : iconSpaces[item[6]][measureType] - diff}px`;\n};\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem, defaultIcon, width, height) {\n    const groupElement = elem;\n    // const { shape, size, update } = d;\n    const size = d[3] || Math.min(width, height) * Math.PI;\n    const shape = d[1] || defaultIcon;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            return createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        shapeElement.attr('transform', `scale(${size / 100})`);\n        return selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = ICON_MAP(shape).size(size)();\n        }\n        return makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    }\n    d[1] = 'circle';\n    return createShape(d, elem, 'circle');\n};\n\n/**\n * Returns the icon of the legend item\n *\n * @param {Object} datum Data property attached to the item\n * @param {number} width width of the item\n * @param {number} height height of the item\n * @return {Object|string} returns the path string or the string name of the icon\n * @memberof Legend\n */\nexport const getLegendIcon = (datum, width, height, defaultIcon) => {\n    const icon = ICON_MAP(datum[1]);\n\n    if (icon) {\n        return icon.size(datum[3] || Math.min(width, height) * Math.PI);\n    }\n    return ICON_MAP(datum[3] ? 'circle' : defaultIcon).size(datum[3] || Math.min(width, height) * Math.PI);\n};\n\n/**\n *\n *\n */\nexport const renderIcon = (icon, container, datum, context) => {\n    const {\n        classPrefix,\n        iconHeight,\n        iconWidth,\n        maxIconWidth,\n        padding,\n        color\n    } = context;\n    const svg = makeElement(container, 'svg', f => [f], `${classPrefix}-legend-icon-svg`)\n    .attr(WIDTH, maxIconWidth)\n    .attr(HEIGHT, iconHeight)\n    .style(WIDTH, `${maxIconWidth}px`)\n    .style(HEIGHT, `${iconHeight}px`);\n\n    if (icon !== RECT) {\n        const group = makeElement(svg, 'g', [datum[1]], `${classPrefix}-legend-icon`);\n        createShape(datum, group, datum[3] ? 'circle' : 'square', iconWidth, iconHeight)\n                        .attr('transform', `translate(${maxIconWidth / 2 - padding} ${iconHeight / 2})`)\n                        .attr('fill', datum[2] || color);\n    } else {\n        makeElement(svg, RECT, [datum[1]], `${classPrefix}-legend-icon`)\n                        .attr('x', 0)\n                        .attr('y', 0)\n                        .attr(WIDTH, maxIconWidth)\n                        .attr(HEIGHT, iconHeight)\n                        .attr('fill', datum[2] || color);\n    }\n};\n\n/**\n * Renders the items in the legend i.e, icon and text\n *\n * @param {DOM} container Point where item is to be mounted\n * @memberof Legend\n */\nexport const renderDiscreteItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n           item,\n           classPrefix\n    } = context.config();\n    const {\n        maxIconWidth,\n        padding\n    } = context.measurement();\n    const {\n            width: iconWidth,\n            height: iconHeight,\n            color,\n            className\n        } = item.icon;\n\n    const textOrientation = item.text.orientation;\n    const formatter = item.text.formatter;\n\n    labelManager.useEllipsesOnOverflow(true);\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, false, context),\n        height: d => applyItemStyle(d, HEIGHT, false, context),\n        'text-align': CENTER,\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1]))\n                            .style(`padding-${textOrientation === RIGHT ? LEFT : RIGHT}`, '0px');\n        } else {\n            // const icon = getLegendIcon(d, iconWidth, iconHeight, type);\n            selectElement(this).classed(`${classPrefix}-${className}`, true);\n            selectElement(this).classed(`${classPrefix}-${className}-${i}`, true);\n            renderIcon('circle', selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                // iconWidth: 2 * Math.sqrt(d[3] / Math.PI) || iconWidth,\n                iconHeight,\n                maxIconWidth,\n                padding,\n                color\n            });\n        }\n    });\n};\n\n/**\n* Renders the items in the legend i.e, icon and text\n*\n* @param {DOM} container Point where item is to be mounted\n* @memberof Legend\n*/\nexport const renderStepItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n      item,\n      position,\n      classPrefix\n   } = context.config();\n    const {\n      maxItemSpaces,\n      maxIconWidth,\n      padding\n   } = context.measurement();\n    const {\n       width,\n       height,\n       color\n   } = item.icon;\n    const {\n        formatter\n   } = item.text;\n\n    labelManager.useEllipsesOnOverflow(true);\n    const { iconHeight, iconWidth, stepPadding } = positionConfig[position].getStepSpacesInfo({\n        maxItemSpaces, height, width\n    });\n\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, stepPadding.horizontal, context),\n        height: d => applyItemStyle(d, HEIGHT, stepPadding.vertical, context),\n        'text-align': 'center',\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    container.each(function (d) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1]));\n        } else {\n            renderIcon(RECT, selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                iconHeight,\n                maxIconWidth,\n                color\n            });\n        }\n    });\n};\n","import SimpleLegend from './simple-legend';\nimport { DISCRETE, LEFT, SIZE } from '../enums/constants';\nimport { getScaleInfo } from './legend-helper';\nimport { createLegendSkeleton, createItemSkeleton, renderDiscreteItem } from './renderer';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class DiscreteLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new DiscreteLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof DiscreteLegend\n     */\n    static type () {\n        return DISCRETE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof DiscreteLegend\n     */\n    dataFromScale (scale) {\n        const { scaleType, domain, scaleFn } = getScaleInfo(scale);\n        let domainForLegend = [...new Set(domain)];\n        const type = this.metaData().getData().schema[0].type;\n\n        domainForLegend = domainForLegend.map((ele, i) => {\n            let value = 0;\n            let range = 0;\n            if (type === 'measure') {\n                value = (+domainForLegend[i]).toFixed(0);\n                const nextVal = domainForLegend[i + 1] ? +domainForLegend[i + 1] : +value;\n                range = [value, nextVal.toFixed(0)];\n            } else {\n                value = domainForLegend[i];\n                range = [domainForLegend[i]];\n            }\n            return {\n                [scaleType]: scale[scaleFn](ele),\n                value,\n                id: i,\n                range\n            };\n        }).filter(d => d.value !== null);\n\n        domainForLegend = scaleType === SIZE ? domainForLegend.sort((a, b) => a[scaleType] - b[scaleType])\n            : domainForLegend;\n        return domainForLegend;\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const data = this.data();\n        const { classPrefix } = this.config();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n        renderDiscreteItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n}\n","import { makeElement, applyStyle } from 'muze-utils';\nimport { ContinousAxis } from '@chartshq/muze-axis';\nimport { BOTTOM, RIGHT } from '../enums/constants';\nimport { ALIGN } from './defaults';\nimport '../styles.scss';\n\n/**\n *\n *\n * @param {*} data\n *\n */\nexport const getGradientDomain = (data) => {\n    if (typeof data[0].value === 'number') {\n        return data.reduce((accumulator, currentValue) =>\n            [Math.min(currentValue.value, accumulator[0]), Math.max(currentValue.value, accumulator[1])],\n                [Number.MAX_VALUE, Number.MIN_VALUE]);\n    }\n    return data.map(e => e.value);\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} domain\n *\n */\nexport const makeLinearGradient = (container, data, domain) => {\n    const defs = makeElement(container, 'defs', [1]);\n    const linearGradient = makeElement(defs, 'linearGradient', [1])\n                .attr('id', 'linear-gradient')\n                .attr('x1', '0%')\n                .attr('y2', '0%');\n    makeElement(linearGradient, 'stop', data, 'stop-gradient')\n                    .attr('offset', d => `${(d.value - domain[0]) * 100 / (domain[1] - domain[0])}%`)\n                    .attr('stop-color', d => d.color);\n    return linearGradient;\n};\n\n/**\n * Creates an axis cell with a linear axis for computing space and\n * creating gradient legend\n *\n * @return {AxisCell} Instance of Axis Cell for the gradient axis\n * @memberof Legend\n */\nexport const createAxis = (context) => {\n    const data = context.data();\n    const { align } = context.config();\n    const AxisCell = context._cells.AxisCell;\n    const newAxis = new ContinousAxis({\n        id: `legend-${context._id}`,\n        orientation: align === ALIGN.VERTICAL ? RIGHT : BOTTOM,\n        style: context._computedStyle,\n        nice: false,\n        showAxisName: false,\n        tickValues: data.map(d => d.value),\n        fixedBaseline: false,\n        labels: {\n            rotation: 0\n        }\n    }, { labelManager: context._labelManager });\n\n    newAxis.domain(getGradientDomain(data));\n    newAxis.range([1, 1]);\n    return new AxisCell().source(newAxis).config({\n        margin: { left: 0, bottom: 0, top: 0, right: 0 }\n    });\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} classPrefix\n *\n * @memberof GradientLegend\n */\nconst createLegendSkeleton = (container, classPrefix, data) => {\n    const domain = getGradientDomain(data);\n    const legendContainer = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    const legendGradSvg = makeElement(legendContainer, 'svg', [1], `${classPrefix}-gradient`);\n    const legendGradCont = makeElement(legendGradSvg, 'g', [1], `${classPrefix}-gradient-group`);\n    const linearGradient = makeLinearGradient(legendGradSvg, data, domain);\n    const legendRect = makeElement(legendGradCont, 'rect', [1], `${classPrefix}-gradient-rect`);\n\n    return {\n        legendContainer,\n        legendGradCont,\n        legendGradSvg,\n        linearGradient,\n        legendRect\n    };\n};\n\n/**\n * Renders the axis for the gradient\n *\n * @param {Selection} container Point where axis is to be mounted\n * @param {number} height Height for axis\n * @param {number} width Width for axis\n * @memberof Legend\n */\nexport const renderAxis = (context, container, height, width) => {\n    const axis = context.axis();\n\n    axis.setAvailableSpace(width, height);\n    axis.render(container.node());\n    axis.source().render();\n};\n\n/**\n * Renders gradient legends\n *\n * @param {Selection} container Point where the legend is to be appended\n * @memberof GradientLegend\n */\nexport const renderGradient = (context, container) => {\n    let gradHeight = 0;\n    let gradWidth = 0;\n    const {\n        align,\n        classPrefix,\n        item\n    } = context.config();\n    const data = context.data();\n    // Create the skeleton for the legend\n    const {\n        legendContainer,\n        legendGradSvg,\n        legendGradCont,\n        linearGradient,\n        legendRect\n    } = createLegendSkeleton(container, classPrefix, data);\n    const labelDim = context.axis().source().getAxisDimensions().tickDimensions;\n    const {\n        padding,\n        margin,\n        border,\n        titleSpaces,\n        maxHeight,\n        maxWidth,\n        height,\n        width\n    } = context.measurement();\n    const gradientDimensions = {};\n\n    gradHeight = Math.floor(height - (titleSpaces.height + 2 * margin + 2 * border));\n    gradWidth = Math.floor(width - (margin * 2 + border * 2));\n\n    if (align === ALIGN.HORIZONTAL) {\n        gradientDimensions.height = item.icon.height;\n        gradientDimensions.width = gradWidth - 2 * padding - labelDim.width / 2;\n        linearGradient.attr('x2', '100%').attr('y1', '0%');\n        legendGradCont.attr('transform', `translate( ${labelDim.width / 2} 0)`);\n        renderAxis(context, legendContainer, gradHeight - item.icon.height - padding, gradWidth - 2 * padding - 1);\n        legendContainer.classed(`${classPrefix}-overflow-x`, width > maxWidth);\n\n        applyStyle(legendContainer, {\n            height: `${height}px`,\n            width: `${Math.min(width, maxWidth)}px`,\n            padding: `${padding}px`\n        });\n\n        legendRect.attr('height', gradientDimensions.height);\n        legendRect.attr('width', gradientDimensions.width - labelDim.width / 2);\n    } else {\n        gradientDimensions.height = gradHeight - 2 * padding - labelDim.height / 2;\n        gradientDimensions.width = item.icon.width;\n        linearGradient.attr('x2', '0%').attr('y1', '100%');\n        legendGradCont.attr('transform', `translate(0 ${labelDim.height / 2})`);\n        renderAxis(context, legendContainer, gradHeight - 2 * padding - 1, gradWidth - item.icon.width - padding * 2);\n        legendContainer.classed(`${classPrefix}-overflow-y`, height > maxHeight);\n        applyStyle(legendContainer, {\n            height: `${Math.min(height, maxHeight)}px`,\n            width: `${width}px`,\n            padding: `${padding}px`\n        });\n        legendRect.attr('height', gradientDimensions.height - labelDim.height / 2);\n        legendRect.attr('width', gradientDimensions.width);\n    }\n\n    // Apply Styles to the legend plot area\n    applyStyle(legendGradSvg, {\n        height: `${gradientDimensions.height}px`,\n        width: `${gradientDimensions.width}px`\n    });\n\n        // Apply styles to the legend rect\n    applyStyle(legendRect, {\n        fill: 'url(#linear-gradient)'\n    });\n    legendGradSvg.attr('height', gradientDimensions.height);\n    legendGradSvg.attr('width', gradientDimensions.width);\n\n    context.measurement({\n        gradientDimensions\n    });\n    context._legendGradientSvg = legendGradSvg;\n    return context;\n};\n","import SimpleLegend from './simple-legend';\nimport { getScaleInfo, getInterpolatedData } from './legend-helper';\nimport { GRADIENT, LEFT, SIZE } from '../enums/constants';\nimport { renderGradient, createAxis } from './gradient-helper';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class GradientLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new GradientLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof GradientLegend\n     */\n    static type () {\n        return GRADIENT;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axis\n     *\n     * @memberof GradientLegend\n     */\n    axis (...axis) {\n        if (axis.length) {\n            this._axis = axis[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof GradientLegend\n     */\n    dataFromScale (scale) {\n        let domainForLegend = [];\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainForLegend[0] = domain[0];\n            }\n            domainForLegend = [...domainForLegend, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainForLegend.push(domain[1]);\n            }\n        } else {\n            domainForLegend = getInterpolatedData(domain, steps - 1);\n        }\n        domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n        return domainForLegend.map((ele, i) => {\n            const value = domainForLegend[i];\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor()\n                    : scale[scaleFn](Math.floor(ele)),\n                value: +value.toFixed(2),\n                id: i\n            };\n        }).filter(d => d.value !== null);\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        const axis = createAxis(this);\n        const axisSpace = axis.getLogicalSpace();\n        const space = { width: axisSpace.width - effPadding, height: axisSpace.height - effPadding };\n        const axisDomainLength = axis.source().domain().length;\n        const labelSpaces = new Array(axisDomainLength).fill(space);\n\n        this.axis(axis);\n        return labelSpaces;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof GradientLegend\n     */\n    getDrawingContext () {\n        return {\n            svgContainer: this._legendGradientSvg\n        };\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        renderGradient(this, legendContainer);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof SimpleLegend\n     */\n    getCriteriaFromData (data) {\n        return [[this.fieldName()], [data.value]];\n    }\n}\n","import SimpleLegend from './simple-legend';\nimport {\n    getScaleInfo,\n    getInterpolatedData,\n    getDomainBounds\n} from './legend-helper';\nimport {\n    createLegendSkeleton,\n    createItemSkeleton,\n    renderStepItem\n} from './renderer';\nimport { STEP, RECT, LEFT, SIZE, UPPER, LOWER } from '../enums/constants';\nimport { stepData } from './position-config';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class StepLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new StepLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof StepLegend\n     */\n    static type () {\n        return STEP;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof StepLegend\n     */\n    dataFromScale (scale) {\n        let domainLeg = [];\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        const { formatter } = this.config();\n        const domainBounds = {\n            lower: null, upper: null\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainBounds.lower = [`${formatter.bounds.lower} ${steps[0]}`];\n            }\n            domainLeg = [...domainLeg, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainBounds.upper = [`${formatter.bounds.upper} ${steps[steps.length - 1]}`];\n            }\n        } else {\n            domainLeg = getInterpolatedData(domain, steps);\n        }\n\n        domainLeg = [...new Set(domainLeg)].sort((a, b) => a - b);\n        domainLeg = domainLeg.map((ele, i) => {\n            let value = null;\n            if (i < domainLeg.length - 1) {\n                value = `${(ele.toFixed(1))} - ${(+domainLeg[i + 1].toFixed(1))}`;\n            }\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n                value,\n                id: i + 1,\n                range: [ele, domainLeg[i + 1]]\n            };\n        }).filter(d => d.value !== null);\n\n        if (domainBounds.lower) {\n            const lowerBounds = getDomainBounds(LOWER, { scale, scaleFn, scaleType },\n                { domain, steps, domainBounds });\n            domainLeg = [lowerBounds, ...domainLeg];\n        }\n        if (domainBounds.upper) {\n            const upperBounds = getDomainBounds(UPPER, { scale, scaleFn, scaleType },\n            { domain, steps, domainBounds, domainLeg });\n            domainLeg = [...domainLeg, upperBounds];\n        }\n        return domainLeg;\n    }\n\n     /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding, align) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        return super.getLabelSpaces(effPadding, align);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return RECT;\n    }\n\n     /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const { classPrefix, position } = this.config();\n        const data = stepData(this.data())[position];\n\n        const legendContainer = super.render(this.mount());\n\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n\n        renderStepItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        return {\n            [fieldName]: data.range\n        };\n    }\n}\n","import { GradientLegend, DiscreteLegend, StepLegend } from '@chartshq/muze-legend';\n\n/**\n * Contants to be used as attr\n */\nexport const ROWS = 'rows';\nexport const COLUMNS = 'columns';\nexport const DATA = 'data';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\nexport const DETAIL = 'detail';\nexport const LAYERS = 'layers';\nexport const TRANSFORM = 'transform';\nexport const INITIALIZED = 'isInitialized';\nexport const SOURCE = 'source';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const PADDING = 'padding';\nexport const BORDER = 'border';\nexport const MARGIN = 'margin';\nexport const CONFIG = 'config';\nexport const MOUNT = 'mount';\nexport const CANVAS_UPDATED = 'canvasUpdated';\nexport const CLASSPREFIX = 'classPrefix';\nexport const POLICIES = '_policies';\nexport const LEGEND = 'legend';\nexport const TITLE = 'title';\nexport const SUB_TITLE = 'subtitle';\nexport const RESOLVE = 'resolve';\nexport const DISCRETE = 'discrete';\nexport const STEP_COLOR = 'step-color';\nexport const GRADIENT = 'gradient';\nexport const LINEAR = 'linear';\nexport const ORDINAL = 'ordinal';\nexport const MUZE_PREFIX = 'muze';\n\nexport const TITLE_TEMPLATE_NOT_ALLOWED_TAGS = [\n    'script',\n    'style'\n];\n\nexport const LEGEND_TYPE_MAP = {\n    [`${ORDINAL}-${true}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${COLOR}`]: StepLegend,\n    [`${LINEAR}-${false}-${COLOR}`]: GradientLegend\n};\n\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const GROUP = 'group';\nexport const LAYOUT = 'layout';\nexport const RETINAL = 'retinal';\nexport const DIMENSION = 'dimension';\nexport const MEASURE = 'measure';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\n","import { ComposedVars, SimpleVariable } from '@chartshq/visual-group';\nimport { TITLE_TEMPLATE_NOT_ALLOWED_TAGS } from './constants';\n\n/**\n * This method creates a new composed variable instance from multiple variables. This is required when we have multiple\n * variables on a single axis and the union of domain of all the variables needs to be set on the axis.\n *\n * To create a new composed variable from multiple fields,\n * ```\n *  const sharedVar = share('open', 'high', 'low', 'close');\n *  canvas.rows([sharedVar])\n *      .columns(['date']);\n * ```\n *\n * @module Operators\n * @public\n * @function share\n * @param {Array} vars Variable names.\n *\n * @return {ComposedVars} Instance of composed variable\n */\nexport const share = (...vars) => new ComposedVars(...vars.map(variable => new SimpleVariable(variable)));\n\n/**\n *\n *\n * @param {*} node\n *\n */\nfunction treeShakeNode (node) {\n    if (node.nodeType !== Node.ELEMENT_NODE) { return; }\n\n    if (TITLE_TEMPLATE_NOT_ALLOWED_TAGS.indexOf(node.tagName.toLowerCase()) !== -1) {\n        node.parentNode.removeChild(node);\n    } else {\n        for (const childNode of node.childNodes) {\n            treeShakeNode(childNode);\n        }\n    }\n}\n\n/**\n * A string template tagged function which sanitizes input html formatted string according to the allowed html tags.\n * This is used to render html in canvas components like title and tooltip.\n *\n * To render html in canvas components,\n * ```\n *     canvas.title(html`<span style=font-size:20px;>TITLE</span>`);\n * ```\n *\n * @public\n * @module Operators\n * @function html\n * @param {Array.<string>} strings - The string parts of the template.\n * @param {Array} exps - The list of evaluated expression values.\n *\n * @return {Function} Returns a function which returns the sanitized html string.\n */\nexport function html (strings, ...exps) {\n    let htmlCode = '';\n    const expLn = exps.length;\n    let i = 0;\n\n    for (; i < expLn; ++i) {\n        htmlCode += strings[i] + exps[i];\n    }\n    htmlCode += strings[i];\n\n    const frag = document.createDocumentFragment();\n    const wrapper = document.createElement('div');\n\n    frag.appendChild(wrapper);\n    wrapper.innerHTML = htmlCode;\n\n    treeShakeNode(wrapper);\n    const { innerHTML } = wrapper;\n\n    return () => innerHTML;\n}\n","import { mergeRecursive } from 'muze-utils';\n\nconst defaultPolicy = (registrableComponents) => {\n    const aliases = registrableComponents.map(comp => comp.alias());\n    return {\n        behaviours: {\n            '*': (propagationPayload) => {\n                const propagationCanvas = propagationPayload.sourceCanvas;\n                return propagationCanvas ? aliases.indexOf(propagationCanvas) !== -1 : true;\n            }\n        }\n    };\n};\n\n/**\n * This class is initiated only once in lifecycle and is reponsible for regisration of physical and behavioural\n * actions and side effects and the mapping between them.\n *\n * To get the instance of action model\n * ```\n *  const ActionModel = muze.ActionModel;\n * ```\n *\n * @public\n * @module ActionModel\n */\nclass ActionModel {\n    constructor () {\n        this._registrableComponents = [];\n    }\n\n    /**\n     * Takes an array of canvases on which the physical and behavioural actions will get registered.\n     *\n     * @public\n     * @param  {Canvas} components Array of canvases\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    for (...components) {\n        this._registrableComponents = components;\n        return this;\n    }\n\n    /**\n     * Registers physical actions on the canvases. It takes an object with key as the name of action and value having\n     * the definition of the action.\n     *\n     * To register a {@link PhysicalAction},\n     * ```\n     *  const ActionModel = muze.ActionModel;\n     *  ActionModel\n     *       // Physical actions will be registered on these canvases.\n     *      .for(canvas)\n     *      .registerPhysicalActions({\n     *          // Key is the name of physical action.\n     *          ctrlClick: (firebolt) => (targetEl, behaviours) => {\n     *              targetEl.on('click', function (data) {\n     *                  const event = utils.getEvent();\n     *                  const pos = utils.getClientPoint(event, this);\n     *                  // Get the data point nearest to the mouse position.\n     *                  const nearestPoint = firebolt.context.getNearestPoint(pos, {\n     *                      data\n     *                  });\n     *                  // Prepare the payload\n     *                  const payload = {\n     *                      criteria: nearestPoint.id\n     *                  };\n     *                  behaviours.forEach((behaviour) => firebolt.dispatchBehaviour(behaviour, payload));\n     *              });\n     *          }\n     *      });\n     * ```\n     * @public\n     *\n     * @param {Object} action Names of physical actions and their definitions.\n     *\n     * @return {ActionModel} Instance of the action model.\n     */\n    registerPhysicalActions (action) {\n        const canvases = this._registrableComponents;\n\n        canvases.forEach((canvas) => {\n            canvas.once('canvas.updated').then((args) => {\n                const matrix = args.client.composition().visualGroup.matrixInstance().value;\n                matrix.each(cell => cell.valueOf().firebolt().registerPhysicalActions(action));\n            });\n        });\n        return this;\n    }\n\n    /**\n     * Registers behavioural actions on the canvases. It takes definitions of the behavioural actions and registers\n     * them on the canvases. Every behavioural action must inherit the {@link GenericBehaviour} class.\n     *\n     * To register a behavioural action\n     * ```\n     *  // Define a new behavioural action\n     *  class SingleSelectBehaviour extends GenericBehaviour {\n     *      static formalName () {\n     *          return 'singleSelect';\n     *      }\n     *\n     *      setSelectionSet (addSet, selectionSet) {\n     *          if (addSet === null) {\n     *              selectionSet.reset();\n     *          } else if (addSet.length) {\n     *              const existingAddSet = selectionSet.getExistingEntrySet(addSet);\n     *              if (existingAddSet.length){\n     *                  selectionSet.reset();\n     *              } else {\n     *               selectionSet.add(addSet);\n     *              }\n     *          } else {\n     *              selectionSet.reset();\n     *          }\n     *      }\n     * }\n     * muze.ActionModel.registerBehaviouralActions(SingleSelectBehaviour);\n     * ```\n     *\n     * @public\n     *\n     * @param {GenericBehaviour} actions Definition of behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerBehaviouralActions (...actions) {\n        const canvases = this._registrableComponents;\n\n        canvases.forEach((canvas) => {\n            canvas.once('canvas.updated').then(() => {\n                const matrix = canvas.composition().visualGroup.matrixInstance().value;\n                matrix.each(cell => cell.valueOf().firebolt().registerBehaviouralActions(...actions));\n            });\n        });\n        return this;\n    }\n\n    /**\n     * Registers the mapping of physical and behavioural actions. This mapping is used to establish which behavioural\n     * actions should be dispatched on any triggering of physical actions.\n     *\n     * To map physical actions with behavioural actions,\n     * ```\n     *  muze.ActionModel.registerPhysicalBehaviouralMap({\n     *      ctrlClick: {\n     *          behaviours: ['select'] // This array must be the formal names of the behavioural actions.\n     *      }\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Contains the physical and behavioural action map.\n     * ```\n     *   {\n     *      // Name of the physical action\n     *      click: {\n     *          // Target element selector. This is an optional field. If not passed, then by default takes the\n     *          // container element of visual unit.\n     *          target: '.muze-layers-area path',\n     *          // Behaviours which should be dispatched on triggering of the mapped physical action.\n     *          behaviours: ['select']\n     *      }\n     *   }\n     * ```\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPhysicalBehaviouralMap (map) {\n        const canvases = this._registrableComponents;\n\n        canvases.forEach((canvas) => {\n            canvas.once('canvas.updated').then((args) => {\n                const matrix = args.client.composition().visualGroup.matrixInstance().value;\n                matrix.each(cell => cell.valueOf().firebolt().registerPhysicalBehaviouralMap(map));\n            });\n        });\n        return this;\n    }\n\n    /**\n     * Registers what behaviour to propagate on dispatch of a certain behavioural action. By default, when any\n     * behavioural action is dispatched, then the same behavioural action gets propagated to all the other canvases.\n     * This can be changed using this api.\n     *\n     * To register what behaviour should be propagated on dispatch of any behavioural action,\n     * ```\n     *  ActionModel.for(canvas1, canvas2).registerPropagationBehaviourMap({\n     *      select: 'filter',\n     *      brush: 'filter'\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Propagation behaviour map.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPropagationBehaviourMap (map) {\n        const canvases = this._registrableComponents;\n\n        canvases.forEach((canvas) => {\n            canvas.once('canvas.updated').then((args) => {\n                const matrix = args.client.composition().visualGroup.matrixInstance().value;\n                matrix.each(cell => cell.valueOf().firebolt().registerPropagationBehaviourMap(map));\n            });\n        });\n        return this;\n    }\n\n    /**\n     * Registers the mapping of side effects and behavioural actions. It takes an object which contains key as the\n     * name of behavioural action and the side effects which will be linked to it.\n     *\n     * To map side effects to select behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: ['infoBox'] // This array must be the formal names of the side effects\n     *  });\n     * ```\n     *\n     * To map side effects to select behaviour, but disable all the default side effects attached with this behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: {\n     *          effects: ['infoBox'],\n     *          preventDefaultActions: true\n     *      }\n     *  });\n     * @public\n     * @param {Object} map Mapping of behavioural actions and side effects.\n     * ```\n     *     {\n     *          select: ['infoBox']\n     *     }\n     * ```\n     * @return {ActionModel} Instance of action model.\n     */\n    mapSideEffects (map) {\n        const canvases = this._registrableComponents;\n\n        canvases.forEach((canvas) => {\n            canvas.once('canvas.updated').then(() => {\n                const matrix = canvas.composition().visualGroup.matrixInstance().value;\n                matrix.each(cell => cell.valueOf().firebolt().mapSideEffects(map));\n            });\n        });\n        return this;\n    }\n\n    /**\n     * Registers the side effects on the registered canvases. It takes definitions of side effects and registers them\n     * on the canvases. Every side effect must inherit the base class {@link GenericSideEffect} or\n     * {@link SpawnableSideEffect} or {@link SurrogateSideEffect} class.\n     *\n     * ```\n     * // Define a custom side effect\n     *  class InfoBox extends SpawnableSideEffect {\n     *      static formalName () {\n     *          return 'infoBox';\n     *      }\n     *\n     *      apply (selectionSet) {\n     *      }\n     *  }\n     *  muze.ActionModel.registerSideEffects(InfoBox);\n     * ```\n     * @public\n     * @param  {GenericSideEffect} sideEffects Definition of side effects.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerSideEffects (...sideEffects) {\n        const registrableComponents = this._registrableComponents;\n\n        registrableComponents.forEach((canvas) => {\n            canvas.once('canvas.updated').then((args) => {\n                const matrix = args.client.composition().visualGroup.matrixInstance().value;\n                matrix.each(cell => cell.valueOf().firebolt().registerSideEffects(sideEffects));\n            });\n        });\n\n        return this;\n    }\n\n    /**\n     * Breaks the link between behavioural actions and physical actions. It takes an array of behavioural action\n     * and it's physical action.\n     *\n     * To dissociate behavioural actions from physical actions\n     * ```\n     *  muze.ActionModel.dissociateBehaviour(['select', 'click'], ['highlight', 'hover']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of behavioural action and physical action.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateBehaviour (...maps) {\n        const registrableComponents = this._registrableComponents;\n\n        registrableComponents.forEach((canvas) => {\n            canvas.once('canvas.updated').then((args) => {\n                const matrix = args.client.composition().visualGroup.matrixInstance().value;\n                matrix.each((cell) => {\n                    maps.forEach(val => cell.valueOf().firebolt().dissociateBehaviour(val[0], val[1]));\n                });\n            });\n        });\n\n        return this;\n    }\n\n    /**\n     * Breaks the link between side effects and behavioural actions. It takes an array of formal names of the side\n     * effects and it's linked behavioural action.\n     *\n     * To dissociate side effects from behavioural actions\n     * ```\n     *  muze.ActionModel.dissociateSideEffect(['crossline', 'highlight'], ['selectionBox', 'brush']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of side effects and behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateSideEffect (...maps) {\n        const registrableComponents = this._registrableComponents;\n\n        registrableComponents.forEach((canvas) => {\n            canvas.once('canvas.updated').then((args) => {\n                const matrix = args.client.composition().visualGroup.matrixInstance().value;\n                matrix.each((cell) => {\n                    maps.forEach(val => cell.valueOf().firebolt().dissociateSideEffect(val[0], val[1]));\n                });\n            });\n        });\n\n        return this;\n    }\n\n    /**\n     * By default cross interactivity is disabled between canvases. This enables cross interaction between the canvases\n     * so that any action happening in one canvas gets dispatched on other canvases as well. An optional policy can also\n     * be passed in this method. The policy can be used to control on which canvases the behavioural actions and\n     * side effects gets dispatched.\n     *\n     * To just enable cross interactivity between two canvases,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity();\n     * ```\n     *\n     * To enable cross interactivity but enable any behavioural action only when it is triggered from canvas1.\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          behaviours: {\n     *              // Here * stands for any behavioural action name. We can also give any name of behavioural action\n     *              // in place of this.\n     *              '*': (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     *\n     * To enable cross interactivity but enable tooltip effect if the action is propagated from canvas1,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          sideEffects: {\n     *              tooltip: (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} policy Policy definition.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    enableCrossInteractivity (policy = {}) {\n        const registrableComponents = this._registrableComponents;\n        const mergedPolicy = mergeRecursive(mergeRecursive({}, defaultPolicy(registrableComponents)), policy);\n\n        registrableComponents.forEach((canvas) => {\n            canvas.firebolt().crossInteractionPolicy(mergedPolicy);\n        });\n\n        return this;\n    }\n}\n\nexport const actionModel = (() => new ActionModel())();\n","export const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    interaction: {\n        sideEffect: 'individual'\n    },\n    legend: {\n        position: 'right',\n        color: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        shape: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        size: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        }\n    },\n    showHeaders: false,\n    minWidth: 100,\n    minHeight: 100,\n    facet: {\n        rows: {\n            minCharacters: 3\n        },\n        columns: {\n            maxLines: 2,\n            verticalAlign: 'middle',\n            minCharacters: 1\n        }\n    },\n    border: {\n        style: 'solid',\n        color: '#d6d6d6',\n        width: 2,\n        collapse: true,\n        spacing: 0\n    },\n    autoGroupBy: {\n        disabled: false\n    }\n};\n","/**\n * This is the global options semantics based on which setters getters are created and reactivity is initiated.\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n * @module GlobalOptions\n */\n\nimport { intSanitizer, mergeRecursive, DataModel } from 'muze-utils';\nimport { DEFAULT_CONFIG } from './defaults';\n\nexport default {\n    data: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel\n        }\n    },\n    width: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    height: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitWidth: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitHeight: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    config: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config, oldConfig) => {\n                const oldConf = mergeRecursive({}, oldConfig);\n                const defConfig = mergeRecursive(oldConf, DEFAULT_CONFIG);\n                const newConf = mergeRecursive(defConfig, config);\n                return newConf;\n            }\n\n        }\n    }\n};\n","/**\n * This file exports constants that will be used to\n * create the state store of the table layout.\n */\n/**\n * The index of top, bottom and center in the matrix\n */\nexport const VIEW_INDEX = {\n    top: 0,\n    center: 1,\n    bottom: 2\n};\n\nexport const ROW_MATRIX_INDEX = {\n    0: 'top',\n    1: 'center',\n    2: 'bottom'\n};\n\nexport const COLUMN_MATRIX_INDEX = {\n    0: 'left',\n    1: 'middle',\n    2: 'right'\n};\n\n/**\n * The width of the grid suppied by the user.\n */\nexport const GRID_WIDTH = 'width';\n\n/**\n * The height of the grid supplied by the user.\n */\nexport const GRID_HEIGHT = 'height';\n\n/**\n  * The border for the grid\n  */\nexport const BORDER = 'border';\n\n /**\n  *  The index of the first visible row in view matrix.\n  */\nexport const ROW_POINTER = 'rowPointer';\n\n/**\n * The index of the first visible column in the view matrix.\n */\nexport const COLUMN_POINTER = 'columnPointer';\n\n/**\n * Flag to specify whether row sizes should be equal.\n */\nexport const ROW_SIZE_IS_EQUAL = 'isRowSizeEqual';\n\n/**\n * Flag to specify whether column sizes are equal.\n */\nexport const COLUMN_SIZE_IS_EQUAL = 'isColumnSizeEqual';\n\n/**\n * Field to store an array an of the widths of visible columns.\n * @computed\n */\nexport const COLUMN_WIDTHS = 'visibleColumnWidths';\n\n/**\n * Field to store an array of heights of visible rows.\n * @computed\n */\nexport const ROW_HEIGHTS = 'visibleRowHeights';\n\n/**\n * Field to store the width of the left matrix.\n * @computed\n */\nexport const LEFT_MATRIX_WIDTH = 'leftMatrixWidth';\n\n/**\n * Field to store the width of the right matrix.\n * @computed\n */\nexport const RIGHT_MATRIX_WIDTH = 'rightMatrixWidth';\n\n/**\n * Field to store the height of the top matrix.\n * @computed\n */\nexport const TOP_MATRIX_HEIGHT = 'topMatrixHeight';\n\n/**\n * Field to store the height of the bottom matrix.\n * @computed\n */\nexport const BOTTOM_MATRIX_HEIGHT = 'bottomMatrixHeight';\n\n/**\n * The dom element to render the layout inside.\n */\nexport const MOUNT_POINT = 'mount';\n\n/**\n * The id attribute of the left table element.\n */\nexport const LEFT_TABLE_ID = 'grid-left';\n\n/**\n * The id attribute of the right table element.\n */\nexport const RIGHT_TABLE_ID = 'grid-right';\n\n/**\n * The id attribute of the top table.\n */\nexport const TOP_TABLE_ID = 'grid-top';\n\n/**\n * The id attribute of the bottom table.\n */\nexport const BOTTOM_TABLE_ID = 'grid-bottom';\n\n/**\n * The id attribute of the center table.\n */\nexport const CENTER_TABLE_ID = 'grid-center';\n\n/**\n * The id attribute of the top div.\n */\nexport const TOP_DIV_ID = 'muze-div-top';\n\n/**\n * The id attribute of the bottom div.\n */\nexport const BOTTOM_DIV_ID = 'muze-div-bottom';\n\n/**\n * The id attribute of the center div.\n */\nexport const CENTER_DIV_ID = 'muze-div-center';\n\n/**\n * Field that indicates if the row configuration has changed\n */\nexport const HAVE_ROWS_CHANGED = 'haveRowsChanged';\n\n/**\n * Field that indicates if the column configuration has changed\n */\nexport const HAVE_COLUMNS_CHANGED = 'haveColumnsChanged';\n\n/**\n * Field that indicates if the values configuration for the center matrix has changed\n */\nexport const HAVE_VALUES_CHANGED = 'haveValuesChanged';\n\n/**\n * Field that indicates the width of row matrix\n */\nexport const ROW_MATRIX_WIDTH = 'rowMatrixWidth';\n\n/**\n * Field that indicates the height of row matrix\n */\nexport const COLUMN_MATRIX_HEIGHT = 'columnMatrixHeight';\n\n/**\n * Field that indicates the unit width of layout\n */\nexport const UNIT_WIDTH = 'unitWidth';\n\n/**\n * Field that indicates the unit height of layout\n */\nexport const UNIT_HEIGHT = 'unitHeight';\n\n/**\n * Field that indicates the style object\n */\nexport const STYLE = 'style';\n\n/**\n * Field that indicates the color configuration\n */\nexport const COLOR = 'color';\n\n/**\n * Field that indicates width\n */\nexport const WIDTH = 'width';\n\n/**\n * Field that indicates collpase property for border\n */\nexport const COLLAPSE = 'collapse';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SPACING = 'spacing';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const DISTRIBUTION = 'distribution';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const GUTTERSPACE = 'gutterSpace';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const BREAK_PAGE = 'breakPage';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_ROW_BORDERS = 'showRowBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_COL_BORDERS = 'showColBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_VALUE_BORDERS = 'showValueBorders';\n\nexport const HEIGHT = 'height';\nexport const COLUMN = 'column';\nexport const ROW = 'row';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const CENTER = 'center';\nexport const CLICK = 'click';\nexport const ROW_LEFT = 'rowLeft';\nexport const ROW_RIGHT = 'rowRight';\nexport const COLUMN_BOTTOM = 'colBottom';\nexport const COLUMN_TOP = 'colTop';\nexport const AUTO = 'auto';\nexport const ROW_SPAN = 'rowSpan';\nexport const COL_SPAN = 'colSpan';\nexport const ROW_ROOT = 'rowRoot';\nexport const COLUMN_ROOT = 'columnRoot';\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary';\n","import { sanitizeIP, mergeRecursive } from 'muze-utils';\nimport { TOP, CENTER, BOTTOM } from '../enums/constants';\n\n/*\n * This is the abstract implementation of the root layout. This takes care of common work which all the layouts\n * has to handle. The common work includes sanitizaion of inputs, update, rerender, dispose etc. This class can't be\n * used directly (as ofcourse this is an abstract implementaiton), the class which is implementing it has to implement\n * the necessary methods and gives its on visual.\n */\n\n/**\n * This class is used to create a generic layout. It can be extended to create layouts\n * of different types\n * @class GenericLayout\n */\nexport default class GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config configuration to be given for the layout\n     * @param {Object} dependencies external dependencies.\n     *\n     * @memberof GenericLayout\n     *\n     */\n    constructor (mountPoint, measurement, config, dependencies) {\n        this._config = {};\n        this._measurement = {};\n        this._matrices = [];\n        // External dependencies to be included for the layout. This includes the ext global dependencies like\n        // smartlabel which has one single implementation of throughout the page or per isntance\n        this._dependencies = dependencies;\n\n        this.measurement(measurement);\n        this.mountPoint(mountPoint);\n        this.config(config);\n    }\n\n    /**\n     * Returns an object which is used to recreate the layout.\n     * @return {Object} the serialized components\n     */\n    serialize () {\n        return {\n            measurement: this.measurement(),\n            config: this.config(),\n            matrices: this.matrices()\n        };\n    }\n\n     /**\n     * Sets/Gets the config for the layout\n     * @param {Object} config configuration for the layout\n     * @return {Layout|Object} Gets the Config/ Returns this instance when set\n     */\n    config (config) {\n        if (config) {\n            this._config = mergeRecursive(this._config || {}, config);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Sets/Gets the measurement for the layout\n     * @param {Object} measurement measurement for the layout\n     * @return {Layout|Object} Gets the measurement/ Returns this instance when set\n     */\n    measurement (measurement) {\n        if (measurement) {\n            this._measurement = mergeRecursive(this._measurement || {}, measurement);\n\n            return this;\n        }\n        return this._measurement;\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     * @param {Object} matrices matrices for the layout\n     * @return {Layout|Object} Gets the matrices/ Returns this instance when set\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = sanitizeIP.typeObj([TOP, CENTER, BOTTOM], matrices);\n\n            return this;\n        }\n        return this._matrices;\n    }\n\n    /**\n     * Sets/Gets the matrix for row\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    rowMatrix (matrix) {\n        if (matrix) {\n            this._rowMatrix = matrix;\n            return this;\n        }\n        return this._rowMatrix;\n    }\n\n    /**\n     * Sets/Gets the matrix for columns\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    columnMatrix (matrix) {\n        if (matrix) {\n            this._columnMatrix = matrix;\n            return this;\n        }\n        return this._columnMatrix;\n    }\n\n   /**\n     * Sets/Gets the matrix for value\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    centerMatrix (matrix) {\n        if (matrix) {\n            this._centerMatrix = matrix;\n            return this;\n        }\n        return this._centerMatrix;\n    }\n\n    /**\n     * Sets/Gets the mountPoint for the layout\n     * @param {Object} mountPoint mountPoint for the layout\n     * @return {Layout|Object} Gets the mountPoint/ Returns this instance when set\n     */\n    mountPoint (mountPoint) {\n        if (mountPoint) {\n            this._mountPoint = mountPoint;\n\n            return this;\n        }\n        return this._mountPoint;\n    }\n}\n","import * as FieldNames from '../enums/constants';\n\n/**\n * Default configuration of the layout\n * @return {Object} returns the default configuration\n */\nexport const DEFAULT_CONFIGURATION = {\n    [FieldNames.BORDER]: {\n        [FieldNames.STYLE]: 'solid',\n        [FieldNames.COLOR]: '#d6d6d6',\n        [FieldNames.WIDTH]: 2,\n        [FieldNames.COLLAPSE]: true,\n        [FieldNames.SPACING]: 0\n    },\n    [FieldNames.GUTTERSPACE]: { rows: [], columns: [] },\n    [FieldNames.DISTRIBUTION]: { rows: [], columns: [] },\n    [FieldNames.BREAK_PAGE]: { rows: [], columns: [] },\n    [FieldNames.ROW_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_POINTER]: 0,\n    [FieldNames.ROW_POINTER]: 0\n};\n\n/**\n * Default measurements for the layout\n * @return {Object} returns the default measurements\n */\nexport const DEFAULT_MEASUREMENTS = {\n    [FieldNames.GRID_WIDTH]: 100,\n    [FieldNames.GRID_HEIGHT]: 100,\n    [FieldNames.UNIT_WIDTH]: 100,\n    [FieldNames.UNIT_HEIGHT]: 100\n};\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n","import { ROW_LEFT, ROW_RIGHT, COLUMN_BOTTOM, COLUMN_TOP, TOP, BOTTOM } from '../enums/constants';\n/**\n * This callback is used to filter the array of\n * placeholder cells and filter out cells which have\n * appeared in a previous row.\n *\n * @param {Placeholder} colData Instance of placeholder.\n * @param {number} colIdx The index of the placeholder in array.\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {number} rIdx The index of the row of the placeholder in array.\n * @param {string} type The type of matrix it is (rowLeft, rowRight, colTop, colBottom)\n * @return {boolean} flag to keep/remove element.\n */\nconst columnFilter = (colData, colIdx, matrix, rIdx, type) => {\n    const previousRow = matrix[rIdx - 1];\n    const currentRow = matrix[rIdx];\n\n    // Row Span for left\n    if (type === ROW_LEFT) {\n        if (!previousRow) {\n            return colData;\n        }\n        let i = 0;\n        for (;i <= colIdx; i += 1) {\n            if (currentRow[i].valueOf() !== previousRow[i].valueOf()) {\n                break;\n            }\n        }\n        return (i - 1 === colIdx) ? null : colData;\n    } else if (type === ROW_RIGHT) {\n        if (!previousRow || colIdx === 0) {\n            return colData;\n        }\n        let j = colIdx;\n        for (; j < currentRow.length; j += 1) {\n            if (previousRow[j].valueOf() !== currentRow[j].valueOf()) {\n                break;\n            }\n        }\n        return (j === currentRow.length) ? null : colData;\n    } else if (type === COLUMN_BOTTOM) {\n        if (rIdx === 0) {\n            return colData;\n        }\n        const prevCell = currentRow[colIdx - 1];\n        if (prevCell) {\n            if (prevCell.valueOf() === colData.valueOf()) {\n                const nextRow = matrix[rIdx + 1];\n                if (!nextRow) {\n                    return null;\n                }\n                if (nextRow[colIdx].valueOf() === nextRow[colIdx - 1].valueOf()) {\n                    return null;\n                }\n                return colData;\n            }\n            return colData;\n        }\n        return colData;\n    } else if (type === COLUMN_TOP) {\n        if (rIdx === matrix.length - 1 && matrix.length > 1) {\n            return colData;\n        }\n        const prevCell = currentRow[colIdx - 1];\n        if (prevCell && (prevCell.valueOf() === colData.valueOf())) {\n            const prevRow = matrix[rIdx - 1];\n            if (prevRow) {\n                if (prevRow[colIdx].valueOf() === prevRow[colIdx - 1].valueOf()) {\n                    return null;\n                }\n                return colData;\n            }\n            return null;\n        }\n        return colData;\n    }\n    return colData;\n};\n\n/**\n * This callback is used to calculate the rowspan\n * by checking for repeating entries in subsequent rows\n * at the specified column.\n *\n * @param {Placeholder} colData Instance of placeholder.\n * @param {number} colIdx The index of the placeholder in the array.\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {number} rIdx The index of the row of the placeholder in array.\n * @return {number} The row span.\n */\nconst calcRowSpan = (colData, colIdx, matrix, rIdx) => {\n    let count = 1;\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData || typeof colData.valueOf() !== 'string') {\n        return 1;\n    }\n    let isNull = false;\n    while (!isNull) {\n        if (matrix[rIdx + count] && matrix[rIdx + count][colIdx] === null) {\n            count += 1;\n        } else {\n            isNull = true;\n        }\n    }\n    return count;\n};\n/**\n * This callback is used to calculate the rowspan\n * by checking for repeating entries in subsequent rows\n * at the specified column.\n *\n * @param {Placeholder} colData Instance of placeholder.\n * @param {number} colIdx The index of the placeholder in the array.\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {number} rIdx The index of the row of the placeholder in array.\n * @return {number} The row span.\n */\nconst calcColSpan = (colData, colIdx, matrix, rIdx) => {\n    let count = 1;\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData || typeof colData.valueOf() !== 'string') {\n        return 1;\n    }\n    let isNull = false;\n    while (!isNull) {\n        if (matrix[rIdx][colIdx + count] === null) {\n            count += 1;\n        } else {\n            isNull = true;\n        }\n    }\n    return count;\n};\n\n// create a masking matrix to strip out repeating columns\n// and calculate rowspan.\nconst mask = function (matrix, type) {\n    return matrix.map((row, rIdx) => {\n        if (type === ROW_LEFT || type === ROW_RIGHT) {\n            const filteredRow = row.map((col, colIndex) => columnFilter(col, colIndex, matrix, rIdx, type));\n            const temp = [];\n            const diff = row.length - filteredRow.length;\n            for (let i = 0; i < diff; i += 1) {\n                temp.push(null);\n            }\n            if (type === ROW_RIGHT) {\n                temp.unshift(...filteredRow);\n                return temp;\n            }\n            temp.push(...filteredRow);\n            return temp;\n        }\n\n        const filteredRow = row.map((col, colIndex) => columnFilter(col, colIndex, matrix, rIdx, type));\n        const temp = [];\n        temp.push(...filteredRow);\n        return temp;\n    });\n};\n\n/**\n * This function is used to set the col and row spans\n * for the matrices based on repeated/hierarchichal data\n *\n * @export\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {string} type Type of array (center, top, bottom)\n * @param {number} index Index of array in the row\n * @return {Object} containing the view matrix and their spans\n */\nexport function cellSpanMaker (matrix, type, index) {\n    let span = '';\n    if (type === TOP || type === BOTTOM) {\n        span = type === TOP ? COLUMN_TOP : COLUMN_BOTTOM;\n        const viewMatrix = mask(matrix, span);\n        const spans = viewMatrix.map((row, ridx) => row.map((col, i) => calcColSpan(col, i, viewMatrix, ridx))\n                        .filter(col => col !== 1));\n        return { viewMatrix, spans };\n    } else if (index === 0 || index === 2) {\n        span = index === 0 ? ROW_LEFT : ROW_RIGHT;\n        const viewMatrix = mask(matrix, span);\n        const spans = [];\n        viewMatrix.forEach((row, ridx) => {\n            spans[ridx] = spans[ridx] || [];\n            row.forEach((col, i) => {\n                if (viewMatrix[ridx][i]) {\n                    const currSpan = calcRowSpan(col, i, viewMatrix, ridx);\n                    currSpan && spans[ridx].push(currSpan);\n                }\n            });\n        });\n        return { viewMatrix, spans };\n    }\n    return { viewMatrix: matrix };\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport { cellSpanMaker } from './span-maker';\nimport {\n     TOP, LEFT, RIGHT, BOTTOM, CENTER, WIDTH, ROW_SPAN, COL_SPAN\n} from '../enums/constants';\nimport { BLANK_BORDERS } from './defaults';\n\n/**\n * Creates a table element of the layout\n *\n * @param {Object} mount Mount point for table elements\n * @param {string} className defines class name\n * @param {Array} rowData set of rows for the table\n * @return {Selection} set of selections for the table\n */\nfunction renderTable (mount, className, rowData) {\n    const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n    const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n    const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n    const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null && e.config().show).map(e =>\n                                ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n    return { table, body, rows, cells };\n}\n\nfunction applyRowBorders (cells, borderStyle, showBorders, color) {\n    [TOP, BOTTOM].forEach((borderType) => {\n        const style = `${borderStyle} ${showBorders[borderType] ? color : BLANK_BORDERS}`;\n        cells.style(`border-${borderType}`, style);\n    });\n}\n\nfunction applyColBorders (cells, borderStyle, showBorders, color) {\n    [LEFT, RIGHT].forEach((borderType) => {\n        const style = `${borderStyle} ${showBorders[borderType] ? color : BLANK_BORDERS}`;\n        cells.style(`border-${borderType}`, style);\n    });\n}\n\n/**\n * Applies borders to the cells in a matrix\n *\n * @param {Selection} cells Set of cells made from the matrix\n * @param {Object} border Border info for layout\n * @param {string} type Type of matrix(top/center/bottom)\n * @param {number} index Column index of matrix in the row\n */\nfunction applyBorders (cells, border, type, index) {\n    const {\n        width,\n        style,\n        color,\n        showRowBorders,\n        showColBorders,\n        showValueBorders\n    } = border;\n    const borderStyle = `${width}px ${style}`;\n\n    if (type === CENTER && index === 1) {\n        [TOP, BOTTOM, LEFT, RIGHT].forEach((borderType) => {\n            cells.style(`border-${borderType}`, `${borderStyle} ${showValueBorders[borderType] ?\n                color : BLANK_BORDERS}`);\n        });\n    } else if (type === CENTER) {\n        applyRowBorders(cells, borderStyle, showRowBorders, color);\n    } else if (index === 1) {\n        applyColBorders(cells, borderStyle, showColBorders, color);\n    }\n}\n\n/**\n * Renders a set of matrices in a row\n *\n * @param {Array} matrices Set of matrices in a row\n * @param {Selection} mountPoint Mount point for the row\n * @param {string} type top/center/bottom\n * @param {Object} dimensions dimensions of the matrix\n */\nfunction renderMatrix (matrices, mountPoint, type, dimensions, classPrefix) {\n    matrices.forEach((matrix, index) => {\n        // Creating containers for each matrix individually\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${type}-${index + 1}`)\n        .classed(`${classPrefix}-grid-${type}`, true)\n        .classed(`${classPrefix}-grid`, true);\n\n        const {\n            viewMatrix,\n            spans\n        } = cellSpanMaker(matrix, type, index);\n\n        // Rendering the table components\n        const { cells } = renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        if (type === CENTER && spans) {\n            cells.attr(ROW_SPAN, function (cell, colIndex) {\n                const span = spans[cell.rowIndex][colIndex];\n                const placeholder = cell.placeholder;\n                selectElement(this).style('height', `${placeholder.availHeight() + dimensions.border.width}px`);\n                if (span > 1) {\n                    placeholder.setAvailableSpace(placeholder.availWidth(), placeholder.availHeight() * span);\n                }\n                return span;\n            });\n        } else if ((type === TOP || type === BOTTOM) && index === 1) {\n            cells.attr(COL_SPAN, function (cell, colIndex) {\n                const span = spans[cell.rowIndex][colIndex];\n                const placeholder = cell.placeholder;\n                if (span > 1) {\n                    placeholder.setAvailableSpace(placeholder.availWidth() * span, placeholder.availHeight());\n                }\n                selectElement(this).style('height', `${placeholder.availHeight()}px`);\n                return span;\n            });\n        }\n        // Rendering content within placeholders\n        cells.each(function (cell) {\n            cell.placeholder && cell.placeholder.render(this);\n        }).exit().each((cell) => {\n            cell.placeholder && cell.placeholder.remove();\n        });\n\n        applyBorders(cells, dimensions.border, type, index);\n    });\n}\n\n/**\n * Renders all the matrices of the layout\n *\n * @export\n * @param {Array} matrices Set of matrices in the layout\n * @param {Array} mountPoints Mount points for each row of matrix\n * @param {Array} layoutDimensions Dimensions(height/width) of all the matrices\n */\nexport function renderMatrices (context, matrices, layoutDimensions) {\n    const {\n        top,\n        center,\n        bottom\n    } = matrices;\n    const {\n        classPrefix\n    } = context.config();\n    const {\n        width\n    } = context.measurement();\n    const mount = context.mountPoint();\n\n    const data = [\n        { type: TOP, matrix: top },\n        { type: CENTER, matrix: center },\n        { type: BOTTOM, matrix: bottom }\n    ];\n    makeElement(mount, 'div', data, `${classPrefix}-grid-layout-row`)\n                    .each(function (d, i) {\n                        const row = selectElement(this);\n                        row.classed(`${classPrefix}-grid-layout-row-${i}`, true);\n                        renderMatrix(d.matrix, row, d.type, layoutDimensions, classPrefix);\n                    })\n                    .style(WIDTH, `${Math.ceil(width)}px`);\n}\n","/**\n * This file exports utility functions that are used across the layout module\n */\nimport { Symbols } from 'muze-utils';\nimport { PRIMARY, SECONDARY, HEIGHT, WIDTH } from '../enums/constants';\n\nconst nest = Symbols.nest;\n/**\n *\n *\n * @param {*} isTransposed\n *\n */\nconst getMeasureInfo = (isTransposed) => {\n    if (isTransposed) {\n        return {\n            firstMeasure: HEIGHT,\n            secondMeasure: WIDTH\n        };\n    }\n    return {\n        firstMeasure: WIDTH,\n        secondMeasure: HEIGHT\n    };\n};\n\n/**\n *\n *\n * @param {*} i\n * @param {*} page\n *\n */\nconst findInPage = (i, page) => {\n    let count = 0;\n    for (const x in page) {\n        if (i < page[x]) {\n            count = x;\n            break;\n        }\n    }\n    return count;\n};\n\n/**\n * Creates a single matrix from two matrices\n *\n * @param {Array<Array>} matrix Input matrix\n * @return {Array<Array>} Joined matrix\n * @memberof VisualMatrix\n */\nexport const combineMatrices = (matrix, config) => {\n    const { isTransposed } = config;\n    let joinedMatrix = matrix[0].length > 0 ? matrix[0] : matrix[1];\n    if (isTransposed) {\n        joinedMatrix = matrix[0].length > 0 ? [...matrix[0]] : [];\n        joinedMatrix = matrix[1].length > 0 ? [...joinedMatrix, ...matrix[1]] : joinedMatrix;\n    } else {\n        joinedMatrix = joinedMatrix.map((row, rowIndex) => {\n            let rowData = [];\n            if (matrix[0].length > 0) {\n                rowData = [...matrix[0][rowIndex]];\n            }\n            if (matrix[1].length > 0) {\n                rowData = [...rowData, ...matrix[1][rowIndex]];\n            }\n            return rowData;\n        });\n    }\n    return joinedMatrix;\n};\n\n/**\n * Creates a hirachical tree from the context\n *\n * @param {Object} context context for creating tree\n * @return {Object} nested tree\n */\nexport const createTree = (context) => {\n    let matrixTree = {};\n    let lastLevelKey = 0;\n    let facet = PRIMARY;\n    const nestFn = nest();\n    const keys = [];\n    const layoutMatrix = context._layoutMatrix;\n    const primaryMatrix = context.primaryMatrix();\n    const secondaryMatrix = context.secondaryMatrix();\n    const { isTransposed, breakPage } = context.config();\n\n    if (!isTransposed) {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix[0].length - 1; i++) {\n                keys.push(i);\n            }\n            keys.push(primaryMatrix[0].length - 1);\n            if (facet === SECONDARY || secondaryMatrix.length === 0) {\n                lastLevelKey = primaryMatrix[0].length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const keyLength = primaryMatrix.length > 0 ? primaryMatrix[0].length : 0;\n            for (let i = secondaryMatrix[0].length - 1; i > 0; i--) {\n                keys.push(i + keyLength);\n            }\n            keys.push(keyLength);\n\n            if (facet === PRIMARY) {\n                lastLevelKey = keyLength;\n            }\n        } else {\n            lastLevelKey = primaryMatrix.length > 0 ? primaryMatrix[0].length - 1 : 0;\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        matrixTree = nestFn.entries(layoutMatrix);\n    } else {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix.length - 1; i++) {\n                keys.push(i);\n            }\n            // if (facet === PRIMARY) {\n            keys.push(primaryMatrix.length - 1);\n            // } else {\n            if (facet === SECONDARY) {\n                lastLevelKey = primaryMatrix.length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const primaryMatrixLength = primaryMatrix.length;\n            for (let i = secondaryMatrix.length - 1; i > 0; i--) {\n                keys.push(i + primaryMatrixLength);\n            }\n            // if (facet === SECONDARY) {\n            keys.push(primaryMatrixLength);\n            // }\n            if (facet === PRIMARY) {\n                lastLevelKey = primaryMatrixLength;\n            }\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        let newMatrix = [];\n        newMatrix = layoutMatrix[0].map((col, colIndex) => layoutMatrix.map(row => row[colIndex]));\n        matrixTree = nestFn.entries(newMatrix);\n    }\n    return { tree: matrixTree, lastLevelKey };\n};\n\n/**\n * Gives the min measues\n *\n * @param {boolean} isTransposed is column matrix\n * @param {Object} unitMeasures min measures to be given to cells\n * @return {Object} dimension min cell\n */\nexport const getMinMeasures = (isTransposed, unitMeasures) => {\n    if (!isTransposed) {\n        return {\n            height: unitMeasures.height,\n            width: 0\n        };\n    }\n    return {\n        height: 0,\n        width: unitMeasures.width\n    };\n};\n\n/**\n * Get the logical space from the tree\n *\n * @param {Node} item tree to be calculated\n * @param {number} measures width and height\n * @param {Array} minMeasures min measures for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} dimension\n */\nexport const getLogicalSpace = (item, measures, minMeasures, maxMeasure = []) => {\n    const { firstMeasure, secondMeasure } = measures;\n    let firstMeasureValue = 0;\n    let secondMeasureValue = 0;\n    item.values.forEach((valueArray) => {\n        let fMeasure = 0;\n        let sMeasure = 0;\n        valueArray.forEach((placeholder, colIndex) => {\n            placeholder.setAvailableSpace();\n            const space = placeholder.getLogicalSpace();\n\n            sMeasure = Math.max(sMeasure, +space[secondMeasure], minMeasures[secondMeasure]);\n            maxMeasure[colIndex] = Math.max(maxMeasure[colIndex] || 0, space[firstMeasure]);\n            fMeasure += +maxMeasure[colIndex];\n        });\n        secondMeasureValue += sMeasure;\n        firstMeasureValue = Math.max(firstMeasureValue, fMeasure);\n        item.space = {\n            [secondMeasure]: Math.ceil(secondMeasureValue),\n            [firstMeasure]: Math.ceil(firstMeasureValue)\n        };\n    });\n    return {\n        [secondMeasure]: secondMeasureValue,\n        [firstMeasure]: firstMeasureValue\n    };\n};\n\n/**\n * Computes the logical spcae taken by the matrix tree\n *\n * @param {*} [item={}] tree to be viewed\n * @param {boolean} [isTransposed=false] is column matrix\n * @param {*} unitMeasures min measues for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} logical space taken\n */\nexport const computeLogicalSpace = (item = {}, config, maxMeasures) => {\n    const { isTransposed = false, unitMeasures } = config;\n    const { firstMeasure, secondMeasure } = getMeasureInfo(isTransposed);\n    const { values } = item;\n    const minMeasures = getMinMeasures(isTransposed, unitMeasures);\n    if (values[0].key) {\n        const logicalSpace = { [firstMeasure]: 0, [secondMeasure]: 0 };\n\n        values.forEach((valueItem) => {\n            // Compute logical space for lowest level\n            const space = computeLogicalSpace(valueItem, config, maxMeasures);\n            // Set logical space for first measure\n            logicalSpace[firstMeasure] = Math.max(logicalSpace[firstMeasure], space[firstMeasure],\n                minMeasures[firstMeasure]);\n            // Set logical space for second measure\n            logicalSpace[secondMeasure] += +space[secondMeasure];\n        });\n        item.space = logicalSpace;\n        return logicalSpace;\n    }\n    return getLogicalSpace(item, { firstMeasure, secondMeasure }, minMeasures, maxMeasures);\n};\n\n/**\n * Gives the space taken by a row\n *\n * @param {Array} row matrix array of rows\n * @return {Object} dimension of the row\n */\nexport const spaceTakenByRow = (row) => {\n    let height = 0;\n    let width = 0;\n    row.forEach((col) => {\n        const spaces = col.getLogicalSpace();\n        height = Math.max(height, spaces.height);\n        width += spaces.width;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Gives the space taken by a column\n *\n * @param {Array<Array>} matrix column matrix\n * @param {number} colIndex column index\n * @return {Object} dimension of the column\n */\nexport const spaceTakenByColumn = (matrix, colIndex) => {\n    let height = 0;\n    let width = 0;\n    matrix.forEach((row) => {\n        const col = row[colIndex];\n        const spaces = col.getLogicalSpace();\n        width = Math.max(width, spaces.width);\n        height += spaces.height;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Creates different level matrices\n *\n * @param {Object} item matrix tree\n * @param {boolean} isTransposed is column matrix\n * @return {Object} matrix of each level\n */\nexport const createMatrixEachLevel = (item, isTransposed) => {\n    if (item.values[0].key) {\n        const arr = [];\n        item.values.forEach((child) => {\n            if (!isTransposed) {\n                arr.push(...createMatrixEachLevel(child, isTransposed));\n            } else {\n                const eachLevel = createMatrixEachLevel(child, isTransposed);\n                eachLevel.forEach((e, i) => {\n                    arr[i] = arr[i] || [];\n                    arr[i].push(...e);\n                });\n            }\n        });\n        item.matrix = arr;\n        return arr;\n    }\n    if (!isTransposed) {\n        item.matrix = item.values;\n    } else {\n        item.matrix = item.values[0].map((col, colIndex) => item.values.map(row => row[colIndex]));\n    }\n    return item.matrix;\n};\n\n/**\n * Breaks the matrix into two part\n *\n * @param {Array<Array>} matrix input matrix\n * @param {boolean} isTransposed is column matrix\n * @param {number} breakPointer point in matrix where it is to be broken\n * @return {Array} two broken matrix\n */\nexport const breakMatrix = (matrix, isTransposed, breakPointer) => {\n    const primaryMatrix = [];\n    const secondaryMatrix = [];\n    if (isTransposed) {\n        matrix.forEach((row, rowIndex) => {\n            if (rowIndex >= breakPointer) {\n                secondaryMatrix.push(row);\n            } else {\n                primaryMatrix.push(row);\n            }\n        });\n    } else {\n        matrix.forEach((row, rowIndex) => {\n            row.forEach((column, columnIndex) => {\n                if (columnIndex >= breakPointer) {\n                    secondaryMatrix[rowIndex] = secondaryMatrix[rowIndex] || [];\n                    secondaryMatrix[rowIndex].push(column);\n                } else {\n                    primaryMatrix[rowIndex] = primaryMatrix[rowIndex] || [];\n                    primaryMatrix[rowIndex].push(column);\n                }\n            });\n        });\n    }\n    return [primaryMatrix, secondaryMatrix];\n};\n\n/**\n * Distributed width returned\n *\n * @param {Object} context context for the width distibution\n * @return {number} distributed widths\n */\nexport const getDistributedWidth = (context, layoutConfig) => {\n    const {\n        availableWidth,\n        width,\n        row\n    } = context;\n    const {\n        isDistributionEqual,\n        isTransposed,\n        distribution\n    } = layoutConfig;\n    let distSum = 0;\n    if (distribution && distribution[0]) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    return row.map((col, colIndex) => {\n        const space = col.getLogicalSpace().width;\n        let distWidth = (space + (availableWidth - width) * (space / width));\n        if (isTransposed) {\n            if (distribution.length > 0) {\n                distWidth = (availableWidth * distribution[colIndex] / distSum);\n            } else if (isDistributionEqual || width === 0) {\n                const rowLen = row.length;\n                distWidth = (availableWidth / rowLen);\n            }\n        }\n        return Math.floor(distWidth);\n    });\n};\n\n/**\n * Distributeed heights returned\n *\n * @param {Object} context input for the height distribution\n * @return {Object} distribured heights\n */\nexport const getDistributedHeight = (context) => {\n    let distSum = 0;\n    let gutterSum = 0;\n    let heightWithoutGutter = 0;\n    const {\n        isTransposed,\n        distribution,\n        availableHeight,\n        height,\n        isDistributionEqual,\n        gutter,\n        matrix,\n        cIdx\n    } = context;\n\n    if (distribution && distribution[0] !== undefined) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    if (gutter && gutter[0] !== undefined) {\n        gutterSum = gutter.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    heightWithoutGutter = availableHeight - Math.floor(availableHeight * gutterSum);\n\n    const colLen = matrix.length;\n    return matrix.map((row, rIdx) => {\n        const col = row[cIdx];\n        const space = col.getLogicalSpace().height;\n        let distHeight = (space + (heightWithoutGutter - height) * (space / height));\n\n        if (!isTransposed) {\n            if (distribution.length > 0 && colLen === distribution.length) {\n                distHeight = (heightWithoutGutter * distribution[rIdx] / distSum);\n            } else if (isDistributionEqual || context.height === 0) {\n                distHeight = (heightWithoutGutter / colLen);\n            }\n        }\n        return Math.floor(distHeight);\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} beg\n * @param {*} end\n */\nexport const extraCellsRemover = (arr, beg, end) => arr.slice(beg, -end);\n\n/**\n * Creates matrix instancess\n *\n * @param {Array} [arr=[]] mutated arry\n * @param {number} depth depth of the tree\n * @param {Array} matrixInfo Details about the matrix(tree, etc) to be inserted\n * @param {boolean} layout Instance of layout\n */\nexport const createMatrixInstances = (arr = [], depth, matrixInfo, layout) => {\n    const breakPointer = layout._breakPointer;\n    const config = layout.config();\n    const {\n        isTransposed\n    } = config;\n    const {\n        tree,\n        layoutMatrix\n    } = matrixInfo;\n\n    if (depth === 0) {\n        const brokenMatrix = breakMatrix(tree.matrix, isTransposed, breakPointer);\n        arr.push({\n            matrix: tree.matrix,\n            primaryMatrix: brokenMatrix[0],\n            secondaryMatrix: brokenMatrix[1],\n            space: tree.space\n        });\n        return arr;\n    }\n    const nextLevel = depth - 1;\n    tree.values.forEach((e) => {\n        createMatrixInstances(arr, nextLevel, {\n            tree: e,\n            layoutMatrix\n        }, layout);\n    });\n    return arr;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    maxMeasures: {},\n    availableSpace: {},\n    logicalSpace: {}\n};\n","import { PRIMARY } from '../enums/constants';\n/**\n *\n *\n */\nexport const defaultConfig = {\n    distribution: [],\n    classPrefix: 'muze',\n    isDistributionEqual: true,\n    unitMeasures: {\n        height: 100,\n        width: 100,\n        border: 1\n    },\n    isTransposed: false,\n    facet: PRIMARY,\n    extraCellLengths: []\n};\n","import { mergeRecursive, generateGetterSetters, ERROR_MSG } from 'muze-utils';\nimport {\n    createTree,\n    combineMatrices,\n    createMatrixInstances\n  } from '../utils';\nimport { PROPS } from './props';\nimport { HEIGHT, WIDTH } from '../enums/constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        // Prepare matrices\n        this._lastLevelKey = 0;\n        this._primaryMatrix = matrix[0] || [];\n        this._secondaryMatrix = matrix[1] || [];\n        this._maxMeasures = [];\n        this._availableSpace = {};\n\n        // Store the config\n        generateGetterSetters(this, PROPS);\n        const defCon = Object.assign({}, this.constructor.defaultConfig());\n        this.config(mergeRecursive(defCon, config));\n\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n    }\n\n     /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    computeViewableSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getPriorityDistribution () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    primaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._primaryMatrix;\n    }\n\n    secondaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._secondaryMatrix;\n    }\n\n    tree (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._tree;\n    }\n\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    createTree () {\n        const { tree, lastLevelKey } = createTree(this);\n        this._lastLevelKey = lastLevelKey;\n        return tree;\n    }\n\n    /**\n     * Returns the space taken by visual matrix\n     *\n     * @return {Object} space taken by the matrix\n     * @memberof VisualMatrix\n     */\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    /**\n     * Sets the provied space to the visual matrix\n     *\n     * @param {number} width width provided\n     * @param {number} height height provided\n     * @memberof VisualMatrix\n     */\n    setAvailableSpace (width, height) {\n        this.availableSpace({ width, height });\n        const tree = this.tree();\n        const heightMeasures = this.populateMaxMeasures(HEIGHT, tree);\n        const widthMeasures = this.populateMaxMeasures(WIDTH, tree);\n        const depth = this.calculateDepth(widthMeasures, heightMeasures);\n\n        this.viewableMatrix = this.createViewPortMatrix(depth);\n        this.viewableMeasures = this.redistributeSpaces(width, height);\n        return this;\n    }\n\n    /**\n     * Populate the max measures in the array\n     *\n     * @param {Array} measures array to be filled with max measures\n     * @param {Object} matrixTree matrix tree of visual matrix\n     * @param {number} measure width or height\n     * @param {number} [depth=0] depth of the tree that to be calculated\n     * @memberof VisualMatrix\n     */\n    populateMaxMeasures (type, matrixTree, depth = 0, measures = []) {\n        measures[depth] = Math.max(measures[depth] || 0, matrixTree.space[type]);\n        if (matrixTree.values) {\n            const childDepth = depth + 1;\n            matrixTree.values.forEach((child) => {\n                if (child.space) {\n                    measures = this.populateMaxMeasures(type, child, childDepth, measures);\n                }\n            });\n        }\n        return measures;\n    }\n\n    /**\n     * Gets the viewable measures for the current viewable matrix\n     *\n     * @return {Object} Set of viewable measures\n     * @memberof VisualMatrix\n     */\n    getViewableSpaces () {\n        return this.viewableMeasures;\n    }\n\n    /**\n     * Returns the matrix that can be viewed in the current viewport\n     *\n     * @return {Array} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    getViewableMatrices () {\n        return this.viewableMatrix;\n    }\n\n    /**\n     * Creates the viewport that can be viewed together\n     *\n     * @param {number} depth maxDepth that can be viewed in the viewport\n     * @return {Array<Object>} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    createViewPortMatrix (depth) {\n        const arr = [];\n        createMatrixInstances(arr, depth, this.removeExtraCells(), this);\n        return arr;\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    combineMatrices,\n    spaceTakenByColumn,\n    getDistributedHeight,\n    computeLogicalSpace,\n    createMatrixEachLevel\n  } from '../utils';\nimport { ROW_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class RowVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = (matrix[0].length > 0 ? matrix[0][0].length : 0);\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n\n        // Create Tree\n        this._tree = {\n            key: ROW_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, false);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height\n        } = measures;\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i };\n            const { widths, rowHeights, columnWidths } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = [height, height];\n            const columnMeasures = widths;\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n        tree.matrix = extraCellsRemover(tree.matrix, begCellLen, endCellLen);\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        let remainaingAvailWidth;\n        let remainaingWidth;\n        let cWidths = [];\n        let conditions = [];\n        let maxPrioritySpace = 0;\n        const {\n            matrix,\n            width: availableWidth,\n            maxMeasures: maxWidths,\n            maxWidth: currentWidth,\n            height\n        } = measures;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length ? this.primaryMatrix()[0].length : 0;\n\n        const dist = [];\n\n        remainaingAvailWidth = availableWidth;\n        remainaingWidth = currentWidth;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            // divider = Math.min(2, matrixLen);\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            // divider = Math.min(1, matrixLen);\n        }\n        conditions.forEach((i) => {\n            dist[i] = maxWidths[i];\n            maxPrioritySpace += maxWidths[i];\n            remainaingAvailWidth -= dist[i];\n            remainaingWidth -= dist[i];\n        });\n        matrix[0].forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                dist[i] = remainaingAvailWidth * (maxWidths[i] / remainaingWidth);\n            }\n        });\n        matrix.forEach(row => row.forEach((col, cIdx) => {\n            if (conditions.indexOf(cIdx) === -1) {\n                col.setAvailableSpace(dist[cIdx], height);\n\n                cWidths[cIdx] = Math.max(cWidths[cIdx] || 0, Math.floor(col.getLogicalSpace().width));\n            } else {\n                cWidths[cIdx] = 0;\n            }\n        }));\n\n        const prioritySpace = availableWidth - cWidths.reduce((t, n) => t + n);\n        if (prioritySpace < 0) {\n            cWidths = cWidths.map(() => 0);\n        } else {\n            conditions.forEach((i) => {\n                cWidths[i] = Math.floor(prioritySpace * (dist[i] / maxPrioritySpace || 1));\n            });\n        }\n        return cWidths;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures, heightMeasures) {\n        let i;\n        const { height } = this.availableSpace();\n\n        for (i = 0; i < heightMeasures.length; i++) {\n            if (heightMeasures[i] <= height) break;\n        }\n\n        return Math.min(widthMeasures.length - 1, i);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n        const maxMeasures = this.maxMeasures();\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        const logicalWidths = this.getPriorityDistribution({\n            matrix: this._layoutMatrix,\n            maxWidth,\n            maxMeasures,\n            width,\n            height\n        });\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths, logicalWidths };\n            const measures = this.redistributeViewSpaces(options);\n            maxWidths = measures.maxWidths;\n            maxHeights = measures.maxHeights;\n        });\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let cWidths = [];\n        let rHeights = [];\n        let mHeight = 0;\n        const maxMeasures = this.maxMeasures();\n\n        const {\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        } = this.config();\n        const { matrix, height, maxHeights, maxWidths, logicalWidths } = measures;\n        mHeight = spaceTakenByColumn(matrix, this._lastLevelKey).height;\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        measures.maxMeasures = maxMeasures;\n        measures.maxWidth = maxWidth;\n        if (maxWidth > 0) {\n            cWidths = logicalWidths;\n        } else {\n            cWidths = maxMeasures.map(() => 0);\n        }\n        rHeights = getDistributedHeight({\n            matrix,\n            cIdx: this._lastLevelKey,\n            height: mHeight,\n            availableHeight: height,\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        });\n        if (maxWidths.length > 0) {\n            cWidths = cWidths.map((e, i) => Math.max(e, maxWidths[0][i] || 0));\n        }\n        maxWidths.push(cWidths);\n        for (let x = 0; x < maxWidths.length; x++) {\n            maxWidths[x] = cWidths;\n        }\n        maxHeights.push(rHeights);\n        return { maxWidths, maxHeights };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = maxHeights[matrixIndex][rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth, colHeight - borderWidth);\n\n                if (rIdx === 0 && cIdx < breakPointer) {\n                    columnWidths[0][cIdx] = colWidth;\n                    widths[0] = (widths[0] || 0) + colWidth;\n                } else if (rIdx === 0 && cIdx >= breakPointer) {\n                    columnWidths[1][cIdx - breakPointer] = colWidth;\n                    widths[1] = (widths[1] || 0) + colWidth;\n                }\n                if (cIdx === this._lastLevelKey) {\n                    rowHeights[0][rIdx] = colHeight;\n                    rowHeights[1][rIdx] = colHeight;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    getDistributedWidth,\n    spaceTakenByRow,\n    createMatrixEachLevel,\n    computeLogicalSpace\n  } from '../utils';\nimport { COLUMN_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class ColumnVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = matrix[0].length;\n\n        // Create Tree\n        this._tree = {\n            key: COLUMN_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, true);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height,\n            width\n        } = measures;\n\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i, height };\n            const {\n                heights,\n                rowHeights,\n                columnWidths\n            } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = heights;\n            const columnMeasures = [width, width];\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n\n        tree.matrix = tree.matrix.map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        const {\n            height,\n            maxHeights\n        } = measures;\n        let remainaingHeight = height;\n        let heightDist = [];\n        let conditions = [];\n        let divider = 2;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            divider = 2;\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            divider = 1;\n        }\n        maxHeights.forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                heightDist[i] = e;\n                remainaingHeight -= e;\n            }\n        });\n        if (remainaingHeight < 0) {\n            heightDist = heightDist.map(() => 0);\n        } else {\n            conditions.forEach((e) => {\n                if (remainaingHeight / divider < maxHeights[e]) {\n                    heightDist[e] = 0;\n                } else {\n                    heightDist[e] = Math.min(maxHeights[e], (remainaingHeight) / divider);\n                }\n            });\n        }\n        return heightDist;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures) {\n        let j;\n        const { width } = this.availableSpace();\n\n        for (j = 0; j < widthMeasures.length; j++) {\n            if (widthMeasures[j] <= width) break;\n        }\n        return Math.min(widthMeasures.length - 1, j);\n    }\n\n     /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths };\n            const maxMeasures = this.redistributeViewSpaces(options);\n            maxWidths = maxMeasures.maxWidths;\n            maxHeights = maxMeasures.maxHeights;\n        });\n\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space column wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let rHeights = [];\n        const {\n            matrix,\n            width,\n            maxHeights,\n            maxWidths\n        } = measures;\n        const borderWidth = this.config().unitMeasures.border;\n\n        const mWidth = spaceTakenByRow(matrix[this._lastLevelKey]).width;\n        const cWidths = getDistributedWidth({\n            row: matrix[this._lastLevelKey],\n            width: mWidth,\n            availableWidth: width\n        }, this.config());\n\n        matrix.forEach((row, rIdx) => row.forEach((col, cIdx) => {\n            const oldLogicalSpace = col.getLogicalSpace();\n\n            col.setAvailableSpace(cWidths[cIdx] - borderWidth, oldLogicalSpace.height);\n            rHeights[rIdx] = Math.max(rHeights[rIdx] || 0, Math.floor(col.getLogicalSpace().height));\n        }));\n        if (maxHeights.length > 0) {\n            rHeights = rHeights.map((e, i) => Math.max(e, maxHeights[0][i]));\n        }\n        maxHeights.push(rHeights);\n        for (let x = 0; x < maxHeights.length; x++) {\n            maxHeights[x] = rHeights;\n        }\n        maxWidths.push(cWidths);\n        return { maxHeights, maxWidths };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, height, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        const heightDistribution = this.getPriorityDistribution({ height, maxHeights: maxHeights[0] || [] });\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = heightDistribution[rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth - borderWidth, colHeight);\n\n                if (cIdx === 0 && rIdx < breakPointer) {\n                    rowHeights[0][rIdx] = colHeight;\n                    heights[0] = (heights[0] || 0) + colHeight;\n                } else if (cIdx === 0 && rIdx >= breakPointer) {\n                    rowHeights[1][rIdx - breakPointer] = colHeight;\n                    heights[1] = (heights[1] || 0) + colHeight;\n                }\n                if (rIdx === this._lastLevelKey) {\n                    columnWidths[0][cIdx] = colWidth;\n                    columnWidths[1][cIdx] = colWidth;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { HEIGHT, WIDTH, COLUMN, ROW } from '../enums/constants';\n\n/**\n * Gets measurement for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @return {Object} Logical height/width of the matrix\n */\nexport function getMatrixMeasurement (matrix, type) {\n    if (matrix) {\n        return matrix.getLogicalSpace()[type];\n    }\n    return 0;\n}\n\n/**\n * Sets available space for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @param {number} value Value of measurement\n */\nexport function setMatrixMeasurement (matrix, type, value) {\n    if (matrix) {\n        const spaces = matrix.getLogicalSpace();\n        if (value && spaces[type] !== value) {\n            type === HEIGHT ? matrix.setAvailableSpace(spaces.width, value) :\n                matrix.setAvailableSpace(value, spaces.height);\n        }\n    }\n}\n\nconst setAvailableSpace = (matrix, widths, heights) => {\n    matrix.forEach((row, rIdx) => {\n        row.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(widths[cIdx], heights[rIdx]);\n        });\n    });\n};\n\nconst setViewSpaces = (layout, pointerType, viewSpaces) => {\n    let pointer = layout.config()[`${pointerType}Pointer`];\n    if (viewSpaces.length - 1 < pointer) {\n        pointer = 0;\n        layout.config({ [`${pointerType}Pointer`]: pointer });\n    }\n    return pointer;\n};\n\n/**\n * Computes the measurements of space for all matrices in the\n * layout\n *\n * @param {Object} layout Instance of grid layout\n * @return {Object} set of measurements for the layout\n */\nexport const computeLayoutMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const {\n        width,\n        height\n    } = layout.measurement();\n    const {\n        border\n    } = layout.config();\n    const matrices = layout.matrices();\n    const {\n        top,\n        bottom\n    } = matrices;\n\n    // Get width of row matrix\n    const rowMatrixWidth = getMatrixMeasurement(rowMatrix, WIDTH);\n    const maxRowMatrixWidth = Math.min(rowMatrixWidth, width / 2);\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Set width for column matrix\n    const columnMatrixWidth = width - maxRowMatrixWidth - borderWidth;\n\n    const maxColumnMatrixHeight = Math.min(columnMatrix.getLogicalSpace().height, height / 2);\n\n    columnMatrix.setAvailableSpace(columnMatrixWidth, maxColumnMatrixHeight);\n    const columnViewPages = columnMatrix.getViewableSpaces();\n\n    setViewSpaces(layout, COLUMN, columnViewPages);\n\n    // Figuring out total space needed by current view space\n    const columnViewSpace = columnViewPages[layout.config().columnPointer];\n\n    // Getting height of column matrix\n    const columnMatrixHeight = columnViewSpace.height.primary + columnViewSpace.height.secondary;\n\n    // Set height for row matrix\n    const rowMatrixHeight = height - columnMatrixHeight;\n\n    rowMatrix.setAvailableSpace(maxRowMatrixWidth, rowMatrixHeight);\n    // Get heights of each cell of row matrix\n    const rowViewableSpaces = rowMatrix.getViewableSpaces();\n    setViewSpaces(layout, ROW, rowViewableSpaces);\n    const rowHeights = [].concat(...rowViewableSpaces.map(e => e.rowHeights.primary));\n    const rowWidthsPrimary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.primary));\n    const rowWidthsSecondary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.secondary));\n    const columnViewableSpaces = columnMatrix.getViewableSpaces();\n    // Get widths of each cell of column matrix\n    const columnWidths = [].concat(...columnViewableSpaces.map(e => e.columnWidths.primary));\n    const columnHeightsPrimary = columnViewableSpaces[0].rowHeights.primary;\n\n    const columnHeightsSecondary = [].concat(...columnViewableSpaces.map(e => e.rowHeights.secondary));\n\n    // Setting the available space for each cell in the centre matrix\n    centerMatrix.forEach((matrix, rIdx) => {\n        matrix.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(columnWidths[cIdx] - borderWidth, rowHeights[rIdx] - borderWidth);\n        });\n    });\n    setAvailableSpace(top[0], rowWidthsPrimary, columnHeightsPrimary);\n    setAvailableSpace(top[2], rowWidthsSecondary, columnHeightsPrimary);\n    setAvailableSpace(bottom[0], rowWidthsPrimary, columnHeightsSecondary);\n    setAvailableSpace(bottom[2], rowWidthsSecondary, columnHeightsSecondary);\n\n    return {\n        rowMatrixHeight,\n        rowMatrixWidth,\n        columnMatrixHeight,\n        columnMatrixWidth\n    };\n};\n\n/**\n * Gets view matrices based on current pointers for row and column\n *\n * @param {Object} layout instance of layout\n * @param {number} rowPointer current row pointer\n * @param {number} columnPointer current column pointer\n * @return {Object} returns the view matrix and its relevant information\n */\nexport const getViewMatrices = (layout, rowPointer, columnPointer) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const matrices = layout.matrices();\n    const rowMatrices = rowMatrix.getViewableMatrices();\n    const columnMatrices = columnMatrix.getViewableMatrices();\n    const centralMatrixPointer = {\n        row: 0,\n        column: 0\n    };\n\n    for (let i = rowPointer - 1; i >= 0; i--) {\n        const length = Math.max(rowMatrices[i].primaryMatrix.length,\n            rowMatrices[i].secondaryMatrix.length);\n        centralMatrixPointer.row += length;\n    }\n     /* istanbul ignore next */\n    for (let i = columnPointer - 1; i >= 0; i--) {\n        const matrix = columnMatrices[i];\n        const { primaryMatrix, secondaryMatrix } = matrix;\n        const length = Math.max(primaryMatrix[0] ? primaryMatrix[0].length : 0,\n            secondaryMatrix[0] ? secondaryMatrix[0].length : 0);\n        centralMatrixPointer.column += length;\n    }\n\n    matrices.top[1] = columnMatrices[columnPointer].primaryMatrix;\n    matrices.bottom[1] = columnMatrices[columnPointer].secondaryMatrix;\n\n    matrices.center[0] = rowMatrices[rowPointer].primaryMatrix;\n    matrices.center[2] = rowMatrices[rowPointer].secondaryMatrix;\n\n    const rowMatrixLen = Math.max(matrices.center[0].length, matrices.center[2].length);\n     /* istanbul ignore next */\n    const columnMatrixLen = Math.max(matrices.top[1][0] ? matrices.top[1][0].length : 0, matrices.bottom[1][0] ?\n            matrices.bottom[1][0].length : 0);\n    matrices.center[1] = centerMatrix.slice(centralMatrixPointer.row, centralMatrixPointer.row + rowMatrixLen)\n        .map(matrix => matrix.slice(centralMatrixPointer.column, centralMatrixPointer.column + columnMatrixLen));\n\n    return {\n        matrices,\n        rowPages: rowMatrices.length,\n        columnPages: columnMatrices.length\n    };\n};\n/**\n * Returns measurements of the cells of the current matrix\n *\n * @param {Object} layout instance of layout\n * @return {Object} returns the measurements for current view matrix\n */\nexport const getViewMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const {\n        columnPointer,\n        rowPointer\n    } = layout.config();\n\n    const rowSpaces = rowMatrix.getViewableSpaces()[rowPointer];\n    const rowMatrixWidth = rowSpaces.width;\n    const { primary: leftWidth, secondary: rightWidth } = rowMatrixWidth;\n\n    const colSpaces = columnMatrix.getViewableSpaces()[columnPointer];\n\n    const columnMatrixHeight = colSpaces.height;\n    const { primary: topHeight, secondary: bottomHeight } = columnMatrixHeight;\n\n    const centerHeight = rowSpaces.rowHeights.primary.reduce((t, n) => t + n);\n    const centerWidth = colSpaces.columnWidths.primary.reduce((t, n) => t + n);\n\n    return {\n        viewWidth: [leftWidth, centerWidth, rightWidth],\n        viewHeight: [topHeight, centerHeight, bottomHeight]\n    };\n};\n","/**\n * This file declares a table that can be extended to create a Datagrid, crosstab\n * and man other visualzations that require a tabular structure.\n */\n\nimport { getUniqueId } from 'muze-utils';\nimport GenericLayout from '../generic-layout';\nimport { DEFAULT_CONFIGURATION, DEFAULT_MEASUREMENTS } from './defaults';\nimport {\n    renderMatrices\n} from './renderer';\nimport { generateVisualMatrices } from './layout-helper';\nimport { computeLayoutMeasurements, getViewMeasurements, getViewMatrices } from './computations';\n/**\n * This class is used to create a tabular structure that\n * can house charts and values.\n *\n * @class GridLayout\n */\nexport default class GridLayout extends GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} matrices Set of upto 9 matrices containing the cells to be rendered\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config external configurations.\n     * @memberof GenericLayout\n     */\n    constructor (matrices, mountPoint, measurement, config) {\n        super(mountPoint, measurement, config);\n        this.matrices(matrices);\n        this.config(this.constructor.defaultConfig());\n        this._layoutId = getUniqueId();\n        this._viewInfo = this.constructor.defaultViewInfo();\n    }\n\n    static defaultViewInfo () {\n        return Object.assign({}, {\n            layoutDimensions: {\n                border: this.defaultConfig().border,\n                viewHeight: [0, 0, 0],\n                viewWidth: [0, 0, 0]\n            },\n            viewMatricesInfo: {\n                columnPages: 0,\n                rowPages: 0,\n                matrices: { top: [], center: [], bottom: [] }\n            }\n        });\n    }\n\n    /**\n     * Returns initial set of measurements for the grid layout\n     *\n     * @static\n     * @return {Object} Returns initial set of measurements\n     * @memberof GridLayout\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENTS;\n    }\n\n    /**\n     * Returns initialconfiguration for grid layout\n     *\n     * @static\n     * @return {Object} Returns initial configuration for grid layout\n     * @memberof GridLayout\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIGURATION;\n    }\n\n    /**\n     * This function is used to return an instance of GridLayout\n     *\n     * @return {GridLayout} Instance of grid layout.\n     * @static\n     * @memberof GridLayout\n     */\n    static create () {\n        return new GridLayout(null, null, this.defaultMeasurement(), this.defaultConfig());\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     *\n     * @param {Array} matrices Set of matrices\n     * @return {Object} Getter/Setter\n     * @memberof GridLayout\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = generateVisualMatrices(this, matrices);\n            return this;\n        }\n        return super.matrices(matrices);\n    }\n\n    /**\n     * Triggers the computations for the layout based on the matrices available\n     * This causes a reflow in the entire layout system.\n     *\n     * @return {Object} Layout instance\n     * @memberof GridLayout\n     */\n    triggerReflow () {\n        computeLayoutMeasurements(this);\n        this.setViewInformation();\n        return this;\n    }\n\n    gotoPage (type, pageNumber) {\n        const pageType = type.toLowerCase();\n        const { viewMatricesInfo } = this.viewInfo();\n        const totalPages = viewMatricesInfo[`${pageType}Pages`];\n        const pointer = Math.min(Math.max(1, pageNumber), totalPages);\n        this.config({\n            [`${pageType}Pointer`]: pointer - 1\n        });\n        this.setViewInformation();\n        this.renderGrid();\n        return this;\n    }\n\n    pages (type) {\n        const { viewMatricesInfo } = this.viewInfo();\n        const pageType = type.toLowerCase();\n        return {\n            totalPages: viewMatricesInfo[`${pageType}Pages`],\n            currentPage: this.config()[`${pageType}Pointer`] + 1\n        };\n    }\n\n    viewInfo (...viewInfo) {\n        if (viewInfo.length) {\n            this._viewInfo = viewInfo[0];\n            return this;\n        }\n        return this._viewInfo;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GridLayout\n     */\n    setViewInformation () {\n        const {\n            rowPointer,\n            columnPointer,\n            border\n        } = this.config();\n        const viewMatricesInfo = getViewMatrices(this, rowPointer, columnPointer);\n        const layoutDimensions = getViewMeasurements(this);\n        layoutDimensions.border = border;\n        this.viewInfo({\n            viewMatricesInfo,\n            layoutDimensions\n        });\n        return this;\n    }\n\n    /**\n     * Renders the layout\n     *\n     * @return {Object} current instance\n     * @memberof GridLayout\n     */\n    renderGrid (mountPoint) {\n        this.mountPoint(mountPoint);\n        if (!this.mountPoint()) {\n            return this;\n        }\n        const viewInfo = this.viewInfo();\n        const {\n                viewMatricesInfo,\n                layoutDimensions\n            } = viewInfo;\n            // Render matrices\n        renderMatrices(this, viewMatricesInfo.matrices, layoutDimensions);\n        return this;\n    }\n}\n","import RowMatrix from '../visual-matrix/row-matrix';\nimport ColumnMatrix from '../visual-matrix/column-matrix';\n\nexport const generateVisualMatrices = (context, matrices) => {\n    // Set of matrices for layout is generated starting with the left matrix\n    let leftMatrix = [];\n    let rightMatrix = [];\n    let topMatrix = [];\n    let bottomMatrix = [];\n    let begColCells;\n    let endColCells;\n    const {\n        isRowSizeEqual,\n        isColumnSizeEqual,\n        gutterSpace,\n        distribution,\n        border,\n        breakPage,\n        priority\n    } = context.config();\n    const {\n        minUnitHeight,\n        minUnitWidth\n    } = context.measurement();\n    const { top, center, bottom } = matrices;\n    const [topLeft, topColumns, topRight] = top;\n    const [leftRows, valueMatrix, rightRows] = center;\n    const [bottomLeft, bottomColumns, bottomRight] = bottom;\n\n    if (leftRows.length > 0) {\n        // If no left matrix is present, context will be empty\n        leftMatrix = [...topLeft, ...leftRows, ...bottomLeft];\n    }\n    if (rightRows.length > 0) {\n        // If no right matrix is present, context will be empty\n        rightMatrix = [...topRight, ...rightRows, ...bottomRight];\n    }\n    if (topColumns.length > 0 && topColumns[0].length > 0) {\n        // If no top matrix is present, context will be empty\n        topMatrix = topColumns.map((d, i) => [...topLeft[i], ...d, ...topRight[i]]);\n    }\n    if (bottomColumns.length > 0 && bottomColumns[0].length > 0) {\n        // If no bottom matrix is present, context will be empty\n        bottomMatrix = bottomColumns.map((d, i) => [...bottomLeft[i], ...d, ...bottomRight[i]]);\n    }\n\n    context.rowMatrix(new RowMatrix([leftMatrix, rightMatrix], {\n        isDistributionEqual: isRowSizeEqual,\n        distribution: distribution.rows,\n        gutter: gutterSpace.rows,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.row,\n        breakPage: breakPage.rows.map(e => e + Math.max(topLeft.length, topRight.length)),\n        extraCellLengths: [topLeft.length, bottomLeft.length]\n    }));\n\n    if (topLeft.length > 0) {\n        begColCells = topLeft[0].length;\n    } else {\n        begColCells = bottomLeft.length > 0 ? bottomLeft[0].length : 0;\n    }\n\n    if (topRight.length > 0) {\n        endColCells = topRight[0].length;\n    } else {\n        endColCells = bottomRight.length > 0 ? bottomRight[0].length : 0;\n    }\n\n    context.columnMatrix(new ColumnMatrix([topMatrix, bottomMatrix], {\n        isDistributionEqual: isColumnSizeEqual,\n        distribution: distribution.columns,\n        gutter: gutterSpace.columns,\n        isTransposed: true,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.col,\n        breakPage: breakPage.columns,\n        extraCellLengths: [begColCells, endColCells]\n    }));\n    context.centerMatrix(valueMatrix);\n\n    return matrices;\n};\n","import { ERROR_MSG } from 'muze-utils';\n/**\n * An Interface to be implemented if the transaction support is necessary. This class ensures reactivity to\n * global properties.\n */\nexport default class TransactionSupport {\n    /**\n     * Property accessor for data member of the class. Data is passed to the system by calling this method.\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for width of the class. Width is passed as an integer.\n     */\n    width () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for height of the class. Height is passed as an integer.\n     */\n    height () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for config of the class. Config is passed as an object.\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n}\n","import { TOP, BOTTOM, LEFT, TITLE, SUB_TITLE, GROUP, LAYOUT, LEGEND } from '../constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const arrangeComponents = (context) => {\n    const legendConfig = context.config().legend;\n    const titleConfig = context.title()[1];\n    const subtitleConfig = context.subtitle()[1];\n    const titleLayouts = {\n        [`${TOP}-${TOP}`]: [TITLE, SUB_TITLE, GROUP],\n        [`${BOTTOM}-${BOTTOM}`]: [GROUP, SUB_TITLE, TITLE],\n        [`${TOP}-${BOTTOM}`]: [TITLE, GROUP, SUB_TITLE],\n        [`${BOTTOM}-${TOP}`]: [SUB_TITLE, GROUP, TITLE]\n    };\n    const legendLayouts = [\n        [LEGEND, LAYOUT],\n        [LAYOUT, LEGEND]\n    ];\n    const titlePosition = titleConfig.position || TOP;\n    const subtitlePosition = subtitleConfig.position || TOP;\n\n    return {\n        headers: titleLayouts[`${titlePosition}-${subtitlePosition}`],\n        legends: legendConfig.position === LEFT || legendConfig.position === TOP ?\n        legendLayouts[0] : legendLayouts[1]\n    };\n};\n","/**\n * Flag to specify whether direction is vertical.\n */\nexport const MARGIN = 'margin';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const SPACE_FIXER = 'spaceFixer';\nexport const CLASSPREFIX = 'muze';\nexport const VERTICAL_ALIGN = 'verticalAlign';\nexport const TEXT_ALIGN = 'textAlign';\nexport const IS_OFFSET = 'isOffset';\nexport const MIDDLE = 'middle';\nexport const BASELINE = 'baseline';\nexport const SHOW = 'show';\nexport const CENTER = 'center';\nexport const TEXT = 'text';\nexport const HEADER = 'header';\nexport const HEIGHT = 'height';\nexport const WIDTH = 'width';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const FIELDS = 'fields';\nexport const TRANSFORM = 'transform';\nexport const LAYER_DEF = 'layerDef';\nexport const CONFIG = 'config';\nexport const DETAIL_FIELDS = 'detailFields';\nexport const MAX_LINES = 'maxLines';\nexport const MIN_CHARS = 'minCharacters';\nexport const ROTATION = 'rotation';\n\nexport const TEXT_CELL = 'text-cell';\nexport const AXIS_CELL = 'axis-cell';\nexport const GEOM_CELL = 'geom-cell';\nexport const BLANK_CELL = 'blank-cell';\n","// eneum to refer to simple cell\nexport const SIMPLE = 'simple';\n// eneum to refer to header cell\nexport const TEXT = 'text';\n// enum to refer to axis cell\nexport const AXIS = 'axis';\n// enum to refer to visual cell\nexport const GEOM = 'geom';\n// enum to refer blank cell\nexport const BLANK = 'blank';\n","import {\n    ERROR_MSG,\n    getUniqueId,\n    mergeRecursive\n} from 'muze-utils';\nimport { SIMPLE } from './enums/cell-type';\n\n/**\n * This file declares a class that is used as an interface to create new\n * SimpleCell elements.\n * @module SimpleCell\n */\n/**\n * Base class for all table cells.\n *\n * @interface\n * @class SimpleCell\n */\nclass SimpleCell {\n\n    /**\n     * Creates an instance of SimpleCell.\n     *\n     * @param {*} config The input configuration.\n     * @memberof SimpleCell\n     */\n    constructor (config) {\n        this._id = getUniqueId();\n\n        const defConfig = mergeRecursive({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(defConfig, config || {});\n\n        this._mount = null;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     */\n    get type () {\n        return SIMPLE;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     * @return {Object} Default config for the placeholder\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the value contained by the SimpleCell.\n     *\n     * @memberof SimpleCell\n     */\n    valueOf () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a unique identifier for the instance used\n     * to control selective rendering.\n     *\n     * @memberof SimpleCell\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized representation of the instance.\n     *\n     * @memberof SimpleCell\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns an object with width and height fields\n     * specifying the space taken up by this metod.\n     *\n     * @memberof SimpleCell\n     */\n    getLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Method used to set the space available to render the SimpleCell\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @memberof SimpleCell\n     */\n    setAvailableSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    remove () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n\nexport default SimpleCell;\n","/**\n * This file exports variables that are used as defaults for\n * the placeholders\n */\nimport * as CONSTANTS from './constants';\n\n /**\n * Default Configuration for the cells\n * @return {Object} Default configuration\n */\nexport const DEFAULT_CONFIG = {\n    [CONSTANTS.MARGIN]: {\n        [CONSTANTS.LEFT]: 0,\n        [CONSTANTS.RIGHT]: 0,\n        [CONSTANTS.TOP]: 0,\n        [CONSTANTS.BOTTOM]: 0\n    },\n    [CONSTANTS.SPACE_FIXER]: 2,\n    [CONSTANTS.IS_OFFSET]: false,\n    [CONSTANTS.VERTICAL_ALIGN]: null,\n    [CONSTANTS.TEXT_ALIGN]: CONSTANTS.CENTER,\n    [CONSTANTS.SHOW]: true,\n    [CONSTANTS.MAX_LINES]: 0,\n    [CONSTANTS.MIN_CHARS]: 0,\n    [CONSTANTS.ROTATION]: null\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { GEOM, TEXT, AXIS, BLANK } from './enums/cell-type';\n\nconst DEFAULT_PROPS = {\n    mount: {},\n    availHeight: {},\n    availWidth: {},\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config, value)\n    },\n    logicalSpace: {},\n    minSpacing: {},\n    source: {}\n};\n\nconst geomProps = {\n    data: {},\n    caption: {},\n    config: {},\n    axes: {\n        sanitization: (context, value) => Object.assign(context._axes, value)\n    },\n    facetByFields: {},\n    fields: {},\n    transform: {},\n    layerDef: {},\n    detailFields: {}\n};\n\nconst textProps = {\n    smartText: {}\n};\nexport const PROPS = {\n    [GEOM]: mergeRecursive(geomProps, DEFAULT_PROPS),\n    [TEXT]: mergeRecursive(textProps, DEFAULT_PROPS),\n    [AXIS]: DEFAULT_PROPS,\n    [BLANK]: DEFAULT_PROPS\n};\n","/**\n * This file declares a class that represents a table cell\n * used to house an axis.\n * @module VisualCell\n */\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport { CLASSPREFIX, HEIGHT, WIDTH, AXIS_CELL } from './enums/constants';\nimport SimpleCell from './simple-cell';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { AXIS } from './enums/cell-type';\nimport { PROPS } from './props';\n\n/**\n * Computes the logical space of the an axis instance within an axis cell\n *\n * @param {Object} context Required to get the needed parameters to compute axis space\n * @return {Object} Returns the logical space for axis\n */\nconst computeAxisSpace = (context) => {\n    let logicalWidth;\n    let logicalHeight;\n    const axis = context.source();\n    const {\n        spaceFixer,\n        margin\n    } = context.config();\n    const {\n        width,\n        height\n    } = axis.getLogicalSpace();\n    const {\n            show\n        } = axis.config();\n    if (show === true) {\n        logicalHeight = Math.floor(height + margin.top + margin.bottom + spaceFixer);\n        logicalWidth = Math.floor(width + margin.left + margin.right + spaceFixer);\n    } else {\n        [logicalWidth, logicalHeight] = [width, height];\n    }\n    return {\n        width: logicalWidth,\n        height: logicalHeight\n    };\n};\n\n/**\n * Represents an axis cell.\n *\n * @class Axis\n */\nclass AxisCell extends SimpleCell {\n\n    /**\n     * Creates an instance of AxisCell.\n     *\n     * @param {Object} config The input config.\n     * @memberof AxisCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._axis = null;\n        this._availHeight = null;\n        this._availWidth = null;\n        this._logicalSpace = null;\n\n        generateGetterSetters(this, PROPS[AXIS]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof AxisCell\n     */\n    get type () {\n        return AXIS;\n    }\n\n    /**\n     * This method return the value conatined by this SimpleCell.\n     *\n     * @return {SimpleAxis | ColorAxis} Instance of SimpleAxis or ColorAxis.\n     * @memberof AxisCell\n     */\n    valueOf () {\n        return this.source().id;\n    }\n\n    /**\n     * This method return the unique identififer of the axis\n     *\n     * @return {string} Id of the axis.\n     * @memberof AxisCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Retrns the serialized representation of this cell.\n     *\n     * @return {Object}Object with serializable props.\n     * @memberof AxisCell\n     */\n    serialize () {\n        return {\n            type: AXIS,\n            axis: this.source().serialize()\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof AxisCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * return the space taken up by an axis element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof AxisCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeAxisSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @return {Instance} Returns current Instance\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        const {\n            margin,\n            isOffset\n        } = this.config();\n\n        if (width || height) {\n            this.source().setAvailableSpace(width, height, margin, isOffset);\n            this.source().logicalSpace(null);\n        } else {\n            this.source().resetLogicalSpace();\n        }\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the axis inside the axis cell.\n     *\n     * @param {HTMLElement} mount The mount point.\n     * @return {Selection} node where axis mounted\n     * @memberof AxisCell\n     */\n    /* istanbul ignore next */render (mount) {\n        if (!mount) {\n            return this;\n        }\n        const axis = this.source();\n        const availHeight = this.availHeight();\n        const availWidth = this.availWidth();\n        const {\n            margin\n        } = this.config();\n        const {\n            top,\n            bottom,\n            left,\n            right\n        } = margin;\n        const {\n            show\n        } = axis.config();\n        const wrapperDiv = makeElement(selectElement(mount), 'div', [this], `${CLASSPREFIX}-${AXIS_CELL}`);\n        const selection = makeElement(wrapperDiv, 'svg', [1], `${CLASSPREFIX}-axis-container`);\n\n        this.mount(mount);\n        if (availWidth === 0 || !availWidth) {\n            selection.attr(WIDTH, `${0}px`);\n        }\n        if (availHeight === 0 || !availHeight) {\n            selection.attr(HEIGHT, `${0}px`);\n        }\n        wrapperDiv.style(WIDTH, `${show ? Math.floor(availWidth) : 0}px`)\n                        .style(HEIGHT, `${show ? Math.floor(availHeight) : 0}px`)\n                        .style('margin-top', top)\n                        .style('margin-bottom', bottom)\n                        .style('margin-left', left)\n                        .style('margin-right', right);\n\n        axis.mount(selection.node());\n        return selection;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Current instance of AxisCell\n     * @memberof AxisCell\n     */\n    remove () {\n        this.source() && this.source().remove();\n        this.mount() && this.mount().remove();\n        return this;\n    }\n}\n\nexport default AxisCell;\n\n","/**\n * This file declares a class that represents a BLANK element in a  table.\n * @module VisualCell\n */\nimport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    generateGetterSetters\n    } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { CLASSPREFIX, BLANK_CELL } from './enums/constants';\nimport { BLANK } from './enums/cell-type';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { PROPS } from './props';\n\n/**\n * Represents a table haeder.\n *\n * @class BLANK\n */\nclass BlankCell extends SimpleCell {\n\n    /**\n     * Creates an instance of BLANK.\n     * @param {Object} config The input configuration.\n     * @memberof BLANK\n     */\n    constructor (config) {\n        super(config);\n\n        generateGetterSetters(this, PROPS[BLANK]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof BlankCell\n     */\n    get type () {\n        return BLANK;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof BlankCell\n     */\n    valueOf () {\n        return this.id;\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof BlankCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the BLANK cell.\n     *\n     * @return {string} The unique identifier for the BLANK.\n     * @memberof BlankCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof BLANK\n     */\n    serialize () {\n        return {\n            type: BLANK\n        };\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof BLANK\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            return {\n                width: this.width || 0,\n                height: this.height || 0\n            };\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the BLANK cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof BLANK\n     */\n    /* istanbul ignore next */render (mount) {\n        if (mount) {\n            const { style } = this.config();\n            // append span element to mount point\n            this.mount(mount);\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id]);\n            elem.classed(`${CLASSPREFIX}-${BLANK_CELL}`, true);\n            elem.style('width', `${this.availWidth()}px`);\n            elem.style('height', `${this.availHeight()}px`);\n            elem.html('');\n            // apply style on the returned element\n            if (style) {\n                applyStyle(elem, style);\n            }\n        } return this;\n    }\n\n    /**\n     * Removes the cell(Disposal)\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\nexport default BlankCell;\n","/**\n * This file declares a class that represents a Text element in a  table.\n * @module VisualCell\n */\n\nimport {\n    selectElement,\n    makeElement,\n    getSmartComputedStyle,\n    generateGetterSetters\n} from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { TEXT } from './enums/cell-type';\nimport { PROPS } from './props';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { CLASSPREFIX, TOP, BOTTOM, LEFT, RIGHT, HEADER, WIDTH, TEXT_CELL } from './enums/constants';\nimport './text-cell.scss';\n\nconst setSmartText = (context) => {\n    const source = context.source();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       rotation\n   } = context.config();\n    const {\n        left,\n        right,\n        top,\n        bottom\n     } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const labelManager = context.dependencies().labelManager;\n\n    labelManager.setStyle(context._computedStyle);\n\n    !rotation && context.smartText(labelManager.getSmartText(source, availWidth, availHeight, false));\n    rotation && context.smartText(labelManager.getSmartText(source, availHeight, availWidth, true));\n\n    return context;\n};\n\n/**\n* Computes the Logical Space for the text\n*\n* @param {Object} context Required to get the needed parameters to compute text space\n* @return {Object} Logical space taken up by text\n* @memberof TextCell\n*/\nconst computeTextSpace = (context) => {\n    const { labelManager } = context.dependencies();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       show,\n       maxLines,\n       minCharacters\n   } = context.config();\n    const {\n       left,\n       right,\n       top,\n       bottom\n    } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const source = context.source();\n    const space = context.smartText();\n    const minText = new Array(minCharacters).fill('W').join('');\n    const _minTextSpace = labelManager.getOriSize(minText);\n\n    context.config({ rotation: false });\n    if (space.width > (availWidth || 0) && maxLines) {\n        space.height = space.oriTextHeight * maxLines;\n    }\n    if (availWidth && availWidth < space.width) {\n        space.width = _minTextSpace.width;\n    }\n    if (availWidth && availWidth < Math.min(_minTextSpace.width, space.oriTextWidth)) {\n        const smartSpace = labelManager.getSmartText(source, availHeight, _minTextSpace.height, true);\n        space.width = smartSpace.height;\n        space.height = smartSpace.width;\n        context.config({ rotation: true });\n        context.smartText(smartSpace);\n    }\n\n    if (show) {\n        return {\n            width: Math.ceil(space.width) + paddedWidth,\n            height: Math.ceil(space.height) + paddedHeight\n        };\n    } return {\n        width: 0,\n        height: 0\n    };\n};\n\n/**\n * Represents a table haeder.\n *\n * @class Text\n */\nclass TextCell extends SimpleCell {\n\n    /**\n     * Creates an instance of Text.\n     * @param {Object} config The input configuration.\n     * @param {string} dependencies Dependencies for the class(labelManager)\n     * @memberof Text\n     */\n    constructor (config, dependencies) {\n        super(config);\n\n        this._dependencies = dependencies;\n        this._className = this._config.className ||\n                    (this._config.type === HEADER ? `${CLASSPREFIX}-${HEADER}-cell` : `${CLASSPREFIX}-${TEXT}-cell`);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'), this._className);\n        this._dependencies.labelManager.setStyle(this._computedStyle);\n        generateGetterSetters(this, PROPS[TEXT]);\n        const space = this._dependencies.labelManager.getOriSize('w');\n        this.minSpacing({ width: Math.floor(space.width * 3 / 4), height: Math.floor(space.height / 2) });\n        setSmartText(this);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof TextCell\n     */\n    get type () {\n        return TEXT;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof TextCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the Text cell.\n     *\n     * @return {string} The unique identifier for the Text.\n     * @memberof TextCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the dependencies of the instance\n     *\n     * @return {Object} Dependencies needed by the class\n     * @memberof TextCell\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof TextCell\n     */\n    serialize () {\n        return {\n            text: this.source(),\n            type: TEXT\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof TextCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof Text\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeTextSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        setSmartText(this);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the Text cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof Text\n     */\n    render (mount) {\n        const availWidth = this.availWidth();\n        const availHeight = this.availHeight();\n        const {\n            margin,\n            show,\n            verticalAlign,\n            textAlign,\n            rotation\n        } = this.config();\n\n        this.mount(mount);\n        if (show) {\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id], `${CLASSPREFIX}-${TEXT_CELL}`);\n            const vAlign = verticalAlign || rotation ? 'middle' : 'top';\n            const {\n                width,\n                height\n            } = this.smartText();\n            const {\n                height: minHeightSpace\n            } = this.minSpacing();\n            const translation = {\n                top: width + minHeightSpace / 2,\n                middle: width / 2 + minHeightSpace,\n                bottom: minHeightSpace\n            };\n\n            container.style('vertical-align', vAlign);\n\n            // Set class name\n            elem.classed(this._className, true);\n\n            // Apply styles\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            elem.style('transform', rotation ? `translate(${height / 2}px,\n                ${translation[vAlign]}px) rotate(-90deg)` : '');\n            elem.style(WIDTH, availWidth ? `${availWidth}px` : '100%');\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((type) => {\n                elem.style(`padding-${type}`, `${margin[type]}px`);\n            });\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            // set the text as the innerHTML\n            this._dependencies.labelManager.setStyle(this._computedStyle);\n            elem.html(this._dependencies.labelManager.getSmartText(this.source(), availWidth, availHeight, true).text);\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\n\nexport default TextCell;\n","/**\n * This file declares a class that is used to represent a table cell\n * that houses a visual unit.\n * @module VisualCell\n */\n\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { GEOM } from './enums/cell-type';\nimport { PROPS } from './props';\nimport {\n    CLASSPREFIX, HEIGHT, WIDTH, DATA, AXES, FACET_BY_FIELDS, FIELDS, TRANSFORM, LAYER_DEF, CONFIG, GEOM_CELL,\n    DETAIL_FIELDS\n} from './enums/constants';\nimport { DEFAULT_CONFIG } from './enums/defaults';\n\n/**\n * Calculates the logical space of the cell\n *\n * @param {Object} context Required to get the needed parameters to compute unit space\n * @return {Object} Logical space taken up by the unit\n * @memberof GeomCell\n */\nconst computeGeomSpace = (context) => {\n    const config = context.source().config();\n    const { width, height } = config;\n    return {\n        width: Math.ceil(width),\n        height: Math.ceil(height + context.getCaptionSpace().height)\n    };\n};\n\n /**\n * This class represents a SimpleCell for visual unit.\n *\n * @class GeomCell\n */\nclass GeomCell extends SimpleCell {\n\n    /**\n     * Creates an instance of GeomCell.\n     * @param {Object} config The input configuration.\n     * @memberof GeomCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._unit = null;\n        this._layers = null;\n        this._axes = {};\n        this._datamodel = {};\n        this._facetByFields = {};\n        this._fields = null;\n        this._transform = null;\n        this._caption = null;\n\n        generateGetterSetters(this, PROPS[GEOM]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof GeomCell\n     */\n    get type () {\n        return GEOM;\n    }\n\n    /**\n     * This method return the value contained by this cell.\n     *\n     * @return {VisualUnit} Instance of visual unit contained by visual unit.\n     * @memberof GeomCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return the id of the\n     * visual unit housed by this cell.\n     *\n     * @return {string} The unique id of the visual unit.\n     * @memberof GeomCell\n     */\n    get id () {\n        return this.source().id();\n    }\n\n    /**\n     * This method return a serialized representation of\n     * this instance.\n     *\n     * @return {Object} Object with serializable props.\n     * @memberof GeomCell\n     */\n    serialize () {\n        return {\n            type: GEOM,\n            unit: this.source().serialize(),\n            caption: this.caption()\n        };\n    }\n\n    /**\n     * return the default configuration for the geom cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof GeomCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * Updates the model based on the changed parameters\n     *\n     * @return {Instance} return instance\n     * @memberof GeomCell\n     */\n    updateModel () {\n        const unit = this.source();\n        unit.lockModel();\n        [LAYER_DEF, TRANSFORM, AXES, FIELDS, CONFIG, DATA, AXES, FACET_BY_FIELDS, DETAIL_FIELDS].forEach((prop) => {\n            this[prop]() && unit[prop](this[prop]());\n        });\n        unit.unlockModel();\n        return this;\n    }\n\n    /**\n     * It gives the space taken by the caption of the unit\n     *\n     * @return {Object} return the space taken by caption\n     * @memberof GeomCell\n     */\n    getCaptionSpace () {\n        const caption = this.caption();\n\n        let captionSpace = { width: 0, height: 0 };\n        if (caption) {\n            captionSpace = caption.getLogicalSpace();\n        }\n        return captionSpace;\n    }\n\n    /**\n     * return the space taken up by the element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof GeomCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeGeomSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space available to\n     * render the SimpleCell.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    setAvailableSpace (width, height) {\n        const unit = this.source();\n\n        this.availWidth(width);\n        this.availHeight(height);\n        unit.lockModel();\n        unit.width(width).height(height - this.getCaptionSpace().height);\n        unit.unlockModel();\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * his method is used to render the visual unit inside the provided cell.\n     *\n     * @param {HTMLElement} mount The mountpoint in the table.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    render (mount) {\n        if (mount) {\n            this.mount(mount);\n            const availHeight = this.availHeight();\n            const availWidth = this.availWidth();\n            const caption = this.caption();\n            const wrapperDiv = makeElement(selectElement(mount), 'div', [1], `${CLASSPREFIX}-${GEOM_CELL}`);\n\n            if (caption) {\n                const captionDom = makeElement(wrapperDiv, 'div', [caption], `${CLASSPREFIX}-unit-caption`).node();\n                caption.render(captionDom);\n            }\n            const selection = makeElement(wrapperDiv, 'div', [1], `${CLASSPREFIX}-unit`);\n            wrapperDiv.style(WIDTH, `${availWidth}px`).style(HEIGHT, `${availHeight}px`);\n            selection.style(WIDTH, `${availWidth}px`)\n                            .style(HEIGHT, `${availHeight - this.getCaptionSpace().height}px`);\n            this.source().mount(selection.node());\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Object} Current instance\n     * @memberof GeomCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        this.source().remove();\n        return this;\n    }\n}\n\nexport default GeomCell;\n","import AxisCell from './axis-cell';\nimport BlankCell from './blank-cell';\nimport TextCell from './text-cell';\nimport GeomCell from './geom-cell';\nimport SimpleCell from './simple-cell';\n\nimport * as CONSTANTS from './constants';\n\nexport const DEFAULT_PLACEHOLDERS = {\n    [CONSTANTS.SIMPLE_CELL]: SimpleCell,\n    [CONSTANTS.TEXT_CELL]: TextCell,\n    [CONSTANTS.AXIS_CELL]: AxisCell,\n    [CONSTANTS.GEOM_CELL]: GeomCell,\n    [CONSTANTS.BLANK_CELL]: BlankCell\n};\n\n","export const SIMPLE_CELL = 'SimpleCell';\nexport const TEXT_CELL = 'TextCell';\nexport const AXIS_CELL = 'AxisCell';\nexport const BLANK_CELL = 'BlankCell';\nexport const GEOM_CELL = 'GeomCell';\n\n","import { DEFAULT_PLACEHOLDERS } from './defaults';\n\n/**\n * Creates a registry for the cells, which can be used for\n * setting a new cell or getting the registered cells\n *\n * @return {Object} Setters and getters for registered cells\n */\nconst cellRegistry = () => {\n    const reg = DEFAULT_PLACEHOLDERS;\n    return {\n        set: (key, def) => {\n            if (key in reg) {\n                reg[key] = def;\n            }\n            return cellRegistry;\n        },\n        get: () => reg\n    };\n};\nexport default cellRegistry;\n","import { TextCell } from '@chartshq/visual-cell';\nimport { escapeHTML } from 'muze-utils';\nimport { TOP } from '../constants';\n\n/**\n *\n *\n * @param {*} rawContent\n *\n */\nconst resolveTitleSubTitleContent = (rawContent) => {\n    if (typeof rawContent === 'function' && !rawContent._sanitize) {\n        return rawContent();\n    }\n    return escapeHTML(rawContent());\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} cellType\n * @param {*} labelManager\n * @param {*} prevCell\n *\n */\nconst headerCreator = (config, cellType, labelManager, prevCell) => {\n    const {\n        content,\n        classPrefix,\n        maxLines\n    } = config;\n    const cell = prevCell || new TextCell(\n        {\n            type: cellType === 'title' ? 'header' : 'text',\n            className: `${classPrefix}-${cellType}-cell`\n        }, {\n            labelManager\n        })\n     .config({ maxLines }).minSpacing({ width: 0, height: 0 });\n\n    cell.source(content);\n    cell._minTickDiff = { height: 0, width: 0 };\n    let margin = {};\n    if (config.position === TOP) {\n        margin = { top: 0, bottom: config.padding };\n    } else {\n        margin = { top: config.padding, bottom: 0 };\n    }\n    cell.config({ margin });\n    return {\n        height: cell.getLogicalSpace().height,\n        cell\n    };\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} type\n * @param {*} labelManager\n * @param {*} cell\n *\n */\nconst createHeading = (config, type, labelManager, prevCell) => {\n    if (!config) { return ''; }\n\n    return headerCreator(\n        config,\n        type,\n        labelManager,\n        prevCell\n    );\n};\n\n/**\n *\n *\n * @param {*} context\n */\nexport const createHeaders = (context, canvasHeight, canvasWidth) => {\n    let headerHeight = 0;\n    const headers = {};\n\n    canvasHeight >= 200 && canvasWidth >= 200 && ['title', 'subtitle'].forEach((type) => {\n        const headerOptions = context[type]();\n        const content = resolveTitleSubTitleContent(headerOptions[0]);\n        if (content.length) {\n            const config = headerOptions[1];\n\n            config.width = context.width();\n            config.height = context.height();\n            config.classPrefix = context.config().classPrefix;\n            config.content = content;\n            config.classPrefix = context.config().classPrefix;\n\n            const { height, cell } = createHeading(config, type, context.dependencies().smartlabel,\n                context[`${type}Cell`]);\n\n            headers[`${type}Cell`] = cell;\n            context._composition[type] = cell;\n            headerHeight += height + config.padding;\n        }\n    });\n    return { headerHeight, headers };\n};\n\n","import { TextCell, AxisCell } from '@chartshq/visual-cell';\nimport {\n    VERTICAL, HORIZONTAL, LEFT, RIGHT, LEGEND_TYPE_MAP, PADDING, BORDER, MARGIN\n} from '../constants';\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n *\n */\nexport const legendCreator = (canvas) => {\n    let LegendCls;\n    const dataset = [];\n    const axes = canvas.getRetinalAxes();\n\n    Object.entries(axes).forEach((axisInfo) => {\n        const scale = axisInfo[1][0];\n        const scaleType = axisInfo[0];\n        const scaleProps = canvas[scaleType]();\n\n        if (scaleProps.field && scale) {\n            const {\n                type,\n                step\n            } = scale.config();\n\n            const stepMapper = typeof step === 'boolean' ? step : false;\n            LegendCls = LEGEND_TYPE_MAP[`${type}-${stepMapper}-${scaleType}`];\n            dataset.push({ scale, canvas, fieldName: scaleProps.field, LegendCls, scaleType });\n        }\n    });\n\n    return dataset;\n};\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n * @param {*} measurement\n * @param {*} prevLegends\n *\n */\nexport const legendInitializer = (legendConfig, canvas, measurement, prevLegends) => {\n    const legends = [];\n    const {\n        height,\n        width,\n        headerHeight\n    } = measurement;\n    const {\n        position,\n        align\n    } = legendConfig;\n\n    const legendInfo = legendCreator(canvas);\n\n    legendInfo.forEach((dataInfo, index) => {\n        let legend = {};\n\n        const legendMeasures = {};\n        const {\n                LegendCls,\n                scale,\n                fieldName,\n                scaleType\n            } = dataInfo;\n        const config = legendConfig[scaleType] || {};\n        const title = config.title || {};\n        title.text = title.text || fieldName;\n        if (config.show) {\n            config.position = position;\n            config.align = align;\n\n            if (prevLegends[index]) {\n                legend = prevLegends[index].legend;\n            } else {\n                legend = LegendCls.create({\n                    labelManager: canvas._dependencies.smartlabel,\n                    cells: {\n                        AxisCell, TextCell\n                    }\n                });\n            }\n            legendMeasures.maxHeight = align === VERTICAL ? (height - headerHeight) : height * 0.2;\n            legendMeasures.maxWidth = align === HORIZONTAL ? width : width * 0.2;\n            legendMeasures.width = Math.min(legendMeasures.maxWidth, config.width);\n            legendMeasures.height = Math.min(legendMeasures.maxHeight, config.height);\n\n            [PADDING, BORDER, MARGIN].forEach((e) => {\n                legendMeasures[e] = config[e];\n            });\n            legend.scale(scale)\n                            .title(title)\n                            .fieldName(fieldName)\n                            .config(config)\n                            .metaData(canvas.composition().visualGroup.getGroupByData().project([fieldName]))\n                            .measurement(legendMeasures)\n                            .canvasAlias(canvas.alias())\n                            .setLegendMeasures();\n\n            legends.push({ canvas, legend, scaleType });\n        }\n    });\n    return legends;\n};\n\n/**\n *\n *\n * @param {*} legends\n * @param {*} legendConfig\n * @param {*} availableHeight\n * @param {*} availableWidth\n *\n */\nexport const getLegendSpace = (legends, legendConfig, availableHeight, availableWidth) => {\n    const legendMeasures = legends.map(legendInfo => legendInfo.legend.measurement());\n    const legendSpace = { width: 0, height: 0 };\n\n    legendMeasures.forEach((space) => {\n        let height = 0;\n        let width = 0;\n        width = Math.min(space.width, space.maxWidth);\n        height = Math.min(space.height, space.maxHeight);\n\n        if (legendConfig.align === HORIZONTAL) {\n            if (legendSpace.width + width > availableWidth) {\n                legendSpace.width = availableWidth;\n                legendSpace.height += height;\n            } else {\n                legendSpace.width += width;\n                legendSpace.height = Math.max(legendSpace.height, height);\n            }\n        } else if (legendSpace.height + height > availableHeight) {\n            legendSpace.height = height;\n            legendSpace.width += width;\n        } else {\n            legendSpace.height += height;\n            legendSpace.width = Math.max(legendSpace.width, width);\n        }\n    });\n    if (legendConfig.align === HORIZONTAL) {\n        legendSpace.width = availableWidth;\n    }\n    return legendSpace;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} headerHeight\n *\n */\nexport const createLegend = (context, headerHeight, height, width) => {\n    const measurement = {\n        height,\n        width,\n        headerHeight\n    };\n    const { legend } = context.config();\n    const { show, position } = legend;\n\n    legend.classPrefix = context.config().classPrefix;\n    const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n\n    legend.show = show ? ((align === VERTICAL && width > 200) || (align === HORIZONTAL && height > 200)) : show;\n    legend.align = align;\n    return legendInitializer(legend, context, measurement, context.legends || []);\n};\n","export default class LayoutComponent {\n    constructor (name, dimensions, seed) {\n        this._seed = seed;\n        this._boundBox = {\n            height: dimensions.height,\n            width: dimensions.width,\n            top: null,\n            left: null\n        };\n        this._renderAt = null;\n        this._alignWith = null;\n        this._alignment = null;\n        this._target = null;\n        this._position = null;\n        this._componentName = name;\n        this._className = null;\n    }\n\n    getLogicalSpace () {\n        throw new Error('getLogicalSpace is not defined');\n    }\n\n    setSpatialConfig () {\n        throw new Error('setSpatialSpace is not defined');\n    }\n\n    name (param) {\n        if (param) {\n            this._componentName = param;\n        }\n        return this._componentName;\n    }\n\n    target (param) {\n        if (param) {\n            this._target = param;\n        }\n        return this._target;\n    }\n\n    position (param) {\n        if (param) {\n            this._position = param;\n        }\n        return this._position;\n    }\n\n    alignment (param) {\n        if (param) {\n            this._alignment = param;\n        }\n        return this._alignment;\n    }\n\n    alignWith (param) {\n        if (param) {\n            this._alignWith = param;\n        }\n        return this._alignWith;\n    }\n\n    renderAt (param) {\n        if (param) {\n            this._renderAt = param;\n        }\n        return this._renderAt;\n    }\n\n    boundBox (param) {\n        if (param) {\n            Object.assign(this._boundBox, param);\n        }\n        return this._boundBox;\n    }\n\n    className (param) {\n        if (param) {\n            this._className = param;\n        }\n        return this._className;\n    }\n\n    draw () {\n        throw new Error('draw is not defined');\n    }\n  }\n\n","import LayoutComponent from './layoutComponent';\n\nclass DummyComponent extends LayoutComponent {\n    getLogicalSpace () {\n        return {\n            width: this.boundBox().width,\n            height: this.boundBox().height\n        };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n        return this;\n    }\n\n    draw () {\n        if (!this.component) {\n            throw new Error(`Component not set for ${this.componentName}`);\n        }\n        this.component.mount(document.getElementById(this.renderAt)); // Change the draw method to component draw\n        return this;\n    }\n}\n\nexport default DummyComponent;\n","import { DEFAULT_CONFIG } from '../../../../muze/src/defaults';\n\nconst DEFAULT_WIDTH = 600;\nconst DEFAULT_HEIGHT = 400;\nconst DEFAULT_CLASS_NAME = `${DEFAULT_CONFIG.classPrefix}-layout-container-component`;\nconst NODE_PREFIX = `${DEFAULT_CONFIG.classPrefix}-layout-container`;\n\nexport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT,\n  DEFAULT_CLASS_NAME,\n  NODE_PREFIX\n};\n","export default class DefinitionModel {\n    constructor (config) {\n        this._host = config.host || null;\n        this._cut = config.cut || null;\n        this._ratioWeight = config.ratioWeight === 0 ? 0 : config.ratioWeight || 1;\n        this._preferred = config.preferred || false;\n        this._lanes = config.lanes || [];\n        this._remainingHeight = 0;\n        this._remainingWidth = 0;\n    }\n\n    host (host) {\n        if (host) {\n            this._host = host;\n        }\n        return this._host;\n    }\n\n    preferred (preferred) {\n        if (preferred) {\n            this._preferred = preferred;\n        }\n        return this._preferred;\n    }\n\n    cut (cut) {\n        if (cut) {\n            this._cut = cut;\n        }\n        return this._cut;\n    }\n\n    ratioWeight (ratioWeight) {\n        if (ratioWeight) {\n            this._ratioWeight = ratioWeight;\n        }\n        return this._ratioWeight;\n    }\n\n    lanes (lanes) {\n        if (lanes) {\n            this._lanes = lanes;\n        }\n        return this._lanes;\n    }\n\n    remainingHeight (remainingHeight) {\n        if (remainingHeight) {\n            this._remainingHeight = remainingHeight;\n        }\n        return this._remainingHeight;\n    }\n\n    remainingWidth (remainingWidth) {\n        if (remainingWidth) {\n            this._remainingWidth = remainingWidth;\n        }\n        return this._remainingWidth;\n    }\n}\n","import { NODE_PREFIX } from '../../constants/defaults';\nimport DefinitionModel from '../definition-manager/definitionModel';\nimport DummyComponent from '../../layout-component/dummy-component';\n/**\n * Compares two strings in lowercase\n *\n * @export\n * @param {string} value the value to be compared\n * @param {string} compareTo whom the value would be compared\n * @return {boolean} true if values are equal\n */\nexport function isEqual (value, compareTo) {\n    if (typeof value !== 'string' || typeof compareTo !== 'string') {\n        throw new TypeError('value and compareTo must be string');\n    }\n    return value.toLowerCase() === compareTo.toLowerCase();\n}\n\nexport const getNodeId = (() => {\n    let _uid = 0;\n    return () => `${NODE_PREFIX}-${++_uid}`;\n})();\n\nexport function yExtraSpace (node) {\n    let smallestHeight = 0;\n    if (node.getCutType() === 'v') {\n        smallestHeight = smallestExtraHeightHorizontally(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'h') {\n        node.children().forEach((child) => {\n            smallestHeight += yExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerHeight = node.boundBox().height;\n        const hostHeight = node.model().host().getLogicalSpace().height;\n\n        smallestHeight = containerHeight - hostHeight;\n        if (smallestHeight < 0) {\n            smallestHeight = 0;\n        }\n    } else {\n        smallestHeight = 0;\n    }\n    return smallestHeight;\n}\n\nexport function smallestExtraHeightHorizontally (node) {\n    let smallestHeight = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const h = yExtraSpace(child);\n        if (h < smallestHeight) {\n            smallestHeight = h;\n        }\n    });\n    return smallestHeight;\n}\n\nexport function xExtraSpace (node) {\n    let smallestWidth = 0;\n    if (node.getCutType() === 'h') {\n        smallestWidth = smallestExtraWidthVertically(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'v') {\n        node.children().forEach((child) => {\n            smallestWidth += xExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerWidth = node.boundBox().width;\n        const hostWidth = node.model().host().getLogicalSpace().width;\n        smallestWidth = containerWidth - hostWidth;\n        if (smallestWidth < 0) {\n            smallestWidth = 0;\n        }\n    } else {\n        smallestWidth = 0;\n    }\n    return smallestWidth;\n}\n\nexport function smallestExtraWidthVertically (node) {\n    let smallestWidth = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const w = xExtraSpace(child);\n        if (w < smallestWidth) {\n            smallestWidth = w;\n        }\n    });\n    return smallestWidth;\n}\n\nexport function determineBoundBox (bb, i, arr, instance) {\n    if (i) {\n    // if not first sibling, take boundbox from previous sibling\n        const lastSibling = arr[i - 1];\n        const { top: _top, left: _left, height: _height, width: _width } = lastSibling.boundBox();\n        return {\n            width: bb.width,\n            height: bb.height,\n\n            top: instance.parentCut() === 'h'\n        ? _top + _height : _top,\n\n            left: instance.parentCut() === 'h'\n        ? _left : _left + _width\n        };\n    }\n  // if first sibling, take boundbox from parent\n    const { top: _top, left: _left } = instance.parent().boundBox();\n    return {\n        width: bb.width,\n        height: bb.height,\n        top: _top,\n        left: _left\n    };\n}\n\n// prepares the targetComponent Map for target Mapping ie. where a component should lie\nexport function prepareTargetComponentMap (context) {\n    context.targetComponentMap(new Map());\n    context.componentMap().forEach((value) => {\n        if (context.targetComponentMap().has(value.target())) {\n            context.targetComponentMap().get(value.target()).push(value);\n        } else {\n            const temp = [];\n            temp.push(value);\n            context.targetComponentMap().set(value.target(), temp);\n        }\n    });\n}\n\nexport function getComponent (canvasComponent, componentName) {\n    const comp = canvasComponent.find(component => component.name() === componentName);\n    return (comp && comp !== -1) ? comp : null;\n}\nexport function createPlaceHolderComponent (height, width, position) {\n    const comp = new DummyComponent(0, { height, width });\n    comp.name('placeHolder');\n    comp.position(position);\n    return comp;\n}\n\nexport function placeComponent (definitionModel, component, isPreferred = false, isGridComponent = false) {\n    let cut = '';\n    let componentRatioWidth = 1;\n    let leftOvercomponentRationWidth = 1;\n    let leftHeight = 0;\n    let leftWidth = 0;\n\n    if (!component) {\n        return { first: definitionModel, second: definitionModel };\n    }\n\n    const { height: componentHeight, width: componentWidth } = component.getLogicalSpace();\n    const position = component.position();\n    if (position === 'top' || position === 'bottom') {\n        cut = 'h';\n        componentRatioWidth = componentHeight / definitionModel.remainingHeight();\n        leftHeight = definitionModel.remainingHeight() - componentHeight;\n        leftWidth = definitionModel.remainingWidth();\n    } else {\n        cut = 'v';\n        componentRatioWidth = componentWidth / definitionModel.remainingWidth();\n        leftWidth = definitionModel.remainingWidth() - componentWidth;\n        leftHeight = definitionModel.remainingHeight();\n    }\n    leftOvercomponentRationWidth = 1 - componentRatioWidth;\n\n// update parentModel\n    definitionModel.cut(cut);\n    const firstLaneConfig = {\n        host: component.name(),\n        cut: null,\n        ratioWeight: componentRatioWidth,\n        preferred: isGridComponent ? false : isPreferred,\n        lanes: []\n    };\n    const firstLane = new DefinitionModel(firstLaneConfig);\n    firstLane.remainingHeight(componentHeight);\n    firstLane.remainingWidth(componentWidth);\n\n    const secondLaneConfig = {\n        host: null,\n        cut: null,\n        ratioWeight: leftOvercomponentRationWidth,\n        preferred: isGridComponent ? false : !isPreferred,\n        lanes: []\n    };\n    const secondLane = new DefinitionModel(secondLaneConfig);\n    secondLane.remainingHeight(leftHeight);\n    secondLane.remainingWidth(leftWidth);\n    if (isPreferred) {\n        definitionModel.lanes([firstLane]);\n    } else if (position === 'top' || position === 'left') {\n        definitionModel.lanes([firstLane, secondLane]);\n    } else {\n        definitionModel.lanes([secondLane, firstLane]);\n    }\n    return { first: firstLane, second: secondLane };\n}\n\nexport function placeGridComponent (definitionModel, gridComponents) {\n    let tempDefModel = definitionModel;\n    const rows = gridComponents.length;\n    const column = rows ? gridComponents[0].length : 0;\n    const height = gridComponents.reduce((acc, val) => (acc + val[0].getLogicalSpace().height), 0);\n\n    for (let i = 0; i < column; i++) {\n        const iscolumnPreffered = i === column - 1;\n        const columnPlaceHolderComponent = createPlaceHolderComponent(height,\n                                                    gridComponents[0][i].getLogicalSpace().width, 'left');\n        const { first, second } = placeComponent(tempDefModel, columnPlaceHolderComponent, iscolumnPreffered);\n        tempDefModel = first;\n        for (let j = 0; j < rows; j++) {\n            const rowpreffred = j === (rows - 1);\n            tempDefModel = placeComponent(tempDefModel, gridComponents[j][i], rowpreffred, true).second;\n        }\n        tempDefModel = second;\n    }\n}\n\nexport function negotiateDimension (node) {\n    let preferred;\n    let cumultiveExtraSpaceAmt = 0;\n    let alteredDim;\n    let nonAlteredDim;\n\n    const childrenLength = node.children().length;\n\n    for (let index = 0; index < childrenLength; index++) {\n        let fn;\n        let extraSpaceAmt;\n        const child = node.children()[index];\n\n        if (child.parentCut() === 'h') {\n            fn = yExtraSpace;\n            alteredDim = 'height';\n            nonAlteredDim = 'width';\n        } else {\n            fn = xExtraSpace;\n            alteredDim = 'width';\n            nonAlteredDim = 'height';\n        }\n  // if vertical then get extra height from other node and push it to the preferred node.\n  // for horizontal cut the same thing is to be done with width\n        if (child.isPreferred()) {\n    // push extra space in sink. Execute it when all non preferred space are computed.\n            preferred = child;\n\n            continue; // eslint-disable-line no-continue\n        }\n  // reduce own height and save it in a var\n        cumultiveExtraSpaceAmt += (extraSpaceAmt = fn(child));\n        child.boundBox()[alteredDim] -= extraSpaceAmt;\n  // update nonaltered dim from parent for any change which happened during negotiation\n        child.boundBox()[nonAlteredDim] = child.parent().boundBox()[nonAlteredDim];\n\n        negotiateDimension(child);\n    }\n\n    if (preferred) {\n        preferred.boundBox()[alteredDim] += cumultiveExtraSpaceAmt;\n        preferred.boundBox()[nonAlteredDim] = preferred.parent().boundBox()[nonAlteredDim];\n        negotiateDimension(preferred);\n    }\n}\n\nexport function computePosition (node) {\n    node.children().forEach((child, i, children) => {\n        const boundBox = determineBoundBox(child.boundBox(), i, children, child);\n        child.boundBox(boundBox);\n        computePosition(child);\n    });\n}\n\nexport function allocateBoundingBox (node) {\n    const totalWeight = node.children()\n                            .map(child => child.model().ratioWeight())\n                            .reduce((carry, val) => carry + val, 0);\n\n    node.children().forEach((child, i, children) => {\n        const lastSibling = children[i - 1];\n        const ratio = child.model().ratioWeight() / totalWeight;\n\n        if (child.parentCut() === 'h') {\n            child.boundBox({\n                top: i ? lastSibling.boundBox().top + lastSibling.boundBox().height : 0,\n                left: child.parent().boundBox().left,\n                height: child.parent().boundBox().height * ratio,\n                width: child.parent().boundBox().width\n            });\n        } else {\n            child.boundBox({\n                top: child.parent().boundBox().top,\n                left: i ? lastSibling.boundBox().left + lastSibling.boundBox().width : 0,\n                height: child.parent().boundBox().height,\n                width: child.parent().boundBox().width * ratio\n            });\n        }\n        allocateBoundingBox(child);\n    });\n}\n\n","import { getNodeId } from '../helper';\nimport { LayoutComponent } from '../../layout-component';\n\nclass Node {\n    constructor (data) {\n        this._model = data;\n        this._parent = null;\n        this._children = [];\n        this._parentCut = null;\n        this._boundBox = {\n            top: null,\n            left: null,\n            height: null,\n            width: null\n        };\n\n        this._id = this._model.host() instanceof LayoutComponent && this._model.host().renderAt() ?\n                    this._model.host().renderAt() :\n                    getNodeId();\n    }\n\n    addChildren (entries) {\n        this._children.push(...entries);\n        entries.forEach((e) => { e.parent(this); });\n    }\n\n    isRoot () {\n        return this._parent === null;\n    }\n\n    isLeaf () {\n        return !this._children.length;\n    }\n\n    getCutType () {\n        return this._model.cut();\n    }\n\n    isPreferred () {\n        return !!this._model.preferred();\n    }\n\n    children (children) {\n        if (children) {\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    parent (parent) {\n        if (parent) {\n            this._parent = parent;\n        }\n        return this._parent;\n    }\n\n    parentCut (parentCut) {\n        if (parentCut) {\n            this._parentCut = parentCut;\n        }\n        return this._parentCut;\n    }\n\n    id (id) {\n        if (id) {\n            this._id = id;\n        }\n        return this._id;\n    }\n\n    model (model) {\n        if (model) {\n            this._model = model;\n        }\n        return this._model;\n    }\n\n    boundBox (bound) {\n        if (bound) {\n            this._boundBox = {\n                top: bound.top,\n                left: bound.left,\n                height: bound.height,\n                width: bound.width\n            };\n        }\n        return this._boundBox;\n    }\n  /**\n     * function to search a node and update it with the config provided.\n     * @param  {Object} nodeconfig\n     */\n    updateNode (nodeconfig) {\n        if (this._id === nodeconfig._id) {\n            this._model.cut(nodeconfig.cut);\n            this._model.ratioWeight(nodeconfig.ratioWeight);\n        } else {\n            this._children.forEach((node) => {\n                if (node._id === nodeconfig._id) {\n                    node.model.cut(nodeconfig.cut);\n                    node.model.ratioWeight(nodeconfig.ratioWeight);\n                    return;\n                }\n                this.searchNode(node, nodeconfig);\n            });\n        }\n    }\n\n  // Recursive function to search a node\n    searchNode (node, nodeconfig) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeconfig._id) {\n                childNode.model().cut(nodeconfig.cut);\n                childNode.model().ratioWeight(nodeconfig.ratioWeight);\n            } else {\n                this.searchNode(childNode, nodeconfig);\n            }\n        });\n    }\n\n  /**\n     * function to delete a node from tree Structure.\n     * @param  {String} nodeId - node Id of the Node\n     */\n    delete (nodeId) {\n        this._children.forEach((node) => {\n            if (node.id() === nodeId) {\n                const index = this._children.indexOf(node);\n                this._model.lanes().splice(index, 1);\n            }\n            this.deleteSearchNode(node, nodeId);\n        });\n    }\n\n  // Recursive function to search a node\n    deleteSearchNode (node, nodeId) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeId) {\n                const index = node.children().indexOf(childNode);\n                node.model().lanes().splice(index, 1);\n            } else {\n                this.deleteSearchNode(childNode, nodeId);\n            }\n        });\n    }\n}\n\nexport default Node;\n","import Node from '../tree';\nimport {\n    allocateBoundingBox,\n    negotiateDimension,\n    computePosition\n} from '../helper';\n\nexport default class LayoutModel {\n    constructor (measurements, config) {\n        this._measurements = measurements;\n        this._config = config;\n        this._root = this.createTree(this._config, null);\n        this.setBoundBox();\n    }\n\n    createTree (config, parent) {\n        const node = new Node(config);\n        if (parent) {\n            node.parentCut(parent.getCutType());\n            parent.addChildren([node]);\n        } else {\n            this._root = node;\n        }\n        for (const lane of config.lanes()) {\n            this.createTree(lane, node);\n        }\n\n        return this._root;\n    }\n\n    setBoundBox () {\n        this._root.boundBox({\n            top: 0,\n            left: 0,\n            width: this._measurements.width,\n            height: this._measurements.height\n        });\n        allocateBoundingBox(this._root);\n    }\n\n    setHostPosition (node) {\n        node.children().forEach((child) => {\n            LayoutModel.setHostSpatialConfig(child);\n            this.setHostPosition(child);\n        });\n    }\n\n    static setHostSpatialConfig (node) {\n        const bb = node.boundBox();\n        const host = node.model().host();\n        if (host && host.setSpatialConfig) {\n            const conf = {\n                x: bb.left,\n                y: bb.top,\n                width: bb.width,\n                height: bb.height,\n                renderAt: node.id()\n            };\n            host.setSpatialConfig(conf);\n        }\n    }\n\n    negotiate () {\n        negotiateDimension(this._root);\n        computePosition(this._root);\n        return this;\n    }\n\n    broadcast () {\n        this.setHostPosition(this._root);\n        return this;\n    }\n\n    tree () {\n        return this._root;\n    }\n}\n","/* eslint no-undef: \"off\" */\n/* eslint default-case: \"off\" */\nexport class Utils {\n    static isDOMElement (element) {\n        return element instanceof Element;\n    }\n\n    static getID (element) {\n        return element.id;\n    }\n\n    static getElement (id) {\n        return document.getElementById(id);\n    }\n\n    static findContainer (data) {\n        return data.filter(coordinate => coordinate.parent == null)[0];\n    }\n  /**\n   * static method to remove the div\n   * @param  {} divId - div ID to be removed.\n   */\n    static removeDiv (divId) {\n        if (document.getElementById(divId) !== null) { document.getElementById(divId).remove(); }\n    }\n}\n","import { DEFAULT_CLASS_NAME } from '../constants/defaults';\nimport { LayoutComponent } from '../layout-component';\n\nexport default class DataPoint {\n    constructor (node) {\n        this._node = node;\n        this._className = node.model().host() instanceof LayoutComponent ?\n                            node.model().host().className() : DEFAULT_CLASS_NAME;\n    }\n\n    node () {\n        return this._node;\n    }\n\n    hasHost () {\n        return this._node.model().host() instanceof LayoutComponent;\n    }\n\n    className () {\n        return this._className || DEFAULT_CLASS_NAME;\n    }\n}\n","import { getnodePoints } from './helper';\n\nexport class DataParser {\n    constructor (data) {\n        this._data = data;\n    }\n\n    defaultDataPointLogic () {\n        const nodepoints = [];\n        getnodePoints(this._data, nodepoints);\n        return nodepoints;\n    }\n\n}\n","import DataPoint from './data-point';\n\nexport const getnodePoints = (node, nodepoints) => {\n    const datapoint = new DataPoint(node);\n    nodepoints.push(datapoint);\n    node.children().forEach((child) => {\n        getnodePoints(child, nodepoints);\n    });\n};\n","import { DataParser } from './data-parser';\n\nexport class HTMLDataAdapter extends DataParser {\n    getCoordinates () {\n        return super.defaultDataPointLogic();\n    }\n}\n","export class Renderer {\n\n    initRenderer (node, tree) {\n        node.__logicalTree = tree;\n    }\n}\n","import { HTMLDataAdapter } from '../data-adapters/html-data';\nimport { Utils } from '../utils';\nimport { Renderer } from './renderer';\n\nexport class HTMLRenderer extends Renderer {\n    constructor (data) {\n        super();\n        this._data = data;\n        this._coordinates = new HTMLDataAdapter(this._data).getCoordinates();\n    }\n\n    createhtml (mount, className) {\n        const mainDiv = mount;\n        super.initRenderer(mainDiv, this._data); // Initialise node with layout id\n        this.parentDiv = this.createAndCustomiseParent(className);\n        this._coordinates.forEach((node) => {\n            if (node.hasHost()) {\n                const host = node.node();\n                this.parentDiv.appendChild(this.createAndPositionDiv({ ...host.boundBox(),\n                    id: host.id(),\n                    className: node.className() }));\n            }\n        });\n        mainDiv.appendChild(this.parentDiv);\n    }\n\n    createAndPositionDiv (config) {\n        const { top, left, height, width, className, id } = config;\n        const existingDiv = document.getElementById(id);\n        const div = existingDiv || document.createElement('div');\n        div.style.position = 'absolute';\n        div.style.left = `${left}px`;\n        div.style.top = `${top}px`;\n        div.style.height = `${height}px`;\n        div.style.width = `${width}px`;\n        div.id = id;\n        div.className = className;\n        return div;\n    }\n\n    createAndCustomiseParent (className) {\n        const container = Utils.findContainer(this._coordinates);\n        const host = container.node();\n        const parentDiv = this.createAndPositionDiv({ ...host.boundBox(),\n            id: host.id(),\n            className: container.className() });\n        parentDiv.className = className;\n        parentDiv.style.position = 'relative';\n        return parentDiv;\n    }\n\n    coordinates () {\n        return this._coordinates;\n    }\n}\n","import { HTMLRenderer } from '../renderers/html-renderer';\nimport { LayoutComponent } from '../layout-component';\n\nexport const getChildNode = (context, config) =>\n                        context.renderer().createAndPositionDiv(config);\n\nexport const findNode = (context, nodeID) =>\n                        context.renderer().coordinates().find(point => point.node().id() === nodeID);\n\nexport const renderHTML = (context) => {\n    context.renderer(new HTMLRenderer(context.data()));\n    context.renderer().createhtml(context.mount(), context.className());\n};\n\nexport const drawLayout = (context) => {\n    switch (context.renderer()) {\n    case 'html' :\n        renderHTML(context);\n        break;\n    default:\n        renderHTML(context);\n    }\n};\n\nexport const drawComponent = (componentData) => {\n    componentData.children().forEach((node) => {\n        const host = node.model().host();\n        if (host instanceof LayoutComponent) {\n            host.draw();\n        }\n        drawComponent(node);\n    });\n};\n\nexport const removeElement = (elemID) => {\n    document.removeElement(document.getElementById(elemID));\n};\n\nexport const resolveAligment = (context, componentData) => {\n    componentData.children().forEach((component) => {\n        const host = component.model().host();\n        if (host instanceof LayoutComponent && host.alignWith()) {\n            let newNodeConfig = {};\n            const point = findNode(context, component.id()).node();\n            const node = point.boundBox();\n            const refNode = findNode(context, context.componentMap().get(host.alignWith()).renderAt())\n                                .node()\n                                .boundBox();\n            switch (host.alignment()) {\n            case 'left':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(refNode.left - node.left))\n                };\n                break;\n\n            case 'right':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(node.left + node.width - (refNode.left + refNode.width)))\n                };\n                break;\n\n            case 'top':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: Math.abs(node.height - Math.abs(refNode.top - node.top)),\n                    width: node.width\n                };\n                break;\n\n            case 'bottom':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: Math.abs(node.top - refNode.top + refNode.height),\n                    width: node.width\n                };\n                break;\n\n            case 'h-center':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: refNode.width\n                };\n                break;\n\n            case 'v-center':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: refNode.height,\n                    width: node.width\n                };\n                break;\n            default:\n                break;\n            }\n    // check if model in parent component\n            Object.assign(newNodeConfig, { id: point.id(), className: host.className() });\n            context.renderer().createAndPositionDiv(newNodeConfig);\n            context.componentMap().get(host.name()).renderAt(component.id());\n            context.componentMap().get(host.name()).boundBox({\n                height: newNodeConfig.height,\n                width: newNodeConfig.width\n            });\n            // context.renderer().parentDiv.appendChild(childNode);\n        }\n        resolveAligment(context, component);\n    });\n};\n","import { Utils } from '../utils';\nimport { drawLayout, resolveAligment, drawComponent } from './helper';\n\nexport class DrawingManager {\n    constructor (data, renderer, container) {\n        this._data = data.tree;\n        this._componentMap = data.componentMap;\n        this._layoutClassName = data.layoutClassName;\n        this._renderer = renderer;\n        this._mount = Utils.isDOMElement(container) ? container : Utils.getElement(container);\n    }\n\n    draw () {\n        drawLayout(this);\n        resolveAligment(this, this._data);\n        drawComponent(this._data);\n        return this;\n    }\n\n    data (data) {\n        if (data) {\n            this._data = data;\n        }\n        return this._data;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    className (param) {\n        if (param) {\n            this._layoutClassName = param;\n        }\n        return this._layoutClassName;\n    }\n\n    renderer (param) {\n        if (param) {\n            this._renderer = param;\n        }\n        return this._renderer;\n    }\n\n    mount (param) {\n        if (param) {\n            this._mount = param;\n        }\n        return this._mount;\n    }\n}\n","import DefinitionModel from './definitionModel';\nimport { prepareTargetComponentMap, getComponent, placeComponent, placeGridComponent } from '../helper';\n\nexport default class DefinitionManager {\n    constructor (componentMap, sequence, totalHeight, totalWidth) {\n        this._componentMap = componentMap;\n        this._prioritySequence = sequence;\n        this._totalHeight = totalHeight;\n        this._totalWidth = totalWidth;\n        this._targetComponentMap = null;\n    }\n\n    // create the config model\n    generateConfigModel () {\n        prepareTargetComponentMap(this);\n        const canvasComponent = this._targetComponentMap.get('canvas');\n        const definitionModel = new DefinitionModel({});\n        let tempDefModel = definitionModel;\n        definitionModel.remainingHeight(this._totalHeight);\n        definitionModel.remainingWidth(this._totalWidth);\n\n        let componentRef = null;\n\n        this._prioritySequence.forEach((name) => {\n            componentRef = getComponent(canvasComponent, name);\n            if (name !== 'grid') {\n                tempDefModel = placeComponent(tempDefModel, componentRef).second;\n            } else {\n                tempDefModel = placeGridComponent(tempDefModel, componentRef.component);\n            }\n        });\n        return definitionModel;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    targetComponentMap (param) {\n        if (param) {\n            this._targetComponentMap = param;\n        }\n        return this._targetComponentMap;\n    }\n}\n","import { sanitizeConfig } from './helper';\n\nexport class LayoutDef {\n    constructor () {\n        this._componentMap = new Map();\n        this._layoutDefinition = null;\n    }\n\n    addComponent (component) {\n        this._componentMap.set(component.name(), component);\n    }\n\n    layoutDefinition (def) {\n        if (def) {\n            this._layoutDefinition = def;\n        }\n        return this._layoutDefinition;\n    }\n\n    addMultipleComponent (componentArray) {\n        componentArray.forEach((comp) => {\n            this.addComponent(comp);\n        });\n    }\n\n    sanitizedDefinition () {\n        sanitizeConfig(this, this._layoutDefinition);\n        return this.layoutDefinition();\n    }\n\n    componentMap () {\n        return this._componentMap;\n    }\n    resetComponentMap () {\n        this._componentMap.clear();\n    }\n}\n","import DefinitionManager from '../layout-definition/definition-manager';\n\nexport function sanitizeConfig (context, hostObj) {\n    const hostID = hostObj.host();\n    if (hostObj.lanes() && hostObj.lanes().length) {\n        hostObj.lanes().forEach(childHost => sanitizeConfig(context, childHost));\n    }\n    if (hostID != null && typeof (hostID) === 'string') {\n        if (context.componentMap().get(hostID) !== undefined) {\n            hostObj.host(context.componentMap().get(hostID));\n        }\n    }\n}\n\nexport function calLayOutDef (context) {\n    const { height, width } = context.dimension();\n    const defManager = new DefinitionManager(context.layoutDef().componentMap(),\n                                              context.prioritySequence(),\n                                              height,\n                                              width);\n    const genLayoutdef = defManager.generateConfigModel();\n    return genLayoutdef;\n}\n","import {\n  LayoutModel\n} from '../layout-definition';\n\nimport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT\n} from '../constants/defaults';\n\nimport { DrawingManager } from '../drawing-manager';\nimport { Utils } from '../utils';\nimport { LayoutDef } from './layout-def';\nimport { calLayOutDef } from './helper';\n\nexport default class LayoutManager {\n    constructor (conf) {\n        this._renderAt = conf.renderAt;\n        this._layoutClassName = conf.className;\n        this._dimension = {\n            width: conf.width || DEFAULT_WIDTH,\n            height: conf.height || DEFAULT_HEIGHT\n        };\n\n        this._skeletonType = conf.skeletonType || 'html';\n        this._layoutDefinition = null;\n        this._layoutDef = new LayoutDef();\n        this._drawingManager = null;\n        this._prioritySequence = [];\n        this.tree = null;\n        this._rootNodeID = null;\n    }\n\n    layoutDef (param) {\n        if (param) {\n            this._layoutDef = param;\n        }\n        return this._layoutDef;\n    }\n\n    prioritySequence (param) {\n        if (param) {\n            this._prioritySequence = param;\n        }\n        return this._prioritySequence;\n    }\n\n    dimension (param) {\n        if (param) {\n            Object.assign(this._dimension, param);\n        }\n        return this._dimension;\n    }\n\n    addComponent (component) {\n        this._layoutDef.addComponent(component);\n    }\n\n    addMultipleComponent (componentArray) {\n        this._layoutDef.addMultipleComponent(componentArray);\n    }\n\n    resetNode (node) {\n        if (this.con) {\n            this.con.resetNode(node);\n        }\n    }\n\n  /**\n   * function to update the node and rerender the layout.\n   * @param  {} config - node configuration to change.\n   */\n    updateNode (config) {\n        this.tree.updateNode(config);\n        this._layoutDefinition = this.tree.model;\n        this.compute();\n    }\n\n    compute () {\n        //----\n        if (Utils.isDOMElement(this._renderAt)) {\n            this._renderAt._layout = this;\n        } else {\n            document.getElementById(this._renderAt)._layout = this;\n        }\n        //-----\n        this._layoutDefinition = calLayOutDef(this);\n        this._layoutDef.layoutDefinition(this._layoutDefinition);\n        this._layoutDefinition = this._layoutDef.sanitizedDefinition();\n        this._layout = new LayoutModel({\n            width: this._dimension.width,\n            height: this._dimension.height\n        },\n            this._layoutDefinition);\n        this.tree = this._layout.negotiate().tree();\n        this._layout.broadcast();\n        this._drawingManager = new DrawingManager({\n            tree: this.tree,\n            componentMap: this._layoutDef.componentMap(),\n            layoutClassName: this._layoutClassName\n        }, this._skeletonType, this._renderAt);\n\n        if (this._rootNodeID) {\n            this.tree.id(this._rootNodeID);\n        } else {\n            this._rootNodeID = this.tree.id();\n        }\n    // this will draw all the components by calling their draw method\n        this._drawingManager.draw();\n    }\n\n    getRootNodeId () {\n        return this._rootNodeID;\n    }\n\n  /**\n  * This function takes the LayoutComponents and Register them in component store\n  * @param {Array<LayoutComponent>} layoutComponents\n  */\n    registerComponents (layoutComponents) {\n        this._prioritySequence.length = 0;\n        this._layoutDef.resetComponentMap();\n        layoutComponents.forEach((container) => {\n            if (container) {\n                this._prioritySequence.push(container.name());\n                this.addComponent(container);\n                if (container.name() === 'grid') {\n                    container.component.forEach((componentArr) => {\n                        componentArr.forEach((compo) => {\n                            this.addComponent(compo);\n                        });\n                    });\n                }\n            }\n        });\n        return this;\n    }\n\n    getComponent (componentName) {\n        return this._layoutDef.componentMap().get(componentName);\n    }\n\n    renderAt (mount) {\n        if (mount) {\n            this._renderAt = mount;\n        }\n        return this._renderAt;\n    }\n}\n","import { LayoutComponent } from '../../../../layout/src/tree-layout';\n\nexport default class MuzeComponent extends LayoutComponent {\n    getLogicalSpace () {\n        const { width, height } = this.boundBox();\n        return { width, height };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n    }\n\n    getBoundBox () {\n        return this.boundBox();\n    }\n\n    updateWrapper () {\n        throw Error('Update is not implemented');\n    }\n\n    setParams () {\n        throw Error('set params is not implemented');\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport { LEFT } from '../../constants';\n\nexport default class HeaderComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    renderHeader (container) {\n        const layoutConfig = this.params.config;\n        container = selectElement(container);\n        const { align } = layoutConfig;\n        const sel = container\n          .selectAll(`.${layoutConfig.classPrefix}-inner-container`)\n          .data([this.name]);\n        sel.exit().remove();\n        const selEnter = sel.enter().append('div');\n\n        const cont = selEnter.merge(sel);\n        cont.classed(`${layoutConfig.classPrefix}-inner-container`, true);\n        const { height, width } = this.boundBox();\n        this.component.setAvailableSpace(width, height);\n\n        this.component && this.component.render(cont.node());\n\n        cont.selectAll('div').classed(`${layoutConfig.classPrefix}-inner-content`, true);\n        cont.style('width', `${100}%`);\n\n        if (layoutConfig && this.component) {\n            cont.style('float', LEFT)\n                            .style('text-align', align);\n                            // .style(`padding-${position === TOP ? BOTTOM : TOP}`, `${padding}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderHeader(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.component.getLogicalSpace());\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport {\n     LEFT, RIGHT, VERTICAL, HORIZONTAL\n} from '../../constants';\n\nexport default class LegendComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.measurement.legendSpace, 0);\n        this.setParams(params);\n    }\n\n    renderLegend (container) {\n        container = selectElement(container);\n        const sectionComponents = [];\n        const { legendSpace, height, width } = this.params.config.measurement;\n        const { position, classPrefix } = this.params.config;\n        const legendMount = makeElement(container, 'div', [this.components],\n                                        `${classPrefix}-inner-content`, {}, d => d);\n        legendMount.classed(`${classPrefix}-legend`, true);\n        const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n        const legWidth = align === VERTICAL ? legendSpace.width : width;\n        const legHeight = align === VERTICAL ? height : legendSpace.height;\n\n        [container, legendMount].forEach((elem) => {\n            elem.style('width', `${Math.floor(legWidth)}px`)\n                            .style('height', `${legHeight}px`)\n                            .style('float', LEFT);\n        });\n\n        if (align === VERTICAL) {\n            let sections = -1;\n            let currHeight = legHeight;\n            let currWidth = 0;\n\n            this.components.forEach((legendInfo) => {\n                const leg = legendInfo.legend;\n                if (leg.measurement().height > currHeight) {\n                    sections++;\n                    currWidth = 0;\n                    currHeight = legHeight;\n                } else {\n                    sections < 0 && sections++;\n                }\n                sectionComponents[sections] = sectionComponents[sections] || [];\n                currHeight -= Math.min(leg.measurement().height, currHeight);\n                currWidth = Math.max(Math.min(leg.measurement().width, leg.measurement().maxWidth), currWidth);\n                sectionComponents[sections].push({\n                    legend: leg,\n                    legendHeight: legHeight,\n                    legendWidth: currWidth\n                });\n            });\n\n            const mount = makeElement(legendMount, ['div'], sectionComponents, `${classPrefix}-legend-section`);\n            // mount.each((d, i) => selectElement(this).classed(`${classPrefix}-legend-section-${i}`, true));\n            mount.classed(`${classPrefix}-legend-vertical-section`, true)\n                            .style('width', d => `${d[0].legendWidth}px`);\n            makeElement(mount, ['div'], d => d, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) {\n                                d.legend.mount(this);\n                            })\n                            .style('width', d => `${d.legendWidth}px`);\n        } else {\n            const mount = makeElement(legendMount, 'div', [1], `${classPrefix}-legend-section`);\n            mount.classed(`${classPrefix}-legend-horizontal-section`, true);\n            mount.classed(`${classPrefix}-legend-section-${0}`, true)\n                            .style('width', `${legWidth}px`);\n\n            makeElement(mount, 'div', this.components, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) { d.legend.mount(this); })\n                            .style('width', d => `${d.legend.measurement().width}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderLegend(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.measurement.legendSpace);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.components = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n}\n","import { selectElement, makeElement } from 'muze-utils';\nimport { cellSpanMaker } from '../../../../layout/src/grid-layout/span-maker';\nimport {\n     TOP, LEFT, RIGHT, BOTTOM, CENTER, HEIGHT, WIDTH, ROW_SPAN, COL_SPAN\n} from '../../../../layout/src/enums/constants';\nimport { BLANK_BORDERS } from '../../../../layout/src/grid-layout/defaults';\nimport MuzeComponent from './muze-chart-component';\n\nexport default class MatrixComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n        this.className(params.config.className);\n    }\n\n    renderMatrix (mountPoint) {\n        // Creating containers for each matrix individually\n        const classPrefix = this.params.config.classPrefix;\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        // const dimensions = this.params.config.dimensions;\n        const border = this.params.config.border;\n\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${row}-${column + 1}`)\n                .classed(`${classPrefix}-grid-${row}`, true)\n                .classed(`${classPrefix}-grid`, true);\n\n        const { viewMatrix, spans } = cellSpanMaker(this.component, row, column);\n        if (row !== CENTER) {\n            containerForMatrix.style(WIDTH, `${this.getLogicalSpace().width}px`);\n            containerForMatrix.style(HEIGHT, `${this.getLogicalSpace().height}px`);\n        }\n\n        // Rendering the table components\n        const { cells } = this.renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        if (row === CENTER && spans) {\n            cells.attr(ROW_SPAN, function (cell, colIndex) {\n                const placeholder = cell.placeholder;\n                selectElement(this).style('height', `${placeholder.availHeight() + border.width}px`);\n                return spans[cell.rowIndex][colIndex];\n            });\n        } else if ((row === TOP || row === BOTTOM) && column === 1) {\n            cells.attr(COL_SPAN, function (cell, colIndex) {\n                const span = spans[cell.rowIndex][colIndex];\n                const placeholder = cell.placeholder;\n                if (span > 1) {\n                    placeholder.setAvailableSpace(placeholder.availWidth() * spans, placeholder.availHeight());\n                }\n                selectElement(this).style('height', `${placeholder.availHeight()}px`);\n                return span;\n            });\n        }\n        // Rendering content within placeholders\n        cells.each(function (cell) {\n            cell.placeholder && cell.placeholder.render(this);\n        }).exit().each((cell) => {\n            cell.placeholder && cell.placeholder.remove();\n        });\n        this.applyBorders(cells, border, row, column);\n    }\n\n    applyBorders (cells, border, type, index) {\n        const {\n          width,\n          style,\n          color,\n          showRowBorders,\n          showColBorders,\n          showValueBorders\n      } = border;\n        const borderStyle = `${width}px ${style}`;\n\n        if (type === CENTER && index === 1) {\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((borderType) => {\n                cells.style(`border-${borderType}`, `${borderStyle} ${showValueBorders[borderType] ?\n                  color : BLANK_BORDERS}`);\n            });\n        } else if (type === CENTER) {\n            this.applyRowBorders(cells, borderStyle, showRowBorders, color);\n        } else if (index === 1) {\n            this.applyColBorders(cells, borderStyle, showColBorders, color);\n        }\n    }\n\n    renderTable (mount, className, rowData) {\n        const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n        const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n        const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n        const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null).map(e =>\n                                  ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n        return { table, body, rows, cells };\n    }\n\n    applyRowBorders (cells, borderStyle, showBorders, color) {\n        [TOP, BOTTOM].forEach((borderType) => {\n            const style = `${borderStyle} ${showBorders[borderType] ? color : BLANK_BORDERS}`;\n            cells.style(`border-${borderType}`, style);\n        });\n    }\n\n    applyColBorders (cells, borderStyle, showBorders, color) {\n        [LEFT, RIGHT].forEach((borderType) => {\n            const style = `${borderStyle} ${showBorders[borderType] ? color : BLANK_BORDERS}`;\n            cells.style(`border-${borderType}`, style);\n        });\n    }\n\n    draw (container) {\n        this.renderMatrix(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(TOP);\n        this.className(params.config.className);\n    }\n}\n","import MuzeComponent from './muze-chart-component';\nimport MatrixComponent from './matrix-component';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\nexport default class GridComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.gridComponents = [];\n        this.setParams(params);\n    }\n\n    sanitizeGrid () {\n        let height = 0;\n        let width = 0;\n        const { viewMatricesInfo, layoutDimensions } = this.component.viewInfo();\n\n        for (let i = 0; i < 3; i++) {\n            if (!(this.gridComponents.length && this.gridComponents[i] instanceof Array)) {\n                this.gridComponents[i] = [];\n            }\n            for (let j = 0; j < 3; j++) {\n                const matrixDim = { height: layoutDimensions.viewHeight[i], width: layoutDimensions.viewWidth[j] };\n                const matrix = viewMatricesInfo.matrices[`${ROW_MATRIX_INDEX[i]}`][j];\n                const matrixName = `${ROW_MATRIX_INDEX[i]}-${COLUMN_MATRIX_INDEX[j]}`;\n                const matrixConfig = {\n                    dimensions: matrixDim,\n                    border: layoutDimensions.border,\n                    classPrefix: this.params.config.classPrefix,\n                    row: ROW_MATRIX_INDEX[i],\n                    column: j\n                };\n                if (this.gridComponents[i][j] instanceof MuzeComponent) {\n                    this.gridComponents[i][j].updateWrapper({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                } else {\n                    const matrixWrapper = new MatrixComponent({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                    this.gridComponents[i].push(matrixWrapper);\n                }\n                if (i === 0) {\n                    width += matrixDim.width;\n                }\n                if (j === 0) {\n                    height += matrixDim.height;\n                }\n            }\n        }\n        this.boundBox({ height, width });\n        this.component = this.gridComponents;\n    }\n\n    getBoundBox () {\n        const { top, left } = this.component[0][0].boundBox();\n        const { height, width } = this.boundBox();\n        return {\n            top,\n            left,\n            height,\n            width\n        };\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.className(params.config.className);\n        this.sanitizeGrid();\n    }\n}\n","import { MUZE_PREFIX } from '../constants';\n\nexport const TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 3,\n    className: `${MUZE_PREFIX}-title-container`\n};\n\nexport const SUB_TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 16,\n    maxLines: 2,\n    className: `${MUZE_PREFIX}-subtitle-container`\n};\n\nexport const GRID = 'grid';\n\nexport const CANVAS = 'canvas';\n\nexport const LAYOUT_ALIGN = {\n    TOP: 'top',\n    LEFT: 'left',\n    RIGHT: 'right',\n    BOTTOM: 'bottom'\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { arrangeComponents } from './component-resolver';\nimport { createHeaders } from './title-maker';\nimport { createLegend, getLegendSpace } from './legend-maker';\nimport { TOP, BOTTOM, LEFT, RIGHT, TITLE, SUB_TITLE, LEGEND } from '../constants';\nimport HeaderComponent from './components/headerComponent';\nimport LegendComponent from './components/legendComponent';\nimport GridComponent from './components/grid-component';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG, GRID, CANVAS, LAYOUT_ALIGN } from './defaults';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../layout/src/enums/constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const prepareLayout = (layout, renderDetails) => {\n    const { components, layoutConfig, measurement } = renderDetails;\n    const {\n        rows,\n        columns,\n        values,\n        cornerMatrices\n    } = components;\n    const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n    } = cornerMatrices;\n    if (rows && columns) {\n        layout.measurement(measurement)\n                        .config(layoutConfig)\n                        .matrices({\n                            top: [topLeft, columns[0], topRight],\n                            center: [rows[0], values, rows[1]],\n                            bottom: [bottomLeft, columns[1], bottomRight]\n                        })\n                        .triggerReflow();\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} mount\n *\n */\nexport const getRenderDetails = (context, mount) => {\n    let layoutConfig = mergeRecursive({}, context.config());\n    // Get height width of the mount point\n    let { height, width } = mount.getBoundingClientRect();\n    const heightAttr = context.height();\n    const widthAttr = context.width();\n    const visGroup = context.composition().visualGroup;\n    const {\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority,\n        rows,\n        columns,\n        values\n    } = visGroup.placeholderInfo();\n    const {\n        minWidth,\n        minHeight,\n        classPrefix,\n        showHeaders,\n        legend\n    } = context.config();\n    // Get title configuration\n    const titleConfig = context.title()[1];\n     // Get subtitle configuration\n    const subtitleConfig = context.subtitle()[1];\n    // Get legend position\n    const legendPosition = legend.position;\n    // Arrange components according to config\n    const layoutArrangement = arrangeComponents(context);\n\n    height = Math.floor(height);\n    width = Math.floor(width);\n\n    const availableHeightForCanvas = Math.max(heightAttr > 0 ? heightAttr : height, minHeight);\n    const availableWidthForCanvas = Math.max(widthAttr > 0 ? widthAttr : width, minWidth);\n\n    // Create headers and determine header height\n    const { headers, headerHeight } = createHeaders(context, availableHeightForCanvas, availableWidthForCanvas);\n\n    // Create legends and determine legend space\n    const legends = createLegend(context, headerHeight, availableHeightForCanvas, availableWidthForCanvas);\n    context._composition.legend = {};\n    legends.forEach((e) => {\n        context._composition.legend[e.scaleType] = e.legend;\n    });\n\n    const legendSpace = getLegendSpace(legends, legend, availableHeightForCanvas, availableWidthForCanvas);\n    const legendWidth = (legendPosition === LEFT || legendPosition === RIGHT) ? legendSpace.width : 0;\n    const legendHeight = (legendPosition === TOP || legendPosition === BOTTOM) ? legendSpace.height : 0;\n\n    // Set components for layouting\n    const components = {\n        headers,\n        legends,\n        canvases: [context],\n        rows,\n        columns,\n        values,\n        cornerMatrices: visGroup.cornerMatrices()\n    };\n    const measurement = {\n        mountSpace: {\n            height,\n            width\n        },\n        headerHeight,\n        legendSpace,\n        canvasWidth: availableWidthForCanvas,\n        canvasHeight: availableHeightForCanvas,\n        width: availableWidthForCanvas - legendWidth,\n        height: availableHeightForCanvas - headerHeight - legendHeight,\n        minUnitHeight: context.minUnitHeight(),\n        minUnitWidth: context.minUnitWidth()\n    };\n    layoutConfig = mergeRecursive(layoutConfig, {\n        classPrefix,\n        showHeaders,\n        border: mergeRecursive(visGroup.metaData().border, context.config().border),\n        layoutArrangement,\n        legend,\n        title: titleConfig,\n        subtitle: subtitleConfig,\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        mount,\n        priority\n    });\n    return {\n        layoutConfig,\n        components,\n        measurement\n    };\n};\n// const _getLegendOf = (legends, type) => legends.find(legend => legend.scaleType === type);\n\nexport const renderLayout = (layoutManager, grid, renderDetails) => {\n    // generate component wrappers\n\n    const { components, layoutConfig, measurement } = renderDetails;\n    const target = { target: CANVAS };\n    // title;\n    let titleWrapper = null;\n    if (components.headers && components.headers.titleCell) {\n        const title = components.headers.titleCell;\n        let titleConfig = layoutConfig.title;\n        titleConfig = Object.assign({}, titleConfig, { classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: LAYOUT_ALIGN.LEFT,\n            className: TITLE_CONFIG.className });\n        if (layoutManager.getComponent(TITLE)) {\n            titleWrapper = layoutManager\n                            .getComponent(TITLE)\n                            .updateWrapper({ name: TITLE, component: title, config: titleConfig });\n        } else {\n            titleWrapper = new HeaderComponent({ name: TITLE, component: title, config: titleConfig });\n        }\n    }\n\n     // subtitle\n    let subtitleWrapper = null;\n    if (components.headers && components.headers.subtitleCell) {\n        const subtitle = components.headers.subtitleCell;\n        let subtitleConfig = layoutConfig.subtitle;\n\n        subtitleConfig = Object.assign({}, subtitleConfig, { classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: LAYOUT_ALIGN.LEFT,\n            className: SUB_TITLE_CONFIG.className });\n        if (layoutManager.getComponent(SUB_TITLE)) {\n            subtitleWrapper = layoutManager\n                                .getComponent(SUB_TITLE)\n                                .updateWrapper({ name: SUB_TITLE, component: subtitle, config: subtitleConfig });\n        } else {\n            subtitleWrapper = new HeaderComponent({ name: SUB_TITLE, component: subtitle, config: subtitleConfig });\n        }\n    }\n\n    // color legend\n    let colorLegendWrapper = null;\n    if (components.legends && components.legends.length) {\n        const legendConfig = { ...layoutConfig.legend, ...target, measurement };\n\n        if (layoutManager.getComponent(LEGEND)) {\n            colorLegendWrapper = layoutManager\n                                .getComponent(LEGEND)\n                                .updateWrapper({\n                                    name: LEGEND,\n                                    component: components.legends,\n                                    config: legendConfig });\n        } else {\n            colorLegendWrapper = new LegendComponent({\n                name: LEGEND,\n                component: components.legends,\n                config: legendConfig });\n        }\n    }\n\n    // grid components\n\n    let gridWrapper = null;\n\n    if (layoutManager.getComponent(GRID)) {\n        gridWrapper = layoutManager\n                            .getComponent(GRID)\n                            .updateWrapper({\n                                name: GRID,\n                                component: grid,\n                                config: { ...target,\n                                    classPrefix: layoutConfig.classPrefix,\n                                    dimensions: { height: 0, width: 0 } }\n                            });\n    } else {\n        gridWrapper = new GridComponent({\n            name: GRID,\n            component: grid,\n            config: { ...target,\n                classPrefix: layoutConfig.classPrefix,\n                dimensions: { height: 0, width: 0 } }\n        });\n    }\n\n    layoutManager.registerComponents([\n        titleWrapper,\n        subtitleWrapper,\n        colorLegendWrapper,\n        gridWrapper\n    ]).compute();\n};\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    ROWS,\n    COLUMNS,\n    COLOR,\n    SHAPE,\n    SIZE,\n    DETAIL,\n    LAYERS,\n    TRANSFORM,\n    TITLE,\n    SUB_TITLE\n} from '../constants';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG } from './defaults';\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Canvas.\n * Canvas merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module LocalOptions\n */\n\nexport const localOptions = {\n    [ROWS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLUMNS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLOR]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SHAPE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SIZE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [DETAIL]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n\n    [LAYERS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [TRANSFORM]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object'\n        }\n    }\n};\n\nexport const canvasOptions = {\n    [TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(title) => {\n                if (typeof title === 'string') {\n                    const t = () => title;\n                    t._sanitized = true;\n                    return t;\n                }\n                return title;\n            }, (titleConfig) => {\n                const defConfig = mergeRecursive({}, TITLE_CONFIG);\n                return mergeRecursive(defConfig, titleConfig);\n            }]\n        }\n    },\n    [SUB_TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(subtitle) => {\n                if (typeof subtitle === 'string') {\n                    const sub = () => subtitle;\n                    sub._sanitized = true;\n                    return sub;\n                }\n                return subtitle;\n            }, (subtitleConfig) => {\n                const defConfig = mergeRecursive({}, SUB_TITLE_CONFIG);\n                return mergeRecursive(defConfig, subtitleConfig);\n            }]\n        }\n    }\n};\n","import { isEqual, STATE_NAMESPACES, selectElement } from 'muze-utils';\nimport { VisualGroup } from '@chartshq/visual-group';\nimport { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, DATA, CONFIG }\n    from '../constants';\nimport { canvasOptions } from './local-options';\nimport { LayoutManager } from '../../../layout/src/tree-layout';\n\n/**\n * Instantiate high level components. Canvas knows what all high level component it has.\n * @nice-to-have dynamic high level components.\n *  - Is it even required ?\n *  - Reactive to source (canvas) streaming ?\n * @param {*} context Canvas instance\n * @return {Object.<Array>} Arrays of Title, visualGroup, Legend\n */\nexport const initCanvas = (context) => {\n    const reg = context._registry.components;\n\n    return [new reg.VisualGroup(context._registry, context.dependencies())];\n};\n\nexport const setLayoutInfForUnits = (context) => {\n    const layoutManager = context._layoutManager;\n    const boundBox = layoutManager.getComponent('grid').getBoundBox();\n    const valueMatrix = context.composition().visualGroup.matrixInstance().value;\n    const parentContainer = selectElement(`#${layoutManager.getRootNodeId()}`).node();\n    valueMatrix.each((cell) => {\n        cell.valueOf().parentContainerInf({\n            el: parentContainer,\n            dimensions: boundBox\n        });\n    });\n};\n\n/**\n *\n *\n * @memberof Canvas\n */\nexport const dispatchProps = (context) => {\n    const lifeCycleManager = context.dependencies().lifeCycleManager;\n    lifeCycleManager.notify({ client: context, action: 'beforeupdate' });\n    const visualGroup = context.composition().visualGroup;\n\n    const allOptions = context._allOptions;\n    for (const key in allOptions) {\n        const value = context[key]();\n        if (value !== null) {\n            visualGroup[key] && visualGroup[key](value);\n        }\n    }\n    visualGroup.createMatrices();\n    context._cachedProps = {};\n    lifeCycleManager.notify({ client: context, action: 'initialized' });\n    lifeCycleManager.notify({ client: context, action: 'updated' });\n};\n\nconst equalityChecker = (props, params) => {\n    let checker = () => false;\n    return !props.every((option, i) => {\n        switch (option) {\n        case ROWS:\n        case COLUMNS:\n        case DETAIL:\n            checker = isEqual('Array');\n            break;\n\n        case SHAPE:\n        case SIZE:\n        case COLOR:\n        case DATA:\n        case CONFIG:\n            checker = isEqual('Object');\n            break;\n        default:\n            checker = () => true;\n            break;\n        }\n        const oldVal = params[i][0];\n        const newVal = params[i][1];\n\n        return checker(oldVal, newVal);\n    });\n};\n\nconst updateChecker = (props, params) => props.every((option, i) => {\n    const val = params[i][1];\n    switch (option) {\n    case ROWS:\n    case COLUMNS:\n        return val !== null;\n\n    case DATA:\n        return val && !val.isEmpty();\n\n    default:\n        return true;\n\n    }\n});\n\nexport const setupChangeListener = (context) => {\n    const store = context._store;\n\n    const allOptions = Object.keys(context._allOptions);\n    const props = [...allOptions, ...Object.keys(canvasOptions)];\n    const nameSpaceProps = [...allOptions, ...Object.keys(canvasOptions)].map(prop =>\n        `${STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE}.${prop}`);\n    store.registerChangeListener(nameSpaceProps, (...params) => {\n        let updateProps = equalityChecker(props, params);\n        updateProps = updateChecker(props, params);\n\n        // inform attached board to rerender\n        if (updateProps && context.mount()) {\n            dispatchProps(context);\n            context.render();\n        }\n    }, true);\n};\n\nexport const applyInteractionPolicy = (policies, firebolt) => {\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    const valueMatrix = visualGroup.composition().matrices.value;\n    policies.forEach(policy => policy(valueMatrix, firebolt));\n};\n\n/**\n * Sets the rotation for all x axes if any axis has the rotation config set in the\n * entire view\n *\n * @param {Array} columns Column cells that contain the axes cells\n */\nexport const setLabelRotationForAxes = (context) => {\n    let rotation = 0;\n\n    const xAxes = context.xAxes() || [];\n\n    (() => {\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                if (xAxes[i][j].renderConfig().labels.rotation !== 0) {\n                    rotation = xAxes[i][j].renderConfig().labels.rotation;\n                    return;\n                }\n            }\n        }\n    })();\n\n    if (rotation) {\n        xAxes.forEach((axes) => {\n            axes.forEach((axis) => {\n                axis.renderConfig({ labels: { rotation } });\n                axis.smartTicks(axis.setTickConfig());\n            });\n        });\n    }\n};\n\nexport const createGroupState = (context) => {\n    const [globalState, localState] = VisualGroup.getState();\n    const store = context._store;\n    store.append('app.group', globalState);\n    store.append('local.group', localState);\n};\n\nexport const removeChild = (mount) => {\n    while (mount.firstChild) {\n        mount.removeChild(mount.firstChild);\n    }\n};\n\nexport const createLayoutManager = () => {\n    const layoutManager = new LayoutManager({\n        className: 'muze-group-container'\n    });\n    return layoutManager;\n};\n","import {\n    getDataModelFromIdentifiers,\n    FieldType,\n    mergeRecursive\n} from 'muze-utils';\n\nimport { applyInteractionPolicy } from '../helper';\n\nconst defaultInteractionPolicy = (valueMatrix, firebolt) => {\n    const isMeasure = field => field.type() === FieldType.MEASURE;\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    const xFields = [].concat(...visualGroup.getFieldsFromChannel('x'));\n    const yFields = [].concat(...visualGroup.getFieldsFromChannel('y'));\n    const colDim = xFields.every(field => field.type() === FieldType.DIMENSION);\n    const fieldInf = visualGroup.resolver().getAllFields();\n    const rowFacets = fieldInf.rowFacets;\n    const colFacets = fieldInf.colFacets;\n    valueMatrix.each((cell) => {\n        const unitFireBolt = cell.valueOf().firebolt();\n        if (!(xFields.every(isMeasure) && yFields.every(isMeasure))) {\n            const facetFields = cell.valueOf().facetByFields()[0];\n            const unitColFacets = facetFields.filter(d => colFacets.findIndex(v => v.equals(d)) !== -1);\n            const unitRowFacets = facetFields.filter(d => rowFacets.findIndex(v => v.equals(d)) !== -1);\n            let propFields;\n            if (colDim) {\n                propFields = unitColFacets.map(d => `${d}`);\n            } else {\n                propFields = unitRowFacets.map(d => `${d}`);\n            }\n\n            unitFireBolt.propagateWith('*', propFields, true);\n        }\n    });\n};\n\nconst defaultCrossInteractionPolicy = {\n    behaviours: {\n        '*': (propagationPayload, context) => {\n            const propagationCanvasAlias = propagationPayload.sourceCanvas;\n            const canvasAlias = context.parentAlias();\n            return propagationCanvasAlias ? canvasAlias === propagationCanvasAlias : true;\n        }\n    },\n    sideEffects: {\n        tooltip: (propagationPayload, context) => {\n            const propagationUnit = propagationPayload.sourceUnit;\n            const propagationCanvas = propagationPayload.sourceCanvas;\n            const unitId = context.id();\n            const canvasAlias = context.parentAlias();\n            if (propagationCanvas) {\n                return propagationCanvas !== canvasAlias ? true : unitId === propagationUnit;\n            }\n            return true;\n        }\n    }\n};\n\n/**\n * This class is responsible for dispatching any behavioural action to all the visual units housed by the canvas.\n * It is created by {@link Canvas}. This class does not handle any physical actions. Physical actions get triggered\n * in {@link VisualUnit} which is managed by it's own firebolt instance. The firebolt instance of canvas only\n * propagates the action to all the visual units in it's composition.\n *\n * To get the firebolt instance of {@link Canvas}\n * ```\n *  const firebolt = canvas.firebolt();\n * ```\n *\n * @class GroupFireBolt\n * @public\n */\nexport default class GroupFireBolt {\n    constructor (context) {\n        this.context = context;\n        this._interactionPolicy = this.constructor.defaultInteractionPolicy();\n        this.crossInteractionPolicy(this.constructor.defaultCrossInteractionPolicy());\n    }\n\n    static defaultInteractionPolicy () {\n        return defaultInteractionPolicy;\n    }\n\n    static defaultCrossInteractionPolicy () {\n        return defaultCrossInteractionPolicy;\n    }\n\n    interactionPolicy (...policy) {\n        if (policy.length) {\n            this._interactionPolicy = policy[0] || this.constructor.defaultInteractionPolicy();\n            return this;\n        }\n        return this._interactionPolicy;\n    }\n\n    crossInteractionPolicy (...policy) {\n        if (policy.length) {\n            this._crossInteractionPolicy = mergeRecursive(mergeRecursive({},\n                this.constructor.defaultCrossInteractionPolicy()), policy[0] || {});\n            const context = this.context;\n            this.context.once('canvas.updated').then(() => {\n                applyInteractionPolicy([this._interactionPolicy], this);\n                const crossInteractionPolicy = this._crossInteractionPolicy;\n                const behaviours = crossInteractionPolicy.behaviours;\n                const sideEffects = crossInteractionPolicy.sideEffects;\n                const visualGroup = context.composition().visualGroup;\n                const valueMatrix = visualGroup.composition().matrices.value;\n                valueMatrix.each((cell) => {\n                    const unitFireBolt = cell.valueOf().firebolt();\n                    for (const key in behaviours) {\n                        unitFireBolt.changeBehaviourStateOnPropagation(key, behaviours[key]);\n                    }\n                    for (const key in sideEffects) {\n                        unitFireBolt.changeSideEffectStateOnPropagation(key, sideEffects[key]);\n                    }\n                });\n            });\n            return this;\n        }\n        return this._crossInteractionPolicy;\n    }\n\n    /**\n     * Dispatches a behavioural action with a payload. It takes the name of the behavioural action and a payload\n     * object which contains the criteria aend an array of side effects which determines what side effects are\n     * going to be shown in each visual unit of the canvas. It prepares the datamodel from the given criteria\n     * and initiates a propagation from the datamodel of canvas. Then all the visual units of canvas which listens\n     * to the propagation gets informed on which rows got selected and dispatches the behavioural action sent during\n     * propagation.\n     *\n     * To dispatch a behavioural action on the canvas\n     * ```\n     *  // Get the firebolt instance of the canvas\n     *  const firebolt = canvas.firebolt();\n     *  // Dispatch a brush behaviour\n     *  firebolt.dispatchBehaviour('brush', {\n     *      // Selects all the rows with Horsepower having range between 100 and 200.\n     *      criteria: {\n     *          Horsepower: [100, 200]\n     *      }\n     *  });\n     * // On dispatch of this behavioural action, a selection box gets created and plots gets faded out which are the\n     * // default side effects mapped to this behavioural action.\n     * ```\n     *\n     * ```\n     * Additionally, it can also be passed an array of side effects in the payload.\n     *  // Dispatch a select behaviour with only crossline as side effect.\n     *  firebolt.dispatchBehaviour('select', {\n     *      criteria: {\n     *          Cylinders: ['8']\n     *      },\n     *      sideEffects: ['crossline']\n     *  });\n     * ```\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of the behavioural action\n     * @param {Object} payload Object which contains the interaction information.\n     * @param {Object | Array.<Array>} payload.criteria Identifiers by which the selection happens.\n     * @param {Array.<string|Object>} payload.sideEffects Side effects which needs to be shown.\n     *\n     * @return {GroupFireBolt} Instance of firebolt.\n     */\n    dispatchBehaviour (behaviour, payload) {\n        const propPayload = Object.assign(payload);\n        const criteria = propPayload.criteria;\n        const data = this.context.data();\n\n        propPayload.action = behaviour;\n        const model = getDataModelFromIdentifiers(data, criteria);\n        data.propagate(model, propPayload, {\n            sourceId: this.context.alias()\n        });\n        return this;\n    }\n\n}\n","import GroupFireBolt from './group-firebolt';\n\nexport default GroupFireBolt;\n","export const APP_INITIAL_STATE = {\n    app: {\n        group: {},\n        units: {},\n        layers: {},\n        canvas: {}\n    },\n    local: {\n        canvas: {},\n        group: {},\n        units: {},\n        layers: {}\n    }\n};\n\n","import { GridLayout } from '@chartshq/layout';\nimport { transactor, Store, getUniqueId, selectElement, STATE_NAMESPACES } from 'muze-utils';\nimport { RETINAL } from '../constants';\nimport TransactionSupport from '../transaction-support';\nimport { getRenderDetails, prepareLayout, renderLayout } from './layout-maker';\nimport { localOptions, canvasOptions } from './local-options';\nimport GroupFireBolt from './firebolt';\nimport options from '../options';\nimport { APP_INITIAL_STATE } from './app-state';\nimport { initCanvas,\n        setupChangeListener,\n        setLabelRotationForAxes,\n        createGroupState,\n        createLayoutManager,\n        setLayoutInfForUnits } from './helper';\n/**\n * Canvas is a logical component which houses a visualization by taking multiple variable in different encoding channel.\n * Canvas manages lifecycle of many other logical component and exposes one consistent interface for creation of chart.\n * Canvas is intialized from environment with settings from environment and singleton dependencies.\n *\n * To create an instance of canvas\n * ```\n *  const env = Muze();\n *  const canvas = env.canvas()\n * ```\n *\n *\n * @class\n * @public\n * @module Canvas\n */\nexport default class Canvas extends TransactionSupport {\n\n    /**\n     * Creates reactive property accessors.\n     * - data\n     * - height\n     * - width\n     * - config\n     * This configs are retrieved from options.\n     */\n    constructor (globalDependencies) {\n        super();\n\n        this._allOptions = Object.assign({}, options, localOptions);\n        this._registry = {};\n        this._composition = {};\n        this._cachedProps = {};\n        this._alias = null;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        this._composition.layout = new GridLayout();\n        this._store = new Store(APP_INITIAL_STATE);\n\n        // Setters and getters will be mounted on this. The object will be mutated.\n        const namespace = STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE;\n        const [, store] = transactor(this, options, this._store.model, {\n            namespace\n        });\n        transactor(this, localOptions, store, {\n            namespace\n        });\n        transactor(this, canvasOptions, store, {\n            namespace\n        });\n        this.dependencies(Object.assign({}, globalDependencies, this._dependencies));\n        this.firebolt(new GroupFireBolt(this));\n        this.alias(`canvas-${getUniqueId()}`);\n        this.title('', {});\n        this.subtitle('', {});\n        this.legend({});\n        this.color({});\n        this.shape({});\n        this.size({});\n        setupChangeListener(this);\n         // init layoutManager\n        this._layoutManager = createLayoutManager();\n    }\n\n    /**\n     * Retrieves an instance of layout which is responsible for layouting. Layout is responsible for creating faceted\n     * presentation using table layout.\n     *\n     * @public\n     *\n     * @return {GridLayout} Instance of layout attached to canvas.\n     */\n    layout (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().layout;\n    }\n\n    /**\n     * Retrieves the composition for a canvas\n     *\n     * @public\n     *\n     * @return {object} Instances of the components which canvas requires to draw the full visualization.\n     *      ```\n     *          {\n     *              layout: // Instance of {@link GridLayout}\n     *              legend: // Instance of {@link Legend}\n     *              subtitle: // Instance of {@link TextCell} using which the title is rendered\n     *              title: // Instance of {@link TextCell} using which the title is rendered\n     *              visualGroup: // Instance of {@link visualGroup}\n     *          }\n     *      ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Sets or gets the alias of the canvas. Alias is a name by which the canvas can be referred.\n     *\n     * When setter\n     * @param {string} alias Name of the alias.\n     *\n     * @return {Canvas} Instance of the canvas.\n     *\n     * When getter\n     *\n     * @return {string} Alias of canvas.\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            const visualGroup = this.composition().visualGroup;\n            this._alias = params[0];\n            visualGroup && visualGroup.alias(this.alias());\n            return this;\n        }\n        return this._alias;\n    }\n\n    /**\n     * Creates an instance initiated with given settings.\n     *\n     * @param {Object} initialSettings Initial settings to be populated in the model\n     * @param {Object} regEntry newly created instance with the initial settings\n     * @param {Object} globalDependencies dependencies which will be created only once in the page\n     *\n     * @return {Object} newly created instance with the initial settings\n     */\n    static withSettings (initialSettings, regEntry, globalDependencies) {\n        const instance = new Canvas(globalDependencies);\n\n        for (const key in initialSettings) {\n            instance[key](initialSettings[key]);\n        }\n        // set registry for instance\n        instance.registry(regEntry);\n        return instance;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof Canvas\n     */\n    static formalName () {\n        return 'canvas';\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this canvas. The firebolt instance can be used to dispatch a\n     * behaviour dynamically on the canvas. This firebolt does not handle any physical actions. It is just used to\n     * propagate the action to all the visual units in it's composition.\n     *\n     * @public\n     *\n     * @return {GroupFireBolt} Instance of firebolt associated with canvas.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Registry peoperty accessor\n     *\n     * @param {Object} reg plain old javascript object keyvalue pairs. Key containing module name and value contains\n     * module definition class. The reg object has to be flat object of level 1.\n     */\n    registry (...params) {\n        if (params.length) {\n            const components = Object.assign({}, params[0].components);\n            const componentSubRegistry = Object.assign({}, params[0].componentSubRegistry);\n\n            this._registry = { components, componentSubRegistry };\n            const initedComponents = initCanvas(this);\n            // @todo is it okay to continue this tight behaviour? If not use a resolver to resolve diff component type.\n            this._composition.visualGroup = initedComponents[0];\n            createGroupState(this);\n            this.composition().visualGroup.alias(this.alias()).store(this._store);\n            return this;\n        }\n        return this._registry;\n    }\n\n    /*\n     * Prepare dependencies for top level elements\n     */\n    dependencies (...param) {\n        if (param.length) {\n            this._dependencies = param[0];\n            return this;\n        }\n        // @todo prepare dependencies here.\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     * @param {*} lifeCycles\n     *\n     * @memberof Canvas\n     */\n    lifeCycle (lifeCycles) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        if (lifeCycles) {\n            lifeCycleManager.register(lifeCycles);\n            return this;\n        }\n        return lifeCycleManager;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    legend (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().legend;\n    }\n\n    /**\n     * Returns a promise for various {@link LifecycleEvents} of the various components of canvas. The promise gets\n     * resolved once the particular event gets completed.\n     *\n     * To use this,\n     * ```\n     *      canvas.once('layer.drawn').then(() => {\n     *          // Do any post drawing work here.\n     *      });\n     * ```\n     * @public\n     *\n     * @param {string} eventName Name of the lifecycle event.\n     *\n     * @return {Promise} A pending promise waiting for resolve to be called.\n     */\n    once (eventName) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        return lifeCycleManager.retrieve(eventName);\n    }\n\n    /**\n     * Internal function to trigger render, this method is cognizant of all the properties of the core modules and\n     * establish a passive reactivity. Passive reactivity is not always a bad thing :)\n     * @internal\n     */\n    render () {\n        const visGroup = this.composition().visualGroup;\n        const mount = this.mount();\n        // removeChild(mount);\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        // Get render details including arrangement and measurement\n        const renderDetails = getRenderDetails(this, mount);\n        const promises = [];\n\n        lifeCycleManager.notify({ client: this, action: 'beforedraw' });\n        // Prepare the layout by triggering the matrix calculation\n        prepareLayout(this.layout(), renderDetails);\n\n        this._layoutManager.dimension({\n            height: renderDetails.measurement.canvasHeight,\n            width: renderDetails.measurement.canvasWidth\n        });\n\n        this._layoutManager.renderAt(mount);\n\n        // Render each component\n        renderLayout(this._layoutManager, this.layout(), renderDetails);\n\n        setLayoutInfForUnits(this);\n\n        // setLabelRotation\n        setLabelRotationForAxes(this);\n\n        const centerMatrix = visGroup.matrixInstance().value;\n\n        centerMatrix.each((cell) => {\n            promises.push(cell.valueOf().done());\n        });\n\n        Promise.all(promises).then(() => {\n            // Update life cycle\n            lifeCycleManager.notify({ client: this, action: 'drawn' });\n            const animDonePromises = [];\n\n            [this.xAxes(), this.yAxes()].forEach((axisArr) => {\n                axisArr = axisArr || [];\n                axisArr.forEach((axes) => {\n                    axes.forEach((unitAxis) => {\n                        animDonePromises.push(unitAxis.animationDone());\n                    });\n                });\n            });\n\n            Promise.all(animDonePromises).then(() => {\n                lifeCycleManager.notify({ client: this, action: 'animationend' });\n            });\n        });\n    }\n\n    /**\n     * Returns the instances of x axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the top axis and the second element represents the bottom\n     *   // axis.\n     *   [\n     *      [X1, X2],\n     *      [X3, X4]\n     *   ]\n     * ```\n     * @public\n     *\n     * @return {Array.<Array>} Instances of x axis.\n     */\n    xAxes () {\n        return this.composition().visualGroup.getAxes('x');\n    }\n\n    /**\n     * Returns the instances of y axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the left axis and the second element represents the right\n     *   // axis.\n     *   [\n     *      [Y1, Y2],\n     *      [Y3, Y4]\n     *   ]\n     * ```\n     * @public\n     * @return {Array.<Array>} Instances of y axis.\n     */\n    yAxes () {\n        return this.composition().visualGroup.getAxes('y');\n    }\n\n    /**\n     * Returns all the retinal axis of the canvas. Color, shape and size axis are combinedly called retinal axis.\n     *\n     * @public\n     * @return {Object} Instances of retinal axis.\n     *          ```\n     *              {\n     *                  color: [ColorAxis], // Array of color axis.\n     *                  shape: [ShapeAxis], // Array of shape axis.\n     *                  size: [SizeAxis] // Array of size axis.\n     *              }\n     *          ```\n     */\n    getRetinalAxes () {\n        const visualGroup = this.composition().visualGroup;\n        return visualGroup.getAxes(RETINAL);\n    }\n\n    mount (...params) {\n        if (params.length) {\n            let value = params[0];\n            if (typeof params[0] === 'string') {\n                value = selectElement(params[0]).node();\n            }\n            this._mount = value;\n            return this;\n        }\n        return this._mount;\n    }\n}\n","import { cellRegistry, SimpleCell } from '@chartshq/visual-cell';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { layerRegistry } from '@chartshq/visual-layer';\nimport { SimpleGroup, VisualGroup } from '@chartshq/visual-group';\n\nexport const COMPONENTS = {\n    VisualGroup,\n    VisualUnit\n};\nexport const SUBREGISTRIES = {\n    cellRegistry,\n    layerRegistry\n};\nexport const INTERFACES = {\n    SimpleGroup,\n    SimpleCell\n};\n\n","import { DEFAULT_LAYERS } from './defaults';\n\nexport default () => {\n    const reg = DEFAULT_LAYERS;\n    const regObj = {\n        set: (key, def) => {\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n    return regObj;\n};\n","import {\n    transactor,\n    Smartlabel,\n    enableChainedTransaction,\n    LifeCycleManager,\n    DataModel,\n    makeElement,\n    getClientPoint,\n    selectElement,\n    getEvent,\n    require,\n    DateTimeFormatter\n} from 'muze-utils';\n\nimport {\n    SurrogateSideEffect,\n    SpawnableSideEffect,\n    sideEffects,\n    PersistentBehaviour,\n    GenericBehaviour,\n    VolatileBehaviour,\n    behaviouralActions,\n    GenericSideEffect\n} from '@chartshq/muze-firebolt';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport pkg from '../package.json';\nimport * as operators from './operators';\nimport { actionModel as ActionModel } from './action-model';\nimport options from './options';\nimport { Canvas } from './canvas';\nimport { COMPONENTS, SUBREGISTRIES } from './default-registry';\nimport './muze.scss';\n\n// Cache singleton instances which should be included only once in a page\nconst globalCache = {};\nconst defaultRegistry = COMPONENTS;\n\nconst overrideRegistryDefinitions = (overrideRegistry, registry) => {\n    for (const prop in overrideRegistry) {\n        registry.set(prop, overrideRegistry[prop]);\n    }\n};\n\n/**\n * Entry point to renderer. Initializes an environment with settings and registries for canvas. This is a simple wrapper\n * over {@link Canvas} which enables common configuration passing to multiple such canvases.\n *\n * Everytime `muze()` is called it creates an environment. These environment supports subset of APIs of Canvas. If\n * common configuration is used to render multiple canvases then it can be set directly in the env. Like if data is\n * common across all the visulization then its better to set the data in env. When a canvas is created it receives all\n * those configuration from env.\n *\n * ```\n *  // Creates an environment\n *  const env = muze()\n *  // Set data property in environment, so that all the canvas created from the same environment gets this data\n *  // automatically\n *  env.data(dm);\n *  // Creates canvas, by default env pushes data to canvas instance\n *  const canvas = env.canvas();\n * ```\n *\n * If a property is set on both environment and canvas instance, property set on canvas instance gets more priority.\n *\n * @public\n * @module muze\n * @namespace Muze\n *\n * @return {Env} Instance of an environment\n */\nconst muze = () => {\n    // Setters and getters will be mounted on this. Object will be mutated.\n    const [env, globalStore] = transactor({}, options);\n    const components = Object.assign({}, COMPONENTS);\n    const componentSubRegistryDef = Object.assign(SUBREGISTRIES);\n    const componentSubRegistry = {};\n\n    for (const prop in componentSubRegistryDef) {\n        componentSubRegistry[prop] = componentSubRegistryDef[prop]();\n    }\n\n    // Apart form the setter getter, an instance method is injected to create real renderer instances\n    env.canvas = () => {\n        // Create a canvas instance with this settings\n        const settings = globalStore.serialize();\n        const canvas = Canvas.withSettings(settings, { /* registry */\n            components,\n            componentSubRegistry\n        }, env.globalDependencies());\n\n        // Whenever settings is changed canvas is updated\n        enableChainedTransaction(globalStore, canvas, Object.keys(settings));\n\n        return canvas;\n    };\n\n    // Global dependencies for for compositions. Only one copy of the same should be in the page\n    env.globalDependencies = () => {\n        if (!globalCache.smartlabel) {\n            globalCache.smartlabel = new Smartlabel(1, 'body');\n        }\n        return {\n            smartlabel: globalCache.smartlabel,\n            lifeCycleManager: new LifeCycleManager()\n        };\n    };\n\n    // Retrieves global settings. This getter is readonly so that user can't change this as change should happen\n    // only from setter to avoid unwanted sync issues.\n    env.settings = () => globalStore.serialize();\n\n    env.registry = (...overrideRegistry) => {\n        // Selectively copy the properties from COMPONENTS\n        if (overrideRegistry.length) {\n            for (const prop in overrideRegistry) {\n                if (prop in defaultRegistry) {\n                    components[prop] = overrideRegistry[prop];\n                }\n            }\n            return env;\n        }\n        return components;\n    };\n\n    env.cellRegistry = (...overrideRegistry) => {\n        const cellRegistry = componentSubRegistry.cellRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], cellRegistry);\n            return env;\n        }\n        return cellRegistry.get();\n    };\n\n    env.layerRegistry = (...overrideRegistry) => {\n        const layerRegistry = componentSubRegistry.layerRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], layerRegistry);\n            return env;\n        }\n        return layerRegistry.get();\n    };\n\n    return env;\n};\n\nconst SideEffects = {\n    sideEffects,\n    standards: {\n        SurrogateSideEffect,\n        SpawnableSideEffect,\n        GenericSideEffect\n    }\n};\n\nconst Behaviours = {\n    behaviouralActions,\n    standards: {\n        GenericBehaviour,\n        PersistentBehaviour,\n        VolatileBehaviour\n    }\n};\n\nmuze.DataModel = DataModel;\nmuze.version = pkg.version;\nmuze.SideEffects = SideEffects;\nmuze.ActionModel = ActionModel;\nmuze.layerFactory = layerFactory;\nmuze.Operators = operators;\nmuze.Behaviours = Behaviours;\nmuze.utils = {\n    getClientPoint,\n    getEvent,\n    makeElement,\n    selectElement,\n    DateTimeFormatter,\n    require\n};\n\nexport default muze;\n"],"sourceRoot":""}