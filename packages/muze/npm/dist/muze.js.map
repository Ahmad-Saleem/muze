{"version":3,"sources":["webpack://muze/webpack/universalModuleDefinition","webpack://muze/webpack/bootstrap","webpack://muze/webpack://DataModel/webpack/universalModuleDefinition","webpack://muze/webpack://DataModel/webpack/bootstrap","webpack://muze/webpack://DataModel/src/index.js","webpack://muze/webpack://DataModel/src/enums/data-format.js","webpack://muze/webpack://DataModel/src/enums/dimension-subtype.js","webpack://muze/webpack://DataModel/src/enums/measure-subtype.js","webpack://muze/webpack://DataModel/src/enums/field-type.js","webpack://muze/webpack://DataModel/src/enums/filtering-mode.js","webpack://muze/webpack://DataModel/src/utils/date-time-formatter.js","webpack://muze/webpack://DataModel/src/utils/column-major.js","webpack://muze/webpack://DataModel/src/utils/extend2.js","webpack://muze/webpack://DataModel/src/utils/helper.js","webpack://muze/webpack://DataModel/src/field-store.js","webpack://muze/webpack://DataModel/src/value.js","webpack://muze/webpack://DataModel/src/operator/row-diffset-iterator.js","webpack://muze/webpack://DataModel/src/operator/get-common-schema.js","webpack://muze/webpack://DataModel/src/constants/index.js","webpack://muze/webpack://DataModel/src/operator/cross-product.js","webpack://muze/webpack://DataModel/src/operator/merge-sort.js","webpack://muze/webpack://DataModel/src/operator/data-builder.js","webpack://muze/webpack://DataModel/src/operator/difference.js","webpack://muze/webpack://DataModel/src/operator/group-by-function.js","webpack://muze/webpack://DataModel/src/utils/reducer-store.js","webpack://muze/webpack://DataModel/src/operator/natural-join-filter-function.js","webpack://muze/webpack://DataModel/src/operator/union.js","webpack://muze/webpack://DataModel/src/operator/outer-join.js","webpack://muze/webpack://DataModel/src/fields/field/index.js","webpack://muze/webpack://DataModel/src/fields/dimension/index.js","webpack://muze/webpack://DataModel/src/fields/categorical/index.js","webpack://muze/webpack://DataModel/src/fields/temporal/index.js","webpack://muze/webpack://DataModel/src/fields/binned/index.js","webpack://muze/webpack://DataModel/src/fields/measure/index.js","webpack://muze/webpack://DataModel/src/fields/continuous/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/field-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/categorical-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/temporal-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/binned-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/continuous-parser/index.js","webpack://muze/webpack://DataModel/src/fields/partial-field/index.js","webpack://muze/webpack://DataModel/src/field-creator.js","webpack://muze/webpack://DataModel/src/default-config.js","webpack://muze/webpack://DataModel/src/converter/dsv-arr.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/dsv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/csv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/tsv.js","webpack://muze/webpack://DataModel/src/converter/dsv-str.js","webpack://muze/webpack://DataModel/src/converter/flat-json.js","webpack://muze/webpack://DataModel/src/converter/auto-resolver.js","webpack://muze/webpack://DataModel/src/helper.js","webpack://muze/webpack://DataModel/src/relation.js","webpack://muze/webpack://DataModel/src/datamodel.js","webpack://muze/webpack://DataModel/src/operator/group-by.js","webpack://muze/webpack://DataModel/src/operator/bucket-creator.js","webpack://muze/webpack://DataModel/src/stats/index.js","webpack://muze/webpack://DataModel/src/export.js","webpack://muze/webpack://DataModel/src/operator/compose.js","webpack://muze/webpack://DataModel/src/operator/pure-operators.js","webpack://muze/webpack://DataModel/src/operator/natural-join.js","webpack://muze/webpack://hyperdis/webpack/universalModuleDefinition","webpack://muze/webpack://hyperdis/webpack/bootstrap","webpack://muze/webpack://hyperdis/src/electric-node.js","webpack://muze/webpack://hyperdis/src/graph-node.js","webpack://muze/webpack://hyperdis/src/graph.js","webpack://muze/webpack://hyperdis/src/index.js","webpack://muze/webpack://hyperdis/src/model.js","webpack://muze/webpack://hyperdis/src/utils/index.js","webpack://muze/webpack://hyperdis/src/utils/set.js","webpack://muze/(webpack)/buildin/module.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/SmartlabelManager.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/lib.js","webpack://muze/./packages/muze/src/index.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/container-manager.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisector.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisect.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/range.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ticks.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/threshold/sturges.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/map.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/nest.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/set.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/ordinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/band.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/define.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/lab.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/rgb.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/object.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/string.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/value.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/parse.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/date.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/round.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/decompose.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/zoom.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hsl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hcl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/piecewise.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/continuous.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatDecimal.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/exponent.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatSpecifier.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTrim.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatPrefixAuto.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatRounded.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTypes.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatGroup.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatNumerals.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionFixed.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/tickFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionPrefix.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionRound.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/nice.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/log.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/pow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/threshold.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/interval.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/millisecond.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/second.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/minute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/hour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/day.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/week.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/month.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/year.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMinute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcHour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcDay.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcWeek.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMonth.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcYear.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoParse.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/time.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20b.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20c.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/viridis.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/sequential.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/ramp.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://muze/./packages/muze-utils/src/enums/namespace.js","webpack://muze/./packages/muze-utils/src/enums/reserved-fields.js","webpack://muze/./packages/muze-utils/src/enums/common-props.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/axis.js","webpack://muze/./packages/muze-utils/node_modules/d3-path/src/path.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/arc.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/line.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/area.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/radial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/lineRadial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/diamond.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/star.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/square.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/triangle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/wye.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/noop.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/bundle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRom.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linearClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/monotone.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/natural.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/step.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/stack.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/cubic.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/poly.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/sin.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/bounce.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/back.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/elastic.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/RedBlackTree.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Edge.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Cell.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Beach.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Diagram.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/voronoi.js","webpack://muze/./packages/muze-utils/src/DataSystem/selection.js","webpack://muze/./packages/muze-utils/src/common-utils.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/circle.js","webpack://muze/./packages/muze-utils/src/DataSystem/dataSelect.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol.js","webpack://muze/./packages/muze-utils/src/enums/stack-config.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/diverging.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/expand.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/wiggle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/pie.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespaces.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespace.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/creator.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selector.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selectorAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/matcher.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sparse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/enter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/data.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sort.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/window.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/classed.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/html.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/raise.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/lower.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/insert.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/clone.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/exit.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/order.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/call.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/nodes.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/node.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/size.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/empty.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/each.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/property.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/append.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/datum.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/local.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/sourceEvent.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/mouse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/touch.js","webpack://muze/./packages/muze-utils/node_modules/d3-dispatch/src/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/noevent.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/nodrag.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/event.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/drag.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timer.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timeout.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/schedule.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/tween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/interpolate.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selection.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attrTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/styleTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/delay.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/ease.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/interrupt.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/interrupt.js","webpack://muze/./packages/muze-utils/src/renderer-utils.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/event-list.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/lifecycle-manager.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/index.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/helper.js","webpack://muze/./packages/muze-firebolt/src/enums/actions.js","webpack://muze/./packages/muze-firebolt/src/enums/selection.js","webpack://muze/./packages/muze-firebolt/src/selection-set/index.js","webpack://muze/./packages/muze-firebolt/src/selection-set/selection-set.js","webpack://muze/./packages/muze-firebolt/src/helper/index.js","webpack://muze/./packages/muze-firebolt/src/firebolt.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/generic.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/volatile.js","webpack://muze/./packages/muze-firebolt/src/enums/behaviours.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/highlight.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/brush.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/filter.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/persistent.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/select.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-action-config.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-event.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/hover.js","webpack://muze/./packages/muze-firebolt/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/click.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/drag.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/longtouch.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/touch-drag.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/generic-sideeffect.js","webpack://muze/./packages/muze-firebolt/src/side-effects/surrogate.js","webpack://muze/./packages/muze-firebolt/src/side-effects/spawnable.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/helper.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/selection-box-drag.js","webpack://muze/./packages/muze-tooltip/src/constants.js","webpack://muze/./packages/muze-tooltip/src/default-config.js","webpack://muze/./packages/muze-tooltip/src/helper.js","webpack://muze/./packages/muze-tooltip/src/strategy.js","webpack://muze/./packages/muze-tooltip/src/content.js","webpack://muze/./packages/muze-tooltip/src/tooltip.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/helper/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/crossline/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/strategy.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/filter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/anchors/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/persistent-anchors.js","webpack://muze/./packages/muze-firebolt/src/side-effects/brush-anchors.js","webpack://muze/./packages/muze-firebolt/src/behaviour-effect-map.js","webpack://muze/./packages/visual-layer/src/enums/constants.js","webpack://muze/./packages/visual-layer/src/layers/area/default-config.js","webpack://muze/./packages/visual-layer/src/simple-layer/simple-layer.js","webpack://muze/./packages/visual-layer/src/base-layer/props.js","webpack://muze/./packages/muze-axis/src/enums/axis-orientation.js","webpack://muze/./packages/muze-axis/src/enums/scale-type.js","webpack://muze/./packages/muze-axis/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/scale-creator.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/default-config.js","webpack://muze/./packages/muze-axis/src/axis-renderer.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/space-setter.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/helper.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/props.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/simple-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/linear.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/log.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/pow.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/continous-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/band-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/time-axis.js","webpack://muze/./packages/muze-axis/src/color-axis/color-maps.js","webpack://muze/./packages/muze-axis/src/color-axis/defaults.js","webpack://muze/./packages/muze-axis/src/color-axis/props.js","webpack://muze/./packages/muze-axis/src/color-axis/color-strategy.js","webpack://muze/./packages/muze-axis/src/color-axis/color-axis.js","webpack://muze/./packages/muze-axis/src/size-axis/defaults.js","webpack://muze/./packages/muze-axis/src/size-axis/size-strategy.js","webpack://muze/./packages/muze-axis/src/size-axis/props.js","webpack://muze/./packages/muze-axis/src/size-axis/size-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/defaults.js","webpack://muze/./packages/muze-axis/src/shape-axis/props.js","webpack://muze/./packages/muze-axis/src/shape-axis/shape-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/helper.js","webpack://muze/./packages/muze-axis/src/data-type-scale-map.js","webpack://muze/./packages/transform/src/group-transform/index.js","webpack://muze/./packages/transform/src/identity-transform/index.js","webpack://muze/./packages/transform/src/transform-factory/index.js","webpack://muze/./packages/transform/src/enums/transform-type.js","webpack://muze/./packages/transform/src/stack-transform/index.js","webpack://muze/./packages/visual-layer/src/helpers/index.js","webpack://muze/./packages/visual-layer/src/base-layer/listener-map.js","webpack://muze/./packages/visual-layer/src/enums/props.js","webpack://muze/./packages/visual-layer/src/base-layer/default-options.js","webpack://muze/./packages/visual-layer/src/base-layer/base-layer.js","webpack://muze/./packages/visual-layer/src/layers/line/renderer.js","webpack://muze/./packages/visual-layer/src/layers/line/default-config.js","webpack://muze/./packages/visual-layer/src/layers/line/line.js","webpack://muze/./packages/visual-layer/src/layers/area/renderer.js","webpack://muze/./packages/visual-layer/src/layers/area/area.js","webpack://muze/./packages/visual-layer/src/layers/arc/default-config.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-helper.js","webpack://muze/./packages/visual-layer/src/layers/text/renderer.js","webpack://muze/./packages/visual-layer/src/layers/text/default-config.js","webpack://muze/./packages/visual-layer/src/layers/text/text.js","webpack://muze/./packages/visual-layer/src/layers/point/renderer.js","webpack://muze/./packages/visual-layer/src/layers/point/default-config.js","webpack://muze/./packages/visual-layer/src/layers/point/point.js","webpack://muze/./packages/visual-layer/src/layers/bar/renderer.js","webpack://muze/./packages/visual-layer/src/layers/bar/default-config.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-helper.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar.js","webpack://muze/./packages/visual-layer/src/layers/tick/default-config.js","webpack://muze/./packages/visual-layer/src/layers/tick/renderer.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick.js","webpack://muze/./packages/visual-layer/src/layer-factory/layer-factory.js","webpack://muze/./packages/visual-layer/src/layer-factory/index.js","webpack://muze/./packages/visual-layer/src/defaults.js","webpack://muze/./packages/visual-group/src/enums/constants.js","webpack://muze/./packages/visual-group/src/visual-group/local-options.js","webpack://muze/./packages/visual-group/src/simple-group/simple-group.js","webpack://muze/./packages/visual-group/src/variable/variable.js","webpack://muze/./packages/visual-group/src/variable/composed-vars.js","webpack://muze/./packages/visual-group/src/variable/simple-var.js","webpack://muze/./packages/visual-group/src/encoder/field-sanitizer.js","webpack://muze/./packages/visual-group/src/encoder/visual-encoder.js","webpack://muze/./packages/visual-group/src/enums/scale-maps.js","webpack://muze/./packages/visual-group/src/data-type-scale-map.js","webpack://muze/./packages/visual-group/src/encoder/encoder-helper.js","webpack://muze/./packages/visual-group/src/encoder/cartesian-encoder.js","webpack://muze/./packages/visual-group/src/encoder/polar-encoder.js","webpack://muze/./packages/visual-group/src/encoder/retinal-encoder.js","webpack://muze/./packages/visual-group/src/group-helper/group-utils.js","webpack://muze/./packages/visual-unit/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/visual-unit/src/helper/index.js","webpack://muze/./packages/visual-unit/src/helper/grid-lines.js","webpack://muze/./packages/visual-unit/src/default-config.js","webpack://muze/./packages/visual-unit/src/enums/constants.js","webpack://muze/./packages/visual-unit/src/local-options.js","webpack://muze/./packages/visual-unit/src/enums/reactive-props.js","webpack://muze/./packages/visual-unit/src/listener-map.js","webpack://muze/./packages/visual-unit/src/props.js","webpack://muze/./packages/visual-unit/src/firebolt/helper.js","webpack://muze/./packages/visual-unit/src/firebolt/payload-generator.js","webpack://muze/./packages/visual-unit/src/firebolt/data-propagator.js","webpack://muze/./packages/visual-unit/src/firebolt/index.js","webpack://muze/./packages/visual-unit/src/visual-unit.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-model.js","webpack://muze/./packages/visual-group/src/group-helper/cell-creator.js","webpack://muze/./packages/visual-group/src/group-helper/resolver-props.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-resolver.js","webpack://muze/./packages/visual-group/src/visual-group/value-matrix.js","webpack://muze/./packages/visual-group/src/visual-group/helper.js","webpack://muze/./packages/visual-group/src/visual-group/change-listener.js","webpack://muze/./packages/visual-group/src/visual-group/props.js","webpack://muze/./packages/visual-group/src/visual-group/visual-group.js","webpack://muze/./packages/muze-legend/src/firebolt/behavioural/select.js","webpack://muze/./packages/muze-legend/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/muze-legend/src/firebolt/behaviour-effect-map.js","webpack://muze/./packages/muze-legend/src/enums/behaviours.js","webpack://muze/./packages/muze-legend/src/enums/side-effects.js","webpack://muze/./packages/muze-legend/src/enums/constants.js","webpack://muze/./packages/muze-legend/src/firebolt/helper.js","webpack://muze/./packages/muze-legend/src/firebolt/legend-firebolt.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/drag.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/hover.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/click.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/index.js","webpack://muze/./packages/muze-legend/src/enums/actions.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/selection-box-drag.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/selection-box/index.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/strategies.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/index.js","webpack://muze/./packages/muze-legend/src/legend/props.js","webpack://muze/./packages/muze-legend/src/legend/defaults.js","webpack://muze/./packages/muze-legend/src/legend/legend-helper.js","webpack://muze/./packages/muze-legend/src/legend/simple-legend.js","webpack://muze/./packages/muze-legend/src/legend/position-config.js","webpack://muze/./packages/muze-legend/src/legend/renderer.js","webpack://muze/./packages/muze-legend/src/legend/discrete-legend.js","webpack://muze/./packages/muze-legend/src/legend/gradient-helper.js","webpack://muze/./packages/muze-legend/src/legend/gradient-legend.js","webpack://muze/./packages/muze-legend/src/legend/step-legend.js","webpack://muze/./packages/muze/src/constants.js","webpack://muze/./packages/muze/src/operators.js","webpack://muze/./packages/muze/src/action-model.js","webpack://muze/./packages/muze/src/defaults.js","webpack://muze/./packages/muze/src/options.js","webpack://muze/./packages/layout/src/enums/constants.js","webpack://muze/./packages/layout/src/generic-layout/index.js","webpack://muze/./packages/layout/src/grid-layout/defaults.js","webpack://muze/./packages/layout/src/grid-layout/span-maker.js","webpack://muze/./packages/layout/src/grid-layout/renderer.js","webpack://muze/./packages/layout/src/utils/index.js","webpack://muze/./packages/layout/src/visual-matrix/props.js","webpack://muze/./packages/layout/src/visual-matrix/default-config.js","webpack://muze/./packages/layout/src/visual-matrix/visual-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/row-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/column-matrix.js","webpack://muze/./packages/layout/src/grid-layout/computations.js","webpack://muze/./packages/layout/src/grid-layout/layout.js","webpack://muze/./packages/layout/src/grid-layout/layout-helper.js","webpack://muze/./packages/muze/src/transaction-support.js","webpack://muze/./packages/muze/src/canvas/component-resolver.js","webpack://muze/./packages/visual-cell/src/enums/constants.js","webpack://muze/./packages/visual-cell/src/enums/cell-type.js","webpack://muze/./packages/visual-cell/src/simple-cell.js","webpack://muze/./packages/visual-cell/src/enums/defaults.js","webpack://muze/./packages/visual-cell/src/props.js","webpack://muze/./packages/visual-cell/src/axis-cell.js","webpack://muze/./packages/visual-cell/src/blank-cell.js","webpack://muze/./packages/visual-cell/src/text-cell.js","webpack://muze/./packages/visual-cell/src/geom-cell.js","webpack://muze/./packages/visual-cell/src/defaults.js","webpack://muze/./packages/visual-cell/src/constants.js","webpack://muze/./packages/visual-cell/src/cell-registry.js","webpack://muze/./packages/muze/src/canvas/title-maker.js","webpack://muze/./packages/muze/src/canvas/legend-maker.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/layoutComponent.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/dummy-component.js","webpack://muze/./packages/layout/src/tree-layout/constants/defaults.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/definitionModel.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/helper/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/tree/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/layout-model/index.js","webpack://muze/./packages/layout/src/tree-layout/utils/index.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-point.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-parser.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/helper.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/html-data.js","webpack://muze/./packages/layout/src/tree-layout/renderers/renderer.js","webpack://muze/./packages/layout/src/tree-layout/renderers/html-renderer.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/layout-def.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/index.js","webpack://muze/./packages/muze/src/canvas/components/muze-chart-component.js","webpack://muze/./packages/muze/src/canvas/components/headerComponent.js","webpack://muze/./packages/muze/src/canvas/components/legendComponent.js","webpack://muze/./packages/muze/src/canvas/components/matrix-component.js","webpack://muze/./packages/muze/src/canvas/components/grid-component.js","webpack://muze/./packages/muze/src/canvas/defaults.js","webpack://muze/./packages/muze/src/canvas/layout-maker.js","webpack://muze/./packages/muze/src/canvas/local-options.js","webpack://muze/./packages/muze/src/canvas/helper.js","webpack://muze/./packages/muze/src/canvas/firebolt/group-firebolt.js","webpack://muze/./packages/muze/src/canvas/firebolt/index.js","webpack://muze/./packages/muze/src/canvas/app-state.js","webpack://muze/./packages/muze/src/canvas/canvas.js","webpack://muze/./packages/muze/src/default-registry.js","webpack://muze/./packages/visual-layer/src/layer-registry.js","webpack://muze/./packages/muze/src/muze.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","e","_typeof","a","default","description","homepage","version","license","main","author","keywords","repository","type","url","contributors","email","dependencies","d3-dsv","devDependencies","babel-cli","babel-core","babel-eslint","babel-loader","babel-plugin-transform-runtime","babel-preset-env","babel-preset-es2015","babel-preset-flow","chai","cross-env","eslint","eslint-config-airbnb","eslint-plugin-import","eslint-plugin-jsx-a11y","eslint-plugin-react","istanbul-instrumenter-loader","jsdoc","json2yaml","karma","karma-chai","karma-chrome-launcher","karma-coverage-istanbul-reporter","karma-mocha","karma-spec-reporter","karma-webpack","marked","mocha","mocha-webpack","transform-runtime","webpack","webpack-cli","webpack-dev-server","scripts","test","ut","utd","build","start","lint","lint-errors","docs","DataModel","data_format","FLAT_JSON","DSV_STR","DSV_ARR","AUTO","dimension_subtype","CATEGORICAL","TEMPORAL","GEO","BINNED","measure_subtype","CONTINUOUS","field_type","MEASURE","DIMENSION","filtering_mode","NORMAL","INVERSE","ALL","convertToNativeDate","date","Date","pad","DateTimeFormatter","format","this","dtParams","nativeDate","RegExp","escape","text","replace","TOKEN_PREFIX","DATETIME_PARAM_SEQUENCE","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","defaultNumberParser","defVal","val","parsedVal","isFinite","parseInt","defaultRangeParser","range","nVal","toLowerCase","length","getTokenDefinitions","daysDef","short","long","monthsDef","H","index","extract","parser","formatter","getHours","toString","hours","P","M","getMinutes","S","getSeconds","K","getMilliseconds","join","day","getDay","A","getDate","b","month","getMonth","B","y","substring","presentYear","Math","trunc","getFullYear","Number","year","Y","getTokenFormalNames","definitions","HOUR_12","AMPM_UPPERCASE","AMPM_LOWERCASE","SHORT_DAY","LONG_DAY","DAY_OF_MONTH","DAY_OF_MONTH_CONSTANT_WIDTH","SHORT_MONTH","LONG_MONTH","MONTH_OF_YEAR","SHORT_YEAR","LONG_YEAR","tokenResolver","defaultResolver","arg","targetParam","arguments","hourFormat24","hourFormat12","ampmLower","ampmUpper","amOrpm","isPM","findTokens","tokenPrefix","tokenLiterals","keys","occurrence","forwardChar","indexOf","push","token","formatAs","nDate","formattedStr","String","formattedVal","parse","dateTimeStamp","options","extractTokenValue","dtParamSeq","noBreak","dtParamArr","args","resolverKey","resolverParams","resolverFn","param","resolvedVal","splice","apply","tokenObj","lastOccurrenceIndex","occObj","occIndex","targetText","regexFormat","tokenArr","map","obj","occurrenceLength","extractValues","match","shift","getNativeDate","unshift","Function","h","store","fields","Array","forEach","fieldIndex","from","OBJECTSTRING","objectToStrFn","objectToStr","arrayToStr","checkCyclicRef","parentArr","bIndex","extend2","obj1","obj2","skipUndef","v","merge","tgtArr","srcArr","item","srcVal","tgtVal","str","cRef","isArray","isCallable","getUniqueId","getTime","round","random","isArrEqual","arr1","arr2","formatNumber","helper_detectDataFormat","data","field_store","createNamespace","fieldArr","dataId","fieldsObj","_cachedFieldsObj","field","getMeasure","measureFields","_cachedMeasure","schema","getDimension","dimensionFields","_cachedDimension","src_value","_classCallCheck","configurable","writable","_value","rowDiffsetIterator","rowDiffset","callback","split","diffStr","diffStsArr","end","getCommonSchema","fs1","fs2","retArr","fs1Arr","DM_DERIVATIVES","JOINS","CROSS","LEFTOUTER","RIGHTOUTER","NATURAL","FULLOUTER","defaultFilterFn","crossProduct","dm1","dm2","filterFn","replaceCommonSchema","jointype","applicableFilterFn","dm1FieldStore","getFieldspace","dm2FieldStore","dm1FieldStoreName","dm2FieldStoreName","commonSchemaList","Error","tmpSchema","_rowDiffset","rowAdded","rowPosition","ii","tuple","userArg","partialField","dm1Fields","prepareJoinData","dm2Fields","detachedRoot","tupleObj","cellVal","iii","len","datamodel","defSortFn","a1","b1","mergeSort","arr","sortFn","merge_sort_sort","lo","hi","mid","floor","mainArr","auxArr","getSortFn","dataType","sortType","retFunc","groupData","hashMap","Map","groupedData","datum","fieldVal","has","set","createSortingFnArg","groupedDatum","targetFields","targetFieldDetails","label","reduce","acc","next","idx","difference_difference","hashTable","schemaNameArr","dm1FieldStoreFieldObj","dm2FieldStoreFieldObj","_colIdentifier","sort","prepareDataHelper","dm","addData","hashData","schemaName","fieldName","sum","totalSum","curr","isNaN","avg","fnList","min","filteredValues","filter","num","max","first","last","count","std","sqrt","mean","pow","reducer_store_ReducerStore","TypeError","entries","_this","ae","reducer","_this2","__unregister","delete","reducer_store","ue","iterator","u","done","return","naturalJoinFilter","commonSchemaArr","retainTuple","union_union","src_export","leftOuterJoin","dataModel1","dataModel2","rightOuterJoin","fields_field","field_classCallCheck","subtype","displayName","ve","dimension","_cachedDomain","calculateDataDomain","categorical","hash","Set","domain","add","temporal","temporal_classCallCheck","_cachedMinDiff","sortedData","arrLn","minDiff","POSITIVE_INFINITY","prevDatum","nextDatum","processedCount","_this3","binned","binsArr","bins","measure","unit","defAggFn","numberFormat","continuous","NEGATIVE_INFINITY","field_parser","ke","categorical_parser","trim","temporal_parser","temporal_parser_classCallCheck","_dtf","binned_parser","matched","parseFloat","xe","continuous_parser","partial_field","partial_field_classCallCheck","_sanitize","createFields","dataColumn","headers","headersObj","header","He","dataFormat","Ve","assign","firstRowHeader","columns","column_major","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","JSON","stringify","ze","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","f","rows","N","I","eof","eol","j","slice","row","formatRow","formatValue","convert","columnSet","column","concat","formatRows","csv","src_dsv","tsv","$e","fieldSeparator","dsv","dsv_arr","Qe","insertionIndex","Ze","converters","FlatJSON","DSVStr","DSVArr","resp","helper_persistDerivation","model","operation","_model$_derivation","config","criteriaFn","derivative","op","meta","criteria","_derivation","helper_filterPropagationModel","propModels","filterByMeasure","fns","dataModel","dataObj","getData","fieldsConfig","getFieldsConfig","fieldsSpace","values","def","some","every","propField","valueOf","propModel","clone","select","fn","saveChild","helper_cloneWithSelect","sourceDm","selectFn","selectConfig","cloneConfig","cloned","helper_selectHelper","newRowDiffSet","lastInsertedValue","li","cachedStore","cloneProvider","selectorHelperFn","_iteratorNormalCompletion","checker","getPartialFieldspace","__calculateFieldspace","calculateFieldsConfig","helper_cloneWithProject","projField","allFields","projectionSet","actualProjField","helper_sanitizeUnitSchema","unitSchema","helper_updateData","relation","default_config","converterFn","converter_namespaceObject","et","formattedData","nameSpace","_partialFieldspace","_","_dataFormat","fieldInSchema","applyExistingOperationOnModel","_propModel$","child","derivation","params","groupByString","selectionModel","rejectionModel","_propModel$2","propagateIdentifiers","propModelInf","nonTraversingModel","excludeModels","handlePropagation","_children","propagateToAllDataModels","identifiers","rootModels","propagationInf","propagationNameSpace","propagateToSource","propagationSourceId","sourceId","propagateInterpolatedValues","criterias","persistent","actionCriterias","mutableActions","filteredCriteria","entry","action","sourceActionCriterias","actionInf","actionConf","applyOnSource","models","path","getPathToRootModel","_parent","_ref3","rootModel","propConfig","sourceIdentifiers","rootGroupByModel","groupByModel","inf","propagationModel","filteredModel","reverse","src_relation","relation_classCallCheck","source","Relation","_fieldStoreName","updateData","_propagationNameSpace","immutableActions","_fieldspace","helper_updateFields","partialFieldspace","fieldStoreName","colIdentifier","collID","partialFieldMap","newFields","coll","joinWith","unionWith","differenceWith","defConfig","oDm","retDataModel","getAllFields","jsonData","rowObj","constructor","fieldConfig","normalizedProjField","search","_fieldConfig","fieldDef","removeChild","findIndex","sibling","parent","criteriaQueue","ReferenceError","__proto__","getPrototypeOf","_onPropagation","_sortingDetails","setPrototypeOf","order","withUid","dataGenerated","dataBuilder","fieldStore","sortingDetails","retObj","uids","addUid","columnWise","reqSorting","tmpDataArr","colName","insertInd","sortMeta","fDetails","sortingFn","pop","tmpData","fieldNames","fmtFieldIdx","elem","fIdx","fmtFn","datumIdx","fieldsArr","reducers","newDataModel","group_by_groupBy","existingDataModel","sFieldArr","dimensions","reducerObj","pReducers","measures","defaultReducer","resolve","fieldStoreObj","dbName","dimensionArr","measureArr","rowCount","rawData","dataInCSVArr","sortedDm","colData","rowsCount","serializedData","rowIdx","colIdx","fieldinst","dependency","replaceVar","depVars","retrieveFn","depFieldIndices","fieldSpec","fs","suppliedFields","computedValues","fieldsData","yt","addField","addToNameSpace","isMutableAction","payload","getRootDataModel","getRootGroupByModel","find","sourceNamespace","filterImmutableAction","criteriaModel","eventName","measureFieldName","binFieldName","_createBinnedFieldDat","measureField","buckets","binsCount","binSize","R","dMin","dMax","ceil","abs","generateBuckets","bucketRanges","binnedData","findBucketRange","leftIdx","rightIdx","midIdx","binField","serialize","getSchema","stats_sum","stats_avg","stats_min","stats_max","stats_first","stats_last","stats_count","sd","Operators","compose","operations","currentDM","frstChild","derivations","addParent","dispose","bin","project","groupBy","calculateVariable","difference","naturalJoin","fullOuterJoin","union","Stats","stats_namespaceObject","enums_namespaceObject","DataFormat","FilteringMode","package_0","kt","gt","_typeof2","__WEBPACK_AMD_DEFINE_ARRAY__","undefined","__WEBPACK_AMD_DEFINE_RESULT__","__WEBPACK_AMD_DEFINE_FACTORY__","ElectricNode","edges","listeners","nextFrame","currentFrame","_edges","lstnrs","_utils__WEBPACK_IMPORTED_MODULE_0__","GraphNode","qualifiedName","outgoingEdges","_seed","requireResolve","retriever","history","resolver","electricEdges","_len","dep","_key","node","seed","_toConsumableArray","retrieveDetails","edge","head","hist","Graph","qualifiedNodeMap","_graph_node__WEBPACK_IMPORTED_MODULE_1__","accumulate","_wholeSet","_propagate","propagationOverride","currentFrameListeners","nextFrameListeners","_schedule","qname","flushTarget","flush","mount","resolveReqList","rec","objn","perv","_node","addDependencies","getDependencies","getResolvedList","getUpstreamNodes","prop","props","fnSpec","_ref","nodes","eNode","_electric_node__WEBPACK_IMPORTED_MODULE_2__","addEdges","changedSet","upstreamNodes","upstreamNode","__execUniqueElectricEdges","cfLstnrs","nfLstnrs","toArray","repeatHead","resetPropagationOverride","_this4","_len2","qnames","_key2","update","resolved","resolveDependencyOrder","__webpack_exports__","_model__WEBPACK_IMPORTED_MODULE_0__","Model","_graph","_graph__WEBPACK_IMPORTED_MODULE_0__","_lockFlag","_reqQ","mountPoint","_addPropInModel","_customResolver","calculationConfig","customResolver","varName","fetchFn","_utils__WEBPACK_IMPORTED_MODULE_1__","_defineProperty","createNodesFrom","instantCall","_graph$stopPropagatio","propsArr","unsub","createElectricNodeOf","stopPropagation","setPropagationOverride","resetNodeValue","_graph$stopPropagatio2","setProp","getNodeValue","getNodeFromQualifiedName","isSimpleObject","win","reqAnimFrame","setTimeout","getTimeBasedId","__lastTime","__id","pullableRecent","nFn","pullableEnd","unique","flat","res","identityMap","arrays","splitPathProp","pathArr","scheduler","onFinishCallback","queue","animationFrame","tempQ","fetch","namedNode","fetchAggregator","_len3","_key3","list","placedIndex","preArr","postArr","_len4","_key4","nodeDetails","identity","resolveMap","neighbour","CustomResolver","_dep","makeEntry","sCon","ForeignSet","_set","set1","set2","filteredKeys","s1","s2","webpackPolyfill","deprecate","paths","children","_interopRequireDefault","_lib2","require","_containerManager2","slLib","init","doc","document","htmlSplCharSpace"," ","documentSupport","getDocumentSupport","SVG_BBOX_CORRECTION","isWebKit","SmartLabelManager","id","container","useEllipses","wrapper","prevInstance","isBrowserLess","maxCacheLimit","maxDefaultCacheLimit","getElementById","createContainer","innerHTML","testStrAvg","isHeadLess","isIE","offsetHeight","offsetWidth","parentContainerStyle","style","parentContainer","_containerManager","_showNoEllipses","_init","setStyle","textToLines","smartlabel","lines","_calCharDimWithCache","calculateDifference","size","csArr","tw","twi","cachedStyle","asymmetricDifference","maxAdvancedCacheLimit","_container","cache","_advancedCache","advancedCacheKey","_advancedCacheKey","cacheName","fontSize","fontFamily","fontWeight","fontStyle","cacheInitName","repeat","width","height","_getWidthFn","contObj","_containerObj","svgText","bbox","textContent","getBBox","_styleNotSet","setLineHeight","sCont","_context","context","_cache","charCache","_lineHeight","lineHeight","useEllipsesOnOverflow","getSmartText","maxWidth","maxHeight","noWrap","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriWidth","oriHeight","newCharIndex","nearestChar","tempChar","getWidth","initialLeft","initialTop","getOriSizeImproveObj","spanArr","x","minWidth","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","ellipsesWidth","dotWidth","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","charAt","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","xmlTagRegEx","ltgtRegex","getOriSize","substr","getNearestBreakIndex","detailObj","tooltext","lastIndexOf","spanAdditionRegx","spanAdditionReplacer","classNameWithTag","classNameWithTagBR","childRetriverFn","childRetriverString","noClassTesting","classNameReg","className","spaceIdx","dashIdx","offsetLeft","offsetTop","parentNode","insertBefore","createElement","classNameBrReg","spanRemovalRegx","error","detailedCalculationFlag","textArr","letter","lSize","cumulativeSize","indiSizeStore","lib","userAgent","navigator","clsNameSpace","containerClass","brReplaceRegex","position","top","whiteSpace","padding","overflow","supportedStyle","font","font-family","font-weight","font-size","line-height","font-style","getElementsByClassName","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","containerParent","body","appendChild","setAttribute","getElementsByTagName","sl","charLen","increment","avgWidth","styleObj","fSize","Muze","ContainerManager","maxContainers","svg","containers","rootNode","createElementNS","setAttributeNS","svgRoot","diff","containerObj","keyStr","prev","removeContainer","addContainer","avgCharWidth","display","cObj","ascending","NaN","bisector","compare","ascendingComparator","left","right","ascendingBisect","bisectRight","number","array","src_range","stop","step","e10","e5","e2","src_ticks","ticks","tickIncrement","power","log","LN10","tickStep","step0","step1","quantile","valueof","i0","value0","each","remove","clear","empty","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","result","createObject","setObject","createMap","setMap","sortKey","k","proto","implicit","ordinal","unknown","scale","copy","band","bandwidth","ordinalRange","paddingInner","paddingOuter","align","rescale","sequence","rangeRound","invertExtent","r0","r1","hiIndex","getClosestIndexOf","invert","side","highVal","d1","low","high","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","exec","Rgb","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","hex","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","C","D","E","ED","EB","BC_DA","cubehelix","cubehelixConvert","Cubehelix","bl","basis","v0","v1","v2","v3","cosh","sinh","src_constant","linear","hue","constant","gamma","nogamma","exponential","src_rgb","rgbGamma","colorRgb","rgbSpline","spline","colors","rgbBasis","src_number","reA","reB","src_string","am","bm","bs","bi","lastIndex","q","one","zero","cssNode","cssRoot","cssView","svgNode","value_typeof","string","setTime","nb","na","src_round","degrees","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","interpolateTransformCss","parseCss","documentElement","defaultView","transform","getComputedStyle","getPropertyValue","interpolateTransformSvg","parseSvg","baseVal","consolidate","matrix","SQRT2","colorHsl","hslLong","colorHcl","cubehelixGamma","colorCubehelix","cubehelixLong","piecewise","interpolate","d3_scale_src_constant","d3_scale_src_number","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","bisect","target","clamp","output","input","interpolateValue","deinterpolateClamp","reinterpolateClamp","interpolateRound","formatDecimal","toExponential","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","fill","sign","symbol","comma","precision","prefixExponent","locale","formatPrefix","formatTrim","out","i1","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","src_identity","prefixes","src_locale","group","grouping","thousands","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","Infinity","defaultLocale","formatLocale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","interval","x0","x1","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","raise","thresholds","threshold","quantiles","quantize","newInterval","floori","offseti","offset","previous","millisecond","durationMinute","durationWeek","second","getUTCSeconds","minute","hour","getTimezoneOffset","setHours","setDate","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","setMonth","setFullYear","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","localDate","L","utcDate","UTC","newYear","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","timeDay","timeYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","timeSunday","formatWeekNumberISO","timeThursday","formatWeekdayNumberSunday","formatWeekNumberMonday","timeMonday","formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatPeriod","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parsePeriod","parseLocaleDate","parseLocaleTime","newParse","newDate","week","toISOString","durationSecond","durationHour","durationDay","durationMonth","durationYear","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickIntervals","tickInterval","src_time","timeMonth","timeWeek","timeHour","timeMinute","timeSecond","timeMillisecond","src_colors","interpolateCubehelixLong","ramp","sequential","interpolator","d3_scale_chromatic_src_colors","src_ramp","scheme","interpolateRgbBasis","warm","cool","sequential_multi_rainbow","ts","magma","inferno","plasma","UNIT_GLOBAL_NAMESPACE","UNIT_LOCAL_NAMESPACE","LAYER_LOCAL_NAMESPACE","LAYER_GLOBAL_NAMESPACE","GROUP_GLOBAL_NAMESPACE","GROUP_LOCAL_NAMESPACE","CANVAS_LOCAL_NAMESPACE","CANVAS_GLOBAL_NAMESPACE","ReservedFields","ROW_ID","CommonProps","ACTION_INF","ON_LAYER_DRAW","MATRIX_CREATED","d3_axis_src_identity","bottom","epsilon","entering","__axis","axis","orient","tickArguments","tickValues","tickTransform","tickSizeInner","tickSizeOuter","tickPadding","spacing","range0","range1","center","selection","selectAll","tick","tickExit","exit","tickEnter","enter","append","attr","line","insert","transition","getAttribute","tickSize","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","ccw","dx","dy","cw","da","rect","d3_shape_src_constant","halfPi","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","d2","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","point","curve_linear","src_line","pointX","pointY","defined","curve","curveLinear","buffer","defined0","src_area","area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","curveRadial","Radial","_curve","radial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye","noop","that","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","beta","_basis","_beta","_x","_y","custom","bundle","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","s0","slope2","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","_t","curve_step","stepBefore","stepAfter","none","series","order_none","stackValue","order_ascending","sums","cubicInOut","polyIn","polyOut","polyInOut","b2","b3","b4","b5","b6","b7","b8","b9","b0","bounceOut","backIn","overshoot","backOut","backInOut","elasticOut","elasticIn","amplitude","period","d3_voronoi_src_constant","elasticInOut","RedBlackTree","RedBlackNode","RedBlackRotateLeft","tree","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","createEdge","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","epsilon2","ha","hc","circle","Circle","before","circles","detachCircle","beachPool","createBeach","beach","Beach","detachBeach","beaches","removeBeach","disappearing","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","sortCellHalfedges","clipEdges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","cover","dc","v00","v01","v11","v10","polygons","polygon","triangles","e1","links","radius","_found","vx","vy","src_voronoi","voronoi","Selection","_data","_idMap","_dataMap","_mode","_enterdata","_exitdata","newData","idGetter","_idGetter","tempMap","purgedIds","purged","temp","_this5","HTMLElement","common_utils_typeof","sanitizeIP","typeObj","nonExistentKeys","checkExistence","getMax","getMin","getDomainFromData","fieldType","domArr","DimensionSubtype","firstMin","secondMin","firstMax","secondMax","unionDomain","domains","_ref2","dom","symbolFns","symbolCircle","cross","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolWye","symbolTriangle","easeFns","cubic","easeCubic","bounce","easeBounce","elastic","easeElastic","back","easeBack","poly","easePoly","circleInOut","getQualifiedClassName","requestAnimationFrame","cancelAnimationFrame","cls","defaultValue","getDependencyOrder","graph","dependencyOrder","visited","visit","objectIterator","Voronoi","common_utils_classCallCheck","_voronoi","_voronoiFn","addListenerToNamespace","namespaceInf","namespace","_listeners","getObjProp","Store","propName","propNames","callBack","on","calculatedProp","intSanitizer","transactor","holder","conf","stateProps","addAsMethod","nameSpaceProp","nsProp","compareTo","paramsLen","prevVal","spreadParams","sanitization","typeCheck","typeExpected","preset","oldValues","generateGetterSetters","propInfo","typeChecker","isEqual","oldVal","newVal","arraysEqual","is","ERROR_MSG","INTERFACE_IMPL","mergeRecursive","sink","createSelection","sel","appendObj","idFn","dataSelect","mergedSelection","numberInterpolator","interpolateNumber","piecewiseInterpolator","rgbToHsv","detectColor","col","getDataModelFromRange","selFields","selFn","getDataModelFromIdentifiers","filteredDataModel","dataArr","filteredSchema","include","registerListeners","listenerMap","propListenerMap","local","mapObj","propType","listenerFn","listener","isValidValue","getSymbol","stackOrders","_stackOrders","stackOrderNone","stackOrderAscending","stackOffsets","_stackOffsets","yp","yn","stackOffsetNone","si","sij0","s3","sk","stack","orderNone","offsetNone","oz","kz","sz","sij","ki","d3Stack","pathInterpolators","curveStepAfter","curveStepBefore","curveStep","curveCatmullRom","Symbols","axisLeft","axisRight","axisTop","axisBottom","pie","descending","arcs","pa","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","intersect","x3","y3","x32","y32","kc","lc","centroid","Scales","scaleBand","getSmallestDiff","points","xhtml","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","src_namespaces","xlink","xml","xmlns","src_namespace","namespaces","space","creator","fullname","creatorFixed","ownerDocument","creatorInherit","uri","namespaceURI","src_selector","selector","querySelector","selectorAll","querySelectorAll","matcher","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","sparse","EnterNode","_next","__data__","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","src_window","styleValue","classArray","classList","ClassList","_names","classedAdd","classedRemove","contains","textRemove","htmlRemove","nextSibling","lower","previousSibling","firstChild","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","event","mouseenter","mouseleave","filterContextListener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","groups","parents","_groups","_parents","subgroups","subnode","subgroup","enterGroup","updateGroup","_enter","_exit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","attrRemoveNS","removeAttributeNS","attrRemove","removeAttribute","attrFunctionNS","attrFunction","attrConstantNS","attrConstant","priority","styleRemove","removeProperty","styleFunction","setProperty","styleConstant","propertyRemove","propertyFunction","propertyConstant","classed","classedFunction","classedTrue","classedFalse","textFunction","textConstant","html","htmlFunction","htmlConstant","deep","typenames","parseTypenames","dispatch","dispatchFunction","dispatchConstant","src_select","nextId","Local","current","src_point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","Dispatch","T","types","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","d3_drag_src_constant","DragEvent","subject","active","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","touchable","gestures","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","yesdrag","noclick","clearTimeout","sublisteners","clickDistance","taskHead","taskTail","frame","timeout","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","timer_typeof","now","setFrame","clearNow","Timer","_call","_time","timer","delay","restart","wake","timerFlush","nap","sleep","poke","clearInterval","setInterval","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","duration","ease","schedule","tweenValue","_id","transition_interpolate","interpolateRgb","interpolateString","Transition","_name","newId","selection_prototype","inherit","id0","id1","onFunction","on0","on1","sit","attrTween","value00","value10","interpolate0","value1","attrTweenNS","styleTween","styleRemoveEnd","removeFunction","tweenRemove","tween0","tween1","tweenFunction","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","defaultTiming","easeCubicInOut","interrupt","selectElement","makeElement","elemType","callbacks","keyFn","SVGElement","selectorVal","selectorType","actualSelector","enterSel","mergeSel","exitSel","applyStyle","setElementAttrs","attrs","setAttrs","setStyles","styles","createElements","getClientPoint","pos","clientPoint","getEvent","d3event","getD3Drag","d3drag","getSmartComputedStyle","css","textEl","mandatoryStyle","fill-opacity","renderer_utils_typeof","computedStyle","styleForSmartLabel","hasTouch","events","EVENT_LIST","composition","resolveFn","notification","hasOwn","LifeCycleManager","lifecycle_manager_classCallCheck","_eventList","_promises","_notifiers","_lifeCycles","_unreleasedLifeCycles","_boot","_preparePromises","Promise","promise","_makeNotifierPromise","createPromise","then","prm","formalName","client","_releasePromisesFromCache","_notify","stage","_resolvePromise","retrieve","_callLifeCycleCallback","_cachePromise","_resetTargetPromise","lifeCycles","DRAG","HOVER","SELECTIONDRAG","CLICK","LONGTOUCH","TOUCHDRAG","ALL_ACTIONS","SELECTION_NEW_ENTRY","SELECTION_NEW_EXIT","SELECTION_NULL","SELECTION_OLD_ENTRY","SELECTION_OLD_EXIT","SelectionSet","completeSet","_volatile","selection_set_classCallCheck","_completeSetCount","_lockedSelection","_resetted","ids","entrySet","exitSet","lockedSel","addSet","removeSet","updateSet","changeSideEffectAvailability","toEnable","sideEffects","change","enable","disable","getMergedSet","helper_toConsumableArray","conditionsMap","newEntry","SELECTION","oldEntry","mergedEnter","newExit","oldExit","mergedExit","complete","getSetInfo","selectionSet","propagationData","resetted","getModelFromSet","condition","Firebolt","actions","behaviourEffectMap","firebolt_classCallCheck","_sideEffectDefinitions","_sideEffects","_propagationInf","_actions","behavioural","physical","_selectionSet","_volatileSelectionSet","_propagationFields","_sourceSideEffects","selectionBox","_propagationBehaviourMap","_sourceBehaviours","_actionBehaviourMap","_config","_behaviourEffectMap","_entryExitSet","_actionHistory","_queuedSideEffects","mapSideEffects","registerBehaviouralActions","registerSideEffects","registerPhysicalBehaviouralMap","physicalBehaviouralMap","registerPhysicalActions","behEffectMap","preventDefaultActions","effectNames","effects","firebolt_toConsumableArray","behaviours","initializeBehaviouralActions","dispatchableBehaviours","Action","prepareSelectionSets","initializeSideEffects","sideEffectStore","actionHistory","queuedSideEffects","sideEffect","combinedSet","unionSets","behaviour","entryExitSet","existingModel","effect","firebolt_typeof","sideEffectInstance","isEnabled","mutates","dispatchSideEffect","propagationInfo","propagate","getSideEffects","propagationSelectionSet","getPropagationSelectionSet","shouldApplySideEffects","sourceSelectionSet","applicableSideEffects","getApplicableSideEffects","applySideEffects","physicalAction","actionBehaviourMap","behaviourMap","mapActionsAndBehaviour","unsubscribe","onDataModelPropagation","propValue","dispatchBehaviour","uniqueIds","behaviouralActions","volatileSelectionSet","sideEffectDefinitions","sideEffectsMap","SideEffect","sideEffectConf","initedActions","initializePhysicalActions","physicalActions","phyAction","initedPhysicalActions","getDefaultTargetContainer","bindActionWithBehaviour","targets","behaviourList","xFields","yFields","xMeasures","FieldType","yMeasures","filterPropagationModel","_propModel$getData","fieldMap","getFullData","propagationSource","applicableSelectionSets","GenericBehaviour","firebolt","generic_classCallCheck","_enabled","selectionSets","getSelectionSets","_this$firebolt$getAdd","getAddSetFromCriteria","getPropagationInf","setSelectionSet","getEntryExitSet","_selectionSet$getSets","getSets","setConfig","isSourceFieldPresent","getSourceFields","VolatileBehaviour","reset","existingAddSet","updateExit","getCompleteSet","BRUSH","HIGHLIGHT","TOOLTIP","FILTER","SELECT","HighlightBehaviour","BrushBehaviour","BEHAVIOURNAMES","FilterBehaviour","PersistentBehaviour","updateEntry","mergedExitSet","completeSetCount","SelectBehaviour","getDragActionConfig","sourceInfo","axes","xAxis","yAxis","axisFields","xField","getMembers","yField","xFieldType","yFieldType","stPos","startPos","endPos","dragDim","MeasureSubtype","isXDimension","isYDimension","xRange","yRange","selectedDomains","rangeObj","xdom","ydom","snap","getNearestRange","attachDragEvent","targetEl","drawingInf","touchStart","d3Drag","getDrawingContext","getSourceInfo","beh","dragEnd","hover","interaction","tooltip","svgContainer","nearestPoint","getNearestPoint","getAllPoints","showInPosition","generatePayloadFromEvent","click","physical_defineProperty","_physicalActions","ACTIONNAMES","longtouch","touchEnd","touchdrag","GenericSideEffect","generic_sideeffect_classCallCheck","_strategy","_strategies","defaultConfig","SurrogateSideEffect","interactionType","layers","layer","interactive","applyInteractionStyle","SpawnableSideEffect","_drawingContext","changeVisibility","sideEffectGroup","visible","defClassName","classPrefix","SelectionBox","boxConf","box","drawingContext","unitWidth","unitHeight","selectionGroupClassName","hide","sourceInf","_getBoxDimensionsFrom","getBoxDimensionsFromPayload","direction","xDim","yDim","xLinear","yLinear","xCriteria","yCriteria","x1Val","x2Val","bandScale","x1DomainIndex","x2DomainIndex","_sort2","helper_slicedToArray","getScaleValue","getUnitWidth","y1Val","y2Val","y1DomainIndex","y2DomainIndex","_sort4","_xDim","_yDim","show","selectionBoxDrag","onDrag","boxClassName","INITIAL_STYLE","connectorClassName","margin","content","iconContainerSize","iconScale","iconShape","iconColor","rowMargin","separator","parentClassName","arrow","disabled","getArrowPos","dim","measurement","arrowPos","boxHeight","boxWidth","arrowWidth","plotBottom","boxBottom","plotRight","boxRight","placeArrow","tooltipArrow","_tooltipArrow","tooltipBackground","_tooltipBackground","arrowConf","_arrowOrientation","timeFormats","timeDurations","formatters","strategy_defineProperty","nearestInterval","getNearestInterval","getDefaultTooltipFormatterFn","buildTooltipData","fieldValues","fieldspace","dimensionMeasureMap","detailFields","containsDetailField","timeDiffs","dataLen","getRowContent","formattedValue","measureIndex","formatterFn","uniqueVals","strategy_toConsumableArray","colorAxis","shapeAxis","shape","sizeAxis","isRetinalField","associatedMeasures","icon","getColor","getShape","getSize","measureFormatter","margin-left","displayFormat","getTabularData","fieldObj","allMeasures","_construct","strategy","DEFAULT_STRATEGY","Content","content_classCallCheck","_model","_formatter","ctx","_mount","table","tbody","margin-right","el","Tooltip","htmlContainer","tooltip_classCallCheck","connectorContainer","tooltipConf","contentClass","_tooltipContainer","_contentContainer","_contents","_tooltipConnectorContainer","qualifiedClassName","addClass","defConf","contentConfig","reorderContainers","contentConf","render","_target","repositionArrow","arrowDisabled","arrowOrient","outsidePlot","connector","_offset","orientation","_extent","arrowSize","topSpace","dimX","rightSpace","leftSpace","positionTop","positionRight","positionLeft","positionHorizontal","positionVertical","_position","_arrowPos","strategies","showSelectedItems","aggregatedModel","fieldsConf","measureNames","strategies_toConsumableArray","_getPrototypeOf2","side_effects_tooltip_classCallCheck","tooltip_possibleConstructorReturn","tooltip_getPrototypeOf","_tooltips","totalHeight","totalWidth","isEmpty","tooltips","boundBox","dataModels","fragmented","showVertically","tooltipPos","boxes","tooltip_toConsumableArray","sourceFields","indices","plotDimensions","getPlotPointsFromIdentifiers","plotDim","dt","dataTransform","layoutContainer","parentContainerDimensions","layoutBoundBox","unitBoundBox","tooltipInst","TooltipRenderer","timeDiffsByField","positionRelativeTo","tooltipBoundBox","getContents","spaceOutBoxes","spaceOutIfOverlap","firstBox","secondBox","opposite","Crossline","bandWidth","_this$config","bandClass","lineClass","elemData","axisIndex","fieldInst","xOffset","plotWidth","crossline_toConsumableArray","getPlotSpan","getPlotPadding","startPx","endPx","dataPoint","parentGroup","fade","fadeFn","focus","highlight","PlotHighlighter","plot_highlighter_classCallCheck","plot_highlighter_possibleConstructorReturn","plot_highlighter_getPrototypeOf","FilterEffect","entryModel","clearCaching","resetData","enableCaching","addLayer","layerDefs","layerRegistry","layerDef","mark","layerCls","shouldDrawAnchors","depLayerEncoding","encoding","defaultSizeValue","layerObj","instances","getTransitionConfig","calculateDomain","linkedLayer","AnchorEffect","anchors_classCallCheck","anchors_possibleConstructorReturn","anchors_getPrototypeOf","_layersMap","addAnchorLayers","metaInf","registry","layerDefsVal","registerImmediateListener","STATE_NAMESPACES","anchors_slicedToArray","_layers","elems","_linkedLayer$getTrans2","getLayerByName","getTransformedDataFromIdentifiers","transformedData","transformedDataModel","PersistentAnchors","BrushAnchors","behaviour_effect_map_defineProperty","BEHAVIOURS","STACK","ANGLE","RADIUS","SIZE","COLOR","SHAPE","ENCODING","X0","Y0","nearestPointThreshold","strokeOpacity","connectNullData","SimpleLayer","BOTTOM","TOP","LEFT","RIGHT","axisOrientationMap","axis_orientation_defineProperty","_axisOrientationMap","AxisOrientation","LINEAR","BAND","TIME","ORDINAL","QUANTIZE","QUANTILE","LOG","POW","IDENTITY","SEQUENTIAL","THRESHOLD","CONTINOUS","DISCRETE","HIDDEN","scaleLinear","scales","scaleThreshold","scaleLog","scalePow","scaleIdentity","scaleOrdinal","scaleSequential","scaleQuantize","scaleQuantile","scaleTime","scaleMap","scale_creator_defineProperty","_scaleMap","ScaleType","createScale","scaleFactory","axisName","axisNamePadding","fixedBaseline","labels","rotation","smartTicks","numberOfTicks","showAxisName","showInnerTicks","showOuterTicks","yOffset","rotateAxis","instance","tickText","labelManager","renderConfig","getTickSize","yShift","xShift","tickFormatter","tickLabelDim","quadrant","rotationNormalizer","angleToRadian","angle","changeTickOrientation","selectContainer","axisInstance","_smartTicks","isSmartTicks","registerAnimationDoneHook","setFixedBaseline","setAxisNamePos","textNode","axisNameHeight","labelOffset","availableSpace","setAxisRange","rangeBounds","space_setter_defineProperty","adjustRange","getAxisOffset","timeDiff","avWidth","bars","spaceSetter","spaceConfig","heightForTicks","_context$availableSpa","availWidth","availHeight","isOffset","_context$renderConfig","_context$config2","_context$getAxisDimen","getAxisDimensions","tickDimensions","allTickDimensions","axisNameDimensions","tickDimHeight","tickDimWidth","namePadding","labelConfig","minTickDistance","_minTickDistance","minTickSpace","_minTickSpace","_minDiff","tickShifter","getTickValues","maxTickSpaces","widthForTicks","continous","totalTickWidth","getRotatedSpaces","rotatedHeight","rotatedWidth","getAxisComponentDimensions","axisTicks","largestTick","largestTickDimensions","smartTick","_context$config","labelFunc","_tickLabelStyle","originalLabel","getFormattedText","_axisNameStyle","getHorizontalAxisSpace","axisDimensions","axisDimHeight","minTickDiff","getMinTickDifference","cartesian_axis_helper_toConsumableArray","getVerticalAxisSpace","_context$config3","calculateBandSpace","largestDimHeight","minTickWidth","_getHorizontalAxisSpa","_getVerticalAxisSpace","setContinousAxisDomain","_context$config6","userDom","_domain","PROPS","axisComponentDimensions","oldConfig","createAxis","_renderConfig","logicalSpace","SimpleAxis","simple_axis_classCallCheck","_dependencies","_range","_domainLock","_axisDimensions","defCon","simpleConfig","bodyElem","dist","_scale","_axis","_animationDonePromises","setAxisComponentDimensions","axisClass","getTickFormatter","setTickConfig","domainVal","computeAxisDimensions","_getAxisComponentDime","labelHeight","labelWidth","calculateContinousSpace","_context$renderConfig6","axisNameWidth","_getHorizontalAxisSpa2","_getVerticalAxisSpace2","renderAxis","labelProps","axisNameSpace","all","LinearInterpolator","LogInterpolator","PowInterpolator","interpolatorMap","continous_axis_defineProperty","_interpolatorMap","ContinousAxis","continous_axis_classCallCheck","continous_axis_possibleConstructorReturn","continous_axis_getPrototypeOf","InterpolatorCls","_interpolator","_this$renderConfig","_this$config3","getNumberOfTicks","labelDim","tickLength","numberOfValues","_this$axisComponentDi","BandAxis","_get","band_axis_getPrototypeOf","_this$maxTickSpaces","_getRotatedSpaces","setOffset","_this$renderConfig2","TimeAxis","time_axis_classCallCheck","time_axis_possibleConstructorReturn","time_axis_getPrototypeOf","time_axis_get","_this$config2","x11Colors","Pink","LightPink","HotPink","DeepPink","PaleVioletRed","MediumVioletRed","LightSalmon","Salmon","DarkSalmon","LightCoral","IndianRed","Crimson","FireBrick","DarkRed","Red","OrangeRed","Tomato","Coral","DarkOrange","Orange","Gold","Yellow","LightYellow","LemonChiffon","LightGoldenrodYellow","PapayaWhip","Moccasin","PeachPuff","PaleGoldenrod","Khaki","DarkKhaki","Cornsilk","BlanchedAlmond","Bisque","NavajoWhite","Wheat","BurlyWood","Tan","RosyBrown","SandyBrown","Goldenrod","DarkGoldenrod","Peru","Chocolate","SaddleBrown","Sienna","Brown","Maroon","DarkOliveGreen","Olive","OliveDrab","YellowGreen","LimeGreen","Lime","LawnGreen","Chartreuse","GreenYellow","SpringGreen","MediumSpringGreen","LightGreen","PaleGreen","DarkSeaGreen","MediumSeaGreen","SeaGreen","ForestGreen","Green","DarkGreen","MediumAquamarine","Aqua","Cyan","LightCyan","PaleTurquoise","Aquamarine","Turquoise","MediumTurquoise","DarkTurquoise","LightSeaGreen","CadetBlue","DarkCyan","Teal","LightSteelBlue","PowderBlue","LightBlue","SkyBlue","LightSkyBlue","DeepSkyBlue","DodgerBlue","CornflowerBlue","SteelBlue","RoyalBlue","Blue","MediumBlue","DarkBlue","Navy","MidnightBlue","Lavender","Thistle","Plum","Violet","Orchid","Fuchsia","Magenta","MediumOrchid","MediumPurple","BlueViolet","DarkViolet","DarkOrchid","DarkMagenta","Purple","Indigo","DarkSlateBlue","SlateBlue","MediumSlateBlue","White","Snow","Honeydew","MintCream","Azure","AliceBlue","GhostWhite","WhiteSmoke","Seashell","Beige","OldLace","FloralWhite","Ivory","AntiqueWhite","Linen","LavenderBlush","MistyRose","Gainsboro","LightGray","Silver","DarkGrey","Grey","DimGrey","LightSlateGrey","SlateGrey","DarkSlateGrey","Black","palette","DEFAULT_GRADIENT_COLOR","DEFAULT_CONFIG","stops","getHslString","hslArr","convertToXllString","baseString","getActualHslColor","paletteColor","hexToHsv","props_toConsumableArray","newConfig","uniqueValues","getStops","newStops","color_strategy_toConsumableArray","rangeStops","newStopsLength","newRange","hslInterpolator","interpolateHslLong","indexedDomain","scaleDomain","indexedDomainMeasure","normalDomain","steppedDomain","_getStops","continousSteppedDomain","_getStops2","uniqueRange","domainValue","indexedRange","normalRange","strategyGetter","domainType","rangeType","schemeType","color_strategy_defineProperty","domainRange","ColorAxis","color_axis_classCallCheck","_domainType","_rangeType","_schemeType","getSchemeType","_colorStrategy","setColorStrategy","updateDomain","colorStrategy","getScheme","colorSchemes","hslColorArray","getRawColor","color_axis_toConsumableArray","scaleInfo","domainRangeFn","transformationArr","newH","newS","newL","newA","size_strategy_defineProperty","pieceWiseRange","numVal","size_strategy_toConsumableArray","intervals","newIntervals","discreteRange","SizeAxis","size_axis_classCallCheck","_sizeStrategy","setStrategy","domainInfo","domainFn","generator","ShapeAxis","shape_axis_classCallCheck","_generatedShapes","shapeType","shapeGenerator","generatorFn","generatedShapes","DATA_TYPES","group_transform","data_type_scale_map_defineProperty","_dataTypeScaleMap","groupByIndices","nestCollection","nestFn","identityTransform","transformMap","transform_factory_defineProperty","_transformMap","uniqueField","valueField","normalizedData","normalizeData","uniqueFieldIndex","valueFieldIndex","seriesKeyIndex","seriesKeys","tuples","_tuple","seriesKey","newArr","orderBy","orderIndex","groupByIndex","localeCompare","stackData","seriesData","transformFactory","getLayerColor","colorEncoding","colorFieldIndex","rawColor","transfromColor","styleType","intensity","stateColor","originalColor","fillColorInfo","transformColor","interactionStyles","elements","getPlotElementsFromSet","_d$meta","colorTransform","_ref4","helpers_slicedToArray","getAxesScales","_map2","_map4","xScale","yScale","getIndividualClassName","individualClassName","classNameStr","attachDataToVoronoi","_ref5","helpers_toConsumableArray","updateStyle","positionPoints","positioner","encodingTransform","getPlotMeasurement","dimensionalValues","fieldInfo","encodingFieldsInf","transformType","_bandScale","span","groupSpan","offsetValues","actualGroupWidth","dataProps","innerPadding","getGroupSpan","isAxisBandScale","axisPadding","groupPadding","listener_map_slicedToArray","encodingValue","getEncodingFieldInf","_map6","x0Field","y0Field","colorField","shapeField","sizeField","_map8","_map10","xFieldSubType","yFieldSubType","_map12","xFieldIndex","yFieldIndex","x0FieldIndex","y0FieldIndex","getValidTransform","layerConfig","encodingFieldInf","groupByField","groupByFieldMeasure","_transformedData","getTransformedData","_normalizedData","getNormalizedData","calculateDomainFromData","_updateLock","getRenderProps","registerChangeListener","renderLayer","throwback","commit","defaultOptions","default_options_defineProperty","_defaultOptions","newConf","defaultPolicy","_cacheEnabled","_cachedData","BaseLayer","base_layer_classCallCheck","base_layer_possibleConstructorReturn","base_layer_getPrototypeOf","base_layer_assertThisInitialized","alias","_points","_measurement","_store","localNs","initializeGlobalState","globalState","getState","helpers_defineProperty","base_layer_defineProperty","global","unitRowIndex","unitColIndex","_encodingFieldsInf","_encodingTransform","_alias","transformData","yEnc","xEnc","encodingType","transformedDataArr","fieldsLen","pointObj","_transformType","pointMap","_pointMap","_dataProps","_this$encodingFieldsI","base_layer_slicedToArray","xMeasure","yMeasure","_identifiers$","_identifiers$2","xMeasureIndex","yMeasureIndex","getAllAttrs","filteredPoints","base_layer_toConsumableArray","sizeVal","enc","_identifiers$getData","identifierData","identifierSchema","_this$encodingFieldsI2","tupleArr","transformedVal","base_layer_construct","userConf","drawLine","curveInterpolatorFn","linepath","LineLayer","line_classCallCheck","line_possibleConstructorReturn","line_getPrototypeOf","isXDim","isYDim","xPx","yPx","_getLayerColor","stroke","rowId","cachePoint","seriesClassName","containerSelection","animateGroup","groupTransition","groupAnimateStyle","stroke-opacity","getPathStyle","translatePoints","colorValFn","colorVal","getDrawFn","searchRadius","_point$data$data","getIdentifiersFromData","layerId","drawArea","easeEffect","renderer_slicedToArray","enterAreaPath","updateAreaPath","selectionEnter","AreaLayer","area_get","area_getPrototypeOf","_getAxesScales","classNameFn","y0Px","minOuterRadius","stroke-width","stroke-linejoin","innerRadiusFixer","states","fadeout","selected","ArcLayer","arc_classCallCheck","arc_possibleConstructorReturn","arc_getPrototypeOf","_prevPieData","pieData","pieIndex","prevData","_getFieldIndices","getFieldIndices","arc_helper_slicedToArray","angleField","radiusField","angleIndex","sizeIndex","radiusIndex","colorIndex","dataVal","uid","outerRadiusValue","angleVal","_previousInfo","getPreviousPoint","currIndex","prevArc","nextArc","_dataPoint$datum","_this$measurement","chartHeight","chartWidth","qualClassName","getRadiusRange","defaultRadius","radiusDomain","rangeValueGetter","getRangeValue","domainMultiplier","sizeAxisDomain","sizeMultiplier","_chartWidth","_chartHeight","consecutiveExits","exitCounter","arcFn","tweenPie","individualClass","tweenExit","exitArr","oldExitCounter","tweenExitPie","consecutiveExitArr","gElem","pieSlices","pieSliceInf","tData","drawText","selectionMerge","backgroundVal","textanchor","textStyle","background","backgroundPadding","_smartLabel$getOriSiz","backgroundEl","TextLayer","textEncoding","textField","textFormatter","backgroundEncoding","backgroundValue","textFieldIndex","_loop","textValue","text_slicedToArray","text-anchor","drawSymbols","mergedGroups","symbolGroups","symbolEnter","createShape","groupElement","Element","newShape","nodeName","src","href","shapeElement","pathStr","checkPath","exitGroups","defColorStyle","fillOpacity","shapes","sizes","PointLayer","point_classCallCheck","point_possibleConstructorReturn","point_getPrototypeOf","sizeEncoding","shapeEncoding","sizeValue","shapeFieldIndex","sizeFieldIndex","_config$offset","offsetX","offsetY","point_slicedToArray","maxSize","generateDataPoints","point_toConsumableArray","drawFn","_maxSize","_getPlotMeasurement2","widthMetrics","heightMetrics","offsetXValues","offsetYValues","measurementConf","getMeasurementConfig","widthSpan","heightSpan","distanceLimit","drawRects","barEnterFn","transitionBars","selTransition","resolveDimByField","axesInfo","spaceType","sizeConfig","enterSpace","minVal","maxVal","diffPx","zeroPos","axisType","axisType0","resolveDimensions","_resolveDimByField","enterWidth","enterX","xPos","_resolveDimByField2","enterHeight","BarLayer","bar_classCallCheck","bar_possibleConstructorReturn","bar_getPrototypeOf","_plotPadding","_plotSpan","bar_get","getTranslatedPoints","_context$encodingFiel","normalizedDataArr","clipElement","clipPathElement","bar_slicedToArray","barWidthMetrics","barHeightMetrics","barWidthOffsets","barHeightOffsets","barWidth","barWidthOffset","barHeight","barHeightOffset","uniqueFieldType","filterData","pointFound","bar_toConsumableArray","p2","tick_renderer","ticksEnter","TickLayer","_config$span","xSpan","ySpan","x0Px","drawTicks","sanitizeEncoding","layerFactory","compositeLayers","factoryObj","setLayerRegistry","reg","_layerRegistry","getSerializedConf","serializedDefs","defs","unitLayerDef","sDef","parseLayerDefinition","layerType","strs","layer_factory_toConsumableArray","getLayerInstance","layerConstructor","getLayerClass","composeLayers","sanitizeLayerConfig","DEFAULT_LAYERS","defaults_defineProperty","_DEFAULT_LAYERS","ROWS","COLUMNS","COL","ROW","CELL","X_AXES","Y_AXES","ENTRY_CELLS","EXIT_CELLS","PRIMARY","SECONDARY","local_options","local_options_defineProperty","_CONFIG$ROWS$COLUMNS$","SimpleGroup","Variable","ComposedVars","composed_vars_classCallCheck","texts","composed_vars_possibleConstructorReturn","composed_vars_getPrototypeOf","vars","_vars","member","getMinDiff","SimpleVariable","simple_var_classCallCheck","simple_var_possibleConstructorReturn","simple_var_getPrototypeOf","oneVar","_oneVar","dtFormat","minimumConsecutiveDifference","varInst","convertToVar","transformFields","field_sanitizer_slicedToArray","normalizedFields","normalizeFields","norFields","orderFields","fieldArray","temporalArr","categoricalArr","fieldList","numOfMeasures","allDimensions","field_sanitizer_toConsumableArray","rowsInfo","columnsInfo","rowDimensions","rowMeasures","rowTemporalFields","rowCategoricalFields","columnDimensions","columnMeasures","columnTemporalFields","columnCategoricalFields","VisualEncoder","_fieldInfo","_axisFrom","_headerFrom","__headerFrom","axisFrom","_getHeaderAxisFrom2","visual_encoder_slicedToArray","getHeaderAxisFrom","rowHeader","rowAxis","_getHeaderAxisFrom4","colHeader","colAxis","headerFrom","scaleMaps","dataTypeScaleMap","generateAxisFromMap","axesCreators","groupAxes","axisKey","currentAxes","cacheMaps","commonAxisKey","getAxisKey","axisConfig","getAxisConfig","axisInfo","axisOrientation","userAxisConfig","_rotationLock","resetDomain","createSimpleAxis","Cls","getIndex","arrIndex","CartesianEncoder","geomCellAxes","projections","rowFields","columnFields","rowIndex","columnIndex","xAxes","yAxes","lock","unlock","unitDomains","units","1","rIdx","unitsArr","_loop2","cIdx","len2","_resolver$axes","axesArr","adjustedDomain","alignZeroLine","getAdjustedDomain","y1ratio","y2ratio","allSameSign","facets","counter","primaryFacets","secondaryFacets","primaryFields","secondaryFields","primaryLen","secondaryLen","projArr","primaryField","secondaryField","facet","existIndex","axisFromIndex","cartesian_encoder_get","cartesian_encoder_getPrototypeOf","groupedModel","encodingObj","retriveDomainFromData","layerArray","serializedLayers","userLayerConfig","colField","colFieldName","rowField","configs","rowFieldName","rowFieldType","getDefaultMark","colFieldType","defConfigs","layerConfigs","getLayerConfFromFields","colFields","encodingArr","encoder_helper_toConsumableArray","colFieldExist","rowFieldExist","layerConf","mergedLayerConf","serializedLayerConfig","cartesian_encoder_toConsumableArray","PolarEncoder","pieAxes","domainProps","sanitizedRows","sanitizedColumns","polar_encoder_get","polar_encoder_getPrototypeOf","sanitizedFields","typeIndex","fieldSet","polar_encoder_toConsumableArray","facetFields","layerEncoding","encType","polar_encoder_defineProperty","RetinalEncoder","newAxes","createRetinalAxis","fieldProps","getAxisType","encodingConfigs","isDistributionEqual","group_utils_toConsumableArray","rowType","initializeCacheMaps","cellMap","xAxesMap","yAxesMap","entryCellMap","exitCellMap","headerCreator","fieldHeaders","TextCell","getHeaderText","rowLength","userAxisFromConfig","_fields","group_utils_slicedToArray","firstField","secondField","firstFieldType","secondFieldType","setFacetsAndProjections","encoder","_encoder$simpleEncode","simpleEncoder","getFacetsAndProjections","group_utils_defineProperty","getBorders","matrices","showRowBorders","showColBorders","showValueBorders","valueMatrix","_rows","leftRows","rightRows","_columns","topColumns","bottomColumns","_encoder$fieldInfo","allDimensionLength","allMeasuresLength","allTemporalFieldsLength","getRowBorders","borders","getColumnsBorders","getValueBorders","borderTypeRow","borderTypeCol","action_behaviour_map_defineProperty","ACTIONS","getLayerFromDef","existingLayer","_layerDeps","inst","colIndex","instanceArr","_timeDiffs","resolveEncodingTransform","layerInst","resolvable","depArr","sanitizeLayerDef","sanitizedDefs","sConf","getLayersBy","searchBy","removeLayersBy","createRenderPromise","_renderedPromise","_renderedResolve","getGridLayerDefinitions","getDefaultVisibilty","getLayerDefinition","_definition","_encoding","gridLines","gridBands","gridLineColor","zeroLineColor","gridBandColor","isLinearScale","grid_lines_defineProperty","isNegativeDomain","attachDataToGridLineLayers","_gridLineSelection","getObjects","_gridBandSelection","gridLayerData","getGridLayerData","gridData","_jsonData$push","grid_lines_toConsumableArray","trackerClassName","arcLayerClassName","sideEffectClassName","src_local_options","src_local_options_defineProperty","_CONFIG$LAYERDEFS$TRA","cachedData","local_options_toConsumableArray","oldData","calculateDomainListener","unionDomainFromLayers","layerAxisIndex","getDataDomain","domainValues","layerDomain","fieldDomain","fieldStr","_layerAxisIndex","src_listener_map_slicedToArray","fieldsVal","removeExitLayers","layersMap","markSet","listenerInf","_lifeCycleManager","notify","axesObj","_timeDiffsByField","createGridLineLayer","vuConf","gridType","atomicDef","_ref7","_ref8","transformDataModels","transformVal","_ref11","_ref12","layerAxisIndexVal","axesVal","lyr","disableUpdate","attachDataToLayers","transformedDataModels","dataSource","enableUpdate","_dimensionMeasureMap","getDimensionMeasureMap","retinalEncodingsAndMeasures","_layer$encodingFields","_retinalEncodingsAndM","src_helper_toConsumableArray","retinalFields","attachAxisToLayers","axisInf","props_defineProperty","_PROPS","createSelectionSet","originalData","attachPropagationListener","firebolt_helper_slicedToArray","dispatchQueuedSideEffects","firebolt_helper_toConsumableArray","clearActionHistory","payloadGenerator","brush","selectionDataModel","propPayload","getRangeFromData","propCriteria","isDimension","payload_generator_toConsumableArray","__default","propagateValues","propagationFieldInf","propagationFields","sideEfffects","mergedModel","sourceUnit","sourceCanvas","parentAlias","propagationBehaviour","propFields","facetByFields","getModelWithFacetData","schema1","data1","schema2","data2","data_propagator_toConsumableArray","groupId","behaviourInstance","propagationConf","sourceBehaviour","enabled","propConf","propInf","UnitFireBolt","src_firebolt_classCallCheck","firebolt_possibleConstructorReturn","firebolt_getPrototypeOf","firebolt_assertThisInitialized","unitId","aliasName","propagationSourceCanvas","sourceUnitId","sourceSideEffects","sideEffectInstances","actionOnSource","mappedEffects","se","sideEffectChecker","enabledFn","payloadFn","sourceIdentifierFields","sourceBehaviours","firebolt_get","VisualUnit","visual_unit_classCallCheck","visual_unit_defineProperty","lifeCycleManager","_layerNamespaces","_transformedDataModels","localOptions","_firebolt","_rootSvg","class","renderGridLineLayers","gridLineParentGroup","_entry","grid_lines_slicedToArray","parentGroupClass","renderLayers","orderedLayers","layerParentGroup","layerDepOrder","_layerDepOrder","_sideEffectGroup","createSideEffectGroup","initSideEffects","rootSvg","_this$parentContainer","parentContainerInf","layerDefinition","layerDefinitions","components","layerIndex","startIndex","visual_unit_toConsumableArray","layersArr","_layersArr","markId","defArr","instanceValues","layerdeps","getLayerAxisIndex","_layer$config","stateStore","parentModel","dimValue","getNearestDimensionalValue","entryVal","pointInf","getMarkInfFromLayers","markInf","parsedIdentifiers","transposeArray","getPointsFromIdentifiers","visual_unit_construct","getFieldNames","fields1","matrix_model_toConsumableArray","createSelectedDataModel","uniqueKeyGenerator","keyArray","newDm","nextDepthUniqueValues","projectRows","allColumnProjections","rowProjections","optionalProjections","projectFields","_getFieldNames2","matrix_model_slicedToArray","projFieldNames","colProjFieldNames","pushToMatrix","_matrix$rowIndex","facetInfo","colProjections","rowProj","projIdx","_getFieldNames4","rowProjFieldNames","projectedDm","createValueCells","suppliedLayers","GeomCell","matrixLayers","horizontalAxis","verticalAxis","datamodelTransform","layerConfigArr","getLayerConfig","normalizedColumns","normalizedRows","geomCellKey","getCellKey","columnId","allFacets","cell_creator_toConsumableArray","rowFacets","colFacets","geomCell","updateCells","facetKey","createAxisCells","axisInst","_axisInst$config","AxisCell","BlankCell","headerPlaceholderGn","selectionObj","selectionKeys","keySet","createTextCells","generatePlaceholders","facetsAndProjections","encoders","valuesMatrix","rowKeys","columnKeys","takeAxisFrom","takeHeaderFrom","axisPlaceholderGn","selObj","axesMatrix","selObjProp","axesForDraw","rowsPrimary","rowPrime","columnsPrimary","colPrime","_selectionObj","rowsSecondary","columnsSecondary","section","hContext","computeMatrices","componentRegistry","globalConfig","autoGroupBy","otherEncodings","matrixGnContext","getCellDef","isRowSizeEqual","isColumnSizeEqual","colCells","rowCells","resetSimpleAxes","newCacheMap","valueCellContext","serializeLayerConfig","extractFields","layerFields","flattenArray","getFieldsFromSuppliedLayers","suppliedLayerConfig","aggregationFns","valueMatrixInfo","getMatrixModel","rowDataModels","colProj","firstLevelRowKeys","_rowDataModels","rowFacetFieldNames","selectedDataModel","_rowDataModels2","colFacetNames","firstLevelColumnKeys","dme","rIndex","cIndex","transposedColKeys","valueCellsCreator","placeholder","_mutateAxesFromMap","mutateAxesFromMap","xAxisSet","yAxisSet","axisId","createUnits","_generateMatrices","generateMatrices","leftHeaders","topHeaders","bottomHeaders","rightHeaders","cell_creator_slicedToArray","rowSec","colSec","leftFacets","rightFacets","rowPriority","colPriority","leftMatrix","rightMatrix","topMatrix","bottomMatrix","currentBottomLength","setAvailableSpace","rowMatrix","columnMatrix","RESOLVER_PROPS","MatrixResolver","matrix_resolver_classCallCheck","_registry","_layerConfig","_matrixLayers","_rowMatrix","_columnMatrix","_valueMatrix","_facets","_projections","_datamodelTransform","_units","_cacheMaps","_axes","maps","matrix_resolver_toConsumableArray","_horizontalAxis","_verticalAxis","matrixType","sideEffectRegistry","_this$dependencies","unitConfig","extractUnitConfig","globalStates","_this$getAllFields","retContext","getRetinalFieldsDomain","retinalEncoder","setCommonDomain","_this$axes","retinalAxes","updateModel","placeholders","bottomLeft","bottomRight","_this$dependencies3","matrix_resolver_slicedToArray","topCols","bottomCols","rowHeaders","blankCellCreator","showHeaders","footers","topLeft","topRight","ValueMatrix","matrixArr","value_matrix_classCallCheck","instancesById","cellValue","_instancesById","_matrix","_filterFn","rowWidth","currentRowWidth","getLogicalSpace","rowHeight","currentRowHeight","setMatrixInstances","_composition","createMatrices","matrixConfig","unsubscribeChangeListeners","retinalConfig","sanitizeRetinalConfig","retinalConf","confValue","getEncoder","groupType","fieldSanitizer","setAxisAndHeaders","placeholderInfo","getMatrices","_groupedDataModel","createRetinalAxes","setDomains","cornerMatrices","createHeaders","metaData","border","unionUnitDomains","registerDomainChangeListener","visual_group_props_defineProperty","visual_group_props_PROPS","cellRegistry","VisualGroup","visual_group_classCallCheck","visual_group_possibleConstructorReturn","visual_group_getPrototypeOf","componentSubRegistry","visual_group_assertThisInitialized","_selection","createUnitState","visual_group_helper_slicedToArray","createLayerState","setupChangeListeners","variable","findInGroup","channel","group_utils_this","facetType","projType","getRetinalAxes","getSimpleAxes","_this$resolver$getAll","visual_group_defineProperty","existingRemoveSet","select_toConsumableArray","firebolt_action_behaviour_map_defineProperty","action_behaviour_map_actionBehaviourMap","propagationBehaviourMap","_propagationBehaviour","firebolt_behaviour_effect_map_defineProperty","firebolt_behaviour_effect_map_behaviourEffectMap","propagationSideEffects","_propagationSideEffec","SCALE_FUNCTIONS","VALUE","canvasAlias","check","assembleModelFromIdentifiers","src_firebolt_helper_toConsumableArray","LegendFireBolt","_Firebolt","legend_firebolt_classCallCheck","legend_firebolt_possibleConstructorReturn","legend_firebolt_getPrototypeOf","legend_firebolt_inherits","legend_firebolt_createClass","behaviourName","getCriteriaFromData","firebolt_physical_defineProperty","physical_physicalActions","boundingBox","gradientDimensions","axisScale","rangeShifter","drag_defineProperty","getSelectionCriteria","selectionBoxMeasure","drawingInfMeasure","subjectStartPoint","gradientDimension","legendGradContainer","legendSelGroup","enterFn","getMousePos","boundingClientRect","selection_box_drag_defineProperty","fadeOut","brighten","LegendHighlighter","legend_highlighter_classCallCheck","legend_highlighter_possibleConstructorReturn","legend_highlighter_getPrototypeOf","legendContainer","resetLogicalSpace","title","_title","ALIGN","DEFAULT_MEASUREMENT","LEGEND_TITLE","borderStyle","borderColor","bounds","upper","ICON_MAP","getScaleInfo","scaleType","steps","scaleFn","getInterpolatedData","domainForLegend","interpolatedFn","getDomainBounds","domainBounds","domainLeg","ele","legend_helper_defineProperty","getScaleFactor","SimpleLegend","simple_legend_classCallCheck","_metaData","_fieldName","_labelManager","_cells","defaultMeasurement","_computedStyle","legendBehaviours","_canvasAlias","getItemMeasures","_labelManager$getOriS","effPadding","effBorder","effMargin","dataFromScale","titleSpace","getTitleSpace","titleHeight","titleWidth","labelSpaces","getLabelSpaces","_computeItemSpaces","computeItemSpaces","maxItemSpaces","textOrientation","itemSpaces","iconSpaces","maxIconWidth","labelSpace","itemSpace","iconSpace","titleSpaces","_this$measurement2","titleCreator","titleContainer","_this$config4","_this$measurement3","renderTitle","simple_legend_defineProperty","legendOrientation","position_config_defineProperty","_legendOrientation","datasets","itemContainerMeasures","getStepSpacesInfo","iconHeight","iconWidth","stepPadding","horizontal","vertical","positionConfig","_positionConfig","alignmentMap","_alignmentMap","itemStack","_itemStack","createLegendSkeleton","gradWidth","gradHeight","maxGradHeight","maxGradWidth","legendBody","legendItem","getItemContainers","legendInstance","positionObj","createItemSkeleton","itemSkeleton","alignClass","applyItemStyle","measureType","stepColorCheck","_context$measurement","renderIcon","defaultIcon","DiscreteLegend","_getScaleInfo","discrete_legend_toConsumableArray","discrete_legend_defineProperty","discrete_legend_get","discrete_legend_getPrototypeOf","renderDiscreteItem","_context$measurement2","_item$icon","text-align","getGradientDomain","accumulator","currentValue","MAX_VALUE","MIN_VALUE","legendGradSvg","legendGradCont","linearGradient","makeLinearGradient","legendRect","GradientLegend","gradient_legend_toConsumableArray","gradient_legend_defineProperty","newAxis","axisSpace","axisDomainLength","_legendGradientSvg","gradient_legend_get","gradient_legend_getPrototypeOf","renderGradient","_createLegendSkeleton","StepLegend","step_legend_toConsumableArray","step_legend_defineProperty","lowerBounds","upperBounds","step_legend_get","step_legend_getPrototypeOf","stepData","renderStepItem","_context$measurement3","_item$icon2","_positionConfig$posit","PADDING","BORDER","MARGIN","TITLE","TITLE_TEMPLATE_NOT_ALLOWED_TAGS","LEGEND_TYPE_MAP","constants_defineProperty","_LEGEND_TYPE_MAP","share","operators_construct","operators_toConsumableArray","strings","htmlCode","expLn","frag","createDocumentFragment","treeShakeNode","nodeType","Node","ELEMENT_NODE","tagName","_didIteratorError","_iteratorError","_step","_iterator","childNodes","err","canvasIterator","canvases","iteratorFn","cFn","canvas","visualGroup","matrixInstance","_throwback","actionModel","ActionModel","action_model_classCallCheck","_registrableComponents","registerPropagationBehaviourMap","dissociateBehaviour","_len5","_key5","dissociateSideEffect","policy","registrableComponents","mergedPolicy","aliases","comp","*","propagationPayload","propagationCanvas","crossInteractionPolicy","legend","minHeight","minCharacters","maxLines","verticalAlign","collapse","src_options","isInteger","minUnitWidth","minUnitHeight","oldConf","ROW_MATRIX_INDEX","2","COLUMN_MATRIX_INDEX","WIDTH","HEIGHT","CENTER","ROW_LEFT","ROW_RIGHT","COLUMN_BOTTOM","COLUMN_TOP","ROW_SPAN","COL_SPAN","ROW_ROOT","COLUMN_ROOT","GenericLayout","generic_layout_classCallCheck","_matrices","_centerMatrix","_mountPoint","DEFAULT_CONFIGURATION","grid_layout_defaults_defineProperty","_DEFAULT_CONFIGURATIO","_FieldNames$BORDER","FieldNames","DEFAULT_MEASUREMENTS","_DEFAULT_MEASUREMENTS","BLANK_BORDERS","columnFilter","previousRow","currentRow","prevCell","nextRow","prevRow","calcRowSpan","isNull","calcColSpan","mask","filteredRow","span_maker_toConsumableArray","cellSpanMaker","viewMatrix","spans","ridx","currSpan","applyBorders","borderType","applyRowBorders","showBorders","applyColBorders","renderMatrix","containerForMatrix","_cellSpanMaker","renderTable","rowData","findInPage","page","combineMatrices","isTransposed","joinedMatrix","utils_toConsumableArray","computeLogicalSpace","maxMeasures","_config$isTransposed","unitMeasures","_getMeasureInfo","getMeasureInfo","firstMeasure","secondMeasure","minMeasures","getMinMeasures","_logicalSpace","utils_defineProperty","valueItem","maxMeasure","firstMeasureValue","secondMeasureValue","valueArray","_item$space","fMeasure","sMeasure","createMatrixEachLevel","_arr$i","extraCellsRemover","beg","distribution","extraCellLengths","VisualMatrix","visual_matrix_classCallCheck","_lastLevelKey","_primaryMatrix","_secondaryMatrix","_maxMeasures","_availableSpace","_layoutMatrix","_tree","_createTree2","createTree","matrixTree","lastLevelKey","layoutMatrix","primaryMatrix","secondaryMatrix","breakPage","primaryMatrixLength","newMatrix","keyLength","heightMeasures","populateMaxMeasures","widthMeasures","calculateDepth","viewableMatrix","createViewPortMatrix","viewableMeasures","redistributeSpaces","childDepth","createMatrixInstances","matrixInfo","layout","breakPointer","_breakPointer","brokenMatrix","breakMatrix","nextLevel","removeExtraCells","RowVisualMatrix","row_matrix_classCallCheck","row_matrix_possibleConstructorReturn","row_matrix_getPrototypeOf","maxHeights","maxWidths","matrixInst","cellDimOptions","matrixIndex","_this2$getCellDimensi","getCellDimensions","widths","rowHeights","columnWidths","primary","secondary","begCellLen","endCellLen","remainaingAvailWidth","remainaingWidth","cWidths","conditions","maxPrioritySpace","availableWidth","currentWidth","prioritySpace","logicalWidths","getPriorityDistribution","mWidth","mHeight","redistributeViewSpaces","computeViewableSpaces","rHeights","gutter","spaceTakenByColumn","spaces","getDistributedHeight","heightWithoutGutter","distSum","gutterSum","availableHeight","colLen","distHeight","borderWidth","colHeight","colWidth","heights","ColumnVisualMatrix","column_matrix_classCallCheck","column_matrix_possibleConstructorReturn","column_matrix_getPrototypeOf","remainaingHeight","heightDist","divider","spaceTakenByRow","getDistributedWidth","layoutConfig","distWidth","rowLen","oldLogicalSpace","heightDistribution","setViewSpaces","pointerType","viewSpaces","pointer","computations_defineProperty","GridLayout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","_layoutId","_viewInfo","defaultViewInfo","generateVisualMatrices","begColCells","endColCells","gutterSpace","_top","layout_helper_slicedToArray","_center","_bottom","layout_helper_toConsumableArray","RowMatrix","ColumnMatrix","centerMatrix","layout_get","computeLayoutMeasurements","_layout$measurement","rowMatrixWidth","getMatrixMeasurement","maxRowMatrixWidth","columnMatrixWidth","maxColumnMatrixHeight","columnViewPages","getViewableSpaces","columnViewSpace","columnPointer","columnMatrixHeight","rowMatrixHeight","rowViewableSpaces","computations_toConsumableArray","rowWidthsPrimary","rowWidthsSecondary","columnViewableSpaces","columnHeightsPrimary","columnHeightsSecondary","setViewInformation","pageNumber","pageType","totalPages","viewInfo","viewMatricesInfo","layout_defineProperty","renderGrid","currentPage","rowPointer","getViewMatrices","rowMatrices","getViewableMatrices","columnMatrices","centralMatrixPointer","rowMatrixLen","columnMatrixLen","rowPages","columnPages","layoutDimensions","getViewMeasurements","_layout$config3","rowSpaces","leftWidth","rightWidth","colSpaces","topHeight","bottomHeight","centerHeight","viewWidth","viewHeight","renderMatrices","TransactionSupport","INTERFACE_IMPl","CLASSPREFIX","HEADER","DATA","AXES","FACET_BY_FIELDS","FIELDS","TRANSFORM","LAYER_DEF","CONFIG","DETAIL_FIELDS","TEXT","AXIS","GEOM","BLANK","SimpleCell","simple_cell_classCallCheck","enums_defaults_defineProperty","_DEFAULT_CONFIG","_CONSTANTS$MARGIN","CONSTANTS","DEFAULT_PROPS","minSpacing","src_props_defineProperty","visual_cell_src_props_PROPS","caption","smartText","axis_cell_classCallCheck","axis_cell_possibleConstructorReturn","axis_cell_getPrototypeOf","_availHeight","_availWidth","axis_cell_assertThisInitialized","computeAxisSpace","logicalWidth","logicalHeight","spaceFixer","_axis$getLogicalSpace","wrapperDiv","blank_cell_classCallCheck","blank_cell_possibleConstructorReturn","blank_cell_getPrototypeOf","blank_cell_assertThisInitialized","setSmartText","_context$minSpacing","minHeightSpace","minWidthSpace","paddedHeight","paddedWidth","text_cell_classCallCheck","text_cell_possibleConstructorReturn","text_cell_getPrototypeOf","_className","text_cell_assertThisInitialized","computeTextSpace","_context$minSpacing2","minText","_minTextSpace","smartSpace","textAlign","vAlign","_this$smartText","translation","middle","geom_cell_classCallCheck","geom_cell_possibleConstructorReturn","geom_cell_getPrototypeOf","_unit","_datamodel","_facetByFields","_transform","_caption","geom_cell_assertThisInitialized","lockModel","unlockModel","captionSpace","computeGeomSpace","getCaptionSpace","captionDom","DEFAULT_PLACEHOLDERS","src_defaults_defineProperty","_DEFAULT_PLACEHOLDERS","createHeading","cellType","_minTickDiff","legendInitializer","legendConfig","prevLegends","legends","headerHeight","legendCreator","LegendCls","dataset","scaleProps","_scale$config","stepMapper","dataInfo","legendMeasures","getGroupByData","setLegendMeasures","LayoutComponent","layoutComponent_classCallCheck","_boundBox","_renderAt","_alignWith","_alignment","_componentName","DummyComponent","newDimensions","renderAt","component","componentName","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_CLASS_NAME","NODE_PREFIX","DefinitionModel","definitionModel_classCallCheck","_host","host","_cut","cut","_ratioWeight","ratioWeight","_preferred","preferred","_lanes","lanes","_remainingHeight","_remainingWidth","remainingHeight","remainingWidth","getNodeId","_uid","yExtraSpace","smallestHeight","getCutType","smallestExtraHeightHorizontally","MAX_SAFE_INTEGER","containerHeight","hostHeight","xExtraSpace","smallestWidth","smallestExtraWidthVertically","containerWidth","hostWidth","createPlaceHolderComponent","placeComponent","definitionModel","leftOvercomponentRationWidth","isPreferred","isGridComponent","componentRatioWidth","leftHeight","_component$getLogical","componentHeight","componentWidth","firstLaneConfig","firstLane","secondLane","tree_classCallCheck","_parentCut","_this$_children","tree_toConsumableArray","parentCut","bound","nodeconfig","searchNode","childNode","nodeId","deleteSearchNode","LayoutModel","measurements","layout_model_classCallCheck","_measurements","_root","setBoundBox","addChildren","lane","allocateBoundingBox","totalWeight","carry","lastSibling","ratio","setHostSpatialConfig","setHostPosition","negotiateDimension","alteredDim","nonAlteredDim","cumultiveExtraSpaceAmt","childrenLength","extraSpaceAmt","computePosition","determineBoundBox","bb","_lastSibling$boundBox","_left","_height","_width","_instance$parent$boun","setSpatialConfig","Utils","utils_classCallCheck","utils_createClass","isDOMElement","getID","getElement","findContainer","coordinate","removeDiv","divId","DataPoint","data_point_classCallCheck","DataParser","data_parser_classCallCheck","data_parser_createClass","defaultDataPointLogic","nodepoints","getnodePoints","datapoint","HTMLDataAdapter","_DataParser","html_data_classCallCheck","html_data_possibleConstructorReturn","html_data_getPrototypeOf","html_data_inherits","html_data_createClass","getCoordinates","html_data_get","Renderer","renderer_classCallCheck","renderer_createClass","initRenderer","__logicalTree","HTMLRenderer","_Renderer","html_renderer_classCallCheck","html_renderer_possibleConstructorReturn","html_renderer_getPrototypeOf","_coordinates","html_renderer_inherits","html_renderer_createClass","createhtml","mainDiv","html_renderer_get","parentDiv","createAndCustomiseParent","hasHost","createAndPositionDiv","_objectSpread","div","coordinates","findNode","nodeID","renderer","renderHTML","DrawingManager","drawing_manager_classCallCheck","_componentMap","componentMap","_layoutClassName","layoutClassName","_renderer","drawing_manager_createClass","drawLayout","resolveAligment","componentData","alignWith","newNodeConfig","refNode","alignment","drawComponent","DefinitionManager","definition_manager_classCallCheck","_prioritySequence","_totalHeight","_totalWidth","_targetComponentMap","prepareTargetComponentMap","targetComponentMap","canvasComponent","tempDefModel","componentRef","getComponent","placeGridComponent","gridComponents","iscolumnPreffered","_placeComponent","rowpreffred","LayoutDef","layout_def_classCallCheck","_layoutDefinition","layout_def_createClass","addComponent","layoutDefinition","addMultipleComponent","componentArray","sanitizedDefinition","sanitizeConfig","hostObj","hostID","childHost","resetComponentMap","LayoutManager","layout_manager_classCallCheck","_dimension","_skeletonType","skeletonType","_layoutDef","_drawingManager","_rootNodeID","con","resetNode","updateNode","compute","_layout","calLayOutDef","_context$dimension","layoutDef","prioritySequence","generateConfigModel","negotiate","broadcast","layoutComponents","componentArr","compo","MuzeComponent","_this$boundBox","HeaderComponent","headerComponent_classCallCheck","headerComponent_possibleConstructorReturn","headerComponent_getPrototypeOf","setParams","cont","renderHeader","LegendComponent","legendComponent_classCallCheck","legendComponent_possibleConstructorReturn","legendComponent_getPrototypeOf","legendSpace","sectionComponents","_this$params$config$m","_this$params$config","legendMount","legWidth","legHeight","sections","currHeight","currWidth","legendInfo","leg","legendHeight","legendWidth","renderLegend","MatrixComponent","matrix_component_classCallCheck","matrix_component_possibleConstructorReturn","matrix_component_getPrototypeOf","GridComponent","grid_component_classCallCheck","grid_component_possibleConstructorReturn","grid_component_getPrototypeOf","_this$component$viewI","matrixDim","matrixName","updateWrapper","matrixWrapper","_this$component$0$0$b","sanitizeGrid","TITLE_CONFIG","SUB_TITLE_CONFIG","LAYOUT_ALIGN","getRenderDetails","_mount$getBoundingCli","heightAttr","widthAttr","visGroup","_visGroup$placeholder","titleConfig","subtitleConfig","subtitle","legendPosition","layoutArrangement","arrangeComponents","_titleLayouts","titleLayouts","component_resolver_defineProperty","legendLayouts","titlePosition","subtitlePosition","availableHeightForCanvas","availableWidthForCanvas","_createHeaders","canvasHeight","canvasWidth","headerOptions","resolveTitleSubTitleContent","rawContent","escapeHTML","htmlEscapes","&","<",">","\"","'","/","_createHeading","createLegend","getLegendSpace","mountSpace","canvas_local_options_defineProperty","_localOptions","canvasOptions","_canvasOptions","_sanitized","sub","setupChangeListener","allOptions","_allOptions","canvas_helper_toConsumableArray","nameSpaceProps","equalityChecker","option","updateChecker","dispatchProps","_cachedProps","notifyAnimationEnd","promises","cellArr","lifeCycle","animDonePromises","animationDone","axisArr","applyInteractionPolicy","interactionPolicy","_interactionPolicy","_crossInteractionPolicy","unitFireBolt","changeBehaviourStateOnPropagation","changeSideEffectStateOnPropagation","createLayoutManager","defaultInteractionPolicy","isMeasure","group_firebolt_toConsumableArray","getFieldsFromChannel","colDim","fieldInf","unitColFacets","equals","unitRowFacets","propagateWith","defaultCrossInteractionPolicy","propagationCanvasAlias","propagationUnit","GroupFireBolt","group_firebolt_classCallCheck","group_firebolt_possibleConstructorReturn","group_firebolt_getPrototypeOf","behaviouralAction","validFields","APP_INITIAL_STATE","app","Canvas","globalDependencies","canvas_classCallCheck","canvas_possibleConstructorReturn","canvas_getPrototypeOf","canvas_defineProperty","canvas_slicedToArray","canvas_assertThisInitialized","_layoutManager","initedComponents","initCanvas","createGroupState","_VisualGroup$getState2","canvas_helper_slicedToArray","localState","register","renderDetails","prepareLayout","triggerReflow","renderLayout","layoutManager","grid","titleWrapper","titleCell","layout_maker_objectSpread","subtitleWrapper","subtitleCell","colorLegendWrapper","gridWrapper","registerComponents","setLayoutInfForUnits","getBoundBox","getRootNodeId","setLabelRotationForAxes","getAxes","initialSettings","regEntry","COMPONENTS","SUBREGISTRIES","regObj","globalCache","defaultRegistry","overrideRegistryDefinitions","overrideRegistry","muze","_transactor2","muze_slicedToArray","env","globalStore","componentSubRegistryDef","settings","withSettings","enableChainedTransaction","transactionModel","transactionEndpoint","transactionItems","_slicedToArray","Smartlabel","SideEffects","standards","Behaviours","pkg","operators","utils","lookupWhat","lookupDetails","lookupTarget","deps"],"mappings":"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","file":"muze.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"muze\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"muze\"] = factory();\n\telse\n\t\troot[\"muze\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DataModel\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DataModel\"] = factory();\n\telse\n\t\troot[\"DataModel\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const DataModel = require('./export');\n\nmodule.exports = DataModel.default ? DataModel.default : DataModel;\n","/**\n * DataFormat Enum defines the format of the input data.\n * Based on the format of the data the respective adapter is loaded.\n *\n * @readonly\n * @enum {string}\n */\nconst DataFormat = {\n    FLAT_JSON: 'FlatJSON',\n    DSV_STR: 'DSVStr',\n    DSV_ARR: 'DSVArr',\n    AUTO: 'Auto'\n};\n\nexport default DataFormat;\n","/**\n * DimensionSubtype enum defines the sub types of the Dimensional Field.\n *\n * @readonly\n * @enum {string}\n */\nconst DimensionSubtype = {\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    GEO: 'geo',\n    BINNED: 'binned'\n};\n\nexport default DimensionSubtype;\n","/**\n * MeasureSubtype enum defines the sub types of the Measure Field.\n *\n * @readonly\n * @enum {string}\n */\nconst MeasureSubtype = {\n    CONTINUOUS: 'continuous'\n};\n\nexport default MeasureSubtype;\n","/**\n * FieldType enum defines the high level field based on which visuals are controlled.\n * Measure in a high level is numeric field and Dimension in a high level is string field.\n *\n * @readonly\n * @enum {string}\n */\nconst FieldType = {\n    MEASURE: 'measure',\n    DIMENSION: 'dimension'\n};\n\nexport default FieldType;\n","/**\n * Filtering mode enum defines the filering modes of DataModel.\n *\n * @readonly\n * @enum {string}\n */\nconst FilteringMode = {\n    NORMAL: 'normal',\n    INVERSE: 'inverse',\n    ALL: 'all'\n};\n\nexport default FilteringMode;\n","/**\n * Creates a JS native date object from input\n *\n * @param {string | number | Date} date Input using which date object to be created\n * @return {Date} : JS native date object\n */\nfunction convertToNativeDate (date) {\n    if (date instanceof Date) {\n        return date;\n    }\n\n    return new Date(date);\n}\n/**\n * Apply padding before a number if its less than 1o. This is used when constant digit's number to be returned\n * between 0 - 99\n *\n * @param {number} n Input to be padded\n * @return {string} Padded number\n */\nfunction pad (n) {\n    return (n < 10) ? (`0${n}`) : n;\n}\n/*\n * DateFormatter utility to convert any date format to any other date format\n * DateFormatter parse a date time stamp specified by a user abiding by rules which are defined\n * by user in terms of token. It creates JS native date object from the user specified format.\n * That native date can also be displayed\n * in any specified format.\n * This utility class only takes care of format conversion only\n */\n\n/*\n * Escapes all the special character that are used in regular expression.\n * Like\n * RegExp.escape('sgfd-$') // Output: sgfd\\-\\$\n *\n * @param text {String} : text which is to be escaped\n */\nRegExp.escape = function (text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * DateTimeFormatter class to convert any user format of date time stamp to any other format\n * of date time stamp.\n *\n * @param {string} format Format of the date given. For the above date,\n * 'year: %Y, month: %b, day: %d'.\n * @class\n */\n/* istanbul ignore next */ function DateTimeFormatter (format) {\n    this.format = format;\n    this.dtParams = undefined;\n    this.nativeDate = undefined;\n}\n\n// The identifier of the tokens\nDateTimeFormatter.TOKEN_PREFIX = '%';\n\n// JS native Date constructor takes the date params (year, month, etc) in a certail sequence.\n// This defines the sequence of the date parameters in the constructor.\nDateTimeFormatter.DATETIME_PARAM_SEQUENCE = {\n    YEAR: 0,\n    MONTH: 1,\n    DAY: 2,\n    HOUR: 3,\n    MINUTE: 4,\n    SECOND: 5,\n    MILLISECOND: 6\n};\n\n/*\n * This is a default number parsing utility. It tries to parse a number in integer, if parsing is unsuccessful, it\n * gives back a default value.\n *\n * @param: defVal {Number} : Default no if the parsing to integer is not successful\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be parsed.\n */\nDateTimeFormatter.defaultNumberParser = function (defVal) {\n    return function (val) {\n        let parsedVal;\n        if (isFinite(parsedVal = parseInt(val, 10))) {\n            return parsedVal;\n        }\n\n        return defVal;\n    };\n};\n\n/*\n * This is a default number range utility. It tries to find an element in the range. If not found it returns a\n * default no as an index.\n *\n * @param: range {Array} : The list which is to be serached\n * @param: defVal {Number} : Default no if the serach and find does not return anything\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be found\n */\nDateTimeFormatter.defaultRangeParser = function (range, defVal) {\n    return (val) => {\n        let i;\n        let l;\n\n        if (!val) { return defVal; }\n\n        const nVal = val.toLowerCase();\n\n        for (i = 0, l = range.length; i < l; i++) {\n            if (range[i].toLowerCase() === nVal) {\n                return i;\n            }\n        }\n\n        if (i === undefined) {\n            return defVal;\n        }\n        return null;\n    };\n};\n\n/*\n * Defines the tokens which are supporter by the dateformatter. Using this definitation a value gets extracted from\n * the user specifed date string. This also formats the value for display purpose from native JS date.\n * The definition of each token contains the following named properties\n * {\n *     %token_name% : {\n *         name: name of the token, this is used in reverse lookup,\n *         extract: a function that returns the regular expression to extract that piece of information. All the\n *                  regex should be gouped by using ()\n *         parser: a function which receives value extracted by the above regex and parse it to get the date params\n *         formatter: a formatter function that takes milliseconds or JS Date object and format the param\n *                  represented by the token only.\n *     }\n * }\n *\n * @return {Object} : Definition of the all the supported tokens.\n */\nDateTimeFormatter.getTokenDefinitions = function () {\n    const daysDef = {\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ],\n        long: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ]\n    };\n    const monthsDef = {\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ],\n        long: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ]\n    };\n\n    const definitions = {\n        H: {\n            // 24 hours format\n            name: 'H',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n\n                return d.getHours().toString();\n            }\n        },\n        l: {\n            // 12 hours format\n            name: 'l',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours() % 12;\n\n                return (hours === 0 ? 12 : hours).toString();\n            }\n        },\n        p: {\n            // AM or PM\n            name: 'p',\n            index: 3,\n            extract () { return '(AM|PM)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'AM' : 'PM');\n            }\n        },\n        P: {\n            // am or pm\n            name: 'P',\n            index: 3,\n            extract () { return '(am|pm)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'am' : 'pm');\n            }\n        },\n        M: {\n            // Two digit minutes 00 - 59\n            name: 'M',\n            index: 4,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const mins = d.getMinutes();\n\n                return pad(mins);\n            }\n        },\n        S: {\n            // Two digit seconds 00 - 59\n            name: 'S',\n            index: 5,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const seconds = d.getSeconds();\n\n                return pad(seconds);\n            }\n        },\n        K: {\n            // Milliseconds\n            name: 'K',\n            index: 6,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const ms = d.getMilliseconds();\n\n                return ms.toString();\n            }\n        },\n        a: {\n            // Short name of day, like Mon\n            name: 'a',\n            index: 2,\n            extract () { return `(${daysDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.short[day]).toString();\n            }\n        },\n        A: {\n            // Long name of day, like Monday\n            name: 'A',\n            index: 2,\n            extract () { return `(${daysDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.long[day]).toString();\n            }\n        },\n        e: {\n            // 8 of March, 11 of November\n            name: 'e',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return day.toString();\n            }\n        },\n        d: {\n            // 08 of March, 11 of November\n            name: 'd',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return pad(day);\n            }\n        },\n        b: {\n            // Short month, like Jan\n            name: 'b',\n            index: 1,\n            extract () { return `(${monthsDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.short[month]).toString();\n            }\n        },\n        B: {\n            // Long month, like January\n            name: 'B',\n            index: 1,\n            extract () { return `(${monthsDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.long[month]).toString();\n            }\n        },\n        m: {\n            // Two digit month of year like 01 for January\n            name: 'm',\n            index: 1,\n            extract () { return '(\\\\d+)'; },\n            parser (val) { return DateTimeFormatter.defaultNumberParser()(val) - 1; },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return pad(month + 1);\n            }\n        },\n        y: {\n            // Short year like 90 for 1990\n            name: 'y',\n            index: 0,\n            extract () { return '(\\\\d{2})'; },\n            parser (val) {\n                if (val) {\n                    const l = val.length;\n                    val = val.substring(l - 2, l);\n                }\n                let parsedVal = DateTimeFormatter.defaultNumberParser()(val);\n                let presentYear = Math.trunc(((new Date()).getFullYear()) / 100);\n                if (parsedVal instanceof Number) {\n                    parsedVal = (presentYear * 100) + parsedVal;\n                } else {\n                    parsedVal = `${presentYear}${parsedVal}`;\n                }\n                return parsedVal;\n            },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                let year = d.getFullYear().toString();\n                let l;\n\n                if (year) {\n                    l = year.length;\n                    year = year.substring(l - 2, l);\n                }\n\n                return year;\n            }\n        },\n        Y: {\n            // Long year like 1990\n            name: 'Y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const year = d.getFullYear().toString();\n\n                return year;\n            }\n        }\n    };\n\n    return definitions;\n};\n\n/*\n * The tokens which works internally is not user friendly in terms of memorizing the names. This gives a formal\n * definition to the informal notations.\n *\n * @return {Object} : Formal definition of the tokens\n */\nDateTimeFormatter.getTokenFormalNames = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n\n    return {\n        HOUR: definitions.H,\n        HOUR_12: definitions.l,\n        AMPM_UPPERCASE: definitions.p,\n        AMPM_LOWERCASE: definitions.P,\n        MINUTE: definitions.M,\n        SECOND: definitions.S,\n        SHORT_DAY: definitions.a,\n        LONG_DAY: definitions.A,\n        DAY_OF_MONTH: definitions.e,\n        DAY_OF_MONTH_CONSTANT_WIDTH: definitions.d,\n        SHORT_MONTH: definitions.b,\n        LONG_MONTH: definitions.B,\n        MONTH_OF_YEAR: definitions.m,\n        SHORT_YEAR: definitions.y,\n        LONG_YEAR: definitions.Y\n    };\n};\n\n/*\n * This defines the rules and declares dependencies that resolves a date parameter (year, month etc) from\n * the date time parameter array.\n *\n * @return {Object} : An object that contains dependencies and a resolver function. The dependencies values are fed\n *                  to the resolver function in that particular sequence only.\n */\nDateTimeFormatter.tokenResolver = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const defaultResolver = (...args) => { // eslint-disable-line require-jsdoc\n        let i = 0;\n        let arg;\n        let targetParam;\n        const l = args.length;\n\n        for (; i < l; i++) {\n            arg = args[i];\n            if (args[i]) {\n                targetParam = arg;\n            }\n        }\n\n        if (!targetParam) { return null; }\n\n        return targetParam[0].parser(targetParam[1]);\n    };\n\n    return {\n        YEAR: [definitions.y, definitions.Y,\n            defaultResolver\n        ],\n        MONTH: [definitions.b, definitions.B, definitions.m,\n            defaultResolver\n        ],\n        DAY: [definitions.a, definitions.A, definitions.e, definitions.d,\n            defaultResolver\n        ],\n        HOUR: [definitions.H, definitions.l, definitions.p, definitions.P,\n            function (hourFormat24, hourFormat12, ampmLower, ampmUpper) {\n                let targetParam;\n                let amOrpm;\n                let isPM;\n                let val;\n\n                if (hourFormat12 && (amOrpm = (ampmLower || ampmUpper))) {\n                    if (amOrpm[0].parser(amOrpm[1]) === 'pm') {\n                        isPM = true;\n                    }\n\n                    targetParam = hourFormat12;\n                } else if (hourFormat12) {\n                    targetParam = hourFormat12;\n                } else {\n                    targetParam = hourFormat24;\n                }\n\n                if (!targetParam) { return null; }\n\n                val = targetParam[0].parser(targetParam[1]);\n                if (isPM) {\n                    val += 12;\n                }\n                return val;\n            }\n        ],\n        MINUTE: [definitions.M,\n            defaultResolver\n        ],\n        SECOND: [definitions.S,\n            defaultResolver\n        ]\n    };\n};\n\n/*\n * Finds token from the format rule specified by a user.\n * @param format {String} : The format of the input date specified by the user\n * @return {Array} : An array of objects which contains the available token and their occurence index in the format\n */\nDateTimeFormatter.findTokens = function (format) {\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenLiterals = Object.keys(definitions);\n    const occurrence = [];\n    let i;\n    let forwardChar;\n\n    while ((i = format.indexOf(tokenPrefix, i + 1)) >= 0) {\n        forwardChar = format[i + 1];\n        if (tokenLiterals.indexOf(forwardChar) === -1) { continue; }\n\n        occurrence.push({\n            index: i,\n            token: forwardChar\n        });\n    }\n\n    return occurrence;\n};\n\n/*\n * Format any JS date to a specified date given by user.\n *\n * @param date {Number | Date} : The date object which is to be formatted\n * @param format {String} : The format using which the date will be formatted for display\n */\nDateTimeFormatter.formatAs = function (date, format) {\n    const nDate = convertToNativeDate(date);\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    let formattedStr = String(format);\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    let token;\n    let formattedVal;\n    let i;\n    let l;\n\n    for (i = 0, l = occurrence.length; i < l; i++) {\n        token = occurrence[i].token;\n        formattedVal = definitions[token].formatter(nDate);\n        formattedStr = formattedStr.replace(new RegExp(tokenPrefix + token, 'g'), formattedVal);\n    }\n\n    return formattedStr;\n};\n\n/*\n * Parses the user specified date string to extract the date time params.\n *\n * @return {Array} : Value of date time params in an array [year, month, day, hour, minutes, seconds, milli]\n */\nDateTimeFormatter.prototype.parse = function (dateTimeStamp, options) {\n    const tokenResolver = DateTimeFormatter.tokenResolver();\n    const dtParams = this.extractTokenValue(dateTimeStamp);\n    const dtParamSeq = DateTimeFormatter.DATETIME_PARAM_SEQUENCE;\n    const noBreak = options && options.noBreak;\n    const dtParamArr = [];\n    const args = [];\n    let resolverKey;\n    let resolverParams;\n    let resolverFn;\n    let val;\n    let i;\n    let param;\n    let resolvedVal;\n    let l;\n\n    for (resolverKey in tokenResolver) {\n        if (!{}.hasOwnProperty.call(tokenResolver, resolverKey)) { continue; }\n\n        args.length = 0;\n        resolverParams = tokenResolver[resolverKey];\n        resolverFn = resolverParams.splice(resolverParams.length - 1, 1)[0];\n\n        for (i = 0, l = resolverParams.length; i < l; i++) {\n            param = resolverParams[i];\n            val = dtParams[param.name];\n\n            if (val === undefined) {\n                args.push(null);\n            } else {\n                args.push([param, val]);\n            }\n        }\n\n        resolvedVal = resolverFn.apply(this, args);\n\n        if ((resolvedVal === undefined || resolvedVal === null) && !noBreak) {\n            break;\n        }\n\n        dtParamArr[dtParamSeq[resolverKey]] = resolvedVal;\n    }\n\n    return dtParamArr;\n};\n\n/*\n * Extract the value of the token from user specified date time string.\n *\n * @return {Object} : An key value pair which contains the tokens as key and value as pair\n */\nDateTimeFormatter.prototype.extractTokenValue = function (dateTimeStamp) {\n    const format = this.format;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const tokenObj = {};\n\n    let lastOccurrenceIndex;\n    let occObj;\n    let occIndex;\n    let targetText;\n    let regexFormat;\n\n    let l;\n    let i;\n\n    regexFormat = String(format);\n\n    const tokenArr = occurrence.map(obj => obj.token);\n    const occurrenceLength = occurrence.length;\n    for (i = occurrenceLength - 1; i >= 0; i--) {\n        occIndex = occurrence[i].index;\n\n        if (occIndex + 1 === regexFormat.length - 1) {\n            lastOccurrenceIndex = occIndex;\n            continue;\n        }\n\n        if (lastOccurrenceIndex === undefined) {\n            lastOccurrenceIndex = regexFormat.length;\n        }\n\n        targetText = regexFormat.substring(occIndex + 2, lastOccurrenceIndex);\n        regexFormat = regexFormat.substring(0, occIndex + 2) +\n            RegExp.escape(targetText) +\n            regexFormat.substring(lastOccurrenceIndex, regexFormat.length);\n\n        lastOccurrenceIndex = occIndex;\n    }\n\n    for (i = 0; i < occurrenceLength; i++) {\n        occObj = occurrence[i];\n        regexFormat = regexFormat.replace(tokenPrefix + occObj.token, definitions[occObj.token].extract());\n    }\n\n    const extractValues = dateTimeStamp.match(new RegExp(regexFormat)) || [];\n    extractValues.shift();\n\n    for (i = 0, l = tokenArr.length; i < l; i++) {\n        tokenObj[tokenArr[i]] = extractValues[i];\n    }\n    return tokenObj;\n};\n\n/*\n * Give back the JS native date formed from  user specified date string\n *\n * @return {Date} : Native JS Date\n */\nDateTimeFormatter.prototype.getNativeDate = function (dateTimeStamp) {\n    if (dateTimeStamp instanceof Date) {\n        return dateTimeStamp;\n    } else if (isFinite(dateTimeStamp) && !!this.format) {\n        return new Date(dateTimeStamp);\n    }\n\n    const dtParams = this.dtParams = this.parse(dateTimeStamp);\n\n    dtParams.unshift(null);\n    this.nativeDate = new (Function.prototype.bind.apply(Date, dtParams))();\n    return this.nativeDate;\n};\n\n/*\n * Represents JS native date to a user specified format.\n *\n * @param format {String} : The format according to which the date is to be represented\n * @return {String} : The formatted date string\n */\nDateTimeFormatter.prototype.formatAs = function (format, dateTimeStamp) {\n    let nativeDate;\n\n    if (dateTimeStamp) {\n        nativeDate = this.nativeDate = this.getNativeDate(dateTimeStamp);\n    } else if (!(nativeDate = this.nativeDate)) {\n        nativeDate = this.getNativeDate(dateTimeStamp);\n    }\n\n    return DateTimeFormatter.formatAs(nativeDate, format);\n};\n\nexport { DateTimeFormatter as default };\n","/**\n * The utility function to calculate major column.\n *\n * @param {Object} store - The store object.\n * @return {Function} Returns the push function.\n */\nexport default (store) => {\n    let i = 0;\n    return (...fields) => {\n        fields.forEach((val, fieldIndex) => {\n            if (!(store[fieldIndex] instanceof Array)) {\n                store[fieldIndex] = Array.from({ length: i });\n            }\n            store[fieldIndex].push(val);\n        });\n        i++;\n    };\n};\n","/* eslint-disable */\nconst OBJECTSTRING = 'object';\nconst objectToStrFn = Object.prototype.toString;\nconst objectToStr = '[object Object]';\nconst arrayToStr = '[object Array]';\n\nfunction checkCyclicRef(obj, parentArr) {\n    let i = parentArr.length;\n    let bIndex = -1;\n\n    while (i) {\n        if (obj === parentArr[i]) {\n            bIndex = i;\n            return bIndex;\n        }\n        i -= 1;\n    }\n\n    return bIndex;\n}\n\nfunction merge(obj1, obj2, skipUndef, tgtArr, srcArr) {\n    var item,\n        srcVal,\n        tgtVal,\n        str,\n        cRef;\n    // check whether obj2 is an array\n    // if array then iterate through it's index\n    // **** MOOTOOLS precution\n\n    if (!srcArr) {\n        tgtArr = [obj1];\n        srcArr = [obj2];\n    }\n    else {\n        tgtArr.push(obj1);\n        srcArr.push(obj2);\n    }\n\n    if (obj2 instanceof Array) {\n        for (item = 0; item < obj2.length; item += 1) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (typeof tgtVal !== OBJECTSTRING) {\n                if (!(skipUndef && tgtVal === undefined)) {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                    srcVal = obj1[item] = tgtVal instanceof Array ? [] : {};\n                }\n                cRef = checkCyclicRef(tgtVal, srcArr);\n                if (cRef !== -1) {\n                    srcVal = obj1[item] = tgtArr[cRef];\n                }\n                else {\n                    merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                }\n            }\n        }\n    }\n    else {\n        for (item in obj2) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (tgtVal !== null && typeof tgtVal === OBJECTSTRING) {\n                // Fix for issue BUG: FWXT-602\n                // IE < 9 Object.prototype.toString.call(null) gives\n                // '[object Object]' instead of '[object Null]'\n                // that's why null value becomes Object in IE < 9\n                str = objectToStrFn.call(tgtVal);\n                if (str === objectToStr) {\n                    if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                        srcVal = obj1[item] = {};\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else if (str === arrayToStr) {\n                    if (srcVal === null || !(srcVal instanceof Array)) {\n                        srcVal = obj1[item] = [];\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (skipUndef && tgtVal === undefined) {\n                    continue;\n                }\n                obj1[item] = tgtVal;\n            }\n        }\n    }\n    return obj1;\n}\n\n\nfunction extend2 (obj1, obj2, skipUndef) {\n    //if none of the arguments are object then return back\n    if (typeof obj1 !== OBJECTSTRING && typeof obj2 !== OBJECTSTRING) {\n        return null;\n    }\n\n    if (typeof obj2 !== OBJECTSTRING || obj2 === null) {\n        return obj1;\n    }\n\n    if (typeof obj1 !== OBJECTSTRING) {\n        obj1 = obj2 instanceof Array ? [] : {};\n    }\n    merge(obj1, obj2, skipUndef);\n    return obj1;\n}\n\nexport { extend2 as default };\n","import { DataFormat } from '../enums';\n\n/**\n * Checks whether the value is an array.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an array otherwise returns false.\n */\nexport function isArray (val) {\n    return Array.isArray(val);\n}\n\n/**\n * Checks whether the value is an object.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an object otherwise returns false.\n */\nexport function isObject (val) {\n    return val === Object(val);\n}\n\n/**\n * Checks whether the value is a string value.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is a string value otherwise returns false.\n */\nexport function isString (val) {\n    return typeof val === 'string';\n}\n\n/**\n * Checks whether the value is callable.\n *\n * @param {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is callable otherwise returns false.\n */\nexport function isCallable (val) {\n    return typeof val === 'function';\n}\n\n/**\n * Returns the unique values from the input array.\n *\n * @param {Array} data - The input array.\n * @return {Array} Returns a new array of unique values.\n */\nexport function uniqueValues (data) {\n    return [...new Set(data)];\n}\n\nexport const getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function isArrEqual(arr1, arr2) {\n    if (!isArray(arr1) || !isArray(arr2)) {\n        return arr1 === arr2;\n    }\n\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * It is the default number format function for the measure field type.\n *\n * @param {any} val - The input value.\n * @return {number} Returns a number value.\n */\nexport function formatNumber(val) {\n    return val;\n}\n\n/**\n * Returns the detected data format.\n *\n * @param {any} data - The input data to be tested.\n * @return {string} Returns the data format name.\n */\nexport const detectDataFormat = (data) => {\n    if (isString(data)) {\n        return DataFormat.DSV_STR;\n    } else if (isArray(data) && isArray(data[0])) {\n        return DataFormat.DSV_ARR;\n    } else if (isArray(data) && (data.length === 0 || isObject(data[0]))) {\n        return DataFormat.FLAT_JSON;\n    }\n    return null;\n};\n","import { FieldType } from './enums';\nimport { getUniqueId } from './utils';\n\nconst fieldStore = {\n    data: {},\n\n    createNamespace (fieldArr, name) {\n        const dataId = name || getUniqueId();\n\n        this.data[dataId] = {\n            name: dataId,\n            fields: fieldArr,\n\n            fieldsObj () {\n                let fieldsObj = this._cachedFieldsObj;\n\n                if (!fieldsObj) {\n                    fieldsObj = this._cachedFieldsObj = {};\n                    this.fields.forEach((field) => {\n                        fieldsObj[field.name()] = field;\n                    });\n                }\n                return fieldsObj;\n            },\n            getMeasure () {\n                let measureFields = this._cachedMeasure;\n\n                if (!measureFields) {\n                    measureFields = this._cachedMeasure = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.MEASURE) {\n                            measureFields[field.name()] = field;\n                        }\n                    });\n                }\n                return measureFields;\n            },\n            getDimension () {\n                let dimensionFields = this._cachedDimension;\n\n                if (!this._cachedDimension) {\n                    dimensionFields = this._cachedDimension = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.DIMENSION) {\n                            dimensionFields[field.name()] = field;\n                        }\n                    });\n                }\n                return dimensionFields;\n            },\n        };\n        return this.data[dataId];\n    },\n};\n\nexport default fieldStore;\n","/**\n * The wrapper class on top of the primitive value of a field.\n *\n * @todo Need to have support for StringValue, NumberValue, DateTimeValue\n * and GeoValue. These types should expose predicate API mostly.\n */\nclass Value {\n\n  /**\n   * Creates new Value instance.\n   *\n   * @param {*} val - the primitive value from the field cell.\n   * @param {string | Field} field - The field from which the value belongs.\n   */\n    constructor (val, field) {\n        Object.defineProperty(this, '_value', {\n            enumerable: false,\n            configurable: false,\n            writable: false,\n            value: val\n        });\n\n        this.field = field;\n    }\n\n  /**\n   * Returns the field value.\n   *\n   * @return {*} Returns the current value.\n   */\n    get value () {\n        return this._value;\n    }\n\n  /**\n   * Converts to human readable string.\n   *\n   * @override\n   * @return {string} Returns a human readable string of the field value.\n   *\n   */\n    toString () {\n        return String(this.value);\n    }\n\n  /**\n   * Returns the value of the field.\n   *\n   * @override\n   * @return {*} Returns the field value.\n   */\n    valueOf () {\n        return this.value;\n    }\n}\n\nexport default Value;\n","/**\n * Iterates through the diffSet array and call the callback with the current\n * index.\n *\n * @param {string} rowDiffset - The row diffset string e.g. '0-4,6,10-13'.\n * @param {Function} callback - The callback function to be called with every index.\n */\nexport function rowDiffsetIterator (rowDiffset, callback) {\n    if (rowDiffset.length > 0) {\n        const rowDiffArr = rowDiffset.split(',');\n        rowDiffArr.forEach((diffStr) => {\n            const diffStsArr = diffStr.split('-');\n            const start = +(diffStsArr[0]);\n            const end = +(diffStsArr[1] || diffStsArr[0]);\n            if (end >= start) {\n                for (let i = start; i <= end; i += 1) {\n                    callback(i);\n                }\n            }\n        });\n    }\n}\n","/**\n * The helper function that returns an array of common schema\n * from two fieldStore instances.\n *\n * @param {FieldStore} fs1 - The first FieldStore instance.\n * @param {FieldStore} fs2 - The second FieldStore instance.\n * @return {Array} An array containing the common schema.\n */\nexport function getCommonSchema (fs1, fs2) {\n    const retArr = [];\n    const fs1Arr = [];\n    fs1.fields.forEach((field) => {\n        fs1Arr.push(field.schema().name);\n    });\n    fs2.fields.forEach((field) => {\n        if (fs1Arr.indexOf(field.schema().name) !== -1) {\n            retArr.push(field.schema().name);\n        }\n    });\n    return retArr;\n}\n","export { DataFormat, FilteringMode } from '../enums';\n/**\n * The event name for data propagation.\n */\nexport const PROPAGATION = 'propagation';\n\n/**\n * The name of the unique row id column in DataModel.\n */\nexport const ROW_ID = '__id__';\n\n/**\n * The enums for operation names performed on DataModel.\n */\nexport const DM_DERIVATIVES = {\n    SELECT: 'select',\n    PROJECT: 'project',\n    GROUPBY: 'group',\n    COMPOSE: 'compose',\n    CAL_VAR: 'calculatedVariable',\n    BIN: 'bin'\n};\n\nexport const JOINS = {\n    CROSS: 'cross',\n    LEFTOUTER: 'leftOuter',\n    RIGHTOUTER: 'rightOuter',\n    NATURAL: 'natural',\n    FULLOUTER: 'fullOuter'\n};\n\nexport const LOGICAL_OPERATORS = {\n    AND: 'and',\n    OR: 'or'\n};\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { getCommonSchema } from './get-common-schema';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { JOINS } from '../constants';\nimport { prepareJoinData } from '../helper';\n/**\n * Default filter function for crossProduct.\n *\n * @return {boolean} Always returns true.\n */\nfunction defaultFilterFn() { return true; }\n\n/**\n * Implementation of cross product operation between two DataModel instances.\n * It internally creates the data and schema for the new DataModel.\n *\n * @param {DataModel} dataModel1 - The left DataModel instance.\n * @param {DataModel} dataModel2 - The right DataModel instance.\n * @param {Function} filterFn - The filter function which is used to filter the tuples.\n * @param {boolean} [replaceCommonSchema=false] - The flag if the common name schema should be there.\n * @return {DataModel} Returns The newly created DataModel instance from the crossProduct operation.\n */\nexport function crossProduct (dm1, dm2, filterFn, replaceCommonSchema = false, jointype = JOINS.CROSS) {\n    const schema = [];\n    const data = [];\n    const applicableFilterFn = filterFn || defaultFilterFn;\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreName = dm1FieldStore.name;\n    const dm2FieldStoreName = dm2FieldStore.name;\n    const name = `${dm1FieldStore.name}.${dm2FieldStore.name}`;\n    const commonSchemaList = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    if (dm1FieldStoreName === dm2FieldStoreName) {\n        throw new Error('DataModels must have different alias names');\n    }\n    // Here prepare the schema\n    dm1FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1 && !replaceCommonSchema) {\n            tmpSchema.name = `${dm1FieldStore.name}.${tmpSchema.name}`;\n        }\n        schema.push(tmpSchema);\n    });\n    dm2FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1) {\n            if (!replaceCommonSchema) {\n                tmpSchema.name = `${dm2FieldStore.name}.${tmpSchema.name}`;\n                schema.push(tmpSchema);\n            }\n        } else {\n            schema.push(tmpSchema);\n        }\n    });\n\n    // Here prepare Data\n    rowDiffsetIterator(dm1._rowDiffset, (i) => {\n        let rowAdded = false;\n        let rowPosition;\n        rowDiffsetIterator(dm2._rowDiffset, (ii) => {\n            const tuple = [];\n            const userArg = {};\n            userArg[dm1FieldStoreName] = {};\n            userArg[dm2FieldStoreName] = {};\n            dm1FieldStore.fields.forEach((field) => {\n                tuple.push(field.partialField.data[i]);\n                userArg[dm1FieldStoreName][field.name()] = field.partialField.data[i];\n            });\n            dm2FieldStore.fields.forEach((field) => {\n                if (!(commonSchemaList.indexOf(field.schema().name) !== -1 && replaceCommonSchema)) {\n                    tuple.push(field.partialField.data[ii]);\n                }\n                userArg[dm2FieldStoreName][field.name()] = field.partialField.data[ii];\n            });\n\n            let cachedStore = {};\n            let cloneProvider1 = () => dm1.detachedRoot();\n            let cloneProvider2 = () => dm2.detachedRoot();\n\n            const dm1Fields = prepareJoinData(userArg[dm1FieldStoreName]);\n            const dm2Fields = prepareJoinData(userArg[dm2FieldStoreName]);\n            if (applicableFilterFn(dm1Fields, dm2Fields, cloneProvider1, cloneProvider2, cachedStore)) {\n                const tupleObj = {};\n                tuple.forEach((cellVal, iii) => {\n                    tupleObj[schema[iii].name] = cellVal;\n                });\n                if (rowAdded && JOINS.CROSS !== jointype) {\n                    data[rowPosition] = tupleObj;\n                }\n                else {\n                    data.push(tupleObj);\n                    rowAdded = true;\n                    rowPosition = i;\n                }\n            } else if ((jointype === JOINS.LEFTOUTER || jointype === JOINS.RIGHTOUTER) && !rowAdded) {\n                const tupleObj = {};\n                let len = dm1FieldStore.fields.length - 1;\n                tuple.forEach((cellVal, iii) => {\n                    if (iii <= len) {\n                        tupleObj[schema[iii].name] = cellVal;\n                    }\n                    else {\n                        tupleObj[schema[iii].name] = null;\n                    }\n                });\n                rowAdded = true;\n                rowPosition = i;\n                data.push(tupleObj);\n            }\n        });\n    });\n\n    return new DataModel(data, schema, { name });\n}\n","/**\n * The default sort function.\n *\n * @param {*} a - The first value.\n * @param {*} b - The second value.\n * @return {number} Returns the comparison result e.g. 1 or 0 or -1.\n */\nfunction defSortFn (a, b) {\n    const a1 = `${a}`;\n    const b1 = `${b}`;\n    if (a1 < b1) {\n        return -1;\n    }\n    if (a1 > b1) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * The helper function for merge sort which creates the sorted array\n * from the two halves of the input array.\n *\n * @param {Array} arr - The target array which needs to be merged.\n * @param {number} lo - The starting index of the first array half.\n * @param {number} mid - The ending index of the first array half.\n * @param {number} hi - The ending index of the second array half.\n * @param {Function} sortFn - The sort function.\n */\nfunction merge (arr, lo, mid, hi, sortFn) {\n    const mainArr = arr;\n    const auxArr = [];\n    for (let i = lo; i <= hi; i += 1) {\n        auxArr[i] = mainArr[i];\n    }\n    let a = lo;\n    let b = mid + 1;\n\n    for (let i = lo; i <= hi; i += 1) {\n        if (a > mid) {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        } else if (b > hi) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else if (sortFn(auxArr[a], auxArr[b]) <= 0) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        }\n    }\n}\n\n/**\n * The helper function for merge sort which would be called\n * recursively for sorting the array halves.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {number} lo - The starting index of the array half.\n * @param {number} hi - The ending index of the array half.\n * @param {Function} sortFn - The sort function.\n * @return {Array} Returns the target array itself.\n */\nfunction sort (arr, lo, hi, sortFn) {\n    if (hi === lo) { return arr; }\n\n    const mid = lo + Math.floor((hi - lo) / 2);\n    sort(arr, lo, mid, sortFn);\n    sort(arr, mid + 1, hi, sortFn);\n    merge(arr, lo, mid, hi, sortFn);\n\n    return arr;\n}\n\n/**\n * The implementation of merge sort.\n * It is used in DataModel for stable sorting as it is not sure\n * what the sorting algorithm used by browsers is stable or not.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {Function} [sortFn=defSortFn] - The sort function.\n * @return {Array} Returns the input array itself in sorted order.\n */\nexport function mergeSort (arr, sortFn = defSortFn) {\n    if (arr.length > 1) {\n        sort(arr, 0, arr.length - 1, sortFn);\n    }\n    return arr;\n}\n","import { DimensionSubtype, MeasureSubtype } from '../enums';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { mergeSort } from './merge-sort';\nimport { fieldInSchema } from '../helper';\nimport { isCallable, isArray, } from '../utils';\n/**\n * Generates the sorting functions to sort the data of a DataModel instance\n * according to the input data type.\n *\n * @param {string} dataType - The data type e.g. 'measure', 'datetime' etc.\n * @param {string} sortType - The sorting order i.e. 'asc' or 'desc'.\n * @param {integer} index - The index of the data which will be sorted.\n * @return {Function} Returns the the sorting function.\n */\nfunction getSortFn (dataType, sortType, index) {\n    let retFunc;\n    switch (dataType) {\n    case MeasureSubtype.CONTINUOUS:\n    case DimensionSubtype.TEMPORAL:\n        if (sortType === 'desc') {\n            retFunc = (a, b) => b[index] - a[index];\n        } else {\n            retFunc = (a, b) => a[index] - b[index];\n        }\n        break;\n    default:\n        retFunc = (a, b) => {\n            const a1 = `${a[index]}`;\n            const b1 = `${b[index]}`;\n            if (a1 < b1) {\n                return sortType === 'desc' ? 1 : -1;\n            }\n            if (a1 > b1) {\n                return sortType === 'desc' ? -1 : 1;\n            }\n            return 0;\n        };\n    }\n    return retFunc;\n}\n\n/**\n * Groups the data according to the specified target field.\n *\n * @param {Array} data - The input data array.\n * @param {number} fieldIndex - The target field index within schema array.\n * @return {Array} Returns an array containing the grouped data.\n */\nfunction groupData(data, fieldIndex) {\n    const hashMap = new Map();\n    const groupedData = [];\n\n    data.forEach((datum) => {\n        const fieldVal = datum[fieldIndex];\n        if (hashMap.has(fieldVal)) {\n            groupedData[hashMap.get(fieldVal)][1].push(datum);\n        } else {\n            groupedData.push([fieldVal, [datum]]);\n            hashMap.set(fieldVal, groupedData.length - 1);\n        }\n    });\n\n    return groupedData;\n}\n\n/**\n * Creates the argument value used for sorting function when sort is done\n * with another fields.\n *\n * @param {Array} groupedDatum - The grouped datum for a single dimension field value.\n * @param {Array} targetFields - An array of the sorting fields.\n * @param {Array} targetFieldDetails - An array of the sorting field details in schema.\n * @return {Object} Returns an object containing the value of sorting fields and the target field name.\n */\nfunction createSortingFnArg(groupedDatum, targetFields, targetFieldDetails) {\n    const arg = {\n        label: groupedDatum[0]\n    };\n\n    targetFields.reduce((acc, next, idx) => {\n        acc[next] = groupedDatum[1].map(datum => datum[targetFieldDetails[idx].index]);\n        return acc;\n    }, arg);\n\n    return arg;\n}\n\n/**\n * Sorts the data before return in dataBuilder.\n *\n * @param {Object} dataObj - An object containing the data and schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nfunction sortData(dataObj, sortingDetails) {\n    const { data, schema } = dataObj;\n    let fieldName;\n    let sortMeta;\n    let fDetails;\n    let i = sortingDetails.length - 1;\n\n    for (; i >= 0; i--) {\n        fieldName = sortingDetails[i][0];\n        sortMeta = sortingDetails[i][1];\n        fDetails = fieldInSchema(schema, fieldName);\n\n        if (!fDetails) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        if (isCallable(sortMeta)) {\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortMeta(a[fDetails.index], b[fDetails.index]));\n        } else if (isArray(sortMeta)) {\n            const groupedData = groupData(data, fDetails.index);\n            const sortingFn = sortMeta[sortMeta.length - 1];\n            const targetFields = sortMeta.slice(0, sortMeta.length - 1);\n            const targetFieldDetails = targetFields.map(f => fieldInSchema(schema, f));\n\n            groupedData.forEach((groupedDatum) => {\n                groupedDatum.push(createSortingFnArg(groupedDatum, targetFields, targetFieldDetails));\n            });\n\n            mergeSort(groupedData, (a, b) => {\n                const m = a[2];\n                const n = b[2];\n                return sortingFn(m, n);\n            });\n\n            // Empty the array\n            data.length = 0;\n            groupedData.forEach((datum) => {\n                data.push(...datum[1]);\n            });\n        } else {\n            sortMeta = String(sortMeta).toLowerCase() === 'desc' ? 'desc' : 'asc';\n            mergeSort(data, getSortFn(fDetails.type, sortMeta, fDetails.index));\n        }\n    }\n\n    dataObj.uids = [];\n    data.forEach((value) => {\n        dataObj.uids.push(value.pop());\n    });\n}\n\n\n/**\n * Builds the actual data array.\n *\n * @param {Array} fieldStore - An array of field.\n * @param {string} rowDiffset - A string consisting of which rows to be included eg. '0-2,4,6';\n * @param {string} colIdentifier - A string consisting of the details of which column\n * to be included eg 'date,sales,profit';\n * @param {Object} sortingDetails - An object containing the sorting details of the DataModel instance.\n * @param {Object} options - The options required to create the type of the data.\n * @return {Object} Returns an object containing the multidimensional array and the relative schema.\n */\nexport function dataBuilder (fieldStore, rowDiffset, colIdentifier, sortingDetails, options) {\n    const defOptions = {\n        addUid: false,\n        columnWise: false\n    };\n    options = Object.assign({}, defOptions, options);\n\n    const retObj = {\n        schema: [],\n        data: [],\n        uids: []\n    };\n    const addUid = options.addUid;\n    const reqSorting = sortingDetails && sortingDetails.length > 0;\n    // It stores the fields according to the colIdentifier argument\n    const tmpDataArr = [];\n    // Stores the fields according to the colIdentifier argument\n    const colIArr = colIdentifier.split(',');\n\n    colIArr.forEach((colName) => {\n        for (let i = 0; i < fieldStore.length; i += 1) {\n            if (fieldStore[i].name() === colName) {\n                tmpDataArr.push(fieldStore[i]);\n                break;\n            }\n        }\n    });\n\n    // Inserts the schema to the schema object\n    tmpDataArr.forEach((field) => {\n        /** @todo Need to use extend2 here otherwise user can overwrite the schema. */\n        retObj.schema.push(field.schema());\n    });\n\n    if (addUid) {\n        retObj.schema.push({\n            name: 'uid',\n            type: 'identifier'\n        });\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        retObj.data.push([]);\n        const insertInd = retObj.data.length - 1;\n        let start = 0;\n        tmpDataArr.forEach((field, ii) => {\n            retObj.data[insertInd][ii + start] = field.partialField.data[i];\n        });\n        if (addUid) {\n            retObj.data[insertInd][tmpDataArr.length] = i;\n        }\n        // Creates an array of unique identifiers for each row\n        retObj.uids.push(i);\n\n        // If sorting needed then there is the need to expose the index\n        // mapping from the old index to its new index\n        if (reqSorting) { retObj.data[insertInd].push(i); }\n    });\n\n    // Handles the sort functionality\n    if (reqSorting) {\n        sortData(retObj, sortingDetails);\n    }\n\n    if (options.columnWise) {\n        const tmpData = Array(...Array(retObj.schema.length)).map(() => []);\n        retObj.data.forEach((tuple) => {\n            tuple.forEach((data, i) => {\n                tmpData[i].push(data);\n            });\n        });\n        retObj.data = tmpData;\n    }\n\n    return retObj;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n\n/**\n * Performs the union operation between two dm instances.\n *\n * @todo Fix the conflicts between union and difference terminology here.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function difference (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n   // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     * @param {boolean} addData - If true only tuple will be added to the data.\n     */\n    function prepareDataHelper(dm, fieldsObj, addData) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                if (addData) { data.push(tuple); }\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj, false);\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj, true);\n\n    return new DataModel(data, schema, { name });\n}\n\n","import { isArray } from '../utils';\n\n/**\n * Reducer function that returns the sum of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the sum of the array.\n */\nfunction sum (arr) {\n    if (isArray(arr)) {\n        const totalSum = arr.reduce((acc, curr) =>\n            ((curr === null || curr === undefined) ? acc : acc + +curr)\n        , null);\n\n        return Number.isNaN(totalSum) ? null : totalSum;\n    }\n    return null;\n}\n\n/**\n * Reducer function that returns the average of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the mean value of the array.\n */\nfunction avg (arr) {\n    if (isArray(arr)) {\n        const totalSum = sum(arr);\n        const len = arr.length || 1;\n        return (Number.isNaN(totalSum) || totalSum === null) ? null : totalSum / len;\n    }\n    return null;\n}\n\n/**\n * Reducer function that gives the min value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the minimum value of the array.\n */\nfunction min (arr) {\n    if (isArray(arr)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = arr.filter(num =>\n            !(num === undefined || num === null || Number.isNaN(+num)));\n\n        return (filteredValues.length) ? Math.min(...filteredValues) : null;\n    }\n    return null;\n}\n\n/**\n * Reducer function that gives the max value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the maximum value of the array.\n */\nfunction max (arr) {\n    if (isArray(arr)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = arr.filter(num =>\n            !(num === undefined || num === null || Number.isNaN(+num)));\n\n        return (filteredValues.length) ? Math.max(...filteredValues) : null;\n    }\n    return null;\n}\n\n/**\n * Reducer function that gives the first value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the first value of the array.\n */\nfunction first (arr) {\n    return arr[0];\n}\n\n/**\n * Reducer function that gives the last value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the last value of the array.\n */\nfunction last (arr) {\n    return arr[arr.length - 1];\n}\n\n/**\n * Reducer function that gives the count value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the length of the array.\n */\nfunction count (arr) {\n    if (isArray(arr)) {\n        return arr.length;\n    }\n    return null;\n}\n\n/**\n * Calculates the variance of the input array.\n *\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the variance of the input array.\n */\nfunction variance (arr) {\n    let mean = avg(arr);\n    return avg(arr.map(num => (num - mean) ** 2));\n}\n\n/**\n * Calculates the square root of the variance of the input array.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the square root of the variance.\n */\nfunction std (arr) {\n    return Math.sqrt(variance(arr));\n}\n\n\nconst fnList = {\n    sum,\n    avg,\n    min,\n    max,\n    first,\n    last,\n    count,\n    std\n};\n\nconst defaultReducerName = 'sum';\n\nexport {\n    defaultReducerName,\n    sum as defReducer,\n    fnList,\n};\n","import { defReducer, fnList } from '../operator';\n\n/**\n * A page level storage which stores, registers, unregisters reducers for all the datamodel instances. There is only one\n * reducer store available in a page. All the datamodel instances receive same instance of reducer store. DataModel\n * out of the box provides handful of {@link reducer | reducers} which can be used as reducer funciton.\n *\n * @public\n * @namespace DataModel\n */\nclass ReducerStore {\n    constructor () {\n        this.store = new Map();\n        this.store.set('defReducer', defReducer);\n\n        Object.entries(fnList).forEach((key) => {\n            this.store.set(key[0], key[1]);\n        });\n    }\n\n    /**\n     * Changes the `defaultReducer` globally. For all the fields which does not have `defAggFn` mentioned in schema, the\n     * value of `defaultReducer` is used for aggregation.\n     *\n     * @public\n     * @param {string} [reducer='sum'] - The name of the default reducer. It picks up the definition from store by doing\n     * name lookup. If no name is found then it takes `sum` as the default reducer.\n     * @return {ReducerStore} Returns instance of the singleton store in page.\n     */\n    defaultReducer (...params) {\n        if (!params.length) {\n            return this.store.get('defReducer');\n        }\n\n        let reducer = params[0];\n\n        if (typeof reducer === 'function') {\n            this.store.set('defReducer', reducer);\n        } else {\n            reducer = String(reducer);\n            if (Object.keys(fnList).indexOf(reducer) !== -1) {\n                this.store.set('defReducer', fnList[reducer]);\n            } else {\n                throw new Error(`Reducer ${reducer} not found in registry`);\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     * Registers a {@link reducer | reducer}.\n     * A {@link reducer | reducer} has to be registered before it is used.\n     *\n     * @example\n     *  // find the mean squared value of a given set\n     *  const reducerStore = DataModel.Reducers();\n     *\n     *  reducers.register('meanSquared', (arr) => {\n     *      const squaredVal = arr.map(item => item * item);\n     *      let sum = 0;\n     *      for (let i = 0, l = squaredVal.length; i < l; i++) {\n     *          sum += squaredVal[i++];\n     *      }\n     *\n     *      return sum;\n     *  })\n     *\n     *  // datamodel (dm) is already prepared with cars.json\n     *  const dm1 = dm.groupBy(['origin'], {\n     *      accleration: 'meanSquared'\n     *  });\n     *\n     * @public\n     *\n     * @param {string} name formal name for a reducer. If the given name already exists in store it is overridden by new\n     *      definition.\n     * @param {Function} reducer definition of {@link reducer} function.\n     *\n     * @return {Function} function for unregistering the reducer.\n     */\n    register (name, reducer) {\n        if (typeof reducer !== 'function') {\n            throw new Error('Reducer should be a function');\n        }\n\n        name = String(name);\n        this.store.set(name, reducer);\n\n        return () => { this.__unregister(name); };\n    }\n\n    __unregister (name) {\n        if (this.store.has(name)) {\n            this.store.delete(name);\n        }\n    }\n\n    resolve (name) {\n        if (name instanceof Function) {\n            return name;\n        }\n        return this.store.get(name);\n    }\n}\n\nconst reducerStore = (function () {\n    let store = null;\n\n    function getStore () {\n        if (store === null) {\n            store = new ReducerStore();\n        }\n        return store;\n    }\n    return getStore();\n}());\n\nexport default reducerStore;\n","import { getCommonSchema } from './get-common-schema';\n\n/**\n * The filter function used in natural join.\n * It generates a function that will have the logic to join two\n * DataModel instances by the process of natural join.\n *\n * @param {DataModel} dm1 - The left DataModel instance.\n * @param {DataModel} dm2 - The right DataModel instance.\n * @return {Function} Returns a function that is used in cross-product operation.\n */\nexport function naturalJoinFilter (dm1, dm2) {\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    // const dm1FieldStoreName = dm1FieldStore.name;\n    // const dm2FieldStoreName = dm2FieldStore.name;\n    const commonSchemaArr = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    return (dm1Fields, dm2Fields) => {\n        let retainTuple = true;\n        commonSchemaArr.forEach((fieldName) => {\n            if (dm1Fields[fieldName].value ===\n                dm2Fields[fieldName].value && retainTuple) {\n                retainTuple = true;\n            } else {\n                retainTuple = false;\n            }\n        });\n        return retainTuple;\n    };\n}\n","import DataModel from '../export';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n/**\n * Performs the union operation between two dm instances.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function union (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n    // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     */\n    function prepareDataHelper (dm, fieldsObj) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                data.push(tuple);\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj);\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj);\n\n    return new DataModel(data, schema, { name });\n}\n","import { crossProduct } from './cross-product';\nimport { JOINS } from '../constants';\nimport { union } from './union';\n\n\nexport function leftOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel1, dataModel2, filterFn, false, JOINS.LEFTOUTER);\n}\n\nexport function rightOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel2, dataModel1, filterFn, false, JOINS.RIGHTOUTER);\n}\n\nexport function fullOuterJoin (dataModel1, dataModel2, filterFn) {\n    return union(leftOuterJoin(dataModel1, dataModel2, filterFn), rightOuterJoin(dataModel1, dataModel2, filterFn));\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\n\n/**\n * In {@link DataModel}, every tabular data consists of column, a column is stored as field.\n * Field contains all the data for a given column in an array.\n *\n * Each record consists of several fields; the fields of all records form the columns.\n * Examples of fields: name, gender, sex etc.\n *\n * In DataModel, each field can have multiple attributes which describes its data and behaviour.\n * A field can have two types of data: Measure and Dimension.\n *\n * A Dimension Field is the context on which a data is categorized and the measure is the numerical values that\n * quantify the data set.\n * In short a dimension is the lens through which you are looking at your measure data.\n *\n * Refer to {@link Schema} to get info about possible field attributes.\n *\n * @public\n * @class\n */\nexport default class Field {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        this.partialField = partialField;\n        this.rowDiffset = rowDiffset;\n    }\n\n    /**\n     * Generates the field type specific domain.\n     *\n     * @public\n     * @abstract\n     */\n    domain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the the field schema.\n     *\n     * @public\n     * @return {string} Returns the field schema.\n     */\n    schema () {\n        return this.partialField.schema;\n    }\n\n    /**\n     * Returns the name of the field.\n     *\n     * @public\n     * @return {string} Returns the name of the field.\n     */\n    name () {\n        return this.partialField.name;\n    }\n\n    /**\n     * Returns the type of the field.\n     *\n     * @public\n     * @return {string} Returns the type of the field.\n     */\n    type () {\n        return this.partialField.schema.type;\n    }\n\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return this.partialField.schema.subtype;\n    }\n\n    /**\n     * Returns the description of the field.\n     *\n     * @public\n     * @return {string} Returns the description of the field.\n     */\n    description () {\n        return this.partialField.schema.description;\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @public\n     * @return {string} Returns the display name of the field.\n     */\n    displayName () {\n        return this.partialField.schema.displayName || this.partialField.schema.name;\n    }\n\n    /**\n     * Returns the data associated with the field.\n     *\n     * @public\n     * @return {Array} Returns the data.\n     */\n    data () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            data.push(this.partialField.data[i]);\n        });\n        return data;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @abstract\n     */\n    formattedData () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import Field from '../field';\n\n/**\n * Represents dimension field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Dimension extends Field {\n    /**\n     * Returns the domain for the dimension field.\n     *\n     * @override\n     * @public\n     * @return {any} Returns the calculated domain.\n     */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @abstract\n     */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n     /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { DimensionSubtype } from '../../enums';\nimport Dimension from '../dimension';\n\n/**\n * Represents categorical field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Categorical extends Dimension {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return DimensionSubtype.CATEGORICAL;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum === null) {\n                return;\n            }\n\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n        return domain;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport Dimension from '../dimension';\nimport { DateTimeFormatter } from '../../utils';\n\n/**\n * Represents temporal field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Temporal extends Dimension {\n     /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        super(partialField, rowDiffset);\n\n        this._cachedMinDiff = null;\n    }\n\n     /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be\n        // occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum === null) {\n                return;\n            }\n\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n\n        return domain;\n    }\n\n\n    /**\n     * Calculates the minimum consecutive difference from the associated field data.\n     *\n     * @public\n     * @return {number} Returns the minimum consecutive diff in milliseconds.\n     */\n    minimumConsecutiveDifference () {\n        if (this._cachedMinDiff) {\n            return this._cachedMinDiff;\n        }\n\n        const sortedData = this.data().sort((a, b) => a - b);\n        const arrLn = sortedData.length;\n        let minDiff = Number.POSITIVE_INFINITY;\n        let prevDatum;\n        let nextDatum;\n        let processedCount = 0;\n\n        for (let i = 1; i < arrLn; i++) {\n            prevDatum = sortedData[i - 1];\n            nextDatum = sortedData[i];\n\n            if (nextDatum === prevDatum) {\n                continue;\n            }\n\n            minDiff = Math.min(minDiff, nextDatum - sortedData[i - 1]);\n            processedCount++;\n        }\n\n        if (!processedCount) {\n            minDiff = null;\n        }\n        this._cachedMinDiff = minDiff;\n\n        return this._cachedMinDiff;\n    }\n\n    /**\n     * Returns the format specified in the input schema while creating field.\n     *\n     * @public\n     * @return {string} Returns the datetime format.\n     */\n    format () {\n        return this.partialField.schema.format;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum === null) {\n                data.push(null);\n            } else {\n                data.push(DateTimeFormatter.formatAs(datum, this.format()));\n            }\n        });\n        return data;\n    }\n}\n\n","import Dimension from '../dimension';\n\n/**\n * Represents binned field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Binned extends Dimension {\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the last and first values of bins config array.\n     */\n    calculateDataDomain () {\n        const binsArr = this.partialField.schema.bins;\n        return [binsArr[0], binsArr[binsArr.length - 1]];\n    }\n\n    /**\n     * Returns the bins config provided while creating the field instance.\n     *\n     * @public\n     * @return {Array} Returns the bins array config.\n     */\n    bins () {\n        return this.partialField.schema.bins;\n    }\n}\n","import { formatNumber } from '../../utils';\nimport { defaultReducerName } from '../../operator/group-by-function';\nimport Field from '../field';\n\n/**\n * Represents measure field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Measure extends Field {\n  /**\n   * Returns the domain for the measure field.\n   *\n   * @override\n   * @public\n   * @return {any} Returns the calculated domain.\n   */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n  /**\n   * Returns the unit of the measure field.\n   *\n   * @public\n   * @return {string} Returns unit of the field.\n   */\n    unit () {\n        return this.partialField.schema.unit;\n    }\n\n  /**\n   * Returns the aggregation function name of the measure field.\n   *\n   * @public\n   * @return {string} Returns aggregation function name of the field.\n   */\n    defAggFn () {\n        return this.partialField.schema.defAggFn || defaultReducerName;\n    }\n\n  /**\n   * Returns the number format of the measure field.\n   *\n   * @public\n   * @return {Function} Returns number format of the field.\n   */\n    numberFormat () {\n        const { numberFormat } = this.partialField.schema;\n        return numberFormat instanceof Function ? numberFormat : formatNumber;\n    }\n\n  /**\n   * Calculates the corresponding field domain.\n   *\n   * @public\n   * @abstract\n   */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { MeasureSubtype } from '../../enums';\nimport Measure from '../measure';\n\n/**\n * Represents continuous field subtype.\n *\n * @public\n * @class\n * @extends Measure\n */\nexport default class Continuous extends Measure {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return MeasureSubtype.CONTINUOUS;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the min and max values.\n     */\n    calculateDataDomain () {\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum === null) {\n                return;\n            }\n\n            if (datum < min) {\n                min = datum;\n            }\n            if (datum > max) {\n                max = datum;\n            }\n        });\n\n        return [min, max];\n    }\n}\n","/**\n * A interface to represent a parser which is responsible to parse the field.\n *\n * @public\n * @interface\n */\nexport default class FieldParser {\n    /**\n     * Parses a single value of a field and return the sanitized form.\n     *\n     * @public\n     * @abstract\n     */\n    parse () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import FieldParser from '../field-parser';\n\n/**\n * A FieldParser which parses the categorical values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class CategoricalParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the stringified form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the stringified value.\n   */\n    parse (val) {\n        return (val === undefined || val === null) ? null : String(val).trim();\n    }\n}\n","import { DateTimeFormatter } from '../../../utils';\nimport FieldParser from '../field-parser';\n\n/**\n * A FieldParser which parses the temporal values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class TemporalParser extends FieldParser {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {Object} schema - The schema object for the corresponding field.\n     */\n    constructor (schema) {\n        super();\n        this.schema = schema;\n        this._dtf = null;\n    }\n\n    /**\n     * Parses a single value of a field and returns the millisecond value.\n     *\n     * @public\n     * @param {string|number} val - The value of the field.\n     * @return {number} Returns the millisecond value.\n     */\n    parse (val) {\n        if (val === null || val === undefined) {\n            return null;\n        }\n\n        if (this.schema.format) {\n            this._dtf = this._dtf || new DateTimeFormatter(this.schema.format);\n            return this._dtf.getNativeDate(val).getTime();\n        }\n\n        // If format is not present which means the value is such that\n        // it could be directly passed to Date constructor.\n        return +new Date(val);\n    }\n}\n","import FieldParser from '../field-parser';\n\n/**\n * A FieldParser which parses the binned values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class BinnedParser extends FieldParser {\n  /**\n   * Parses a single binned value of a field and returns the sanitized value.\n   *\n   * @public\n   * @param {string} val - The value of the field.\n   * @return {string} Returns the sanitized value.\n   */\n    parse (val) {\n        if (val === null || val === undefined) {\n            return null;\n        }\n\n        const regex = /^\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*-\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*$/;\n        val = String(val);\n\n        const matched = val.match(regex);\n        if (!matched) {\n            return null;\n        }\n\n        return `${Number.parseFloat(matched[1])}-${Number.parseFloat(matched[2])}`;\n    }\n}\n","import FieldParser from '../field-parser';\n\n/**\n * A FieldParser which parses the continuous values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class ContinuousParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the number form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the number value.\n   */\n    parse (val) {\n        val = parseFloat(val, 10);\n        return Number.isNaN(val) ? null : val;\n    }\n}\n","/**\n * Stores the full data and the metadata of a field. It provides\n * a single source of data from which the future Field\n * instance can get a subset of it with a rowDiffset config.\n *\n * @class\n * @public\n */\nexport default class PartialField {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} name - The name of the field.\n     * @param {Array} data - The data array.\n     * @param {Object} schema - The schema object of the corresponding field.\n     * @param {FieldParser} parser - The parser instance corresponding to that field.\n     */\n    constructor (name, data, schema, parser) {\n        this.name = name;\n        this.schema = schema;\n        this.parser = parser;\n        this.data = this._sanitize(data);\n    }\n\n    /**\n     * Sanitizes the field data.\n     *\n     * @private\n     * @param {Array} data - The actual input data.\n     * @return {Array} Returns the sanitized data.\n     */\n    _sanitize (data) {\n        return data.map(datum => this.parser.parse(datum));\n    }\n}\n","import { FieldType, DimensionSubtype, MeasureSubtype } from './enums';\nimport {\n    Categorical,\n    Temporal,\n    Binned,\n    Continuous,\n    CategoricalParser,\n    TemporalParser,\n    BinnedParser,\n    ContinuousParser,\n    PartialField\n} from './fields';\n\n/**\n * Creates a field instance according to the provided data and schema.\n *\n * @param {Array} data - The field data array.\n * @param {Object} schema - The field schema object.\n * @return {Field} Returns the newly created field instance.\n */\nfunction createUnitField(data, schema) {\n    data = data || [];\n    let partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.TEMPORAL:\n            partialField = new PartialField(schema.name, data, schema, new TemporalParser(schema));\n            return new Temporal(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.BINNED:\n            partialField = new PartialField(schema.name, data, schema, new BinnedParser());\n            return new Binned(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        }\n    default:\n        partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n        return new Categorical(partialField, `0-${data.length - 1}`);\n    }\n}\n\n\n/**\n * Creates a field instance from partialField and rowDiffset.\n *\n * @param {PartialField} partialField - The corresponding partial field.\n * @param {string} rowDiffset - The data subset config.\n * @return {Field} Returns the newly created field instance.\n */\nexport function createUnitFieldFromPartial(partialField, rowDiffset) {\n    const { schema } = partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            return new Continuous(partialField, rowDiffset);\n        default:\n            return new Continuous(partialField, rowDiffset);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            return new Categorical(partialField, rowDiffset);\n        case DimensionSubtype.TEMPORAL:\n            return new Temporal(partialField, rowDiffset);\n        case DimensionSubtype.BINNED:\n            return new Binned(partialField, rowDiffset);\n        default:\n            return new Categorical(partialField, rowDiffset);\n        }\n    default:\n        return new Categorical(partialField, rowDiffset);\n    }\n}\n\n/**\n * Creates the field instances with input data and schema.\n *\n * @param {Array} dataColumn - The data array for fields.\n * @param {Array} schema - The schema array for fields.\n * @param {Array} headers - The array of header names.\n * @return {Array.<Field>} Returns an array of newly created field instances.\n */\nexport function createFields(dataColumn, schema, headers) {\n    const headersObj = {};\n\n    if (!(headers && headers.length)) {\n        headers = schema.map(item => item.name);\n    }\n\n    headers.forEach((header, i) => {\n        headersObj[header] = i;\n    });\n\n    return schema.map(item => createUnitField(dataColumn[headersObj[item.name]], item));\n}\n","import { DataFormat } from './enums';\n\nexport default {\n    dataFormat: DataFormat.AUTO\n};\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in DSV array to a manageable internal format.\n *\n * @param {Array.<Array>} arr - A 2D array containing of the DSV data.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv data is header or not.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    [\"a\", \"b\", \"c\"],\n *    [1, 2, 3],\n *    [4, 5, 6],\n *    [7, 8, 9]\n * ];\n */\nfunction DSVArr (arr, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    let header;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    if (options.firstRowHeader) {\n        // If header present then mutate the array.\n        // Do in-place mutation to save space.\n        header = arr.splice(0, 1)[0];\n    } else {\n        header = [];\n    }\n\n    arr.forEach(field => push(...field));\n\n    return [header, columns];\n}\n\nexport default DSVArr;\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","import { dsvFormat as d3Dsv } from 'd3-dsv';\nimport DSVArr from './dsv-arr';\n\n/**\n * Parses and converts data formatted in DSV string to a manageable internal format.\n *\n * @todo Support to be given for https://tools.ietf.org/html/rfc4180.\n * @todo Sample implementation https://github.com/knrz/CSV.js/.\n *\n * @param {string} str - The input DSV string.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv string data is header or not.\n * @param {string} [options.fieldSeparator=\",\"] - The separator of two consecutive field.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = `\n * a,b,c\n * 1,2,3\n * 4,5,6\n * 7,8,9\n * `\n */\nfunction DSVStr (str, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n        fieldSeparator: ','\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    const dsv = d3Dsv(options.fieldSeparator);\n    return DSVArr(dsv.parseRows(str), options);\n}\n\nexport default DSVStr;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in JSON to a manageable internal format.\n *\n * @param {Array.<Object>} arr - The input data formatted in JSON.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    {\n *      \"a\": 1,\n *      \"b\": 2,\n *      \"c\": 3\n *    },\n *    {\n *      \"a\": 4,\n *      \"b\": 5,\n *      \"c\": 6\n *    },\n *    {\n *      \"a\": 7,\n *      \"b\": 8,\n *      \"c\": 9\n *    }\n * ];\n */\nfunction FlatJSON (arr) {\n    const header = {};\n    let i = 0;\n    let insertionIndex;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    arr.forEach((item) => {\n        const fields = [];\n        for (let key in item) {\n            if (key in header) {\n                insertionIndex = header[key];\n            } else {\n                header[key] = i++;\n                insertionIndex = i - 1;\n            }\n            fields[insertionIndex] = item[key];\n        }\n        push(...fields);\n    });\n\n    return [Object.keys(header), columns];\n}\n\nexport default FlatJSON;\n","import FlatJSON from './flat-json';\nimport DSVArr from './dsv-arr';\nimport DSVStr from './dsv-str';\nimport { detectDataFormat } from '../utils';\n\n/**\n * Parses the input data and detect the format automatically.\n *\n * @param {string|Array} data - The input data.\n * @param {Object} options - An optional config specific to data format.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n */\nfunction Auto (data, options) {\n    const converters = { FlatJSON, DSVStr, DSVArr };\n    const dataFormat = detectDataFormat(data);\n\n    if (!dataFormat) {\n        throw new Error('Couldn\\'t detect the data format');\n    }\n\n    return converters[dataFormat](data, options);\n}\n\nexport default Auto;\n","import { FieldType, FilteringMode, DimensionSubtype, MeasureSubtype, DataFormat } from './enums';\nimport fieldStore from './field-store';\nimport Value from './value';\nimport {\n    rowDiffsetIterator\n} from './operator';\nimport { DM_DERIVATIVES, LOGICAL_OPERATORS } from './constants';\nimport { createFields, createUnitFieldFromPartial } from './field-creator';\nimport defaultConfig from './default-config';\nimport * as converter from './converter';\nimport { extend2, detectDataFormat } from './utils';\n\n/**\n * Prepares the selection data.\n */\nfunction prepareSelectionData (fields, i) {\n    const resp = {};\n    for (let field of fields) {\n        resp[field.name()] = new Value(field.partialField.data[i], field);\n    }\n    return resp;\n}\n\nexport function prepareJoinData (fields) {\n    const resp = {};\n    Object.keys(fields).forEach((key) => { resp[key] = new Value(fields[key], key); });\n    return resp;\n}\n\nexport const updateFields = ([rowDiffset, colIdentifier], partialFieldspace, fieldStoreName) => {\n    let collID = colIdentifier.length ? colIdentifier.split(',') : [];\n    let partialFieldMap = partialFieldspace.fieldsObj();\n    let newFields = collID.map(coll => createUnitFieldFromPartial(partialFieldMap[coll].partialField, rowDiffset));\n    return fieldStore.createNamespace(newFields, fieldStoreName);\n};\n\nexport const persistDerivation = (model, operation, config = {}, criteriaFn) => {\n    let derivative;\n    if (operation !== DM_DERIVATIVES.COMPOSE) {\n        derivative = {\n            op: operation,\n            meta: config,\n            criteria: criteriaFn\n        };\n        model._derivation.push(derivative);\n    }\n    else {\n        derivative = [...criteriaFn];\n        model._derivation.length = 0;\n        model._derivation.push(...derivative);\n    }\n};\n\nexport const selectHelper = (rowDiffset, fields, selectFn, config, sourceDm) => {\n    const newRowDiffSet = [];\n    let lastInsertedValue = -1;\n    let { mode } = config;\n    let li;\n    let cachedStore = {};\n    let cloneProvider = () => sourceDm.detachedRoot();\n    const selectorHelperFn = index => selectFn(\n        prepareSelectionData(fields, index),\n        index,\n        cloneProvider,\n        cachedStore\n    );\n\n    let checker;\n    if (mode === FilteringMode.INVERSE) {\n        checker = index => !selectorHelperFn(index);\n    } else {\n        checker = index => selectorHelperFn(index);\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        if (checker(i)) {\n            if (lastInsertedValue !== -1 && i === (lastInsertedValue + 1)) {\n                li = newRowDiffSet.length - 1;\n                newRowDiffSet[li] = `${newRowDiffSet[li].split('-')[0]}-${i}`;\n            } else {\n                newRowDiffSet.push(`${i}`);\n            }\n            lastInsertedValue = i;\n        }\n    });\n    return newRowDiffSet.join(',');\n};\n\nexport const filterPropagationModel = (model, propModels, config = {}) => {\n    const operation = config.operation || LOGICAL_OPERATORS.AND;\n    const filterByMeasure = config.filterByMeasure || false;\n    let fns = [];\n    if (!propModels.length) {\n        fns = [() => false];\n    } else {\n        fns = propModels.map(propModel => ((dataModel) => {\n            const dataObj = dataModel.getData();\n            const schema = dataObj.schema;\n            const fieldsConfig = dataModel.getFieldsConfig();\n            const fieldsSpace = dataModel.getFieldspace().fieldsObj();\n            const data = dataObj.data;\n            const domain = Object.values(fieldsConfig).reduce((acc, v) => {\n                acc[v.def.name] = fieldsSpace[v.def.name].domain();\n                return acc;\n            }, {});\n\n            return (fields) => {\n                const include = !data.length ? false : data.some(row => schema.every((propField) => {\n                    if (!(propField.name in fields)) {\n                        return true;\n                    }\n                    const value = fields[propField.name].valueOf();\n                    if (filterByMeasure && propField.type === FieldType.MEASURE) {\n                        return value >= domain[propField.name][0] && value <= domain[propField.name][1];\n                    }\n\n                    if (propField.type !== FieldType.DIMENSION) {\n                        return true;\n                    }\n                    const idx = fieldsConfig[propField.name].index;\n                    return row[idx] === fields[propField.name].valueOf();\n                }));\n                return include;\n            };\n        })(propModel));\n    }\n\n    let filteredModel;\n    if (operation === LOGICAL_OPERATORS.AND) {\n        const clonedModel = model.clone(false, false);\n        filteredModel = clonedModel.select(fields => fns.every(fn => fn(fields)), {\n            saveChild: false,\n            mode: FilteringMode.ALL\n        });\n    } else {\n        filteredModel = model.clone(false, false).select(fields => fns.some(fn => fn(fields)), {\n            mode: FilteringMode.ALL,\n            saveChild: false\n        });\n    }\n\n    return filteredModel;\n};\n\nexport const cloneWithSelect = (sourceDm, selectFn, selectConfig, cloneConfig) => {\n    const cloned = sourceDm.clone(cloneConfig.saveChild);\n    const rowDiffset = selectHelper(\n        cloned._rowDiffset,\n        cloned.getPartialFieldspace().fields,\n        selectFn,\n        selectConfig,\n        sourceDm\n    );\n    cloned._rowDiffset = rowDiffset;\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n    // Store reference to child model and selector function\n    if (cloneConfig.saveChild) {\n        persistDerivation(cloned, DM_DERIVATIVES.SELECT, { config: selectConfig }, selectFn);\n    }\n\n    return cloned;\n};\n\nexport const cloneWithProject = (sourceDm, projField, config, allFields) => {\n    const cloned = sourceDm.clone(config.saveChild);\n    let projectionSet = projField;\n    if (config.mode === FilteringMode.INVERSE) {\n        projectionSet = allFields.filter(fieldName => projField.indexOf(fieldName) === -1);\n    }\n    // cloned._colIdentifier = sourceDm._colIdentifier.split(',')\n    //                         .filter(coll => projectionSet.indexOf(coll) !== -1).join();\n    cloned._colIdentifier = projectionSet.join(',');\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n    // Store reference to child model and projection fields\n    if (config.saveChild) {\n        persistDerivation(\n            cloned,\n            DM_DERIVATIVES.PROJECT,\n            { projField, config, actualProjField: projectionSet },\n            null\n        );\n    }\n\n    return cloned;\n};\n\nexport const sanitizeUnitSchema = (unitSchema) => {\n    // Do deep clone of the unit schema as the user might change it later.\n    unitSchema = extend2({}, unitSchema);\n    if (!unitSchema.type) {\n        unitSchema.type = FieldType.DIMENSION;\n    }\n\n    if (!unitSchema.subtype) {\n        switch (unitSchema.type) {\n        case FieldType.MEASURE:\n            unitSchema.subtype = MeasureSubtype.CONTINUOUS;\n            break;\n        default:\n        case FieldType.DIMENSION:\n            unitSchema.subtype = DimensionSubtype.CATEGORICAL;\n            break;\n        }\n    }\n\n    return unitSchema;\n};\n\nexport const sanitizeSchema = schema => schema.map(unitSchema => sanitizeUnitSchema(unitSchema));\n\nexport const updateData = (relation, data, schema, options) => {\n    schema = sanitizeSchema(schema);\n    options = Object.assign(Object.assign({}, defaultConfig), options);\n    const converterFn = converter[options.dataFormat];\n\n    if (!(converterFn && typeof converterFn === 'function')) {\n        throw new Error(`No converter function found for ${options.dataFormat} format`);\n    }\n\n    const [header, formattedData] = converterFn(data, options);\n    const fieldArr = createFields(formattedData, schema, header);\n\n    // This will create a new fieldStore with the fields\n    const nameSpace = fieldStore.createNamespace(fieldArr, options.name);\n    relation._partialFieldspace = nameSpace;\n    // If data is provided create the default colIdentifier and rowDiffset\n    relation._rowDiffset = formattedData.length && formattedData[0].length ? `0-${formattedData[0].length - 1}` : '';\n    relation._colIdentifier = (schema.map(_ => _.name)).join();\n    relation._dataFormat = options.dataFormat === DataFormat.AUTO ? detectDataFormat(data) : options.dataFormat;\n    return relation;\n};\n\nexport const fieldInSchema = (schema, field) => {\n    let i = 0;\n\n    for (; i < schema.length; ++i) {\n        if (field === schema[i].name) {\n            return {\n                type: schema[i].subtype || schema[i].type,\n                index: i\n            };\n        }\n    }\n    return null;\n};\n\n\nexport const getOperationArguments = (child) => {\n    const derivation = child._derivation;\n    let params = [];\n    let operation;\n    if (derivation && derivation.length === 1) {\n        operation = derivation[0].op;\n        switch (operation) {\n        case DM_DERIVATIVES.SELECT:\n            params = [derivation[0].criteria];\n            break;\n        case DM_DERIVATIVES.PROJECT:\n            params = [derivation[0].meta.actualProjField];\n            break;\n        case DM_DERIVATIVES.GROUPBY:\n            operation = 'groupBy';\n            params = [derivation[0].meta.groupByString.split(','), derivation[0].criteria];\n            break;\n        default:\n            break;\n        }\n    }\n\n    return {\n        operation,\n        params\n    };\n};\n\nconst applyExistingOperationOnModel = (propModel, dataModel) => {\n    const { operation, params } = getOperationArguments(dataModel);\n    let selectionModel = propModel[0];\n    let rejectionModel = propModel[1];\n    if (operation && params.length) {\n        selectionModel = propModel[0][operation](...params, {\n            saveChild: false\n        });\n        rejectionModel = propModel[1][operation](...params, {\n            saveChild: false\n        });\n    }\n    return [selectionModel, rejectionModel];\n};\n\nconst getFilteredModel = (propModel, path) => {\n    for (let i = 0, len = path.length; i < len; i++) {\n        const model = path[i];\n        propModel = applyExistingOperationOnModel(propModel, model);\n    }\n    return propModel;\n};\n\nconst propagateIdentifiers = (dataModel, propModel, config = {}, propModelInf = {}) => {\n    const nonTraversingModel = propModelInf.nonTraversingModel;\n    const excludeModels = propModelInf.excludeModels || [];\n\n    if (dataModel === nonTraversingModel) {\n        return;\n    }\n\n    const propagate = excludeModels.length ? excludeModels.indexOf(dataModel) === -1 : true;\n\n    propagate && dataModel.handlePropagation(propModel, config);\n\n    const children = dataModel._children;\n    children.forEach((child) => {\n        let [selectionModel, rejectionModel] = applyExistingOperationOnModel(propModel, child);\n        propagateIdentifiers(child, [selectionModel, rejectionModel], config, propModelInf);\n    });\n};\n\nexport const getRootGroupByModel = (model) => {\n    if (model._parent && model._derivation.find(d => d.op !== 'group')) {\n        return getRootGroupByModel(model._parent);\n    }\n    return model;\n};\n\nexport const getRootDataModel = (model) => {\n    if (model._parent) {\n        return getRootDataModel(model._parent);\n    }\n    return model;\n};\n\nexport const getPathToRootModel = (model, path = []) => {\n    if (model._parent !== null) {\n        path.push(model);\n        getPathToRootModel(model._parent, path);\n    }\n    return path;\n};\n\nexport const propagateToAllDataModels = (identifiers, rootModels, propagationInf, config) => {\n    let criteria;\n    let propModel;\n    const { propagationNameSpace, propagateToSource } = propagationInf;\n    const propagationSourceId = propagationInf.sourceId;\n    const propagateInterpolatedValues = config.propagateInterpolatedValues;\n    const filterFn = (entry) => {\n        const filter = config.filterFn || (() => true);\n        return filter(entry, config);\n    };\n\n    let criterias = [];\n\n    if (identifiers === null && config.persistent !== true) {\n        criterias = [{\n            criteria: []\n        }];\n    } else {\n        let actionCriterias = Object.values(propagationNameSpace.mutableActions);\n        if (propagateToSource !== false) {\n            actionCriterias = actionCriterias.filter(d => d.config.sourceId !== propagationSourceId);\n        }\n\n        const filteredCriteria = actionCriterias.filter(filterFn).map(action => action.config.criteria);\n\n        const excludeModels = [];\n\n        if (propagateToSource !== false) {\n            const sourceActionCriterias = Object.values(propagationNameSpace.mutableActions);\n\n            sourceActionCriterias.forEach((actionInf) => {\n                const actionConf = actionInf.config;\n                if (actionConf.applyOnSource === false && actionConf.action === config.action &&\n                        actionConf.sourceId !== propagationSourceId) {\n                    excludeModels.push(actionInf.model);\n                    criteria = sourceActionCriterias.filter(d => d !== actionInf).map(d => d.config.criteria);\n                    criteria.length && criterias.push({\n                        criteria,\n                        models: actionInf.model,\n                        path: getPathToRootModel(actionInf.model)\n                    });\n                }\n            });\n        }\n\n\n        criteria = [].concat(...[...filteredCriteria, identifiers]).filter(d => d !== null);\n        criterias.push({\n            criteria,\n            excludeModels: [...excludeModels, ...config.excludeModels || []]\n        });\n    }\n\n    const rootModel = rootModels.model;\n\n    const propConfig = Object.assign({\n        sourceIdentifiers: identifiers,\n        propagationSourceId\n    }, config);\n\n    const rootGroupByModel = rootModels.groupByModel;\n    if (propagateInterpolatedValues && rootGroupByModel) {\n        propModel = filterPropagationModel(rootGroupByModel, criteria, {\n            filterByMeasure: propagateInterpolatedValues\n        });\n        propagateIdentifiers(rootGroupByModel, propModel, propConfig);\n    }\n\n    criterias.forEach((inf) => {\n        const propagationModel = filterPropagationModel(rootModel, inf.criteria);\n        const path = inf.path;\n\n        if (path) {\n            const filteredModel = getFilteredModel(propagationModel, path.reverse());\n            inf.models.handlePropagation(filteredModel, propConfig);\n        } else {\n            propagateIdentifiers(rootModel, propagationModel, propConfig, {\n                excludeModels: inf.excludeModels,\n                nonTraversingModel: propagateInterpolatedValues && rootGroupByModel\n            });\n        }\n    });\n};\n\nexport const propagateImmutableActions = (propagationNameSpace, rootModels, propagationInf) => {\n    const immutableActions = propagationNameSpace.immutableActions;\n\n    for (const action in immutableActions) {\n        const actionInf = immutableActions[action];\n        const actionConf = actionInf.config;\n        const propagationSourceId = propagationInf.config.sourceId;\n        const filterImmutableAction = propagationInf.propConfig.filterImmutableAction ?\n            propagationInf.propConfig.filterImmutableAction(actionConf, propagationInf.config) : true;\n        if (actionConf.sourceId !== propagationSourceId && filterImmutableAction) {\n            const criteriaModel = actionConf.criteria;\n            propagateToAllDataModels(criteriaModel, rootModels, {\n                propagationNameSpace,\n                propagateToSource: false,\n                sourceId: propagationSourceId\n            }, actionConf);\n        }\n    }\n};\n\nexport const addToPropNamespace = (propagationNameSpace, config = {}, model) => {\n    let sourceNamespace;\n    const isMutableAction = config.isMutableAction;\n    const criteria = config.criteria;\n    const key = `${config.action}-${config.sourceId}`;\n\n    if (isMutableAction) {\n        sourceNamespace = propagationNameSpace.mutableActions;\n    } else {\n        sourceNamespace = propagationNameSpace.immutableActions;\n    }\n\n    if (criteria === null) {\n        delete sourceNamespace[key];\n    } else {\n        sourceNamespace[key] = {\n            model,\n            config\n        };\n    }\n\n    return this;\n};\n","import { FilteringMode } from './enums';\nimport { getUniqueId } from './utils';\nimport { persistDerivation, updateFields, cloneWithSelect, cloneWithProject, updateData } from './helper';\nimport { crossProduct, difference, naturalJoinFilter, union } from './operator';\nimport { DM_DERIVATIVES } from './constants';\n\n/**\n * Relation provides the definitions of basic operators of relational algebra like *selection*, *projection*, *union*,\n * *difference* etc.\n *\n * It is extended by {@link DataModel} to inherit the functionalities of relational algebra concept.\n *\n * @class\n * @public\n * @module Relation\n * @namespace DataModel\n */\nclass Relation {\n\n    /**\n     * Creates a new Relation instance by providing underlying data and schema.\n     *\n     * @private\n     *\n     * @param {Object | string | Relation} data - The input tabular data in dsv or json format or\n     * an existing Relation instance object.\n     * @param {Array} schema - An array of data schema.\n     * @param {Object} [options] - The optional options.\n     */\n    constructor (...params) {\n        let source;\n\n        this._parent = null;\n        this._derivation = [];\n        this._children = [];\n\n        if (params.length === 1 && ((source = params[0]) instanceof Relation)) {\n            // parent datamodel was passed as part of source\n            this._colIdentifier = source._colIdentifier;\n            this._rowDiffset = source._rowDiffset;\n            this._dataFormat = source._dataFormat;\n            this._parent = source;\n            this._partialFieldspace = this._parent._partialFieldspace;\n            this._fieldStoreName = getUniqueId();\n            this.__calculateFieldspace().calculateFieldsConfig();\n        } else {\n            updateData(this, ...params);\n            this._fieldStoreName = this._partialFieldspace.name;\n            this.__calculateFieldspace().calculateFieldsConfig();\n            this._propagationNameSpace = {\n                mutableActions: {},\n                immutableActions: {}\n            };\n        }\n    }\n\n    /**\n     * Retrieves the {@link Schema | schema} details for every {@link Field | field} as an array.\n     *\n     * @public\n     *\n     * @return {Array.<Schema>} Array of fields schema.\n     *      ```\n     *      [\n     *          { name: 'Name', type: 'dimension' },\n     *          { name: 'Miles_per_Gallon', type: 'measure', numberFormat: (val) => `${val} miles / gallon` },\n     *          { name: 'Cylinder', type: 'dimension' },\n     *          { name: 'Displacement', type: 'measure', defAggFn: 'max' },\n     *          { name: 'HorsePower', type: 'measure', defAggFn: 'max' },\n     *          { name: 'Weight_in_lbs', type: 'measure', defAggFn: 'avg',  },\n     *          { name: 'Acceleration', type: 'measure', defAggFn: 'avg' },\n     *          { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *          { name: 'Origin' }\n     *      ]\n     *      ```\n     */\n    getSchema () {\n        return this.getFieldspace().fields.map(d => d.schema());\n    }\n\n    /**\n     * Returns the name of the {@link DataModel} instance. If no name was specified during {@link DataModel}\n     * initialization, then it returns a auto-generated name.\n     *\n     * @public\n     *\n     * @return {string} Name of the DataModel instance.\n     */\n    getName() {\n        return this._fieldStoreName;\n    }\n\n    getFieldspace () {\n        return this._fieldspace;\n    }\n\n    __calculateFieldspace () {\n        this._fieldspace = updateFields([this._rowDiffset, this._colIdentifier],\n             this.getPartialFieldspace(), this._fieldStoreName);\n        return this;\n    }\n\n    getPartialFieldspace () {\n        return this._partialFieldspace;\n    }\n\n    /**\n     * Performs {@link link_of_cross_product | cross-product} between two {@link DataModel} instances and returns a\n     * new {@link DataModel} instance containing the results. This operation is also called theta join.\n     *\n     * Cross product takes two set and create one set where each value of one set is paired with each value of another\n     * set.\n     *\n     * This method takes an optional predicate which filters the generated result rows. If the predicate returns true\n     * the combined row is included in the resulatant table.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.join(originDM)));\n     *\n     *  console.log(carsDM.join(originDM,\n     *      obj => obj.[originDM.getName()].Origin === obj.[carsDM.getName()].Origin));\n     *\n     * @text\n     * This is chained version of `join` operator. `join` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel to be joined with the current instance DataModel.\n     * @param {SelectionPredicate} filterFn - The predicate function that will filter the result of the crossProduct.\n     *\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    join (joinWith, filterFn) {\n        return crossProduct(this, joinWith, filterFn);\n    }\n\n    /**\n     * {@link natural_join | Natural join} is a special kind of cross-product join where filtering of rows are performed\n     * internally by resolving common fields are from both table and the rows with common value are included.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.naturalJoin(originDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel with which the current instance of DataModel on which the method is\n     *      called will be joined.\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    naturalJoin (joinWith) {\n        return crossProduct(this, joinWith, naturalJoinFilter(this, joinWith), true);\n    }\n\n    /**\n     * {@link link_to_union | Union} operation can be termed as vertical stacking of all rows from both the DataModel\n     * instances, provided that both of the {@link DataModel} instances should have same column names.\n     *\n     * @example\n     * console.log(EuropeanMakerDM.union(USAMakerDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} unionWith - DataModel instance for which union has to be applied with the instance on which\n     *      the method is called\n     *\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    union (unionWith) {\n        return union(this, unionWith);\n    }\n\n    /**\n     * {@link link_to_difference | Difference } operation only include rows which are present in the datamodel on which\n     * it was called but not on the one passed as argument.\n     *\n     * @example\n     * console.log(highPowerDM.difference(highExpensiveDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} differenceWith - DataModel instance for which difference has to be applied with the instance\n     *      on which the method is called\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    difference (differenceWith) {\n        return difference(this, differenceWith);\n    }\n\n    /**\n     * {@link link_to_selection | Selection} is a row filtering operation. It expects a predicate and an optional mode\n     * which control which all rows should be included in the resultant DataModel instance.\n     *\n     * {@link SelectionPredicate} is a function which returns a boolean value. For selection operation the selection\n     * function is called for each row of DataModel instance with the current row passed as argument.\n     *\n     * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n     * of rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resultant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  // with selection mode NORMAL:\n     *  const normDt = dt.select(fields => fields.Origin.value === \"USA\")\n     *  console.log(normDt));\n     *\n     * // with selection mode INVERSE:\n     * const inverDt = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.INVERSE })\n     * console.log(inverDt);\n     *\n     * // with selection mode ALL:\n     * const dtArr = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.ALL })\n     * // print the selected parts\n     * console.log(dtArr[0]);\n     * // print the inverted parts\n     * console.log(dtArr[1]);\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Function} selectFn - The predicate function which is called for each row with the current row.\n     * ```\n     *  function (row, i, cloneProvider, store)  { ... }\n     * ```\n     * @param {Object} config - The configuration object to control the inclusion exclusion of a row in resultant\n     * DataModel instance.\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection.\n     * @return {DataModel} Returns the new DataModel instance(s) after operation.\n     */\n    select (selectFn, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n\n        const cloneConfig = { saveChild: config.saveChild };\n        let oDm;\n\n        if (config.mode === FilteringMode.ALL) {\n            const selectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.NORMAL },\n                cloneConfig\n            );\n            const rejectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.INVERSE },\n                cloneConfig\n            );\n            oDm = [selectDm, rejectDm];\n        } else {\n            oDm = cloneWithSelect(\n                this,\n                selectFn,\n                config,\n                cloneConfig\n            );\n        }\n\n        return oDm;\n    }\n\n    /**\n     * Retrieves a boolean value if the current {@link DataModel} instance has data.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'CarName', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     * const data = [];\n     *\n     * const dt = new DataModel(schema, data);\n     * console.log(dt.isEmpty());\n     *\n     * @public\n     *\n     * @return {Boolean} True if the datamodel has no data, otherwise false.\n     */\n    isEmpty () {\n        return !this._rowDiffset.length || !this._colIdentifier.length;\n    }\n\n    /**\n     * Creates a clone from the current DataModel instance with child parent relationship.\n     *\n     * @private\n     * @param {boolean} [saveChild=true] - Whether the cloned instance would be recorded in the parent instance.\n     * @return {DataModel} - Returns the newly cloned DataModel instance.\n     */\n    clone (saveChild = true, linkParent = true) {\n        let retDataModel;\n        if (linkParent === false) {\n            const dataObj = this.getData({\n                getAllFields: true\n            });\n            const data = dataObj.data;\n            const schema = dataObj.schema;\n            const jsonData = data.map((row) => {\n                const rowObj = {};\n                schema.forEach((field, i) => {\n                    rowObj[field.name] = row[i];\n                });\n                return rowObj;\n            });\n            retDataModel = new this.constructor(jsonData, schema);\n        }\n        else {\n            retDataModel = new this.constructor(this);\n        }\n\n        if (saveChild) {\n            this._children.push(retDataModel);\n        }\n        return retDataModel;\n    }\n\n    /**\n     * {@link Projection} is filter column (field) operation. It expects list of fields' name and either include those\n     * or exclude those based on {@link FilteringMode} on the resultant variable.\n     *\n     * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n     * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resulatant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  const dm = new DataModel(schema, data);\n     *\n     *  // with projection mode NORMAL:\n     *  const normDt = dt.project([\"Name\", \"HorsePower\"]);\n     *  console.log(normDt.getData());\n     *\n     *  // with projection mode INVERSE:\n     *  const inverDt = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.INVERSE })\n     *  console.log(inverDt.getData());\n     *\n     *  // with selection mode ALL:\n     *  const dtArr = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.ALL })\n     *  // print the normal parts\n     *  console.log(dtArr[0].getData());\n     *  // print the inverted parts\n     *  console.log(dtArr[1].getData());\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n     * @param {Object} [config] - An optional config to control the creation of new DataModel\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n     *\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    project (projField, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const { mode } = config;\n\n        let normalizedProjField = projField.reduce((acc, field) => {\n            if (field.constructor.name === 'RegExp') {\n                acc.push(...allFields.filter(fieldName => fieldName.search(field) !== -1));\n            } else if (field in fieldConfig) {\n                acc.push(field);\n            }\n            return acc;\n        }, []);\n\n        normalizedProjField = Array.from(new Set(normalizedProjField)).map(field => field.trim());\n        let dataModel;\n\n        if (mode === FilteringMode.ALL) {\n            let projectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.NORMAL,\n                saveChild: config.saveChild\n            }, allFields);\n            let rejectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.INVERSE,\n                saveChild: config.saveChild\n            }, allFields);\n            dataModel = [projectionClone, rejectionClone];\n        } else {\n            let projectionClone = cloneWithProject(this, normalizedProjField, config, allFields);\n            dataModel = projectionClone;\n        }\n\n        return dataModel;\n    }\n\n    getFieldsConfig () {\n        return this._fieldConfig;\n    }\n\n    calculateFieldsConfig () {\n        this._fieldConfig = this._fieldspace.fields.reduce((acc, fieldDef, i) => {\n            acc[fieldDef.name()] = {\n                index: i,\n                def: { name: fieldDef.name(), type: fieldDef.type(), subtype: fieldDef.subtype() }\n            };\n            return acc;\n        }, {});\n        return this;\n    }\n\n\n    /**\n     * Frees up the resources associated with the current DataModel instance and breaks all the links instance has in\n     * the DAG.\n     *\n     * @public\n     */\n    dispose () {\n        this._parent.removeChild(this);\n        this._parent = null;\n    }\n\n    /**\n     * Removes the specified child {@link DataModel} from the child list of the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(schema, data);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\")\n     * dt.removeChild(dt2);\n     *\n     * @private\n     *\n     * @param {DataModel} child - Delegates the parent to remove this child.\n     */\n    removeChild (child) {\n        let idx = this._children.findIndex(sibling => sibling === child);\n        idx !== -1 ? this._children.splice(idx, 1) : true;\n    }\n\n    /**\n     * Adds the specified {@link DataModel} as a parent for the current {@link DataModel} instance.\n     *\n     * The optional criteriaQueue is an array containing the history of transaction performed on parent\n     *  {@link DataModel} to get the current one.\n     *\n     * @param {DataModel} parent - The datamodel instance which will act as parent.\n     * @param {Array} criteriaQueue - Queue contains in-between operation meta-data.\n     */\n    addParent (parent, criteriaQueue = []) {\n        persistDerivation(this, DM_DERIVATIVES.COMPOSE, null, criteriaQueue);\n        this._parent = parent;\n        parent._children.push(this);\n    }\n}\n\nexport default Relation;\n","/* eslint-disable default-case */\n\nimport { FieldType, DimensionSubtype, DataFormat } from './enums';\nimport {\n    persistDerivation,\n    getRootGroupByModel,\n    propagateToAllDataModels,\n    getRootDataModel,\n    propagateImmutableActions,\n    addToPropNamespace,\n    sanitizeUnitSchema\n} from './helper';\nimport { DM_DERIVATIVES, PROPAGATION } from './constants';\nimport {\n    dataBuilder,\n    rowDiffsetIterator,\n    groupBy\n} from './operator';\nimport { createBinnedFieldData } from './operator/bucket-creator';\nimport Relation from './relation';\nimport reducerStore from './utils/reducer-store';\nimport { createFields } from './field-creator';\n\n/**\n * DataModel is an in-browser representation of tabular data. It supports\n * {@link https://en.wikipedia.org/wiki/Relational_algebra | relational algebra} operators as well as generic data\n * processing opearators.\n * DataModel extends {@link Relation} class which defines all the relational algebra opreators. DataModel gives\n * definition of generic data processing operators which are not relational algebra complient.\n *\n * @public\n * @class\n * @extends Relation\n * @memberof Datamodel\n */\nclass DataModel extends Relation {\n    /**\n     * Creates a new DataModel instance by providing data and schema. Data could be in the form of\n     * - Flat JSON\n     * - DSV String\n     * - 2D Array\n     *\n     * By default DataModel finds suitable adapter to serialize the data. DataModel also expects a\n     * {@link Schema | schema} for identifying the variables present in data.\n     *\n     * @constructor\n     * @example\n     * const data = loadData('cars.csv');\n     * const schema = [\n     *      { name: 'Name', type: 'dimension' },\n     *      { name: 'Miles_per_Gallon', type: 'measure', unit : 'cm', scale: '1000', numberformat: val => `${val}G`},\n     *      { name: 'Cylinders', type: 'dimension' },\n     *      { name: 'Displacement', type: 'measure' },\n     *      { name: 'Horsepower', type: 'measure' },\n     *      { name: 'Weight_in_lbs', type: 'measure' },\n     *      { name: 'Acceleration', type: 'measure' },\n     *      { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *      { name: 'Origin', type: 'dimension' }\n     * ];\n     * const dm = new DataModel(data, schema, { name: 'Cars' });\n     * table(dm);\n     *\n     * @public\n     *\n     * @param {Array.<Object> | string | Array.<Array>} data Input data in any of the mentioned formats\n     * @param {Array.<Schema>} schema Defination of the variables. Order of the variables in data and order of the\n     *      variables in schema has to be same.\n     * @param {object} [options] Optional arguments to specify more settings regarding the creation part\n     * @param {string} [options.name] Name of the datamodel instance. If no name is given an auto generated name is\n     *      assigned to the instance.\n     * @param {string} [options.fieldSeparator=','] specify field separator type if the data is of type dsv string.\n     */\n    constructor (...args) {\n        super(...args);\n\n        this._onPropagation = [];\n        this._sortingDetails = [];\n    }\n\n    /**\n     * Reducers are simple functions which reduces an array of numbers to a representative number of the set.\n     * Like an array of numbers `[10, 20, 5, 15]` can be reduced to `12.5` if average / mean reducer function is\n     * applied. All the measure fields in datamodel (variables in data) needs a reducer to handle aggregation.\n     *\n     * @public\n     *\n     * @return {ReducerStore} Singleton instance of {@link ReducerStore}.\n     */\n    static get Reducers () {\n        return reducerStore;\n    }\n\n    /**\n     * Retrieve the data attached to an instance in JSON format.\n     *\n     * @example\n     * // DataModel instance is already prepared and assigned to dm variable\n     *  const data = dm.getData({\n     *      order: 'column',\n     *      formatter: {\n     *          origin: (val) => val === 'European Union' ? 'EU' : val;\n     *      }\n     *  });\n     *  console.log(data);\n     *\n     * @public\n     *\n     * @param {Object} [options] Options to control how the raw data is to be returned.\n     * @param {string} [options.order='row'] Defines if data is retieved in row order or column order. Possible values\n     *      are `'rows'` and `'columns'`\n     * @param {Function} [options.formatter=null] Formats the output data. This expects an object, where the keys are\n     *      the name of the variable needs to be formatted. The formatter function is called for each row passing the\n     *      value of the cell for a particular row as arguments. The formatter is a function in the form of\n     *      `function (value, rowId, schema) => { ... }`\n     *      Know more about {@link Fomatter}.\n     *\n     * @return {Array} Returns a multidimensional array of the data with schema. The return format looks like\n     *      ```\n     *          {\n     *              data,\n     *              schema\n     *          }\n     *      ```\n     */\n    getData (options) {\n        const defOptions = {\n            order: 'row',\n            formatter: null,\n            withUid: false,\n            getAllFields: false,\n            sort: []\n        };\n        options = Object.assign({}, defOptions, options);\n        const fields = this.getPartialFieldspace().fields;\n\n        const dataGenerated = dataBuilder.call(\n            this,\n            this.getPartialFieldspace().fields,\n            this._rowDiffset,\n            options.getAllFields ? fields.map(d => d.name()).join() : this._colIdentifier,\n            options.sort,\n            {\n                columnWise: options.order === 'column',\n                addUid: !!options.withUid\n            }\n        );\n\n        if (!options.formatter) {\n            return dataGenerated;\n        }\n\n        const { formatter } = options;\n        const { data, schema, uids } = dataGenerated;\n        const fieldNames = schema.map((e => e.name));\n        const fmtFieldNames = Object.keys(formatter);\n        const fmtFieldIdx = fmtFieldNames.reduce((acc, next) => {\n            const idx = fieldNames.indexOf(next);\n            if (idx !== -1) {\n                acc.push([idx, formatter[next]]);\n            }\n            return acc;\n        }, []);\n\n        if (options.order === 'column') {\n            fmtFieldIdx.forEach((elem) => {\n                const fIdx = elem[0];\n                const fmtFn = elem[1];\n\n                data[fIdx].forEach((datum, datumIdx) => {\n                    data[fIdx][datumIdx] = fmtFn.call(\n                        undefined,\n                        datum,\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        } else {\n            data.forEach((datum, datumIdx) => {\n                fmtFieldIdx.forEach((elem) => {\n                    const fIdx = elem[0];\n                    const fmtFn = elem[1];\n\n                    datum[fIdx] = fmtFn.call(\n                        undefined,\n                        datum[fIdx],\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        }\n\n        return dataGenerated;\n    }\n\n    /**\n     * Groups the data using particular dimensions and by reducing measures. It expects a list of dimensions using which\n     * it projects the datamodel and perform aggregations to reduce the duplicate tuples. Refer this\n     * {@link link_to_one_example_with_group_by | document} to know the intuition behind groupBy.\n     *\n     * DataModel by default provides definition of few {@link reducer | Reducers}.\n     * {@link ReducerStore | User defined reducers} can also be registered.\n     *\n     * This is the chained implementation of `groupBy`.\n     * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n     *\n     * @example\n     * const groupedDM = dm.groupBy(['Year'], { horsepower: 'max' } );\n     * console.log(groupedDm);\n     *\n     * @public\n     *\n     * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n     * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n     *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n     *      schema of the variable.\n     *\n     * @return {DataModel} Returns a new DataModel instance after performing the groupby.\n     */\n    groupBy (fieldsArr, reducers = {}, config = { saveChild: true }) {\n        const groupByString = `${fieldsArr.join()}`;\n        let params = [this, fieldsArr, reducers];\n        const newDataModel = groupBy(...params);\n\n        if (config.saveChild) {\n            this._children.push(newDataModel);\n            persistDerivation(\n                newDataModel,\n                DM_DERIVATIVES.GROUPBY,\n                { fieldsArr, groupByString, defaultReducer: reducerStore.defaultReducer() },\n                reducers\n            );\n        }\n\n        newDataModel._parent = this;\n        return newDataModel;\n    }\n\n    /**\n     * Performs sorting operation on the current {@link DataModel} instance according to the specified sorting details.\n     * Like every other operator it doesn't mutate the current DataModel instance on which it was called, instead\n     * returns a new DataModel instance containing the sorted data.\n     *\n     * DataModel support multi level sorting by listing the variables using which sorting needs to be performed and\n     * the type of sorting `ASC` or `DESC`.\n     *\n     * In the following example, data is sorted by `Origin` field in `DESC` order in first level followed by another\n     * level of sorting by `Acceleration` in `ASC` order.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * let sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\"] // Default value is ASC\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * // Sort with a custom sorting function\n     * sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\", (a, b) => a - b] // Custom sorting function\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @text\n     * DataModel also provides another sorting mechanism out of the box where sort is applied to a variable using\n     * another variable which determines the order.\n     * Like the above DataModel contains three fields `Origin`, `Name` and `Acceleration`. Now, the data in this\n     * model can be sorted by `Origin` field according to the average value of all `Acceleration` for a\n     * particular `Origin` value.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * const sortedDm = dm.sort([\n     *     ['Origin', ['Acceleration', (a, b) => avg(...a.Acceleration) - avg(...b.Acceleration)]]\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @public\n     *\n     * @param {Array.<Array>} sortingDetails - Sorting details based on which the sorting will be performed.\n     * @return {DataModel} Returns a new instance of DataModel with sorted data.\n     */\n    sort (sortingDetails) {\n        const rawData = this.getData({\n            order: 'row',\n            sort: sortingDetails\n        });\n        const header = rawData.schema.map(field => field.name);\n        const dataInCSVArr = [header].concat(rawData.data);\n\n        const sortedDm = new this.constructor(dataInCSVArr, rawData.schema, { dataFormat: 'DSVArr' });\n        sortedDm._sortingDetails = sortingDetails;\n        return sortedDm;\n    }\n\n    /**\n     * Performs the serialization operation on the current {@link DataModel} instance according to the specified data\n     * type. When an {@link DataModel} instance is created, it de-serializes the input data into its internal format,\n     * and during its serialization process, it converts its internal data format to the specified data type and returns\n     * that data regardless what type of data is used during the {@link DataModel} initialization.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance.\n     * const csvData = dm.serialize(DataModel.DataFormat.DSV_STR, { fieldSeparator: \",\" });\n     * console.log(csvData); // The csv formatted data.\n     *\n     * const jsonData = dm.serialize(DataModel.DataFormat.FLAT_JSON);\n     * console.log(jsonData); // The json data.\n     *\n     * @public\n     *\n     * @param {string} type - The data type name for serialization.\n     * @param {Object} options - The optional option object.\n     * @param {string} options.fieldSeparator - The field separator character for DSV data type.\n     * @return {Array|string} Returns the serialized data.\n     */\n    serialize (type, options) {\n        type = type || this._dataFormat;\n        options = Object.assign({}, { fieldSeparator: ',' }, options);\n\n        const fields = this.getFieldspace().fields;\n        const colData = fields.map(f => f.formattedData());\n        const rowsCount = colData[0].length;\n        let serializedData;\n        let rowIdx;\n        let colIdx;\n\n        if (type === DataFormat.FLAT_JSON) {\n            serializedData = [];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = {};\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row[fields[colIdx].name()] = colData[colIdx][rowIdx];\n                }\n                serializedData.push(row);\n            }\n        } else if (type === DataFormat.DSV_STR) {\n            serializedData = [fields.map(f => f.name()).join(options.fieldSeparator)];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row.join(options.fieldSeparator));\n            }\n            serializedData = serializedData.join('\\n');\n        } else if (type === DataFormat.DSV_ARR) {\n            serializedData = [fields.map(f => f.name())];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row);\n            }\n        } else {\n            throw new Error(`Data type ${type} is not supported`);\n        }\n\n        return serializedData;\n    }\n\n    addField (field) {\n        const fieldName = field.name();\n        this._colIdentifier += `,${fieldName}`;\n        const partialFieldspace = this._partialFieldspace;\n\n        if (!partialFieldspace.fieldsObj()[field.name()]) {\n            partialFieldspace.fields.push(field);\n        } else {\n            const fieldIndex = partialFieldspace.fields.findIndex(fieldinst => fieldinst.name() === fieldName);\n            fieldIndex >= 0 && (partialFieldspace.fields[fieldIndex] = field);\n        }\n\n        // flush out cached namespace values on addition of new fields\n        partialFieldspace._cachedFieldsObj = null;\n        partialFieldspace._cachedDimension = null;\n        partialFieldspace._cachedMeasure = null;\n\n        this.__calculateFieldspace().calculateFieldsConfig();\n        return this;\n    }\n\n    /**\n    * Creates a new variable calculated from existing variables. This method expects the definition of the newly created\n    * variable and a function which resolves the value of the new variable from existing variables.\n    *\n    * Can create a new measure based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const newDm = dataModel.calculateVariable({\n    *      name: 'powerToWeight',\n    *      type: 'measure'\n    *  }, ['horsepower', 'weight_in_lbs', (hp, weight) => hp / weight ]);\n    *\n    *\n    * Can create a new dimension based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const child = dataModel.calculateVariable(\n    *     {\n    *       name: 'Efficiency',\n    *       type: 'dimension'\n    *     }, ['horsepower', (hp) => {\n    *      if (hp < 80) { return 'low'; },\n    *      else if (hp < 120) { return 'moderate'; }\n    *      else { return 'high' }\n    *  }]);\n    *\n    * @public\n    *\n    * @param {Object} schema - The schema of newly defined variable.\n    * @param {Array.<string|function>} dependency - An array containing the dependency variable names and a resolver\n    * function as the last element.\n    * @param {Object} config - An optional config object.\n    * @param {boolean} [config.saveChild] - Whether the newly created DataModel will be a child.\n    * @param {boolean} [config.replaceVar] - Whether the newly created variable will replace the existing variable.\n    * @return {DataModel} Returns an instance of DataModel with the new field.\n    */\n    calculateVariable (schema, dependency, config) {\n        schema = sanitizeUnitSchema(schema);\n        config = Object.assign({}, { saveChild: true, replaceVar: false }, config);\n\n        const fieldsConfig = this.getFieldsConfig();\n        const depVars = dependency.slice(0, dependency.length - 1);\n        const retrieveFn = dependency[dependency.length - 1];\n\n        if (fieldsConfig[schema.name] && !config.replaceVar) {\n            throw new Error(`${schema.name} field already exists in datamodel`);\n        }\n\n        const depFieldIndices = depVars.map((field) => {\n            const fieldSpec = fieldsConfig[field];\n            if (!fieldSpec) {\n                // @todo dont throw error here, use warning in production mode\n                throw new Error(`${field} is not a valid column name.`);\n            }\n            return fieldSpec.index;\n        });\n\n        const clone = this.clone();\n\n        const fs = clone.getFieldspace().fields;\n        const suppliedFields = depFieldIndices.map(idx => fs[idx]);\n\n        let cachedStore = {};\n        let cloneProvider = () => this.detachedRoot();\n\n        const computedValues = [];\n        rowDiffsetIterator(clone._rowDiffset, (i) => {\n            const fieldsData = suppliedFields.map(field => field.partialField.data[i]);\n            computedValues[i] = retrieveFn(...fieldsData, i, cloneProvider, cachedStore);\n        });\n        const [field] = createFields([computedValues], [schema], [schema.name]);\n        clone.addField(field);\n\n        if (config.saveChild) {\n            persistDerivation(clone, DM_DERIVATIVES.CAL_VAR, { config: schema, fields: depVars }, retrieveFn);\n        }\n\n        return clone;\n    }\n\n    /**\n     * Propagates changes across all the connected DataModel instances.\n     *\n     * @param {Array} identifiers - A list of identifiers that were interacted with.\n     * @param {Object} payload - The interaction specific details.\n     *\n     * @return {DataModel} DataModel instance.\n     */\n    propagate (identifiers, config = {}, addToNameSpace, propConfig = {}) {\n        const isMutableAction = config.isMutableAction;\n        const propagationSourceId = config.sourceId;\n        const payload = config.payload;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const rootGroupByModel = getRootGroupByModel(this);\n        const rootModels = {\n            groupByModel: rootGroupByModel,\n            model: rootModel\n        };\n\n        addToNameSpace && addToPropNamespace(propagationNameSpace, config, this);\n        propagateToAllDataModels(identifiers, rootModels, { propagationNameSpace, sourceId: propagationSourceId },\n            Object.assign({\n                payload\n            }, config));\n\n        if (isMutableAction) {\n            propagateImmutableActions(propagationNameSpace, rootModels, {\n                config,\n                propConfig\n            }, this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Associates a callback with an event name.\n     *\n     * @param {string} eventName - The name of the event.\n     * @param {Function} callback - The callback to invoke.\n     * @return {DataModel} Returns this current DataModel instance itself.\n     */\n    on (eventName, callback) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation.push(callback);\n            break;\n        }\n        return this;\n    }\n\n    /**\n     * Unsubscribes the callbacks for the provided event name.\n     *\n     * @param {string} eventName - The name of the event to unsubscribe.\n     * @return {DataModel} Returns the current DataModel instance itself.\n     */\n    unsubscribe (eventName) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation = [];\n            break;\n\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to invoke the method associated with propagation.\n     *\n     * @param {Object} payload The interaction payload.\n     * @param {DataModel} identifiers The propagated DataModel.\n     * @memberof DataModel\n     */\n    handlePropagation (propModel, payload) {\n        let propListeners = this._onPropagation;\n        propListeners.forEach(fn => fn.call(this, propModel, payload));\n    }\n\n    /**\n     * Performs the binning operation on a measure field based on the binning configuration. Binning means discretizing\n     * values of a measure. Binning configuration contains an array; subsequent values from the array marks the boundary\n     * of buckets in [inclusive, exclusive) range format. This operation does not mutate the subject measure field,\n     * instead, it creates a new field (variable) of type dimension and subtype binned.\n     *\n     * Binning can be configured by\n     * - providing custom bin configuration with non-uniform buckets,\n     * - providing bins count,\n     * - providing each bin size,\n     *\n     * When custom `buckets` are provided as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', buckets: [30, 80, 100, 110] }\n     *  const binnedDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binsCount` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', binsCount: 5, start: 0, end: 100 }\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binSize` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHorsepower', binSize: 20, start: 5}\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @public\n     *\n     * @param {string} measureFieldName - The name of the target measure field.\n     * @param {Object} config - The config object.\n     * @param {string} [config.name] - The name of the new field which will be created.\n     * @param {string} [config.buckets] - An array containing the bucket ranges.\n     * @param {string} [config.binSize] - The size of each bin. It is ignored when buckets are given.\n     * @param {string} [config.binsCount] - The total number of bins to generate. It is ignored when buckets are given.\n     * @param {string} [config.start] - The start value of the bucket ranges. It is ignored when buckets are given.\n     * @param {string} [config.end] - The end value of the bucket ranges. It is ignored when buckets are given.\n     * @return {DataModel} Returns a new {@link DataModel} instance with the new field.\n     */\n    bin (measureFieldName, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        if (!fieldsConfig[measureFieldName]) {\n            throw new Error(`Field ${measureFieldName} doesn't exist`);\n        }\n\n        const binFieldName = config.name || `${measureFieldName}_binned`;\n\n        if (fieldsConfig[binFieldName]) {\n            throw new Error(`Field ${binFieldName} already exists`);\n        }\n\n        const measureField = this.getFieldspace().fieldsObj()[measureFieldName];\n        const { binnedData, bins } = createBinnedFieldData(measureField, this._rowDiffset, config);\n\n        const binField = createFields([binnedData], [\n            {\n                name: binFieldName,\n                type: FieldType.DIMENSION,\n                subtype: DimensionSubtype.BINNED,\n                bins\n            }], [binFieldName])[0];\n\n        const clone = this.clone();\n        clone.addField(binField);\n\n        persistDerivation(clone, DM_DERIVATIVES.BIN, { measureFieldName, config, binFieldName }, null);\n\n        return clone;\n    }\n\n    /**\n     * Creates a new {@link DataModel} instance with completely detached root from current {@link DataModel} instance,\n     * the new {@link DataModel} instance has no parent-children relationship with the current one, but has same data as\n     * the current one.\n     * This API is useful when a completely different {@link DataModel} but with same data as the current instance is\n     * needed.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *  const detachedDm = dm.detachedRoot();\n     *\n     * // has different namespace\n     * console.log(dm.getPartialFieldspace().name);\n     * console.log(detachedDm.getPartialFieldspace().name);\n     *\n     * // has same data\n     * console.log(dm.getData());\n     * console.log(detachedDm.getData());\n     *\n     * @public\n     *\n     * @return {DataModel} Returns a detached {@link DataModel} instance.\n     */\n    detachedRoot () {\n        const data = this.serialize(DataFormat.FLAT_JSON);\n        const schema = this.getSchema();\n\n        return new DataModel(data, schema);\n    }\n}\n\nexport default DataModel;\n","import { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport DataModel from '../export';\nimport reducerStore from '../utils/reducer-store';\nimport { FieldType } from '../enums';\n\n/**\n * This function sanitize the user given field and return a common Array structure field\n * list\n * @param  {DataModel} dataModel the dataModel operating on\n * @param  {Array} fieldArr  user input of field Array\n * @return {Array}           arrays of field name\n */\nfunction getFieldArr (dataModel, fieldArr) {\n    const retArr = [];\n    const fieldStore = dataModel.getFieldspace();\n    const dimensions = fieldStore.getDimension();\n\n    Object.entries(dimensions).forEach(([key]) => {\n        if (fieldArr && fieldArr.length) {\n            if (fieldArr.indexOf(key) !== -1) {\n                retArr.push(key);\n            }\n        } else {\n            retArr.push(key);\n        }\n    });\n\n    return retArr;\n}\n\n/**\n * This sanitize the reducer provide by the user and create a common type of object.\n * user can give function Also\n * @param  {DataModel} dataModel     dataModel to worked on\n * @param  {Object|function} [reducers={}] reducer provided by the users\n * @return {Object}               object containing reducer function for every measure\n */\nfunction getReducerObj (dataModel, reducers = {}) {\n    const retObj = {};\n    const pReducers = reducers;\n    const fieldStore = dataModel.getFieldspace();\n    const measures = fieldStore.getMeasure();\n    let reducer = reducerStore.defaultReducer();\n    if (typeof reducers === 'function') {\n        reducer = reducers;\n    }\n    Object.entries(measures).forEach(([key]) => {\n        if (typeof reducers[key] === 'string') {\n            pReducers[key] = reducerStore.resolve(pReducers[key]) ? reducerStore.resolve(pReducers[key]) : reducer;\n        }\n        if (typeof reducers[key] !== 'function') {\n            pReducers[key] = undefined;\n        }\n        retObj[key] = pReducers[key] || reducerStore.resolve(measures[key].defAggFn()) || reducer;\n    });\n    return retObj;\n}\n\n/**\n * main function which perform the group-by operations which reduce the measures value is the\n * fields are common according to the reducer function provided\n * @param  {DataModel} dataModel the dataModel to worked\n * @param  {Array} fieldArr  fields according to which the groupby should be worked\n * @param  {Object|Function} reducers  reducers function\n * @param {DataModel} existingDataModel Existing datamodel instance\n * @return {DataModel} new dataModel with the group by\n */\nfunction groupBy (dataModel, fieldArr, reducers, existingDataModel) {\n    const sFieldArr = getFieldArr(dataModel, fieldArr);\n    const reducerObj = getReducerObj(dataModel, reducers);\n    const fieldStore = dataModel.getFieldspace();\n    const fieldStoreObj = fieldStore.fieldsObj();\n    const dbName = fieldStore.name;\n    const dimensionArr = [];\n    const measureArr = [];\n    const schema = [];\n    const hashMap = {};\n    const data = [];\n    let newDataModel;\n\n    // Prepare the schema\n    Object.entries(fieldStoreObj).forEach(([key, value]) => {\n        if (sFieldArr.indexOf(key) !== -1 || reducerObj[key]) {\n            schema.push(extend2({}, value.schema()));\n\n            switch (value.schema().type) {\n            case FieldType.MEASURE:\n                measureArr.push(key);\n                break;\n            default:\n            case FieldType.DIMENSION:\n                dimensionArr.push(key);\n            }\n        }\n    });\n    // Prepare the data\n    let rowCount = 0;\n    rowDiffsetIterator(dataModel._rowDiffset, (i) => {\n        let hash = '';\n        dimensionArr.forEach((_) => {\n            hash = `${hash}-${fieldStoreObj[_].partialField.data[i]}`;\n        });\n        if (hashMap[hash] === undefined) {\n            hashMap[hash] = rowCount;\n            data.push({});\n            dimensionArr.forEach((_) => {\n                data[rowCount][_] = fieldStoreObj[_].partialField.data[i];\n            });\n            measureArr.forEach((_) => {\n                data[rowCount][_] = [fieldStoreObj[_].partialField.data[i]];\n            });\n            rowCount += 1;\n        } else {\n            measureArr.forEach((_) => {\n                data[hashMap[hash]][_].push(fieldStoreObj[_].partialField.data[i]);\n            });\n        }\n    });\n\n    // reduction\n    let cachedStore = {};\n    let cloneProvider = () => dataModel.detachedRoot();\n    data.forEach((row) => {\n        const tuple = row;\n        measureArr.forEach((_) => {\n            tuple[_] = reducerObj[_](row[_], cloneProvider, cachedStore);\n        });\n    });\n    if (existingDataModel) {\n        existingDataModel.__calculateFieldspace();\n        newDataModel = existingDataModel;\n    }\n    else {\n        newDataModel = new DataModel(data, schema, { name: dbName });\n    }\n    return newDataModel;\n}\n\nexport { groupBy, getFieldArr, getReducerObj };\n","import { rowDiffsetIterator } from './row-diffset-iterator';\n\nconst generateBuckets = (binSize, start, end) => {\n    const buckets = [];\n    let next = start;\n\n    while (next < end) {\n        buckets.push(next);\n        next += binSize;\n    }\n    buckets.push(next);\n\n    return buckets;\n};\n\nconst findBucketRange = (bucketRanges, value) => {\n    let leftIdx = 0;\n    let rightIdx = bucketRanges.length - 1;\n    let midIdx;\n    let range;\n\n    // Here use binary search as the bucketRanges is a sorted array\n    while (leftIdx <= rightIdx) {\n        midIdx = leftIdx + Math.floor((rightIdx - leftIdx) / 2);\n        range = bucketRanges[midIdx];\n\n        if (value >= range.start && value < range.end) {\n            return range;\n        } else if (value >= range.end) {\n            leftIdx = midIdx + 1;\n        } else if (value < range.start) {\n            rightIdx = midIdx - 1;\n        }\n    }\n\n    return null;\n};\n\n /**\n  * Creates the bin data from input measure field and supplied configs.\n  *\n  * @param {Measure} measureField - The Measure field instance.\n  * @param {string} rowDiffset - The datamodel rowDiffset values.\n  * @param {Object} config - The config object.\n  * @return {Object} Returns the binned data and the corresponding bins.\n  */\nexport function createBinnedFieldData (measureField, rowDiffset, config) {\n    let { buckets, binsCount, binSize, start, end } = config;\n    const [dMin, dMax] = measureField.domain();\n\n    if (!buckets) {\n        start = (start !== 0 && (!start || start > dMin)) ? dMin : start;\n        end = (end !== 0 && (!end || end < dMax)) ? (dMax + 1) : end;\n\n        if (binsCount) {\n            binSize = Math.ceil(Math.abs(end - start) / binsCount);\n        }\n\n        buckets = generateBuckets(binSize, start, end);\n    }\n\n    if (buckets[0] > dMin) {\n        buckets.unshift(dMin);\n    }\n    if (buckets[buckets.length - 1] <= dMax) {\n        buckets.push(dMax + 1);\n    }\n\n    const bucketRanges = [];\n    for (let i = 0; i < buckets.length - 1; i++) {\n        bucketRanges.push({\n            start: buckets[i],\n            end: buckets[i + 1]\n        });\n    }\n\n    const binnedData = [];\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const datum = measureField.partialField.data[i];\n        if (datum === null) {\n            binnedData.push(null);\n            return;\n        }\n\n        const range = findBucketRange(bucketRanges, datum);\n        binnedData.push(`${range.start}-${range.end}`);\n    });\n\n    return { binnedData, bins: buckets };\n}\n","import { fnList } from '../operator/group-by-function';\n\nexport const { sum, avg, min, max, first, last, count, std: sd } = fnList;\n","import DataModel from './datamodel';\nimport {\n  compose,\n  bin,\n  select,\n  project,\n  groupby as groupBy,\n  calculateVariable,\n  sort,\n  crossProduct,\n  difference,\n  naturalJoin,\n  leftOuterJoin,\n  rightOuterJoin,\n  fullOuterJoin,\n  union\n} from './operator';\nimport * as Stats from './stats';\nimport * as enums from './enums';\nimport { DateTimeFormatter } from './utils';\nimport { DataFormat, FilteringMode } from './constants';\nimport pkg from '../package.json';\n\nDataModel.Operators = {\n    compose,\n    bin,\n    select,\n    project,\n    groupBy,\n    calculateVariable,\n    sort,\n    crossProduct,\n    difference,\n    naturalJoin,\n    leftOuterJoin,\n    rightOuterJoin,\n    fullOuterJoin,\n    union\n};\nDataModel.Stats = Stats;\nObject.assign(DataModel, enums);\nDataModel.DateTimeFormatter = DateTimeFormatter;\nDataModel.DataFormat = DataFormat;\nDataModel.FilteringMode = FilteringMode;\nDataModel.version = pkg.version;\n\nexport default DataModel;\n","\n/**\n * DataModel's opearators are exposed as composable functional operators as well as chainable operators. Chainable\n * operators are called on the instances of {@link Datamodel} and {@link Relation} class.\n *\n * Those same operators can be used as composable operators from `DataModel.Operators` namespace.\n *\n * All these operators have similar behaviour. All these operators when called with the argument returns a function\n * which expects a DataModel instance.\n *\n * @public\n * @module Operators\n * @namespace DataModel\n */\n\n/**\n * This is functional version of selection operator. {@link link_to_selection | Selection} is a row filtering operation.\n * It takes {@link SelectionPredicate | predicate} for filtering criteria and returns a function.\n * The returned function is called with the DataModel instance on which the action needs to be performed.\n *\n * {@link SelectionPredicate} is a function which returns a boolean value. For selection opearation the selection\n * function is called for each row of DataModel instance with the current row passed as argument.\n *\n * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n * of rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * [Warn] Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * [Error] `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @example\n * const select = DataModel.Operators.select;\n * usaCarsFn = select(fields => fields.Origin.value === 'USA');\n * usaCarsDm = usaCarsFn(dm);\n * console.log(usaCarsDm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {SelectionPredicate} selectFn - Predicate funciton which is called for each row with the current row\n *      ```\n *          function (row, i)  { ... }\n *      ```\n * @param {Object} [config] - The configuration object to control the inclusion exclusion of a row in resultant\n *      DataModel instance\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const select = (...args) => dm => dm.select(...args);\n\n/**\n * This is functional version of projection operator. {@link link_to_projection | Projection} is a column filtering\n * operation.It expects list of fields name and either include those or exclude those based on {@link FilteringMode} on\n * the  resultant variable.It returns a function which is called with the DataModel instance on which the action needs\n * to be performed.\n *\n * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n * @param {Object} [config] - An optional config to control the creation of new DataModel\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const project = (...args) => dm => dm.project(...args);\n\n/**\n * This is functional version of binnig operator. Binning happens on a measure field based on a binning configuration.\n * Binning in DataModel does not aggregate the number of rows present in DataModel instance after binning, it just adds\n * a new field with the binned value. Refer binning {@link example_of_binning | example} to have a intuition of what\n * binning is and the use case.\n *\n * Binning can be configured by\n * - providing custom bin configuration with non uniform buckets\n * - providing bin count\n * - providing each bin size\n *\n * When custom buckets are provided as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const buckets = {\n *      start: 30\n *      stops: [80, 100, 110]\n *  };\n *  const config = { buckets, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(dm);\n *\n * @text\n * When `binCount` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binCount: 5, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @text\n * When `binSize` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binSize: 200, name: 'binnedHorsepower' }\n *  const binnedDm = dataModel.bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {String} name Name of measure which will be used to create bin\n * @param {Object} config Config required for bin creation\n * @param {Array.<Number>} config.bucketObj.stops Defination of bucket ranges. Two subsequent number from arrays\n *      are picked and a range is created. The first number from range is inclusive and the second number from range\n *      is exclusive.\n * @param {Number} [config.bucketObj.startAt] Force the start of the bin from a particular number.\n *      If not mentioned, the start of the bin or the lower domain of the data if stops is not mentioned, else its\n *      the first value of the stop.\n * @param {Number} config.binSize Bucket size for each bin\n * @param {Number} config.binCount Number of bins which will be created\n * @param {String} config.name Name of the new binned field to be created\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const bin = (...args) => dm => dm.bin(...args);\n\n/**\n * This is functional version of `groupBy` operator.Groups the data using particular dimensions and by reducing\n * measures. It expects a list of dimensions using which it projects the datamodel and perform aggregations to reduce\n * the duplicate tuples. Refer this {@link link_to_one_example_with_group_by | document} to know the intuition behind\n * groupBy.\n *\n * DataModel by default provides definition of few {@link reducer | Reducers}.\n * {@link ReducerStore | User defined reducers} can also be registered.\n *\n * This is the chained implementation of `groupBy`.\n * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n *\n * @example\n * const groupBy = DataModel.Operators.groupBy;\n * const groupedFn = groupBy(['Year'], { horsepower: 'max' } );\n * groupedDM = groupByFn(dm);\n *\n * @public\n *\n * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n *      schema of the variable.\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const groupBy = (...args) => dm => dm.groupBy(...args);\n\n/**\n * Enables composing operators to run multiple operations and save group of operataion as named opration on a DataModel.\n * The resulting DataModel will be the result of all the operation provided. The operations provided will be executed in\n * a serial manner ie. result of one operation will be the input for the next operations (like pipe operator in unix).\n *\n * Suported operations in compose are\n * - `select`\n * - `project`\n * - `groupBy`\n * - `bin`\n * - `compose`\n *\n * @example\n * const compose = DataModel.Operators.compose;\n * const select = DataModel.Operators.select;\n * const project = DataModel.Operators.project;\n *\n * let composedFn = compose(\n *    select(fields => fields.netprofit.value <= 15),\n *    project(['netprofit', 'netsales']));\n *\n * const dataModel = new DataModel(data1, schema1);\n *\n * let composedDm = composedFn(dataModel);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<Operators>} operators: An array of operation that will be applied on the\n * datatable.\n *\n * @returns {DataModel} Instance of resultant DataModel\n */\nexport const compose = (...operations) =>\n    (dm, config = { saveChild: true }) => {\n        let currentDM = dm;\n        let frstChild;\n        const derivations = [];\n        const saveChild = config.saveChild;\n\n        operations.forEach((operation) => {\n            currentDM = operation(currentDM);\n            derivations.push(...currentDM._derivation);\n            if (!frstChild) {\n                frstChild = currentDM;\n            }\n        });\n\n        saveChild && currentDM.addParent(dm, derivations);\n        if (derivations.length > 1) {\n            frstChild.dispose();\n        }\n\n        return currentDM;\n    };\n","/**\n * Wrapper on calculateVariable() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const calculateVariable = (...args) => dm => dm.calculateVariable(...args);\n\n/**\n * Wrapper on sort() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const sort = (...args) => dm => dm.sort(...args);\n","import { crossProduct } from './cross-product';\nimport { naturalJoinFilter } from './natural-join-filter-function';\n\nexport function naturalJoin (dataModel1, dataModel2) {\n    return crossProduct(dataModel1, dataModel2, naturalJoinFilter(dataModel1, dataModel2), true);\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hyperdis\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hyperdis\"] = factory();\n\telse\n\t\troot[\"hyperdis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import {\n    pullableRecent,\n    pullableEnd\n} from './utils';\n\nexport default class ElectricNode {\n    constructor () {\n        this.edges = [];\n        this.listeners = {\n            nextFrame: [],\n            currentFrame: []\n        };\n    }\n\n    addEdges (...nodes) {\n        this.edges.push(...nodes);\n        return this;\n    }\n\n    regListenerForCurrFrame (fn) {\n        const lstnrs = this.listeners.currentFrame;\n        let index = lstnrs.push(pullableRecent(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.currentFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    regListenerForNextFrame (fn) {\n        const lstnrs = this.listeners.nextFrame;\n        let index = lstnrs.push(pullableEnd(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.nextFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    hasNextFrameListener () {\n        return !!this.listeners.nextFrame.length;\n    }\n}\n","export default class GraphNode {\n    constructor (name, qualifiedName, options) {\n        /* istanbul ignore next */options = options || {};\n        this.name = name;\n        this.qualifiedName = qualifiedName;\n        this.edges = [];\n        this.outgoingEdges = [];\n        this._seed = null;\n        this.requireResolve = true;\n        this.retriever = options.retriever;\n        this.history = [];\n        this.resolver = null;\n        this.electricEdges = [];\n    }\n\n    addDependencies (...dep) {\n        this.edges.push(...dep);\n        dep.forEach(entry => entry.outgoingEdges.push(this));\n        return this;\n    }\n\n    addElectricNode (node) {\n        this.electricEdges.push(node);\n        return this;\n    }\n\n    get seed () {\n        return this._seed;\n    }\n\n    set seed (value) {\n        this._seed = value;\n        this.requireResolve = true;\n        return this;\n    }\n\n    resolve () {\n        this.seed = this.resolver(...this.retrieveDetails());\n        this.history.push(this.seed);\n        this.requireResolve = false;\n        return this;\n    }\n\n    retrieveDetails () {\n        if (this.edges.length === 0) {\n            return [{\n                name: this.name,\n                qualifiedName: this.qualifiedName,\n                value: this.seed\n            }];\n        }\n        return this.retriever(...this.edges.map(edge => edge.qualifiedName));\n    }\n\n    repeatHead () {\n        const\n            history = this.history,\n            head = history[history.length - 1];\n        // @todo- Akash, write test case if history.length === 0 to pass code coverage\n        if (history.length === 0) {\n            return this;\n        }\n        history.push(head);\n        return this;\n    }\n\n    flush () {\n        const hist = this.history,\n            head = hist[hist.length - 1];\n        hist.length = 0;\n        hist.push(head);\n        return this;\n    }\n\n    isRoot () {\n        return this.name === null;\n    }\n}\n","import {\n    isSimpleObject,\n    resolver,\n    // upstreamNodes,\n    flat,\n    resolveDependencyOrder,\n    getUpstreamNodes,\n    ForeignSet,\n    fetch,\n    CustomResolver,\n    scheduler\n} from './utils';\nimport Node from './graph-node';\nimport ElectricNode from './electric-node';\n\nexport default class Graph {\n    constructor () {\n        this.qualifiedNodeMap = {};\n        this.retriever = fetch(this.qualifiedNodeMap);\n        this.root = new Node(null, null, { retriever: this.retriever });\n        this.root.resolver = resolver.accumulate;\n\n        this._wholeSet = null;\n        this._propagate = true;\n        this.propagationOverride = {\n            currentFrameListeners: false,\n            nextFrameListeners: false\n        };\n\n        this._schedule = scheduler((payload) => {\n            let qname;\n            for (qname in payload.flushTarget) {\n                if (!({}).hasOwnProperty.call(this.qualifiedNodeMap, qname)) {\n                    return;\n                }\n                this.qualifiedNodeMap[qname].flush();\n            }\n        });\n    }\n\n    createNodesFrom (obj, mount) {\n        let val,\n            resolveReqList;\n        const qualifiedNodeMap = this.qualifiedNodeMap,\n            root = this.root,\n            retriever = this.retriever;\n\n        (function rec (objn, qualifiedName, history) {\n            let key,\n                qname,\n                perv,\n                node;\n\n            for (key in objn) {\n                if (!({}).hasOwnProperty.call(objn, key)) {\n                    continue;\n                }\n                qname = `${qualifiedName}${key}`;\n                node = new Node(key, qname, { retriever });\n                qualifiedNodeMap[qname] = node;\n\n                if ((perv = history.perv) !== undefined) {\n                    perv.addDependencies(node);\n                } else {\n                    // top most level entries\n                    root.addDependencies(node);\n                }\n\n                if (isSimpleObject(val = objn[key])) {\n                    rec(val, `${qualifiedName}${key}.`, { perv: node });\n                    node.resolver = resolver.accumulate;\n                } else if (val instanceof CustomResolver) {\n                    node.resolver = val.get();\n                    node.addDependencies(...val.getDependencies().map(qname => qualifiedNodeMap[qname]));\n                } else {\n                    node.resolver = resolver.identity;\n                    node.seed = val;\n                    // node.resolve();\n                }\n            }\n        }(obj, mount === null ? '' : `${mount}.`, {\n            perv: qualifiedNodeMap[mount]\n        }));\n\n        this._wholeSet = new ForeignSet(Object.keys(this.qualifiedNodeMap));\n\n        // Recalculate the model without firing the listeners\n        // @todo selective branch resolve. Currently resolve gets called even for a branch which was updated\n        resolveReqList = this.constructor.getResolvedList(root).concat(root).filter(node => node.requireResolve);\n        resolveReqList.forEach(node => node.resolve());\n        getUpstreamNodes(resolveReqList).forEach(node => node.resolve());\n        return this;\n    }\n\n    getNodeValue (prop) {\n        if (prop in this.qualifiedNodeMap) {\n            return this.qualifiedNodeMap[prop].seed;\n        }\n        return undefined;\n    }\n\n    createElectricNodeOf (props, fnSpec) {\n        const nodes = props.map(prop => this.qualifiedNodeMap[prop]),\n            eNode = new ElectricNode().addEdges(...nodes);\n\n        nodes.forEach(node => node.addElectricNode(eNode));\n        return eNode[`regListenerFor${fnSpec.type}`](fnSpec.fn);\n    }\n\n    update (...params) {\n        let changedSet,\n            upstreamNodes;\n        const\n            electricEdges = [],\n            nodes = params.map((entry) => {\n                entry[0].seed = entry[1];\n                return entry[0];\n            });\n        nodes.forEach(node => node.resolve());\n        electricEdges.push(...flat(...nodes.map(node => node.electricEdges)));\n        changedSet = new ForeignSet(nodes.map(node => node.qualifiedName));\n\n        if (!this._propagate) {\n            this.__execUniqueElectricEdges(electricEdges);\n            this._propagate = true;\n            return this;\n        }\n\n        upstreamNodes = getUpstreamNodes(nodes);\n        upstreamNodes.forEach(upstreamNode => upstreamNode.resolve());\n        changedSet.append(upstreamNodes.map(node => node.qualifiedName));\n        electricEdges.push(...flat(...upstreamNodes.map(node => node.electricEdges)));\n\n        this.__execUniqueElectricEdges(Array.from(new Set(electricEdges)), changedSet);\n        return this;\n    }\n\n    __execUniqueElectricEdges (electricEdges, changedSet) {\n        const\n            cfLstnrs = [], // current frame listeners\n            nfLstnrs = []; // next frame listeners\n        if (changedSet) {\n            const\n                differenceSet = ForeignSet.difference(this._wholeSet, changedSet),\n                entries = differenceSet.toArray();\n\n            entries.forEach(entry => this.qualifiedNodeMap[entry].repeatHead());\n        }\n\n        electricEdges.forEach((e) => {\n            cfLstnrs.push(...e.listeners.currentFrame);\n        });\n        electricEdges.forEach((e) => {\n            nfLstnrs.push(...e.listeners.nextFrame);\n        });\n\n        !this.propagationOverride.currentFrameListeners && cfLstnrs.forEach(fn => fn());\n        !this.propagationOverride.nextFrameListeners && this._schedule(nfLstnrs, { flushTarget: changedSet });\n        this.resetPropagationOverride();\n        return this;\n    }\n\n    resetNodeValue (...qnames) {\n        const nodes = qnames.map(qname => this.qualifiedNodeMap[qname]),\n            args = nodes.map(node => [node, node.seed]);\n        this.update(...args);\n        return this;\n    }\n\n    static getResolvedList (node) {\n        const resolved = [];\n        resolveDependencyOrder(node, resolved, {});\n        return resolved;\n    }\n\n    stopPropagation () {\n        this._propagate = false;\n        return this;\n    }\n\n    resetPropagationOverride () {\n        this.propagationOverride.currentFrameListeners = false;\n        this.propagationOverride.nextFrameListeners = false;\n        return this;\n    }\n\n    setPropagationOverride (key) {\n        this.propagationOverride[`${key}Listeners`] = true;\n        return this;\n    }\n\n    getNodeFromQualifiedName (qname) {\n        return this.qualifiedNodeMap[qname];\n    }\n}\n","import Model from './model';\n\nexport default Model;\n","import Graph from './graph';\nimport { CustomResolver, fetchAggregator } from './utils';\n\n/**\n * The container class for Hyperdis. Hyperdis is an enabler for observable object with few interesting features like,\n * calculated property, next frame and same frame listeners, multiple listeners etc with a dependency resolving system.\n * It internally uses a graph to hold the hierarchial relationship of a object. Model is merely a container which\n * ties all the components together.\n *\n * @todo Circular dependency detection is not present\n *\n * @example check src/index.spec.js\n * @class\n */\nclass Model {\n    constructor () {\n        this._graph = new Graph();\n        this._lockFlag = false;\n        this._reqQ = [];\n    }\n\n    /**\n     * Static method to create and init the model with an observable seed\n     *\n     * @param {Object} obj The target object which is required to be made observable\n     * @return {Model} instance of the observable object model\n     */\n    static create (obj) {\n        return new Model()._addPropInModel(null, obj);\n    }\n\n    /**\n     * Appends more observable property on the already observable instance. This mutates the original model.\n     *\n     * This function works in two mode. One being\n     * @param {String} mountPoint the property on which the new set of properties will be mounted. If its a nested\n     *                          property then the mountPoint has to be written such a way so it feels like you are\n     *                          accessing the object. If the mount point is not found then he obeservables are added in\n     *                          the root.\n     * @param {Object} The target object which is required to be made observable\n     *\n     * Another being\n     * @param {Object} The target object which is required to be made observable\n     *\n     * @return {Model} instance of the observable object model\n     */\n    append (...params) {\n        let mountPoint,\n            obj;\n\n        if (params.length === 1) {\n            mountPoint = null;\n            obj = params[0];\n        } else {\n            mountPoint = params[0];\n            obj = params[1];\n        }\n\n        this._addPropInModel(mountPoint, obj);\n        return this;\n    }\n\n    /**\n     * Creates a calculated variable from existing variable. This variable can't be updated from outside.\n     * @param {string} mountpoint property path on which the new variable will be placed\n     * @param {string} name name of the variable. If the variable could have hierarchy like `limits.start`\n     * @param {Function} fn funtion where the dependent variables are injected based on the dependency requirement\n     */\n    calculatedProp (...params) {\n        let calculationConfig,\n            customResolver,\n            varName,\n            mount,\n            fetchFn;\n\n        if (params.length > 2) {\n            mount = params[0];\n            varName = params[1];\n            fetchFn = params[2];\n        } else {\n            mount = null;\n            varName = params[0];\n            fetchFn = params[1];\n        }\n\n        calculationConfig = fetchFn(fetchAggregator);\n        customResolver = new CustomResolver(calculationConfig.fn);\n        customResolver.addDependencies(...calculationConfig.dependencies);\n\n        this._addPropInModel(mount, { [varName]: customResolver });\n        return this;\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    _addPropInModel (mountPoint, obj) {\n        this._graph.createNodesFrom(obj, mountPoint);\n        return this;\n    }\n\n    /**\n     * Register a listener in the current frame when a property or group of properties is changed.\n     *\n     * @example\n     * This function takes a single or group of property and handler which is called when any of the properties are\n     * changed.\n     * When a single property is changed the handler is called with two parameter, what was the old value of the state\n     * property and what is the new value.\n     * myState.on('range.start', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 9);\n     * // Output\n     * Value before prop change 1\n     * Value after prop change 9\n     *\n     * If a handler is registered on change of a property which has another state property as value, then the handler\n     * gets called whenever any state property connected to it gets changed\n     *\n     * myState.on('range', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 10);\n     * myState.prop('range.type.absolute', false);\n     *\n     * // Output\n     * Value before prop change\n     * range {\n     *      start: 9,\n     *      end: 5,\n     *      type: {\n     *          absolute: true\n     *      }\n     * }\n     * Value after prop change\n     * range: {\n     *      start: 10,\n     *      end: 5,\n     *      type: {\n     *          absolute: false\n     *      }\n     * }\n     * If a handler is registered with more than one property change then, the handler is called when any of the\n     * properties gets changed. In this cast the handler is called with more than one parameter: each for one state\n     * property which is registered for listening. Each parameter is of type array containing [oldValue, newValue]\n     *\n     * myState.on('range.start', 'range.end', (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * myState.prop('range.start', 12);\n     *\n     * // Output\n     * Start [10, 12]\n     * End [5, 5]\n     *\n     * myState.prop('range.end', 7);\n     *\n     * // Output\n     * Start [12, 12]\n     * End [5, 7]\n     *\n     * The on returns a function which is when called the listener registered gets unregistered\n     *\n     * let unsub = myState.on(['range.start', 'range.end'], (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * // Unsubscribe\n     * unsub()\n     *\n     * On takes an optional boolean value as the last parameter, which if passed as a true value the handler gets called\n     * during registration itself.\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    on (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed in the current stack frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'CurrFrame',\n                fn\n            });\n\n        if (instantCall) {\n            // Bar current next frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('nextFrame').resetNodeValue(...props);\n        }\n        return unsub;\n    }\n\n    /**\n     * Register a listener for the next frame when a property or group of properties is changed.\n     *\n     * @example\n     * See the examples for the on listener\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties. Here the oldvalue is last value of the last frame\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    next (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed at the tick of next animation frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'NextFrame',\n                fn\n            });\n\n        // @todo check support for this from the graph side\n        if (instantCall) {\n            // Bar current frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('currentFrame').resetNodeValue(...props);\n        }\n\n        return unsub;\n    }\n\n    /**\n     * Lock queues the request of property change and releases the change when unlock is called. This is helpful when\n     * multiple property is getting called and the model listeners are to be fired once at the end of update.\n     *\n     * @return {Model} instance of the model\n     */\n    lock () {\n        this._lockFlag = true;\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * Unlock unleashes the change done after the lock was called.\n\n     * @return {Model} instance of the model\n     */\n    unlock () {\n        this._lockFlag = false;\n        this.setProp(...this._reqQ);\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * This acts as getter and setter. If the function is called by passing only one argument, it retrieve the value\n     * associated with the property. If the same function is called using two parameters, first one being the property\n     * and second one being the value, then the value is set for the property and the handlers are called (if any)\n     * which got registered using the on function\n     *\n     * Getter\n     * @param {string} prop property path whose value to be retrieved\n     * @return {Object} value of the property at the time of call\n     *\n     * Setter\n     * @param {string} property property path whose value to be ser\n     * @return {Model} instance of the model\n     */\n    prop (...params) {\n        let prop,\n            val,\n            len;\n\n        switch (len = params.length) {\n        case 1:\n            prop = params[0];\n            break;\n\n        case 2:\n            prop = params[0];\n            val = params[1];\n            break;\n\n        default:\n            return this;\n        }\n\n        if (len === 2) {\n            this._lockFlag ? this._reqQ.push([prop, val]) : this.setProp([prop, val]);\n            return this;\n        }\n\n        return this._graph.getNodeValue(prop);\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    setProp (...props) {\n        // Filter out the calculated variables, so that it cant be changed from outside\n        // @todo if a node is not leafValue, and change is called, ignore it too\n        // props = props.filter(prop => !(VirtualObj.walkTill(prop[0].split('.'), this._vObj).leafValue()\n        //     instanceof CalculatedVar));\n\n        if (props.length === 0) {\n            return this;\n        }\n\n        this._graph.update(...props.map(prop => [this._graph.getNodeFromQualifiedName(prop[0]), prop[1]]));\n        return this;\n    }\n\n    /**\n     * Retrieves the graph representation of the object\n     * @return {Graph} instance of the graph associated to the model\n     */\n    graph () {\n        return this._graph;\n    }\n\n    /**\n     * Get serialized data from the model\n     *\n     * @return {Object} Serialized data\n     */\n    serialize () {\n        return this._graph.root.seed;\n    }\n}\n\nexport default Model;\n","/* global window */\n\nimport ForeignSet from './set';\n\nconst\n    isSimpleObject = (obj) => {\n        let token;\n        if (typeof obj === 'object') {\n            if (obj === null) { return false; }\n            token = Object.prototype.toString.call(obj);\n            if (token === '[object Object]') {\n                return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n            }\n        }\n        return false;\n    },\n    minMsThreshold = 16,\n    /* istanbul ignore next */win = typeof window === 'undefined' ? (this || {}) : window,\n    /* istanbul ignore next */ reqAnimFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame ||\n        win.mozRequestAnimationFrame || win.oRequestAnimationFrame ||\n        win.msRequestAnimationFrame ||\n        function (callback) {\n            setTimeout(callback, minMsThreshold);\n        },\n\n    getTimeBasedId = () => {\n        if (getTimeBasedId.__lastTime === new Date().getTime()) {\n            return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n        }\n\n        getTimeBasedId.__id = 0;\n        getTimeBasedId.__lastTime = new Date().getTime();\n        return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n    },\n    pullableRecent = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const\n                    hist = node.history,\n                    l = hist.length - 1;\n                return [hist[l - 1 < 0 ? 0 : l - 1], hist[l]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    pullableEnd = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const hist = node.history;\n                return [hist[0], hist[hist.length - 1]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    unique = fns => fns\n                    .reduce((store, fn) => {\n                // @warn function with side effect, it mutates the store passed during initialization\n                        if (fn.__id in store.map) {\n                            return store;\n                        }\n\n                        store.map[fn.__id] = 1;\n                        store.unique.push(fn);\n\n                        return store;\n                    }, { map: {}, unique: [] })\n                    .unique,\n    compose = fns => () => {\n        fns.forEach(fn => fn());\n    },\n    flat = (...params) => {\n        const res = [];\n        params.forEach(param => res.push(...param));\n        return res;\n    },\n    identityMap = arrays => arrays,\n    splitPathProp = (path) => {\n        const pathArr = path.split('.'),\n            len = pathArr.length;\n        return [pathArr.slice(0, len - 1), pathArr[len - 1]];\n    },\n    scheduler = (onFinishCallback) => {\n        let queue = [],\n            animationFrame = null;\n\n        onFinishCallback = onFinishCallback &&\n            typeof onFinishCallback === 'function' && onFinishCallback || (() => { });\n\n        return (listeners, payload) => {\n            [].push.apply(queue, listeners);\n            if (animationFrame === null) {\n                animationFrame = reqAnimFrame(() => {\n                    const tempQ = queue.slice(0);\n                    queue.length = 0;\n                    animationFrame = null;\n\n                    unique(tempQ).forEach(fn => fn());\n                    onFinishCallback(payload);\n                });\n            }\n        };\n    },\n    fetch = namedNode => (...params) => params.map((param) => {\n        const node = namedNode[param];\n        return {\n            name: node.name,\n            qualifiedName: node.qualifiedName,\n            value: node.seed\n        };\n    }),\n    fetchAggregator = (...params) => ({\n        dependencies: params.slice(0, params.length - 1),\n        fn: params[params.length - 1]\n    }),\n    getUpstreamNodes = (list) => {\n        let res = [];\n        const map = {};\n        list.forEach(node => map[node.qualifiedName] = -1);\n        function rec (arr) {\n            arr.forEach((node) => {\n                let qname,\n                    placedIndex,\n                    preArr,\n                    postArr;\n                if (!((qname = node.qualifiedName) in map)) {\n                    map[qname] = res.push(node) - 1;\n                } else {\n                    placedIndex = map[qname];\n                    if (placedIndex !== -1 && placedIndex !== res.length - 1) {\n                        // If not the last element, readjust the array so that the later dependency position is saved\n                        preArr = res.slice(0, placedIndex);\n                        postArr = res.slice(placedIndex + 1);\n                        res = preArr.concat(postArr);\n\n                        // reset the index in map\n                        postArr.forEach((elem, i) => map[elem.qualifiedName] = i + preArr.length);\n                        map[qname] = res.push(node) - 1;\n                    }\n                }\n                rec(node.outgoingEdges);\n            });\n        }\n        rec(list);\n        return res;\n    },\n    resolver = {\n        accumulate: (...params) => {\n            const resp = {};\n            params.forEach((nodeDetails) => {\n                Object.assign(resp, { [nodeDetails.name]: nodeDetails.value });\n            });\n            return resp;\n        },\n        identity: nodeDetails => nodeDetails.value\n    };\n\nfunction resolveDependencyOrder (node, resolved, resolveMap) {\n    let qname;\n    node.edges.forEach((neighbour) => {\n        resolveDependencyOrder(neighbour, resolved, resolveMap);\n    });\n\n    if (node.isRoot() || (qname = node.qualifiedName) in resolveMap) {\n        return;\n    }\n    resolved.push(node);\n    resolveMap[qname] = 1;\n}\n\nclass CustomResolver {\n    constructor (resolver) {\n        this.fn = resolver;\n        this.dep = [];\n    }\n\n    addDependencies(...dep) {\n        this.dep.push(...dep);\n        return this;\n    }\n\n    getDependencies () {\n        return this.dep;\n    }\n\n    get () {\n        return this.fn;\n    }\n}\n\nexport {\n    isSimpleObject,\n    scheduler,\n    compose,\n    flat,\n    identityMap,\n    pullableEnd,\n    pullableRecent,\n    unique,\n    splitPathProp,\n    resolver,\n    ForeignSet,\n    resolveDependencyOrder,\n    fetch,\n    fetchAggregator,\n    CustomResolver,\n    getUpstreamNodes\n};\n","const makeEntry = (arr, sCon) => {\n    arr.forEach((elem) => {\n        if (elem === undefined || elem === null) {\n            return;\n        }\n        sCon[elem] = 1;\n    });\n};\n\nexport default class ForeignSet {\n    constructor (arr) {\n        this._set = {};\n        makeEntry(arr, this._set);\n    }\n\n    append (arr) {\n        makeEntry(arr, this._set);\n        return this;\n    }\n\n    toArray () {\n        return Object.keys(this._set);\n    }\n\n    static difference (set1, set2) {\n        let key;\n        const filteredKeys = [],\n            s1 = set1._set,\n            s2 = set2._set;\n        for (key in s1) {\n            if (!({}).hasOwnProperty.call(s1, key)) {\n                continue;\n            }\n            if (key in s2) {\n                continue;\n            }\n            filteredKeys.push(key);\n        }\n        return new ForeignSet(filteredKeys);\n    }\n}\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar _containerManager = require('./container-manager');\n\nvar _containerManager2 = _interopRequireDefault(_containerManager);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    BLANK = '',\n    htmlSplCharSpace = { ' ': '&nbsp;' },\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\n/*\n * Create new instance of SmartLabelManager.\n *\n * SmartLabelManager controls the lifetime of the execution space where the text's metrics will be calculated.\n * This takes a string for a given style and returns the height, width.\n * If a bound box is defined it wraps the text and returns the wrapped height and width.\n * It allows to append ellipsis at the end if the text is truncated.\n *\n * @param {String | Number} id - Id of the instance. If the same id is passed, it disposes the old instance and\n *                              save the new one;\n * @param {String | HTMLElement} container - The id or the instance of the container where the intermediate dom\n *                              elements are to be attached. If not passed, it appends in div\n *\n * @param {Boolean} useEllipses - This decides if a ellipses to be appended if the text is truncated.\n * @param {Object} options - Control options\n *                          {\n *                              maxCacheLimit: No of letter to be cached. Default: 500.\n *                          }\n * @constructor\n */\nfunction SmartLabelManager(id, container, useEllipses, options) {\n    var wrapper,\n        prop,\n        max,\n        prevInstance,\n        isBrowserLess = false,\n        store = SmartLabelManager.store;\n\n    if (typeof id === 'undefined' || typeof id === 'object') {\n        return;\n    }\n\n    if (prevInstance = store[id]) {\n        prevInstance.dispose();\n    }\n\n    store[id] = this;\n    options = options || {};\n    options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n    if (typeof container === 'string') {\n        container = doc.getElementById(container);\n    }\n\n    wrapper = slLib.createContainer(container);\n    wrapper.innerHTML = slLib.testStrAvg;\n\n    if (documentSupport.isHeadLess || !documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth) {\n        isBrowserLess = true;\n    }\n\n    wrapper.innerHTML = '';\n    for (prop in slLib.parentContainerStyle) {\n        wrapper.style[prop] = slLib.parentContainerStyle[prop];\n    }\n\n    this.id = id;\n    this.parentContainer = wrapper;\n\n    this._containerManager = new _containerManager2['default'](wrapper, isBrowserLess, 10);\n    this._showNoEllipses = !useEllipses;\n    this._init = true;\n    this.style = {};\n    this.options = options;\n\n    this.setStyle();\n}\n\n/*\n * getSmartText returns the text separated by <br/> whenever a break is necessary. This is to recgonize one\n * generalized format independent of the implementation (canvas based solution, svg based solution). This method\n * converts the output of getSmartText().text to array of lines if the text is wrapped. It sets a named property\n * `lines` on the object passed as parameter.\n *\n * @param {Object} smartlabel - the object returned by getSmartText based on which line arr which to be formed.\n *\n * @return {Object} - The same object which was passed in the arguments. Also a named property `lines` is set.\n */\nSmartLabelManager.textToLines = function (smartlabel) {\n    smartlabel = smartlabel || {};\n\n    if (!smartlabel.text) {\n        smartlabel.text = '';\n    } else if (typeof smartlabel.text !== 'string') {\n        smartlabel.text = smartlabel.text.toString();\n    }\n\n    smartlabel.lines = smartlabel.text.split(/\\n|<br\\s*?\\/?>/ig);\n    return smartlabel;\n};\n\n// Saves all the instance created so far\nSmartLabelManager.store = {};\n\n// Calculates space taken by a character with an approximation value which is calculated by repeating the\n// character by string length times.\nSmartLabelManager.prototype._calCharDimWithCache = function (text, calculateDifference, length) {\n    if (!this._init) {\n        return false;\n    }\n\n    var size,\n        csArr,\n        tw,\n        twi,\n        cachedStyle,\n        asymmetricDifference,\n        maxAdvancedCacheLimit = this.options.maxCacheLimit,\n        container = this._container,\n        style = this.style || {},\n        cache = this._advancedCache || (this._advancedCache = {}),\n        advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []),\n        cacheName = text + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK),\n        cacheInitName = text + 'init' + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK);\n\n    htmlSplCharSpace[text] && (text = htmlSplCharSpace[text]);\n\n    if (!calculateDifference) {\n        asymmetricDifference = 0;\n    } else {\n        if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n            container.innerHTML = text.repeat ? text.repeat(length) : Array(length + 1).join(text); // jshint ignore:line\n            tw = container.offsetWidth;\n\n            container.innerHTML = text;\n            twi = container.offsetWidth;\n\n            asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n            advancedCacheKey.push(cacheInitName);\n            if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n                delete cache[advancedCacheKey.shift()];\n            }\n        }\n    }\n\n    if (cachedStyle = cache[cacheName]) {\n        csArr = cachedStyle.split(',');\n        return {\n            width: parseFloat(csArr[0], 10),\n            height: parseFloat(csArr[1], 10)\n        };\n    }\n\n    container.innerHTML = text;\n\n    size = {\n        height: container.offsetHeight,\n        width: container.offsetWidth + asymmetricDifference\n    };\n\n    cache[cacheName] = size.width + ',' + size.height;\n    advancedCacheKey.push(cacheName);\n    if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n    }\n\n    return size;\n};\n\n// Provide function to calculate the height and width based on the environment and available support from dom.\nSmartLabelManager.prototype._getWidthFn = function () {\n    var contObj = this._containerObj,\n        container = this._container,\n        svgText = contObj.svgText;\n\n    if (svgText) {\n        return function (str) {\n            var bbox, width;\n\n            svgText.textContent = str;\n            bbox = svgText.getBBox();\n            width = bbox.width - SVG_BBOX_CORRECTION;\n            if (width < 1) {\n                width = bbox.width;\n            }\n\n            return width;\n        };\n    } else {\n        return function (str) {\n            container.innerHTML = str;\n            return container.offsetWidth;\n        };\n    }\n};\n\n/*\n * Sets the style based on which the text's metrics to be calculated.\n *\n * @param {Object} style - The style object which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                      }\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.setStyle = function (style) {\n    if (!this._init) {\n        return this;\n    }\n\n    var sCont;\n\n    if (style === this.style && !this._styleNotSet) {\n        return;\n    }\n\n    if (!style) {\n        style = this.style;\n    }\n\n    slLib.setLineHeight(style);\n    this.style = style;\n\n    this._containerObj = sCont = this._containerManager.get(style);\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n\n    return this;\n};\n\n/*\n * Decides whether ellipses to be shown if the node is truncated\n *\n * @param {Boolean} useEllipses - decides if a ellipses to be appended if the text is truncated. Default: false\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n    if (!this._init) {\n        return this;\n    }\n    this._showNoEllipses = !useEllipses;\n    return this;\n};\n\n/*\n * Get wrapped or truncated text if a bound box is defined around it. The result text would be separated by <br/>\n * if wrapped\n *\n * @param {String} text - the subject text\n * @param {Number} maxWidth - width in px of the the bound box\n * @param {Number} maxHeight - height in px of the the bound box\n * @param {Boolean} noWrap - whether the text to be wrapped. Default false.\n *\n * @return {Object} - The metrics of the text bounded by the box\n *                  {\n *                      height : height of the wrapped text\n *                      width : width of the wrapped text\n *                      isTruncated : whether the text is truncated\n *                      maxHeight : Maximum height given\n *                      maxWidth : Maximum width given\n *                      oriText : Original text sent\n *                      oriTextHeight : Original text height\n *                      oriTextWidth : Original text width\n *                      text : SMART TEXT\n *                  }\n */\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var len,\n        trimStr,\n        tempArr,\n        tmpText,\n        maxWidthWithEll,\n        toolText,\n        oriWidth,\n        oriHeight,\n        newCharIndex,\n        nearestChar,\n        tempChar,\n        getWidth,\n        initialLeft,\n        initialTop,\n        getOriSizeImproveObj,\n        spanArr,\n        x,\n        y,\n        minWidth,\n        elem,\n        chr,\n        elemRightMostPoint,\n        elemLowestPoint,\n        lastBR,\n        removeFromIndex,\n        removeFromIndexForEllipses,\n        hasHTMLTag = false,\n        maxStrWidth = 0,\n        lastDash = -1,\n        lastSpace = -1,\n        lastIndexBroken = -1,\n        strWidth = 0,\n        strHeight = 0,\n        oriTextArr = [],\n        i = 0,\n        ellipsesStr = this._showNoEllipses ? '' : '...',\n        lineHeight = this._lineHeight,\n        context = this._context,\n        container = this._container,\n        sCont = this._containerObj,\n        ellipsesWidth = sCont.ellipsesWidth,\n        dotWidth = sCont.dotWidth,\n        characterArr = [],\n        dashIndex = -1,\n        spaceIndex = -1,\n        lastLineBreak = -1,\n        fastTrim = function fastTrim(str) {\n        str = str.replace(/^\\s\\s*/, '');\n        var ws = /\\s/,\n            i = str.length;\n        while (ws.test(str.charAt(i -= 1))) {/* jshint noempty:false */}\n        return str.slice(0, i + 1);\n    },\n        smartLabel = {\n        text: text,\n        maxWidth: maxWidth,\n        maxHeight: maxHeight,\n        width: null,\n        height: null,\n        oriTextWidth: null,\n        oriTextHeight: null,\n        oriText: text,\n        isTruncated: false\n    };\n\n    getWidth = this._getWidthFn();\n\n    // In some browsers, offsetheight of a single-line text is getting little (1 px) heigher value of the\n    // lineheight. As a result, smartLabel is unable to return single-line text.\n    // To fix this, increase the maxHeight a little amount. Hence maxHeight =  lineHeight * 1.2\n    if (maxHeight === lineHeight) {\n        maxHeight *= 1.2;\n    }\n\n    if (container) {\n        if (!documentSupport.isBrowserLess) {\n            hasHTMLTag = slLib.xmlTagRegEx.test(text);\n            if (!hasHTMLTag) {\n                // Due to support of <,> for xml we convert &lt;, &gt; to <,> respectively so to get the correct\n                // width it is required to convert the same before calculation for the new improve version of the\n                // get text width.\n                tmpText = text.replace(slLib.ltgtRegex, function (match) {\n                    return match === '&lt;' ? '<' : '>';\n                });\n                getOriSizeImproveObj = this.getOriSize(tmpText, true);\n\n                smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n                smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n            } else {\n                container.innerHTML = text;\n                smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n                smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n            }\n\n            if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n                smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n                smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n                return smartLabel;\n            }\n\n            if (lineHeight > maxHeight) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = 0;\n                smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n        }\n\n        // Calculate width with ellipses\n        text = fastTrim(text).replace(/(\\s+)/g, ' ');\n        maxWidthWithEll = this._showNoEllipses ? maxWidth : maxWidth - ellipsesWidth;\n\n        if (!hasHTMLTag) {\n            oriTextArr = text.split('');\n            len = oriTextArr.length;\n            trimStr = '', tempArr = [];\n            tempChar = oriTextArr[0];\n\n            if (this._cache[tempChar]) {\n                minWidth = this._cache[tempChar].width;\n            } else {\n                minWidth = getWidth(tempChar);\n                this._cache[tempChar] = { width: minWidth };\n            }\n\n            if (maxWidthWithEll > minWidth) {\n                tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split('');\n                i = tempArr.length;\n            } else if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            } else if (ellipsesStr) {\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            strWidth = getWidth(tempArr.join(''));\n            strHeight = this._lineHeight;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = smartLabel.oriText;\n                            smartLabel.width = getWidth(smartLabel.text);\n                            smartLabel.height = this._lineHeight;\n                            return smartLabel;\n                        }\n                    }\n                }\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = strWidth;\n                smartLabel.height = this._lineHeight;\n                return smartLabel;\n            } else {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (tempChar === ' ' && !context) {\n                        tempChar = '&nbsp;';\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            /** @todo use regular expressions for better performance. */\n                            lastSpace = text.substr(0, tempArr.length).lastIndexOf(' ');\n                            lastDash = text.substr(0, tempArr.length).lastIndexOf('-');\n                            if (lastSpace > lastIndexBroken) {\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                tempArr.splice(lastSpace, 1, '<br/>');\n                                lastIndexBroken = lastSpace;\n                                newCharIndex = lastSpace + 1;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === tempArr.length - 1) {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '<br/>-');\n                                } else {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '-<br/>');\n                                }\n                                lastIndexBroken = lastDash;\n                                newCharIndex = lastDash + 1;\n                            } else {\n                                tempArr.splice(tempArr.length - 1, 1, '<br/>' + oriTextArr[i]);\n                                lastLineBreak = tempArr.length - 2;\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastLineBreak + 1).join(''));\n                                lastIndexBroken = lastLineBreak;\n                                newCharIndex = i;\n                            }\n                            strHeight += this._lineHeight;\n                            if (strHeight > maxHeight) {\n                                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                                smartLabel.tooltext = smartLabel.oriText;\n                                // The max width among all the lines will be the width of the string.\n                                smartLabel.width = maxWidth;\n                                smartLabel.height = strHeight - this._lineHeight;\n                                return smartLabel;\n                            } else {\n                                maxStrWidth = max(maxStrWidth, strWidth);\n                                trimStr = null;\n                                nearestChar = slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                                strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n                                if (tempArr.length < newCharIndex + nearestChar) {\n                                    tempArr = tempArr.concat(text.substr(tempArr.length, newCharIndex + nearestChar - tempArr.length).split(''));\n                                    i = tempArr.length - 1;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                maxStrWidth = max(maxStrWidth, strWidth);\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = maxStrWidth;\n                smartLabel.height = strHeight;\n                return smartLabel;\n            }\n        } else {\n            toolText = text.replace(slLib.spanAdditionRegx, '$2');\n            text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n            text = text.replace(/(<br\\s*\\/*\\>)/g, '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>');\n\n            container.innerHTML = text;\n\n            spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n            for (x = 0, y = spanArr.length; x < y; x += 1) {\n                elem = spanArr[x];\n                //chech whether this span is temporary inserted span from it's class\n                if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n                    chr = elem.innerHTML;\n                    if (chr !== '') {\n                        if (chr === ' ') {\n                            spaceIndex = characterArr.length;\n                        } else if (chr === '-') {\n                            dashIndex = characterArr.length;\n                        }\n\n                        characterArr.push({\n                            spaceIdx: spaceIndex,\n                            dashIdx: dashIndex,\n                            elem: elem\n                        });\n                        oriTextArr.push(chr);\n                    }\n                }\n            }\n\n            i = 0;\n            len = characterArr.length;\n            minWidth = characterArr[0].elem.offsetWidth;\n\n            if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n\n                return smartLabel;\n            } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            initialLeft = characterArr[0].elem.offsetLeft;\n            initialTop = characterArr[0].elem.offsetTop;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n                        if (container.offsetWidth > maxWidth) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            } else {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    lastBR = null;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n\n                        if (elemRightMostPoint > maxWidth) {\n                            lastSpace = characterArr[i].spaceIdx;\n                            lastDash = characterArr[i].dashIdx;\n                            if (lastSpace > lastIndexBroken) {\n                                characterArr[lastSpace].elem.innerHTML = '<br/>';\n                                lastIndexBroken = lastSpace;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === i) {\n                                    // in case the overflowing character itself is the '-'\n                                    characterArr[lastDash].elem.innerHTML = '<br/>-';\n                                } else {\n                                    characterArr[lastDash].elem.innerHTML = '-<br/>';\n                                }\n                                lastIndexBroken = lastDash;\n                            } else {\n                                elem.parentNode.insertBefore(lastBR = doc.createElement('br'), elem);\n                            }\n\n                            //check whether this break made current element outside the area height\n                            if (elem.offsetHeight + elem.offsetTop > maxHeight) {\n                                //remove the lastly inserted line break\n                                if (lastBR) {\n                                    lastBR.parentNode.removeChild(lastBR);\n                                } else if (lastIndexBroken === lastDash) {\n                                    characterArr[lastDash].elem.innerHTML = '-';\n                                } else {\n                                    characterArr[lastSpace].elem.innerHTML = ' ';\n                                }\n                                removeFromIndex = i;\n                                //break the looping condition\n                                i = len;\n                            } else {\n                                removeFromIndexForEllipses = null;\n                            }\n                        }\n                    } else {\n                        //check whether this break made current element outside the area height\n                        if (elemLowestPoint > maxHeight) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            }\n\n            if (removeFromIndex < len) {\n                //set the trancated property of the smartlabel\n                smartLabel.isTruncated = true;\n\n                /** @todo is this really needed? */\n                removeFromIndexForEllipses = removeFromIndexForEllipses ? removeFromIndexForEllipses : removeFromIndex;\n\n                for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n                    elem = characterArr[i].elem;\n                    //chech whether this span is temporary inserted span from it's class\n                    elem.parentNode.removeChild(elem);\n                }\n\n                for (; i >= 0; i -= 1) {\n                    elem = characterArr[i].elem;\n                    if (slLib.classNameBrReg.test(elem.className)) {\n                        //chech whether this span is temporary inserted span from it's class\n                        elem.parentNode.removeChild(elem);\n                    } else {\n                        i = 0;\n                    }\n                }\n            }\n\n            //get the smart text\n            smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&');\n            if (smartLabel.isTruncated) {\n                smartLabel.text += ellipsesStr;\n                smartLabel.tooltext = toolText;\n            }\n        }\n\n        smartLabel.height = container.offsetHeight;\n        smartLabel.width = container.offsetWidth;\n\n        return smartLabel;\n    } else {\n        smartLabel.error = new Error('Body Tag Missing!');\n        return smartLabel;\n    }\n};\n\n/*\n * Get the height and width of a text.\n *\n * @param {String} text - Text whose metrics to be measured\n * @param {Boolean} Optional detailedCalculationFlag - this flag if set it calculates per letter position\n *                          information and returns it. Ideally you dont need it unless you want to post process the\n *                          string. And its an EXPENSIVE OPERATION.\n *\n * @return {Object} - If detailedCalculationFlag is set to true the returned object would be\n *                  {\n *                      height: height of the text\n *                      width: width of the text\n *                      detailObj: detail calculation of letters in the format {lettername: width}\n *                  }\n *                  If detailedCalculationFlag is set to false the returned object wont have the detailObj prop.\n */\nSmartLabelManager.prototype.getOriSize = function (text, detailedCalculationFlag) {\n    if (!this._init) {\n        return false;\n    }\n\n    var textArr,\n        letter,\n        lSize,\n        i,\n        l,\n        cumulativeSize = 0,\n        height = 0,\n        indiSizeStore = {};\n\n    if (!detailedCalculationFlag) {\n        return this._calCharDimWithCache(text);\n    }\n\n    // Calculate the width of every letter with an approximation\n    textArr = text.split('');\n    for (i = 0, l = textArr.length; i < l; i++) {\n        letter = textArr[i];\n        lSize = this._calCharDimWithCache(letter, true, textArr.length);\n        height = max(height, lSize.height);\n        cumulativeSize += lSize.width;\n        indiSizeStore[letter] = lSize.width;\n    }\n\n    return {\n        width: round(cumulativeSize),\n        height: height,\n        detailObj: indiSizeStore\n    };\n};\n\n/*\n * Dispose the container and object allocated by the smartlabel\n */\nSmartLabelManager.prototype.dispose = function () {\n    if (!this._init) {\n        return this;\n    }\n\n    this._containerManager && this._containerManager.dispose && this._containerManager.dispose();\n\n    delete this._container;\n    delete this._context;\n    delete this._cache;\n    delete this._containerManager;\n    delete this._containerObj;\n    delete this.id;\n    delete this.style;\n    delete this.parentContainer;\n    delete this._showNoEllipses;\n\n    return this;\n};\n\nexports['default'] = SmartLabelManager;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nvar lib = {\n\tinit: function init(win) {\n\t\tvar doc = win.document,\n\t\t    nav = win.navigator,\n\t\t    userAgent = nav.userAgent,\n\t\t    DIV = 'DIV',\n\t\t    ceil = Math.ceil,\n\t\t    floor = Math.floor,\n\t\t    containerInstanceCount = 0,\n\t\t    clsNameSpace = 'fusioncharts-smartlabel-',\n\t\t    containerClass = clsNameSpace + 'container',\n\t\t    classNameWithTag = clsNameSpace + 'tag',\n\t\t    classNameWithTagBR = clsNameSpace + 'br';\n\n\t\tlib = {\n\t\t\twin: win,\n\n\t\t\tcontainerClass: containerClass,\n\n\t\t\tclassNameWithTag: classNameWithTag,\n\n\t\t\tclassNameWithTagBR: classNameWithTagBR,\n\n\t\t\tmaxDefaultCacheLimit: 500,\n\n\t\t\tclassNameReg: new RegExp('\\b' + classNameWithTag + '\\b'),\n\n\t\t\tclassNameBrReg: new RegExp('\\b' + classNameWithTagBR + '\\b'),\n\n\t\t\tspanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n\n\t\t\tspanAdditionReplacer: '$1<span class=\"' + classNameWithTag + '\">$2</span>',\n\n\t\t\tspanRemovalRegx: new RegExp('\\\\<span[^\\\\>]+?' + classNameWithTag + '[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>', 'ig'),\n\n\t\t\txmlTagRegEx: new RegExp('<[^>][^<]*[^>]+>', 'i'),\n\n\t\t\tltgtRegex: /&lt;|&gt;/g,\n\n\t\t\tbrReplaceRegex: /<br\\/>/ig,\n\n\t\t\ttestStrAvg: 'WgI',\n\n\t\t\t// This style is applied over the parent smartlabel container. The container is kept hidden from the viewport\n\t\t\tparentContainerStyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '-9999em',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\tpadding: '0px',\n\t\t\t\twidth: '1px',\n\t\t\t\theight: '1px',\n\t\t\t\toverflow: 'hidden'\n\t\t\t},\n\n\t\t\t// All the style which might affect the text metrics\n\t\t\tsupportedStyle: {\n\t\t\t\tfont: 'font',\n\t\t\t\tfontFamily: 'font-family',\n\t\t\t\t'font-family': 'font-family',\n\t\t\t\tfontWeight: 'font-weight',\n\t\t\t\t'font-weight': 'font-weight',\n\t\t\t\tfontSize: 'font-size',\n\t\t\t\t'font-size': 'font-size',\n\t\t\t\tlineHeight: 'line-height',\n\t\t\t\t'line-height': 'line-height',\n\t\t\t\tfontStyle: 'font-style',\n\t\t\t\t'font-style': 'font-style'\n\t\t\t},\n\n\t\t\t// Get the support list for html the document where the text calcution is to be done.\n\t\t\tgetDocumentSupport: function getDocumentSupport() {\n\t\t\t\tvar childRetriverFn, childRetriverString, noClassTesting;\n\n\t\t\t\tif (doc.getElementsByClassName) {\n\t\t\t\t\tchildRetriverFn = 'getElementsByClassName';\n\t\t\t\t\tchildRetriverString = classNameWithTag;\n\t\t\t\t\tnoClassTesting = true;\n\t\t\t\t} else {\n\t\t\t\t\tchildRetriverFn = 'getElementsByTagName';\n\t\t\t\t\tchildRetriverString = 'span';\n\t\t\t\t\tnoClassTesting = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisIE: /msie/i.test(userAgent) && !win.opera,\n\t\t\t\t\thasSVG: Boolean(win.SVGAngle || doc.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n\t\t\t\t\tisHeadLess: new RegExp(' HtmlUnit').test(userAgent),\n\t\t\t\t\tisWebKit: new RegExp(' AppleWebKit/').test(userAgent),\n\t\t\t\t\tchildRetriverFn: childRetriverFn,\n\t\t\t\t\tchildRetriverString: childRetriverString,\n\t\t\t\t\tnoClassTesting: noClassTesting\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n    * Create a html div element and attach it with a parent. All the subsequent operations are performed\n    * by upding this dom tree only.\n    *\n    * @param {HTMLElement} - The html element where the newly created div is to be attached. If not passed,\n    *                      the new div is appended on the body.\n    */\n\t\t\tcreateContainer: function createContainer(containerParent) {\n\t\t\t\tvar body, container;\n\n\t\t\t\tif (containerParent && (containerParent.offsetWidth || containerParent.offsetHeight)) {\n\t\t\t\t\tif (containerParent.appendChild) {\n\t\t\t\t\t\tcontainerParent.appendChild(container = doc.createElement(DIV));\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbody = doc.getElementsByTagName('body')[0];\n\n\t\t\t\t\tif (body && body.appendChild) {\n\t\t\t\t\t\tcontainer = doc.createElement(DIV);\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\tcontainerInstanceCount += 1;\n\t\t\t\t\t\tbody.appendChild(container);\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Finds a approximate position where the text is to be broken\n\t\t\tgetNearestBreakIndex: function getNearestBreakIndex(text, maxWidth, sl) {\n\t\t\t\tif (!text || !text.length) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar difference,\n\t\t\t\t    getWidth = sl._getWidthFn(),\n\t\t\t\t    charLen = 0,\n\t\t\t\t    increment = 0,\n\t\t\t\t    oriWidth = getWidth(text),\n\t\t\t\t    avgWidth = oriWidth / text.length;\n\n\t\t\t\tdifference = maxWidth;\n\t\t\t\tcharLen = ceil(maxWidth / avgWidth);\n\n\t\t\t\tif (oriWidth < maxWidth) {\n\t\t\t\t\treturn text.length - 1;\n\t\t\t\t}\n\n\t\t\t\tif (charLen > text.length) {\n\t\t\t\t\tdifference = maxWidth - oriWidth;\n\t\t\t\t\tcharLen = text.length;\n\t\t\t\t}\n\n\t\t\t\twhile (difference > 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (difference < 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn charLen;\n\t\t\t},\n\n\t\t\t/*\n    * Determine lineheight of a text for a given style. It adds propery lineHeight to the style passed\n    *\n    * @param {Object} - The style based on which the text's metric needs to be calculated. The calculation happens\n    *                  based on fontSize property, if its not present a default font size is assumed.\n    *\n    * @return {Object} - The style that was passed with lineHeight as a named propery set on the object.\n    */\n\t\t\tsetLineHeight: function setLineHeight(styleObj) {\n\t\t\t\tvar fSize = styleObj.fontSize = styleObj.fontSize || '12px';\n\t\t\t\tstyleObj.lineHeight = styleObj.lineHeight || styleObj['line-height'] || parseInt(fSize, 10) * 1.2 + 'px';\n\t\t\t\treturn styleObj;\n\t\t\t}\n\t\t};\n\n\t\treturn lib;\n\t}\n};\n\nexports['default'] = lib;\nmodule.exports = exports['default'];","const Muze = require('./muze');\n\nmodule.exports = Muze.default ? Muze.default : Muze;\n","'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction ContainerManager(parentContainer, isBrowserLess, maxContainers) {\n    var svg;\n\n    maxContainers = maxContainers > 5 ? maxContainers : 5;\n    maxContainers = maxContainers < 20 ? maxContainers : 20;\n\n    this.maxContainers = maxContainers;\n    this.first = null;\n    this.last = null;\n    this.containers = {};\n    this.length = 0;\n    this.rootNode = parentContainer;\n\n    if (isBrowserLess) {\n        svg = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'height', '0');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'width', '0');\n        this.svgRoot = svg;\n        this.rootNode.appendChild(svg);\n    }\n}\n\nContainerManager.prototype.get = function (style) {\n    var diff,\n        key,\n        containerObj,\n        containers = this.containers,\n        len = this.length,\n        max = this.maxContainers,\n        keyStr = '';\n\n    for (key in slLib.supportedStyle) {\n        if (style[key] !== undefined) {\n            keyStr += slLib.supportedStyle[key] + ':' + style[key] + ';';\n        }\n    }\n\n    if (!keyStr) {\n        return false;\n    }\n\n    if (containerObj = containers[keyStr]) {\n        if (this.first !== containerObj) {\n            containerObj.prev && (containerObj.prev.next = containerObj.next);\n            containerObj.next && (containerObj.next.prev = containerObj.prev);\n            containerObj.next = this.first;\n            containerObj.next.prev = containerObj;\n            this.last === containerObj && (this.last = containerObj.prev);\n            containerObj.prev = null;\n            this.first = containerObj;\n        }\n    } else {\n        if (len >= max) {\n            diff = len - max + 1;\n            // +1 is to remove an extra entry to make space for the new container to be added.\n            while (diff--) {\n                this.removeContainer(this.last);\n            }\n        }\n        containerObj = this.addContainer(keyStr);\n    }\n\n    return containerObj;\n};\n\nContainerManager.prototype.addContainer = function (keyStr) {\n    var node, container;\n\n    this.containers[keyStr] = container = {\n        next: null,\n        prev: null,\n        node: null,\n        ellipsesWidth: 0,\n        lineHeight: 0,\n        dotWidth: 0,\n        avgCharWidth: 4,\n        keyStr: keyStr,\n        charCache: {}\n    };\n\n    // Since the container objects are arranged from most recent to least recent order, we need to add the new\n    // object at the beginning of the list.\n    container.next = this.first;\n    container.next && (container.next.prev = container);\n    this.first = container;\n    if (!this.last) {\n        this.last = container;\n    }\n    this.length += 1;\n\n    node = container.node = doc.createElement('div');\n    this.rootNode.appendChild(node);\n\n    if (documentSupport.isIE && !documentSupport.hasSVG) {\n        node.style.setAttribute('cssText', keyStr);\n    } else {\n        node.setAttribute('style', keyStr);\n    }\n\n    node.setAttribute('aria-hidden', 'true');\n    node.setAttribute('role', 'presentation');\n    node.style.display = 'inline-block';\n\n    node.innerHTML = slLib.testStrAvg; // A test string.\n    container.lineHeight = node.offsetHeight;\n    container.avgCharWidth = node.offsetWidth / 3;\n\n    if (documentSupport.isBrowserLess) {\n        node = container.svgText = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n        node.setAttribute('style', keyStr);\n        this.svgRoot.appendChild(node);\n\n        node.textContent = slLib.testStrAvg; // A test string.\n        container.lineHeight = node.getBBox().height;\n        container.avgCharWidth = (node.getBBox().width - SVG_BBOX_CORRECTION) / 3;\n\n        node.textContent = '...';\n        container.ellipsesWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n        node.textContent = '.';\n        container.dotWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n    } else {\n        node.innerHTML = '...';\n        container.ellipsesWidth = node.offsetWidth;\n        node.innerHTML = '.';\n        container.dotWidth = node.offsetWidth;\n        node.innerHTML = '';\n    }\n\n    return container;\n};\n\nContainerManager.prototype.removeContainer = function (cObj) {\n    var keyStr = cObj.keyStr;\n\n    if (!keyStr || !this.length || !cObj) {\n        return;\n    }\n    this.length -= 1;\n\n    cObj.prev && (cObj.prev.next = cObj.next);\n    cObj.next && (cObj.next.prev = cObj.prev);\n    this.first === cObj && (this.first = cObj.next);\n    this.last === cObj && (this.last = cObj.prev);\n\n    cObj.node.parentNode.removeChild(cObj.node);\n\n    delete this.containers[keyStr];\n};\n\nContainerManager.prototype.dispose = function () {\n    var key,\n        containers = this.containers;\n\n    this.maxContainers = null;\n    for (key in containers) {\n        this.removeContainer(containers[key]);\n    }\n\n    this.rootNode.parentNode.removeChild(this.rootNode);\n\n    this.rootNode = null;\n    this.first = null;\n    this.last = null;\n};\n\nmodule.exports = ContainerManager;","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  scale.invertExtent = function(r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1, a, b, t,\n        hiIndex;\n    values.push(values[n] + this.step());\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo));\n    hiIndex = getClosestIndexOf(values, hi);\n    b = lo===hi ? a : Math.max(a, hiIndex - 1);\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) t = a, a = n - b, b = n - t; // map + swap\n    return (a > b) ? undefined : domain().slice(a, b+1);\n  };\n\n  scale.invert = function (r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1,\n        a,\n        t;\n\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo, 'left'));\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    return domain()[reverse ? n - a : a];\n  }\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction getClosestIndexOf (arr, value, side) {\n  var low = 0,\n      arrLen = arr.length,\n      high = arrLen - 1,\n      highVal,\n      mid,\n      d1,\n      d2;\n\n  while (low < high) {\n      mid = Math.floor((low + high) / 2);\n      d1 = Math.abs(arr[mid] - value);\n      d2 = Math.abs(arr[mid + 1] - value);\n\n      if (d2 <= d1) {\n          low = mid + 1;\n      }\n      else {\n          high = mid;\n      }\n  }\n\n  if (!side) {\n      return high;\n  }\n\n  highVal = arr[high];\n  if (highVal === value) {\n      return high;\n  } else if (highVal > value) {\n      if (high === 0) { return high; }\n      return side === 'left'? high - 1 : high;\n  } else {\n      if (high === arr.length - 1) { return high; }\n      return side === 'left'? high : high + 1;\n  }\n}","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute} from \"./duration\";\n\nvar hour = interval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export const UNIT_GLOBAL_NAMESPACE = 'app.units';\nexport const UNIT_LOCAL_NAMESPACE = 'local.units';\nexport const LAYER_LOCAL_NAMESPACE = 'local.layers';\nexport const LAYER_GLOBAL_NAMESPACE = 'app.layers';\nexport const GROUP_GLOBAL_NAMESPACE = 'app.group';\nexport const GROUP_LOCAL_NAMESPACE = 'local.group';\nexport const CANVAS_LOCAL_NAMESPACE = 'local.canvas';\nexport const CANVAS_GLOBAL_NAMESPACE = 'app.canvas';\n\n","const ReservedFields = {\n    ROW_ID: '__id__'\n};\n\nexport default ReservedFields;\n","const CommonProps = {\n    ACTION_INF: 'actionInf',\n    ON_LAYER_DRAW: 'onLayerDraw',\n    MATRIX_CREATED: 'matrixCreated'\n};\n\nexport default CommonProps;\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickTransform = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"))\n        .style('transform', tickTransform);\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.tickTransform = function(_) {\n    return arguments.length ? (tickTransform = _, axis) : tickTransform;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","export var slice = Array.prototype.slice;\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","/**\n * This class represents a selection applied on a data array.\n *\n * @class Selection\n */\nclass Selection {\n    /**\n     * Creates an instance of Selection.\n     * @param {Array<DataObject>} data Array of DataObjects.\n     * @memberof Selection\n     */\n    constructor () {\n        this._data = [];\n        // // map of id to data\n        this._idMap = {};\n        this._dataMap = {};\n        this._mode = '';\n        // data.forEach((item, idx) => {\n        //     const index = item.id || idx;\n        //     this._idMap[index] = item;\n        // });\n        // // array to store data in enter phase\n        this._enterdata = [];\n        // // array to store data in exit phase\n        this._exitdata = [];\n    }\n    /**\n     *  Gets the object bound to a class\n     *\n     * @return {Object} current data set bound to the class\n     * @memberof Selection\n     */\n    getObjects () {\n        return Object.values(this._idMap);\n    }\n\n    /**\n     * This method is used to supply seed data to a selection.\n     *\n     * @param {Array} newData Seed data to create the enter selection.\n     * @param {Functon | undefined } idGetter This function is used to uniqely identify a data entry.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    data (newData, idGetter) {\n        if (idGetter) {\n            this._data = [];\n            this._idGetter = idGetter;\n            const tempMap = {};\n\n            newData.forEach((...params) => {\n                const index = idGetter(...params);\n                tempMap[index] = params[0];\n            });\n            // check if any data items have been removed\n            const purgedIds = [];\n\n            Object.keys(this._idMap).forEach((id) => {\n                if (!tempMap[id]) {\n                    purgedIds.push(id);\n                }\n            });\n\n            Object.keys(tempMap).forEach((id) => {\n                if (!this._idMap[id]) {\n                    this._enterdata.push(tempMap[id]);\n                } else {\n                    this._idMap[id] = tempMap[id];\n                    this._data.push(tempMap[id]);\n                }\n            });\n            // move the purged items to exit selection\n            purgedIds.forEach((id) => {\n                const purged = this._idMap[id];\n                this._exitdata.push(purged);\n                // this._data = this._data.slice(id, 1);\n                delete this._idMap[id];\n            });\n            // this._data = this._data.slice(temp, this._data.length);\n\n            return this;\n        }\n        // no id getter supplied so use indices\n        if (newData.length > this._data.length) {\n            const startIdx = this._data.length;\n            for (let i = startIdx; i < newData.length; i += 1) {\n                this._enterdata.push(newData[i]);\n            }\n        } else {\n            // push to exit selection\n            const temp = newData.length;\n            for (let i = temp; i < this._data.length; i += 1) {\n                const purged = this._data[i];\n                delete this._idMap[purged.id];\n                this._exitdata.push(purged);\n            }\n            this._data = this._data.slice(temp, this._data.length);\n        }\n        return this;\n    }\n\n    /**\n     * Applies the supplied callback to each data element\n     * and returns a new selection.\n     *\n     * @param {Function} callback Callback to execute on each item.\n     * @return {Selection} New selection with data created using callback.\n     * @memberof EnterSelection\n     */\n    append (callback) {\n        this[`_${this._mode}data`].forEach((...params) => {\n            const data = params[0];\n            const id = this._idGetter ? this._idGetter(...params) : (data.id || params[1]);\n            this._idMap[id] = callback(...params);\n            this._dataMap[id] = data;\n        });\n        this._mode = '';\n        return this;\n    }\n\n    /**\n     * This method returns an enter selection that\n     * allows or update operations.\n     *\n     * @return {EnterSelection} Instance of enter selection.\n     * @memberof Selection\n     */\n    enter () {\n        this._mode = 'enter';\n        return this;\n        // return new EnterSelection(this._enterdata, this._idMap, this._idGetter);\n    }\n\n    /**\n     * This method is used to set key value pairs\n     * on data objects.\n     *\n     * @param {string} key Name of property.\n     * @param {any} value Value of property.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    attr (key, value) {\n        this._data.forEach(item => item.attr(key, value));\n        return this;\n    }\n\n    /**\n     * This method merges the data of one selection with another.\n     *\n     * @param {Selection} selection Instance of selection.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    merge (selection) {\n        selection._data.forEach((...params) => {\n            const id = this._idGetter ? this._idGetter(...params) : (params[0].id || params[1]);\n            this._idMap[id] = params[0];\n            this._data.push(params[0]);\n        });\n        // reset enter selection\n        this._enterdata = [];\n        return this;\n    }\n\n    /**\n     * Returns a selection with exit data.\n     *\n     * @return {Selection} Instance of selection.\n     * @memberof Selection\n     */\n    exit () {\n        this._mode = 'exit';\n        // const exitdata = this._exitdata;\n        // const exitSelection = new Selection(exitdata);\n        // this._exitdata = [];\n        return this;\n    }\n\n    each (fn) {\n        Object.keys(this._idMap).forEach((e, i) => {\n            fn(this._idMap[e], this._dataMap[e], i);\n        });\n        return this;\n    }\n\n    map (fn) {\n        Object.keys(this._idMap).forEach((...params) => {\n            this._idMap[params[0]] = fn(this._idMap[params[0]], ...params, this._dataMap[params[0]]);\n        });\n        return this;\n    }\n\n    /**\n     * Executes the cleanup operation associated with data objets.\n     *\n     * @memberof Selection\n     */\n    remove () {\n        // do cleanup on DDO's\n        const data = this[`_${this._mode}data`];\n\n        data.forEach(item => item.remove());\n        if (this._mode === '') {\n            this.each(e => e.remove());\n        }\n        this[`_${this._mode}data`] = [];\n        this._mode = '';\n    }\n}\n\nexport default Selection;\n","/* global window, requestAnimationFrame, cancelAnimationFrame */\nimport { FieldType, DimensionSubtype } from 'datamodel';\nimport {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom\n} from 'd3-axis';\nimport {\n    symbolCircle,\n    symbolCross,\n    symbolDiamond,\n    symbolSquare,\n    symbolStar,\n    symbolWye,\n    symbolTriangle,\n    symbol,\n    stack as d3Stack,\n    stackOffsetDiverging,\n    stackOrderNone,\n    stackOrderAscending,\n    stackOrderDescending,\n    stackOffsetNone,\n    stackOffsetExpand,\n    stackOffsetWiggle,\n    pie,\n    arc,\n    line,\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    area\n} from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport {\n    interpolate,\n    interpolateRgb,\n    piecewise,\n    interpolateNumber,\n    interpolateHslLong\n} from 'd3-interpolate';\nimport {\n    easeCubic,\n    easeBounce,\n    easePoly,\n    easeBack,\n    easeCircle,\n    easeLinear,\n    easeElastic\n} from 'd3-ease';\nimport {\n   color,\n   rgb,\n   hsl\n} from 'd3-color';\nimport { voronoi } from 'd3-voronoi';\nimport Model from 'hyperdis';\nimport { dataSelect } from './DataSystem';\nimport * as STACK_CONFIG from './enums/stack-config';\n\nconst HTMLElement = window.HTMLElement;\n\nconst isSimpleObject = (obj) => {\n    let token;\n    if (typeof obj === 'object') {\n        if (obj === null) { return false; }\n        token = Object.prototype.toString.call(obj);\n        if (token === '[object Object]') {\n            return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n        }\n    }\n    return false;\n};\n\n/**\n * Returns unique id\n * @return {string} Unique id string\n */\nconst\n    getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Deep copies an object and returns a new object.\n * @param {Object} o Object to clone\n * @return {Object} New Object.\n */\nconst clone = (o) => {\n    const output = {};\n    let v;\n    for (const key in o) {\n        if ({}.hasOwnProperty.call(o, key)) {\n            v = o[key];\n            output[key] = isSimpleObject(v) ? clone(v) : v;\n        }\n    }\n    return output;\n};\n\n/**\n* Checks the existence of keys in an object\n* @param {Array} keys Set of keys which are to be checked\n* @param {Object} obj whose keys are checked from the set of keys provided\n* @return {Object} Error if the keys are absent, or the object itself\n*/\nconst checkExistence = (keys, obj) => {\n    const nonExistentKeys = [];\n    keys.forEach((key) => {\n        if (key in obj) {\n            return;\n        }\n        nonExistentKeys.push(key);\n    });\n    return nonExistentKeys;\n};\n\nconst sanitizeIP = {\n    typeObj: (keys, obj) => {\n        if (typeof obj !== 'object') {\n            return Error('Argument type object expected');\n        }\n\n        const nonExistentKeys = checkExistence(keys, obj);\n        if (nonExistentKeys.length) {\n            return Error(`Missing keys from parameter ${nonExistentKeys.join(', ')}`);\n        }\n        return obj;\n    },\n\n    /* istanbul ignore next */ htmlElem: (elem) => {\n        if (!(elem instanceof HTMLElement)) {\n            return Error('HTMLElement required');\n        }\n        return elem;\n    }\n};\n\n/**\n * Gets the maximum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Maximum value\n */\nconst getMax = (data, field) => Math.max(...data.filter(d => !isNaN(d[field])).map(d => d[field]));\n\n/**\n * Gets the minimum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Minimum value\n */\nconst getMin = (data, field) => Math.min(...data.filter(d => !isNaN(d[field])).map(d => d[field]));\n\n/**\n * Gets the domain from the data based on the field name and type of field\n * @param  {Array.<Object> | Array.<Array>} data       Data Array\n * @param  {Array.<string>} fields    Array of fields from where the domain will be calculated\n * @param {string} fieldType Type of field - nominal, quantitiative, temporal.\n * @return {Array} Usually contains a min and max value if field is quantitative or\n * an array of values if field type is nominal or ordinal\n */\nconst getDomainFromData = (data, fields, fieldType) => {\n    let domain;\n    let domArr;\n    data = data[0] instanceof Array ? data : [data];\n    switch (fieldType) {\n    case DimensionSubtype.CATEGORICAL:\n        domain = [].concat(...data.map(arr => arr.map(d => d[fields[0]]).filter(d => d !== undefined)));\n        break;\n    default:\n        domArr = data.map((arr) => {\n            const firstMin = getMin(arr, fields[0]);\n            const secondMin = getMin(arr, fields[1]);\n            const firstMax = getMax(arr, fields[0]);\n            const secondMax = getMax(arr, fields[1]);\n            return [Math.min(firstMin, secondMin), Math.max(firstMax, secondMax)];\n        });\n        domain = [Math.min(...domArr.map(d => d[0])), Math.max(...domArr.map(d => d[1]))];\n        break;\n    }\n    return domain;\n};\n\n/**\n * Union Domain values\n * @param {Array.<Array>} domains Array of domain values\n * @param {string} fieldType type of field - dimension,measure or datetime.\n * @return {Array} Unioned domain of all domain values.\n */\nconst unionDomain = (domains, fieldType) => {\n    let domain;\n    domains = domains.filter(dom => dom && dom.length);\n    if (fieldType === DimensionSubtype.CATEGORICAL) {\n        domain = domain = [].concat(...domains);\n    } else {\n        domain = [Math.min(...domains.map(d => d[0])), Math.max(...domains.map(d => d[1]))];\n    }\n\n    return domain;\n};\n\nconst symbolFns = {\n    circle: symbolCircle,\n    cross: symbolCross,\n    diamond: symbolDiamond,\n    square: symbolSquare,\n    star: symbolStar,\n    wye: symbolWye,\n    triangle: symbolTriangle\n};\n\nconst easeFns = {\n    cubic: easeCubic,\n    bounce: easeBounce,\n    linear: easeLinear,\n    elastic: easeElastic,\n    back: easeBack,\n    poly: easePoly,\n    circle: easeCircle\n};\n\n/**\n * Returns the maximum or minimum points of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @param {string} minOrMax minimum or maximum.\n * @return {Object} Minimum or maximum point.\n */\nconst getExtremePoint = (points, compareValue, minOrMax) => {\n    let extremePoint;\n    let point;\n    const len = points.length;\n    let minOrMaxVal = minOrMax === 'max' ? -Infinity : Infinity;\n    let val;\n\n    for (let i = 0; i < len; i++) {\n        point = points[i];\n        val = point[compareValue];\n        if (minOrMax === 'min' ? val < minOrMaxVal : val > minOrMaxVal) {\n            minOrMaxVal = val;\n            extremePoint = point;\n        }\n    }\n\n    return extremePoint;\n};\n\n/**\n * Returns the minimum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Minimum point.\n */\nconst getMinPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'min');\n\n/**\n * Returns the maximum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Maximum point.\n */\nconst getMaxPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'max');\n\n/**\n * Gets the index of the closest value of the given value from the array.\n * @param {Array} arr Array of values\n * @param {number} value Value from which the nearest value will be calculated.\n * @param {string} side side property.\n * @return {number} index of the closest value\n */\n/* istanbul ignore next */const getClosestIndexOf = (arr, value, side) => {\n    let low = 0;\n    const arrLen = arr.length;\n    let high = arrLen - 1;\n\n    let mid;\n    let d1;\n    let d2;\n\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        d1 = Math.abs(arr[mid] - value);\n        d2 = Math.abs(arr[mid + 1] - value);\n\n        if (d2 <= d1) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n\n    if (!side) {\n        return high;\n    }\n\n    const highVal = arr[high];\n    if (highVal === value) {\n        return high;\n    } else if (highVal > value) {\n        if (high === 0) { return high; }\n        return side === 'left' ? high - 1 : high;\n    }\n    if (high === arr.length - 1) { return high; }\n    return side === 'left' ? high : high + 1;\n};\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst getWindow = () => window;\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst reqAnimFrame = (() => requestAnimationFrame)();\n\nconst cancelAnimFrame = (() => cancelAnimationFrame)();\n\n/**\n * Capitalizes the first letter of the word\n * @param {string} text word\n * @return {string} Capitalized word\n */\nconst capitalizeFirst = (text) => {\n    text = text.toLowerCase();\n\n    return text.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1));\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\n/* istanbul ignore next */ const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Returns the class name appended with a given id.\n * @param {string} cls class name\n * @param {string} id unique identifier\n * @param {string} prefix string needed to add before the classname\n * @return {string} qualified class name\n */\n/* istanbul ignore next */const getQualifiedClassName = (cls, id, prefix) => {\n    cls = cls.replace(/^\\.*/, '');\n    return [`${prefix}-${cls}`, `${prefix}-${cls}-${id}`];\n};\n\n/**\n * This method is used to set the default value for variables\n * without sullying the code with conditional statements.\n *\n * @export\n * @param {any} param The parameter to test.\n * @param {any} value The default value to assign.\n * @return {any} The value.\n */\n/* istanbul ignore next */ const defaultValue = (param, value) => {\n    if (typeof param === 'undefined' || (typeof param === 'object' && !param)) {\n        return value;\n    }\n    return param;\n};\n\n/**\n * DESCRIPTION TODO\n *\n * @export\n * @param {Object} graph graph whose dependency order has to be generated\n * @return {Object}\n */\nconst getDependencyOrder = (graph) => {\n    const dependencyOrder = [];\n    const visited = {};\n    const keys = Object.keys(graph);\n    /**\n     * DESCRIPTION TODO\n     *\n     * @export\n     * @param {Object} name\n     * @return {Object}\n     */\n    const visit = (name) => {\n        if (dependencyOrder.length === keys.length) {\n            return true;\n        }\n        visited[name] = true;\n        const edges = graph[name];\n        for (let e = 0; e < edges.length; e++) {\n            const dep = edges[e];\n            if (!visited[dep]) {\n                visit(dep);\n            }\n        }\n\n        dependencyOrder.push(name);\n        return false;\n    };\n\n    for (let i = 0; i < keys.length; i++) {\n        if (visit(keys[i], i)) break;\n    }\n\n    return dependencyOrder;\n};\n\n/**\n * Iterates over the properties of an object and applies the function\n *\n * @param {any} obj object to be iterated upon\n * @param {any} fn  function to be applied on it\n */\nconst objectIterator = (obj, fn) => {\n    for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            fn(key, obj);\n        }\n    }\n};\n\n/**\n * This class creates a d3 voronoi for retrieving the nearest neighbour of any point from a set of two\n * dimensional points\n * @class Voronoi\n */\n/* istanbul ignore next */ class Voronoi {\n    /**\n     * Initialize the voronoi with the data given.\n     * @param {Array.<Object>} data Array of points.\n     */\n    constructor (data) {\n        this._voronoi = voronoi().x(d => d.x).y(d => d.y);\n        this.data(data);\n    }\n\n    /**\n     * Sets the data to voronoi\n     * @param {Array.<Object>} data Array of objects.\n     * @return {Voronoi} Instance of voronoi.\n     */\n    data (data) {\n        if (data) {\n            this._voronoiFn = this._voronoi(data);\n        }\n        return this;\n    }\n\n    /**\n     * Finds the closest point to the x and y position given.\n     * @param {number} x x value\n     * @param {number} y y value\n     * @param {number} radius search radius.\n     * @return {Object} Details of the nearest point.\n     */\n    find (x, y, radius) {\n        return this._voronoiFn.find(x, y, radius);\n    }\n}\n\nconst addListenerToNamespace = (namespaceInf, fn, context) => {\n    let key = namespaceInf.key;\n    const namespace = namespaceInf.namespace;\n    if (namespace) {\n        !context._listeners[namespace] && (context._listeners[namespace] = []);\n        if (!key) {\n            key = Object.keys(context._listeners[namespace]).length;\n        }\n        context._listeners[namespace][key] = fn;\n    } else {\n        key = Object.keys(context._listeners).length;\n        context._listeners[key] = fn;\n    }\n};\n\n/**\n *\n *\n * @param {*} obj\n * @param {*} fields\n *\n */\nconst getObjProp = (obj, ...fields) => {\n    if (obj === undefined || obj === null) {\n        return obj;\n    }\n    let retObj = obj;\n    for (let i = 0, len = fields.length; i < len; i++) {\n        retObj = retObj[fields[i]];\n        if (retObj === undefined || retObj === null) {\n            break;\n        }\n    }\n    return retObj;\n};\n\n/**\n * Methods to handle changes to table configuration and reactivity are handled by this\n * class.\n */\n/**\n *  Common store class\n *\n * @class Store\n */\nclass Store {\n    /**\n     * Creates an instance of Store.\n     * @param {Object} config The object to create the state store with.\n     * @memberof Store\n     */\n    constructor (config) {\n        // create reactive model\n        this.model = Model.create(config);\n        this._listeners = {};\n    }\n\n    /**\n     * This method returns a plain JSON object\n     * with all the fields in the state store.\n     *\n     * @return {Object} Serialized representation of state store.\n     * @memberof Store\n     */\n    serialize () {\n        return this.model.serialize();\n    }\n\n    /**\n     * This method is used to update the value of a property in the state store.\n     *\n     * @param {string} propName The name of the property.\n     * @param {number} value The new value of the property.\n     * @memberof Store\n     */\n    commit (propName, value) {\n        // check if appropriate enum has been used\n        this.model.prop(propName, value);\n    }\n\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */registerChangeListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.next(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */ registerImmediateListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.on(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to get the name of the property\n     * from the state store.\n     *\n     * @param {string} propName The name of the field in state store.\n     * @return {any} The value of the field.\n     * @memberof Store\n     */\n    get (propName) {\n        return this.model.prop(propName);\n    }\n\n    /**\n     * This method is used to register a computed property that is computed every time\n     * the store value changes.\n     *\n     * @param {string} propName The name of the property to create.\n     * @param {Function} callBack The function to execute when depemdent props change.\n     * @memberof Store\n     */\n    computed (propName, callBack) {\n        return this.model.calculatedProp(propName, callBack);\n    }\n\n    append (propName, value) {\n        this.model.append(propName, value);\n        return this;\n    }\n\n    unsubscribeAll () {\n        Object.values(this._listeners).forEach(fn => fn());\n        return this;\n    }\n\n    unsubscribe (namespaceInf = {}) {\n        const { namespace, key } = namespaceInf;\n        const listeners = this._listeners[namespace];\n        if (key) {\n            const fn = getObjProp(listeners, key);\n            fn && fn();\n        } else {\n            Object.values(listeners).forEach(fn => fn());\n            this._listeners[namespace] = [];\n        }\n        return this;\n    }\n}\n\n/**\n * Sanitize an input number / string mixed number. Currently dot in the no is not supported.\n *\n * @param {number | string} val pure number or string mixed number\n * @return {number | null}  Number if it can be extracted. Otherwise null\n */\nconst intSanitizer = (val) => {\n    const arr = val.toString().match(/(\\d+)(px)*/g);\n    if (!arr) {\n        // If only characters are passed\n        return null;\n    }\n\n    return parseInt(arr[0], 10);\n};\n\n/**\n * Setter getter creator from config\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args. (Optional)\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @param {Object} holder an empty object on which the getters and setters will be mounted\n * @param {Object} options options config based on which the getters and setters are determined.\n * @param {Hyperdis} model optional model to attach the property. If not sent new moel is created.\n * @return {Array}\n */\nconst transactor = (holder, options, model, namespaceInf = {}) => {\n    let conf;\n    const store = model && model instanceof Model ? model : Model.create({});\n    const stateProps = {};\n    for (const prop in options) {\n        if ({}.hasOwnProperty.call(options, prop)) {\n            conf = options[prop];\n            const addAsMethod = conf.meta ? conf.meta.addAsMethod : true;\n            let nameSpaceProp;\n            const namespace = namespaceInf.namespace;\n            if (namespace) {\n                nameSpaceProp = `${namespace}.${prop}`;\n            } else {\n                nameSpaceProp = prop;\n            }\n            if (!store.prop(`${nameSpaceProp}`)) {\n                stateProps[prop] = conf.value;\n            }\n            if (addAsMethod !== false) {\n                holder[prop] = ((context, meta, nsProp) => (...params) => {\n                    let val;\n                    let compareTo;\n                    const paramsLen = params.length;\n                    const prevVal = store.prop(nsProp);\n                    if (paramsLen) {\n                        // If parameters are passed then it's a setter\n                        const spreadParams = meta && meta.spreadParams;\n                        val = params;\n                        const values = [];\n                        if (meta) {\n                            for (let i = 0; i < paramsLen; i++) {\n                                val = params[i];\n                                const sanitization = meta.sanitization && (spreadParams ? meta.sanitization[i] :\n                                    meta.sanitization);\n                                const typeCheck = meta.typeCheck && (spreadParams ? meta.typeCheck[i] : meta.typeCheck);\n                                if (sanitization && typeof sanitization === 'function') {\n                                    // Sanitize if required\n                                    val = sanitization(val, prevVal, holder);\n                                }\n\n                                if (typeCheck) {\n                                    // Checking if a setter is valid\n                                    if (typeof typeCheck === 'function') {\n                                        let typeExpected = meta.typeExpected;\n                                        if (typeExpected && spreadParams) {\n                                            typeExpected = typeExpected[i];\n                                        }\n                                        if (typeExpected) {\n                                            compareTo = typeExpected;\n                                        } else {\n                                            compareTo = true;\n                                        }\n\n                                        if (typeCheck(val) === compareTo) {\n                                            values.push(val);\n                                        }\n                                    } else if (typeof typeCheck === 'string') {\n                                        if (typeCheck === 'constructor') {\n                                            const typeExpected = spreadParams ? meta.typeExpected[i] :\n                                                meta.typeExpected;\n                                            if (val && (val.constructor.name === typeExpected)) {\n                                                values.push(val);\n                                            }\n                                        }\n                                    } else {\n                                        // context.prop(key, val);\n                                        values.push(val);\n                                    }\n                                } else {\n                                    values.push(val);\n                                }\n                            }\n                            const preset = meta.preset;\n                            const oldValues = context.prop(nsProp);\n                            preset && preset(values[0], holder);\n                            if (spreadParams) {\n                                oldValues.forEach((value, i) => {\n                                    if (values[i] === undefined) {\n                                        values[i] = value;\n                                    }\n                                });\n                            }\n                            values.length && context.prop(nsProp, spreadParams ? values : values[0]);\n                        } else {\n                            context.prop(nsProp, spreadParams ? val : val[0]);\n                        }\n                        return holder;\n                    }\n                // No parameters are passed hence its a getter\n                    return context.prop(nsProp);\n                })(store, conf.meta, nameSpaceProp);\n            }\n        }\n    }\n\n    if (namespaceInf.namespace === undefined) {\n        store.append(stateProps);\n    } else {\n        const namespace = namespaceInf.namespace;\n        store.append(namespace, stateProps);\n    }\n\n    return [holder, store];\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} props\n */\nconst generateGetterSetters = (context, props) => {\n    Object.entries(props).forEach((propInfo) => {\n        const prop = propInfo[0];\n        const typeChecker = propInfo[1].typeChecker;\n        const defVal = propInfo[1].defaultValue;\n        const sanitization = propInfo[1].sanitization;\n        const prototype = context.constructor.prototype;\n        if (!(Object.hasOwnProperty.call(prototype, prop))) {\n            if (defVal) {\n                context[`_${prop}`] = defVal;\n            }\n            context[prop] = (...params) => {\n                if (params.length) {\n                    let value = params[0];\n                    if (sanitization) {\n                        value = sanitization(context, params[0]);\n                    }\n                    if (typeChecker && !typeChecker(value)) {\n                        return context[`_${prop}`];\n                    }\n                    context[`_${prop}`] = value;\n                    return context;\n                } return context[`_${prop}`];\n            };\n        }\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} prop\n */\nconst getArraySum = (arr, prop) => arr.reduce((total, elem) => {\n    total += prop ? elem[prop] : elem;\n    return total;\n}, 0);\n\n/**\n *\n *\n * @param {*} arr1\n * @param {*} arr2\n *\n */\nconst arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) { return false; }\n    for (let i = arr1.length; i >= 0; i--) {\n        if (arr1[i] !== arr2[i]) { return false; }\n    }\n\n    return true;\n};\n\n/* eslint valid-typeof:0 */\n/**\n * Returns a validation function which can be used to validate variables against a type and value\n *\n * @param {any} type type of value that the object should have\n * @return {Object} validation function\n */\nconst isEqual = type => (oldVal, newVal) => {\n    if (type === 'Array') {\n        if (!oldVal) {\n            return false;\n        }\n        return arraysEqual(oldVal, newVal);\n    } else if (type === 'Object') {\n        return Object.is(oldVal, newVal);\n    } return oldVal === newVal;\n};\n\n/**\n * Description @todo\n *\n * @param {any} transactionModel @todo\n * @param {any} transactionEndpoint @todo\n * @param {any} transactionItems @todo\n * @return {any} @todo\n */\nconst enableChainedTransaction = (transactionModel, transactionEndpoint, transactionItems) =>\n    transactionItems.forEach(item => transactionModel.on(item, ([, newVal]) => transactionEndpoint[item](newVal)));\n\n/**\n * Chceks if the element is istanceof HTMLElement\n *\n * @param {Object} elem any JS Object\n */\nconst isHTMLElem = elem => elem instanceof HTMLElement;\n\nconst ERROR_MSG = {\n    INTERFACE_IMPL: 'Method not implemented'\n};\n\n/**\n * Merges the sink object in the source by recursively iterating through the object properties\n * @param {Object} source Source Object\n * @param {Object} sink Sink Object\n * @return {Object} Merged object\n */\nconst mergeRecursive = (source, sink) => {\n    for (const prop in sink) {\n        if (isSimpleObject(source[prop]) && isSimpleObject(sink[prop])) {\n            mergeRecursive(source[prop], sink[prop]);\n        } else if (sink[prop] instanceof Object && sink[prop].constructor === Object) {\n            source[prop] = {};\n            mergeRecursive(source[prop], sink[prop]);\n        } else {\n            source[prop] = sink[prop];\n        }\n    }\n    return source;\n};\n\n/**\n * Creates a selection set from a data set with corresponding attributes\n *\n * @export\n * @param {Selection} sel contains previous selection\n * @param {Object} appendObj Object to be appended\n * @param {Array} data Data based on which the selection is entered/updated/removed\n * @param {Object} [attrs={}] Attributes to be set on the data\n * @return {Selection} Merged selection\n */\nconst createSelection = (sel, appendObj, data, idFn) => {\n    let selection = sel || dataSelect([]);\n\n    selection = selection.data(data, idFn);\n\n    const enter = selection.enter().append(appendObj);\n    const mergedSelection = enter.merge(selection);\n\n    selection.exit() && selection.exit().remove();\n    return mergedSelection;\n};\n\nconst interpolateArray = (data, fitCount) => {\n    const linearInterpolate = function (before, after, atPoint) {\n        return before + (after - before) * atPoint;\n    };\n    const newData = [];\n    const springFactor = ((data.length - 1) / (fitCount - 1));\n    newData[0] = data[0]; // for new allocation\n    for (let i = 1; i < fitCount - 1; i++) {\n        const tmp = i * springFactor;\n        const before = (Math.floor(tmp)).toFixed();\n        const after = (Math.ceil(tmp)).toFixed();\n        const atPoint = tmp - before;\n        newData[i] = linearInterpolate(data[before], data[after], atPoint);\n    }\n    newData[fitCount - 1] = data[data.length - 1]; // for new allocation\n    return newData;\n};\n\n/**\n *\n *\n * @param {*} fn\n */\nconst nextFrame = (fn) => {\n    setTimeout(() => {\n        fn();\n    }, 0);\n};\n\n/**\n *\n *\n * @param {*} angle\n */\nconst angleToRadian = angle => angle * Math.PI / 180;\n\n/**\n *\n *\n * @param {*} newName\n * @param {*} oldName\n */\nconst replaceCSSPrefix = () => {\n    // @todo\n};\n\n/**\n * Gets the  interpolator function from d3 color\n *\n */\nconst interpolator = () => interpolate;\n\n/**\n * Gets the number interpolator from d3 color\n *\n */\nconst numberInterpolator = () => interpolateNumber;\n\n/**\n * Gets the rgb interpolator from d3 color\n *\n */\nconst colorInterpolator = () => interpolateRgb;\n\n/**\n * Gets the hsl interpolator from d3 color\n *\n */\nconst hslInterpolator = () => interpolateHslLong;\n\nconst transformColors = () => ({\n    color,\n    rgb,\n    hsl\n});\n\n/**\n * Gets the piecewise interpolator from d3 color\n *\n */\nconst piecewiseInterpolator = () => piecewise;\n\nfunction hue2rgb (p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n\n  /**\n   * Converts an HSL color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n   * Assumes h, s, and l are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  l       The lightness\n   * @return  Array           The RGB representation\n   */\nconst hslToRgb = (h, s, l, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\n  /**\n   * Converts an RGB color value to HSV. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes r, g, and b are contained in the set [0, 255] and\n   * returns h, s, and v in the set [0, 1].\n   *\n   * @param   Number  r       The red color value\n   * @param   Number  g       The green color value\n   * @param   Number  b       The blue color value\n   * @return  Array           The HSV representation\n   */\nconst rgbToHsv = (r, g, b, a = 1) => {\n    r = +r; g = +g; b = +b; a = +a;\n    r /= 255; g /= 255; b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h;\n    let s;\n    const l = (max + min) / 2;\n\n    if (max === min) {\n        h = s = 0; // achromatic\n    } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n        default: break;\n        }\n        h /= 6;\n    }\n    return [h, s, l, a];\n};\n\n  /**\n   * Converts an HSV color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes h, s, and v are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  v       The value\n   * @return  Array           The RGB representation\n   */\nconst hsvToRgb = (h, s, v, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n    default: break;\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\nconst hexToHsv = (hex) => {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n    const r = parseInt(result[1], 16);\n    const g = parseInt(result[2], 16);\n    const b = parseInt(result[3], 16);\n    const a = result[4] ? parseInt(result[4], 16) : 1;\n    return rgbToHsv(r, g, b, a);\n};\n\nconst detectColor = (col) => {\n    const matchRgb = /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/;\n    const matchHsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g;\n\n    // Source :  https://gist.github.com/sethlopezme/d072b945969a3cc2cc11\n     // eslint-disable-next-line\n    const matchRgba = /rgba?\\(((25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,\\s*?){2}(25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,?\\s*([01]\\.?\\d*?)?\\)/;\n     // eslint-disable-next-line\n    const matchHsla = /^hsla\\((0|360|35\\d|3[0-4]\\d|[12]\\d\\d|0?\\d?\\d),(0|100|\\d{1,2})%,(0|100|\\d{1,2})%,(0?\\.\\d|1(\\.0)?)\\)$/;\n    const matchHex = /^#([0-9a-f]{3}){1,2}$/i;\n\n    if (matchRgb.test(col) || matchRgba.test(col)) {\n        return 'rgb';\n    } else if (matchHsl.test(col) || matchHsla.test(col)) {\n        return 'hsl';\n    } else if (matchHex.test(col)) {\n        return 'hex';\n    } return col;\n};\n\n/**\n *\n *\n * @param {*} model\n * @param {*} propModel\n *\n */\nconst filterPropagationModel = (model, propModel, measures) => {\n    const { data, schema } = propModel.getData();\n    let filteredModel;\n    if (schema.length) {\n        const fieldMap = model.getFieldsConfig();\n        filteredModel = model.select((fields) => {\n            const include = data.some(row => schema.every((propField, idx) => {\n                if (!measures && (!(propField.name in fieldMap) ||\n                        fieldMap[propField.name].def.type === FieldType.MEASURE)) {\n                    return true;\n                }\n                return row[idx] === fields[propField.name].valueOf();\n            }));\n            return include;\n        }, {\n            saveChild: false\n        });\n    } else {\n        filteredModel = propModel;\n    }\n\n    return filteredModel;\n};\n\nconst assembleModelFromIdentifiers = (model, identifiers) => {\n    let schema = [];\n    let data;\n    const fieldMap = model.getFieldsConfig();\n    if (identifiers.length) {\n        const fields = identifiers[0];\n        const len = fields.length;\n        for (let i = 0; i < len; i++) {\n            const field = fields[i];\n            const fieldObj = fieldMap[field] && Object.assign({}, fieldMap[field].def);\n            if (fieldObj) {\n                schema.push(Object.assign(fieldObj));\n            }\n        }\n\n        data = [];\n        const header = identifiers[0];\n        for (let i = 1; i < identifiers.length; i += 1) {\n            const vals = identifiers[i];\n            const temp = {};\n            vals.forEach((fieldVal, cIdx) => {\n                temp[header[cIdx]] = fieldVal;\n            });\n            data.push(temp);\n        }\n    } else {\n        data = [];\n        schema = [];\n    }\n\n    return new model.constructor(data, schema);\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} criteria\n *\n */\nconst getDataModelFromRange = (dataModel, criteria, mode) => {\n    if (criteria === null) {\n        return null;\n    }\n    const selFields = Object.keys(criteria);\n    const selFn = fields => selFields.every((field) => {\n        const val = fields[field].value;\n        const range = criteria[field][0] instanceof Array ? criteria[field][0] : criteria[field];\n        if (typeof range[0] === 'string') {\n            return range.find(d => d === val) !== undefined;\n        }\n        return range ? val >= range[0] && val <= range[1] : true;\n    });\n\n    return dataModel.select(selFn, {\n        saveChild: false,\n        mode\n    });\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} identifiers\n *\n */\nconst getDataModelFromIdentifiers = (dataModel, identifiers, mode) => {\n    let filteredDataModel;\n    if (identifiers instanceof Array) {\n        const fieldsConfig = dataModel.getFieldsConfig();\n\n        const dataArr = identifiers.slice(1, identifiers.length);\n        if (identifiers instanceof Function) {\n            filteredDataModel = identifiers(dataModel, {}, false);\n        } else if (identifiers instanceof Array && identifiers[0].length) {\n            const filteredSchema = identifiers[0].filter(d => d in fieldsConfig);\n            filteredDataModel = dataModel.select((fields) => {\n                let include = true;\n                filteredSchema.forEach((propField, idx) => {\n                    const value = fields[propField].valueOf();\n                    const index = dataArr.findIndex(d => d[idx] === value);\n                    include = include && index !== -1;\n                });\n                return include;\n            }, {\n                saveChild: false,\n                mode\n            });\n        }\n    } else {\n        filteredDataModel = getDataModelFromRange(dataModel, identifiers, mode);\n    }\n    return filteredDataModel;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} listenerMap\n */\nconst registerListeners = (context, listenerMap, ...params) => {\n    const propListenerMap = listenerMap(context, ...params);\n    for (const key in propListenerMap) {\n        if ({}.hasOwnProperty.call(propListenerMap, key)) {\n            const namespace = params[0];\n            let ns = null;\n            if (namespace) {\n                ns = namespace.local;\n            }\n            const mapObj = propListenerMap[key];\n            const propType = mapObj.type;\n            const props = mapObj.props;\n            const listenerFn = mapObj.listener;\n            context.store()[propType](props, listenerFn, false, {\n                namespace: ns\n            });\n        }\n    }\n};\n\nconst isValidValue = value => !isNaN(value) && value !== -Infinity && value !== Infinity;\n/**\n *\n *\n * @param {*} str\n *\n */\nconst escapeHTML = (str) => {\n    const htmlEscapes = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '/': '&#x2F;'\n    };\n    const htmlEscaper = /[&<>\"'/]/g;\n    return (`${str}`).replace(htmlEscaper, match => htmlEscapes[match]);\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst transposeArray = arr => arr[0].map((col, i) => arr.map(row => row[i]));\nconst toArray = arr => (arr instanceof Array ? arr : [arr]);\nconst extendsClass = (cls, extendsFrom, found) => {\n    if (!cls) {\n        return false;\n    }\n    const prototype = cls.prototype;\n    if (prototype instanceof extendsFrom) {\n        found = true;\n    } else {\n        found = extendsClass(prototype, extendsFrom, found);\n    }\n    return found;\n};\n\n/**\n *\n * @param {*} dm1\n * @param {*} dm2\n */\nconst concatModels = (dm1, dm2) => {\n    const dataObj1 = dm1.getData();\n    const dataObj2 = dm2.getData();\n    const data1 = dataObj1.data;\n    const data2 = dataObj2.data;\n    const schema1 = dataObj1.schema;\n    const schema2 = dataObj2.schema;\n    const tuples1 = {};\n    const tuples2 = {};\n    const commonTuples = {};\n    for (let i = 0; i < data1.length; i++) {\n        for (let ii = 0; ii < data2.length; ii++) {\n            const row1 = data1[i];\n            const row2 = data2[ii];\n            const dim1Values = row1.filter((d, idx) => schema1[idx].type === FieldType.DIMENSION);\n            const dim2Values = row2.filter((d, idx) => schema2[idx].type === FieldType.DIMENSION);\n            const allDimSame = dim1Values.every(value => dim2Values.indexOf(value) !== -1);\n            if (allDimSame) {\n                const key = dim1Values.join();\n                !commonTuples[key] && (commonTuples[key] = {});\n                row1.forEach((value, idx) => {\n                    commonTuples[key][schema1[idx].name] = value;\n                });\n                row2.forEach((value, idx) => {\n                    commonTuples[key][schema2[idx].name] = value;\n                });\n            } else {\n                const dm1Key = dim1Values.join();\n                const dm2Key = dim2Values.join();\n                if (!commonTuples[dm1Key] && !commonTuples[dm2Key]) {\n                    !tuples1[dm1Key] && (tuples1[dm1Key] = {});\n                    !tuples2[dm2Key] && (tuples2[dm2Key] = {});\n                    row1.forEach((value, idx) => {\n                        tuples1[dm1Key][schema1[idx].name] = value;\n                    });\n                    row2.forEach((value, idx) => {\n                        tuples2[dm2Key][schema2[idx].name] = value;\n                    });\n                }\n            }\n        }\n    }\n\n    const commonSchema = [...schema1, ...schema2.filter(s2 => schema1.findIndex(s1 => s1.name === s2.name) === -1)];\n    const data = [...Object.values(tuples1), ...Object.values(tuples2), ...Object.values(commonTuples)];\n    return [data, commonSchema];\n};\n\nconst getSymbol = type => symbol().type(symbolFns[type]);\n\nconst stackOrders = {\n    [STACK_CONFIG.ORDER_NONE]: stackOrderNone,\n    [STACK_CONFIG.ORDER_ASCENDING]: stackOrderAscending,\n    [STACK_CONFIG.ORDER_DESCENDING]: stackOrderDescending\n};\nconst stackOffsets = {\n    [STACK_CONFIG.OFFSET_DIVERGING]: stackOffsetDiverging,\n    [STACK_CONFIG.OFFSET_NONE]: stackOffsetNone,\n    [STACK_CONFIG.OFFSET_EXPAND]: stackOffsetExpand,\n    [STACK_CONFIG.OFFSET_WIGGLE]: stackOffsetWiggle\n};\n\n// eslint-disable-next-line require-jsdoc\nconst stack = params => d3Stack().keys(params.keys).offset(stackOffsets[params.offset])\n                .order(stackOrders[params.order])(params.data);\n\n/**\n * Groups the data into a hierarchical tree structure based on one or more fields.\n * @param { Object } params Configuration properties for nesting data\n * @param { Array.<Array> } params.data Data which needs to be grouped\n * @param { Array.<number> } params.keys Field indices by which the data will be grouped\n * @return { Array.<Object> } Grouped data array\n */\nconst nestCollection = (params) => {\n    const nestFn = nest();\n    params.keys.forEach(key => nestFn.key(d => d[key]));\n    return nestFn.entries(params.data);\n};\n\nconst pathInterpolators = {\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    stepAfter: curveStepAfter,\n    catmullRom: curveCatmullRom,\n    step: curveStep,\n    stepBefore: curveStepBefore,\n    linear: curveLinear\n};\n\nconst Symbols = {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom,\n    line,\n    area,\n    pie,\n    arc,\n    nest\n};\n\nconst Scales = {\n    band: scaleBand\n};\n\nconst getSmallestDiff = (points) => {\n    points = points.sort((a, b) => a - b);\n    let minDiff = points[1] - points[0];\n    for (let i = 2; i < points.length; i++) {\n        minDiff = Math.min(minDiff, points[i] - points[i - 1]);\n    }\n\n    return minDiff;\n};\n\nconst require = (lookupWhat, lookupDetails) => ({\n    resolvable: (store) => {\n        const lookupTarget = store[lookupWhat];\n        const depArr = lookupDetails.slice(0, lookupDetails.length - 1);\n        const fn = lookupDetails[lookupDetails.length - 1]; // fn\n\n        const deps = depArr.map(str => lookupTarget[str]);\n        return {\n            fn: fn(...deps),\n            depArr\n        };\n    }\n});\n\nconst nextAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n    function (callback) {\n        setTimeout(callback, 16);\n    };\n\nexport {\n    require,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    stack,\n    nestCollection,\n    getSymbol,\n    transformColors,\n    detectColor,\n    hexToHsv,\n    hslToRgb,\n    rgbToHsv,\n    hsvToRgb,\n    concatModels,\n    toArray,\n    angleToRadian,\n    escapeHTML,\n    generateGetterSetters,\n    getArraySum,\n    interpolator,\n    piecewiseInterpolator,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    colorInterpolator,\n    numberInterpolator,\n    ERROR_MSG,\n    reqAnimFrame,\n    nextAnimFrame,\n    filterPropagationModel,\n    transposeArray,\n    cancelAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    symbolFns,\n    easeFns,\n    clone,\n    isEqual,\n    interpolateArray,\n    getMinPoint,\n    defaultValue,\n    getMaxPoint,\n    getClosestIndexOf,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    Store,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    transactor,\n    enableChainedTransaction,\n    isHTMLElem,\n    isSimpleObject,\n    nextFrame,\n    registerListeners,\n    replaceCSSPrefix,\n    getObjProp,\n    extendsClass,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    hslInterpolator,\n    getSmallestDiff,\n    createSelection\n};\n","export function linear(t) {\n  return +t;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","import Selection from './selection';\n/**\n * This function applies a selection operation on a data array.\n *\n * @export\n * @param {Array} [data=[]] The data array to be observed.\n * @return {Selection} Instance of a selection.\n */\nexport default function dataSelect (data = []) {\n    return new Selection(data);\n}\n\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","export const ORDER_ASCENDING = 'ascending';\nexport const ORDER_DESCENDING = 'descending';\nexport const ORDER_NONE = 'none';\nexport const OFFSET_DIVERGING = 'diverging';\nexport const OFFSET_NONE = 'none';\nexport const OFFSET_EXPAND = 'expand';\nexport const OFFSET_WIGGLE = 'wiggle';\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import { select, event as d3event, selection, clientPoint } from 'd3-selection';\nimport { drag as d3drag } from 'd3-drag';\nimport 'd3-transition';\nimport { mergeRecursive } from './common-utils';\n/**\n * This function takes a raw DOM element or\n * a string and returns a d3 selection of that element.\n *\n * @param {HTMLElement | string} element The element to wrap in d3 selection.\n * @return {Selection} Instance of d3 selection.\n */\nconst selectElement = element => select(element);\n\n/**\n * It creates a new d3 element on the parent element\n * @param  {Selection} parent Element to which the element is to be appended\n * @param  {Object} elemType Type of the new element\n * @param  {Array} data Data for the new element\n * @param  {Object} selector classname/id/tagname for the element\n * @return {HTMLElement} Newly Created Element\n */\nconst makeElement = (parent, elemType, data, selector, callbacks = {}, keyFn) => {\n    if ((parent instanceof HTMLElement || parent instanceof SVGElement)) {\n        parent = selectElement(parent);\n    }\n\n    const selectorVal = selector ? selector[0] : null;\n    let selectorType = null;\n    let actualSelector = null;\n    let element = null;\n    let enterSel = null;\n    let mergeSel = null;\n    let filter;\n    if (selectorVal) {\n        if (selectorVal === '#') {\n            selectorType = 'id';\n            actualSelector = selector;\n        } else {\n            selectorType = 'class';\n            actualSelector = selector[0] === '.' ? selector : `.${selector}`;\n        }\n    } else {\n        actualSelector = elemType;\n        filter = true;\n    }\n    element = parent.selectAll(actualSelector);\n\n    filter && (element = element.filter(function () {\n        return this.parentNode === parent.node();\n    }));\n    element = element.data(data, keyFn);\n\n    enterSel = element.enter()\n                            .append(elemType || 'div');\n    callbacks.enter && enterSel.each(function (...params) {\n        callbacks.enter(selectElement(this), ...params);\n    });\n\n    mergeSel = enterSel.merge(element);\n    callbacks.update && mergeSel.each(function (...params) {\n        callbacks.update(selectElement(this), ...params);\n    });\n    if (selectorType === 'class') {\n        mergeSel.classed(selectorVal === '.' ? selector.substring(1, selector.length) : selector, true);\n    } else if (selectorType === 'id') {\n        mergeSel.attr('id', selector.substring(1, selector.length));\n    }\n    const exitSel = element.exit();\n\n    if (callbacks.exit) {\n        exitSel.each(function (...params) {\n            callbacks.exit(selectElement(this), ...params);\n        });\n    } else {\n        exitSel.remove();\n    }\n    return mergeSel;\n};\n\n/**\n * This function applies styles to an element\n *  @param  {Object} elem Element Selection\n * @param  {Object} styleObj Style Object to be applied\n * @return {Element} Newly Created Element\n*/\nconst applyStyle = (elem, styleObj) => {\n    Object.entries(styleObj).forEach((d) => {\n        elem.style(d[0], d[1]);\n    }, this);\n    return elem;\n};\n\n/**\n * This function appends a dom element in another element.\n * @param {HTMLElement | SVGElement} element1 The element in which to append the second element\n * @param {HTMLElement | SVGElement} element2 The element which will be appended.\n */\nconst appendElement = (element1, element2) => {\n    element1.appendChild(element2);\n};\n\n/**\n * Sets the attributes to the element.\n * @param {HTMLElement | SVGElement} element Element on which attributes will be applied\n * @param {Object} attrs Attributes which need to be applied\n */\nconst setElementAttrs = (element, attrs) => {\n    for (const key in attrs) {\n        if ({}.hasOwnProperty.call(attrs, key)) {\n            element.attr(key, attrs[key]);\n        }\n    }\n};\n\n/**\n * Sets attributes in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which attrs will be applied\n * @param {Array.<Object>} attrs Array of attributes\n * @param {string} className className of elements to select.\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setAttrs = (element, attrs, className) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    className !== undefined ? element.selectAll(`.${className}`).each(function () {\n        setElementAttrs(select(this), attrs);\n    }) : setElementAttrs(element, attrs);\n    return element;\n};\n\n/**\n * Adds a css class to elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst addClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, true) :\n                elem.classed(className, true);\n    });\n};\n\n/**\n * Removes the css class from elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst removeClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, false) :\n                elem.classed(className, false);\n    });\n};\n\n/**\n * Sets styles in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which styles will be applied\n * @param {Array.<Object>} styles Array of style attributes\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setStyles = (element, styles) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            element.style(key, styles[key]);\n        }\n    }\n    return element;\n};\n\n/**\n * Creates svg or html elements by binding data to the selection.Removes extra elements\n * on exit.\n * @param {Object} params Parameter object\n * @param {SVGElement | HTMLElement} params.container Container element where all elements will be appended\n * @param {string} params.selector Selector by which elements will be selected from dom\n * @param {string} params.append Append tag\n * @param {Function} params.each Function which will be executed for each data point and element.\n */\nconst createElements = (params) => {\n    const container = select(params.container);\n    let data;\n    let sel;\n\n    data = params.data;\n    if (typeof data === 'number') {\n        data = Array(data).fill().map((d, i) => i);\n    }\n    sel = container.selectAll(params.selector).data(data);\n\n    sel = container.selectAll(params.selector).filter(function () {\n        return this.parentNode === container.node();\n    }).data(params.data);\n\n    const selectionMerge = sel.enter().append(params.append).merge(sel).each(function (d, i) {\n        params.each(d, select(this), i);\n    });\n\n    selectionMerge.attr('class', params.className || '');\n    sel.exit().remove();\n};\n\n/**\n * Clips an element with given measurement. Basically it is used to hide overflowing portions\n * of any element.\n * @param {SVGElement} container svg element which needs to be clipped.\n * @param {Object} measurement Dimensions of the clipped rectangle.\n * @param {string} id Unique id of the clip element\n */\nconst clipElement = (container, measurement, id) => {\n    const clipPathElement = makeElement(select(container), 'clipPath', [1], `#${id}`);\n    const clipPathRect = makeElement(clipPathElement, 'rect', [1]);\n    clipPathRect.attr('x', measurement.x)\n                    .attr('y', measurement.x)\n                    .attr('width', measurement.width)\n                    .attr('height', measurement.height);\n    clipPathElement.attr('clip-path', `url(#${id})`);\n};\n\n/**\n * Returns the element of the corresponding classname.\n * @param {HTMLElement | SVGElement} node html or svg node element.\n * @param {string} className css class to be applied.\n * @return {HTMLElement | SVGElement} html or svg element.\n */\nconst getElementsByClassName = (node, className) => select(node).selectAll(className).nodes();\n\n/**\n * Gets the mouse position relative to an svg type of element\n * @param {SVGElement} element Any svg element like rect, circle, etc.\n * @param {Event} event Event object.\n * @return {Object} x and y position relative to the container element passed.\n */\nconst getMousePos = (element, event) => {\n    const boundingClientRect = element.getBoundingClientRect();\n    return {\n        x: event.x - boundingClientRect.x,\n        y: event.y - boundingClientRect.y\n    };\n};\n\nconst getClientPoint = (...params) => {\n    const pos = clientPoint(...params);\n    return {\n        x: pos[0],\n        y: pos[1]\n    };\n};\n\n/** This function appends a dom element in another element.\n * @param {Object} tag The tag name of the element to append\n * @param {Object} mount Mount point fo the element\n * @return {Object} selection of the appended element\n */\nconst createElement = (tag, mount) => select(mount).append(tag).node();\n\n/**\n * Gets the d3 event function\n * @return {Object} d3 event\n */\nconst getEvent = () => d3event;\n\n/**\n * Gets the d3 drag function\n * @return {Object} d3 drag\n */\nconst getD3Drag = () => d3drag;\n\nconst getSmartComputedStyle = (group, css) => {\n    let textEl;\n    const testText = 'W';\n    const mandatoryStyle = {\n        'fill-opacity': 0\n    };\n    const className = typeof css === 'string' ? css : (css instanceof Array ? css.join(' ') : undefined);\n\n    if (group.node() instanceof HTMLElement) {\n        textEl = group.append('div').html(testText);\n    } else {\n        textEl = group.append('text').text(testText);\n    }\n\n    if (className) {\n        textEl.attr('class', className);\n    } else if (typeof css === 'object') {\n        delete css['fill-opacity'];\n        mergeRecursive(mandatoryStyle, css);\n    }\n\n    textEl.style(mandatoryStyle);\n\n    const computedStyle = window.getComputedStyle(textEl.node());\n    const styleForSmartLabel = {\n        fontSize: computedStyle.fontSize,\n        fontFamily: computedStyle.fontFamily,\n        fontWeight: computedStyle.fontWeight,\n        fontStyle: computedStyle.fontStyle\n    };\n\n    textEl.remove();\n\n    return styleForSmartLabel;\n};\n\nconst hasTouch = () => 'ontouchstart' in document.documentElement;\n\nexport {\n    hasTouch,\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint\n};\n","const events = [\n    'initialized',\n    'beforeupdate',\n    'updated',\n    'beforedraw',\n    'drawn',\n    'beforeremove',\n    'removed',\n    'animationend'\n];\n\nconst compositions = [\n    'canvas',\n    'unit',\n    'layer',\n    'axis',\n    'facet-headers',\n    'legend',\n    'caption'\n];\n\nconst EVENT_LIST = [];\n\ncompositions.forEach((composition) => {\n    events.forEach((event) => {\n        EVENT_LIST.push(`${composition}.${event}`);\n    });\n});\n\nexport default EVENT_LIST;\n","import EVENT_LIST from './event-list';\nimport { createPromise } from './helper';\n\n/**\n * At first call it accepts one function\n * calling it second time accepts notification object.\n * notification object then called with first accepted function\n *\n * @param {Function} resolveFn a promise's resolve function\n * @return {Function} a function to accept notification object\n */\nconst resolver = resolveFn => notification => resolveFn(notification);\n\n/**\n * Checks if the property string is present in the source object\n *\n * @param {Object} source source object whom you want to check the property\n * @param {string} property key name that need to be checked\n * @return {boolean} returns true if the property found in the source object\n */\nconst hasOwn = (source, property) => Object.prototype.hasOwnProperty.call(source, property);\n\n/**\n * LifeCycleManager which goes as a dependendecy to a muze\n * it accepts notification from the entire library throughout\n * the exeecution life\n *\n * @export\n * @class LifeCycleManager\n */\nexport default class LifeCycleManager {\n\n    /**\n     * Creates an instance of LifeCycleManager.\n     * @memberof LifeCycleManager\n     */\n    constructor () {\n        this._eventList = EVENT_LIST;\n        this._promises = new Map();\n        this._notifiers = {};\n        this._lifeCycles = {};\n        this._unreleasedLifeCycles = {};\n        this._boot();\n    }\n\n    /**\n     * Fills all the notifiers with resolver callback\n     *\n     * @memberof LifeCycleManager\n     */\n    _boot () {\n        this._notifiers = this._eventList.reduce((acc, name) => {\n            acc[name] = resolver;\n            return acc;\n        }, {});\n        this._preparePromises();\n    }\n\n    /**\n     * Public method which gives the promise corresponding\n     * to the event name\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    retrieve (eventName) {\n        return this._promises.get(eventName);\n    }\n\n    /**\n     * Creates a promise that will be passed to user's callback\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} a pending promise waiting for resolve to be called\n     * @memberof LifeCycleManager\n     */\n    _makeNotifierPromise (eventName) {\n        return new Promise((resolve) => {\n            this._notifiers[eventName] = resolver(resolve);\n        });\n    }\n\n    /**\n     * Prepares the promise map with pending promises\n     * all the promises are in a pending state where their's\n     * resolve function waiting to be called with notification object\n     * @memberof LifeCycleManager\n     */\n    _preparePromises () {\n        this._eventList.forEach((eventName) => {\n            const promise = this._makeNotifierPromise(eventName);\n            this._promises.set(eventName, promise);\n            createPromise(promise, eventName, this);\n        });\n    }\n\n    /**\n     * Resolves the promise with notification object\n     *\n     * @param {string} eventName name of the event in the system\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     *\n     * @memberof LifeCycleManager\n     */\n    _resolvePromise (eventName, notification) {\n        this._notifiers[eventName](notification);\n    }\n\n    /**\n     * Public method which is being called by different\n     * subcompoents of the system at different execution atages\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    notify (notification) {\n        // get the composition name from notification\n        // or from static formalName() method\n        const composition = notification.formalName || notification.client.constructor.formalName();\n        notification.formalName = composition;\n        this._releasePromisesFromCache();\n        this._notify(composition, notification);\n    }\n\n    /**\n     * Notify user the with promsie in a callback\n     * if callback not found then cache it\n     *\n     * @param {string} composition\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    _notify (composition, notification) {\n        const stage = notification.action;\n        const eventName = `${composition}.${stage}`;\n\n        // resolves promise with the notification object\n        this._resolvePromise(eventName, notification);\n\n        // get the promise from the promise map\n        const promise = this.retrieve(eventName);\n\n        if (this._lifeCycles[composition]) {\n            if (this._lifeCycles[composition][stage]) {\n                // if user given call back exists, then call with promise\n                this._callLifeCycleCallback(composition, stage, promise);\n            } else {\n                // otherwise cache the promise\n                this._cachePromise(composition, stage, promise);\n            }\n        } else {\n            this._cachePromise(composition, stage, promise);\n        }\n    }\n\n    /**\n     * Calls the user's callback with callback\n     *\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _callLifeCycleCallback (composition, stage, promise) {\n        const eventName = `${composition}.${stage}`;\n        this._lifeCycles[composition][stage](promise);\n        this._resetTargetPromise(eventName);\n    }\n\n    /**\n     * Try to clear the cached promsies once we have\n     * macthed callbacks from the user\n     *\n     * @memberof LifeCycleManager\n     */\n    _releasePromisesFromCache () {\n        const compositions = Object.keys(this._unreleasedLifeCycles);\n        compositions.forEach((composition) => {\n            const stages = Object.keys(this._unreleasedLifeCycles[composition]);\n            stages.forEach((stage) => {\n                if (this._lifeCycles[composition]) {\n                    if (this._lifeCycles[composition][stage]) {\n                        // take the promise from unreleased lifeCycles\n                        const promise = this._unreleasedLifeCycles[composition][stage];\n                        // call the user given callback with that promise\n                        this._callLifeCycleCallback(composition, stage, promise);\n                        // delete promise from unreleased lifeCycles\n                        delete this._unreleasedLifeCycles[composition][stage];\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Cache the promise in the map. This cache\n     * then get consumed if we get user callbacks\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _cachePromise (composition, stage, promise) {\n        if (!hasOwn(this._unreleasedLifeCycles, composition)) {\n            this._unreleasedLifeCycles[composition] = {};\n        }\n\n        if (!hasOwn(this._unreleasedLifeCycles[composition], stage)) {\n            this._unreleasedLifeCycles[composition][stage] = {};\n        }\n        this._unreleasedLifeCycles[composition][stage] = promise;\n    }\n\n    /**\n     * It register's the callbacks gievn the user\n     *\n     * @param {Object} [lifeCycles={}] a object with list of callbacks\n     * @memberof LifeCycleManager\n     */\n    register (lifeCycles = {}) {\n        this._lifeCycles = lifeCycles;\n        // as we get all the callbacks, try to call them\n        // from unreleased promise map\n        this._releasePromisesFromCache();\n    }\n\n    /**\n     * Reset the promise into pending state\n     *\n     * @param {string} eventName name of the event happening\n     * @memberof LifeCycleManager\n     */\n    _resetTargetPromise (eventName) {\n        setTimeout(() => {\n            this._notifiers[eventName] = resolver;\n            this._promises.set(eventName, this._makeNotifierPromise(eventName));\n        }, 0);\n    }\n}\n","import LifeCycleManager from './lifecycle-manager';\n\nexport default LifeCycleManager;\n","/**\n * Creates a new promise when the given promise is resolved. This needs to be done so that after the lifecycle event\n * is completed, then again when the event gets completed, then a new promise gets resolved.\n *\n * @param {Promise} promise Instance of promise\n * @param {string} eventName name of event\n * @param {LifeCycleManager} context Instance of lifecyclemanager\n */\nexport const createPromise = (promise, eventName, context) => {\n    promise.then(() => {\n        const prm = context._makeNotifierPromise(eventName);\n        context._promises.set(eventName, prm);\n        createPromise(prm, eventName, context);\n    });\n};\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\nexport const LONGTOUCH = 'longtouch';\nexport const TOUCHDRAG = 'touchdrag';\nexport const ALL_ACTIONS = '*';\n","const SELECTION_NEW_ENTRY = 1;\nconst SELECTION_NEW_EXIT = -1;\nconst SELECTION_NULL = 0;\nconst SELECTION_OLD_ENTRY = 2;\nconst SELECTION_OLD_EXIT = -2;\n\nexport {\n    SELECTION_NEW_ENTRY,\n    SELECTION_NEW_EXIT,\n    SELECTION_NULL,\n    SELECTION_OLD_ENTRY,\n    SELECTION_OLD_EXIT\n};\n","import SelectionSet from './selection-set';\n\nexport default SelectionSet;\n","import {\n    SELECTION_NEW_ENTRY, SELECTION_NEW_EXIT, SELECTION_NULL, SELECTION_OLD_ENTRY, SELECTION_OLD_EXIT\n} from '../enums/selection';\n/* eslint-disable guard-for-in */\n\n/**\n * This component is used to keep track of the row tuples of the data which gets added and removed. This keeps\n * information of which rows are in previous and new entry set and previous and new exit set. This is initialized by\n * {@link Firebolt}.\n *\n * @public\n *\n * @class SelectionSet\n */\nclass SelectionSet {\n    /**\n     * Creates an instance of selection set\n     *\n     * @param {Array.<string>} completeSet Set of unique ids.\n     */\n    constructor (completeSet, _volatile) {\n        this.completeSet = completeSet;\n        this._set = completeSet.reduce((obj, key) => {\n            obj[key] = SELECTION_NULL;\n            return obj;\n        }, {});\n        this._volatile = _volatile;\n        this._completeSetCount = completeSet.length;\n        this._lockedSelection = {};\n        this._resetted = true;\n    }\n\n    /**\n     * Adds a set of ids to the selection set. This also moves the other rows to exit set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    add (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_ENTRY;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_ENTRY && set[key] !== SELECTION_OLD_ENTRY) {\n                set[key] = set[key] < 0 ? SELECTION_OLD_EXIT : SELECTION_NEW_EXIT;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Adds an array of ids to the old entry set.\n     *\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    update (ids) {\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_OLD_ENTRY;\n        });\n\n        return this;\n    }\n\n    /**\n     * Moves all ids which in new entry set  to old entry set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateEntry () {\n        const set = this._set;\n\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_ENTRY ? SELECTION_OLD_ENTRY : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Moves an array of ids which are in new exit set to old exit set.\n     *\n     * @public\n     *\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateExit () {\n        const set = this._set;\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_EXIT ? SELECTION_OLD_EXIT : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Removes an array of ids from the selection set. It also moves the remaining row ids to entry set.\n     *\n     * @public\n     * @param {Array.<string>} ids Array of unique ids\n     *\n     * @return {SelectionSet}  Instance of selection set\n     */\n    remove (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_EXIT;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_EXIT && set[key] !== SELECTION_OLD_EXIT) {\n                set[key] = set[key] === 0 ? SELECTION_NEW_ENTRY : SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n\n    getSets () {\n        const set = this._set;\n        const retObj = {\n            entrySet: [[], []],\n            exitSet: [[], []],\n            completeSet: []\n        };\n\n        for (const key in set) {\n            if (set[key] > 0) {\n                set[key] === SELECTION_OLD_ENTRY && retObj.entrySet[0].push(key);\n                set[key] === SELECTION_NEW_ENTRY && retObj.entrySet[1].push(key);\n            } else if (set[key] < 0) {\n                set[key] === SELECTION_OLD_EXIT && retObj.exitSet[0].push(key);\n                set[key] === SELECTION_NEW_EXIT && retObj.exitSet[1].push(key);\n            }\n            retObj.completeSet.push(key);\n        }\n\n        ['entrySet', 'exitSet'].forEach((type) => {\n            retObj[type] = retObj[type].map(e => e.map(Number));\n        });\n        retObj.completeSet = retObj.completeSet.map(Number);\n\n        return retObj;\n    }\n\n    /**\n     * Resets an array of ids in the selection set to initial state. It sets the value of every unique id value to\n     * null in the selection set which means they are neither in entry set nor in exit set. If no ids are passed,\n     * then it resets all the ids to null.\n     *\n     * @public\n     *\n     * @param {Array} ids Array of unique ids.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    reset (ids) {\n        const set = this._set;\n        if (ids) {\n            ids.forEach((i) => {\n                set[i] = SELECTION_NULL;\n            });\n        } else {\n            const lockedSel = this._lockedSelection;\n            for (const key in set) {\n                if (!(key in lockedSel)) {\n                    set[key] = SELECTION_NULL;\n                }\n            }\n        }\n        this._resetted = true;\n        return this;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     *\n     * @public\n     *\n     * @return {Array.<string>} Array of unique ids\n     */\n    getEntrySet () {\n        const set = this._set;\n        const addSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_ENTRY && addSet.push(key);\n        }\n\n        return addSet;\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in entry set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old entry set or new entry set\n     */\n    getExistingEntrySet (addSet) {\n        const set = this._set;\n        return addSet.filter(d => set[d] === SELECTION_NEW_ENTRY || set[d] === SELECTION_OLD_ENTRY);\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old exit set or new exit set\n     */\n    getExistingExitSet (removeSet) {\n        const set = this._set;\n        return removeSet.filter(d => set[d] === SELECTION_NEW_EXIT || set[d] === SELECTION_OLD_EXIT);\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldEntry () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_ENTRY && updateSet.push(key);\n        }\n        return updateSet;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldExit () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_EXIT && updateSet.push(key);\n        }\n\n        return updateSet;\n    }\n\n    /**\n     * Gets the array of ids which are in the exit set.\n     *\n     * @public\n     * @return {Array.<string>} Array of unique ids\n     */\n    getExitSet () {\n        const set = this._set;\n        const removeSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_EXIT && removeSet.push(key);\n        }\n        return removeSet;\n    }\n\n    /**\n     * Gets all the ids which are either in exit or entry set.\n     *\n     * @public\n     * @return {Array} Array of unique ids\n     */\n    getCompleteSet () {\n        const set = this._set;\n        const completeSet = [];\n\n        for (const key in set) {\n            completeSet.push(key);\n        }\n\n        return completeSet;\n    }\n\n    getCompleteSetCount () {\n        return this._completeSetCount;\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Swaps the add set and remove set in the selection set.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    toggle () {\n        const set = this._set;\n\n        for (const key in set) {\n            if (set[key] === SELECTION_NEW_ENTRY) {\n                set[key] = SELECTION_NEW_EXIT;\n            } else if (set[key] === SELECTION_NEW_EXIT) {\n                set[key] = SELECTION_NEW_ENTRY;\n            } else if (set[key] === SELECTION_OLD_ENTRY) {\n                set[key] = SELECTION_OLD_EXIT;\n            } else {\n                set[key] = SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n}\n\nexport default SelectionSet;\n","import { clone } from 'muze-utils';\nimport * as SELECTION from '../enums/selection';\n\nexport const initializeSideEffects = (context, sideEffects) => {\n    const sideEffectsMap = context._sideEffects;\n    const config = context.config();\n    sideEffects = sideEffects instanceof Array ? sideEffects : Object.values(sideEffects);\n    sideEffects.forEach((SideEffect) => {\n        const formalName = SideEffect.formalName();\n        const sideEffectInstance = sideEffectsMap[formalName];\n        sideEffectsMap[formalName] = sideEffectInstance || new SideEffect(context);\n        const sideEffectConf = config[formalName];\n        sideEffectConf && sideEffectsMap[formalName].config(sideEffectConf);\n    });\n    return sideEffectsMap;\n};\n\nexport const initializeBehaviouralActions = (context, actions) => {\n    const dispatchableBehaviours = {};\n\n    actions = actions instanceof Array ? actions : Object.values(actions);\n    actions.forEach((Action) => {\n        dispatchableBehaviours[Action.formalName()] = new Action(context);\n    });\n    return dispatchableBehaviours;\n};\n\nexport const initializePhysicalActions = (context, actions) => {\n    const physicalActions = {};\n\n    for (const name in actions) {\n        if (!({}).hasOwnProperty.call(name, actions)) {\n            physicalActions[name] = actions[name](context);\n        }\n    }\n    return physicalActions;\n};\n\nexport const changeSideEffectAvailability = (context, fn, toEnable) => {\n    const sideEffects = context.sideEffects();\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            let change = true;\n            if (fn && fn(key) === false) {\n                change = false;\n            }\n            if (change) {\n                toEnable ? sideEffects[key].enable() : sideEffects[key].disable();\n            }\n        }\n    }\n};\n\nexport const getMergedSet = set => [...new Set([...set[0], ...set[1]])];\n\nexport const getSourceFields = (propagationInf, criteria = {}) => {\n    const sourceIdentifiers = propagationInf.sourceIdentifiers;\n    let sourceFields;\n    if (sourceIdentifiers) {\n        sourceFields = sourceIdentifiers.getSchema().map(d => d.name);\n    } else if (criteria instanceof Array) {\n        sourceFields = criteria[0];\n    } else {\n        sourceFields = Object.keys(criteria || {});\n    }\n    return sourceFields;\n};\n\nconst conditionsMap = {\n    newEntry: [SELECTION.SELECTION_NEW_ENTRY],\n    oldEntry: [SELECTION.SELECTION_OLD_ENTRY],\n    mergedEnter: [SELECTION.SELECTION_NEW_ENTRY, SELECTION.SELECTION_OLD_ENTRY],\n    newExit: [SELECTION.SELECTION_NEW_EXIT],\n    oldExit: [SELECTION.SELECTION_OLD_EXIT],\n    mergedExit: [SELECTION.SELECTION_NEW_EXIT, SELECTION.SELECTION_OLD_EXIT],\n    complete: []\n};\n\nexport const getModelFromSet = (type, model, set) => {\n    if (model) {\n        return model.select((fields, i) =>\n           (conditionsMap[type].some(condition => set[i] === condition)), {\n               saveChild: false\n           });\n    }\n    return null;\n};\n\nexport const getSetInfo = (type, set, config) => {\n    let model = null;\n    const filteredDataModel = config.filteredDataModel;\n    const selectionSet = config.selectionSet;\n    if (!config.propagationData) {\n        if (selectionSet.resetted()) {\n            model = null;\n        } else {\n            model = getModelFromSet(type, config.dataModel, config.selectionSet._set);\n        }\n    } else if (filteredDataModel) {\n        model = type === 'mergedEnter' ? filteredDataModel[0] : filteredDataModel[1];\n    }\n    return {\n        uids: set,\n        length: set.length,\n        model\n    };\n};\n\nexport const getSideEffects = (behaviour, behaviourEffectMap) => {\n    const sideEffects = [];\n    for (const key in behaviourEffectMap) {\n        const behaviours = key.split(',');\n        const found = behaviours.some(d => d === behaviour);\n        if (found) {\n            sideEffects.push({\n                effects: behaviourEffectMap[key],\n                behaviours\n            });\n        }\n    }\n    return sideEffects;\n};\n\nexport const unionSets = (context, behaviours) => {\n    let combinedSet = {};\n    const models = {\n        mergedEnter: null,\n        mergedExit: null\n    };\n    behaviours.forEach((behaviour) => {\n        const entryExitSet = context._entryExitSet[behaviour];\n        if (entryExitSet) {\n            combinedSet = Object.assign(combinedSet, clone(entryExitSet));\n            ['mergedEnter', 'mergedExit'].forEach((type) => {\n                const model = entryExitSet[type].model;\n                let existingModel = models[type];\n                if (!existingModel) {\n                    existingModel = models[type] = model;\n                } else if (`${model.getSchema().map(d => d.name).sort()}` ===\n                    `${existingModel.getSchema().map(d => d.name).sort()}`) {\n                    existingModel = models[type] = model.union(existingModel);\n                } else {\n                    existingModel = model;\n                }\n                combinedSet[type].model = existingModel;\n            });\n        }\n    });\n    return combinedSet;\n};\n","import {\n    mergeRecursive,\n    hasTouch,\n    filterPropagationModel,\n    FieldType,\n    selectElement,\n    isSimpleObject\n} from 'muze-utils';\nimport { ALL_ACTIONS } from './enums/actions';\nimport SelectionSet from './selection-set';\nimport {\n    initializeBehaviouralActions,\n    initializeSideEffects,\n    changeSideEffectAvailability,\n    initializePhysicalActions,\n    unionSets,\n    getSideEffects\n} from './helper';\n\n/**\n * This class is responsible for dispatching behavioural actions and side effects. It also keeps the information of\n * registered physical actions, behavioural actions and side effects. Also, it keeps the map of physical and behavioural\n * actions and behavioural actions and side effects. Whenever any behavioural action is dispatched, it also propagates\n * the rows which got affected to the other datamodels. This class is initialized by {@link VisualUnit} and legend to\n * manage it's interaction.\n *\n * @public\n * @class Firebolt\n * @module Firebolt\n */\nexport default class Firebolt {\n    constructor (context, actions, sideEffects, behaviourEffectMap) {\n        this.context = context;\n        this._sideEffectDefinitions = {};\n        this._sideEffects = {};\n        this._propagationInf = {};\n        this._actions = {\n            behavioural: {},\n            physical: {}\n        };\n        this._selectionSet = {};\n        this._volatileSelectionSet = {};\n        this._propagationFields = {};\n        this._sourceSideEffects = {\n            selectionBox: () => false\n        };\n        this._propagationBehaviourMap = {};\n        this._sourceBehaviours = {};\n        this._actionBehaviourMap = {};\n        this._config = {};\n        this._behaviourEffectMap = {};\n        this._entryExitSet = {};\n        this._actionHistory = {};\n        this._queuedSideEffects = {};\n\n        this.mapSideEffects(behaviourEffectMap);\n        this.registerBehaviouralActions(actions.behavioural);\n        this.registerSideEffects(sideEffects);\n        this.registerPhysicalBehaviouralMap(actions.physicalBehaviouralMap);\n        this.registerPhysicalActions(actions.physical);\n    }\n\n    config (...config) {\n        if (config.length) {\n            this._config = mergeRecursive(this._config, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    mapSideEffects (behEffectMap) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        for (const key in behEffectMap) {\n            if ({}.hasOwnProperty.call(behEffectMap, key)) {\n                const sideEffects = behEffectMap[key] || [];\n                let preventDefaultActions = false;\n                let effectNames;\n                if (isSimpleObject(sideEffects)) {\n                    effectNames = sideEffects.effects;\n                    preventDefaultActions = sideEffects.preventDefaultActions;\n                } else {\n                    effectNames = sideEffects;\n                }\n                !behaviourEffectMap[key] && (behaviourEffectMap[key] = []);\n                this._behaviourEffectMap[key] = [...new Set(preventDefaultActions ? effectNames :\n                    [...behaviourEffectMap[key], ...effectNames])];\n            }\n        }\n        return this;\n    }\n\n    registerBehaviouralActions (actions) {\n        const behaviours = initializeBehaviouralActions(this, actions);\n        this.prepareSelectionSets(behaviours);\n        Object.assign(this._actions.behavioural, behaviours);\n        return this;\n    }\n\n    prepareSelectionSets () {\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        this.initializeSideEffects();\n        return this;\n    }\n\n    applySideEffects (sideEffects, selectionSet, payload) {\n        const sideEffectStore = this.sideEffects();\n        const actionHistory = this._actionHistory;\n        const queuedSideEffects = this._queuedSideEffects;\n        sideEffects.forEach((sideEffect) => {\n            let options;\n            let name;\n            const effects = sideEffect.effects;\n            const behaviours = sideEffect.behaviours;\n            const combinedSet = unionSets(this, behaviours, selectionSet);\n            effects.forEach((effect) => {\n                if (typeof effect === 'object') {\n                    name = effect.name;\n                    options = effect.options;\n                } else {\n                    name = effect;\n                }\n\n                const sideEffectInstance = sideEffectStore[name];\n                if (sideEffectInstance.isEnabled()) {\n                    if (!sideEffectInstance.constructor.mutates() &&\n                        Object.values(actionHistory).some(d => d.isMutableAction)) {\n                        queuedSideEffects[`${name}-${behaviours.join()}`] = {\n                            name,\n                            params: [combinedSet, payload, options]\n                        };\n                    } else {\n                        this.dispatchSideEffect(name, combinedSet, payload, options);\n                    }\n                }\n            });\n        });\n        return this;\n    }\n\n    dispatchSideEffect (name, selectionSet, payload, options = {}) {\n        const sideEffectStore = this.sideEffects();\n        const sideEffect = sideEffectStore[name];\n        let disable = false;\n        if (options.filter && options.filter(sideEffect)) {\n            disable = true;\n        }\n        !disable && sideEffectStore[name].apply(selectionSet, payload, options);\n    }\n\n    registerPropagationBehaviourMap (map) {\n        this._propagationBehaviourMap = Object.assign(this._propagationBehaviourMap, map || {});\n        return this;\n    }\n\n    dispatchBehaviour (behaviour, payload, propagationInfo = {}) {\n        const propagate = propagationInfo.propagate !== undefined ? propagationInfo.propagate : true;\n        const behaviouralActions = this._actions.behavioural;\n        const action = behaviouralActions[behaviour];\n        const behaviourEffectMap = this._behaviourEffectMap;\n        const sideEffects = getSideEffects(behaviour, behaviourEffectMap);\n        this._propagationInf = propagationInfo;\n\n        if (action) {\n            const selectionSet = action.dispatch(payload);\n            const propagationSelectionSet = this.getPropagationSelectionSet(selectionSet);\n            this._entryExitSet[behaviour] = propagationSelectionSet;\n            const shouldApplySideEffects = this.shouldApplySideEffects(propagate);\n\n            if (propagate) {\n                this.propagate(behaviour, payload, selectionSet.find(d => d.sourceSelectionSet), sideEffects);\n            }\n            if (shouldApplySideEffects) {\n                const applicableSideEffects = this.getApplicableSideEffects(sideEffects, payload, propagationInfo);\n                this.applySideEffects(applicableSideEffects, propagationSelectionSet, payload);\n            }\n        }\n\n        return this;\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet.find(d => !d.sourceSelectionSet);\n    }\n\n    shouldApplySideEffects () {\n        return true;\n    }\n\n    changeBehaviourStateOnPropagation (behaviour, value) {\n        if (value instanceof Function) {\n            this._sourceBehaviours[behaviour] = value;\n        } else {\n            this._sourceBehaviours[behaviour] = () => value;\n        }\n        return this;\n    }\n\n    changeSideEffectStateOnPropagation (sideEffect, value) {\n        if (value instanceof Function) {\n            this._sourceSideEffects[sideEffect] = value;\n        } else {\n            this._sourceSideEffects[sideEffect] = () => value;\n        }\n    }\n\n    propagate () {\n        return this;\n    }\n\n    sideEffects (...sideEffects) {\n        if (sideEffects.length) {\n            this._sideEffects = sideEffects[0];\n            return this;\n        }\n        return this._sideEffects;\n    }\n\n    enableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, true);\n        return this;\n    }\n\n    disableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, false);\n        return this;\n    }\n\n    dissociateBehaviour (behaviour, physicalAction) {\n        const actionBehaviourMap = this._actionBehaviourMap;\n        for (const key in actionBehaviourMap) {\n            if (key === physicalAction) {\n                const behaviourMap = actionBehaviourMap[key];\n                behaviourMap.behaviours = behaviourMap.behaviours.filter(d => d !== behaviour);\n                this.mapActionsAndBehaviour(key);\n            }\n        }\n\n        return this;\n    }\n\n    dissociateSideEffect (sideEffect, behaviour) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        behaviourEffectMap[behaviour] = behaviourEffectMap[behaviour].filter(d => (d.name || d) !== sideEffect);\n        return this;\n    }\n\n    getApplicableSideEffects (sideEffects) {\n        return sideEffects;\n    }\n\n    attachPropagationListener (dataModel) {\n        dataModel.unsubscribe('propagation');\n        dataModel.on('propagation', this.onDataModelPropagation());\n        return this;\n    }\n\n    onDataModelPropagation () {\n        return (propValue) => {\n            const payload = propValue.payload;\n            const action = payload.action;\n\n            this.dispatchBehaviour(action, payload, {\n                propagate: false\n            });\n        };\n    }\n\n    createSelectionSet (uniqueIds, behaviouralActions) {\n        const behaviours = behaviouralActions || this._actions.behavioural;\n        const selectionSet = this._selectionSet;\n        const volatileSelectionSet = this._volatileSelectionSet;\n\n        for (const key in behaviours) {\n            if ({}.hasOwnProperty.call(behaviours, key)) {\n                selectionSet[key] = new SelectionSet(uniqueIds);\n                volatileSelectionSet[key] = new SelectionSet(uniqueIds, true);\n            }\n        }\n        this._volatileSelectionSet = volatileSelectionSet;\n        this.selectionSet(selectionSet);\n        return this;\n    }\n\n    selectionSet (...selectionSet) {\n        if (selectionSet.length) {\n            this._selectionSet = selectionSet[0];\n            return this;\n        }\n        return this._selectionSet;\n    }\n\n    initializeSideEffects () {\n        const sideEffectDefinitions = this._sideEffectDefinitions;\n        this.sideEffects(initializeSideEffects(this, sideEffectDefinitions));\n        return this;\n    }\n\n    registerPhysicalActions (actions) {\n        const initedActions = initializePhysicalActions(this, actions);\n        Object.assign(this._actions.physical, initedActions);\n        return this;\n    }\n\n    /**\n     * Allows to propagate the datamodel with only the supplied fields. When propagation is done, then the fields\n     * which are supplied for the specified behavioural action is propagated.\n     *\n     * @public\n     *\n     * @param {string} action Name of behavioural action. If '*' is specified, then for all behavioural actions it is\n     * applied.\n     * @param {Array} fields Array of field names which will be propagated.\n     * @param {boolean} append If true, then it is appended to the existing propagation data model fields else only\n     * those fields are projected from propagation data model and propagated.\n     *\n     * @return {Firebolt} Instance of firebolt\n     */\n    propagateWith (action, fields, append = false) {\n        const behaviouralActions = this._actions.behavioural;\n        if (fields.length) {\n            if (action === ALL_ACTIONS) {\n                for (const key in behaviouralActions) {\n                    this._propagationFields[key] = {\n                        fields,\n                        append\n                    };\n                }\n            } else {\n                this._propagationFields[action] = {\n                    fields,\n                    append\n                };\n            }\n            return this;\n        }\n        return this._propagationFields;\n    }\n\n    /**\n     * Map actions and behaviours\n     * @return {Firebolt} Firebolt instance\n     */\n    mapActionsAndBehaviour (phyAction) {\n        const initedPhysicalActions = this._actions.physical;\n        const map = this._actionBehaviourMap;\n\n        for (const action in map) {\n            if (!({}).hasOwnProperty.call(action, map) && action === (phyAction || action)) {\n                let target;\n                const mapObj = map[action];\n                target = mapObj.target;\n                const touch = mapObj.touch;\n                if (!target) {\n                    target = this.context.getDefaultTargetContainer();\n                }\n                const bind = hasTouch() ? touch === true || touch === undefined : !touch;\n                bind && this.bindActionWithBehaviour(initedPhysicalActions[action],\n                    target, mapObj.behaviours);\n            }\n        }\n        return this;\n    }\n\n    registerPhysicalBehaviouralMap (map) {\n        this._actionBehaviourMap = mergeRecursive(this._actionBehaviourMap, map);\n        return this;\n    }\n\n    /**\n     * Binds a target element with an action.\n     *\n     * @param {Function} action Action method\n     * @param {string} target Class name of element\n     * @param {Array} behaviourList Array of behaviours\n     * @return {FireBolt} Instance of firebolt\n     */\n    bindActionWithBehaviour (action, targets, behaviourList) {\n        if (typeof (targets) === 'string') {\n            targets = [targets];\n        }\n        targets.forEach((target) => {\n            const mount = this.context.mount();\n            const nodes = target.node instanceof Function ? target : selectElement(mount).selectAll(target);\n            if (!nodes.empty()) {\n                if (nodes instanceof Array) {\n                    nodes.forEach((node) => {\n                        action(selectElement(node), behaviourList);\n                    });\n                } else {\n                    action(nodes, behaviourList);\n                }\n            }\n        });\n        return this;\n    }\n\n    getPropagationInf () {\n        return this._propagationInf;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.context;\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all');\n        const xFields = context.fields().x || [];\n        const yFields = context.fields().y || [];\n        const xMeasures = xFields.every(field => field.type() === FieldType.MEASURE);\n        const yMeasures = yFields.every(field => field.type() === FieldType.MEASURE);\n        return {\n            model: filteredDataModel,\n            uids: criteria === null ? null : (propagationInf.data ? filterPropagationModel(this.getFullData(),\n                propagationInf.data[0], xMeasures && yMeasures).getData().uids : filteredDataModel[0].getData().uids)\n        };\n    }\n\n    getSelectionSets (action) {\n        const sourceId = this.context.id();\n        const propagationInf = this._propagationInf || {};\n        const propagationSource = propagationInf.sourceId;\n        let applicableSelectionSets = [];\n        if (propagationSource !== sourceId) {\n            applicableSelectionSets = [this._volatileSelectionSet[action]];\n        }\n\n        if (propagationSource) {\n            applicableSelectionSets.push(this.selectionSet()[action]);\n        }\n        return applicableSelectionSets;\n    }\n\n    getFullData () {\n        return this.context.data();\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Returns the entry and exit set information of the specified behavioural action.\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of behavioural action.\n     *\n     * @return {Object} Entry exit set information.\n     */\n    getEntryExitSet (behaviour) {\n        return this._entryExitSet[behaviour];\n    }\n}\n","import { getSetInfo, getMergedSet, getSourceFields } from '../../helper';\n\n/**\n * This is the base class has all the common functionalities needed for all behavioural actions. Any other behavioural\n * action needs to extend this class.\n *\n * @public\n * @class GenericBehaviour\n * @module GenericBehaviour\n */\nexport default class GenericBehaviour {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n    }\n\n    /**\n     * Returns entry and exit set information. This method is called by firebolt when ```dispatchBehaviour``` is called\n     * dynamically or when any physical action is triggered on the chart.\n     *\n     * @param {Object} payload Payload information.\n     * @param {Object|Array} payload.criteria Identifiers of data interacted with.\n     *\n     * @return {Array} Entry and exit set information.\n     */\n    dispatch (payload) {\n        const criteria = payload.criteria;\n        const firebolt = this.firebolt;\n        const formalName = this.constructor.formalName();\n        const selectionSets = firebolt.getSelectionSets(formalName);\n        const {\n            model: filteredDataModel,\n            uids\n        } = this.firebolt.getAddSetFromCriteria(criteria, this.firebolt.getPropagationInf());\n        const entryExitSets = selectionSets.map((selectionSet) => {\n            this.setSelectionSet(uids, selectionSet);\n            return this.getEntryExitSet(selectionSet, filteredDataModel, payload);\n        });\n\n        return entryExitSets;\n    }\n\n    /**\n     * Updates the selection set by adding uids to the instance of {@link SelectionSet} or removing them.\n     * {@link SelectionSet} keeps the information of which rows are in the entry set and exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of row ids which got affected during interaction.\n     * @param {SelectionSet} selectionSet Instance of selection set.\n     *\n     * @return {GenericBehaviour} Instance of behaviour.\n     */\n    setSelectionSet () {\n        return this;\n    }\n\n    getEntryExitSet (selectionSet, filteredDataModel, payload) {\n        const {\n            entrySet,\n            exitSet,\n            completeSet\n        } = selectionSet.getSets();\n        const propagationInf = this.firebolt.getPropagationInf();\n        const dataModel = this.firebolt.getFullData();\n        const setConfig = {\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            dataModel,\n            filteredDataModel,\n            propagationData: propagationInf.data,\n            selectionSet\n        };\n\n        return {\n            entrySet: [getSetInfo('oldEntry', entrySet[0], setConfig),\n                getSetInfo('newEntry', entrySet[1], setConfig)],\n            exitSet: [getSetInfo('oldEntry', exitSet[0], setConfig),\n                getSetInfo('newExit', exitSet[1], setConfig)],\n            mergedEnter: getSetInfo('mergedEnter', getMergedSet(entrySet), setConfig),\n            mergedExit: getSetInfo('mergedExit', getMergedSet(exitSet), setConfig),\n            completeSet: getSetInfo('complete', completeSet, setConfig),\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            fields: getSourceFields(propagationInf, payload.criteria),\n            sourceSelectionSet: selectionSet._volatile === true\n        };\n    }\n\n    static mutates () {\n        return false;\n    }\n\n    enable () {\n        this._enabled = true;\n    }\n\n    disable () {\n        this._enabled = false;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n}\n\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class VolatileBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n                // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                    || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            selectionSet.updateExit();\n            const { entrySet } = selectionSet.getSets();\n            selectionSet.reset(getMergedSet(entrySet));\n            selectionSet.add(addSet);\n            selectionSet.update(existingAddSet);\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n    }\n}\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n","import VolatileBehaviour from './volatile';\nimport { HIGHLIGHT } from '../../enums/behaviours';\n\nexport default class HighlightBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return HIGHLIGHT;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport * as BEHAVIOURNAMES from '../../enums/behaviours';\n\n/**\n * This is the behaviour for brushing a region on the chart. It accepts a payload\n * which contains the x and y range of the data and other configuration. It will then\n * create a selection box from the range and select the points which fall within the range.\n */\nexport default class BrushBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return BEHAVIOURNAMES.BRUSH;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport { FILTER } from '../../enums/behaviours';\n\nexport default class FilterBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return FILTER;\n    }\n\n    static mutates () {\n        return true;\n    }\n}\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class PersistentBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            const propagationInf = this.firebolt.getPropagationInf();\n            // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            if (propagationInf.propagate === false) {\n                selectionSet.updateExit();\n                const { entrySet } = selectionSet.getSets();\n                selectionSet.reset(getMergedSet(entrySet));\n                selectionSet.add(addSet);\n                selectionSet.update(existingAddSet);\n            } else {\n                // existing add set\n                if (existingAddSet.length) {\n                    selectionSet.updateExit();\n                    selectionSet.remove(existingAddSet);\n                } else {\n                    selectionSet.updateEntry();\n                    selectionSet.add(addSet);\n                }\n                const { exitSet } = selectionSet.getSets();\n                const mergedExitSet = getMergedSet(exitSet);\n                const completeSetCount = selectionSet.getCompleteSet().length;\n                if (mergedExitSet.length === completeSetCount) {\n                    selectionSet.reset();\n                }\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n\n        return this;\n    }\n}\n","import PersistentBehaviour from './persistent';\nimport { SELECT } from '../../enums/behaviours';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return SELECT;\n    }\n}\n\n","import { DimensionSubtype, MeasureSubtype } from 'muze-utils';\n/**\n * Gets the drag action configuration\n * @param {VisualUnit} instance instance of visual unit\n * @param {Object} config x y positions\n * @return {Object} Payload of behaviour\n*/\n/* istanbul ignore next */ const getDragActionConfig = (sourceInfo, config, fieldsConfig) => {\n    if (!(sourceInfo.axes.x || sourceInfo.axes.y)) {\n        return {\n            criteria: null\n        };\n    }\n\n    const axes = sourceInfo.axes;\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const axisFields = sourceInfo.fields;\n    const xField = axisFields.x[0].getMembers()[0];\n    const yField = axisFields.y[0].getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n    const dimensions = {};\n    const stPos = config.startPos;\n    const endPos = config.endPos;\n\n    if (stPos.x === endPos.x && stPos.y === endPos.y) {\n        return {\n            criteria: null\n        };\n    }\n\n    const dragDim = xFieldType === MeasureSubtype.CONTINUOUS ? (yFieldType === MeasureSubtype.CONTINUOUS ?\n        ['x', 'y'] : ['y']) : ['x'];\n    const criteria = {};\n    const isXDimension = xFieldType === DimensionSubtype.CATEGORICAL;\n    const isYDimension = yFieldType === DimensionSubtype.CATEGORICAL;\n    const xRange = xAxis.constructor.type() === 'band' ? xAxis.scale().invertExtent(stPos.x, endPos.x) :\n        xAxis.invert(stPos.x, endPos.x);\n    const yRange = yAxis.constructor.type() === 'band' ? yAxis.scale().invertExtent(stPos.y, endPos.y) :\n        yAxis.invert(stPos.y, endPos.y);\n    const selectedDomains = {\n        x: stPos.x === endPos.x ? [] : (isXDimension ? xRange : xRange.sort((a, b) => a - b)),\n        y: stPos.y === endPos.y ? [] : (isYDimension ? yRange : yRange.sort((a, b) => a - b))\n    };\n    const rangeObj = {};\n\n    if (dragDim.length === 2) {\n        rangeObj[xField] = selectedDomains.x;\n        rangeObj[yField] = selectedDomains.y;\n        if (xField === yField) {\n            const xdom = selectedDomains.x;\n            const ydom = selectedDomains.y;\n            const min = xdom[0] > ydom[0] ? ydom : xdom;\n            const max = min === ydom ? xdom : ydom;\n            if (min[1] < max[0]) {\n                rangeObj[xField] = [];\n            } else {\n                rangeObj[xField] = [max[0], min[1] < max[1] ? min[1] : max[1]];\n            }\n            dimensions.x = [stPos.x, endPos.x];\n            dimensions.y = [stPos.y, endPos.y];\n        }\n    } else {\n        criteria[dragDim[0]] = selectedDomains[dragDim[0]] || [];\n\n        if (dragDim[0] === 'x') {\n            rangeObj[xField] = criteria.x;\n            if (xFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.x = (config.snap && stPos.x !== endPos.x) ? xAxis.getNearestRange(stPos.x, endPos.x) :\n                    [stPos.x, endPos.x];\n            }\n        } else {\n            rangeObj[yField] = criteria.y;\n            if (yFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.y = (config.snap && stPos.y !== endPos.y) ? yAxis.getNearestRange(stPos.y, endPos.y) :\n                    [stPos.y, endPos.y];\n            }\n        }\n    }\n\n    return {\n        criteria: rangeObj,\n        dimensions\n    };\n};\n\nexport default getDragActionConfig;\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './drag-action-config';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const attachDragEvent = (targetEl, behaviours, firebolt, touch) => {\n    let startPos = {};\n    let endPos = {};\n    let drawingInf;\n\n    const d3Drag = getD3Drag();\n    let touchStart;\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n        drawingInf = firebolt.context.getDrawingContext();\n        touchStart = new Date().getTime();\n    }).on('drag', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        if (touch && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos\n        }, firebolt.context.data().getFieldsConfig());\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }).on('end', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        const duration = new Date().getTime() - touchStart;\n\n        if (touch && duration > 100 && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos,\n            snap: true\n        }, firebolt.context.data().getFieldsConfig());\n        payload.dragEnd = true;\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }));\n};\n\n","import { getClientPoint, getEvent } from 'muze-utils';\nimport { CONSOLIDATED, FRAGMENTED } from '../../enums/constants';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} instance instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const context = firebolt.context;\n        const tooltipConf = context.config().interaction.tooltip;\n        const mode = tooltipConf.mode;\n        const pos = getClientPoint(context.getDrawingContext().svgContainer, event);\n        const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n            getAllPoints: mode === CONSOLIDATED || mode === FRAGMENTED,\n            data: args,\n            event\n        });\n        const payload = {\n            criteria: nearestPoint ? nearestPoint.id : null,\n            showInPosition: nearestPoint.showInPosition,\n            target: nearestPoint.target,\n            position: pos,\n            mode\n        };\n\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                            criteria: null\n                        }));\n                    });\n};\n\nexport default hover;\n","export const CLASSPREFIX = 'muze';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\n\n","import { getClientPoint } from 'muze-utils';\n\nexport const generatePayloadFromEvent = function (args, event, firebolt) {\n    const context = firebolt.context;\n    const pos = getClientPoint(context.getDrawingContext().svgContainer, event.touches ? event.touches[0] : event);\n    const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n        data: args,\n        event\n    });\n    return {\n        criteria: nearestPoint ? nearestPoint.id : null,\n        showInPosition: nearestPoint.showInPosition,\n        target: nearestPoint.target,\n        position: pos\n    };\n};\n","import { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport { longtouch } from './longtouch';\nimport { touchdrag } from './touch-drag';\nimport * as ACTIONNAMES from '../../enums/actions';\nimport click from './click';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click,\n    [ACTIONNAMES.LONGTOUCH]: longtouch,\n    [ACTIONNAMES.TOUCHDRAG]: touchdrag\n};\n\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt);\n};\n\nexport default drag;\n","/* global setTimeout */\nimport { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nexport const longtouch = firebolt => (targetEl, behaviours) => {\n    let event;\n    let touchEnd;\n    const dispatchBehaviour = function (args) {\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    touchEnd = false;\n    event = getEvent();\n    targetEl.on('touchstart', (args) => {\n        event = getEvent();\n        touchEnd = false;\n        setTimeout(() => {\n            if (!touchEnd) {\n                dispatchBehaviour(args);\n            } else {\n                behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                    criteria: null\n                }));\n            }\n        }, 100);\n    }).on('touchend', () => {\n        touchEnd = true;\n    });\n};\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const touchdrag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt, true);\n};\n\n","import GenericSideEffect from './generic-sideeffect';\n\nexport default GenericSideEffect;\n","import { mergeRecursive, getUniqueId } from 'muze-utils';\n\n/**\n * This is the base class of all side effects. It contains all common methods like setting configuration, disabling,\n * enabling side effect, etc. Every new side effect has to inherit this class or {@link SpawnableSideEffect} or\n * {@link SurrogateSideEffect} class. All side effects are initialized by firebolt. The instance of firebolt is\n * passed on initialization. The firebolt instance contains ```context``` which is the instance of visual unit with\n * which the firebolt is attached.\n *\n * @public\n * @class\n * @module GenericSideEffect\n */\nexport default class GenericSideEffect {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n        this._strategy = 'default';\n        this._config = {};\n        this._id = getUniqueId();\n        this._strategies = {};\n        this.config(this.constructor.defaultConfig());\n    }\n\n    /**\n     * Returns the default configuration of the side effect.\n     *\n     * @public\n     * @return {Object} Default configuration of side effect.\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the formal name of a side effect. This method must be implemented by all side effects which changes\n     * or adds any element in the visualization.\n     *\n     * @return {string} Formal name of side effect.\n     */\n    static formalName () {\n        return 'generic';\n    }\n\n    static target () {\n        return 'all';\n    }\n\n    /**\n     * Returns true if the side effects mutates the data of chart.\n     *\n     * @public\n     *\n     * @return {boolean} If the side effect mutates the data of chart.\n     */\n    static mutates () {\n        return false;\n    }\n\n    /**\n     * Sets or gets the configuration of side effect.\n     *\n     * When setter,\n     * @param {Object} config Configuration of side effect.\n     * @return {GenericSideEffect} Side effect instance.\n     *\n     * When getter,\n     * @return {Object} Side effect configuration.\n     */\n    config (...params) {\n        if (params.length) {\n            this._config = mergeRecursive(this._config, params[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    disable () {\n        this._enabled = false;\n        return this;\n    }\n\n    enable () {\n        this._enabled = true;\n        return this;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n\n    /**\n     * Applies the interaction effect on the chart. This is where the implemntation of the side effect is defined.\n     *\n     * @param {Object} selectionSet Contains the entry and exit set of data which got affected during interaction.\n     * @param {Object} selectionSet.mergedEnter Combined previous entry and new entry set.\n     * @param {DataModel} selectionSet.mergedEnter.model Instance of data model containing all rows which got\n     * affected during interaction.\n     * @param {Array} selectionSet.mergedEnter.uids Ids of all rows which were affected during interaction.\n     * @param {Object} selectionSet.mergedExit Combined previous exit and new exit set.\n     * @param {DataModel} selectionSet.mergedExit.model Instance of data model containing rows which were not affected\n     * during interaction.\n     * @param {Array} selectionSet.mergedExit.uids Ids of all rows which were not affected during interaction.\n     * @param {Object} selectionSet.entrySet Entry set information.\n     * @param {Array} selectionSet.entrySet[0].uids All row ids which got affected during previous interaction.\n     * @param {Array} selectionSet.entrySet[1].uids All row ids which got affected during current interaction.\n     * @param {Array} selectionSet.exitSet[0].uids All row ids which were not affected during previous interaction.\n     * @param {Array} selectionSet.exitSet[1].uids All row ids which were not affected during current interaction.\n     * @param {Object} payload Payload information of the behavioural action on trigger of which this side effect\n     * is applied.\n     * @param {Object} options Optional information for side effect like strategy, etc.\n     */\n    apply () {\n        return this;\n    }\n\n    /**\n     * Adds a new strategy method for this side effect. The strategy method is implemented by side effect class.\n     *\n     * @param {string} name Name of the strategy.\n     * @param {Function} fn Strategy method.\n     *\n     * @return {GenericSideEffect} Instance of side effect.\n     */\n    addStrategy (name, fn) {\n        this._strategies[name] = fn;\n        return this;\n    }\n}\n","import GenericSideEffect from './generic';\n\n/**\n * This class is inherited by all side effects which changes the look of any existing elements in the visualization.\n * For example, if a side effect wants to change the color of bar plots, then it is a surrogate side effect.\n *\n * To use this,\n * ```\n *      const SurrogateSideEffect = muze.SideEffects.standards.SurrogateSideEffect;\n *\n *      class BarColorChanger extends SurrogateSideEffect {\n *          static formalName () {\n *              return 'colorChanger';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n *\n * @module SurrogateSideEffect\n * @class\n * @extends GenericSideEffect\n */\nexport default class SurrogateSideEffect extends GenericSideEffect {\n    /**\n     * Applies or removes interaction styles from plot elements. An array of row ids needs to be passed\n     * which identifies the plot elements and applies styles to them.\n     *\n     * To apply the interaction style,\n     * ```\n     *      const entryRowIds = entrySet[0].uids;\n     *      const interactionStyle = [{\n     *          type: 'fill',\n     *          intensity: [0, 0, 15, 0] // hsla configuration\n     *      }];\n     *\n     *      this.applyInteractionStyle(entryRowIds, interactionStyle, 'brighten', true);\n     * ```\n     * @public\n     * @param {Array} set Array of row ids.\n     * @param {Array} config Style configuration.\n     * @param {Object} config[0] fill or stroke configuration.\n     * @param {string} config[0].type Type of style - fill or stroke.\n     * @param {Array} config[0].intensity hsla configuration.\n     * @param {string} interactionType Type of interaction. This is needed for storing the styles for\n     * each type of interaction in the plot elements.\n     * @param {boolean} apply Whether to apply or remove the interaction style.\n     *\n     * @return {SurrogateSideEffect} Instance of surrogate side effect.\n     */\n    applyInteractionStyle (set, config = {}, interactionType, apply) {\n        const layers = this.firebolt.context.layers();\n        layers.forEach(layer => layer.config().interactive !== false &&\n            layer.applyInteractionStyle(interactionType, set.uids, apply));\n        return this;\n    }\n}\n","import { makeElement } from 'muze-utils';\n\nimport GenericSideEffect from './generic';\n\n/**\n * Any side effect which will add any new element to the chart like drawing a rectangular box or any annotation over\n * the chart needs to inherit this class. This class has methods which returns the container where the dom elements\n * needs to be created.\n *\n * To use this,\n * ```\n *      const SpawnableSideEffect = muze.SideEffects.standards.SpawnableSideEffect;\n *\n *      class SelectionBox extends SpawnableSideEffect {\n *          static formalName () {\n *              return 'selectionBox';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n * @class\n * @extends GenericSideEffect\n * @module SpawnableSideEffect\n */\nexport default class SpawnableSideEffect extends GenericSideEffect {\n    /**\n     * Creates a html or svg element in the container.\n     *\n     * @public\n     * @param {SVGElement|HTMLElement} container Container where the dom element will be rendered.\n     * @param {string} elemType Type of dom element.\n     * @param {Array} data Array of objects with which the dom elements will be binded.\n     * @param {string} className class name of the element.\n     *\n     * @return {Selection} D3 Selection of the element.\n     */\n    createElement (container, elemType, data, className, callbacks) {\n        return makeElement(container, elemType, data, className, callbacks);\n    }\n\n    /**\n     * Returns the drawing information for side effect like svg container, dimensions of the visual unit.\n     *\n     * @public\n     * @return {Object} Drawing information for side effect.\n     * ```\n     *      sideEffectGroup: // svg container where the side effect needs to be appended.\n     *      svgContainer: // svg container of the {@link VisualUnit}.\n     *      htmlContainer: // html div container of the {@link VisualUnit}.\n     *      width: // Width of the {@link VisualUnit}\n     *      height: // Height of the {@link VisualUnit}\n     * ```\n     */\n    drawingContext (...drawingContext) {\n        if (drawingContext.length) {\n            this._drawingContext = drawingContext[0];\n            return this;\n        }\n        return this._drawingContext();\n    }\n\n    show () {\n        return this;\n    }\n\n    hide () {\n        return this;\n    }\n}\n","import { selectElement } from 'muze-utils';\n\nexport const getBoxDimensionsFromPayload = (payload, axes, axisFields) => {\n    let x1;\n    let x2;\n    let y1;\n    let y2;\n    let xRange;\n    let yRange;\n    let direction;\n    const criteria = payload.criteria;\n    const dimensions = payload.dimensions || {};\n    const xDim = dimensions.x;\n    const yDim = dimensions.y;\n\n    if (criteria === null) {\n        return null;\n    }\n\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const xLinear = xAxis.constructor.type() === 'linear';\n    const yLinear = yAxis.constructor.type() === 'linear';\n    const xField = `${axisFields.x[0]}`;\n    const yField = `${axisFields.y[0]}`;\n    const xCriteria = criteria[xField];\n    const yCriteria = criteria[yField];\n\n    if (xCriteria && xCriteria[0] instanceof Array) {\n        xRange = xCriteria[0];\n        yRange = xCriteria[1];\n    } else {\n        xRange = xCriteria || [];\n        yRange = yCriteria || [];\n    }\n    direction = xCriteria && yCriteria ? 'both' : (xCriteria ? 'vertical' : 'horizontal');\n    if (xRange && xRange.length) {\n        if ((yAxis.constructor.type() === 'band' && xLinear)) {\n            x1 = x2 = undefined;\n            direction = 'horizontal';\n        } else {\n            const domain = xAxis.domain();\n            const bandScale = xAxis.constructor.type() === 'band';\n            let x1Val;\n            let x2Val;\n            if (bandScale) {\n                let x1DomainIndex = domain.indexOf(xRange[0]);\n                let x2DomainIndex = domain.indexOf(xRange[xRange.length - 1]);\n                [x1DomainIndex, x2DomainIndex] = [x1DomainIndex, x2DomainIndex].sort((a, b) => a - b);\n                x1Val = domain[x1DomainIndex];\n                x2Val = domain[x2DomainIndex];\n            } else {\n                x1Val = xRange[0];\n                x2Val = xRange[xRange.length - 1];\n            }\n            x1 = xAxis.getScaleValue(x1Val);\n            x2 = xAxis.getScaleValue(x2Val);\n            x2 += bandScale ? xAxis.getUnitWidth() : 0;\n        }\n    } else {\n        x1 = x2 = undefined;\n    }\n    if (yRange && yRange.length) {\n        if ((xAxis.constructor.type() === 'band' && yLinear)) {\n            y1 = y2 = undefined;\n            direction = 'vertical';\n        } else {\n            const domain = yAxis.domain();\n            const bandScale = yAxis.constructor.type() === 'band';\n            let y1Val;\n            let y2Val;\n            if (bandScale) {\n                let y1DomainIndex = domain.indexOf(yRange[0]);\n                let y2DomainIndex = domain.indexOf(yRange[yRange.length - 1]);\n                [y1DomainIndex, y2DomainIndex] = [y1DomainIndex, y2DomainIndex].sort(((a, b) => b - a));\n                y1Val = domain[y1DomainIndex];\n                y2Val = domain[y2DomainIndex];\n            } else {\n                y1Val = yRange[0];\n                y2Val = yRange[yRange.length - 1];\n            }\n            y1 = yAxis.getScaleValue(y1Val);\n            y2 = yAxis.getScaleValue(y2Val);\n            y2 += yAxis.constructor.type() === 'band' ? yAxis.getUnitWidth() : 0;\n        }\n    } else {\n        y1 = y2 = undefined;\n    }\n\n    if ((yLinear && xLinear) || !payload.dragEnd) {\n        if (xDim) {\n            [x1, x2] = xDim;\n        }\n        if (yDim) {\n            [y1, y2] = yDim;\n        }\n    }\n\n    return {\n        dimension: {\n            x1,\n            x2,\n            y1,\n            y2\n        },\n        direction\n    };\n};\n\nexport const changeVisibility = (context, sideEffectGroup, visible) => {\n    const config = context.config();\n    const className = config.defClassName;\n    const classPrefix = config.classPrefix;\n    selectElement(sideEffectGroup).selectAll(`.${classPrefix}-${className}`)\n                    .style('display', visible ? 'block' : 'none');\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    isValidValue\n} from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport './styles.scss';\nimport SpawnableSideEffect from '../spawnable';\nimport { selectionBoxDrag } from '../../actions/physical/selection-box-drag';\nimport { getBoxDimensionsFromPayload, changeVisibility } from './helper';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\nclass SelectionBox extends SpawnableSideEffect {\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            defClassName: 'selection-box-group',\n            className: '',\n            classPrefix: CLASSPREFIX,\n            box: {\n                defClassName: 'selection-box',\n                className: ''\n            },\n            transition: {\n                duration: 200\n            }\n        };\n    }\n\n    static formalName () {\n        return 'selectionBox';\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     * @param {Object} dimension Dimensions of the selection box.\n     * @param {number} dimension.x1 Starting x position\n     * @param {number} dimension.x2 Ending x position\n     * @param {number} dimension.y1 Starting y position\n     * @param {number} dimension.y2 Ending y position\n     * @param {Object} conf Configuration needed to draw the selection box\n     * @param {number} unitWidth Width of the visual unit.\n     * @param {number} unitHeight Height of the visual unit.\n     */\n    apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const config = this._config;\n        const boxConf = config.box;\n        const firebolt = this.firebolt;\n        const drawingInf = this.drawingContext();\n        const mountPoint = drawingInf.sideEffectGroup;\n        const unitWidth = drawingInf.width;\n        const unitHeight = drawingInf.height;\n        const classPrefix = config.classPrefix;\n        const selectionGroupClassName = config.defClassName;\n\n        if (payload.criteria === null) {\n            this.hide(drawingInf);\n            return this;\n        }\n\n        const sourceInf = firebolt.context.getSourceInfo();\n        const { dimension, direction } = getBoxDimensionsFromPayload(payload, sourceInf.axes,\n            sourceInf.fields);\n        const transition = payload.dragEnd && config.transition;\n\n        if (direction === 'both' || direction === 'vertical') {\n            x = Math.min(dimension.x1, dimension.x2);\n            width = Math.abs(dimension.x2 - dimension.x1);\n        } else {\n            x = 0;\n            width = unitWidth;\n        }\n        if (direction === 'both' || direction === 'horizontal') {\n            y = Math.min(dimension.y1, dimension.y2);\n            height = Math.abs(dimension.y2 - dimension.y1);\n        } else {\n            height = unitHeight;\n            y = 0;\n        }\n        this.show(drawingInf);\n        // Create the data array for drawing the rectangle\n        const points = [\n            {\n                x,\n                y,\n                width,\n                height\n            }\n        ];\n        // Create the container group for selection box.\n        const selectionGroup = makeElement(selectElement(mountPoint), 'g', [1],\n            `.${classPrefix}-${selectionGroupClassName}`);\n        const sideEffect = this;\n        const selection = selectionGroup.selectAll('rect').data(points);\n        const selectionBox = selection.enter().append('rect')\n                        .each(function () {\n                            selectionBoxDrag(firebolt)(selectElement(this), ['brush'], sideEffect);\n                        })\n                        .merge(selection)\n                        .each(function (attrs) {\n                            let element = selectElement(this);\n                            transition && (element = element.transition().duration(transition.duration));\n                            for (const key in attrs) {\n                                if ({}.hasOwnProperty.call(attrs, key)) {\n                                    isValidValue(attrs[key]) && element.attr(key, attrs[key]);\n                                }\n                            }\n                        });\n        // Get the qualified class name for selection box rectangle\n        const boxClassName = getQualifiedClassName(boxConf.defClassName, this._id, classPrefix);\n        selectionBox.classed(boxClassName.join(' '), true);\n        selectionBox.classed(boxConf.className, true);\n\n        return this;\n    }\n\n    hide (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, false);\n    }\n\n    show (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, true);\n    }\n}\n\nexport default SelectionBox;\n\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './helpers/drag-action-config';\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let subject;\n    let drawingInf;\n    const context = firebolt.context;\n    const onDrag = (payload) => {\n        behaviours.forEach(action => firebolt.dispatchBehaviour(action, payload));\n    };\n    const d3Drag = getD3Drag();\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        drawingInf = context.getDrawingContext();\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        subject.x += event.dx;\n        subject.y += event.dy;\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            }, context.data().getFieldsConfig());\n            onDrag(payload);\n        }\n    }).on('end', () => {\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                },\n                snap: true\n            }, context.data().getFieldsConfig());\n            payload.dragEnd = true;\n            onDrag(payload);\n        }\n    }));\n};\n","export const CLASSPREFIX = 'muze';\nexport const ARROW_RIGHT = 'right';\nexport const ARROW_TOP = 'top';\nexport const ARROW_BOTTOM = 'bottom';\nexport const ARROW_LEFT = 'left';\nexport const TOOLTIP_LEFT = 'left';\nexport const TOOLTIP_RIGHT = 'right';\nexport const TOOLTIP_BOTTOM = 'bottom';\nexport const TOOLTIP_TOP = 'top';\nexport const INITIAL_STYLE = {\n    position: 'absolute',\n    width: 0,\n    height: 0\n};\n","import { CLASSPREFIX } from './constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'tooltip-box',\n    connectorClassName: 'tooltip-connectors',\n    className: '',\n    row: {\n        margin: 0\n    },\n    content: {\n        spacing: 5,\n        iconContainerSize: 10,\n        iconScale: 1,\n        iconShape: 'circle',\n        iconColor: '#ff0000',\n        rowMargin: '0px',\n        margin: 10,\n        separator: ':',\n        className: 'tooltip-content-container',\n        parentClassName: 'tooltip-content-parent-container'\n    },\n    arrow: {\n        size: 10,\n        disabled: false,\n        defClassName: 'tooltip-arrow',\n        className: '',\n        color: 'rgba(195,195,195,0.85)'\n    }\n};\n","import { getQualifiedClassName } from 'muze-utils';\nimport { TOOLTIP_LEFT, TOOLTIP_RIGHT, ARROW_RIGHT, ARROW_LEFT, TOOLTIP_BOTTOM } from './constants';\n\nexport const getArrowPos = (orient, dim, measurement, config) => {\n    let arrowPos;\n    const { x, y, boxHeight, boxWidth } = measurement;\n    const arrowDisabled = config.arrow.disabled;\n    const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n\n    if (orient === ARROW_LEFT || orient === ARROW_RIGHT) {\n        let start = 0;\n        let diff = boxHeight / 2;\n        const plotBottom = dim.y + dim.height;\n        const boxBottom = y + boxHeight;\n\n        if (dim.y > y) {\n            start = dim.y - y;\n            diff = (plotBottom >= boxBottom ? (boxBottom - dim.y) : dim.height) / 2;\n        } else if (boxBottom > plotBottom) {\n            diff = Math.abs(y - (dim.y + dim.height)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    } else {\n        let start = 0;\n        let diff = boxWidth / 2;\n        const plotRight = dim.x + dim.width;\n        const boxRight = x + boxWidth;\n\n        if (dim.x > x) {\n            start = dim.x - x;\n            diff = (plotRight >= boxRight ? (boxRight - dim.x) : dim.width) / 2;\n        } else if (boxRight > plotRight) {\n            diff = Math.abs(x - (dim.x + dim.width)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    }\n    return arrowPos;\n};\n\n/**\n * Places the arrow in the specified arrow position. It also applies appropriate arrow\n * class name to the arrow element.\n * @param {string} position Left, bottom or right position of the arrow;\n * @param {number} arrowPos position of arrow in pixels\n * @return {Tooltip} Instance of tooltip.\n */\nexport const placeArrow = (context, position, arrowPos) => {\n    const tooltipArrow = context._tooltipArrow;\n    const tooltipBackground = context._tooltipBackground;\n    const config = context._config;\n    const classPrefix = config.classPrefix;\n    const arrowConf = config.arrow;\n    const className = getQualifiedClassName(arrowConf.defClassName, context._id, config.classPrefix);\n\n    tooltipArrow.style('display', 'block');\n    tooltipArrow.attr('class', `${className.join(' ')}`);\n    if (position === TOOLTIP_LEFT || position === TOOLTIP_RIGHT) {\n        tooltipArrow.style('top', `${arrowPos}px`);\n        tooltipArrow.style('left', '');\n        tooltipBackground.style('top', `${arrowPos}px`);\n        tooltipBackground.style('left', '');\n    } else {\n        position === TOOLTIP_BOTTOM ? tooltipArrow.style('top', '100%') : tooltipArrow.style('top',\n            `-${arrowConf.size}px`);\n        tooltipArrow.style('left', `${arrowPos}px`);\n        position === TOOLTIP_BOTTOM ? tooltipBackground.style('top', '100%') : tooltipBackground.style('top',\n            `-${arrowConf.size + 3}px`);\n        tooltipBackground.style('left', `${arrowPos}px`);\n    }\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow`, true);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${context._arrowOrientation}`, false);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${position}`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${context._arrowOrientation}`, false);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${position}`, true);\n    return this;\n};\n\nexport const reorderContainers = (parentContainer, className) => {\n    parentContainer.selectAll(className).sort((a, b) => a - b);\n};\n","import {\n    getClosestIndexOf,\n    DateTimeFormatter,\n    DimensionSubtype,\n    MeasureSubtype,\n    FieldType\n} from 'muze-utils';\n\nconst timeFormats = {\n    millisecond: '%A, %b %e, %H:%M:%S.%L',\n    second: '%A, %b %e, %H:%M:%S',\n    minute: '%A, %b %e, %H:%M',\n    hour: '%A, %b %e, %H:%M',\n    day: '%A, %b %e, %Y',\n    month: '%B %Y',\n    year: '%Y'\n};\nconst timeDurations = [\n    ['millisecond', 'second', 'minute', 'hour', 'day', 'month', 'year'],\n    [1, 1000, 60000, 3600000, 86400000, 2592000000, 31536000000]\n];\nconst getNearestInterval = (interval) => {\n    const index = getClosestIndexOf(timeDurations[1], interval);\n    return timeDurations[0][index];\n};\n\nconst formatters = formatter => ({\n    [DimensionSubtype.TEMPORAL]: (value, interval) => {\n        const nearestInterval = getNearestInterval(interval);\n        return DateTimeFormatter.formatAs(value, timeFormats[nearestInterval]);\n    },\n    [MeasureSubtype.CONTINUOUS]: value => formatter(value ? value.toFixed(2) : value),\n    [DimensionSubtype.CATEGORICAL]: value => value\n});\n\nconst getDefaultTooltipFormatterFn = (formatter = formatters()[DimensionSubtype.CATEGORICAL]) => formatter;\n\nconst getTabularData = (data, schema, fieldspace, timeDiffs) => {\n    const rows = [];\n    rows.push(schema.map(d => d.name));\n    data.forEach((d) => {\n        const row = [];\n        schema.forEach((fieldObj, i) => {\n            const interval = fieldObj.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[fieldObj.name] : 0;\n            const numberFormat = fieldObj.type === FieldType.MEASURE && fieldspace.fields[i].numberFormat();\n            const formatterFn = getDefaultTooltipFormatterFn(formatters(numberFormat)[fieldObj.subtype]);\n            const value = formatterFn(d[i], interval);\n            row.push(value);\n        });\n        rows.push(row);\n    });\n    return rows;\n};\n\nexport const buildTooltipData = (dataModel, config = {}, context) => {\n    let fieldValues = [];\n    const dataObj = dataModel.getData();\n    const data = dataObj.data;\n    const schema = dataObj.schema;\n    const separator = config.separator;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const fieldspace = dataModel.getFieldspace();\n    const dimensionMeasureMap = context.dimensionMeasureMap;\n    const axes = context.axes;\n    const detailFields = context.detailFields || [];\n    const dimensions = schema.filter(d => d.type === FieldType.DIMENSION);\n    const measures = schema.filter(d => d.type === FieldType.MEASURE);\n    // const containsRetinalField = schema.find(d => d.name in dimensionMeasureMap);\n    const containsDetailField = schema.find(d => detailFields.indexOf(d.name) !== -1);\n    const timeDiffs = context.timeDiffs;\n    const dataLen = data.length;\n    const getRowContent = (field, type) => {\n        let value;\n        let formattedValue;\n        let measureIndex;\n        const values = [];\n        const index = fieldsConfig[field].index;\n        const interval = fieldsConfig[field].def.subtype === DimensionSubtype.TEMPORAL ?\n                timeDiffs[field] : 0;\n        const formatterFn = getDefaultTooltipFormatterFn(formatters(val => val)[type]);\n\n        if (value !== null) {\n            let uniqueVals = type === MeasureSubtype.CONTINUOUS ? data.map(d => d[index]) :\n                [...new Set(data.map(d => d[index]))];\n            uniqueVals = uniqueVals.filter(d => d !== '');\n            const colorAxis = axes.color[0];\n            const shapeAxis = axes.shape[0];\n            const sizeAxis = axes.size[0];\n            const isRetinalField = (colorAxis || shapeAxis || sizeAxis) && dataLen > 1 &&\n                    type !== MeasureSubtype.CONTINUOUS;\n\n            uniqueVals.forEach((val, i) => {\n                let key;\n                const associatedMeasures = dimensionMeasureMap[field];\n\n                if (associatedMeasures && associatedMeasures.length && dataLen > 1) {\n                    key = val;\n                    let icon = {\n                        value: ''\n                    };\n\n                    if (isRetinalField) {\n                        icon = {\n                            type: 'icon',\n                            color: colorAxis.getColor(val),\n                            shape: shapeAxis.getShape(val),\n                            size: sizeAxis.getSize(val) * config.iconScale\n                        };\n                    }\n                    if (associatedMeasures.length > 1) {\n                        values.push([icon, `${key}`]);\n                        associatedMeasures.forEach((measure) => {\n                            measureIndex = fieldsConfig[measure].index;\n                            value = data[i][measureIndex];\n                            const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                            const measureFormatter = getDefaultTooltipFormatterFn(\n                                formatters(numberFormat)[MeasureSubtype.CONTINUOUS]);\n                            formattedValue = measureFormatter(value, interval);\n                            values.push([{\n                                value: `${measure}${separator}`,\n                                style: {\n                                    'margin-left': `${config.margin}px}`\n                                },\n                                className: `${config.classPrefix}-tooltip-key`\n                            }, {\n                                value: `${formattedValue}`,\n                                className: `${config.classPrefix}-tooltip-value`\n                            }]);\n                        });\n                    } else {\n                        measureIndex = fieldsConfig[associatedMeasures[0]].index;\n                        value = data[i][measureIndex];\n                        const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                        const measureFormatter = getDefaultTooltipFormatterFn(\n                            formatters(numberFormat)[MeasureSubtype.CONTINUOUS]);\n                        formattedValue = measureFormatter(value, interval);\n                        values.push([icon, {\n                            value: `${key}${separator}`,\n                            className: `${config.classPrefix}-tooltip-key`\n                        }, {\n                            value: `${formattedValue}`,\n                            className: `${config.classPrefix}-tooltip-value`\n                        }]);\n                    }\n                } else {\n                    key = field;\n                    value = val;\n                    formattedValue = formatterFn(value, interval);\n                    values.push([{\n                        value: `${key}${separator}`,\n                        className: `${config.classPrefix}-tooltip-key`\n                    }, {\n                        value: `${formattedValue}`,\n                        className: `${config.classPrefix}-tooltip-value`\n                    }]);\n                }\n            });\n        }\n        return values;\n    };\n    let displayFormat = 'keyValue';\n\n    if (dataLen > 1 && containsDetailField) {\n        fieldValues = getTabularData(data, schema, fieldspace, timeDiffs);\n        displayFormat = 'table';\n    } else {\n        dimensions.forEach((item) => {\n            const type = item.subtype ? item.subtype : item.type;\n            fieldValues = [...fieldValues, ...getRowContent(item.name, type)];\n        });\n\n        const allMeasures = [...new Set(...Object.values(dimensionMeasureMap))];\n        const filteredMeasures = dataLen > 1 ? measures.filter(d => allMeasures.indexOf(d.name) === -1)\n            : measures;\n\n        filteredMeasures.forEach((item) => {\n            const type = item.subtype ? item.subtype : item.type;\n            fieldValues = [...fieldValues, ...getRowContent(item.name, type)];\n        });\n    }\n\n    return {\n        content: fieldValues,\n        displayFormat\n    };\n};\n\n/**\n * This contains the strategy methods for showing tooltip in the chart.\n * @param {VisualUnit} context Attached instance.\n */\nexport const strategy = {\n    keyValue: (data, config, context) => {\n        const values = buildTooltipData(data, config, context);\n        return values;\n    }\n};\n\nexport const DEFAULT_STRATEGY = 'keyValue';\n","import {\n    selectElement,\n    mergeRecursive,\n    makeElement,\n    setAttrs,\n    setStyles,\n    getSymbol,\n    isSimpleObject\n} from 'muze-utils';\nimport { DEFAULT_STRATEGY, strategy } from './strategy';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class is used to manage the content of tooltip.\n */\nexport default class Content {\n    /**\n     * Creates an instance of content.\n     */\n    constructor () {\n        this._model = null;\n        this._strategy = DEFAULT_STRATEGY;\n        this._formatter = null;\n        this._config = this.constructor.defaultConfig();\n    }\n   /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        const config = defaultConfig.content;\n        config.classPrefix = defaultConfig.classPrefix;\n        return config;\n    }\n\n    config (...c) {\n        if (c.length > 0) {\n            this._config = mergeRecursive(this._config, c[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Update model. The format contains presentation strategy which determines how to show the content.\n     * If no strategy is mentioned then default is to show key value pair\n    */\n    update (item) {\n        this._model = item.model;\n        this._strategy = item.strategy !== undefined ? item.strategy : DEFAULT_STRATEGY;\n        this._formatter = item.formatter;\n        return this;\n    }\n\n    context (ctx) {\n        this._context = ctx;\n        return this;\n    }\n\n    render (mount) {\n        let data;\n        const config = this._config;\n        const iconContainerSize = config.iconContainerSize;\n        const formatter = this._formatter;\n        const rowMargin = config.rowMargin;\n        const model = this._model;\n\n        this._mount = mount;\n        if (model instanceof Array) {\n            data = model;\n        } else {\n            data = formatter instanceof Function ? formatter(this._model, this._context) :\n                strategy[this._strategy](this._model, this.config(), this._context);\n        }\n\n        if (data instanceof Function) {\n            mount.html(data());\n        } else {\n            let content = data;\n            let displayFormat = 'default';\n\n            if (isSimpleObject(data)) {\n                content = data.content;\n                displayFormat = data.displayFormat;\n            }\n\n            const body = makeElement(mount, 'div', [displayFormat], `${config.classPrefix}-tooltip-content`, {},\n                d => d);\n\n            if (displayFormat === 'table') {\n                const table = makeElement(body, 'table', [1], `${config.classPrefix}-tooltip-table`);\n                const tbody = makeElement(table, 'tbody', [1], `${config.classPrefix}-tooltip-table-tbody`);\n                const rows = makeElement(tbody, 'tr', content, `${config.classPrefix}-tooltip-table-row`);\n                rows.each(function (d, i) {\n                    selectElement(this).classed(`${config.classPrefix}-tooltip-table-row-${i}`, true);\n                });\n                const cells = makeElement(rows, 'td', d => d, `${config.classPrefix}-tooltip-table-cell`);\n                cells.each(function (d) {\n                    selectElement(this).html(d);\n                });\n            } else {\n                const rows = makeElement(body, 'div', content, `${config.classPrefix}-tooltip-row`);\n                const cells = makeElement(rows, 'span', d => d, `${config.classPrefix}-tooltip-content`);\n                cells.attr('class', `${config.classPrefix}-tooltip-content`);\n                setStyles(rows, {\n                    margin: rowMargin\n                });\n                setStyles(cells, {\n                    display: 'inline-block',\n                    'margin-right': `${config.spacing}px`\n                });\n\n                cells.each(function (d) {\n                    const el = selectElement(this);\n                    el.html('');\n                    if (d instanceof Object) {\n                        if (d.type === 'icon') {\n                            const svg = makeElement(el, 'svg', [1]);\n                            const path = makeElement(svg, 'path', [1]);\n                            const shape = d.shape instanceof Function ? d.shape : getSymbol(d.shape);\n\n                            setAttrs(svg, {\n                                x: 0,\n                                y: 0,\n                                width: iconContainerSize,\n                                height: iconContainerSize\n                            });\n                            setAttrs(path, {\n                                d: shape.size(d.size)(),\n                                transform: `translate(${iconContainerSize / 2}, ${iconContainerSize / 2})`\n                            });\n                            setStyles(path, {\n                                fill: d.color\n                            });\n                            setStyles(svg, {\n                                width: `${iconContainerSize}px`,\n                                height: `${iconContainerSize}px`\n                            });\n                        } else {\n                            el.html(d.value);\n                            d.className && el.classed(d.className, true);\n                            setStyles(el, d.style);\n                        }\n                    } else {\n                        el.html(d);\n                    }\n                });\n            }\n        }\n        return this;\n    }\n\n    clear () {\n        this._model = null;\n        return this;\n    }\n}\n","import {\n    mergeRecursive,\n    getQualifiedClassName,\n    getUniqueId,\n    selectElement,\n    setStyles,\n    makeElement\n} from 'muze-utils';\nimport { ARROW_BOTTOM, ARROW_LEFT, ARROW_RIGHT, TOOLTIP_LEFT, TOOLTIP_RIGHT, TOOLTIP_BOTTOM, TOOLTIP_TOP,\n    INITIAL_STYLE } from './constants';\nimport { defaultConfig } from './default-config';\nimport { getArrowPos, placeArrow, reorderContainers } from './helper';\nimport './styles.scss';\nimport Content from './content';\n\n/**\n * This component is responsible for creating a tooltip element. It appends the tooltip\n * in the body element.\n * @class Tooltip\n */\nexport default class Tooltip {\n    /**\n     * Initializes the tooltip with the container element and configuration\n     * @param {HTMLElement} container container where the tooltip will be mounted.\n     * @param {string} className Class name of the tooltip.\n     */\n    constructor (htmlContainer, svgContainer) {\n        let connectorContainer = svgContainer;\n        this._id = getUniqueId();\n        this._config = {};\n        this.config({});\n        const tooltipConf = this._config;\n        const classPrefix = tooltipConf.classPrefix;\n        const contentClass = tooltipConf.content.parentClassName;\n        const container = makeElement(htmlContainer, 'div', [1], `${classPrefix}-tooltip-container`);\n        this._container = container;\n        this._tooltipContainer = container.append('div').style('position', 'absolute');\n        this._contentContainer = this._tooltipContainer.append('div').attr('class', `${classPrefix}-${contentClass}`);\n        this._tooltipBackground = this._tooltipContainer.append('div').style('position', 'relative');\n        this._tooltipArrow = this._tooltipContainer.append('div');\n\n        if (!svgContainer) {\n            connectorContainer = htmlContainer.append('svg').style('pointer-events', 'none');\n        }\n        this._contents = {};\n        this._tooltipConnectorContainer = selectElement(connectorContainer)\n            .append('g')\n            .attr('class', `${tooltipConf.classPrefix}-${tooltipConf.connectorClassName}`);\n        const id = this._id;\n        const defClassName = tooltipConf.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, id, tooltipConf.classPrefix);\n\n        setStyles(this._tooltipArrow, INITIAL_STYLE);\n        setStyles(this._tooltipBackground, INITIAL_STYLE);\n        this.addClass(qualifiedClassName.join(' '));\n        this.addClass(tooltipConf.className);\n        this.hide();\n    }\n\n    /**\n     * Sets the configuration of tooltip.\n     * @param {Object} config Configuration of tooltip\n     * @return {Tooltip} Instance of tooltip\n     */\n    config (...config) {\n        if (config.length > 0) {\n            const defConf = mergeRecursive({}, this.constructor.defaultConfig());\n            this._config = mergeRecursive(defConf, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n    /**\n     * Sets the class name of tooltip\n     * @param {string} className tooltip class name\n     * @return {Tooltip} Instance of tooltip.\n     */\n    addClass (className) {\n        this._tooltipContainer.classed(className, true);\n        return this;\n    }\n\n    context (...ctx) {\n        if (ctx.length) {\n            this._context = ctx[0];\n            return this;\n        }\n        return this._context;\n    }\n\n    content (name, data, contentConfig = {}) {\n        const config = this.config();\n        const { classPrefix } = config;\n        const contentClass = config.content.className;\n        const formatter = config.formatter;\n        const className = contentConfig.className || `${classPrefix}-${contentClass}-${name}`;\n        const content = this._contents[name] = this._contents[name] || new Content();\n        const container = makeElement(this._contentContainer, 'div', [contentConfig.order], className);\n        container.attr('class', `${classPrefix}-${contentClass} ${className}`);\n        reorderContainers(this._contentContainer, `.${classPrefix}-${contentClass}`);\n        const contentConf = config.content;\n        contentConfig.classPrefix = this._config.classPrefix;\n        content.config(contentConf);\n\n        if (data === null) {\n            content.clear();\n            container.remove();\n            delete this._contents[name];\n        } else {\n            content.update({\n                model: data,\n                formatter: contentConfig.formatter || formatter\n            });\n            content.context(this._context);\n            content.render(container);\n        }\n\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n        }\n        return this;\n    }\n\n    getContents () {\n        return Object.values(this._contents);\n    }\n\n    /**\n     * Positions the tooltip at the given x and y position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Tooltip} Instance of tooltip.\n     */\n    position (x, y, conf = {}) {\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n            return this;\n        }\n        this.show();\n        const target = this._target;\n        const repositionArrow = conf.repositionArrow;\n\n        if (target && repositionArrow) {\n            const node = this._tooltipContainer.node();\n            const config = this._config;\n            const arrowDisabled = config.arrow.disabled;\n            const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n            const arrowOrient = this._arrowOrientation;\n            const outsidePlot = arrowOrient === ARROW_LEFT || arrowOrient === ARROW_RIGHT ?\n                (y + node.offsetHeight - arrowWidth) < target.y || y > (target.y + target.height) :\n                (x + node.offsetWidth - arrowWidth) < target.x || x > (target.x + target.width);\n\n            if (!arrowDisabled) {\n                if (outsidePlot) {\n                    let path;\n                    this._tooltipArrow.style('display', 'none');\n                    this._tooltipBackground.style('display', 'none');\n                    this._tooltipConnectorContainer.style('display', 'block');\n                    const connector = this._tooltipConnectorContainer.selectAll('path').data([1]);\n                    const enter = connector.enter().append('path');\n                    if (arrowOrient === ARROW_LEFT) {\n                        path = `M ${x} ${y + node.offsetHeight / 2} L ${target.x + target.width}`\n                            + ` ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_RIGHT) {\n                        path = `M ${x + node.offsetWidth} ${y + node.offsetHeight / 2}`\n                                + ` L ${target.x} ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_BOTTOM) {\n                        path = `M ${x + node.offsetWidth / 2} ${y + node.offsetHeight}`\n                            + ` L ${target.x + target.width / 2} ${target.y}`;\n                    }\n                    enter.merge(connector).attr('d', path).style('display', 'block');\n                } else {\n                    const arrowPos = getArrowPos(arrowOrient, target, {\n                        x,\n                        y,\n                        boxHeight: node.offsetHeight,\n                        boxWidth: node.offsetWidth\n                    }, this._config);\n\n                    placeArrow(this, this._arrowOrientation, arrowPos);\n                    this._tooltipConnectorContainer.style('display', 'none');\n                }\n            }\n        }\n\n        const offset = this._offset || {\n            x: 0,\n            y: 0\n        };\n        this._tooltipContainer.style('left', `${offset.x + x}px`).style('top',\n            `${offset.y + y}px`);\n\n        return this;\n    }\n\n    /**\n     * Positions the tooltip relative to a rectangular box. It takes care of tooltip overflowing the\n     * boundaries.\n     * @param {Object} dim Dimensions of the plot.\n     */\n    positionRelativeTo (dim, tooltipConf = {}) {\n        let obj;\n        let orientation = tooltipConf.orientation;\n        this.show();\n        if (!dim) {\n            this.hide();\n            return this;\n        }\n\n        const extent = this._extent;\n        const node = this._tooltipContainer.node();\n\n        this._tooltipContainer.style('top', '0px')\n                        .style('left', '0px');\n        const offsetWidth = node.offsetWidth + 2;\n        const offsetHeight = node.offsetHeight + 2;\n        const config = this._config;\n        const offset = this._offset;\n        const arrowDisabled = config.arrow.disabled;\n        const arrowSize = arrowDisabled ? 0 : config.arrow.size;\n        const draw = tooltipConf.draw !== undefined ? tooltipConf.draw : true;\n        const topSpace = dim.y;\n        // When there is no space in right\n        const dimX = dim.x + dim.width + offset.x;\n        const rightSpace = extent.width - dimX;\n        const leftSpace = dim.x + offset.x - extent.x;\n        const positionTop = topSpace > (offsetHeight + arrowSize);\n        const positionRight = rightSpace >= offsetWidth + arrowSize;\n        const positionLeft = leftSpace >= offsetWidth + arrowSize;\n\n        const positionHorizontal = () => {\n            let position;\n            let x = dim.x + dim.width;\n            let y = dim.y;\n\n            if (positionRight) {\n                position = TOOLTIP_LEFT;\n                x += arrowSize;\n            } else if (positionLeft) {\n                x = dim.x - offsetWidth;\n                position = TOOLTIP_RIGHT;\n                x -= arrowSize;\n            } else {\n                position = 'left';\n                x += arrowSize;\n            }\n            if (dim.height < offsetHeight) {\n                y = Math.max(0, dim.y + dim.height / 2 - offsetHeight / 2);\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        const positionVertical = () => {\n            let position;\n            let y;\n            // Position tooltip at the center of plot\n            let x = dim.x - offsetWidth / 2 + dim.width / 2;\n\n            // Overflows to the right\n            if ((extent.width - (dim.x + offset.x)) < offsetWidth) {\n                x = extent.width - offsetWidth - offset.x;\n            } else if ((x + offset.x) < extent.x) { // Overflows to the left\n                x = extent.x;\n            }\n\n            if (positionTop) {\n                y = dim.y - offsetHeight - arrowSize;\n                position = TOOLTIP_BOTTOM;\n            } else {\n                y = dim.y + dim.height + arrowSize;\n                position = TOOLTIP_TOP;\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        this._target = dim;\n        if (!orientation) {\n            if (positionTop) {\n                orientation = 'vertical';\n            } else if (positionRight || positionLeft) {\n                orientation = 'horizontal';\n            } else {\n                orientation = 'vertical';\n            }\n        }\n\n        if (orientation === 'horizontal') {\n            obj = positionHorizontal();\n        } else if (orientation === 'vertical') {\n            obj = positionVertical();\n        }\n\n        this._position = {\n            x: obj.x,\n            y: obj.y\n        };\n\n        this._arrowPos = obj.arrowPos;\n        if (!arrowDisabled) {\n            placeArrow(this, obj.position, obj.arrowPos);\n        } else {\n            this._tooltipArrow.style('display', 'none');\n            this._tooltipBackground.style('display', 'none');\n        }\n        this._arrowOrientation = obj.position;\n        draw && this.position(obj.x, obj.y);\n        return this;\n    }\n\n    /**\n     * Hides the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    hide () {\n        this._tooltipContainer.style('display', 'none');\n        this._tooltipConnectorContainer.style('display', 'none');\n        return this;\n    }\n\n    /**\n     * Shows the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    show () {\n        this._tooltipContainer.style('display', 'block');\n        return this;\n    }\n\n    extent (extent) {\n        this._extent = extent;\n        return this;\n    }\n\n    offset (offset) {\n        this._offset = offset;\n        return this;\n    }\n\n    remove () {\n        this._tooltipContainer.remove();\n        this._tooltipBackground.remove();\n        this._tooltipConnectorContainer.remove();\n        return this;\n    }\n}\n","import { FieldType } from 'muze-utils';\n\nexport const strategies = {\n    showSelectedItems: (dm) => {\n        const dataObj = dm.getData();\n        const measures = dataObj.schema.filter(d => d.type === FieldType.MEASURE);\n        const aggregatedModel = dm.groupBy([''], measures.reduce((acc, v) => {\n            acc[v.name] = v.defAggFn === 'count' ? 'sum' : v.defAggFn;\n            return acc;\n        }, {}));\n        const fieldsObj = dm.getFieldspace().fieldsObj();\n        const fieldsConf = aggregatedModel.getFieldsConfig();\n        let values = [{\n            value: `${dataObj.data.length}`,\n            style: {\n                'font-weight': 'bold'\n            }\n        }, 'Items Selected'];\n        const measureNames = measures.map(d => d.name);\n        if (measureNames.length) {\n            values = [...values, ...[`(${fieldsObj[measureNames[0]].defAggFn().toUpperCase()}) ${measureNames[0]}`,\n                {\n                    value: `${aggregatedModel.getData().data[0][fieldsConf[measureNames[0]].index].toFixed(2)}`,\n                    style: {\n                        'font-weight': 'bold'\n                    }\n                }]];\n        }\n        return [values];\n    }\n};\n","import { Tooltip as TooltipRenderer } from '@chartshq/muze-tooltip';\nimport { FieldType } from 'muze-utils';\nimport { spaceOutBoxes } from '../helper';\nimport { strategies } from './strategies';\nimport { FRAGMENTED } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nexport default class Tooltip extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._tooltips = {};\n        this._strategies = strategies;\n        this._strategy = 'default';\n    }\n\n    static defaultConfig () {\n        return {\n            padding: 5,\n            offset: {\n                x: 0,\n                y: 0\n            }\n        };\n    }\n\n    static formalName () {\n        return 'tooltip';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        let totalHeight = 0;\n        let totalWidth = 0;\n        const dataModel = selectionSet.mergedEnter.model;\n        const context = this.firebolt.context;\n        const drawingInf = this.drawingContext();\n        if ((dataModel.isEmpty() || payload.criteria === null) || selectionSet.isSourceFieldPresent === false) {\n            this.hide(options, null);\n            return this;\n        }\n\n        const tooltips = this._tooltips;\n        const config = this.config();\n        const boundBox = {\n            width: drawingInf.width,\n            height: drawingInf.height\n        };\n        const showInPosition = payload.showInPosition;\n        const pad = config.padding;\n        const dataModels = [];\n        const fragmented = config.mode === FRAGMENTED;\n        const sourceInf = context.getSourceInfo();\n        const fields = sourceInf.fields;\n        const xFieldDim = fields.x[0] ? fields.x[0].type() === FieldType.DIMENSION : false;\n        const showVertically = !!xFieldDim;\n        const tooltipPos = payload.position;\n        const boxes = [];\n        const enter = {};\n        const uids = dataModel.getData().uids;\n        if (fragmented) {\n            dataModels.push(...uids.map(d => dataModel.select((fieldsArr, i) => i === d, {\n                saveChild: false\n            })));\n        } else {\n            dataModels.push(dataModel);\n        }\n\n        let target = payload.target;\n        let targetFields = [];\n        if (target) {\n            targetFields = target[0] || [];\n            const sourceFields = payload.sourceFields;\n            const indices = [];\n            for (let i = 0, len = targetFields.length; i < len; i++) {\n                if (sourceFields.indexOf(targetFields[i]) !== -1) {\n                    indices.push(i);\n                }\n            }\n            target = target.map(d => d.filter((v, i) => indices.indexOf(i) !== -1));\n        }\n\n        const plotDimensions = context.getPlotPointsFromIdentifiers(target || payload.criteria, {\n            getBBox: true\n        });\n\n        // Show tooltip for each datamodel\n        for (let i = 0; i < dataModels.length; i++) {\n            let plotDim = plotDimensions[i];\n            if (fragmented) {\n                const dimensions = dataModels[i].getData().schema.filter(d => d.type === FieldType.DIMENSION)\n                    .map(d => d.name);\n                plotDim = context.getPlotPointsFromIdentifiers(dataModels[i].project(dimensions), { getBBox: true });\n                plotDim = plotDim && plotDim[0];\n            }\n\n            let dt = dataModels[i];\n            if (config.fields) {\n                dt = dt.project(config.fields, {\n                    saveChild: false\n                });\n            }\n            if (config.dataTransform) {\n                dt = config.dataTransform(dt, i);\n            }\n\n            enter[i] = true;\n            const { parentContainer: layoutContainer, parentContainerDimensions } = drawingInf;\n            const layoutBoundBox = layoutContainer.getBoundingClientRect();\n            const unitBoundBox = drawingInf.htmlContainer.getBoundingClientRect();\n\n            const offsetLeft = unitBoundBox.left - layoutBoundBox.left;\n            const offsetTop = unitBoundBox.top - layoutBoundBox.top;\n            const tooltipInst = tooltips[i] = tooltips[i] || new TooltipRenderer(layoutContainer,\n                    drawingInf.svgContainer);\n\n            sourceInf.payload = payload;\n            sourceInf.firebolt = this.firebolt;\n            sourceInf.detailFields = context.detailFields();\n            sourceInf.timeDiffs = context.timeDiffsByField();\n            tooltipInst.context(sourceInf);\n            const strategy = strategies[options.strategy];\n            tooltipInst.content(options.strategy || this._strategy, dt, {\n                formatter: strategy,\n                order: options.order\n            })\n                            .config(this.config())\n                            .extent({\n                                x: 0,\n                                y: 0,\n                                width: parentContainerDimensions.width,\n                                height: parentContainerDimensions.height\n                            })\n                            .offset({\n                                x: offsetLeft + (config.offset.x || 0),\n                                y: offsetTop + (config.offset.y || 0)\n                            });\n\n            if (showInPosition) {\n                tooltipInst.position(tooltipPos.x + pad, tooltipPos.y + pad);\n            } else if (plotDim) {\n                tooltipInst.positionRelativeTo({\n                    x: plotDim.x,\n                    y: plotDim.y,\n                    width: plotDim.width || 0,\n                    height: plotDim.height || 0\n                }, {\n                    orientation: fragmented ?\n                        (showVertically ? 'horizontal' : 'vertical') : undefined\n                });\n            } else {\n                tooltipInst.hide();\n                break;\n            }\n\n            if (fragmented) {\n                const position = tooltipInst._position;\n                const tooltipBoundBox = tooltipInst._tooltipContainer.node().getBoundingClientRect();\n\n                totalHeight += tooltipBoundBox.height + pad;\n                totalWidth += tooltipBoundBox.width + pad;\n                if (showVertically ? totalHeight > drawingInf.height : totalWidth > drawingInf.width) {\n                    break;\n                }\n                boxes.push({\n                    x: position.x,\n                    y: position.y,\n                    width: tooltipBoundBox.width,\n                    height: tooltipBoundBox.height,\n                    tooltip: tooltipInst\n                });\n            }\n        }\n\n        for (const key in tooltips) {\n            if (!enter[key]) {\n                const tooltip = tooltips[key];\n                tooltip.content(payload.action, null);\n                if (!tooltip.getContents().length) {\n                    tooltip.remove();\n                    delete tooltips[key];\n                }\n            }\n        }\n        if (fragmented) {\n            spaceOutBoxes(boxes, boundBox, showVertically);\n            boxes.forEach(box => box.tooltip.position(box.x, box.y, {\n                repositionArrow: true\n            }));\n        }\n        return this;\n    }\n\n    hide (options) {\n        const tooltips = this._tooltips;\n        for (const key in tooltips) {\n            if ({}.hasOwnProperty.call(tooltips, key)) {\n                const strategy = options.strategy || this._strategy;\n                tooltips[key].content(strategy, null);\n                tooltips[key].hide();\n            }\n        }\n    }\n}\n","export const spaceOutBoxes = (boxes, extent, showVertically) => {\n    let y;\n    let height;\n    let x;\n    let width;\n    let i;\n    const pad = 5;\n    const len = boxes.length;\n    const spaceOutIfOverlap = (firstBox, secondBox, opposite) => {\n        x = firstBox.x;\n        width = firstBox.width;\n        y = firstBox.y;\n        height = firstBox.height;\n        const bottom = y + height;\n        const right = x + width;\n\n        if (showVertically) {\n            if (opposite ? y < (secondBox.y + secondBox.height) : bottom > secondBox.y) {\n                secondBox.y = opposite ? firstBox.y - secondBox.height - pad :\n                        bottom + pad;\n            }\n        } else if (opposite ? x < (secondBox.x + secondBox.width) : right > secondBox.x) {\n            secondBox.x = opposite ? firstBox.x - secondBox.width - pad :\n                    right + pad;\n        }\n    };\n\n    boxes.sort((a, b) => (showVertically ? a.y - b.y : a.x - b.x));\n    i = 0;\n\n    for (i = 0; i < len - 1; i++) {\n        spaceOutIfOverlap(boxes[i], boxes[i + 1]);\n    }\n\n    if ((boxes[i].y + boxes[i].height) > extent.height ||\n            (boxes[i].x + boxes[i].width) > extent.width) {\n        if (showVertically) {\n            boxes[i].y -= (boxes[i].height + boxes[i].y) - extent.height;\n        } else {\n            boxes[i].x -= (boxes[i].width + boxes[i].x) - extent.width;\n        }\n        for (i = len - 1; i > 0; i--) {\n            spaceOutIfOverlap(boxes[i], boxes[i - 1], true);\n        }\n    }\n    return boxes;\n}\n;\n","import { selectElement, FieldType } from 'muze-utils';\n\nimport './styles.scss';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nexport default class Crossline extends SpawnableSideEffect {\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-crossline-group`,\n            bandClass: `${CLASSPREFIX}-crossband`,\n            lineClass: `${CLASSPREFIX}-crossline`\n        };\n    }\n\n    static formalName () {\n        return 'crossline';\n    }\n\n    apply (selectionSet, payload) {\n        let height;\n        let bandWidth;\n        let px;\n        let width;\n        const {\n            className,\n            bandClass,\n            lineClass\n        } = this.config();\n        const dataModel = selectionSet.mergedEnter.model;\n        const drawingInf = this.drawingContext();\n        if (payload.criteria && dataModel && dataModel.isEmpty()) {\n            return this;\n        }\n        if (payload.criteria === null || !dataModel) {\n            this.hide();\n            return this;\n        }\n\n        const dataObj = dataModel.getData();\n        const sourceInf = this.firebolt.context.getSourceInfo();\n        const axes = sourceInf.axes;\n        const axisFields = sourceInf.fields;\n        const fields = selectionSet.fields;\n        const data = dataObj.data;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const svgContainer = drawingInf.sideEffectGroup;\n\n        const elemData = [];\n        fields.forEach((field) => {\n            const fieldIndex = fieldsConfig[field] && fieldsConfig[field].index;\n            const dataArr = data.map(d => d[fieldIndex]);\n            const axisIndex = [['x', 0], ['x', 1], ['y', 0], ['y', 1]].find((arr) => {\n                const fieldInst = axisFields[arr[0]][arr[1]];\n                return fieldInst && fieldInst.type() === FieldType.DIMENSION &&\n                    fieldInst.getMembers().indexOf(field) !== -1;\n            });\n            if (axisIndex !== undefined && data.length) {\n                const type = axisIndex[0];\n                const axis = axes[type][axisIndex[1]];\n                const value = dataArr[0];\n                bandWidth = axis.getUnitWidth() || 0;\n                px = axis.getScaleValue(value) + bandWidth / 2 + drawingInf.xOffset;\n                const plotWidth = Math.max(...this.firebolt.context.layers().map(layer => layer.getPlotSpan()[type]));\n                const pad = Math.max(...this.firebolt.context.layers().map(layer => layer.getPlotPadding()[type]));\n                height = drawingInf.height;\n                width = drawingInf.width;\n                const startPx = px - plotWidth / 2 - pad / 2;\n                const endPx = px + plotWidth / 2 + pad / 2;\n                const dataPoint = {};\n                if (type === 'y') {\n                    dataPoint.d = `M 0 ${startPx} L 0 ${endPx} L ${width} ${endPx} L ${width} ${startPx} Z`;\n                } else {\n                    dataPoint.d = `M ${startPx} 0 L ${endPx} 0 L ${endPx} ${height} L ${startPx} ${height} Z`;\n                }\n                dataPoint.className = plotWidth ? bandClass : lineClass;\n                elemData.push(dataPoint);\n            }\n        });\n        if (elemData.length) {\n            const parentGroup = this.createElement(svgContainer, 'g', [1], className);\n            const elem = this.createElement(parentGroup, 'path', elemData);\n            elem.attr('d', d => d.d).style('pointer-events', 'none')\n                            .attr('class', d => d.className);\n        }\n        return this;\n    }\n\n    hide () {\n        const className = this.config().className;\n        const drawingInf = this.drawingContext();\n        selectElement(drawingInf.sideEffectGroup).selectAll(`.${className}`).remove();\n    }\n}\n","const fadeFn = (set, context, strategy) => {\n    const {\n        mergedEnter,\n        mergedExit,\n        exitSet,\n        completeSet\n    } = set;\n\n    if (!mergedEnter.length && !mergedExit.length) {\n        context.applyInteractionStyle(completeSet, {}, strategy, false);\n    } else {\n        context.applyInteractionStyle(exitSet[1], {}, strategy, true);\n        context.applyInteractionStyle(mergedEnter, {}, strategy, false);\n    }\n};\n\nexport const strategies = {\n    fade: fadeFn,\n    focus: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'focus', false);\n        } else {\n            context.applyInteractionStyle(mergedExit, {}, 'focus', true);\n            context.applyInteractionStyle(mergedEnter, {}, 'focus', false);\n        }\n    },\n    highlight: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            entrySet,\n            exitSet,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'highlight', false);\n        } else {\n            context.applyInteractionStyle(entrySet[1], {}, 'highlight', true);\n            context.applyInteractionStyle(exitSet[1], {}, 'highlight', false);\n        }\n    }\n};\n","import SurrogateSideEffect from '../surrogate';\nimport { strategies } from './strategy';\n\nexport default class PlotHighlighter extends SurrogateSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategy = 'highlight';\n        this._strategies = strategies;\n    }\n\n    static formalName () {\n        return 'highlighter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        if (selectionSet.isSourceFieldPresent !== false) {\n            strategy(selectionSet, this, options.strategy || this._strategy);\n        }\n\n        return this;\n    }\n}\n","import SurrogateSideEffect from '../surrogate';\n\nexport default class FilterEffect extends SurrogateSideEffect {\n    static formalName () {\n        return 'filter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static mutates () {\n        return true;\n    }\n\n    apply (selectionSet, payload) {\n        const context = this.firebolt.context;\n        const entryModel = selectionSet.mergedEnter.model;\n        if (payload.criteria === null) {\n            context.clearCaching().resetData();\n        } else {\n            context.enableCaching().data(entryModel);\n        }\n        return this;\n    }\n}\n","import { DataModel, STATE_NAMESPACES, getObjProp } from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst addLayer = (layerDefs, layerRegistry, context, sideEffect) => {\n    const layers = [];\n    if (layerDefs) {\n        layerDefs.forEach((layerDef) => {\n            const mark = layerDef.mark;\n            const layerCls = layerRegistry[mark];\n            if (layerCls && layerCls.shouldDrawAnchors()) {\n                const depLayerEncoding = layerDef.def.encoding;\n                const encoding = {\n                    x: getObjProp(depLayerEncoding, 'x', 'field'),\n                    y: getObjProp(depLayerEncoding, 'y', 'field'),\n                    color: getObjProp(depLayerEncoding, 'color', 'field'),\n                    size: {\n                        field: getObjProp(depLayerEncoding, 'size', 'field'),\n                        value: sideEffect.defaultSizeValue()\n                    }\n                };\n                const name = `${layerDef.def.name}-${sideEffect.constructor.formalName()}`;\n                const layerObj = {\n                    instances: context.addLayer({\n                        name,\n                        mark: 'point',\n                        className: sideEffect.constructor.defaultConfig().className,\n                        encoding,\n                        transform: {\n                            type: 'identity'\n                        },\n                        transition: sideEffect.getTransitionConfig(),\n                        calculateDomain: false,\n                        source: dm => dm.select(() => false, {\n                            saveChild: false\n                        }),\n                        interactive: false,\n                        render: false\n                    }),\n                    linkedLayer: layerDef.def.name\n                };\n                layers.push(layerObj);\n            }\n        });\n    }\n    return layers;\n};\n\nexport default class AnchorEffect extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._layersMap = {};\n        this.addAnchorLayers();\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-anchors-group`\n        };\n    }\n\n    static formalName () {\n        return 'anchors';\n    }\n\n    addAnchorLayers () {\n        const context = this.firebolt.context;\n        const metaInf = context.metaInf();\n        const layerRegistry = context.registry().layerRegistry;\n        const layerDefsVal = context.layerDef();\n        context.store().registerImmediateListener(\n            `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}.layerDef`, ([, layerDefs]) => {\n                this._layers = addLayer(layerDefs, layerRegistry, context, this);\n            });\n        this._layers = addLayer(layerDefsVal, layerRegistry, context, this);\n        return this;\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n\n    /**\n     * Returns the default area value of the anchor point.\n     * @return { number } Default area value of anchor.\n     */\n    defaultSizeValue () {\n        return 100;\n    }\n\n    apply (selectionSet) {\n        const self = this;\n        const dataModel = selectionSet.mergedEnter.model;\n        if (selectionSet.isSourceFieldPresent !== false) {\n            const drawingInf = this.drawingContext();\n            const sideEffectGroup = drawingInf.sideEffectGroup;\n            const className = `${this.config().className}`;\n            const layers = this._layers;\n            const parentGroup = this.createElement(sideEffectGroup, 'g', [1], `${className}-container`);\n            const anchorGroups = this.createElement(parentGroup, 'g', Object.values(layers));\n            anchorGroups.each(function (layer) {\n                const instances = layer.instances;\n                const elems = self.createElement(this, 'g', instances, className);\n                const linkedLayer = self.firebolt.context.getLayerByName(layer.linkedLayer);\n                const [transformedData, schema] = linkedLayer.getTransformedDataFromIdentifiers(dataModel);\n                const transformedDataModel = new DataModel(transformedData, schema);\n                elems.each(function (d, i) {\n                    instances[i].data(transformedDataModel).mount(this);\n                });\n            });\n        }\n        return this;\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class PersistentAnchors extends AnchorEffect {\n    static formalName () {\n        return 'persistent-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-persistent-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class BrushAnchors extends AnchorEffect {\n    static formalName () {\n        return 'brush-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-brush-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import * as BEHAVIOURS from './enums/behaviours';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: ['selectionBox', {\n        name: 'highlighter',\n        options: {\n            strategy: 'fade'\n        }\n    }, 'brush-anchors'],\n    [`${BEHAVIOURS.BRUSH},${BEHAVIOURS.SELECT}`]: [{\n        name: 'tooltip',\n        options: {\n            strategy: 'showSelectedItems',\n            order: 0,\n            filter: context => context.config().mode === 'fragmented'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'highlight'\n        }\n    }, 'crossline', {\n        name: 'tooltip',\n        options: {\n            order: 9999\n        }\n    }, 'anchors'],\n    [BEHAVIOURS.FILTER]: ['filter'],\n    [BEHAVIOURS.SELECT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'focus'\n        }\n    }, 'persistent-anchors']\n};\n","export const CLASSPREFIX = 'muze';\nexport const STACK = 'stack';\nexport const GROUP = 'group';\nexport const IDENTITY = 'identity';\nexport const ANGLE = 'angle';\nexport const RADIUS = 'radius';\nexport const SIZE = 'size';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const OUTER_RADIUS_VALUE = 'outerRadiusValue';\nexport const TEXT_ANCHOR_MIDDLE = 'middle';\nexport const ENCODING = {\n    X: 'x',\n    Y: 'y',\n    X0: 'x0',\n    Y0: 'y0'\n};\n\nexport const ASCENDING = 'asc';\n\nexport const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { CLASSPREFIX, STACK } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-area',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: STACK\n    },\n    interaction: {\n\n    },\n    nearestPointThreshold: 10,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        y0: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * This is an interface class which any new layer class has to extend.\n *\n * @example\n * class BarLayer extends BaseLayer {\n *   update (params) {\n *       // super.update(params);\n *       // Update the bar layer\n *   }\n * }\n * @class\n */\nexport default class SimpleLayer {\n\n    formalName () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets or gets the dependencies.\n     * @param {Object} dependencies Dependencies needed by layer\n     * @return {BaseLayer} Instance of base layer.\n     */\n    dependencies () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the config of the layer\n     *\n     * @param {Object} config Configuration of layer\n     * @return {Object} configuration of layer\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Acts as a getter or setter function\n     * When setter\n     * Returns the datamodel of the layer\n     * @param { DataModel } dataModel instance of DataModel\n     * @return { DataModel } DataModel instance of the layer\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized schema of the layer\n     * @return {Object} Serialized schema\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the unique identifier of this layer\n     * @return {string} id of the layer\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n    /*\n     * This method resolves the x, y, x0 and y0 values from the transformed data.\n     * It also checks the type of transformed data for example, if it is a stacked data\n     * then it fetches the y and y0 values from the stacked data.\n     * @param {Array.<Array>} transformedData transformed data\n     * @param {Object} fieldMap field definitions\n     * @param {string} transformType type of transformed data - stack, group or identity.\n     * @return {Array.<Object>} Normalized data\n     * @private\n     */\n    normalizeTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of dataModel\n     * @param {Object} config configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     * @private\n     */\n    getTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a nominal field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @return {Array} Domain values array.\n     */\n    _calculateDomainFromData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, color, etc.\n     * @return {Object} Axis domains\n     */\n    getDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for getting nearest point\n     * @return {BaseLayer} Instance of base layer\n     */\n    getNearestPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for highlighting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    highlightPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for deselecting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    dehighlightPoint () {\n        return this;\n    }\n\n    linkLayerStore () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets the container element for the layer to be renderered.\n     * @param {SVGElement} mountPoint SVG element or group element.\n     */\n    mount () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n","export const props = {\n    axes: {},\n    mount: {},\n    measurement: {},\n    metaInf: {},\n    data: {},\n    config: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { Symbols } from 'muze-utils';\nimport * as AxisOrientation from '../enums/axis-orientation';\n\n/**\n * @module Axis\n * This file exports constants that are used to reference axis orientations\n * in a consistent manner.\n */\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\n\n/**\n  * This object is used to associate the axis orientation with the d3 class\n  * used to represent that axis.\n  */\nexport const axisOrientationMap = {\n    [AxisOrientation.LEFT]: Symbols.axisLeft,\n    [AxisOrientation.BOTTOM]: Symbols.axisBottom,\n    [AxisOrientation.RIGHT]: Symbols.axisRight,\n    [AxisOrientation.TOP]: Symbols.axisTop\n};\n","/**\n * @module axis\n * This file exports constants used to reference scale type\n * consistently throughout the project.\n */\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const TIME = 'temporal';\nexport const COLOR = 'color';\nexport const ORDINAL = 'ordinal';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\nexport const LOG = 'log';\nexport const POW = 'pow';\nexport const IDENTITY = 'identity';\nexport const SEQUENTIAL = 'sequential';\nexport const THRESHOLD = 'threshold';\n","export const CLASSPREFIX = 'muze';\n\nexport const CONTINOUS = 'continous';\nexport const DISCRETE = 'discrete';\nexport const SEQUENTIAL = 'sequential';\nexport const ORDINAL = 'ordinal';\nexport const LINEAR = 'linear';\nexport const THRESHOLD = 'threshold';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\n\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\n\nexport const DOMAIN = 'domain';\nexport const BAND = 'band';\nexport const HIDDEN = 'hidden';\nexport const NUMBER = 'number';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\n\nexport const RGB = 'rgb';\nexport const HEX = 'hex';\nexport const HSLA = 'hsla';\nexport const HSL = 'hsl';\n\n","import { scales, colorSchemes } from 'muze-utils';\n\nimport {\n    SEQUENTIAL,\n    ORDINAL,\n    LINEAR,\n    CONTINOUS,\n    THRESHOLD,\n    QUANTIZE\n} from './enums/constants';\n\nimport * as ScaleType from './enums/scale-type';\n\nconst {\n    scaleLinear,\n    scaleThreshold,\n    scaleLog,\n    scalePow,\n    scaleIdentity,\n    scaleOrdinal,\n    scaleSequential,\n    scaleQuantize,\n    scaleQuantile,\n    schemeCategory10,\n    schemeCategory20,\n    schemeCategory20b,\n    scaleBand,\n    scaleTime\n} = scales;\nexport const scaleMap = {\n    [ScaleType.LINEAR]: scaleLinear,\n    [ScaleType.BAND]: scaleBand,\n    [ScaleType.QUANTIZE]: scaleQuantize,\n    [ScaleType.QUANTILE]: scaleQuantile,\n    [ScaleType.THRESHOLD]: scaleThreshold,\n    [ScaleType.SEQUENTIAL]: scaleSequential,\n    [ScaleType.LOG]: scaleLog,\n    [ScaleType.POW]: scalePow,\n    [ScaleType.IDENTITY]: scaleIdentity,\n    [ScaleType.TIME]: scaleTime,\n    [ScaleType.COLOR]: scaleLinear,\n    [ScaleType.ORDINAL]: scaleOrdinal\n};\nexport const SCHEMES = {\n    SCHEME1: schemeCategory10,\n    SCHEME2: schemeCategory20,\n    SCHEME3: schemeCategory20b\n};\n\n/**\n * Accepts a scheme in a string format and returns the scale from d3-scale-chromatic\n *\n * @export\n * @param {string} scheme a string representing the kind of scheme for the color axis\n * @return {Object} The corresponding scale from a scheme type from d3 chromatic scale\n */\nexport function getScheme (scheme) {\n    if (scheme[0] === 'i') {\n        return scaleSequential(colorSchemes[scheme]);\n    }\n    return scaleOrdinal(colorSchemes[scheme]);\n}\n\n/**\n *\n *\n * @export\n * @param {*} scheme\n *\n */\nexport function getSchemeType (scheme) {\n    let schemeType = '';\n    if (scheme && typeof (scheme) === 'string') {\n        schemeType = scheme[0] === 'i' ? SEQUENTIAL : ORDINAL;\n    } else {\n        schemeType = ORDINAL;\n    }\n    return schemeType;\n}\n\n/**\n * This function is used to create a scale that is assigned to\n * an instance of axis.\n *\n * @export\n * @param {Object} params the input parameters to create a Scale object\n * @param {string} params.type the type of scale\n * @param {Array} params.range the range of scale\n * @return {Object} instance of scale\n */\nexport function createScale (params) {\n    if (!params.type || !scaleMap[params.type]) {\n        throw new Error(`${params.type} is not a valid scale type`);\n    }\n    if (!Array.isArray(params.range)) {\n        throw new Error('range parameter must be an array');\n    }\n    let scaleFactory = null;\n    const range = params.range;\n    // @todo: do it using scale decorator\n    if (params.type === LINEAR && params.interpolator) {\n        scaleFactory = scaleMap[params.interpolator];\n        if (params.interpolator === ScaleType.POW) {\n            return scaleFactory().range(range).exponent(params.exponent);\n        } else if (params.interpolator === ScaleType.LOG) {\n            return scaleFactory().range(range).base([params.base]);\n        }\n    } else {\n        scaleFactory = scaleMap[params.type];\n    }\n\n    if (params.type === QUANTIZE) {\n        scaleFactory().nice();\n    }\n    return scaleFactory().range(range);\n}\n\n/**\n * This method is used to update the range of a scale\n * so that the core module can remain agnostic of the d3\n * scale api.\n *\n * @export\n * @param {Scale} scale Instance of d3 Scale.\n * @param {Array} range new range of the scale.\n * @return {Scale} Updated scale.\n */\nexport function updateScaleRange (scale, range) {\n    return scale.range(range);\n}\n\n/**\n *\n *\n * @export\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} steps\n *\n */\nexport function getScaleType (domainType, rangeType, steps) {\n    if (rangeType === CONTINOUS) {\n        return LINEAR;\n    }\n    if (domainType === CONTINOUS) {\n        if (steps instanceof Array) {\n            return THRESHOLD;\n        }\n        return QUANTIZE;\n    }\n    return ORDINAL;\n}\n","import { getUniqueId } from 'muze-utils';\nimport { CLASSPREFIX } from '../enums/constants';\n\n/**\n *\n *\n */\nexport const defaultConfig = {\n    id: getUniqueId(),\n    axisName: {\n        defClassName: 'axis-name'\n    },\n    axisNamePadding: 12,\n    base: 10,\n    classPrefix: CLASSPREFIX,\n    className: `${CLASSPREFIX}-axis`,\n    exponent: 1,\n    interpolator: 'linear',\n    fixedBaseline: true,\n    labels: {\n        rotation: null,\n        smartTicks: null\n    },\n    orientation: 'left',\n    numberFormat: val => val,\n    padding: 0.3,\n    nice: true,\n    numberOfTicks: 10,\n    rotate: false,\n    show: true,\n    showAxisName: true,\n    showInnerTicks: true,\n    showOuterTicks: true,\n    style: {},\n    type: 'linear',\n    tickFormat: null,\n    tickValues: null,\n    xOffset: 0,\n    yOffset: 0\n};\n\n","/**\n * This file exports functionality that is used to render axis.\n */\nimport { selectElement, makeElement, angleToRadian } from 'muze-utils';\nimport * as AxisOrientation from './enums/axis-orientation';\nimport { LINEAR, HIDDEN, BOTTOM, TOP } from './enums/constants';\n\n/**\n *\n *\n * @param {*} instance\n * @param {*} container\n * @param {*} labelManager\n * @param {*} config\n */\nconst rotateAxis = (instance, tickText, labelManager) => {\n    let rotation;\n    const axis = instance.axis();\n    const config = instance.config();\n    const renderConfig = instance.renderConfig();\n    const smartTicks = instance.smartTicks();\n    const scale = axis.scale();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n    const ticks = labelFunc();\n    const {\n        orientation,\n        fixedBaseline,\n        type\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n\n    rotation = labels.rotation;\n\n    const tickSize = instance.getTickSize();\n    tickText.each(function (d, index) {\n        let yShift;\n        let xShift;\n        let datum = smartTicks[index] ? smartTicks[index].text : d;\n\n        const tickFormatter = axis.tickFormat() ? axis.tickFormat : null;\n\n        const temp = tickSize ? (tickFormatter ? tickFormatter()(datum) : datum) : '';\n\n        datum = temp.toString();\n\n        const tickLabelDim = labelManager.getOriSize(datum);\n\n        const width = tickLabelDim.width * 0.5;\n        const height = tickLabelDim.height * 0.5;\n\n        if (rotation < 0) {\n            rotation = 360 + rotation;\n        }\n\n        const quadrant = 4 - Math.floor(rotation / 90);\n        const rotationNormalizer = ((quadrant % 2 === 0) ? rotation : 180 * Math.ceil(rotation / 180) - rotation) % 180;\n\n        yShift = Math.sqrt(height ** 2 + width ** 2) * Math.sin(angleToRadian(rotationNormalizer));\n\n        if ((quadrant === 3 || quadrant === 2) && !(rotationNormalizer > 67.5 && rotationNormalizer <= 90)) {\n            yShift += height * 2;\n        }\n        xShift = width;\n\n        if (rotation === 90) {\n            xShift = height;\n        } else if (rotation === 270) {\n            xShift = -height;\n        } else {\n            xShift = 0;\n        }\n\n        if (orientation === AxisOrientation.TOP) {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift + xShift / 2 : xShift;\n            selectElement(this)\n                            .attr('transform', `translate(${-xShift + tickSize}\n                                ${-yShift - tickSize}) rotate(${rotation})`);\n        } else {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift - xShift / 2 : xShift;\n\n            selectElement(this)\n                            .attr('transform', `translate(${xShift - tickSize}\n                                ${yShift + tickSize}) rotate(${rotation})`);\n        }\n        selectElement(this).transition()\n                        .duration(1000).text(datum);\n    });\n    return tickText;\n};\n\n/**\n *\n *\n * @param {*} tickText\n * @param {*} axisInstance\n */\nconst changeTickOrientation = (selectContainer, axisInstance, tickSize) => {\n    const {\n        _smartTicks\n    } = axisInstance;\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const {\n        orientation,\n        classPrefix\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n    const {\n        rotation,\n        smartTicks: isSmartTicks\n    } = labels;\n\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.selectAll('tspan').remove();\n\n   // rotate labels if not enough space is available\n    if (rotation && (orientation === TOP || orientation === BOTTOM)) {\n        rotateAxis(axisInstance, tickText, labelManager);\n    } else if (!rotation && !isSmartTicks) {\n        tickText.attr('transform', '');\n    } else {\n        tickText.text('');\n        if (orientation === TOP || orientation === BOTTOM) {\n            tickText.attr('y', 0)\n                            .attr('x', 0)\n                            .attr('transform', '')\n                            .text('');\n            const tspan = makeElement(tickText, 'tspan', (d, i) => {\n                if (_smartTicks[i]) {\n                    return _smartTicks[i].lines;\n                } return [];\n            }, `${classPrefix}-smart-text`);\n\n            tspan.attr('dy', '0')\n                            .style('opacity', '0')\n\n                            .transition()\n                            .duration(1000)\n                            .on('end', axisInstance.registerAnimationDoneHook())\n                            .attr('dy', (d, i) => {\n                                if (orientation === BOTTOM || i !== 0) {\n                                    return _smartTicks[0].oriTextHeight;\n                                }\n                                return -_smartTicks[0].oriTextHeight * (_smartTicks[0].lines.length - 1) - tickSize;\n                            })\n                            .style('opacity', 1)\n                            .text(e => e)\n                            .attr('x', 0);\n        } else {\n            const tspan = makeElement(tickText, 'tspan', (d, i) => _smartTicks[i].lines, `${classPrefix}-smart-text`);\n            tspan.text(e => e);\n        }\n    }\n\n    return tickText;\n};\n\nconst setFixedBaseline = (axisInstance) => {\n    const {\n        fixedBaseline\n    } = axisInstance.config();\n    if (fixedBaseline) {\n        axisInstance.setFixedBaseline();\n    }\n};\n\n/**\n *\n *\n * @param {*} textNode\n * @param {*} orientation\n * @param {*} measures\n */\nconst setAxisNamePos = (textNode, orientation, measures) => {\n    const {\n        axisNameHeight,\n        yOffset,\n        labelOffset,\n        availableSpace\n    } = measures;\n    switch (orientation) {\n    case AxisOrientation.LEFT:\n        textNode.attr('transform',\n            `translate(${-(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(-90)`);\n        break;\n    case AxisOrientation.RIGHT:\n        textNode.attr('transform',\n             `translate(${(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(90)`);\n        break;\n    case AxisOrientation.TOP:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${-availableSpace.height + axisNameHeight})`);\n        break;\n    case AxisOrientation.BOTTOM:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${availableSpace.height - axisNameHeight / 2})`);\n        break;\n    default:\n    }\n    return textNode;\n};\n\n/**\n * This method is used to render the axis inside an\n * svg container.\n *\n * @export\n * @param {Object} axisInstance the nput object required to render axis\n * @param {string} axisInstance.orientation the orientation of axis\n * @param {Object} axisInstance.scale instance of d3 scale\n * @param {SVGElement} axisInstance.container the container in which to render\n */\nexport function renderAxis (axisInstance) {\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const mount = axisInstance.mount();\n    const range = axisInstance.range();\n    const axis = axisInstance.axis();\n    const scale = axisInstance.scale();\n    const domain = axisInstance.domain() || [];\n    const {\n        _axisNameStyle,\n        _tickLabelStyle,\n        formatter,\n        tickValues\n     } = axisInstance;\n    const {\n        orientation,\n        name,\n        xOffset,\n        yOffset,\n        axisNamePadding,\n        className,\n        id,\n        classPrefix\n     } = config;\n    const {\n        show,\n        showAxisName,\n        labels\n    } = renderConfig;\n    if (!show || !domain.length) {\n        return;\n    }\n\n    const tickSize = axisInstance.getTickSize();\n\n    const selectContainer = makeElement(selectElement(mount), 'g', [axisInstance], `${className}`, {},\n        key => key.config().id);\n\n    // Set style for tick labels\n    labelManager.setStyle(_tickLabelStyle);\n\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    formatter && axis.tickFormat(formatter(tickValues || axis.tickValues() || labelFunc()));\n\n    // Get range(length of range)\n    const availableSpace = Math.abs(range[0] - range[1]);\n\n    // Get width and height taken by axis labels\n    const labelProps = axisInstance.axisComponentDimensions().largestTickDimensions;\n\n    // Draw axis ticks\n    selectContainer.attr('transform', `translate(${xOffset},${yOffset})`);\n    setFixedBaseline(axisInstance);\n    if (labels.smartTicks === false || tickSize === 0) {\n        selectContainer.transition()\n                        .duration(1000)\n                        .on('end', axisInstance.registerAnimationDoneHook())\n                        .call(axis);\n    } else {\n        selectContainer.call(axis);\n    }\n    selectContainer.selectAll('.tick').classed(`${classPrefix}-ticks`, true);\n    selectContainer.selectAll('.tick line').classed(`${classPrefix}-tick-lines`, true);\n\n    // Set classes for ticks\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.classed(`${classPrefix}-ticks`, true)\n                    .classed(`${classPrefix}-ticks-${id}`, true);\n\n    changeTickOrientation(selectContainer, axisInstance, tickSize);\n\n    // Create axis name\n    const textNode = makeElement(selectContainer, 'text', [name], `${classPrefix}-axis-name`)\n                    .attr('text-anchor', 'middle')\n                    .classed(`${classPrefix}-axis-name-${id}`, true)\n                    .text(d => d);\n\n    // Hide axis name if show is off\n    textNode.classed(HIDDEN, !showAxisName);\n\n     // render labels based on orientation of axis\n    const labelOffset = availableSpace / 2;\n\n    // Set style for axis name\n    labelManager.setStyle(_axisNameStyle);\n    const axisNameSpace = labelManager.getOriSize(name);\n    const measures = {\n        labelProps,\n        tickSize,\n        axisNamePadding,\n        axisNameHeight: axisNameSpace.height,\n        axisNameWidth: axisNameSpace.width,\n        yOffset,\n        xOffset,\n        labelOffset,\n        availableSpace: axisInstance.availableSpace()\n    };\n    // Set position for axis name\n    setAxisNamePos(textNode, orientation, measures);\n}\n","import { BOTTOM, TOP } from '../enums/axis-orientation';\n\nconst setAxisRange = (context, type, rangeBounds, offset) => {\n    context.range(rangeBounds);\n    offset && context.config({ [`${type}Offset`]: offset });\n};\n\nconst getAxisOffset = (timeDiff, range, domain) => {\n    const pvr = Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    const width = (pvr * timeDiff);\n    const avWidth = (range[1] - range[0]);\n    const bars = avWidth / width;\n    const barWidth = avWidth / (bars + 1);\n    const diff = avWidth - barWidth * bars;\n\n    return diff / 2;\n};\n\nexport const adjustRange = (minDiff, range, domain, orientation) => {\n    const diff = getAxisOffset(minDiff, range, domain);\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        range[0] += diff;\n        range[1] -= diff;\n    } else {\n        range[0] -= diff;\n        range[1] += diff;\n    }\n    return range;\n};\n\nexport const spaceSetter = (context, spaceConfig) => {\n    let tickInterval;\n    let heightForTicks;\n    const {\n        width: availWidth,\n        height: availHeight,\n        padding\n    } = context.availableSpace();\n    const {\n        top,\n        left,\n        bottom,\n        right\n    } = padding;\n    const {\n        isOffset\n    } = spaceConfig;\n    const {\n        showAxisName,\n        labels\n    } = context.renderConfig();\n    const {\n        rotation\n    } = labels;\n    const {\n        orientation,\n        fixedBaseline,\n        axisNamePadding,\n        tickValues\n    } = context.config();\n    const {\n        tickDimensions,\n        allTickDimensions,\n        axisNameDimensions,\n        tickSize\n    } = context.getAxisDimensions();\n    const {\n        height: tickDimHeight,\n        width: tickDimWidth\n    } = tickDimensions;\n    const namePadding = showAxisName ? axisNamePadding : 0;\n    const labelConfig = { smartTicks: true, rotation: labels.rotation };\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minDiff = context._minDiff;\n    const domain = context.domain();\n    const axisNameHeight = axisNameDimensions.height;\n\n    return {\n        time: {\n            x: () => {\n                const tickShifter = tickDimWidth / 2;\n\n                setAxisRange(context, 'y', adjustRange(minDiff,\n                    [tickShifter, availWidth - left - right - tickShifter], domain, orientation),\n                        isOffset ? availHeight : null);\n\n                tickInterval = ((availWidth) / context.getTickValues().length)\n                                     - minTickDistance.width;\n\n                heightForTicks = availHeight - axisNameDimensions.availHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickSpace.width && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = labels.rotation === null ? -90 : rotation;\n\n                    // Remove ticks if not enough height\n                    if (tickInterval < minTickSpace.height) {\n                        heightForTicks = availHeight;\n                        tickInterval = minTickSpace.height;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                let widthForTicks = availWidth;\n                const tickShifter = tickDimHeight / 2;\n\n                setAxisRange(context, 'x', adjustRange(minDiff,\n                    [availHeight - top - bottom - tickShifter, tickShifter], domain, orientation),\n                        isOffset ? availWidth : null);\n\n                if ((availWidth - axisNameHeight - namePadding) <= minTickDistance.width) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        band: {\n            x: () => {\n                setAxisRange(context, 'y', [0, availWidth - left - right], isOffset ? availHeight : null);\n                const range = context.range();\n\n                // Get Tick Interval\n                tickInterval = ((range[1] - range[0]) / (tickValues || domain).length) - minTickDistance.width;\n\n                // Get height available for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickSpace.width && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation === null ? -90 : rotation;\n                    labelConfig.smartTicks = false;\n\n                    // Ticks with overlapping height\n                    if (tickInterval < minTickSpace.height) {\n                        heightForTicks = 0;\n                        tickInterval = 0;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                        context.range([minTickSpace.height / 2, availWidth - minTickSpace.height / 2]);\n                    }\n                } else if (tickValues) {\n                    const interval = (availWidth / domain.length) - minTickDistance.width;\n                    if (interval < minTickSpace.width) {\n                        context.range([minTickSpace.height / 2, availWidth - minTickSpace.height / 2]);\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false, showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                setAxisRange(context, 'x', [availHeight - bottom, top], isOffset ? availWidth : null);\n\n                let widthForTicks = availWidth;\n                if (availWidth - axisNameHeight - namePadding <= minTickDistance.width) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        continous: {\n            x: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.width / 2;\n                const baseline = fixedBaseline ? 0 : tickShifter;\n\n                setAxisRange(context, 'y', [baseline + left, availWidth - right - tickShifter],\n                    isOffset ? availHeight : null);\n\n                const range = context.range();\n\n                // Get Tick widths and available space\n                const totalTickWidth = allTickDimensions.length * (tickDimensions.width + minTickDistance.width);\n                const availableSpace = range[1] - range[0];\n\n                 // Rotate labels if not enough width\n                if (availableSpace < totalTickWidth && labels.rotation === null) {\n                    labelConfig.rotation = -90;\n                }\n\n                // Remove ticks if not enough height\n                if (availHeight - axisNameHeight - namePadding < tickDimensions.height) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availHeight < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            },\n            y: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.height / 2;\n                const baseline = fixedBaseline ? 1 : tickShifter;\n\n                setAxisRange(context, 'x', [availHeight - bottom - baseline, tickShifter + top],\n                    isOffset ? availWidth : null);\n\n                // Remove display of ticks if no space is left\n                if (availWidth < tickDimensions.width + axisNameHeight + namePadding) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availWidth < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            }\n        }\n    };\n};\n","import { TOP, LEFT, BOTTOM } from '../enums/axis-orientation';\n\nexport const getRotatedSpaces = (rotation = 0, width, height) => {\n    let rotatedHeight = height;\n    let rotatedWidth = width;\n    if (rotation) {\n        const angle = ((rotation || 0) * Math.PI) / 180;\n        rotatedWidth = Math.abs(height * Math.sin(angle)) + Math.abs(width * Math.cos(angle));\n        rotatedHeight = Math.abs(width * Math.sin(angle)) + Math.abs(height * Math.cos(angle));\n    }\n    return { width: rotatedWidth, height: rotatedHeight };\n};\n\nexport const setOffset = (context) => {\n    let x = 0;\n    let y = 0;\n    const logicalSpace = context.logicalSpace();\n    const config = context.config();\n    const {\n        orientation,\n        xOffset,\n        yOffset\n    } = config;\n    if (orientation === LEFT) {\n        x = xOffset === undefined ? logicalSpace.width : xOffset;\n    }\n    if (orientation === TOP) {\n        y = yOffset === undefined ? logicalSpace.height : yOffset;\n    }\n    context.config({ xOffset: x, yOffset: y });\n};\n\nexport const getNumberOfTicks = (availableSpace, labelDim, axis, axisInstance) => {\n    const ticks = axis.scale().ticks();\n    const { numberOfTicks } = axisInstance.config();\n    const tickLength = ticks.length;\n    let numberOfValues = tickLength;\n\n    if (tickLength * (labelDim * 1.5) > availableSpace) {\n        numberOfValues = Math.floor(availableSpace / (labelDim * 1.5));\n    }\n\n    numberOfValues = Math.min(numberOfTicks, Math.max(2, numberOfValues));\n\n    return axis.scale().ticks(numberOfValues);\n};\n\nexport const getAxisComponentDimensions = (context) => {\n    let largestTick = '';\n    let largestTickDimensions = { width: 0, height: 0 };\n    let smartTick = {};\n    let axisTicks;\n    const allTickDimensions = [];\n    const scale = context.scale();\n    const { showAxisName } = context.renderConfig();\n    const { tickValues, name } = context.config();\n    const { labelManager } = context.dependencies();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    // set the style on the shared label manager instance\n    labelManager.setStyle(context._tickLabelStyle);\n\n    // get the values along the domain\n    axisTicks = tickValues || labelFunc();\n\n    // Get the tick labels\n    axisTicks = axisTicks.map((originalLabel, i) => {\n        const label = context.getFormattedText(originalLabel, i, axisTicks);\n\n    // convert to string for quant values\n        const tickDimensions = labelManager.getOriSize(label);\n\n    // Get spaces for all labels\n        allTickDimensions.push(tickDimensions);\n\n    // Getting largest label\n        if (tickDimensions.width > largestTickDimensions.width) {\n            largestTick = label;\n            smartTick = context.smartTicks() ? context.smartTicks()[i] : {};\n            largestTickDimensions = tickDimensions;\n        }\n        return label;\n    });\n\n    labelManager.setStyle(context._axisNameStyle);\n    const axisNameDimensions = showAxisName ? labelManager.getOriSize(name) : { width: 0, height: 0 };\n\n    return {\n        axisNameDimensions,\n        largestTick,\n        largestTickDimensions,\n        allTickDimensions,\n        axisTicks,\n        smartTick,\n        tickSize: context.getTickSize()\n    };\n};\n\nexport const computeAxisDimensions = (context) => {\n    let tickDimensions = {};\n    const { labels } = context.renderConfig();\n    const { smartTicks, rotation } = labels;\n    const {\n        largestTickDimensions,\n        axisTicks,\n        smartTick,\n        axisNameDimensions,\n        allTickDimensions,\n        tickSize\n    } = getAxisComponentDimensions(context);\n    const { height: labelHeight, width: labelWidth } = largestTickDimensions;\n\n    // get the domain of axis\n    const domain = context.domain();\n    // const angle = ((rotation || 0) * Math.PI) / 180;\n\n    if (domain.length === 0) {\n        return null;\n    }\n    if (smartTicks) {\n        tickDimensions = smartTick;\n    } else {\n        tickDimensions = { width: labelWidth, height: labelHeight };\n    }\n    tickDimensions = getRotatedSpaces(rotation, tickDimensions.width, tickDimensions.height);\n\n    if (tickSize === 0) {\n        tickDimensions = { width: 0, height: 0 };\n    }\n    return {\n        allTickDimensions,\n        tickSize,\n        tickDimensions,\n        axisNameDimensions,\n        largestTickDimensions,\n        axisTicks\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getHorizontalAxisSpace = (context, axisDimensions, range) => {\n    let width;\n    let height;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    width = range && range.length ? range[1] - range[0] : 0;\n\n    height = 0;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        width = ((max - min) / Math.abs(minTickDiff)) * (tickDimWidth + context._minTickDistance.width);\n    }\n    if (!width || width === 0) {\n        height = Math.max(tickDimWidth, tickDimHeight);\n    } else {\n        height = tickDimHeight;\n    }\n    height += (showAxisName ? axisDimHeight + axisNamePadding : 0) + tickSize;\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getVerticalAxisSpace = (context, axisDimensions) => {\n    let height;\n    let width;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    height = 0;\n    width = tickDimWidth;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        height = ((max - min) / Math.abs(minTickDiff)) * tickDimHeight;\n    }\n    width += (showAxisName ? axisDimHeight : 0) + tickSize + axisNamePadding;\n\n    return {\n        height,\n        width\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateBandSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show } = context.renderConfig();\n    const { largestTickDimensions, axisTicks, allTickDimensions } = axisDimensions;\n    const { height: largestDimHeight } = largestTickDimensions;\n    const minTickWidth = context._minTickDistance.width;\n    if (orientation === TOP || orientation === BOTTOM) {\n        let {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n\n        if (!width || width === 0) {\n            width = allTickDimensions.reduce((t, n) =>\n                t + Math.min(n.width, n.height) + minTickWidth, 0);\n        }\n        if (show === false) {\n            height = 0;\n        }\n\n        return {\n            width,\n            height\n        };\n    }\n\n    let {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    if (!height || height === 0) {\n        height = axisTicks.length * (largestDimHeight + context._minTickDistance.height) + largestDimHeight;\n    }\n    if (show === false) {\n        width = 0;\n    }\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateContinousSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show, showAxisName } = context.renderConfig();\n    const { axisNameDimensions } = axisDimensions;\n\n    if (show === false) {\n        return {\n            width: 0,\n            height: 0\n        };\n    }\n\n    const { width: axisNameWidth } = axisNameDimensions;\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        const {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n        const axisWidth = Math.max(width, axisNameWidth);\n\n        return {\n            width: axisWidth,\n            height\n        };\n    }\n    const {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    const effHeight = Math.max(height, showAxisName ? axisNameWidth : 0);\n\n    return {\n        width,\n        height: effHeight\n    };\n};\n\nexport const setContinousAxisDomain = (context, domain) => {\n    const { nice, domain: userDom } = context.config();\n    if (userDom) {\n        domain = userDom;\n    }\n    if (domain.length && domain[0] === domain[1]) {\n        domain = [0, +domain[0] * 2];\n    }\n    context.scale().domain(domain);\n    nice && context.scale().nice();\n    context._domain = context.scale().domain();\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    availableSpace: {},\n    axisDimensions: {},\n    axisComponentDimensions: {},\n    config: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._config || {});\n            value = mergeRecursive(oldConfig, value);\n            value.axisNamePadding = Math.max(value.axisNamePadding, 0);\n            if (value.orientation !== oldConfig.orientation) {\n                context.axis(context.createAxis(value));\n            }\n            const {\n                labels,\n                show,\n                showInnerTicks,\n                showOuterTicks,\n                showAxisName\n            } = value;\n            context.renderConfig({\n                labels,\n                show,\n                showInnerTicks,\n                showOuterTicks,\n                showAxisName\n            });\n            return value;\n        }\n    },\n    renderConfig: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._renderConfig || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    logicalSpace: {},\n    mount: {\n    },\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.logicalSpace(null);\n            return value;\n        }\n    },\n\n    smartTicks: {},\n    tickSize: {},\n    maxTickSpaces: {}\n};\n","import {\n    mergeRecursive,\n    getSmartComputedStyle,\n    selectElement,\n    generateGetterSetters,\n    getUniqueId\n} from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { defaultConfig } from './default-config';\nimport { renderAxis } from '../axis-renderer';\nimport { BAND } from '../enums/constants';\nimport { spaceSetter } from './space-setter';\nimport {\n    getAxisComponentDimensions,\n    computeAxisDimensions,\n    calculateContinousSpace\n} from './helper';\nimport { PROPS } from './props';\n\nexport default class SimpleAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @memberof SimpleAxis\n     */\n    constructor (config, dependencies) {\n        this._id = getUniqueId();\n\n        this._dependencies = dependencies;\n        this._mount = null;\n        this._range = [];\n        this._domain = [];\n        this._domainLock = false;\n        this._axisDimensions = {};\n        this._smartTicks = [];\n\n        const defCon = mergeRecursive({}, this.constructor.defaultConfig());\n        const simpleConfig = mergeRecursive(defCon, config);\n\n        const bodyElem = selectElement('body');\n        const classPrefix = simpleConfig.classPrefix;\n        this._tickLabelStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-ticks`);\n        this._axisNameStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-axis-name`);\n\n        dependencies.labelManager.setStyle(this._tickLabelStyle);\n        const dist = dependencies.labelManager.getOriSize('w');\n\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n        this._minTickSpace = dependencies.labelManager.getOriSize('www');\n\n        generateGetterSetters(this, PROPS);\n        this.config(simpleConfig);\n\n        this._scale = this.createScale(this._config);\n        this._axis = this.createAxis(this._config);\n        this._animationDonePromises = [];\n    }\n\n    /**\n     * Returns the default configuration of simple axis\n     *  @return {Object} default configurations\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    scale (...params) {\n        if (params.length) {\n            this._scale = params[0];\n            return this;\n        }\n        return this._scale;\n    }\n\n    resetDomain () {\n        this._domain = [];\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    axis (...params) {\n        if (params.length) {\n            this._axis = params[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            let dom = domain[0];\n            const userDom = this.config().domain;\n            if (userDom) {\n                dom = userDom;\n            }\n            this.scale().domain(dom);\n            this._domain = this.scale().domain();\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    setAxisComponentDimensions () {\n        this.axisComponentDimensions(getAxisComponentDimensions(this));\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const scale = createScale({\n            padding,\n            interpolator,\n            exponent,\n            base,\n            range,\n            type: this.constructor.type()\n        });\n\n        return scale;\n    }\n\n    getTickFormatter (tickFormat, numberFormat) {\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(numberFormat(val), i, ticks);\n        }\n        return () => val => numberFormat(val);\n    }\n\n    resetLogicalSpace () {\n        this.logicalSpace(null);\n        this.range([]);\n        const {\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName\n        } = this.config();\n        this.renderConfig({\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName\n        });\n    }\n\n    getFormattedText (text, index, axisTicks) {\n        const formatter = this.formatter;\n        const scale = this.scale();\n        return formatter ? formatter(axisTicks)(text, index) : (scale.tickFormat ? scale.tickFormat()(text) : text);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const {\n            tickFormat,\n            numberFormat,\n            orientation\n        } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            this.formatter = this.getTickFormatter(tickFormat, numberFormat);\n\n            return axis;\n        }\n        return null;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).continous.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).continous.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        return this;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this.scale()(domainVal);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        return this.axis().tickSize();\n    }\n\n    /**\n     * Gets the space occupied by the parts of an axis\n     *\n     * @return {Object} object with details about sizes of the axis.\n     * @memberof SimpleAxis\n     */\n    getAxisDimensions (...params) {\n        this.axisDimensions(computeAxisDimensions(this, ...params));\n        return this.axisDimensions();\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateContinousSpace(this));\n            this.logicalSpace();\n        }\n\n        return this.logicalSpace();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (...value) {\n        const values = value.map(d => this.scale().invert(d)) || [];\n        return value.length === 1 ? values[0] : values;\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        let p1;\n        let p2;\n        let extent;\n        const {\n            type\n        } = this.config();\n        const scale = this.scale();\n        const range = scale.range();\n        const reverse = range[0] > range[1];\n\n        if (type === BAND) {\n            extent = scale.invertExtent(v1, v2);\n            p1 = scale(reverse ? extent[extent.length - 1] : extent[0]);\n            p2 = scale(reverse ? extent[0] : extent[extent.length - 1]) + scale.bandwidth();\n            return [p1, p2];\n        }\n        return [v1, v2];\n    }\n\n    getMinTickDifference () {\n        return this.domain();\n    }\n\n    getFormattedTickValues (tickValues) {\n        return tickValues;\n    }\n\n    /**\n     * This method returns the width in pixels for one\n     * unit along the axis. It is only applicable to band scale\n     * and returns undefined for other scale type.\n     *\n     * @return {number} the width of one band along band scale axis\n     * @memberof SimpleAxis\n     */\n    getUnitWidth () {\n        return 0;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof SimpleAxis\n     */\n    serialize () {\n        return {\n            name: this.name,\n            type: this.type,\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to render the axis inside\n     * the supplied svg container.\n     *\n     * @param {SVGElement} svg the svg element in which to render the path\n     * @memberof SimpleAxis\n     */\n    /* istanbul ignore next */render () {\n        if (this.mount()) {\n            this.setTickConfig();\n            renderAxis(this);\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    remove () {\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    unsubscribe () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    isReverse () {\n        const range = this.range();\n        return range[0] > range[1];\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getPixelToValueRatio () {\n        const scale = this.scale();\n        const range = scale.range();\n        const domain = scale.domain();\n\n        return Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    }\n\n     /**\n     * Notifies when all animations/transitions of the axis are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n}\n\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LinearInterpolator {\n\n    createScale (config) {\n        const {\n            range\n        } = config;\n        const scaleFactory = scaleMap.linear;\n        this._scale = scaleFactory().range(range);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LogInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            base\n        } = config;\n        const scaleFactory = scaleMap.log;\n        this._scale = scaleFactory().range(range).base(base);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal <= 0) {\n            return 1;\n        }\n\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain[0] <= 0) {\n            return [Math.max(1, domain[0]), Math.max(1, domain[1])];\n        } return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class PowInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            exponent\n        } = config;\n        const scaleFactory = scaleMap.pow;\n        this._scale = scaleFactory().range(range).exponent(exponent);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { spaceSetter } from './space-setter';\nimport { LINEAR, LOG, POW } from '../enums/scale-type';\nimport { LogInterpolator, PowInterpolator, LinearInterpolator } from './interpolators';\nimport {\n    getNumberOfTicks,\n    setContinousAxisDomain\n} from './helper';\n\nexport const interpolatorMap = {\n    [LOG]: LogInterpolator,\n    [POW]: PowInterpolator,\n    [LINEAR]: LinearInterpolator\n};\n\nexport default class ContinousAxis extends SimpleAxis {\n    constructor (config, dependencies) {\n        config.tickFormat = config.tickFormat || (val => val);\n        super(config, dependencies);\n    }\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const InterpolatorCls = interpolatorMap[interpolator];\n\n        this._interpolator = new InterpolatorCls();\n        let scale = this._interpolator.createScale({\n            padding,\n            exponent,\n            base,\n            range\n        });\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ContinousAxis\n     */\n    static type () {\n        return LINEAR;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this._interpolator.getScaleValue(domainVal);\n    }\n /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n\n        return axis.tickSize();\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (domain) {\n        if (domain && domain.length) {\n            setContinousAxisDomain(this, domain);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        } else if (domain) {\n            this._domain = [];\n        } return this._domain;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).continous.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).continous.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} tickValues\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        const {\n            tickValues\n        } = this.config();\n        const {\n            showInnerTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        if (!showInnerTicks) {\n            axis.tickValues([]);\n            return this;\n        }\n\n        if (tickValues) {\n            tickValues instanceof Array && this.axis().tickValues(tickValues);\n            return this;\n        }\n        axis.tickValues(this.getTickValues());\n\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickValues () {\n        let labelDim = 0;\n        const {\n            orientation,\n            tickValues\n        } = this.config();\n        const range = this.range();\n        const axis = this.axis();\n\n        const availableSpace = Math.abs(range[0] - range[1]);\n\n        const labelProps = this.axisComponentDimensions().largestTickDimensions;\n\n        if (tickValues) {\n            return axis.scale().ticks(tickValues);\n        }\n        labelDim = labelProps[orientation === BOTTOM || orientation === TOP ? 'width' : 'height'];\n\n        return getNumberOfTicks(availableSpace, labelDim, axis, this);\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline (tickText) {\n        const {\n            orientation\n        } = this.config();\n        const {\n            labels\n        } = this.renderConfig();\n\n        const {\n            rotation\n        } = labels;\n        const axis = this.axis();\n        const ticks = axis.scale().ticks();\n        const { width, height } = this.axisComponentDimensions().allTickDimensions[0];\n        axis.tickTransform((d) => {\n            if (d === ticks[0]) {\n                if ((orientation === LEFT || orientation === RIGHT)) {\n                    return `translate(0, -${(height) / 3}px)`;\n                }\n                if ((orientation === TOP || orientation === BOTTOM) && !rotation) {\n                    return `translate(${width / 2}px,  ${0}px)`;\n                }\n            } return '';\n        });\n        return tickText;\n    }\n\n}\n","import SimpleAxis from './simple-axis';\nimport { BAND } from '../enums/scale-type';\nimport { TOP, BOTTOM } from '../enums/axis-orientation';\nimport { calculateBandSpace, setOffset, getRotatedSpaces } from './helper';\nimport { spaceSetter } from './space-setter';\n\nexport default class BandAxis extends SimpleAxis {\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof BandAxis\n     */\n    createScale (range) {\n        const scale = super.createScale(range);\n        const { padding } = this.config();\n        if (typeof padding === 'number') {\n            scale.padding(padding);\n        }\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BandAxis\n     */\n    static type () {\n        return BAND;\n    }\n\n     /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).band.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).band.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks = '';\n        let smartlabel;\n        const domain = this.domain();\n        const { labelManager } = this._dependencies;\n        const { tickValues, tickFormat } = this.config();\n        const { labels } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n        const tickFormatter = tickFormat || (val => val);\n\n        tickValues && this.axis().tickValues(tickValues);\n        smartTicks = tickValues || domain;\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i, values), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n            setOffset(this);\n            this.logicalSpace();\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     *\n     *\n     * @memberof BandAxis\n     */\n    getTickValues () {\n        return this.axis().scale().domain();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    getUnitWidth () {\n        return this.scale().bandwidth();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        axis.tickSizeInner(showInnerTicks ? 6 : 0);\n        axis.tickSizeOuter(showOuterTicks ? 6 : 0);\n        return axis.tickSize();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (...value) {\n        const values = value.map(d => this.scale().invert(d)) || [];\n        return value.length === 1 ? values[0] && values[0].toString() : values.map(d => d.toString());\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { TIME } from '../enums/scale-type';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { calculateBandSpace, getRotatedSpaces, setContinousAxisDomain } from './helper';\nimport { spaceSetter } from './space-setter';\n\n/**\n *\n *\n * @export\n * @class TimeAxis\n * @extends {SimpleAxis}\n */\nexport default class TimeAxis extends SimpleAxis {\n\n    constructor (...params) {\n        super(...params);\n        this._minDiff = Infinity;\n    }\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof TimeAxis\n     */\n    createScale (range) {\n        let scale = super.createScale(range);\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TimeAxis\n     */\n    static type () {\n        return TIME;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const {\n            tickFormat,\n            orientation\n        } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            this.formatter = this.getTickFormatter(tickFormat);\n            return axis;\n        }\n        return null;\n    }\n\n    getTickFormatter (tickFormat) {\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(val, i, ticks);\n        }\n        return null;\n    }\n\n     /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n        return super.getTickSize();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TimeAxis\n     */\n    getTickValues () {\n        return this.config().tickValues || this.scale().ticks();\n    }\n\n    /**\n     *\n     *\n     * @param {*} diff\n     *\n     * @memberof TimeAxis\n     */\n    minDiff (diff) {\n        this._minDiff = Math.min(this._minDiff, diff);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (domain) {\n        if (domain) {\n            setContinousAxisDomain(this, domain);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        } return this._domain;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n            this.logicalSpace();\n        }\n        return this.logicalSpace();\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).time.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).time.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks;\n        let smartlabel;\n        const { tickFormat, tickValues } = this.config();\n        const { labels } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { labelManager } = this._dependencies;\n        const domain = this.getTickValues();\n        const scale = this.scale();\n        tickValues && this.axis().tickValues(tickValues);\n\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        smartTicks = tickValues || domain;\n        const tickFormatter = tickFormat || scale.tickFormat();\n         // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i, values), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n}\n","export const x11Colors = {\n    Pink: { hex: 'ffc0cb', rgb: '255,192,203' },\n    LightPink: { hex: 'ffb6c1', rgb: '255,182,193' },\n    HotPink: { hex: 'ff69b4', rgb: '255,105,180' },\n    DeepPink: { hex: 'ff1493', rgb: '255,20,147' },\n    PaleVioletRed: { hex: 'db7093', rgb: '219,112,147' },\n    MediumVioletRed: { hex: 'c71585', rgb: '199,21,133' },\n    LightSalmon: { hex: 'ffa07a', rgb: '255,160,122' },\n    Salmon: { hex: 'fa8072', rgb: '250,128,114' },\n    DarkSalmon: { hex: 'e9967a', rgb: '233,150,122' },\n    LightCoral: { hex: 'f08080', rgb: '240,128,128' },\n    IndianRed: { hex: 'cd5c5c', rgb: '205,92,92' },\n    Crimson: { hex: 'dc143c', rgb: '220,20,60' },\n    FireBrick: { hex: 'b22222', rgb: '178,34,34' },\n    DarkRed: { hex: '8b0000', rgb: '139,0,0' },\n    Red: { hex: 'ff0000', rgb: '255,0,0' },\n    OrangeRed: { hex: 'ff4500', rgb: '255,69,0' },\n    Tomato: { hex: 'ff6347', rgb: '255,99,71' },\n    Coral: { hex: 'ff7f50', rgb: '255,127,80' },\n    DarkOrange: { hex: 'ff8c00', rgb: '255,140,0' },\n    Orange: { hex: 'ffa500', rgb: '255,165,0' },\n    Gold: { hex: 'ffd700', rgb: '255,215,0' },\n    Yellow: { hex: 'ffff00', rgb: '255,255,0' },\n    LightYellow: { hex: 'ffffe0', rgb: '255,255,224' },\n    LemonChiffon: { hex: 'fffacd', rgb: '255,250,205' },\n    LightGoldenrodYellow: { hex: 'fafad2', rgb: '250,250,210' },\n    PapayaWhip: { hex: 'ffefd5', rgb: '255,239,213' },\n    Moccasin: { hex: 'ffe4b5', rgb: '255,228,181' },\n    PeachPuff: { hex: 'ffdab9', rgb: '255,218,185' },\n    PaleGoldenrod: { hex: 'eee8aa', rgb: '238,232,170' },\n    Khaki: { hex: 'f0e68c', rgb: '240,230,140' },\n    DarkKhaki: { hex: 'bdb76b', rgb: '189,183,107' },\n    Cornsilk: { hex: 'fff8dc', rgb: '255,248,220' },\n    BlanchedAlmond: { hex: 'ffebcd', rgb: '255,235,205' },\n    Bisque: { hex: 'ffe4c4', rgb: '255,228,196' },\n    NavajoWhite: { hex: 'ffdead', rgb: '255,222,173' },\n    Wheat: { hex: 'f5deb3', rgb: '245,222,179' },\n    BurlyWood: { hex: 'deb887', rgb: '222,184,135' },\n    Tan: { hex: 'd2b48c', rgb: '210,180,140' },\n    RosyBrown: { hex: 'bc8f8f', rgb: '188,143,143' },\n    SandyBrown: { hex: 'f4a460', rgb: '244,164,96' },\n    Goldenrod: { hex: 'daa520', rgb: '218,165,32' },\n    DarkGoldenrod: { hex: 'b8860b', rgb: '184,134,11' },\n    Peru: { hex: 'cd853f', rgb: '205,133,63' },\n    Chocolate: { hex: 'd2691e', rgb: '210,105,30' },\n    SaddleBrown: { hex: '8b4513', rgb: '139,69,19' },\n    Sienna: { hex: 'a0522d', rgb: '160,82,45' },\n    Brown: { hex: 'a52a2a', rgb: '165,42,42' },\n    Maroon: { hex: '800000', rgb: '128,0,0' },\n    DarkOliveGreen: { hex: '556b2f', rgb: '85,107,47' },\n    Olive: { hex: '808000', rgb: '128,128,0' },\n    OliveDrab: { hex: '6b8e23', rgb: '107,142,35' },\n    YellowGreen: { hex: '9acd32', rgb: '154,205,50' },\n    LimeGreen: { hex: '32cd32', rgb: '50,205,50' },\n    Lime: { hex: '00ff00', rgb: '0,255,0' },\n    LawnGreen: { hex: '7cfc00', rgb: '124,252,0' },\n    Chartreuse: { hex: '7fff00', rgb: '127,255,0' },\n    GreenYellow: { hex: 'adff2f', rgb: '173,255,47' },\n    SpringGreen: { hex: '00ff7f', rgb: '0,255,127' },\n    MediumSpringGreen: { hex: '00fa9a', rgb: '0,250,154' },\n    LightGreen: { hex: '90ee90', rgb: '144,238,144' },\n    PaleGreen: { hex: '98fb98', rgb: '152,251,152' },\n    DarkSeaGreen: { hex: '8fbc8f', rgb: '143,188,143' },\n    MediumSeaGreen: { hex: '3cb371', rgb: '60,179,113' },\n    SeaGreen: { hex: '2e8b57', rgb: '46,139,87' },\n    ForestGreen: { hex: '228b22', rgb: '34,139,34' },\n    Green: { hex: '008000', rgb: '0,128,0' },\n    DarkGreen: { hex: '006400', rgb: '0,100,0' },\n    MediumAquamarine: { hex: '66cdaa', rgb: '102,205,170' },\n    Aqua: { hex: '00ffff', rgb: '0,255,255' },\n    Cyan: { hex: '00ffff', rgb: '0,255,255' },\n    LightCyan: { hex: 'e0ffff', rgb: '224,255,255' },\n    PaleTurquoise: { hex: 'afeeee', rgb: '175,238,238' },\n    Aquamarine: { hex: '7fffd4', rgb: '127,255,212' },\n    Turquoise: { hex: '40e0d0', rgb: '64,224,208' },\n    MediumTurquoise: { hex: '48d1cc', rgb: '72,209,204' },\n    DarkTurquoise: { hex: '00ced1', rgb: '0,206,209' },\n    LightSeaGreen: { hex: '20b2aa', rgb: '32,178,170' },\n    CadetBlue: { hex: '5f9ea0', rgb: '95,158,160' },\n    DarkCyan: { hex: '008b8b', rgb: '0,139,139' },\n    Teal: { hex: '008080', rgb: '0,128,128' },\n    LightSteelBlue: { hex: 'b0c4de', rgb: '176,196,222' },\n    PowderBlue: { hex: 'b0e0e6', rgb: '176,224,230' },\n    LightBlue: { hex: 'add8e6', rgb: '173,216,230' },\n    SkyBlue: { hex: '87ceeb', rgb: '135,206,235' },\n    LightSkyBlue: { hex: '87cefa', rgb: '135,206,250' },\n    DeepSkyBlue: { hex: '00bfff', rgb: '0,191,255' },\n    DodgerBlue: { hex: '1e90ff', rgb: '30,144,255' },\n    CornflowerBlue: { hex: '6495ed', rgb: '100,149,237' },\n    SteelBlue: { hex: '4682b4', rgb: '70,130,180' },\n    RoyalBlue: { hex: '4169e1', rgb: '65,105,225' },\n    Blue: { hex: '0000ff', rgb: '0,0,255' },\n    MediumBlue: { hex: '0000cd', rgb: '0,0,205' },\n    DarkBlue: { hex: '00008b', rgb: '0,0,139' },\n    Navy: { hex: '000080', rgb: '0,0,128' },\n    MidnightBlue: { hex: '191970', rgb: '25,25,112' },\n    Lavender: { hex: 'e6e6fa', rgb: '230,230,250' },\n    Thistle: { hex: 'd8bfd8', rgb: '216,191,216' },\n    Plum: { hex: 'dda0dd', rgb: '221,160,221' },\n    Violet: { hex: 'ee82ee', rgb: '238,130,238' },\n    Orchid: { hex: 'da70d6', rgb: '218,112,214' },\n    Fuchsia: { hex: 'ff00ff', rgb: '255,0,255' },\n    Magenta: { hex: 'ff00ff', rgb: '255,0,255' },\n    MediumOrchid: { hex: 'ba55d3', rgb: '186,85,211' },\n    MediumPurple: { hex: '9370db', rgb: '147,112,219' },\n    BlueViolet: { hex: '8a2be2', rgb: '138,43,226' },\n    DarkViolet: { hex: '9400d3', rgb: '148,0,211' },\n    DarkOrchid: { hex: '9932cc', rgb: '153,50,204' },\n    DarkMagenta: { hex: '8b008b', rgb: '139,0,139' },\n    Purple: { hex: '800080', rgb: '128,0,128' },\n    Indigo: { hex: '4b0082', rgb: '75,0,130' },\n    DarkSlateBlue: { hex: '483d8b', rgb: '72,61,139' },\n    SlateBlue: { hex: '6a5acd', rgb: '106,90,205' },\n    MediumSlateBlue: { hex: '7b68ee', rgb: '123,104,238' },\n    White: { hex: 'ffffff', rgb: '255,255,255' },\n    Snow: { hex: 'fffafa', rgb: '255,250,250' },\n    Honeydew: { hex: 'f0fff0', rgb: '240,255,240' },\n    MintCream: { hex: 'f5fffa', rgb: '245,255,250' },\n    Azure: { hex: 'f0ffff', rgb: '240,255,255' },\n    AliceBlue: { hex: 'f0f8ff', rgb: '240,248,255' },\n    GhostWhite: { hex: 'f8f8ff', rgb: '248,248,255' },\n    WhiteSmoke: { hex: 'f5f5f5', rgb: '245,245,245' },\n    Seashell: { hex: 'fff5ee', rgb: '255,245,238' },\n    Beige: { hex: 'f5f5dc', rgb: '245,245,220' },\n    OldLace: { hex: 'fdf5e6', rgb: '253,245,230' },\n    FloralWhite: { hex: 'fffaf0', rgb: '255,250,240' },\n    Ivory: { hex: 'fffff0', rgb: '255,255,240' },\n    AntiqueWhite: { hex: 'faebd7', rgb: '250,235,215' },\n    Linen: { hex: 'faf0e6', rgb: '250,240,230' },\n    LavenderBlush: { hex: 'fff0f5', rgb: '255,240,245' },\n    MistyRose: { hex: 'ffe4e1', rgb: '255,228,225' },\n    Gainsboro: { hex: 'dcdcdc', rgb: '220,220,220' },\n    LightGray: { hex: 'd3d3d3', rgb: '211,211,211' },\n    Silver: { hex: 'c0c0c0', rgb: '192,192,192' },\n    DarkGrey: { hex: 'a9a9a9', rgb: '169,169,169' },\n    Grey: { hex: '808080', rgb: '128,128,128' },\n    DimGrey: { hex: '696969', rgb: '105,105,105' },\n    LightSlateGrey: { hex: '778899', rgb: '119,136,153' },\n    SlateGrey: { hex: '708090', rgb: '112,128,144' },\n    DarkSlateGrey: { hex: '2f4f4f', rgb: '47,79,79' },\n    Black: { hex: '000000', rgb: '0,0,0' }\n};\n","import {\n    LINEAR\n} from '../enums/constants';\n/**\n * Set of default colors\n */\nexport const palette = [\n    '#086bb6',\n    '#f37d45',\n    '#f5ce02',\n    '#67bda0',\n    '#c54e4e',\n    '#ae70af'\n];\n\nexport const DEFAULT_GRADIENT_COLOR = '#eaeaea';\n\nexport const DEFAULT_CONFIG = {\n    range: palette,\n    value: palette[0],\n    step: false,\n    stops: 5,\n    type: LINEAR\n};\n","import { mergeRecursive, detectColor, hexToHsv, rgbToHsv } from 'muze-utils';\nimport { x11Colors } from './color-maps';\nimport { palette, DEFAULT_GRADIENT_COLOR } from './defaults';\nimport { LINEAR, RGB, HEX, HSL, HSLA } from '../enums/constants';\n\nexport const getHslString = hslArr => `hsla(${hslArr[0] * 360},${hslArr[1] * 100}%,${hslArr[2] * 100}%,\\\n${hslArr[3] || 1})`;\n\nexport const convertToXllString = baseString => (baseString.split(' ') || [])\n                .reduce((x, e) => `${x}${e.charAt(0).toUpperCase()}${e.slice(1)}`, '');\n\nexport const getActualHslColor = (e, paletteColor) => {\n    let color = '';\n    if (typeof e === 'string') {\n        e = e.replace(/ /g, '');\n        e = e.toLowerCase();\n        if (detectColor(e) === HSL || detectColor(e) === HSLA) {\n            color = e.match(/(\\d+(\\.\\d+)?)/g);\n            color = [color[0] / 360, color[1] / 100, color[2] / 100, color[3] || 1];\n        } else if (detectColor(e) === HEX) {\n            color = hexToHsv(e);\n        } else if (detectColor(e) === RGB) {\n            const col = e.substring(e.indexOf('(') + 1, e.lastIndexOf(')')).split(/,\\s*/);\n            color = rgbToHsv(...col);\n        } else if (x11Colors[convertToXllString(e)]) {\n            color = rgbToHsv(...x11Colors[convertToXllString(e)].rgb.split(','));\n        }\n    } else if (!(e instanceof Array)) {\n        color = rgbToHsv(paletteColor);\n    } else {\n        color = e;\n    }\n    return color;\n};\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => {\n            const defCon = mergeRecursive({}, context.constructor.defaultConfig());\n            if (config.type === LINEAR) {\n                config.range = config.range || [defCon.range[0]];\n                config.range = config.range.length > 1 ? config.range : [DEFAULT_GRADIENT_COLOR, ...config.range];\n            }\n            const oldConfig = mergeRecursive(defCon, context.config());\n            const newConfig = mergeRecursive(oldConfig, config);\n\n            if (newConfig.range instanceof Array) {\n                newConfig.range = newConfig.range.map((e, i) => getActualHslColor(e, palette[i]));\n                newConfig.stops = config.stops || newConfig.range.length;\n            }\n            newConfig.value = getActualHslColor(newConfig.value, newConfig.value);\n            return newConfig;\n        }\n    },\n    domain: {},\n    scale: {},\n    uniqueValues: {}\n};\n","import { numberInterpolator, piecewiseInterpolator, hslInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, SEQUENTIAL, ORDINAL, QUANTILE } from '../enums/scale-type';\nimport { getHslString } from './props';\n\nconst getStops = (domain, stops) => {\n    let newStops = [];\n\n    if (stops instanceof Array) {\n        newStops = stops.slice().sort();\n        newStops = [...new Set([domain[0], ...stops, domain[1]])].sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i <= stops; i++) {\n            newStops[i] = interpolator(i / stops);\n        }\n    }\n\n    if (newStops[0] < domain[0]) {\n        newStops.shift();\n    }\n    return { domain, newStops };\n};\n\nconst rangeStops = (newStopsLength, range) => {\n    let newRange = [];\n    const maxRangeLength = Math.min(range.length, 18);\n\n    if (newStopsLength > maxRangeLength) {\n        const interpolator = piecewiseInterpolator()(hslInterpolator(), range.map(e => getHslString(e)));\n        for (let i = 0; i < newStopsLength; i++) {\n            newRange[i] = interpolator(i / (newStopsLength - 1));\n        }\n    } else {\n        newRange = range.slice(0, newStopsLength);\n    }\n    return { newRange };\n};\n\n/**\n*\n*\n* @param {*} domain\n*\n*/\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomainMeasure = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { domain, uniqueVals, scaleDomain: [0, 1], range };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain, nice: true, range };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} stops\n *\n */\nconst steppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, stops);\n    const { newRange } = rangeStops(newStops.length - 1, range);\n\n    return { uniqueVals, domain: newStops, nice: true, range: newRange };\n};\n\nconst continousSteppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, range.length - 1);\n    const hslRange = range.map(e => getHslString(e));\n    return { uniqueVals, domain: newStops, nice: true, range: hslRange };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst uniqueRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst indexedRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale) => scale(domainValue);\n\n/**\n *\n *\n * @param {*} stops\n */\nconst strategies = () => ({\n    [`${CONTINOUS}-${CONTINOUS}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomain,\n        value: () => uniqueRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${ORDINAL}`]: {\n        scale: ORDINAL,\n        domainRange: () => normalDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}-${ORDINAL}`]: {\n        scale: LINEAR,\n        domainRange: () => continousSteppedDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${ORDINAL}`]: {\n        scale: QUANTILE,\n        domainRange: () => steppedDomain,\n        value: () => normalRange\n\n    }\n});\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} stops\n */\nexport const strategyGetter = (domainType, rangeType, schemeType, stops) =>\n     strategies(stops)[`${domainType}-${rangeType}-${schemeType || ''}`];\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters, rgbToHsv } from 'muze-utils';\nimport { createScale, getScheme, getSchemeType } from '../scale-creator';\nimport { CONTINOUS, DISCRETE, COLOR } from '../enums/constants';\nimport { strategyGetter } from './color-strategy';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { PROPS, getHslString } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ColorAxis {\n\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} config input parameters.\n    * @param {Object | undefined} params.range Type of color range.\n    * @param {string} params.name the label to show on axis.\n    * @param {string} params.type The type of scale to handle.\n    * @memberof ColorAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n        this.config(config);\n\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = (this._config.type === 'linear' && !this._config.step) ? CONTINOUS : DISCRETE;\n\n        this._schemeType = getSchemeType(this._config.range);\n\n        this._colorStrategy = this.setColorStrategy(this._domainType, this._rangeType, this._schemeType);\n        this._scale = this.createScale(this._colorStrategy);\n\n        this._id = getUniqueId();\n\n        this.updateDomain(config.domain);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return COLOR;\n    }\n\n    /**\n     *\n     *\n     * @param {*} colorStrategy\n     *\n     * @memberof ColorAxis\n     */\n    createScale (colorStrategy) {\n        const { range } = this.config();\n        if (range && typeof (range) === 'string') {\n            return getScheme(range);\n        }\n        return createScale({\n            type: colorStrategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setColorStrategy (domainType, rangeType, schemeType) {\n        const { stops } = this.config();\n\n        return strategyGetter(domainType, rangeType, schemeType, stops);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getHslString (hslColorArray) {\n        return getHslString(hslColorArray);\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getColor (domainVal) {\n        return this.getHslString(this.getRawColor(domainVal));\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getRawColor (domainVal) {\n        if (this.domain() && domainVal !== undefined) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const color = this._colorStrategy.value(range)(domainVal, scale, this.domain(), this.uniqueValues());\n\n            if (typeof color === 'string') {\n                const col = color.substring(color.indexOf('(') + 1, color.lastIndexOf(')')).split(/,\\s*/);\n                return rgbToHsv(...col);\n            }\n            return [...color];\n        }\n        return [...this.config().value];\n    }\n\n    /**\n     *\n     *\n     * @param {*} [domain=[]]\n     *\n     * @memberof ColorAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const domainRangeFn = this._colorStrategy.domainRange();\n            const scaleInfo = domainRangeFn(domain, this.config().stops, range);\n\n            this.domain(scaleInfo.domain);\n            scaleInfo.range && this.scale().range(scaleInfo.range);\n            this.uniqueValues(scaleInfo.uniqueVals);\n            this.scale().domain(scaleInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            config: this.config()\n        };\n    }\n\n    transformColor (color, transformationArr) {\n        const h = color[0] * 360;\n        const s = color[1] * 100;\n        const l = color[2] * 100;\n        const a = color[3] || 1;\n        const newH = h + transformationArr[0];\n        const newS = s + transformationArr[1];\n        const newL = l + transformationArr[2];\n        const newA = a + transformationArr[3] || 0;\n\n        return { color: `hsla(${newH},${newS}%,${newL}%,${newA})`, hsla: [newH / 360, newS / 100, newL / 100, newA] };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n\n}\n","export const DEFAULT_CONFIG = {\n    value: 36,\n    range: [36, 1000]\n};\n","import { numberInterpolator, piecewiseInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, THRESHOLD } from '../enums/scale-type';\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} intervals\n *\n */\nconst steppedDomain = (domain, intervals) => {\n    let newIntervals = [];\n    if (intervals instanceof Array) {\n        newIntervals = intervals.slice().sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i < intervals; i++) {\n            newIntervals[i] = interpolator(i / (intervals - 1));\n        }\n    }\n    if (newIntervals[0] < domain[0]) {\n        newIntervals.shift();\n    }\n    const retDomain = newIntervals;\n    return { uniqueVals: newIntervals, domain: retDomain, nice: true };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst discreteRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n    const interpolator = numberInterpolator()(...scale.range());\n    return interpolator(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst pieceWiseRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    const fn = piecewiseInterpolator()(numberInterpolator(), [...scale.range()]);\n    return fn(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale) => scale(domainValue);\n\n/**\n *\n *\n * @param {*} intervals\n */\nconst strategies = {\n    [`${DISCRETE}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: indexedDomain,\n        range: pieceWiseRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: normalDomain,\n        range: normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}`]: {\n        scale: THRESHOLD,\n        domain: steppedDomain,\n        range: discreteRange\n    }\n};\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} intervals\n */\nexport const strategyGetter = (domainType, rangeType) =>\n     strategies[`${domainType}-${rangeType}`];\n","export const PROPS = {\n    config: {},\n    domain: {\n        sanitization: (context, value) => {\n            context.scale().domain(value);\n            return value;\n        }\n    },\n    range: {},\n    scale: {},\n    uniqueValues: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SIZE, CONTINOUS, DISCRETE } from '../enums/constants';\nimport { strategyGetter } from './size-strategy';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class SizeAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @param {Object} config input parameters.\n     * @memberof SizeAxis\n     */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig(), config);\n        // @todo: Will use configuration override using scale decorator\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = CONTINOUS;\n\n        this._sizeStrategy = this.setStrategy(this._domainType, this._rangeType);\n        this._scale = this.createScale(this._sizeStrategy);\n        this._range = this._config.range;\n\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setStrategy (domainType, rangeType) {\n        return strategyGetter(domainType, rangeType);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SizeAxis\n     */\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SIZE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof SizeAxis\n     */\n    getSize (domainVal = 0) {\n        let sizeVal = 1;\n        const {\n            value\n        } = this.config();\n        const scale = this.scale();\n        const domain = this.domain() || [1, 1];\n\n        if (!scale || domain[0] === domain[1]) {\n            sizeVal = value;\n        } else {\n            return this._sizeStrategy.range(domainVal, scale, this.domain(), this.uniqueValues());\n        }\n        return sizeVal;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SizeAxis\n     */\n    updateDomain (domain) {\n        if (domain) {\n            const domainFn = this._sizeStrategy.domain;\n\n            const domainInfo = domainFn(domain, this.config().intervals);\n\n            this.domain(domainInfo.domain);\n            this.uniqueValues(domainInfo.uniqueVals);\n\n            this.scale().domain(domainInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","export const DEFAULT_CONFIG = {\n    generator: null,\n    value: 'circle',\n    range: ['circle', 'diamond', 'star', 'cross', 'square', 'wye', 'triangle']\n};\n","export const PROPS = {\n    config: {},\n    domain: {},\n    scale: {},\n    uniqueValues: {},\n    generator: {}\n};\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, getSymbol, generateGetterSetters, mergeRecursive } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SHAPE } from '../enums/constants';\nimport { shapeGenerator } from './helper';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ShapeAxis {\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} params input parameters.\n    * @param {Object | undefined} params.range Type of color scheme.\n    * @memberof ShapeAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(this._config, config);\n\n        this._scale = createScale({\n            type: 'ordinal',\n            range: this._config.range\n        });\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SHAPE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} value\n     *\n     * @memberof ShapeAxis\n     */\n    getShape (value) {\n        if (!this.scale() || !this.domain() || !value) {\n            return this.config().value;\n        }\n\n        if (this._generatedShapes) {\n            return this._generatedShapes[value];\n        }\n\n        const shapeType = this.scale()(value);\n        if (shapeType === 'string') {\n            return getSymbol(shapeType);\n        }\n\n        return shapeType;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof ShapeAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            this.uniqueValues(domain);\n            this.domain(domain);\n            this.scale().domain(domain);\n\n            if (this.config().generator) {\n                this._generatedShapes = shapeGenerator(domain, this.config().generator);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.config().range,\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","/**\n *\n *\n * @param {*} domain\n * @param {*} generatorFn\n *\n */\nexport const shapeGenerator = (domain, generatorFn) => {\n    const generatedShapes = {};\n    domain.forEach((value) => {\n        generatedShapes[value] = generatorFn(value);\n    });\n    return generatedShapes;\n};\n","import * as ScaleType from './enums/scale-type';\n\nconst DATA_TYPES = {\n    DIMENSION: 'dimension',\n    CATEGORICAL: 'categorical',\n    MEASURE: 'measure',\n    TEMPORAL: 'temporal'\n};\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    [DATA_TYPES.DIMENSION]: ScaleType.BAND,\n    [DATA_TYPES.MEASURE]: ScaleType.LINEAR,\n    [DATA_TYPES.TEMPORAL]: ScaleType.TIME\n};\n\n","import { nestCollection } from 'muze-utils';\n\n/**\n * Create multiple datasets from a single dataset by grouping the data using\n * a dimensional field.\n * @param {Array} schema Name and type of fields are stored in schema\n * @param {Array} data Data array\n * @param {Object} config Configuration object\n * @return {Array} Grouped data array\n */\nexport default (schema, data, config) => {\n    const groupBy = config.groupBy instanceof Array ? config.groupBy : [config.groupBy];\n    const groupByIndices = groupBy.map(fieldName => schema.findIndex(d => d.name === fieldName));\n\n    if (groupByIndices.find(d => d === -1) !== undefined) {\n        throw new Error(`Groupby field ${groupBy} not found in schema`);\n    }\n\n    return nestCollection({\n        keys: groupByIndices,\n        data\n    });\n};\n","/**\n * @module Transform\n * This file exports a function that is used to implement\n * the identity transform\n */\n /* eslint no-unused-vars: 0 */\n /**\n  * This function accepts data and returns the data unchanged.\n  * @param {Object} schema The schema.\n  * @param {Array} data The data array.\n  * @param {Object} config The config object.\n  * @return {Array} The unchanged data.\n  */\n function identityTransform (schema, data, config) {\n     return data;\n }\n\n export default identityTransform;\n","/**\n * @module Transform\n * This file exports the transform factory.\n */\nimport * as TransformType from '../enums/transform-type';\nimport identity from '../identity-transform';\nimport group from '../group-transform';\nimport stack from '../stack-transform';\n\n/* istanbul ignore next */\nconst transformMap = {\n    [TransformType.IDENTITY]: identity,\n    [TransformType.GROUP]: group,\n    [TransformType.STACK]: stack\n};\n\n/**\n * This function is used to retirn a transform associated\n * with the given type.\n *\n * @param {string} type The type of the transform.\n * @return {Function} The transform function.\n */\nfunction transformFactory (type) {\n    const transform = transformMap[type];\n    if (typeof transform !== 'function') {\n        throw new Error('Invalid transform type supplied.');\n    }\n    return transform;\n}\n\nexport default transformFactory;\n","/**\n * @module Transform\n * This module exports constants that are used to reference transforms in\n * a consistent manner throughout the project.\n */\n/* eslint one-var: 0 */\n export const IDENTITY = 'identity';\n export const GROUP = 'group';\n export const STACK = 'stack';\n export const FRACTURE = 'fracture';\n","import { stack } from 'muze-utils';\n\nimport group from '../group-transform';\n/*\n    Normalize the data to a form which can be given to d3 stack for stacking the data\n    ['Product', 'Sales', 'Region'],\n    0 ['A', 2000, 'North'],\n    1 ['A', 3000, 'South'],\n    2 ['B', 3000, 'South'],\n    3 ['B', 2000, 'North'],\n    4 ['C', 3000, 'South'],\n    5 ['C', 2000, 'North']\n            |\n            |\n    ['Product', 'North', 'South'],\n    ['A', 2000, 3000],\n    ['B', 2000, 3000],\n    ['C', 2000, 3000]\n*/\n// eslint-disable-next-line require-jsdoc\nconst normalizeData = (data, schema, valueField, uniqueField, groupBy) => {\n    const groupedData = group(schema, data, {\n        groupBy: uniqueField\n    });\n    const uniqueFieldIndex = schema.findIndex(d => d.name === uniqueField);\n    const valueFieldIndex = schema.findIndex(d => d.name === valueField);\n    const seriesKeyIndex = schema.findIndex(d => d.name === groupBy);\n    const seriesKeys = data.map(d => d[seriesKeyIndex]).filter((item, pos, arr) => arr.indexOf(item) === pos).sort();\n    const fieldNames = schema.reduce((acc, obj, i) => {\n        acc[i] = obj.name;\n        return acc;\n    }, {});\n    const dataArr = groupedData.map((arr) => {\n        const tuples = {};\n        const rowObj = arr.values.reduce((acc, row) => {\n            acc = row.reduce((obj, value, i) => {\n                if (i === seriesKeyIndex) {\n                    obj[value] = row[valueFieldIndex];\n                    tuples[value] = row;\n                } else if (i !== valueFieldIndex) {\n                    obj[fieldNames[i]] = value;\n                }\n                return obj;\n            }, acc);\n            return acc;\n        }, {});\n        rowObj._tuple = tuples;\n            // Set missing values field to zero value\n        seriesKeys.forEach((seriesKey) => {\n            if (rowObj[seriesKey] === undefined) {\n                rowObj[seriesKey] = 0;\n                const newArr = new Array(arr.values[0].length);\n                newArr[uniqueFieldIndex] = arr.key;\n                newArr[seriesKeyIndex] = seriesKey;\n                rowObj._tuple[seriesKey] = newArr;\n            }\n        });\n        return rowObj;\n    });\n\n    return {\n        data: dataArr,\n        keys: seriesKeys\n    };\n};\n/**\n * Generate a stacked representation of data\n * @param {Array} schema schema Array\n * @param {Array} data data array\n * @param {Object} config Configuration object\n * @return {Array} stacked data\n */\nexport default (schema, data, config) => {\n    const uniqueField = config.uniqueField;\n    const valueField = config.value;\n    const groupBy = config.groupBy;\n    const sort = config.sort || 'descending';\n    const normalizedData = normalizeData(data, schema, valueField, uniqueField, groupBy);\n    const keys = normalizedData.keys;\n    const map = {};\n    const orderBy = config.orderBy;\n    const orderIndex = schema.findIndex(d => d.name === orderBy);\n    const groupByIndex = schema.findIndex(d => d.name === groupBy);\n    if (orderIndex !== -1) {\n        keys.forEach((key) => {\n            const name = data.find(d => d[groupByIndex] === key);\n            map[key] = name[orderIndex];\n        });\n        normalizedData.keys.sort((a, b) => map[a].localeCompare(map[b]));\n    }\n\n    const stackData = stack({\n        keys: normalizedData.keys,\n        offset: config.offset || 'diverging',\n        order: sort,\n        data: normalizedData.data\n    });\n    stackData.forEach((seriesData) => {\n        seriesData.forEach((dataObj) => {\n            dataObj.data = dataObj.data._tuple[seriesData.key];\n        });\n    });\n    return stackData;\n};\n\n","import {\n    FieldType,\n    getDomainFromData,\n    setStyles,\n    easeFns,\n    selectElement,\n    DimensionSubtype,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { transformFactory } from '@chartshq/transform';\nimport { IDENTITY, STACK, GROUP, COLOR, SHAPE, SIZE, ENCODING } from '../enums/constants';\n\nconst BAND = ScaleType.BAND;\n\nexport const getLayerColor = ({ datum, index }, { colorEncoding, colorAxis, colorFieldIndex }) => {\n    let rawColor = '';\n    let color = '';\n    if (colorEncoding && colorEncoding.value instanceof Function) {\n        color = colorEncoding.value(datum, index);\n        rawColor = colorEncoding.value(datum, index);\n    } else {\n        rawColor = colorAxis.getRawColor(datum._data[colorFieldIndex]);\n        color = colorAxis.getHslString(rawColor);\n    }\n    return { color, rawColor };\n};\n\nconst transfromColor = (colorAxis, datum, styleType, intensity) => {\n    datum.meta.stateColor[styleType] = datum.meta.stateColor[styleType] || datum.meta.originalColor;\n    const fillColorInfo = colorAxis.transformColor(datum.meta.stateColor[styleType], intensity);\n    datum.meta.stateColor[styleType] = fillColorInfo.hsla;\n\n    return fillColorInfo;\n};\n\nexport const applyInteractionStyle = (context, selectionSet, interactionStyles, config) => {\n    const elements = context.getPlotElementsFromSet(selectionSet);\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const apply = config.apply;\n    const interactionType = config.interactionType;\n    interactionStyles.forEach((style) => {\n        const styleType = style.type;\n        elements.style(styleType, ((d) => {\n            const { colorTransform, stateColor, originalColor } = d.meta;\n            colorTransform[interactionType] = colorTransform[interactionType] || {};\n            if (apply && !colorTransform[interactionType][styleType]) {\n                // fade selections\n                colorTransform[interactionType][styleType] = style.intensity;\n                const color = transfromColor(colorAxis, d, styleType, style.intensity).color;\n                return color;\n            }\n            if (!apply && colorTransform[interactionType][styleType]) {\n                 // unfade selections\n                colorTransform[interactionType][styleType] = null;\n                return transfromColor(colorAxis, d, styleType, style.intensity.map(e => -e)).color;\n            }\n            const [h, s, l, a] = stateColor[styleType] ? stateColor[styleType] : originalColor;\n            return `hsla(${h * 360},${s * 100}%,${l * 100}%, ${a || 1})`;\n        }));\n    });\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const fadeUnfadeSelection = (context, selectionSet, hasFaded, interaction) => {\n    const interactionConfig = { interaction, apply: hasFaded };\n    applyInteractionStyle(context, selectionSet, 'fade', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const focusUnfocusSelection = (context, selectionSet, isFocussed, interaction) => {\n    const interactionConfig = { interaction, apply: isFocussed };\n    applyInteractionStyle(context, selectionSet, 'focus', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} axes\n *\n */\nexport const getAxesScales = (axes) => {\n    const [xAxis, yAxis] = [ENCODING.X, ENCODING.Y].map(e => axes[e]);\n    const [xScale, yScale] = [xAxis, yAxis].map(e => e && e.scale());\n    return {\n        xAxis,\n        yAxis,\n        xScale,\n        yScale\n    };\n};\n\n/**\n *\n *\n * @param {*} encoding\n * @param {*} fieldsConfig\n *\n */\nexport const getEncodingFieldInf = (encoding, fieldsConfig) => {\n    const [xField, yField, x0Field, y0Field, colorField, shapeField, sizeField] =\n        [ENCODING.X, ENCODING.Y, ENCODING.X0, ENCODING.Y0, COLOR, SHAPE, SIZE].map(e => encoding[e] &&\n            encoding[e].field);\n\n    const [xFieldType, yFieldType] = [xField, yField, x0Field, y0Field].map(e => fieldsConfig[e] &&\n        fieldsConfig[e].def.type);\n\n    const [xFieldSubType, yFieldSubType] = [xField, yField].map(e => fieldsConfig[e] && (fieldsConfig[e].def.subtype ||\n        fieldsConfig[e].def.type));\n\n    const [xFieldIndex, yFieldIndex, x0FieldIndex, y0FieldIndex] = [xField, yField, x0Field, y0Field]\n        .map(e => fieldsConfig[e] && fieldsConfig[e].index);\n\n    return {\n        xField,\n        yField,\n        colorField,\n        shapeField,\n        sizeField,\n        x0Field,\n        y0Field,\n        xFieldType,\n        yFieldType,\n        xFieldSubType,\n        yFieldSubType,\n        xFieldIndex,\n        yFieldIndex,\n        x0FieldIndex,\n        y0FieldIndex\n    };\n};\n\n/**\n *\n *\n * @param {*} layerConfig\n * @param {*} fieldsConfig\n *\n */\nexport const getValidTransform = (layerConfig, fieldsConfig, encodingFieldInf) => {\n    let transformType;\n    const {\n        transform\n    } = layerConfig;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const groupByField = transform.groupBy;\n    const groupByFieldMeasure = fieldsConfig[groupByField] && fieldsConfig[groupByField].def.type === FieldType.MEASURE;\n    transformType = transform.type;\n    if (!xField || !yField || groupByFieldMeasure || !groupByField || xFieldType === FieldType.DIMENSION &&\n        yFieldType === FieldType.DIMENSION) {\n        transformType = IDENTITY;\n    }\n    return transformType;\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} config\n * @param {*} transformType\n *\n */\nexport const transformData = (dataModel, config, transformType, encodingFieldInf) => {\n    const data = dataModel.getData({ withUid: true });\n    const schema = data.schema;\n    const transform = config.transform;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const uniqueField = xFieldType === FieldType.MEASURE ? yField : xField;\n\n    return transformFactory(transformType)(schema, data.data, {\n        groupBy: transform.groupBy,\n        uniqueField,\n        sort: transform.sort || 'none',\n        offset: transform.offset,\n        orderBy: transform.orderBy,\n        value: yFieldType === FieldType.MEASURE ? yField : xField\n    }, data.uids);\n};\n\nexport const getIndividualClassName = (d, i, data, context) => {\n    const className = context.config().individualClassName;\n    let classNameStr = '';\n    if (className instanceof Function) {\n        classNameStr = className(d, i, data, context);\n    }\n    return classNameStr;\n};\n\n/*\n * This method resolves the x, y, x0 and y0 values from the transformed data.\n * It also checks the type of transformed data for example, if it is a stacked data\n * then it fetches the y and y0 values from the stacked data.\n * @param {Array.<Array>} transformedData transformed data\n * @param {Object} fieldsConfig field definitions\n * @param {string} transformType type of transformed data - stack, group or identity.\n * @return {Array.<Object>} Normalized data\n*/\nexport const getNormalizedData = (transformedData, fieldsConfig, encodingFieldInf, transformType) => {\n    const transformedDataArr = transformType === IDENTITY ? [transformedData] : transformedData;\n    const {\n        xFieldType,\n        xFieldIndex,\n        yFieldIndex,\n        x0FieldIndex,\n        y0FieldIndex\n    } = encodingFieldInf;\n    const fieldsLen = Object.keys(fieldsConfig).length;\n    /**\n     * Returns normalized data from transformed data. It recursively traverses through\n     * the transformed data if there it is nested.\n     */\n    return transformedDataArr.map((data) => {\n        const values = transformType === GROUP ? data.values : data;\n        return values.map((d) => {\n            let pointObj = {};\n            let tuple;\n            if (transformType === STACK) {\n                tuple = d.data || [];\n                let y;\n                let y0;\n                let x;\n                let x0;\n                if (d[1] >= d[0]) {\n                    y = x0 = d[1];\n                    x = y0 = d[0];\n                } else {\n                    y = x0 = d[0];\n                    x = y0 = d[1];\n                }\n\n                pointObj = xFieldType === FieldType.MEASURE ? {\n                    x,\n                    x0,\n                    y: tuple[yFieldIndex],\n                    y0: tuple[yFieldIndex]\n                } : {\n                    x: tuple[xFieldIndex],\n                    x0: tuple[xFieldIndex],\n                    y,\n                    y0\n                };\n                pointObj._data = tuple;\n                pointObj._id = tuple[fieldsLen];\n            } else {\n                pointObj = {\n                    x: d[xFieldIndex],\n                    y: d[yFieldIndex],\n                    x0: d[x0FieldIndex],\n                    y0: d[y0FieldIndex]\n                };\n                pointObj._data = d;\n                pointObj._id = d[fieldsLen];\n            }\n            return pointObj;\n        });\n    }).filter(d => d.length);\n};\n\nexport const calculateDomainFromData = (data, encodingFieldInf, transformType) => {\n    const {\n        xFieldSubType,\n        yFieldSubType,\n        xField,\n        yField,\n        x0Field,\n        y0Field\n    } = encodingFieldInf;\n    const domains = {};\n    const yEnc = ENCODING.Y;\n    const xEnc = ENCODING.X;\n    if (xField) {\n        domains.x = getDomainFromData(data, x0Field || transformType === STACK ? [xEnc, ENCODING.X0] : [xEnc, xEnc],\n            xFieldSubType);\n    }\n    if (yField) {\n        domains.y = getDomainFromData(data, y0Field || transformType === STACK ? [ENCODING.Y0, ENCODING.Y] :\n            [yEnc, yEnc], yFieldSubType);\n    }\n\n    return domains;\n};\n\nexport const attachDataToVoronoi = (voronoi, points) => {\n    voronoi.data([].concat(...points).filter(d => d._id !== undefined).map((d) => {\n        const point = d.update;\n        return {\n            x: point.x,\n            y: point.y,\n            data: d\n        };\n    }));\n};\n\n/**\n *\n *\n * @param {*} target\n * @param {*} styles\n * @param {*} remove\n */\nexport const updateStyle = (target, styles, remove) => {\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            target.style(key, remove ? null : styles[key]);\n        }\n    }\n};\n\n/**\n *\n *\n * @param {*} mount\n * @param {*} context\n */\nexport const animateGroup = (mount, context) => {\n    let groupTransition;\n    let update;\n    const { transition, groupAnimateStyle } = context;\n    const { duration, effect, disabled } = transition;\n    if (groupAnimateStyle) {\n        setStyles(mount.node(), groupAnimateStyle.enter);\n        update = groupAnimateStyle.update;\n        if (!disabled) {\n            groupTransition = mount.transition()\n                .ease(easeFns[effect])\n                .duration(duration)\n                .on('end', function () {\n                    updateStyle(selectElement(this), update, true);\n                });\n        } else {\n            groupTransition = mount;\n        }\n        updateStyle(groupTransition, update);\n    }\n};\n\nexport const positionPoints = (context, points) => {\n    const positioner = context.encodingTransform();\n    if (positioner) {\n        return positioner(points, context, { smartLabel: context._dependencies.smartLabel });\n    }\n    return points;\n};\n\n/**\n  * Gets the width of each group. It gets the width from axis if it is available for\n  * example when the scale is nominal else it calculates the width from the\n  * range of the axis and number of data points.\n  *\n  * @param {SimpleAxis} axis instance of axis\n  * @param {number} minDiff Minimum difference between data points\n  * @return {number} width of each bar\n  * @private\n*/\nexport const getGroupSpan = (axis, minDiff) => {\n    let groupSpan;\n    const width = axis.getUnitWidth();\n    const scale = axis.scale();\n    const range = scale.range();\n    const domain = scale.domain();\n    !width ? groupSpan = (Math.abs(range[1] - range[0]) / Math.abs(domain[1] - domain[0])) * minDiff :\n        (groupSpan = width);\n\n    return groupSpan;\n};\n\nexport const getPlotMeasurement = (context, dimensionalValues) => {\n    const fieldInfo = context.encodingFieldsInf();\n    const axes = context.axes();\n    const transformType = context.transformType();\n    const config = context.config();\n    const bandScale = context._bandScale;\n\n    return ['x', 'y'].map((type) => {\n        let span = 0;\n        let groupSpan = 0;\n        let padding = 0;\n        let offsetValues = [];\n        if (fieldInfo[`${type}FieldType`] === FieldType.DIMENSION) {\n            let actualGroupWidth;\n            const isTemporal = fieldInfo[`${type}FieldSubType`] === DimensionSubtype.TEMPORAL;\n            const timeDiff = isTemporal ? context.dataProps().timeDiffs[type] : 0;\n            const axis = axes[type];\n            const pad = config[`pad${type.toUpperCase()}`];\n            const innerPadding = config.innerPadding;\n            const keys = dimensionalValues;\n            const scale = axis.scale();\n            groupSpan = getGroupSpan(axis, timeDiff);\n            const isAxisBandScale = axis.constructor.type() === BAND;\n            const axisPadding = axis.config().padding;\n            // If it is a grouped bar then the width of each bar in a grouping is retrieved from\n            // a band scale. The band scale will have range equal to width of one group of bars and\n            // the domain is set to series keys.\n            if (transformType === 'group') {\n                const groupPadding = isAxisBandScale ? 0 : axisPadding * groupSpan / 2;\n                bandScale.range([groupPadding, groupSpan - groupPadding]).domain(keys).paddingInner(innerPadding);\n                span = bandScale.bandwidth();\n                actualGroupWidth = groupSpan - (isAxisBandScale ? 0 : axisPadding * groupSpan);\n                offsetValues = keys.map(key => bandScale(key) - (isAxisBandScale ? 0 : (groupSpan / 2)));\n            } else if (pad !== undefined) {\n                let offset;\n                if (isAxisBandScale) {\n                    const step = scale.step();\n                    offset = scale.padding() * step;\n                    span = scale.bandwidth() + offset;\n                } else {\n                    span = groupSpan;\n                }\n                offsetValues = keys.map(() => (isAxisBandScale ? -(offset / 2) : -(span / 2)));\n            } else {\n                padding = isAxisBandScale ? 0 : axisPadding * groupSpan;\n                span = groupSpan - padding;\n                actualGroupWidth = span;\n                offsetValues = keys.map(() => (isAxisBandScale ? 0 : -(span / 2)));\n            }\n\n            groupSpan = actualGroupWidth;\n            padding = isAxisBandScale ? axisPadding * axis.scale().step() : axisPadding * groupSpan;\n        }\n\n        return {\n            span,\n            offsetValues,\n            groupSpan,\n            padding\n        };\n    });\n};\n\nexport const initializeGlobalState = (context) => {\n    const store = context.store();\n    const globalState = context.constructor.getState()[0];\n    const namespace = context.metaInf().namespace;\n    for (const prop in globalState) {\n        store.append(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${prop}`, {\n            [namespace]: null\n        });\n    }\n};\n","import { CommonProps, STATE_NAMESPACES } from 'muze-utils';\nimport { getValidTransform, getEncodingFieldInf } from '../helpers';\nimport * as PROPS from '../enums/props';\n\nconst renderLayer = (context) => {\n    const mount = context.mount();\n    if (mount) {\n        context.render(mount);\n        context.dependencies().throwback.commit(CommonProps.ON_LAYER_DRAW, true);\n    }\n};\n\nexport const listenerMap = (context, ns) => [\n    {\n        props: [`${ns.local}.${PROPS.DATA}`],\n        listener: ([, data]) => {\n            const config = context.config();\n            const encodingValue = config.encoding;\n            if (data && encodingValue) {\n                const fieldsConfig = data.getFieldsConfig();\n                const encodingFieldsInf = getEncodingFieldInf(encodingValue, fieldsConfig);\n                context.encodingFieldsInf(encodingFieldsInf);\n                context.transformType(getValidTransform(config, fieldsConfig, encodingFieldsInf));\n                context._transformedData = context.getTransformedData(data, config,\n                    context.transformType(), encodingFieldsInf);\n                context._normalizedData = context.getNormalizedData(context._transformedData, fieldsConfig);\n                const domain = context.calculateDomainFromData(context._normalizedData, context.encodingFieldsInf(),\n                    context.data().getFieldsConfig());\n                context._domain = domain;\n                !context._updateLock && context.domain(domain);\n            }\n        },\n        type: 'registerImmediateListener'\n    },\n    {\n        props: [`${ns.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            const calculateDomain = config.calculateDomain;\n            const props = context.getRenderProps();\n            const store = context.store();\n            const namespaceInf = {\n                namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${context.metaInf().namespace}`,\n                key: 'renderListener'\n            };\n            store.unsubscribe(namespaceInf);\n            if (calculateDomain === false) {\n                props.push(`${ns.local}.${PROPS.DATA}`);\n            }\n            store.registerChangeListener(props,\n                () => {\n                    renderLayer(context);\n                }, false, namespaceInf);\n        },\n        type: 'registerImmediateListener'\n    }\n];\n\n","export const DATA = 'data';\nexport const CONFIG = 'config';\nexport const MEASUREMENT = 'measurement';\nexport const DOMAIN = 'domain';\nexport const MOUNT = 'mount';\n","import { mergeRecursive } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nexport const defaultOptions = {\n    [PROPS.CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig, context) => {\n                const constructor = context.constructor;\n                const newConf = mergeRecursive({}, constructor.defaultConfig());\n                return constructor.defaultPolicy(newConf, config);\n            }\n        }\n    },\n    [PROPS.DATA]: {\n        value: null,\n        meta: {\n            preset: (data, context) => {\n                if (context._cacheEnabled) {\n                    context._cachedData.push(data);\n                } else {\n                    context._cachedData = [data];\n                }\n            }\n        }\n    }\n    // [PROPS.MOUNT]: {\n    //     value: null\n    // },\n    // [PROPS.AXES]: {\n    //     value: null\n    // },\n    // [PROPS.MEASUREMENT]: {\n    //     value: null\n    // }\n};\n","import {\n    getUniqueId,\n    mergeRecursive,\n    FieldType,\n    selectElement,\n    ReservedFields,\n    registerListeners,\n    transactor,\n    DataModel,\n    clone,\n    generateGetterSetters,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { SimpleLayer } from '../simple-layer';\nimport * as PROPS from '../enums/props';\nimport { props } from './props';\nimport {\n    transformData,\n    calculateDomainFromData,\n    getNormalizedData,\n    applyInteractionStyle,\n    initializeGlobalState\n} from '../helpers';\nimport { listenerMap } from './listener-map';\nimport { defaultOptions } from './default-options';\n\n/**\n * An abstract class which gives definition of common layer functionality like\n * - transforming data for various modes. Supported modes: identity, group and stack.\n * - calculating data domain\n * - linking dependent layers\n * - merging policy of configuration\n * - interaction sideffect helpers\n * - retrieving dom elements from data using id\n * - retrieving the physical dimensions of marks\n * - disposing layer\n *\n * Every layer has to extend base layer and give concrete definition.\n * This layer does not have any default visual. A new layer has to define the logic of `render` for rendering the\n * visuals\n *\n * @public\n * @class\n * @module BaseLayer\n */\nexport default class BaseLayer extends SimpleLayer {\n\n    /**\n     * Creates a layer using a configuration and data.\n     *\n     * @public\n     * @constructor\n     * @param {DataModel} data Instance of DataModel to be used. This DataModel instance serves as the data for a layer.\n     * @param {Object} axes Axes instances to be used for rendering the layer. Axes are used for mapping data from\n     *      value to px.\n     * @param {SimpleAxis} axes.x X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {SimpleAxis} axes.y X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {ColorAxis} axes.color Axis for coloring a layer using color interpolators\n     * @param {ShapeAxis} axes.shape Axis for providing a shape\n     * @param {SizeAxis} axes.size Axis for determining size of a mark using size interpolator\n     * @param {LayerConfig} config Configuration of the layer\n     * @param {Object} dependencies Dependencies of the layer\n     * @param {SmartLabel} dependencies.smartLabel Smartlabel singleton instance\n     */\n    constructor (data, axes, config, dependencies = {}) {\n        super();\n\n        generateGetterSetters(this, props);\n        this.data(data);\n        this.axes(axes);\n        this.config(config);\n        this.alias(this.constructor.formalName() + getUniqueId());\n        this.dependencies(dependencies);\n        this._points = [];\n        this._cachedData = [];\n        this._id = getUniqueId();\n        this._measurement = {};\n        this._animationDonePromises = [];\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            {\n                config: {},\n                data: {}\n            }\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            const localNs = `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            initializeGlobalState(this);\n            const store = this.store();\n            store.append(`${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}`, {\n                [metaInf.namespace]: null\n            });\n\n            transactor(this, defaultOptions, store.model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE\n            }, {\n                unitRowIndex: metaInf.unitRowIndex,\n                unitColIndex: metaInf.unitColIndex\n            });\n            return this;\n        }\n        return this._store;\n    }\n\n    domain (...dom) {\n        const prop = `${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`;\n        if (dom.length) {\n            this.store().commit(prop, dom[0]);\n            return this;\n        }\n        return this.store().get(prop);\n    }\n\n    /**\n     * Creates a layer instance\n     * @return {BaseLayer} Instance of a layer\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Default configuration of the layer. This configuration gets merged to the user passed configuration using a\n     * plolicy. Base layer only returns part of configuraion, any layer overridding base layer should return its own\n     * configuration.\n     *\n     * @public\n     * @static\n     *\n     * @return {Object} Default configuration\n     */\n    static defaultConfig () {\n        return {\n            transform: {\n                type: 'identity'\n            }\n        };\n    }\n\n    /**\n     * Policy defines how user config gets merged to default config. The default policy here does a deep copy\n     * operation.\n     * Any policy which does more than deep copying should define the policy as a static member.\n     *\n     * @static\n     * @public\n     *\n     * @param {LayerConfig} conf Configuration with which the user config will be merged\n     * @param {LayerConfig} userConf Configuration given by the user\n     *\n     * @return {LayerConfig} Merged layer configuration\n     */\n    static defaultPolicy (conf, userConf) {\n        return mergeRecursive(conf, userConf);\n    }\n\n    /**\n     * Determines a name for a layer. This name of the layer is used in the input data to refer to this layer.\n     * ```\n     *  .layers([\n     *      mark: 'bar',\n     *      encoding: { ... }\n     *  ])\n     * ```\n     *\n     * @static\n     * @public\n     *\n     * @return {string} name of layer\n     */\n    static formalName () {\n        return 'base';\n    }\n\n    encodingFieldsInf (...fieldsInf) {\n        if (fieldsInf.length) {\n            this._encodingFieldsInf = fieldsInf[0];\n            return this;\n        }\n        return this._encodingFieldsInf;\n    }\n\n    encodingTransform (...encodingTransform) {\n        if (encodingTransform.length) {\n            this._encodingTransform = encodingTransform[0];\n            return this;\n        }\n        return this._encodingTransform;\n    }\n\n    /**\n     * Provides a alias for a layer. Like it's possible to have same layer (like bar) multiple times, but among multiple\n     * layers of same type if one layer has to be referred, alias is used. If no alias is given then `formalName` is set\n     * as the alias name.\n     *\n     *\n     * If used as setter\n     * @param  {string} alias Name of the alias\n     * @return {BaseLayer} Instance of current base layer\n     *\n     * If used as getter\n     * @return {string} Alias of the current layer\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            this._alias = params[0];\n            return this;\n        }\n        return this._alias || this.constructor.formalName();\n    }\n\n    dependencies (...params) {\n        if (params.length) {\n            this._dependencies = params[0];\n            return this;\n        }\n        return this._dependencies;\n    }\n\n    enableCaching () {\n        this._cacheEnabled = true;\n        return this;\n    }\n\n    clearCaching () {\n        this._cacheEnabled = false;\n        return this.data(this._cachedData[0]);\n    }\n\n    /**\n     * Serialize the schema. Merge config is used for serialization.\n     *\n     * @public\n     *\n     * @return {LayerConfig} Serialized schema\n     */\n    serialize () {\n        return this.config();\n    }\n\n    /**\n     * Returns the unique identifier of this layer. Id is auto generated during the creation proceess of a schema.\n     *\n     * @public\n     *\n     * @return {string} id of the layer\n     */\n    id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the transformed data based on given transform type.\n     * It first gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of DataModel\n     * @param {Object} config Configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     */\n    getTransformedData (dataModel, config, transformType, encodingFieldsInf) {\n        return transformData(dataModel, config, transformType, encodingFieldsInf);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a categorical field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @param {Object} fieldsConfig Configuration of fields\n     * @return {Array} Domain values array.\n     */\n    calculateDomainFromData (data) {\n        let domains = {};\n        const isEmpty = this.data().isEmpty();\n\n        if (!isEmpty) {\n            domains = calculateDomainFromData(data, this.encodingFieldsInf(), this.transformType());\n        }\n        return domains;\n    }\n\n    static shouldDrawAnchors () {\n        return false;\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getDataDomain (encodingType) {\n        const domains = this.store()\n            .get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`);\n        return encodingType !== undefined ? domains[encodingType] || [] : domains;\n    }\n\n    /**\n     * Normalizes the transformed data and returns it.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getNormalizedData (transformedData, fieldsConfig) {\n        return getNormalizedData(transformedData, fieldsConfig, this.encodingFieldsInf(), this.transformType());\n    }\n\n    /**\n     * Gets the nearest point closest to the given x and y coordinate. If no nearest point is found, then it returns\n     * null.\n     *\n     * @public\n     *\n     * @param {number} x X Coordinate.\n     * @param {number} y Y Coordinate.\n     *\n     * @return {Object} Information of the nearest point.\n     * ```\n     *      {\n     *          // id property contains the field names and their corresponding values in a 2d array. This is the data\n     *          // associated with the nearest point.\n     *          id: // Example data: [['Origin'], ['USA']],\n     *          dimensions: // Physical dimensions of the point.\n     *          layerId: // Id of the layer instance.\n     *      }\n     * ```\n     */\n    getNearestPoint () {\n        return null;\n    }\n\n    applyInteractionStyle (interactionType, selectionSet, apply, styles) {\n        const interactionConfig = this.config().interaction || {};\n\n        let interactionStyles = interactionConfig[interactionType];\n        interactionStyles = styles || interactionStyles;\n        if (interactionStyles) {\n            applyInteractionStyle(this, selectionSet, interactionStyles, {\n                apply,\n                interactionType\n            });\n        }\n    }\n\n    disableUpdate () {\n        this._updateLock = true;\n        return this;\n    }\n\n    enableUpdate () {\n        this._updateLock = false;\n        return this;\n    }\n    /**\n     *\n     *\n     *\n     * @memberof BaseLayer\n     */\n    transformType (...transformType) {\n        if (transformType.length) {\n            this._transformType = transformType[0];\n            return this;\n        }\n        return this._transformType;\n    }\n\n    /**\n     * Renders the layer\n     * @return {BaseLayer} Instance of the layer.\n     */\n    render () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BaseLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Disposes the entire layer.\n     *\n     * @return {BaseLayer} Instance of layer.\n     */\n    remove () {\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     * Stores point in an object with key as the categorical value or temporal value\n     *\n     * @param {string} key categorical value or temporal value\n     * @param {Object} data Information of the data point\n     * @return {BarLayer} Instance of bar layer\n     */\n    cachePoint (key, data) {\n        if (key === null) {\n            return this;\n        }\n        const pointMap = this._pointMap;\n        !pointMap[key] && (pointMap[key] = []);\n        pointMap[key].push(data);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} dataProps\n     *\n     * @memberof BaseLayer\n     */\n    dataProps (...dataProps) {\n        if (dataProps.length) {\n            this._dataProps = dataProps[0];\n            return this;\n        }\n        return this._dataProps;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} id\n     *\n     * @memberof BaseLayer\n     */\n    getIdentifiersFromData (data) {\n        const schema = this.data().getData().schema;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const identifiers = [[], []];\n        const {\n                xFieldType,\n                yFieldType,\n                xField,\n                yField\n            } = this.encodingFieldsInf();\n\n        const [xMeasure, yMeasure] = [xFieldType, yFieldType].map(type => type === FieldType.MEASURE);\n        schema.forEach((d, i) => {\n            const name = d.name;\n            if (fieldsConfig[name].def.type === FieldType.DIMENSION) {\n                identifiers[0].push(name);\n                identifiers[1].push(data[i]);\n            }\n        });\n\n        if (xMeasure && yMeasure) {\n            const xMeasureIndex = fieldsConfig[xField].index;\n            const yMeasureIndex = fieldsConfig[yField].index;\n            identifiers[0].push(...[xField, yField]);\n            identifiers[1].push(...[data[xMeasureIndex], data[yMeasureIndex]]);\n        }\n        return identifiers;\n    }\n\n    getPlotSpan () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    getPlotPadding () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    /**\n     * Returns the information of the marks corresponding to the supplied identifiers. Identifiers are a set of field\n     * names and their corresponding values in an array. It can also be an instance of datamodel.\n     *\n     * For example,\n     * ```\n     *  const identifiers = [\n     *      ['Origin', 'Cylinders'],\n     *      ['USA', '8']\n     *  ];\n     *  const points = barLayer.getPointsFromIdentifiers(identifiers);\n     * ```\n     * @public\n     * @param {Array|DataModel} identifiers Identifiers of the marks.\n     * @param {Object} config Optional configuration which describes how to get the information.\n     * @param {boolean} config.getAllAttrs If true, then returns all the information of the points, else returns only\n     * the positions of the points.\n     * @param {boolean} config.getBBox If true, then returns the bounding box of all the marks.\n     *\n     * @return {Array} Array of points contains\n     */\n    getPointsFromIdentifiers (identifiers, config = {}) {\n        const getAllAttrs = config.getAllAttrs;\n        const getBBox = config.getBBox;\n        if (!this.data()) {\n            return [];\n        }\n        let fieldNames;\n        let values;\n        if (identifiers instanceof DataModel) {\n            const dataObj = identifiers.getData();\n            fieldNames = dataObj.schema.map(d => d.name);\n            values = dataObj.data;\n        } else {\n            fieldNames = identifiers[0];\n            values = identifiers.slice(1, identifiers.length);\n        }\n\n        const points = this._points;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPoints = [].concat(...points).filter((point) => {\n            const { _data, _id } = point;\n\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === _data[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === _id) !== -1;\n                } return true;\n            });\n        });\n        return getAllAttrs ? filteredPoints : filteredPoints.map((d) => {\n            const obj = clone(d);\n            if (getBBox) {\n                const update = obj.update || obj;\n                if (obj.size !== undefined) {\n                    const sizeVal = Math.sqrt(obj.size / Math.PI) * 2;\n                    update.width = sizeVal;\n                    update.height = sizeVal;\n                    update.x -= sizeVal / 2;\n                    update.y -= sizeVal / 2;\n                } else {\n                    if (update.width === undefined) {\n                        update.width = 2;\n                    }\n                    if (update.height === undefined) {\n                        update.height = 2;\n                    }\n                }\n            }\n\n            return obj.update || obj;\n        }).sort((a, b) => a.y - b.y);\n    }\n\n    getTransformedDataFromIdentifiers (identifiers) {\n        const { data: identifierData, schema: identifierSchema } = identifiers.getData();\n        const normalizedData = this._normalizedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            yField,\n            xField,\n            yFieldType,\n            xFieldType\n        } = this.encodingFieldsInf();\n        let measureIndex;\n        let enc;\n        if (xFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[xField].index;\n            enc = 'x';\n        } else if (yFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[yField].index;\n            enc = 'y';\n        }\n\n        const transformedData = [];\n        normalizedData.forEach((dataArr) => {\n            dataArr.forEach((dataObj) => {\n                const tupleArr = dataObj._data;\n                const exist = identifierSchema.every((obj, i) =>\n                    identifierData.findIndex(d => tupleArr[fieldsConfig[obj.name].index] === d[i]) !== -1);\n                if (exist) {\n                    const transformedVal = dataObj[enc];\n                    const row = dataObj._data;\n                    const tuple = {};\n                    for (const key in fieldsConfig) {\n                        const index = fieldsConfig[key].index;\n                        tuple[key] = row[index];\n                        if (index === measureIndex) {\n                            tuple[key] = transformedVal;\n                        }\n                    }\n                    transformedData.push(tuple);\n                }\n            });\n        });\n\n        return [transformedData, this.data().getData().schema];\n    }\n\n    /**\n     * Returns the dom elements associated with the supplied set of row ids.\n     * Each element in the layer is mapped with a row of the datamodel. When given an array of row ids, it returns all\n     * the elements which is mapped with those row ids.\n     *\n     * @public\n     * @param {Array} set Array of row ids\n     *\n     * @return {Selection} D3 Selection of dom elements.\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(data =>\n            (data ? set.indexOf(data._id) !== -1 : false));\n    }\n\n    /**\n     * Notifies when all animations/transitions of the layer are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n\n    getRenderProps () {\n        const metaInf = this.metaInf();\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.unitRowIndex}0`,\n            `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.unitColIndex}0`];\n    }\n}\n","import {\n    selectElement,\n    makeElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\nimport { updateStyle } from '../../helpers';\n\nconst line = Symbols.line;\n\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nexport const drawLine = (context) => {\n    let filteredPoints;\n    const { layer, container, points, interpolate, connectNullData, className, style, transition } = context;\n    const mount = selectElement(container).attr('class', className);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const linepath = line()\n                .curve(curveInterpolatorFn)\n                .x(d => d.update.x)\n                .y(d => d.update.y)\n                .defined(d => d.update.y !== null);\n\n    filteredPoints = points;\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n\n    updateStyle(mount, style);\n    let element = makeElement(mount, 'path', [1]);\n    element.classed(points[0].className, true);\n    if (!transition.disabled) {\n        element = element.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    }\n    element.attr('d', linepath(filteredPoints))\n                    .style('fill-opacity', 0);\n    return element;\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-line',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: 'group'\n    },\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    nearestPointThreshold: 20,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n\n","import {\n    Voronoi,\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    FieldType,\n    getObjProp\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawLine } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    animateGroup,\n    getLayerColor,\n    positionPoints,\n    getIndividualClassName\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to render straight or smoothed line paths. The mark type of this layer is ```line```.\n *\n * @public\n *\n * @class\n * @module LineLayer\n * @extends BaseLayer\n */\nexport default class LineLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of LineLayer.\n     * @param {*} args\n     * @memberof LineLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof LineLayer\n     */\n    static formalName () {\n        return 'line';\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof LineLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Default configuration of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof LineLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField && !transform.groupBy) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     * Returns the draw method for line\n     * @return {Function} Draw method of line layer\n     */\n    getDrawFn () {\n        return drawLine;\n    }\n\n    static shouldDrawAnchors () {\n        return true;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @param {number} seriesIndex index of series\n     * @return {Array} Array of points\n     */\n    translatePoints (data, encodingFieldsInf, axes) {\n        let points = [];\n        const xAxis = axes.x;\n        const yAxis = axes.y;\n        const colorAxis = axes.color;\n        const encoding = this.config().encoding;\n        const { xFieldType, yFieldType } = encodingFieldsInf;\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const colorFieldIndex = colorField && fieldsConfig[colorField].index;\n        const style = {};\n        const meta = {};\n\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const { color, rawColor } = getLayerColor({ datum: d, index: i }, {\n                colorEncoding, colorAxis, colorFieldIndex });\n\n            style.stroke = color;\n            style['fill-opacity'] = 0;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n\n            const point = {\n                enter: {},\n                update: {\n                    x: xPx,\n                    y: d.y === null ? null : yPx\n                },\n                style,\n                _data: d._data,\n                _id: d._id,\n                rowId: d._id,\n                source: d._data,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the line plot\n     * @param {SVGElement} container svg element\n     * @return {LineLayer} instance of line layer\n     */\n    render (container) {\n        let points;\n        let seriesClassName;\n        let style;\n\n        const config = this.config();\n        const {\n            encoding,\n            interpolate,\n            className,\n            defClassName,\n            transition\n        } = config;\n        const normalizedData = this._normalizedData;\n        const transformedData = this._transformedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const keys = transformedData.map(d => d.key);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n        const colorField = encoding.color.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n        this._points = [];\n        this._pointMap = {};\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        makeElement(container, 'g', normalizedData, null, {\n            enter: (group) => {\n                animateGroup(group, {\n                    transition,\n                    groupAnimateStyle: {\n                        enter: {\n                            'stroke-opacity': 0,\n                            'fill-opacity': this.getPathStyle()['fill-opacity']\n                        },\n                        update: {\n                            'stroke-opacity': encoding.strokeOpacity.value\n                        }\n                    }\n                });\n            },\n            update: (group, dataArr, i) => {\n                points = this.translatePoints(dataArr, this.encodingFieldsInf(), axes, i);\n                this._points.push(points);\n                seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n\n                let color;\n                const colorValFn = encoding.color.value;\n                const colorVal = points.find(d => d._data[colorFieldIndex] !== null &&\n                        d._data[colorFieldIndex] !== undefined);\n\n                if (colorValFn) {\n                    color = colorValFn(dataArr, i, normalizedData);\n                } else {\n                    color = axes.color.getColor(colorVal && colorVal._data[colorFieldIndex]);\n                }\n\n                style = this.getPathStyle(color);\n                this.getDrawFn()({\n                    layer: this,\n                    container: group.node(),\n                    interpolate,\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: style || {},\n                    connectNullData: config.connectNullData\n                });\n            }\n        }, d => d[0]._data[colorFieldIndex] || d[0]._id);\n\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            stroke: color,\n            'fill-opacity': '0'\n        };\n    }\n\n    /**\n     * Gets the nearest point closest to the given position\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point information\n     */\n    getNearestPoint (x, y, config) {\n        let searchRadius = config.searchRadius;\n        const data = this.data();\n\n        if (!data || (data && data.isEmpty())) {\n            return null;\n        }\n\n        searchRadius = searchRadius !== undefined ? searchRadius : this.config().nearestPointThreshold;\n        const point = this._voronoi.find(x, y, searchRadius);\n        const dimensions = getObjProp(point, 'data', 'data', 'update');\n\n        if (point) {\n            const { _data, _id } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(_data, _id);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: 2,\n                    height: 2\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import {\n    easeFns,\n    selectElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\n\nconst area = Symbols.area;\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nconst /* istanbul ignore next */ drawArea = (params) => {\n    let filteredPoints;\n    const { layer, container, points, style, transition, className, connectNullData, interpolate } = params;\n\n    const { effect: easeEffect, duration } = transition;\n    const mount = selectElement(container);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const selection = mount.selectAll('path').data([params.points]);\n    const [enterAreaPath, updateAreaPath] = ['enter', 'update'].map(e => area().curve(curveInterpolatorFn)\n                    .x(d => d[e].x)\n                    .y1(d => d[e].y)\n                    .y0(d => d[e].y0)\n                    .defined(d => d[e].y !== null\n            ));\n\n    filteredPoints = points;\n    mount.attr('class', className);\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n    const selectionEnter = selection.enter().append('path').attr('d', enterAreaPath(filteredPoints));\n    selection.merge(selectionEnter).transition().ease(easeFns[easeEffect])\n                    .duration(duration)\n                    .on('end', layer.registerAnimationDoneHook())\n                    .attr('d', updateAreaPath(filteredPoints))\n                    .each(function (d) {\n                        const element = selectElement(this);\n\n                        element.classed(d[0].className, true);\n                        Object.keys(style).forEach(key => element.style(key, style[key]));\n                    });\n};\n\nexport default drawArea;\n","import { FieldType } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { LineLayer } from '../line';\nimport drawArea from './renderer';\nimport './styles.scss';\nimport { STACK, ENCODING } from '../../enums/constants';\nimport { getAxesScales, positionPoints, getLayerColor, getIndividualClassName } from '../../helpers';\n\n/**\n * Area layer renders a closed path. The mark type of this layer is ```area```. This layer can be used\n * to create stacked or multi-series areas and vertical range area plots by using the encoding properties.\n *\n * To create this layer using layer configuration from canvas,\n * ```\n *      canvas.layers([{\n *          mark: 'area',\n *          transform: {\n *              type: 'stack' // Produces a stacked area.\n *          }\n *      }]);\n * ```\n *\n * @public\n *\n * @class\n * @module AreaLayer\n * @extends LineLayer\n */\nexport default class AreaLayer extends LineLayer {\n    /** oation of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof AreaLayer\n     */\n    static formalName () {\n        return 'area';\n    }\n\n    /**\n     * Calculates the domain from data. It calls its parent class's method which is line layer\n     * to get the domain and overwrites the domain according to its need.\n     * @return {Array} Domain values\n     */\n    calculateDomainFromData (data, encodingFieldsInf, fieldsConfig) {\n        const domains = super.calculateDomainFromData(data, fieldsConfig);\n        [ENCODING.X, ENCODING.Y].forEach((type) => {\n            const { [`${type}FieldType`]: fieldType } = encodingFieldsInf;\n            if (fieldType === FieldType.MEASURE && domains[type] !== undefined) {\n                domains[type][0] = Math.min(domains[type][0], 0);\n            }\n        });\n        return domains;\n    }\n\n    /**\n     * Returns the drawing method of this layer\n     * @return {Function} Draw method\n     */\n    getDrawFn () {\n        return drawArea;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @return {Array} Array of points\n     */\n    translatePoints (data, encodingFieldsInf, axes) {\n        let points = [];\n        const transformType = this.transformType();\n        const colorAxis = axes.color;\n        const config = this.config();\n        const encoding = config.encoding;\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const colorFieldIndex = colorField && fieldsConfig[colorField].index;\n        const { xField, yField, y0Field } = encodingFieldsInf;\n        const {\n            xAxis,\n            yAxis\n       } = getAxesScales(axes);\n        const classNameFn = config.individualClassName;\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const y0Px = (y0Field || transformType === STACK) ? yAxis.getScaleValue(d.y0) : yAxis.getScaleValue(0);\n            const { color, rawColor } = getLayerColor({ datum: d, index: i }, {\n                colorEncoding, colorAxis, colorFieldIndex });\n            const style = {};\n            const meta = {};\n            style.fill = color;\n            // style['fill-opacity'] = 0;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n            const point = {\n                enter: {\n                    x: xPx,\n                    y: d.y === null ? d.y : yAxis.getScaleValue(0),\n                    y0: d.y0 === null ? d.y0 : yAxis.getScaleValue(0)\n                },\n                update: {\n                    x: xPx,\n                    y: d.y === null ? d.y : yPx,\n                    y0: d.y0 === null ? d.y0 : y0Px\n                },\n                _id: d._id,\n                _data: d._data,\n                source: d._data,\n                rowId: d._id,\n                className: classNameFn ? classNameFn(d, i, data, this) : '',\n                style,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            fill: color\n        };\n    }\n}\n\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-arc',\n    padding: { top: 1, bottom: 1, left: 1, right: 1 },\n    className: '',\n    minOuterRadius: 10,\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    height: 100,\n    width: 100,\n    sort: '',\n    cornerRadius: 0,\n    padAngle: 0,\n    padRadius: 0,\n    startAngle: 0,\n    endAngle: 360,\n    colors: ['#F44336', 'blue', 'green', 'yellow', 'orange', 'purple'],\n    transform: {\n        type: 'identity'\n    },\n    encoding: {\n        'stroke-width': {\n            value: '2px'\n        },\n        'stroke-linejoin': {\n            value: 'round'\n        },\n        angle: {\n            value: '1'\n        },\n        radius: {\n            value: '1'\n        },\n        opacity: {\n            value: '1'\n        },\n        color: {\n            value: '1'\n        },\n        shape: {\n            value: '1'\n        },\n        size: {\n            value: '1'\n        }\n    },\n    innerRadiusFixer: 10,\n    transition: {\n        effect: 'cubic',\n        duration: 500\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-arc-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-arc-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-arc-selected`\n        }\n    }\n};\n\n","import {\n    makeElement,\n    selectElement,\n    getQualifiedClassName,\n    isSimpleObject,\n    getDomainFromData,\n    Symbols,\n    FieldType,\n    ReservedFields,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { BaseLayer } from '../../base-layer';\nimport { ASCENDING, OUTER_RADIUS_VALUE } from '../../enums/constants';\nimport { getIndividualClassName } from '../../helpers';\nimport { getRangeValue, getRadiusRange, tweenPie, tweenExitPie, getFieldIndices, getPreviousPoint } from './arc-helper';\nimport './styles.scss';\n\nconst pie = Symbols.pie;\nconst arc = Symbols.arc;\n\n/**\n * Arc Layer creates a plot with polar coordinates.\n *\n * @public\n *\n * @class\n * @module ArcLayer\n * @extends BaseLayer\n */\nexport default class ArcLayer extends BaseLayer {\n\n    constructor (data, axes, config, dependencies) {\n        super(data, axes, config, dependencies);\n        this._prevPieData = {};\n    }\n\n    /**\n     * returns the default configuration of the layer\n     *\n     * @static\n     * @return {Object} Default configuration for arc layer\n     * @memberof ArcLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ArcLayer\n     */\n    static formalName () {\n        return 'arc';\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof ArcLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Transforms data in the appropriate data structure to be consumed by the layer for rendering\n     *\n     * @param {Object} data data model associated with the layer\n     * @param {Object} config configuration of the layer that contains encoding and other parameters\n     * @return {Object} Transformed pie data\n     * @memberof ArcLayer\n     */\n    getTransformedData (dataModel, config) {\n        let pieData = [];\n        const pieIndex = {};\n        const {\n            startAngle,\n            endAngle,\n            encoding,\n            sort,\n            minOuterRadius\n        } = config;\n        const prevData = this._transformedData || [];\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            angleIndex,\n            sizeIndex,\n            radiusIndex,\n            colorIndex\n        } = getFieldIndices(encoding, fieldsConfig);\n        const dataVal = dataModel.getData();\n        const data = dataVal.data;\n        const uids = dataVal.uids;\n\n        this._prevPieData = {};\n\n        prevData.forEach((e, index) => {\n            this._prevPieData[e.uid] = [e, index];\n            pieIndex[e.index] = e;\n        });\n        // Creating pie data using angle field provided. If the angle field is a dimension,\n        // all the angles will be equal(360/number of dimensions)\n\n        pieData = pie()\n            .startAngle((startAngle / 180) * Math.PI)\n            .endAngle(Math.PI * endAngle / 180)\n            .value(d => d[angleIndex] || 1)\n            .sortValues(null);\n\n        sort.length && radiusIndex && pieData.sort((a, b) => {\n            if (sort === ASCENDING) {\n                return a[radiusIndex] - b[radiusIndex];\n            } return b[radiusIndex] - a[radiusIndex];\n        });\n        const sizeVal = data.reduce((acc, d) => acc + (d[sizeIndex] || 0), 1);\n\n        // Adding the radius field values to each data point in pie data\n        pieData = pieData(data).map((d, i) => {\n            d.outerRadiusValue = data[i][radiusIndex] || minOuterRadius;\n            d.innerRadius = config.innerRadius;\n            d.colorVal = data[i][colorIndex];\n            d.angleVal = data[i][angleIndex];\n            d.sizeVal = sizeVal;\n            d.uid = uids[i];\n            d.rowId = d.uid;\n            d.source = data[i];\n            d._previousInfo = this._prevPieData[d.uid] ? this._prevPieData[d.uid][0] :\n                getPreviousPoint(pieIndex, d.index, config);\n            return d;\n        });\n        return pieData;\n    }\n\n    /**\n     * Returns normalized data after transformation (it is the same in the case of pie layer)\n     *\n     * @param {Object} data transformed data\n     * @return {Object} normalized data\n     * @memberof ArcLayer\n     */\n    getNormalizedData (data) {\n        return data;\n    }\n\n    /**\n     *\n     *\n     * @param {Object} data\n     * @return {}\n     * @memberof ArcLayer\n     */\n    calculateDomainFromData (data) {\n        const domainKey = OUTER_RADIUS_VALUE;\n        return {\n            radius: getDomainFromData([data], [domainKey, domainKey])\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {Object} x\n     * @param {Object} y\n     * @return {}\n     * @memberof ArcLayer\n     */\n    getNearestPoint (x, y, config = {}) {\n        const dataPoint = selectElement(config.event.target).data()[0];\n        if (isSimpleObject(dataPoint)) {\n            const { data, uid } = dataPoint.datum;\n            return {\n                id: this.getIdentifiersFromData(data, uid),\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    /**\n     *\n     *\n     * @param {*} set\n     *\n     * @memberof ArcLayer\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(d => set.indexOf(d.datum.uid) !== -1);\n    }\n\n    /**\n     *\n     *\n     * @param {Object} container\n     * @return {}\n     * @memberof ArcLayer\n     */\n    render (container) {\n        const {\n            height,\n            width\n        } = this.measurement();\n        const {\n            classPrefix,\n            defClassName,\n            minOuterRadius,\n            innerRadius,\n            outerRadius,\n            cornerRadius,\n            padAngle,\n            padRadius,\n            padding,\n            transition,\n            innerRadiusFixer\n       } = this.config();\n        const sizeAxis = this.axes().size;\n        const transformedData = this._transformedData;\n        const chartHeight = height - padding.top - padding.bottom;\n        const chartWidth = width - padding.left - padding.right;\n        const qualClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        // Sets range for radius\n        const range = getRadiusRange(chartWidth, chartHeight, {\n            minOuterRadius,\n            innerRadius,\n            outerRadius,\n            innerRadiusFixer\n        });\n        const colorAxis = this.axes().color;\n        const defaultRadius = outerRadius || Math.min(chartHeight, chartWidth) / 2;\n        const radiusDomain = this.domain().radius;\n        const rangeValueGetter = d => getRangeValue(d, range, radiusDomain, defaultRadius, sizeAxis);\n        // This returns a function that generates the arc path based on the datum provided\n        const path = arc()\n                // .outerRadius(d => rangeValueGetter(d))\n                .innerRadius(innerRadius ? Math.min(chartHeight / 2, chartWidth / 2, innerRadius) : 0)\n                .cornerRadius(cornerRadius)\n                .padAngle(padAngle)\n                .padRadius(padRadius);\n        this._chartWidth = chartWidth;\n        this._chartHeight = chartHeight;\n        // Creating the group that holds all the arcs\n        const g = makeElement(selectElement(container), 'g', [1], `${qualClassName[0]}-group`)\n                .classed(`${qualClassName[1]}-group`, true)\n                .attr('transform', `translate(${chartWidth / 2},${chartHeight / 2})`);\n        const tween = (elem) => {\n            makeElement(elem, 'path', (d, i) => [{\n                datum: d,\n                index: i,\n                arcFn: path,\n                meta: {\n                    originalColor: colorAxis.getRawColor(d.colorVal),\n                    stateColor: {},\n                    colorTransform: {}\n                }\n            }], `${qualClassName[0]}-path`)\n                            .style('fill', d => colorAxis.getColor(d.datum.colorVal))\n                            .transition()\n                            .duration(transition.duration)\n                            .on('end', this.registerAnimationDoneHook())\n                            .attrTween('d', (...params) => tweenPie(path, rangeValueGetter, params))\n                            .attr('class', (d, i) => {\n                                const individualClass = getIndividualClassName(d, i, transformedData, this);\n                                return `${qualClassName[0]}-path ${qualClassName[1]}-path-${d.index}\n                                    ${individualClass}`;\n                            });\n        };\n        const consecutiveExits = [];\n        let exitCounter = 0;\n        const tweenExit = (elem, d) => {\n            let exitArr = consecutiveExits[exitCounter];\n            const oldExitCounter = exitCounter;\n            if (!exitArr) {\n                exitArr = [{ elem, datum: d }];\n            } else if (exitArr[exitArr.length - 1].datum.index === d.index - 1) {\n                exitArr.push({ elem, datum: d });\n            } else {\n                exitCounter++;\n            }\n            consecutiveExits[oldExitCounter] = exitArr;\n        };\n        // Creating groups for all the arcs present individually\n        makeElement(g, 'g', transformedData, `${qualClassName[0]}`,\n            {\n                update: tween,\n                exit: tweenExit\n            })\n                        .attr('class', (d, i) => `${qualClassName[0]} ${qualClassName[1]}-${i}`);\n        tweenExitPie(consecutiveExits, transition, rangeValueGetter, path);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof BaseLayer\n     */\n    getPointsFromIdentifiers (identifiers) {\n        if (!this.data()) {\n            return [];\n        }\n        const fieldNames = identifiers[0];\n        const values = identifiers.slice(1, identifiers.length);\n        const pieSlices = selectElement(this.mount()).selectAll('path').data();\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPies = pieSlices.filter((tData) => {\n            const data = tData.datum.data;\n            const uid = tData.datum.uid;\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === data[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === uid) !== -1;\n                } return true;\n            });\n        });\n\n        const pieSliceInf = filteredPies[0];\n        if (pieSliceInf) {\n            const centroid = pieSliceInf.arcFn.centroid(pieSliceInf.datum);\n            return [{\n                x: centroid[0] + this._chartWidth / 2,\n                y: centroid[1] + this._chartHeight / 2,\n                width: 2,\n                height: 2\n            }];\n        }\n        return [];\n    }\n\n    getRenderProps () {\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`];\n    }\n}\n","import { getObjProp, interpolator, FieldType, selectElement } from 'muze-utils';\nimport { ANGLE, RADIUS, SIZE, COLOR } from '../../enums/constants';\n\n/**\n * Returns the range value from a value inside the domain\n *\n * @param {Object} domainValue Value whose range has to be returned\n * @return {number} range value\n * @memberof ArcLayer\n */\nexport const getRangeValue = (datum, range, domain, defaultRadius, sizeAxis) => {\n    let domainMultiplier = 1;\n    const {\n        outerRadiusValue,\n        sizeVal\n    } = datum;\n    const sizeAxisDomain = sizeAxis.domain();\n    const sizeMultiplier = sizeAxis.getSize(sizeVal) / (sizeAxisDomain ? sizeAxis.range()[1] : sizeAxis.config().value);\n\n    domainMultiplier *= (range[1] - range[0]) / (domain[1] - domain[0]);\n    const rangeVal = (range[0] + (outerRadiusValue - domain[0]) * domainMultiplier);\n    return (rangeVal || defaultRadius) * sizeMultiplier;\n};\n\n/**\n *\n *\n * @memberof ArcLayer\n */\nexport const getRadiusRange = (width, height, config) => {\n    const {\n        minOuterRadius,\n        innerRadius,\n        outerRadius,\n        innerRadiusFixer\n    } = config;\n\n    return [Math.max((innerRadius + innerRadiusFixer || 0), minOuterRadius), outerRadius || Math.min(height,\n        width) / 2];\n};\nexport const getPreviousPoint = (prevData, currIndex, config) => {\n    const prevArc = prevData[currIndex - 1];\n    const nextArc = prevData[currIndex];\n\n    if (prevArc && nextArc) {\n        return {\n            startAngle: prevArc.endAngle,\n            endAngle: nextArc.startAngle\n        };\n    } else if (!nextArc) {\n        return {\n            startAngle: config.endAngle * Math.PI * 2 / 360,\n            endAngle: config.endAngle * Math.PI * 2 / 360\n        };\n    }\n    return {\n        startAngle: config.startAngle * Math.PI * 2 / 360,\n        endAngle: config.startAngle * Math.PI * 2 / 360\n    };\n};\n\n/**\n *\n *\n * @param {*} path\n * @param {*} b\n *\n * @memberof ArcLayer\n */\nexport const tweenPie = (path, rangeValueGetter, b) => {\n    const { datum } = b[0];\n    const outerRadius = rangeValueGetter(datum);\n    datum.outerRadius = outerRadius;\n    datum._previousInfo.outerRadius = datum._previousInfo.outerRadius || outerRadius;\n    return function (t) {\n        return path(interpolator()(datum._previousInfo, datum)(t));\n    };\n};\n\n/**\n *\n *\n * @param {*} path\n * @param {*} b\n *\n * @memberof ArcLayer\n */\nexport const tweenExitPie = (consecutiveExits, transition, rangeValueGetter, path) => {\n    if (consecutiveExits.length > 0) {\n        consecutiveExits.forEach((consecutiveExitArr) => {\n            const startAngle = consecutiveExitArr[0].datum.startAngle;\n            const endAngle = consecutiveExitArr[consecutiveExitArr.length - 1].datum.endAngle;\n            const mid = (Math.PI * 2 * startAngle) / ((Math.PI * 2) + startAngle - endAngle);\n\n            consecutiveExitArr.forEach((e) => {\n                const { elem, datum } = e;\n\n                elem.each(function () {\n                    const gElem = selectElement(this);\n                    gElem.selectAll('path')\n                                    .transition()\n                                    .duration(transition.duration)\n                                    .attrTween('d', () => function (t) {\n                                        const outerRadius = rangeValueGetter(datum);\n                                        datum.outerRadius = outerRadius;\n                                        return path(interpolator()(datum, {\n                                            startAngle: mid,\n                                            endAngle: mid,\n                                            outerRadius\n                                        })(t));\n                                    })\n                                    .remove();\n                    gElem.remove();\n                });\n            });\n        });\n    }\n};\n\nexport const getFieldIndices = (encoding, fieldsConfig) => {\n    const [angleField, radiusField, colorField, sizeField] = [ANGLE, RADIUS, COLOR, SIZE]\n            .map(e => encoding[e].field);\n    const [angleIndex, sizeIndex, radiusIndex] = [angleField, sizeField, radiusField]\n        .map((e) => {\n            const conf = fieldsConfig[e];\n            if (conf && conf.def.type === FieldType.MEASURE) {\n                return conf.index;\n            }\n            return null;\n        });\n    const colorIndex = getObjProp(fieldsConfig, colorField, 'index');\n    return {\n        angleIndex,\n        sizeIndex,\n        radiusIndex,\n        colorIndex\n    };\n};\n","import {\n    setAttrs,\n    setStyles,\n    selectElement,\n    makeElement,\n    getSmartComputedStyle\n} from 'muze-utils';\n\n/**\n * Draws svg text in the specified container.\n * @param {SVGElement} container Container where labels will be appended.\n * @param {Array.<Object>} data Data of the elements.\n * @return {Selection} d3 selection of the elements.\n */\nconst drawText = (container, data, config, smartLabel) => {\n    const selection = selectElement(container).selectAll('g').data(data);\n\n    const selectionMerge = selection.enter().append('g')\n        .each(function (dataObj) {\n            setAttrs(this, dataObj.enter);\n        })\n        .merge(selection);\n    const style = getSmartComputedStyle(selectElement(container), config.className);\n    const fontSize = parseInt(style.fontSize, 10);\n\n    smartLabel.setStyle(style);\n    selectionMerge.each(function (dataObj) {\n        const element = selectElement(this);\n        const { update, text, color, textanchor, style: textStyle } = dataObj;\n        const background = dataObj.background;\n        let backgroundVal;\n        if (backgroundVal = background.value) {\n            const backgroundPadding = background.padding;\n            let diff;\n            const { width, height } = smartLabel.getOriSize(dataObj.text);\n            const backgroundEl = makeElement(element, 'rect', [1]);\n\n            if (textanchor === 'end') {\n                diff = width;\n            } else if (textanchor === 'start') {\n                diff = 0;\n            } else {\n                diff = width / 2;\n            }\n\n            setAttrs(backgroundEl.node(), {\n                x: update.x - diff - backgroundPadding / 2,\n                y: update.y - fontSize - backgroundPadding / 2,\n                width: width + backgroundPadding,\n                height: height + backgroundPadding\n            });\n            background && setStyles(backgroundEl, {\n                background: backgroundVal\n            });\n        }\n        const textEl = makeElement(element, 'text', d => [d]).text(text);\n        const textNode = textEl.node();\n        textStyle && setStyles(textNode, textStyle);\n        color && setStyles(textNode, {\n            fill: color\n        });\n        dataObj.className && textEl.classed(dataObj.className, true);\n        setAttrs(textNode, update);\n        textEl.attr('text-anchor', textanchor);\n    });\n    selection.exit().remove();\n    return selection;\n};\n\nexport default drawText;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-text',\n    classPrefix: CLASSPREFIX,\n    className: '',\n    transform: {\n        type: 'identity'\n    },\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: {},\n        text: {\n            value: '',\n            background: {\n                padding: 10\n            }\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-text-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-text-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-text-selected`\n        }\n    }\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    setStyles,\n    createElements\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawText from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\nimport { TEXT_ANCHOR_MIDDLE, ENCODING } from '../../enums/constants';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create labels for each data point. It has an encoding property ```text```\n * which determines from which field's data the value of the label will be taken. The text encoding\n * property is necessary for the layer to render the text.The mark type of this layer is ```text```.\n *\n * @public\n *\n * @class\n * @module TextLayer\n * @extends BaseLayer\n */\nexport default class TextLayer extends BaseLayer {\n    /**\n     * Returns the default configuration of the text layer\n     * @return {Object} Default configuration of the text layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'text';\n    }\n\n    elemType () {\n        return 'text';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes) {\n        let points = [];\n        const colorAxis = axes.color;\n        const textEncoding = encoding.text;\n        const { field: textField, value, formatter: textFormatter } = textEncoding;\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding && colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const colorFieldIndex = fieldsConfig[colorField] ? fieldsConfig[colorField].index : -1;\n        const textFieldIndex = textField ? fieldsConfig[textField] && fieldsConfig[textField].index : -1;\n        const xEnc = ENCODING.X;\n        const yEnc = ENCODING.Y;\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d._data;\n            const textValue = textField ? row[textFieldIndex] : value;\n\n            const [xPx, yPx] = [xEnc, yEnc].map(type => (axes[type] ? axes[type].getScaleValue(d[type]) +\n                    axes[type].getUnitWidth() / 2 : 0));\n\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            const point = {\n                enter: {},\n                update: {\n                    x: xPx,\n                    y: yPx\n                },\n                text: textFormatter ? textFormatter(textValue) : textValue,\n                color,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, this) : null,\n                    padding: backgroundPadding\n                },\n                meta: {\n                    stateColor: {},\n                    originalColor: rawColor,\n                    colorTransform: {}\n                },\n                style: {},\n                _data: row,\n                _id: d._id,\n                source: d._data,\n                rowId: d._id\n            };\n\n            if (d.x !== null && d.y !== null) {\n                points.push(point);\n            }\n\n            point.className = getIndividualClassName(d, i, data, this);\n        }\n\n        points = positionPoints(this, points);\n\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {textLayer} Instance of text layer\n     */\n    render (container) {\n        let points;\n        const config = this.config();\n        const encoding = config.encoding;\n        const normalizedData = this._normalizedData;\n        const className = config.className;\n        const qualifiedClassName = getQualifiedClassName(config.defClassName, this.id(), config.classPrefix);\n        const axes = this.axes();\n        const containerSelection = selectElement(container);\n\n        containerSelection.classed(`${qualifiedClassName.join(' ')} ${className}`, true);\n        createElements({\n            data: normalizedData,\n            append: 'g',\n            selector: 'g',\n            container,\n            each: (dataArr, group, i) => {\n                const node = group.node();\n                points = this.translatePoints(dataArr, encoding, axes, i);\n                setStyles(node, {\n                    'text-anchor': TEXT_ANCHOR_MIDDLE\n                });\n                drawText(node, points, {\n                    className: qualifiedClassName[0]\n                }, this._dependencies.smartLabel);\n            }\n        });\n        return this;\n    }\n}\n","/* global Element, document  */\nimport {\n    makeElement,\n    selectElement,\n    easeFns,\n    objectIterator,\n    getSymbol\n} from 'muze-utils';\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem) {\n    const groupElement = selectElement(elem);\n    const { shape, size, update } = d;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        if (newShape.nodeName === 'path' || newShape.nodeName === 'image') {\n            shapeElement.attr('transform', `scale(${size / 100})`);\n        } else {\n            shapeElement.attr('height', size);\n            shapeElement.attr('width', size);\n        }\n        shapeElement.attr('x', -size / 2);\n        shapeElement.attr('y', -size / 2);\n        selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = getSymbol(shape).size(size)(update);\n        }\n        makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    } else {\n        d.shape = 'circle';\n        createShape(d, elem);\n    }\n};\n\n/**\n * Draws symbols using d3 symbol api\n * @param {Object} params Contains the svg container, points and other symbol related attributes.\n */\n/* istanbul ignore next */ const drawSymbols = (params) => {\n    let mergedGroups;\n    const { layer, container, points, transition, className } = params;\n    const { duration, effect, disabled } = transition;\n    const mount = selectElement(container);\n\n    mount.attr('class', className);\n    const symbolGroups = mount.selectAll('g').data(points, params.keyFn);\n    const symbolEnter = symbolGroups.enter().append('g').attr('transform', d => `translate(${d.enter.x},${d.enter.y})`);\n    mergedGroups = symbolGroups.merge(symbolEnter)\n                    .each(function (d) {\n                        createShape(d, this);\n                    });\n    mergedGroups = disabled ? mergedGroups :\n        mergedGroups.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    mergedGroups.attr('transform', d => `translate(${d.update.x},${d.update.y})`)\n                    .each(function (d) {\n                        const style = d.style;\n                        const element = selectElement(this);\n                        objectIterator(style, key => element.style(key, style[key]));\n                        element.attr('class', `${className}`);\n                        element.classed(d.className, true);\n                    });\n\n    const exitGroups = symbolGroups.exit();\n    if (!disabled) {\n        exitGroups.transition().ease(easeFns[effect])\n                        .duration(duration)\n                        .on('end', function () {\n                            selectElement(this).remove();\n                        })\n                        .style('fill-opacity', 0)\n                        .style('stroke-opacity', 0);\n    } else {\n        exitGroups.remove();\n    }\n};\n\nexport default drawSymbols;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-point',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    defColorStyle: 'stroke',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -20, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }\n        ]\n    },\n    innerPadding: 0.1,\n    nearestPointThreshold: 10,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        size: {\n            value: 30\n        },\n        color: { },\n        shape: {\n            value: 'circle'\n        },\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    shapes: ['circle', 'cross', 'diamond', 'square', 'star', 'wye', 'triangle'],\n    sizes: [20, 30, 40, 50, 60, 70]\n};\n","import {\n    Voronoi,\n    selectElement,\n    getQualifiedClassName,\n    makeElement,\n    FieldType,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawSymbols from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    getLayerColor,\n    positionPoints,\n    getPlotMeasurement,\n    getIndividualClassName\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create various symbols for each data point. This is commonly used in\n * scatterplot visualizations. The mark type of this layer is ```point```.\n *\n * @public\n *\n * @class\n * @module PointLayer\n * @extends BaseLayer\n */\nexport default class PointLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of PointLayer.\n     * @param {*} args\n     * @memberof PointLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n        this._bandScale = Scales.band();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PointLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Returns the default configuration of the point layer\n     * @return {Object} Default configuration of the point layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof PointLayer\n     */\n    static formalName () {\n        return 'point';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof PointLayer\n     */\n    static drawFn () {\n        return drawSymbols;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes, config = {}) {\n        let points = [];\n        const {\n            size: sizeEncoding,\n            shape: shapeEncoding,\n            color: colorEncoding,\n            x,\n            y\n        } = encoding;\n        const sizeField = sizeEncoding.field;\n        const sizeValue = sizeEncoding.value;\n        const shapeField = shapeEncoding.field;\n        const xField = x.field;\n        const yField = y.field;\n        const { size: sizeAxis, shape: shapeAxis } = axes;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorField = colorEncoding && colorEncoding.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n        const measurement = this.measurement();\n        const shapeFieldIndex = fieldsConfig[shapeField] && fieldsConfig[shapeField].index;\n        const sizeFieldIndex = fieldsConfig[sizeField] && fieldsConfig[sizeField].index;\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d._data;\n            const size = sizeValue instanceof Function ? sizeValue(d, i) : sizeAxis.getSize(row[sizeFieldIndex]);\n            const shape = shapeAxis.getShape(row[shapeFieldIndex]);\n\n            let [xPx, yPx] = [ENCODING.X, ENCODING.Y].map((type) => {\n                const value = d[type] === null ? undefined : d[type];\n                const measure = type === ENCODING.X ? measurement.width : measurement.height;\n                return !encoding[type].field ? measure / 2 : axes[type].getScaleValue(value);\n            });\n\n            xPx += offsetX;\n            yPx += offsetY;\n\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            const style = {\n                fill: color,\n                stroke: color\n            };\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {\n                        x: xPx,\n                        y: yPx\n                    },\n                    update: {\n                        x: xPx,\n                        y: yPx\n                    },\n                    shape,\n                    size: Math.abs(size),\n                    meta: {\n                        stateColor: {},\n                        originalColor: rawColor,\n                        colorTransform: {}\n                    },\n                    style,\n                    _data: row,\n                    _id: d._id,\n                    source: d._data,\n                    rowId: d._id\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container.\n     *\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {BarLayer} Instance of bar layer\n     */\n    render (container) {\n        let maxSize = 0;\n        let seriesClassName;\n        const config = this.config();\n        const keys = this._transformedData.map(d => d.key);\n        const { transition, className, defClassName, classPrefix } = config;\n        const normalizedData = this._normalizedData;\n        const containerSelection = selectElement(container);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        this._points = [];\n        this._pointMap = {};\n\n        containerSelection.classed(qualifiedClassName.join(' '), true).classed(className, true);\n\n        this._points = this.generateDataPoints(normalizedData, keys);\n\n        makeElement(container, 'g', this._points, null, {\n            update: (group, points) => {\n                maxSize = Math.max(maxSize, ...points.map(d => d.size));\n                seriesClassName = `${qualifiedClassName[0]}`;\n                this.constructor.drawFn()({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    keyFn: d => d._id\n                });\n            }\n        }, data => data[0]._id);\n        this._maxSize = Math.sqrt(maxSize / Math.PI) * 2;\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    generateDataPoints (normalizedData, keys) {\n        const encoding = this.config().encoding;\n        const axes = this.axes();\n        const [widthMetrics, heightMetrics] = getPlotMeasurement(this, keys);\n        const offsetXValues = widthMetrics.offsetValues || [];\n        const offsetYValues = heightMetrics.offsetValues || [];\n        return normalizedData.map((dataArr, i) => {\n            const measurementConf = this.getMeasurementConfig(offsetXValues[i], offsetYValues[i], widthMetrics.span,\n                heightMetrics.span);\n            return this.translatePoints(dataArr, encoding, axes, measurementConf);\n        }).filter(d => d.length);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0) + widthSpan / 2,\n                y: (offsetY || 0) + heightSpan / 2\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n\n    /**\n     * Gets the nearest point from a position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Point details\n     */\n    getNearestPoint (x, y) {\n        const distanceLimit = Math.max(this._maxSize, this.config().nearestPointThreshold);\n\n        if (!this.data()) {\n            return null;\n        }\n\n        const point = this._voronoi.find(x, y, distanceLimit);\n        const dimensions = point && point.data.data.update;\n        const radius = point ? Math.sqrt(point.data.data.size / Math.PI) : 0;\n\n        if (point) {\n            const { _data, _id } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(_data, _id);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: radius,\n                    height: radius\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import { makeElement, easeFns } from 'muze-utils';\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} datum\n * @param {*} index\n * @param {*} context\n */\nconst transitionBars = (layer, elem, datum, index, context) => {\n    const { transition } = context;\n    const { duration, disabled, effect } = transition;\n    const selection = elem;\n\n    const selTransition = disabled ? selection :\n        selection.transition()\n        .duration(duration)\n        .ease(easeFns[effect])\n        .on('end', layer.registerAnimationDoneHook());\n    const update = datum.update || datum;\n    const updateStyle = datum.style || {};\n    datum.className && selection.classed(datum.className, true);\n    Object.entries(update).forEach(attr => (!isNaN(attr[1]) && selTransition.attr(attr[0], attr[1])));\n    Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n};\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} d\n */\nconst barEnterFn = (elem, d) => {\n    const selection = elem;\n    const enter = d.enter || {};\n    Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n};\n\n/**\n * Draws rectangles by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Bar Selection\n */\n/* istanbul ignore next */ export const drawRects = (params) => {\n    const { layer, points, container, keyFn } = params;\n    const updateFns = {\n        enter (elem, d) { barEnterFn(elem, d); },\n        update (elem, d, i) { transitionBars(layer, elem, d, i, params); }\n    };\n    return makeElement(container, 'rect', points, null, updateFns, keyFn);\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-bar',\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transform: {\n        type: 'stack'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    innerPadding: 0.1,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        x0: {},\n        y0: {}\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-bar-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-bar-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-bar-selected`\n        }\n    }\n};\n\n","import { MeasureSubtype, DimensionSubtype } from 'muze-utils';\nimport { STACK } from '../../enums/constants';\nimport { getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fieldInfo\n * @param {*} config\n * @param {*} data\n *\n */\nconst resolveDimByField = (type, axesInfo, config, data) => {\n    const spaceType = type === 'x' ? 'width' : 'height';\n    const [fieldType, axis] = [config[`${type}FieldType`], axesInfo[`${type}Axis`]];\n    const {\n        transformType,\n        sizeEncoding,\n        sizeConfig,\n        measurement\n    } = config;\n\n    const sizeValue = sizeEncoding.value;\n    let enter = 0;\n    let pos;\n    let space = 0;\n    let enterSpace = 0;\n    if (fieldType !== undefined) {\n        if (config[`${type}0Field`]) {\n            const minVal = data[type];\n            const maxVal = data[`${type}0`];\n            let min;\n            let max;\n            if (minVal === null || maxVal === null) {\n                return {\n                    enterSpace: undefined,\n                    enter: undefined,\n                    pos: undefined,\n                    space: undefined\n                };\n            } else if (fieldType === MeasureSubtype.CONTINUOUS || fieldType === DimensionSubtype.TEMPORAL) {\n                min = Math.min(minVal, maxVal);\n                max = Math.max(minVal, maxVal);\n            } else {\n                min = minVal;\n                max = maxVal;\n            }\n            const scales = type === 'x' ? [min, max] : [max, min];\n            pos = axis.getScaleValue(scales[0]) + axis.getUnitWidth() / 2;\n            space = Math.abs(axis.getScaleValue(scales[1]) - pos) + axis.getUnitWidth() / 2;\n\n            enter = pos;\n            enterSpace = 0;\n        } else if (fieldType === DimensionSubtype.CATEGORICAL || fieldType === DimensionSubtype.TEMPORAL) {\n            pos = axis.getScaleValue(data[type]) +\n                (sizeConfig[type === 'x' ? 'barWidthOffset' : 'barHeightOffset'] || 0);\n\n            space = sizeConfig[type === 'x' ? 'barWidth' : 'barHeight'];\n            if (sizeValue !== undefined) {\n                const diffPx = sizeValue * space;\n                space -= diffPx;\n                pos += diffPx / 2;\n            }\n            enter = pos;\n            enterSpace = space;\n        } else {\n            const zeroPos = axis.getScaleValue(0);\n            const axisType = axis.getScaleValue(data[type]);\n            const axisType0 = axis.getScaleValue(data[`${type}0`]);\n\n            enterSpace = 0;\n            if (type === 'x') {\n                pos = data[type] < 0 || transformType === STACK ? axisType : zeroPos;\n                space = Math.abs(pos - (transformType === STACK ? axisType0 : (data[type] >= 0 ? axisType : zeroPos)));\n            } else {\n                pos = transformType === STACK || data[type] >= 0 ? axisType : zeroPos;\n                space = Math.abs(pos - (transformType === STACK ? axisType0 : (data[type] >= 0 ? zeroPos : axisType)));\n            }\n            enter = zeroPos;\n        }\n    } else {\n        pos = 0;\n        space = measurement[spaceType];\n    }\n\n    return {\n        enterSpace,\n        enter,\n        pos,\n        space\n    };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} config\n * @param {*} axes\n *\n */\nconst resolveDimensions = (data, config, axes) => {\n    const axesInfo = {\n        xAxis: axes.x,\n        yAxis: axes.y\n    };\n    const {\n        enterSpace: enterWidth,\n        enter: enterX,\n        pos: xPos,\n        space: width\n    } = resolveDimByField('x', axesInfo, config, data);\n\n    const {\n        enterSpace: enterHeight,\n        enter: enterY,\n        pos: yPos,\n        space: height\n    } = resolveDimByField('y', axesInfo, config, data);\n    return {\n        enter: {\n            x: enterX,\n            y: enterY,\n            width: enterWidth,\n            height: enterHeight\n        },\n        update: {\n            x: xPos,\n            y: yPos,\n            width,\n            height\n        }\n    };\n};\n\n/**\n * Generates an array of objects containing x, y, width and height of the bars from the data\n * @param  {Array.<Array>} data Data Array\n * @param  {Object} encoding  Config\n * @param  {Object} axes     Axes object\n * @param {Object} conf config object for point generation\n * @return {Array.<Object>}  Array of points\n */\nexport const getTranslatedPoints = (context, data, sizeConfig) => {\n    let points = [];\n    const encoding = context.config().encoding;\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const fieldsConfig = context.data().getFieldsConfig();\n    const colorEncoding = encoding.color;\n    const colorField = colorEncoding.field;\n    const sizeEncoding = encoding.size || {};\n    const {\n            x0Field,\n            y0Field,\n            xFieldSubType,\n            yFieldSubType\n        } = context.encodingFieldsInf();\n    const measurement = context.measurement();\n    const isXDim = xFieldSubType === DimensionSubtype.CATEGORICAL || xFieldSubType === DimensionSubtype.TEMPORAL;\n    const isYDim = yFieldSubType === DimensionSubtype.CATEGORICAL || yFieldSubType === DimensionSubtype.TEMPORAL;\n    const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n    const transformType = context.transformType();\n    const colorFieldIndex = colorField && fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n    for (let i = 0, len = data.length; i < len; i++) {\n        const d = data[i];\n        const style = {};\n        const meta = {};\n        const dimensions = resolveDimensions(d, {\n            xFieldType: xFieldSubType,\n            yFieldType: yFieldSubType,\n            x0Field,\n            y0Field,\n            transformType,\n            measurement,\n            sizeConfig,\n            sizeEncoding\n        }, axes);\n\n        const { color, rawColor } = getLayerColor({ datum: d, index: i },\n            { colorEncoding, colorAxis, colorFieldIndex });\n\n        style.fill = color;\n        meta.stateColor = {};\n        meta.originalColor = rawColor;\n        meta.colorTransform = {};\n\n        const update = dimensions.update;\n\n        if (!isNaN(update.x) && !isNaN(update.y) && d._id !== undefined) {\n            let point = null;\n            point = {\n                enter: dimensions.enter,\n                update,\n                style,\n                _data: d._data,\n                _id: d._id,\n                source: d._data,\n                rowId: d._id,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, context);\n            points.push(point);\n            // Store each point in a hashmap with key as the dimensional or temporal field value\n            context.cachePoint(d[key], point);\n        }\n    }\n\n    points = positionPoints(context, points);\n    return points;\n};\n","import {\n    getClosestIndexOf,\n    getQualifiedClassName,\n    selectElement,\n    createElements,\n    clipElement,\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawRects } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getPlotMeasurement } from '../../helpers';\nimport './styles.scss';\nimport { getTranslatedPoints } from './bar-helper';\n\nconst MEASURE = FieldType.MEASURE;\nconst scaleBand = Scales.band;\n\n/**\n * Bar layer creates rectangle marks. The mark type of this layer is ```bar```. This layer can be used\n * to create stacked or grouped bars, range bars, heatmap plots and also reference bands by using\n * the encoding properties.\n *\n * @public\n *\n * @class\n * @module BarLayer\n * @extends BaseLayer\n */\nexport default class BarLayer extends BaseLayer {\n    /**\n     * Creates an instance of bar layer\n     */\n    constructor (...params) {\n        super(...params);\n        this._bandScale = scaleBand();\n        this._plotPadding = {\n            x: 0,\n            y: 0\n        };\n        this._plotSpan = {\n            x: 0,\n            y: 0\n        };\n        this._pointMap = {};\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BarLayer\n     */\n    elemType () {\n        return 'rect';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BarLayer\n     */\n    static formalName () {\n        return 'bar';\n    }\n\n    /**\n     * Returns the default configuration of the bar layer\n     * @return {Object} Default configuration of the bar layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof BarLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const colorField = encoding.color.field;\n        const transform = config.transform;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} fieldsConfig\n     *\n     * @memberof BarLayer\n     */\n    calculateDomainFromData (data, encodingFieldInf, fieldsConfig) {\n        const domain = super.calculateDomainFromData(data, encodingFieldInf, fieldsConfig);\n        ['x', 'y'].forEach((d) => {\n            if (encodingFieldInf[`${d}FieldType`] === MEASURE && domain[d]) {\n                encodingFieldInf[`${d}0Field}`] ? domain[d] = domain[d].sort((a, b) => a - b) :\n                    (domain[d][0] = Math.min(domain[d][0], 0));\n            }\n        });\n        return domain;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the bars from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @param {Object} conf config object for point generation\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, sizeConfig) {\n        return getTranslatedPoints(this, data, sizeConfig);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGGroup} container SVGGroup where plot will be rendered.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    render (container) {\n        const config = this.config();\n        const transition = config.transition;\n        const normalizedDataArr = this._normalizedData;\n        const transformedData = this._transformedData;\n        const keys = transformedData.map(d => d.key);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const height = axes.y && axes.y.scale().range()[0];\n        const width = axes.x && axes.x.scale().range()[1];\n        const defClassName = config.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const className = config.className;\n        const containerSelection = selectElement(container);\n        const dimensions = Object.values(fieldsConfig).filter(e => e.def.type === FieldType.DIMENSION)\n            .map(e => e.index);\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        clipElement(container, {\n            x: 0,\n            y: 0,\n            width,\n            height\n        }, `id-${this.id()}`);\n\n        this._points = this.generateDataPoints(normalizedDataArr, keys);\n\n        createElements({\n            data: this._points,\n            container,\n            selector: 'g',\n            append: 'g',\n            each: (points, group, i) => {\n                const seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n                group.style('display', 'block');\n                drawRects({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: {},\n                    keyFn: d => dimensions.map(key => d._data[key]).join('-')\n                });\n            }\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} normalizedData\n     * @param {*} keys\n     *\n     * @memberof BarLayer\n     */\n    generateDataPoints (normalizedData, keys) {\n        const [barWidthMetrics, barHeightMetrics] = getPlotMeasurement(this, keys);\n        const barWidthOffsets = barWidthMetrics.offsetValues || [];\n        const barHeightOffsets = barHeightMetrics.offsetValues || [];\n        this._plotSpan = {\n            x: barWidthMetrics.groupSpan || 0,\n            y: barHeightMetrics.groupSpan || 0\n        };\n        this._plotPadding = {\n            x: barWidthMetrics.padding || 0,\n            y: barHeightMetrics.padding || 0\n        };\n\n        this._pointMap = {};\n        return normalizedData.map((data, i) => this.translatePoints(data,\n            {\n                barWidth: barWidthMetrics.span,\n                barWidthOffset: barWidthOffsets[i] || 0,\n                barHeight: barHeightMetrics.span,\n                barHeightOffset: barHeightOffsets[i] || 0\n            }));\n    }\n\n    getPlotPadding () {\n        return this._plotPadding;\n    }\n\n    /**\n     * Gets the nearest point of the position passed.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point.\n     */\n    getNearestPoint (x, y) {\n        if (!this.data()) {\n            return null;\n        }\n        let axis;\n        let value;\n        let index;\n        let points;\n        let uniqueFieldType;\n        let uniqueFieldIndex;\n        let filterData;\n        let identifiers;\n        let pointFound = null;\n        const dataModel = this.data();\n        const dataObj = dataModel.getData();\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const axes = this.axes();\n        const data = dataObj.data;\n        const pointMap = this._pointMap;\n        const {\n                xField,\n                yField,\n                xFieldSubType,\n                yFieldSubType\n            } = this.encodingFieldsInf();\n\n        if (xFieldSubType === MeasureSubtype.CONTINUOUS) {\n            axis = axes.y;\n            value = axis.invert(y);\n            uniqueFieldIndex = fieldsConfig[yField].index;\n            uniqueFieldType = yFieldSubType;\n        } else {\n            axis = axes.x;\n            value = axis.invert(x);\n            uniqueFieldIndex = fieldsConfig[xField].index;\n            uniqueFieldType = xFieldSubType;\n        }\n\n        if (uniqueFieldType === DimensionSubtype.CATEGORICAL) {\n            points = pointMap[value];\n        }\n\n        if (uniqueFieldType === DimensionSubtype.TEMPORAL) {\n            filterData = [...new Set(data.map(d => d[uniqueFieldIndex]))];\n            index = getClosestIndexOf(filterData, value);\n            value = filterData[index];\n            points = pointMap[value];\n        }\n        const len = points && points.length;\n        points && points.sort((p1, p2) => p1.update.y - p2.update.y);\n        for (let i = 0; i < len; i++) {\n            const point = points[i];\n            const update = point.update;\n            if (x >= update.x && x <= (update.width + update.x) && y >= update.y && y <= (update.height + update.y)) {\n                pointFound = point;\n                break;\n            }\n            pointFound = null;\n        }\n\n        const values = pointFound && pointFound._data;\n        if (values) {\n            identifiers = this.getIdentifiersFromData(values, pointFound._id);\n        }\n        return pointFound ? {\n            dimensions: [pointFound.update],\n            id: identifiers,\n            layerId: this.id()\n        } : pointFound;\n    }\n\n    getPlotSpan () {\n        return this._plotSpan;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-tick',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }]\n    },\n    innerPadding: 0.1,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: { },\n        x: {},\n        y: {},\n        x0: {},\n        y0: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-tick-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-tick-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-tick-selected`\n        }\n    }\n};\n","import { selectElement } from 'muze-utils';\n\n/**\n * Draws ticks by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Ticks Selection\n */\nexport default /* istanbul ignore next */ (params) => {\n    const { points, container, keyFn, className } = params;\n    const mount = selectElement(container);\n    const ticks = mount.selectAll('path').data(points, keyFn);\n    const ticksEnter = ticks.enter().append('path');\n\n    mount.attr('class', className || '');\n    ticksEnter.each(function (d) {\n        const selection = selectElement(this);\n        const enter = d.enter || {};\n        Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n    });\n\n    ticks.exit().remove();\n    return ticks.merge(ticksEnter)\n                    .each(function (d) {\n                        const selection = selectElement(this);\n                        const update = d.update;\n                        const updateStyle = d.style || {};\n                        const x0 = update.x0 !== undefined ? update.x0 : update.x;\n                        const y0 = update.y0 !== undefined ? update.y0 : update.y;\n                        const path = `M ${update.x} ${update.y} L ${x0} ${y0}`;\n                        d.className && selection.classed(d.className, true);\n                        selection.attr('d', path);\n                        Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n                    });\n};\n\n","import { FieldType } from 'muze-utils';\nimport { PointLayer } from '../point';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport drawTicks from './renderer';\nimport './styles.scss';\nimport { getAxesScales, getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\n\n/**\n * This layer is used to create small lines. The orientation of the line is determined by the positional\n * encoding properties x0 and y0. The mark type of the layer is ```tick```.\n *\n * @public\n *\n * @class\n * @module TickLayer\n * @extends BaseLayer\n */\nexport default class TickLayer extends PointLayer {\n\n    /**\n     *\n     *\n     * @staticg\n     *\n     * @memberof TickLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static formalName () {\n        return 'tick';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static drawFn () {\n        return drawTicks;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TickLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes, config = {}) {\n        let points = [];\n        const {\n                xAxis,\n                yAxis\n            } = getAxesScales(axes);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n                xField,\n                yField,\n                x0Field,\n                y0Field,\n                xFieldType,\n                yFieldType\n            } = this.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding && colorEncoding.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n        const measurement = this.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n        const { x: xSpan, y: ySpan } = config.span;\n        for (let i = 0, len = data.length; i < len; i++) {\n            let xPx;\n            let x0Px;\n            let y0Px;\n            let yPx;\n            const d = data[i];\n            const row = d._data;\n            if (xField) {\n                xPx = xAxis.getScaleValue(d.x) + offsetX;\n                x0Px = xPx + xSpan;\n            }\n\n            if (yField) {\n                yPx = yAxis.getScaleValue(d.y) + offsetY;\n                y0Px = yPx !== null ? yPx + ySpan : null;\n            }\n\n            if (!xField) {\n                xPx = 0;\n                x0Px = measurement.width;\n                if (!isNaN(yPx)) {\n                    yPx += ySpan / 2;\n                    y0Px = yPx;\n                }\n            }\n\n            if (!yField) {\n                yPx = 0;\n                y0Px = measurement.height;\n                x0Px = xPx += xSpan / 2;\n            }\n\n            if (x0Field) {\n                x0Px = xAxis.getScaleValue(d.x0) + xSpan;\n                yPx += ySpan / 2;\n                y0Px -= ySpan / 2;\n            }\n\n            if (y0Field) {\n                y0Px = yAxis.getScaleValue(d.y0) + ySpan;\n                xPx += xSpan / 2;\n                x0Px -= xSpan / 2;\n            }\n            const style = {};\n            const meta = {};\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            style.stroke = color;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {},\n                    update: {\n                        x: xPx,\n                        y: yPx,\n                        x0: x0Px,\n                        y0: y0Px\n                    },\n                    style,\n                    _data: row,\n                    _id: d._id,\n                    source: row,\n                    rowId: d._id,\n                    meta\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0),\n                y: (offsetY || 0)\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n}\n","import { isSimpleObject, mergeRecursive, getObjProp } from 'muze-utils';\n\nconst parseLayerDefinition = (sink, definition, layerDef, layerType) => {\n    for (const key in definition) {\n        if (Object.hasOwnProperty.call(definition, key)) {\n            let strs;\n            let propValue;\n            const def = definition[key];\n            if (isSimpleObject(def)) {\n                sink[key] = {};\n                parseLayerDefinition(sink[key], def, layerDef, layerType);\n            } else if (typeof def === 'string' && (strs = def.split('.')) && strs[0] === layerType) {\n                propValue = getObjProp(layerDef, ...strs.slice(1, strs.length));\n                if (propValue !== undefined) {\n                    sink[key] = propValue;\n                }\n            } else {\n                sink[key] = def;\n            }\n        }\n    }\n};\n\nconst sanitizeEncoding = (encoding) => {\n    // Create object for each encoding value if encoding value is a string\n    for (const key in encoding) {\n        if (typeof encoding[key] === 'string') {\n            encoding[key] = {\n                field: encoding[key]\n            };\n        }\n    }\n};\n\n/**\n * Layer Factory creates layers based on the layer type. All types of layers needs to register in\n * the layer factory. For getting a layer instance, getLayer method needs to invoked with the\n * layerType and other arguments. It also registers the definition of composite layers.\n *\n * @public\n *\n * @module LayerFactory\n */\nconst layerFactory = (() => {\n    const compositeLayers = {};\n    const factoryObj = {\n        setLayerRegistry: (reg) => {\n            factoryObj._layerRegistry = reg;\n        },\n        getSerializedConf: (mark, layerDef) => {\n            let serializedDefs;\n            const defs = compositeLayers[mark];\n            const newConf = mergeRecursive({}, layerDef);\n\n                // If it is a composite layer then resolve all the definitions of each unit layer\n            if (defs) {\n                serializedDefs = defs.map((unitLayerDef) => {\n                    const sDef = {};\n                    parseLayerDefinition(sDef, unitLayerDef, newConf, mark);\n                    sanitizeEncoding(sDef.encoding);\n                    return sDef;\n                });\n            } else {\n                const encoding = newConf.encoding;\n                // Create object for each encoding value if encoding value is a string\n                sanitizeEncoding(encoding);\n                serializedDefs = newConf;\n            }\n\n            return serializedDefs;\n        },\n        getLayerInstance: (layerDef, ...params) => {\n            const layerRegistry = factoryObj._layerRegistry;\n            layerDef = !(layerDef instanceof Array) ? [layerDef] : layerDef;\n            const instances = layerDef.map((layerObj) => {\n                const layerConstructor = layerRegistry[layerObj.mark];\n                return layerConstructor.create(...params);\n            });\n            return instances.length === 1 ? instances[0] : instances;\n        },\n        getLayerClass: mark => factoryObj._layerRegistry[mark],\n        /**\n         * Registers a new composite layer definition in the layer factory.\n         *\n         * @public\n         *\n         * @param {string} layerType Mark type of the new composite layer.\n         * @param {Array} layerDefs Layer definitions of the composite layer.\n         */\n        composeLayers: (layerType, layerDefs) => {\n            compositeLayers[layerType] = layerDefs;\n        },\n        sanitizeLayerConfig: (layerDef) => {\n            const newConf = mergeRecursive({}, layerDef);\n            sanitizeEncoding(newConf.encoding);\n            return newConf;\n        }\n    };\n    return factoryObj;\n})();\n\nexport default layerFactory;\n","import layerFactory from './layer-factory';\n\nexport default layerFactory;\n","import { AreaLayer } from './layers/area';\nimport { ArcLayer } from './layers/arc';\nimport { LineLayer } from './layers/line';\nimport { TextLayer } from './layers/text';\nimport { PointLayer } from './layers/point';\nimport { BarLayer } from './layers/bar';\nimport { BaseLayer } from './base-layer';\nimport * as CONSTANTS from './enums/constants';\nimport { TickLayer } from './layers/tick';\n\nexport const DEFAULT_LAYERS = {\n    [CONSTANTS.AREA_LAYER]: AreaLayer,\n    [CONSTANTS.ARC_LAYER]: ArcLayer,\n    [CONSTANTS.LINE_LAYER]: LineLayer,\n    [CONSTANTS.TEXT_LAYER]: TextLayer,\n    [CONSTANTS.POINT_LAYER]: PointLayer,\n    [CONSTANTS.TICK_LAYER]: TickLayer,\n    [CONSTANTS.BAR_LAYER]: BarLayer,\n    [CONSTANTS.BASE_LAYER]: BaseLayer\n};\n","/**\n * This file exports constants that are used as enums in the\n *  crosstab group implementation.\n */\n/**\n * Width of the crosstab.\n */\nexport const X = 'x';\n/**\n * Width of the crosstab.\n */\nexport const Y = 'y';\n/**\n * Width of the crosstab.\n */\nexport const WIDTH = 'width';\n\n/**\n * Height of the crosstab.\n */\nexport const HEIGHT = 'height';\n\n/**\n * Field referring to object storing measurement configuration.\n */\nexport const MEASUREMENT = 'measurement';\n\n/**\n * Field referring to object storing configuration properties.\n */\nexport const CONFIG = 'config';\n\n/**\n * Width of visual unit in crosstab.\n */\nexport const MIN_UNIT_WIDTH = 'minUnitWidth';\n\n/**\n * Height of visual unit.\n */\nexport const MIN_UNIT_HEIGHT = 'minUnitHeight';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSIONS = 'dimensions';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURES = 'measures';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSION = 'dimension';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURE = 'measure';\n\n/**\n * Flag to specify if model should be pivoted.\n */\nexport const PIVOT = 'pivot';\n\n/**\n * Flag to specify format\n */\nexport const FORMAT = 'format';\n\n/**\n * Mount point where the variable will be hosted\n */\nexport const MOUNT = 'mount';\n\n/**\n * Data update flag\n */\nexport const HAS_DATA_UPDATED = 'hasDataUpdated';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROWS = 'rows';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMNS = 'columns';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COL = 'col';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROW = 'row';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMN = 'column';\n\n/**\n * Field referring to object storing color field\n */\nexport const COLOR = 'color';\n\n/**\n * Field referring to object storing shape field\n */\nexport const SHAPE = 'shape';\n\n/**\n * Field referring to object storing size field\n */\nexport const SIZE = 'size';\n\n/**\n * Field referring to object storing detail field\n */\nexport const DETAIL = 'detail';\n\n/**\n * Field referring to object storing set of layers\n */\nexport const LAYERS = 'layers';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const TRANSFORM = 'transform';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const ORDINAL = 'ordinal';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const LINEAR = 'linear';\n/**\n * Field referring to object storing the transforms\n */\nexport const LEFT = 'left';\n/**\n * Field referring to object storing the transforms\n */\nexport const RIGHT = 'right';\n/**\n * Field referring to object storing the transforms\n */\nexport const TOP = 'top';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTTOM = 'bottom';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const RETINAL = 'retinal';\n/**\n * Field referring to object storing the transforms\n */\nexport const CELL = 'cell';\n/**\n * Field referring to object storing the transforms\n */\nexport const X_AXES = 'xAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const Y_AXES = 'yAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const ENTRY_CELLS = 'entryCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const INITIALIZED = 'initialized';\n/**\n * Field referring to object storing the transforms\n */\nexport const EXIT_CELLS = 'exitCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const AXIS = 'axis';\n/**\n * Field referring to object storing the transforms\n */\nexport const UNIT = 'unit';\n/**\n * Field referring to object storing the transforms\n */\nexport const UPDATED = 'updated';\n/**\n * Field referring to object storing the transforms\n */\nexport const BEFORE_UPDATE = 'beforeupdate';\n/**\n * Field referring to object storing the transforms\n */\nexport const VALUE_MATRIX = 'valueMatrix';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET_HEADERS = 'facet-headers';\n/**\n * Field referring to object storing the transforms\n */\nexport const RADIUS = 'radius';\n/**\n * Field referring to object storing the transforms\n */\nexport const ANGLE = 'angle';\n/**\n * Field referring to object storing the transforms\n */\nexport const ARC = 'arc';\n/**\n * Field referring to object storing the transforms\n */\nexport const CARTESIAN = 'cartesian';\n/**\n * Field referring to object storing the transforms\n */\nexport const POLAR = 'polar';\n/**\n * Field referring to object storing the transforms\n */\nexport const CATEGORICAL = 'categorical';\n/**\n * Field referring to object storing the transforms\n */\nexport const TEMPORAL = 'temporal';\n/**\n * Field referring to object storing the transforms\n */\nexport const BAR = 'bar';\n/**\n * Field referring to object storing the transforms\n */\nexport const LINE = 'line';\n/**\n * Field referring to object storing the transforms\n */\nexport const POINT = 'point';\n/**\n * Field referring to object storing the transforms\n */\nexport const PRIMARY = 'Primary';\n/**\n * Field referring to object storing the transforms\n */\nexport const SECONDARY = 'Secondary';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTH = 'both';\n/**\n * Field referring to object storing the transforms\n */\nexport const INTERACTION = 'interaction';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_LINES = 'gridLines';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_BANDS = 'gridBands';\n/**\n * Field referring to object storing the transforms\n */\nexport const HEADER = 'header';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET = 'facet';\n\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Artboard.\n * Artboard merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module\n */\n\nexport default {\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * Interfaces for VisualGroup. Any new VisualGroup has to implement this class.\n * @class  SimpleGroup\n */\nclass SimpleGroup {\n\n    /**\n     * This method is used to set or get the DataModel instance.\n     *\n     * @param {DataModel | undefined} dataModel Instance of datamodel.\n\n     * @memberof  SimpleGroup\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to set or get the group specific configuration\n     * properties\n     *\n     * @param {Object | undefined} configObj The input configuration.\n     *                                or instance of visual group.\n     * @memberof  SimpleGroup\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to return a serialized representation of the\n     * instance's properties.\n     *\n     * @memberof  SimpleGroup\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to get or set the measurement object which houses\n     * layout properties like width and height.\n     *\n     * @param {Object  | undefined} mObj The measurement properties.\n     * @memberof  SimpleGroup\n     */\n    measurement () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n\nexport default SimpleGroup;\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n *\n *\n * @export\n * @class Variable\n */\nexport default class Variable {\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    type () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    toString () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n","import Variable from './variable';\n\n/**\n * This is a wrapper on top of multiple variables which are of same type but they are shown in the same axis.This is\n * required in case of range plots or ohlc plots where one plot is mapped to multiple measure fields. At that time,\n * we need to create a composed variable from multiple variables. This class just wraps them into one variable instance\n * and provides methods to get the type and other common functionalities which can be performed on a simple variable\n * instance.\n *\n * @public\n * @class ComposeVars\n */\nclass ComposedVars extends Variable {\n\n    /**\n     * Creates an instance of ComposeVars.\n     *\n     * @param {Array} texts Array of field names\n     */\n    constructor (...texts) {\n        super(...texts);\n        this.vars(texts);\n    }\n\n    vars (...params) {\n        if (params.length) {\n            this._vars = params[0];\n            return this;\n        }\n        return this._vars;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this.vars().forEach(d => d.data(dm[0]));\n            return this;\n        }\n        return this._data;\n    }\n\n    /**\n     * Get all the field names from composed variable instance.\n     *\n     * @public\n     * @return {Array} Array of field names.\n     */\n    getMembers () {\n        const vars = this.vars();\n        return vars.map(member => member.getMembers()[0]);\n    }\n\n    /**\n     * Type of field associated with this composed variable.\n     *\n     * @return {string} Type of variable (Measure/Dimension).\n     */\n    type () {\n        return this.vars()[0].type();\n    }\n\n    toString () {\n        return this.vars().map(d => d.toString()).join(',');\n    }\n\n    /**\n     * Returns the number formatter function of the variable.\n     *\n     * @return {Function} Number formatter function of the variable.\n     */\n    numberFormat () {\n        return this.vars()[0].numberFormat();\n    }\n\n    format (values) {\n        return this.vars()[0].format(values);\n    }\n\n    /**\n     * Returns the subtype of the fields associated with this variable instance.\n     *\n     * @public\n     * @return {string} Subtype of the variable.\n     */\n    subtype () {\n        return this.vars()[0].subtype();\n    }\n\n    /**\n     * Returns the consecutive minimum difference of the field values.\n     *\n     * @public\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        return this.vars()[0].getMinDiff();\n    }\n}\n\nexport default ComposedVars;\n","import { DateTimeFormatter } from 'muze-utils';\nimport Variable from './variable';\n\n/**\n * This is a wrapper on top of fields passed in rows or columns in canvas. This is used to get the type of field or\n * get min difference from the field values.\n *\n * @public\n * @class SimpleVariable\n */\nexport default class SimpleVariable extends Variable {\n\n    /**\n     * Creates an instance of simple variable instance.\n     *\n     * @param {string} text Field name.\n     */\n    constructor (text) {\n        super();\n        this.oneVar(text);\n    }\n\n    /**\n     * Gets the field name associated with this variable instance.\n     *\n     * @public\n     * @return {string} Name of the field.\n     */\n    oneVar (...oneV) {\n        if (oneV.length) {\n            this._oneVar = oneV[0];\n            return this;\n        }\n        return this._oneVar;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    toString () {\n        return this.oneVar();\n    }\n\n    /**\n     * Gets the number formatter function of this variable.\n     *\n     * @public\n     * @return {Function} Number formatter function.\n     */\n    numberFormat () {\n        if (this.type() === 'measure') {\n            const formatter = this.data().getFieldspace().getMeasure()[this.oneVar()];\n            return formatter.numberFormat();\n        } return val => val;\n    }\n\n    format (values) {\n        if (values && this.subtype() === 'temporal') {\n            const formatter = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            const dtFormat = new DateTimeFormatter(formatter);\n            values = values.map(e => dtFormat.getNativeDate(e));\n        }\n        return values;\n    }\n\n    /**\n     * Return the field names associated with this variable instance.\n     *\n     * @public\n     * @return {Array} Array of fields.\n     */\n    getMembers () {\n        return [this.oneVar()];\n    }\n\n    /**\n     * Returns the type of the variable. Whether it is measure or dimension.\n     *\n     * @public\n     * @return {string} Type of variable.\n     */\n    type () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.type;\n    }\n\n    /**\n     * Returns the subtype of the variable. Subtype can be categorical or temporal. If no subtype is found, then it\n     * returns the type of the variable.\n     *\n     * @public\n     * @return {string} Subtype of variable.\n     */\n    subtype () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.subtype || fieldDef.type;\n    }\n\n    /**\n     * Returns the minimum consecutive difference between the data values of this variable.\n     *\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        const fieldSpace = this.data().getFieldspace();\n        return fieldSpace.fieldsObj()[this.oneVar()].minimumConsecutiveDifference();\n    }\n\n    /**\n     * Returns true if two variable instances are same.If both variable has the same field names, they are equal.\n     *\n     * @return {Boolean} Whether two variable instances are same.\n     */\n    equals (varInst) {\n        return this.oneVar() === varInst.oneVar();\n    }\n}\n","import { ComposedVars, SimpleVariable } from '../variable';\nimport { DIMENSION, COLUMNS, ROWS, TEMPORAL } from '../enums/constants';\n\n/**\n * Gets the list of fields in a sorted order by measurement and dimension\n *\n * @param {Array} fieldList List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields sorted by measurement and dimensions\n */\nconst orderFields = (fieldArray, type) => {\n    const dimensionArr = [[], []];\n    const measureArr = [[], []];\n    const temporalArr = [[], []];\n    const categoricalArr = [[], []];\n\n    fieldArray.forEach((fieldList, index) => {\n        fieldList.forEach((field) => {\n            if (field.type() === DIMENSION) {\n                dimensionArr[index].push(field);\n                field.subtype() === TEMPORAL ? temporalArr[index].push(field) : categoricalArr[index].push(field);\n            } else {\n                measureArr[index].push(field);\n            }\n        });\n    });\n\n    const numOfMeasures = measureArr[0].length + (measureArr[1] ? measureArr[1].length : 0);\n\n    // Single array of fields\n    if (!fieldArray[1]) {\n        // Push measures to bottom\n        measureArr[1] = type === COLUMNS ? measureArr[0] : [];\n        // Push measures to left\n        measureArr[0] = type !== COLUMNS ? measureArr[0] : [];\n        // Bottom and right dimensions empty\n        dimensionArr[1] = [];\n        // Left and top filled with dimensions\n        dimensionArr[0] = dimensionArr[0];\n        if (numOfMeasures === 0) {\n            const allDimensions = [...dimensionArr[0], ...dimensionArr[1]];\n            if (type === COLUMNS) {\n                dimensionArr[1] = allDimensions[allDimensions.length - 1] ? [allDimensions[allDimensions.length - 1]]\n                        : [];\n                allDimensions.splice(-1, 1);\n            } else {\n                dimensionArr[1] = [];\n            }\n            dimensionArr[0] = [...allDimensions];\n        }\n    }\n\n    if (dimensionArr[0].length && dimensionArr[1].length && numOfMeasures > 0) {\n        dimensionArr[0] = [...dimensionArr[0], ...dimensionArr[1]];\n        dimensionArr[1] = [];\n    }\n    return {\n        fields: dimensionArr.map((list, i) => (i === 1 ?\n            measureArr[i].concat(dimensionArr[i]) : dimensionArr[i].concat(measureArr[i]))),\n        dimensions: [...dimensionArr[0], ...dimensionArr[1]],\n        measures: [...measureArr[0], ...measureArr[1]],\n        temporal: [...temporalArr[0], ...temporalArr[1]],\n        categorical: [...categoricalArr[0], ...categoricalArr[1]]\n    };\n};\n\n/**\n * Gets the list of normalized fields\n *\n * @param {Array} fields List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields normalized by measurement and dimensions\n */\nconst normalizeFields = (config, type) => {\n    const fieldsArr = [];\n    const fields = config[type];\n\n    if (!(fields[0] instanceof Array)) {\n        fieldsArr[0] = fields;\n    } else {\n        fieldsArr[0] = fields[0] || [];\n        fieldsArr[1] = fields[1] || [];\n    }\n    return fieldsArr;\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} datamodel\n *\n */\nconst convertToVar = (datamodel, fields) => {\n    const vars = [];\n\n    fields && fields.forEach((field) => {\n        if (field instanceof ComposedVars) {\n            vars.push(field);\n            field.data(datamodel);\n        } else {\n            vars.push(new SimpleVariable(field).data(datamodel));\n        }\n    });\n    return vars;\n};\n\n/**\n *\n *\n * @param {*} rows\n * @param {*} columns\n * @param {*} datamodel\n *\n */\nexport const transformFields = (datamodel, config) => {\n    const [rowsInfo, columnsInfo] = [ROWS, COLUMNS].map((fields) => {\n        const normalizedFields = normalizeFields(config, fields);\n        const norFields = [convertToVar(datamodel, normalizedFields[0])];\n\n        if (normalizedFields[1]) {\n            norFields[1] = convertToVar(datamodel, normalizedFields[1]);\n        }\n        return orderFields(norFields, fields);\n    });\n    const {\n        fields: rows,\n        dimensions: rowDimensions,\n        measures: rowMeasures,\n        temporal: rowTemporalFields,\n        categorical: rowCategoricalFields\n    } = rowsInfo;\n    const {\n        fields: columns,\n        dimensions: columnDimensions,\n        measures: columnMeasures,\n        temporal: columnTemporalFields,\n        categorical: columnCategoricalFields\n    } = columnsInfo;\n    return {\n        rows,\n        rowDimensions,\n        rowMeasures,\n        rowTemporalFields,\n        rowCategoricalFields,\n        columns,\n        columnTemporalFields,\n        columnCategoricalFields,\n        columnDimensions,\n        columnMeasures\n    };\n};\n","import { ERROR_MSG, mergeRecursive } from 'muze-utils';\nimport { transformFields } from './field-sanitizer';\nimport { getHeaderAxisFrom } from '../group-helper/group-utils';\nimport { ROW, COLUMN } from '../enums/constants';\n\n/**\n *\n *\n * @export\n * @class VisualEncoder\n */\nexport default class VisualEncoder {\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    createAxis () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    setCommonDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    getLayerConfig () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    fieldInfo (...info) {\n        if (info.length) {\n            this._fieldInfo = mergeRecursive(this._fieldInfo || {}, info[0]);\n            return this;\n        }\n        return this._fieldInfo;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof VisualEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        this.fieldInfo(transformFields(datamodel, config));\n        return this.fieldInfo();\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    axisFrom (...params) {\n        if (params.length) {\n            this._axisFrom = params[0];\n            return this;\n        }\n        return this._axisFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    headerFrom (...params) {\n        if (params.length) {\n            this._headerFrom = params[0];\n            return this;\n        }\n        return this.__headerFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisFrom\n     *\n     * @memberof CartesianEncoder\n     */\n    setAxisAndHeaders (axisFrom = {}, fields) {\n        const [rowHeader, rowAxis] = getHeaderAxisFrom(ROW, fields.rows, axisFrom);\n        const [colHeader, colAxis] = getHeaderAxisFrom(COLUMN, fields.columns, axisFrom);\n\n        this.axisFrom({\n            row: rowAxis,\n            column: colAxis\n        });\n        this.headerFrom({\n            row: rowHeader,\n            column: colHeader\n        });\n        return this;\n    }\n}\n","import { ContinousAxis, BandAxis, TimeAxis, ColorAxis, SizeAxis, ShapeAxis } from '@chartshq/muze-axis';\n\nexport const scaleMaps = {\n    linear: ContinousAxis,\n    band: BandAxis,\n    temporal: TimeAxis,\n    size: SizeAxis,\n    color: ColorAxis,\n    shape: ShapeAxis\n};\n","import { ScaleType } from '@chartshq/muze-axis';\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    dimension: ScaleType.BAND,\n    categorical: ScaleType.BAND,\n    temporal: ScaleType.TIME,\n    measure: ScaleType.LINEAR,\n    continuous: ScaleType.LINEAR\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { AxisOrientation } from '@chartshq/muze-axis';\nimport { scaleMaps } from '../enums/scale-maps';\nimport { getAxisType, getAxisKey } from '../group-helper';\nimport { dataTypeScaleMap } from '../data-type-scale-map';\nimport { CATEGORICAL, TEMPORAL, BAR, LINE, POINT, BOTH, Y } from '../enums/constants';\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst getAxisConfig = (axisInfo, field, axesCreators) => {\n    let axisOrientation;\n    const { index, axisIndex, axisType } = axisInfo;\n    const { config, position } = axesCreators;\n    const userAxisConfig = config.axes ? (config.axes[axisType] || {}) : {};\n    const {\n        LEFT,\n        RIGHT,\n        TOP,\n        BOTTOM\n    } = AxisOrientation;\n    const allOrientations = axisType === Y ? [LEFT, RIGHT] : [TOP, BOTTOM];\n\n    if (position === BOTH) {\n        axisOrientation = allOrientations[axisIndex];\n    } else {\n        axisOrientation = position;\n    }\n    const axisConfig = {\n        id: `${axisType}-${index}-${axisIndex}`,\n        name: field.toString(),\n        field: field.toString(),\n        numberFormat: field.numberFormat(),\n        orientation: axisOrientation,\n        showAxisName: true,\n        show: true,\n        type: dataTypeScaleMap[field.subtype()]\n    };\n    userAxisConfig.tickValues = field.format(userAxisConfig.tickValues);\n    userAxisConfig.domain = field.format(userAxisConfig.domain);\n\n    return mergeRecursive(axisConfig, userAxisConfig);\n};\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst createSimpleAxis = (axisConfig, field, axesCreators) => {\n    const { labelManager } = axesCreators;\n    const Cls = scaleMaps[dataTypeScaleMap[field.subtype()]];\n    const simpleAxis = new Cls(axisConfig, { labelManager });\n    return simpleAxis;\n};\n\nexport const getAdjustedDomain = (max, min) => {\n    const y1ratio = max[0] / (max[0] - min[0]);\n    const y2ratio = max[1] / (max[1] - min[1]);\n\n    // adjust min/max values for positive negative values zero line etc\n    let allSameSign = false;\n\n    // if all numbers are positive set floor to zero\n    if (min[0] > 0 && min[1] > 0 && min[1] > 0 && max[1] > 0) {\n        allSameSign = true;\n        min[0] = 0;\n        min[1] = 0;\n    }\n\n    // if all numbers are negative set ceiling to zero\n    if (min[0] < 0 && min[1] < 0 && min[1] < 0 && max[1] < 0) {\n        allSameSign = true;\n        max[0] = 0;\n        max[1] = 0;\n    }\n\n    // align zero line if necessary\n    if (!allSameSign && y1ratio !== y2ratio) {\n        if (y1ratio < y2ratio) {\n                    // adjust min[1]\n            min[1] = min[0] / max[0] * max[1];\n        } else {\n                    // adjust min[0]\n            min[0] = min[1] / max[1] * max[0];\n        }\n    }\n    return [\n        [min[0], max[0]],\n        [min[1], max[1]]\n    ];\n};\n\n/**\n *\n *\n * @param {*} axisType\n * @param {*} fieldInfo\n * @param {*} axesCreators\n * @param {*} groupAxes\n *\n */\nexport const generateAxisFromMap = (axisType, fieldInfo, axesCreators, groupAxes) => {\n    let axisKey;\n    const currentAxes = [];\n    const { fields, index } = fieldInfo;\n    const { cacheMaps } = axesCreators;\n    const map = cacheMaps[`${axisType}AxesMap`];\n\n    const commonAxisKey = getAxisKey(axisType, index);\n    fields.forEach((field, axisIndex) => {\n        axisKey = getAxisKey(axisType, index, axisIndex, dataTypeScaleMap[field.subtype()]);\n        const axisConfig = getAxisConfig({ index, axisIndex, axisType }, field, axesCreators);\n\n        let axis;\n        if (!map.has(axisKey)) {\n            axis = createSimpleAxis(axisConfig, field, axesCreators);\n        } else {\n            axis = map.get(axisKey);\n            axis._rotationLock = false;\n            axis.config(axisConfig);\n            axisConfig.domain ? axis.domain(axisConfig.domain) : axis.resetDomain();\n        }\n        currentAxes.push(axis);\n        map.set(axisKey, axis);\n    });\n\n    if (currentAxes.length) {\n        map.set(commonAxisKey, currentAxes);\n        groupAxes.add(commonAxisKey);\n    }\n\n    return currentAxes;\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n    const xAxes = [];\n    const yAxes = [];\n\n    xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes.push(xAxis);\n    });\n    yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes.push(yAxis);\n    });\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n * return a default mark based on predefined set of rules of type and subtype of the fields\n *\n * @param {string} colFieldType dimension/measure - temporal/ordinal/nominal\n * @param {string} rowFieldType dimension/measure - temporal/ordinal/nominal\n * @return {Object} return mark type\n */\nexport const getDefaultMark = (colFieldType, rowFieldType) => {\n    let mark;\n\n    if (colFieldType === CATEGORICAL || rowFieldType === CATEGORICAL) {\n        mark = BAR;\n    } else if (colFieldType === TEMPORAL || rowFieldType === TEMPORAL) {\n        mark = LINE;\n    } else {\n        mark = POINT;\n    }\n\n    return mark;\n};\n\n/**\n *\n *\n * @param {*} axesCreators\n * @param {*} [fieldInfo=[]]\n *\n */\nexport const createRetinalAxis = (axesCreators, fieldProps = {}) => {\n    const { axisType, fieldsConfig } = axesCreators;\n    const field = fieldProps.field;\n    const axis = [];\n    const Cls = scaleMaps[axisType];\n\n    fieldProps.type = fieldProps.type ? fieldProps.type : getAxisType(fieldsConfig, field || null);\n    axis.push(new Cls(fieldProps));\n    return axis;\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} val\n *\n */\nexport const getIndex = (arr, val) => {\n    let i = 0;\n    let arrIndex = -1;\n\n    while (arrIndex === -1 && i < arr.length) {\n        if (arr[i].toString() === val.toString()) {\n            arrIndex = i;\n        }\n        i++;\n    }\n    return arrIndex;\n};\n\n/**\n *\n *\n * @param {*} colFields\n * @param {*} rowFields\n * @param {*} userLayerConfig\n *\n * @memberof CartesianEncoder\n */\nexport const getLayerConfFromFields = (colFields, rowFields, userLayerConfig) => userLayerConfig.filter((conf) => {\n    const userConf = conf instanceof Array ? conf : [conf];\n    const encodingArr = [].concat(...userConf.map(d => d.encoding).filter(d => d !== undefined));\n\n    if (!encodingArr.length) {\n        return true;\n    }\n\n    const xFields = [].concat(...encodingArr.map(d => [d.x && d.x.field, d.x0 && d.x0.field]))\n                .filter(d => d !== undefined && d !== null);\n    const yFields = [].concat(...encodingArr.map(d => [d.y && d.y.field, d.y0 && d.y0.field]))\n                .filter(d => d !== undefined && d !== null);\n\n    if (!xFields.length && !yFields.length) {\n        return true;\n    }\n\n    const colFieldExist = xFields.length ? xFields.every(d => colFields.indexOf(d) !== -1) : false;\n    const rowFieldExist = yFields.length ? yFields.every(d => rowFields.indexOf(d) !== -1) : false;\n    if (xFields.length && yFields.length) {\n        return colFieldExist && rowFieldExist;\n    }\n    return colFieldExist || rowFieldExist;\n});\n","import { layerFactory } from '@chartshq/visual-layer';\nimport { mergeRecursive, STATE_NAMESPACES, unionDomain } from 'muze-utils';\nimport {\n    generateAxisFromMap,\n    getDefaultMark,\n    getIndex,\n    getLayerConfFromFields,\n    getAdjustedDomain\n} from './encoder-helper';\nimport { retriveDomainFromData } from '../group-helper';\n\nimport { ROW, COLUMN, COL, LEFT, TOP, CARTESIAN, MEASURE, BOTH, X, Y } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class CartesianEncoder\n * @extends {VisualEncoder}\n */\nexport default class CartesianEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     *\n     * @memberof CartesianEncoder\n     */\n    static type () {\n        return CARTESIAN;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof CartesianEncoder\n     */\n    createAxis (axesCreators, fieldInfo) {\n        const geomCellAxes = {};\n        const {\n            axes\n        } = axesCreators;\n        const {\n            projections,\n            indices\n        } = fieldInfo;\n        const {\n            rowFields,\n            columnFields\n        } = projections;\n        const {\n             rowIndex,\n             columnIndex\n        } = indices;\n        const axisFields = [{\n            fields: rowFields,\n            index: rowIndex\n        }, {\n            fields: columnFields,\n            index: columnIndex\n        }];\n        const xAxes = axes.x || [];\n        const yAxes = axes.y || [];\n\n        [rowFields, columnFields].forEach((fields, i) => {\n            const type = i === 0 ? ROW : COLUMN;\n            const axis = i === 0 ? Y : X;\n\n            if (fields.length > 1) {\n                axesCreators.position = BOTH;\n            } else {\n                axesCreators.position = this.axisFrom()[type];\n            }\n            geomCellAxes[axis] = generateAxisFromMap(axis, axisFields[i], axesCreators, axis === X ? xAxes : yAxes);\n        });\n        return geomCellAxes;\n    }\n\n    updateDomains (store, axes) {\n        const xAxes = axes.x;\n        const yAxes = axes.y;\n        store.model.lock();\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${0}${i}0`, xAxes[i][j].domain());\n            }\n        }\n        for (let i = 0; i < yAxes.length; i++) {\n            for (let j = 0; j < yAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${i}${0}0`, yAxes[i][j].domain());\n                yAxes[i][j]._domainLock = false;\n            }\n        }\n\n        store.model.unlock();\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const unitDomains = store.get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`);\n        const resolver = context.resolver();\n        const units = resolver.units();\n        const domains = {\n            0: {},\n            1: {}\n        };\n\n        for (let rIdx = 0, len = units.length; rIdx < len; rIdx++) {\n            const unitsArr = units[rIdx];\n            for (let cIdx = 0, len2 = unitsArr.length; cIdx < len2; cIdx++) {\n                const unit = unitsArr[cIdx];\n                const axisFields = unit.fields();\n                [axisFields.x, axisFields.y].forEach((fieldArr, axisType) => {\n                    fieldArr.forEach((field, axisIndex) => {\n                        const key = !axisType ? `0${cIdx}${axisIndex}` : `${rIdx}0${axisIndex}`;\n                        const dom = unitDomains[`${rIdx}${cIdx}`];\n                        if (dom && Object.keys(dom).length !== 0) {\n                            domains[axisType][key] = unionDomain([(domains[axisType] && domains[axisType][key]) || [],\n                                dom[`${field}`]], field.subtype());\n                        }\n                    });\n                });\n            }\n        }\n\n        const { x: xAxes, y: yAxes } = resolver.axes();\n        store.model.lock();\n        [xAxes, yAxes].forEach((axesArr, axisType) => {\n            axesArr.forEach((axes, idx) => {\n                const min = [];\n                const max = [];\n                let domain = [];\n                let adjustedDomain = [];\n                if (axes.length > 1 && axes[0].constructor.type() === 'linear' && axes[0].config().alignZeroLine) {\n                    axes.forEach((axis, i) => {\n                        const key = !axisType ? `0${idx}${i}` : `${idx}0${i}`;\n                        domain = domains[axisType][key];\n                        min[i] = domain[0];\n                        max[i] = domain[1];\n                    });\n                    adjustedDomain = getAdjustedDomain(max, min);\n                }\n\n                axes.forEach((axis, index) => {\n                    const key = !axisType ? `0${idx}${index}` : `${idx}0${index}`;\n                    domain = adjustedDomain[index] || domains[axisType][key];\n                    axis.domain(domain);\n                    const type = !axisType ? 'x' : 'y';\n                    store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type}.${idx}${index}`, domain);\n                });\n            });\n        });\n        store.model.unlock();\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields, type) {\n        let facets = [];\n        let projections = [];\n        let counter = 0;\n        const primaryFacets = [];\n        const secondaryFacets = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n        const axisFrom = this.axisFrom();\n\n        for (let i = 0; i < primaryLen; i++) {\n            let projArr = [primaryFields[i]];\n            const primaryField = primaryFields[i];\n\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter];\n                if (secondaryField && secondaryField.type() === MEASURE) {\n                    counter++;\n                    projArr = [primaryField, secondaryField];\n                }\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n                primaryFacets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                    secondaryFacets.push(secondaryField);\n                }\n            }\n        }\n        if ((primaryFacets.length || secondaryFacets.length) && !projections.length) {\n            type = type === COL ? COLUMN : type;\n            if ((axisFrom[type] === LEFT || axisFrom[type] === TOP) && primaryFacets.length) {\n                const axisFromIndex = primaryFacets.length - 1;\n                const facet = primaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(secondaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    secondaryFacets.splice(existIndex, 1);\n                }\n                primaryFacets.splice(axisFromIndex, 1);\n            } else {\n                const axisFromIndex = 0;\n                const facet = secondaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(primaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    primaryFacets.splice(existIndex, 1);\n                }\n                secondaryFacets.splice(axisFromIndex, 1);\n            }\n        }\n\n        facets = [...primaryFacets, ...secondaryFacets];\n        facets = facets.filter((el, index, self) => index === self.findIndex(t => (t.toString() === el.toString())));\n        return {\n            facets,\n            projections\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof CartesianEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        return super.fieldSanitizer(datamodel, config);\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     *\n     * @memberof CartesianEncoder\n     */\n    getRetinalFieldsDomain (dataModels, encoding) {\n        const groupedModel = dataModels.groupedModel;\n        const domains = {};\n        for (const key in encoding) {\n            if ({}.hasOwnProperty.call(encoding, key)) {\n                const encodingObj = encoding[key];\n                const field = encodingObj.field;\n                if (!encodingObj.domain && field) {\n                    const domain = retriveDomainFromData(groupedModel, field);\n                    domains[field] = domain;\n                }\n            }\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     * @memberof CartesianEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n        // let currentLayerIndex = 0;\n        layerArray.length && layerArray.forEach((layer, i) => {\n            const def = layerFactory.sanitizeLayerConfig(layer);\n            def.order = i;\n            serializedLayers.push(def);\n        });\n        return serializedLayers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof CartesianEncoder\n     */\n    getLayerConfig (fields, userLayerConfig) {\n        const layerConfig = [];\n        const {\n            columnFields,\n            rowFields\n        } = fields;\n\n        // let currentLayerIndex = 0;\n        columnFields.forEach((colField) => {\n            const colFieldName = colField.toString();\n            rowFields.forEach((rowField) => {\n                let configs = [];\n                const rowFieldName = rowField.toString();\n                const encoding = {\n                    x: {\n                        field: colFieldName\n                    },\n                    y: {\n                        field: rowFieldName\n                    }\n                };\n                const rowFieldType = rowField.subtype();\n                const colFieldType = colField.subtype();\n                const mark = getDefaultMark(colFieldType, rowFieldType);\n\n                const defConfigs = [{\n                    mark,\n                    def: {\n                        mark,\n                        encoding\n                    }\n                }];\n\n                const layerConfigs = getLayerConfFromFields(colField.getMembers(),\n                    rowField.getMembers(), userLayerConfig || []);\n                if (layerConfigs.length) {\n                    configs = layerConfigs.map((layerConf) => {\n                        const mergedLayerConf = mergeRecursive(mergeRecursive({}, defConfigs[0].def), layerConf);\n                        const serializedLayerConfig = layerFactory.getSerializedConf(mergedLayerConf.mark,\n                            mergedLayerConf);\n                        return {\n                            mark: mergedLayerConf.mark,\n                            order: mergedLayerConf.order,\n                            def: serializedLayerConfig\n                        };\n                    });\n                } else {\n                    configs = defConfigs;\n                }\n\n                layerConfig.push(...configs);\n            });\n        });\n        return layerConfig;\n    }\n}\n","import { layerFactory } from '@chartshq/visual-layer';\nimport { mergeRecursive, STATE_NAMESPACES } from 'muze-utils';\nimport VisualEncoder from './visual-encoder';\nimport { RADIUS, ANGLE, SIZE, MEASURE, ARC, POLAR, COLOR } from '../enums/constants';\n/**\n *\n *\n * @export\n * @class PolarEncoder\n * @extends {VisualEncoder}\n */\nexport default class PolarEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof PolarEncoder\n     */\n    createAxis (axesCreators, fieldInfo) {\n        const {\n            axes\n        } = axesCreators;\n        const geomCellAxes = axes;\n        const {\n            indices\n        } = fieldInfo;\n        const {\n            rowIndex,\n            columnIndex\n        } = indices;\n        // Dummy axes for polar, to create blank cells\n        const pieAxes = geomCellAxes.pie || [];\n\n        pieAxes[rowIndex] = pieAxes[rowIndex] || [];\n        pieAxes[rowIndex][columnIndex] = [];\n\n        geomCellAxes.pie = pieAxes;\n        geomCellAxes.x = null;\n        geomCellAxes.y = null;\n\n        return geomCellAxes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields) {\n        let counter = 0;\n        const facets = [];\n        const projections = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n\n        for (let i = 0; i < primaryLen; i++) {\n            const primaryField = primaryFields[i];\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter++];\n                const projArr = secondaryField ? [primaryField, secondaryField] : [primaryField];\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                }\n            }\n        }\n        return {\n            facets,\n            projections\n        };\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const domains = store.get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`);\n        const domainProps = {\n            radius: [Infinity, -Infinity]\n        };\n        Object.values(domains).forEach((domainVal) => {\n            for (const key in domainVal) {\n                domainProps[key] = [Math.min(domainVal[key][0], domainProps[key][0]),\n                    Math.min(domainVal[key][1], domainProps[key][1])];\n            }\n        });\n        store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`, domainProps.radius);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    setCommonDomain () {\n        // No domain to be set\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    static type () {\n        return POLAR;\n    }\n\n    layers (...layers) {\n        if (layers.length) {\n            this._layers = layers[0];\n            return this;\n        }\n        return this._layers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof PolarEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        let sanitizedRows = [[], []];\n        let sanitizedColumns = [[], []];\n        const fields = super.fieldSanitizer(datamodel, config);\n        const {\n            layers\n        } = config;\n        const {\n            rows,\n            columns\n        } = fields;\n        const layer = layers[0];\n        const encoding = layer.encoding;\n        const radius = encoding && encoding.radius ? encoding.radius.field : null;\n        const angle = encoding && encoding.angle ? encoding.angle.field : null;\n        const sanitizedFields = [sanitizedRows, sanitizedColumns];\n\n        [rows, columns].forEach((fieldType, typeIndex) => {\n            fieldType.forEach((fieldSet, i) => fieldSet.forEach((field) => {\n                if (field.toString() !== radius && field.toString() !== angle && field.type() !== MEASURE) {\n                    sanitizedFields[typeIndex][i].push(field);\n                }\n            }));\n        });\n        sanitizedColumns = [...new Set(sanitizedColumns)];\n        sanitizedRows = [...new Set(sanitizedRows)];\n        this.fieldInfo({ rows: sanitizedRows, columns: sanitizedColumns });\n        return this.fieldInfo();\n    }\n\n    getRetinalFieldsDomain (dataModels, encoding, facetFields, groupBy) {\n        let sizeField;\n        let colorField;\n        const fields = [];\n        const layers = this.layers();\n        const dataModel = dataModels.groupedModel;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const domains = {};\n        if (layers && layers[0]) {\n            const layer = layers[0];\n            const layerEncoding = layer.def.encoding || {};\n\n            [RADIUS, ANGLE, SIZE, COLOR].forEach((encType) => {\n                const field = layerEncoding[encType] ? layerEncoding[encType].field : '';\n                const measureField = fieldsConfig[field] && fieldsConfig[field].def.type === MEASURE;\n                if (encType === SIZE && measureField) {\n                    sizeField = field;\n                }\n                if (encType === COLOR) {\n                    colorField = field;\n                }\n                fieldsConfig[field] && !measureField && fields.push(field);\n            });\n        }\n\n        if (sizeField) {\n            domains[sizeField] = dataModel.groupBy(facetFields, {\n                [sizeField]: 'sum'\n            }).getFieldspace().fieldsObj()[sizeField].domain();\n        }\n\n        if (colorField) {\n            const dm = dataModel.groupBy([...facetFields, ...fields], groupBy.measures);\n            domains[colorField] = dm.getFieldspace().fieldsObj()[colorField].domain();\n        }\n        return domains;\n    }\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof PolarEncoder\n     */\n    getLayerConfig (fields, userLayerConfig) {\n        let layerConfig = [];\n        const {\n                columnFields,\n                rowFields\n            } = fields;\n        const allFields = [...columnFields, ...rowFields];\n\n        allFields.forEach(() => {\n            const encoding = {};\n            let config = {\n                mark: ARC,\n                def: {\n                    encoding\n                }\n            };\n            if (userLayerConfig && userLayerConfig.length > 0) {\n                config = mergeRecursive(config, userLayerConfig[0]);\n            }\n            layerConfig.push(config);\n        });\n        if (layerConfig.length === 0) {\n            layerConfig = userLayerConfig;\n        }\n\n        this.layers(layerConfig);\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     *\n     * @memberof PolarEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n\n        layerArray.length && layerArray.forEach((layer) => {\n            const def = layerFactory.getSerializedConf(layer.mark, layer);\n            serializedLayers.push({\n                mark: layer.mark,\n                def\n            });\n        });\n        return serializedLayers;\n    }\n}\n","import { createRetinalAxis } from './encoder-helper';\nimport { COLOR, SHAPE, SIZE } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class RetinalEncoder\n * @extends {VisualEncoder}\n */\nexport default class RetinalEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     *\n     * @memberof RetinalEncoder\n     */\n    createAxis (axesCreators) {\n        const { fieldsConfig, config } = axesCreators;\n        const newAxes = {};\n\n        [COLOR, SHAPE, SIZE].forEach((axisType) => {\n            newAxes[`${axisType}`] = createRetinalAxis({ axisType, fieldsConfig }, config[axisType]);\n        });\n        return newAxes;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof RetinalEncoder\n     */\n    static type () {\n        return 'retinal';\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof RetinalEncoder\n     */\n    getLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n        userLayerConfig.forEach((e) => {\n            const config = e;\n            [COLOR, SHAPE, SIZE].forEach((axis) => {\n                if (encodingConfigs[axis] && encodingConfigs[axis].field) {\n                    const def = config.def;\n                    if (config.def instanceof Array) {\n                        def.forEach((conf) => {\n                            conf.encoding = conf.encoding || {};\n                            !conf.encoding[axis] && (conf.encoding[axis] = {});\n                            conf.encoding[axis].field = encodingConfigs[axis].field;\n                        });\n                    } else {\n                        def.encoding = def.encoding || {};\n                        !def.encoding[axis] && (def.encoding[axis] = {});\n                        def.encoding[axis].field = encodingConfigs[axis].field;\n                    }\n                }\n            });\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} context\n     *\n     * @memberof RetinalEncoder\n     */\n    setCommonDomain (context) {\n        const { domains, axes, encoding } = context;\n\n        Object.entries(encoding).forEach((enc) => {\n            if (enc[1] && enc[1].field) {\n                const encType = enc[0];\n                const field = enc[1].field;\n\n                if (field) {\n                    axes[encType].forEach((axis) => {\n                        const domain = domains[field];\n                        !enc[1].domain && axis.updateDomain(domain);\n                    });\n                }\n            }\n        });\n        return axes;\n    }\n}\n","import { Store, FieldType } from 'muze-utils';\nimport { DATA_UPDATE_COUNTER } from '../enums/defaults';\nimport { Variable } from '../variable';\nimport { PolarEncoder, CartesianEncoder } from '../encoder';\nimport {\n    DIMENSION,\n    MEASURE,\n    ORDINAL,\n    LINEAR,\n    ROW,\n    COLUMN,\n    COL,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    COLOR,\n    SIZE,\n    TEMPORAL,\n    SHAPE,\n    INTERACTION,\n    GRID_LINES,\n    GRID_BANDS,\n    HEADER,\n    FACET,\n    X,\n    Y,\n    POLAR\n} from '../enums/constants';\n\n/**\n * Creates an instance of a store which contains the arguments to make the class reactive\n *\n * @return {Object} instance of store\n * @memberof VisualGroup\n */\nexport const initStore = () => new Store({\n    [DATA_UPDATE_COUNTER]: DATA_UPDATE_COUNTER\n});\n\n/**\n *\n *\n * @param {*} arr\n */\nexport const isDistributionEqual = arr => [...arr[0], ...arr[1]].reduce((isEqual, row) => {\n    const rowType = row.type();\n\n    if (rowType === MEASURE || rowType === TEMPORAL) {\n        isEqual = true;\n    }\n    return isEqual;\n}, false);\n\n/**\n *\n *\n */\nexport const initializeCacheMaps = () => ({\n    cellMap: new Map(),\n    xAxesMap: new Map(),\n    yAxesMap: new Map(),\n    entryCellMap: new Map(),\n    exitCellMap: new Map()\n});\n\n/**\n *\n *\n * @param {*} axisName\n * @param {*} id\n */\nexport const getAxisKey = (axisName, ...params) => `${axisName}-axis-${params.join('-')}`;\n\n/**\n *\n *\n * @param {*} rowId\n * @param {*} columnId\n */\nexport const getCellKey = (rowId, columnId) => `cell-${rowId}-${columnId}`;\n\n/**\n *\n *\n * @param {*} config\n *\n */\nexport const extractUnitConfig = (config) => {\n    const unitConfig = {};\n    const attrNames = [INTERACTION, GRID_LINES, GRID_BANDS];\n\n    attrNames.forEach((attr) => {\n        if (config[attr] !== undefined) {\n            unitConfig[attr] = config[attr];\n        }\n    });\n    return unitConfig;\n};\n\n/**\n *\n *\n * @param {*} headers\n * @param {*} index\n * @param {*} rowLength\n *\n * @memberof MatrixResolver\n */\nexport const getHeaderText = (headers, index, rowLength) => {\n    let header = '';\n\n    if (index === rowLength - 1 && headers.length > rowLength) {\n        for (let i = index; i < headers.length - 1; i++) {\n            header += `${headers[i].toString()} / `;\n        }\n        header += headers[headers.length - 1].toString();\n        return header;\n    } else if (headers[index]) {\n        return headers[index].toString();\n    }\n    return '';\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} fieldHeaders\n * @param {*} TextCell\n * @param {*} labelManager\n *\n */\nexport const headerCreator = (fields, fieldHeaders, TextCell, labelManager) => {\n    const headers = fields.length > 0 ? fields[0].map((cell, i) => new TextCell({ type: HEADER }, { labelManager })\n                    .source(getHeaderText(fieldHeaders, i, fields[0].length))\n                    .config({ show: cell.config().show })) : [];\n    return headers;\n};\n\n/**\n *\n *\n * @param {*} variable\n * @param {*} allFields\n *\n */\nexport const findInGroup = (variable, allFields) => {\n    let channel = null;\n\n    [COLOR, SIZE, SHAPE].forEach((e) => {\n        if (this.store.get(e) && variable === this.store.get(e)[0]) {\n            channel = e;\n        }\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    [ROW, COL].forEach((facetType) => {\n        allFields[`${facetType}Facets`].forEach((e) => {\n            if (e.toString() === variable) {\n                channel = { channel: FACET, type: facetType === COL ? COLUMN : ROW };\n            }\n        });\n    });\n\n    if (channel) {\n        return channel;\n    }\n\n    [ROW, COL].forEach((projType) => {\n        allFields[`${projType}Projections`].forEach((e) => {\n            e.forEach((m) => {\n                if (m.toString() === variable) {\n                    channel = projType === COL ? X : Y;\n                }\n            });\n        });\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    return null;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} field\n */\nexport const getAxisType = (fieldsConfig, field) => {\n    let fieldType = ORDINAL;\n\n    if (field && fieldsConfig[field].def.type !== DIMENSION) {\n        fieldType = LINEAR;\n    }\n    return fieldType;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} fieldName\n *\n */\nexport const retriveDomainFromData = (datamodel, fieldName) => {\n    const field = datamodel.getFieldspace().fields.find(d => d.name() === fieldName.toString());\n    return field.domain();\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    let xAxes = null;\n    let yAxes = null;\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n\n    xAxisSet && xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes = xAxes || [];\n        xAxes.push(xAxis);\n    });\n\n    yAxisSet && yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes = yAxes || [];\n        yAxes.push(yAxis);\n    });\n\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n *\n *\n * @param {*} layers\n *\n */\nexport const getEncoder = (layers) => {\n    let encoder = new CartesianEncoder();\n\n    if (layers.length) {\n        // Figuring out the kind of layers the group will have\n        encoder = layers.every(e => e.mark === 'arc') ? new PolarEncoder() : encoder;\n    }\n    return encoder;\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} userAxisFromConfig\n *\n */\nexport const getHeaderAxisFrom = (type, fields, userAxisFromConfig) => {\n    let axisFrom = userAxisFromConfig[type];\n    let headerFrom = '';\n    const options = type === ROW ? [LEFT, RIGHT] : [BOTTOM, TOP];\n    const [firstField, secondField] = fields;\n    const firstFieldType = i => (firstField.length ? firstField[i].type() : null);\n    const secondFieldType = i => (secondField.length ? secondField[i].type() : null);\n\n    if (firstFieldType(firstField.length - 1) === DIMENSION && secondFieldType(0) === DIMENSION) {\n        headerFrom = axisFrom ? options[1 - options.indexOf(axisFrom)] : options[1];\n\n        if (type === COLUMN && (firstField[firstField.length - 1].toString() === secondField[0].toString())) {\n            axisFrom = TOP;\n        } else {\n            axisFrom = axisFrom || options[0];\n        }\n    } else if (secondFieldType(secondField.length - 1) === DIMENSION) {\n        headerFrom = type === ROW ? RIGHT : BOTTOM;\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else {\n        headerFrom = type === ROW ? LEFT : TOP;\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    if (firstFieldType(firstField.length - 1) === MEASURE && secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    } else if (secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else if (firstFieldType(firstField.length - 1) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    return [headerFrom, axisFrom];\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} layers\n *\n * @memberof MatrixResolver\n */\nexport const setFacetsAndProjections = (context, fieldInfo, encoder) => {\n    const {\n        fields,\n        type\n    } = fieldInfo;\n    const { facets, projections } = encoder.simpleEncoder.getFacetsAndProjections(fields, type);\n\n    context.facets({ [`${type}Facets`]: facets });\n    context.projections({ [`${type}Projections`]: projections });\n\n    return { facets, projections, fields };\n};\n\nconst getRowBorders = (left, right) => {\n    const borders = {};\n    borders.top = false;\n    borders.bottom = false;\n    if (left.length > 1 || right.length > 1) {\n        borders.top = true;\n        borders.bottom = true;\n    }\n    return borders;\n};\n\nconst getColumnsBorders = (top, bottom) => {\n    const borders = {};\n    borders.left = false;\n    borders.right = false;\n    if (top.length || bottom.length) {\n        if ((top[0] && top[0].length > 1) || (bottom[0] && bottom[0].length > 1)) {\n            borders.left = true;\n            borders.right = true;\n        }\n    }\n    return borders;\n};\n\nconst getValueBorders = (rows, columns) => {\n    const borders = { top: true, left: true, bottom: true, right: true };\n    const borderTypeRow = [LEFT, RIGHT];\n    const borderTypeCol = [TOP, BOTTOM];\n    rows.forEach((e, i) => {\n        if (e[0] && e[0].length) {\n            borders[borderTypeRow[i]] = true;\n        } else {\n            borders[borderTypeRow[i]] = false;\n        }\n    });\n    columns.forEach((e, i) => {\n        if (e.length) {\n            borders[borderTypeCol[i]] = true;\n        } else {\n            borders[borderTypeCol[i]] = false;\n        }\n    });\n\n    return borders;\n};\n\nexport const getBorders = (matrices, encoder) => {\n    let showRowBorders = { top: false, bottom: false };\n    let showColBorders = { left: false, right: false };\n    let showValueBorders = { top: false, bottom: false, left: false, right: false };\n    const {\n        rows,\n        columns,\n        values: valueMatrix\n    } = matrices;\n    const [leftRows, rightRows] = rows;\n    const [topColumns, bottomColumns] = columns;\n    const {\n        rowDimensions,\n        columnDimensions,\n        rowTemporalFields,\n        columnTemporalFields,\n        columnMeasures,\n        rowMeasures\n    } = encoder.fieldInfo();\n    const allDimensionLength = rowDimensions.length + columnDimensions.length;\n    const allMeasuresLength = rowMeasures.length + columnMeasures.length;\n    const allTemporalFieldsLength = rowTemporalFields.length + columnTemporalFields.length;\n\n    if (encoder.constructor.type() === POLAR) {\n        if (!allDimensionLength) {\n            return { showRowBorders, showColBorders, showValueBorders };\n        }\n    } else if (!allMeasuresLength && !allTemporalFieldsLength && allDimensionLength <= 2) {\n        return { showRowBorders, showColBorders, showValueBorders };\n    }\n\n    showRowBorders = getRowBorders(leftRows, rightRows);\n    showColBorders = getColumnsBorders(topColumns, bottomColumns);\n    showValueBorders = getValueBorders([leftRows, rightRows], [topColumns, bottomColumns]);\n\n    if (valueMatrix.length > 1) {\n        showValueBorders.top = true;\n        showValueBorders.bottom = true;\n    }\n    if (valueMatrix.length && valueMatrix[0].length > 1) {\n        showValueBorders.left = true;\n        showValueBorders.right = true;\n    }\n    return { showRowBorders, showColBorders, showValueBorders };\n};\n\nexport const getFieldsFromSuppliedLayers = (suppliedLayerConfig, fieldsConfig) => {\n    let fields = [];\n    const encodingArr = suppliedLayerConfig.map(conf => (conf.encoding || {}));\n    fields = [...fields, [].concat(...encodingArr.map(enc => Object.values(enc).map(d => d.field)))];\n    fields = fields.filter(field => fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n    return fields;\n};\n\nexport const extractFields = (facetsAndProjections, layerFields) => {\n    const fields = Object.values(facetsAndProjections).map((arr) => {\n        const flattenArray = [].concat(...arr);\n        return [].concat(...flattenArray.map((field) => {\n            if (field instanceof Variable) {\n                return field.getMembers();\n            }\n            return field;\n        }));\n    });\n    return [].concat(...fields, ...layerFields);\n};\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: false\n    },\n    [ACTIONS.HOVER]: {\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.LONGTOUCH]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: true\n    },\n    [ACTIONS.TOUCHDRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: true\n    },\n    [ACTIONS.CLICK]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: false\n    }\n};\n","import {\n    FieldType,\n    getDependencyOrder,\n    getObjProp,\n    defaultValue,\n    objectIterator,\n    unionDomain,\n    makeElement,\n    DimensionSubtype,\n    getClosestIndexOf,\n    toArray,\n    MeasureSubtype\n} from 'muze-utils';\nimport { layerFactory } from '@chartshq/visual-layer';\n\nexport const getDimensionMeasureMap = (layers, fieldsConfig) => {\n    const retinalEncodingsAndMeasures = {};\n\n    layers.forEach((layer) => {\n        const {\n            colorField,\n            sizeField,\n            shapeField,\n            xField,\n            yField\n        } = layer.encodingFieldsInf();\n        const measures = [xField, yField].filter(field => fieldsConfig[field] && fieldsConfig[field].def.type ===\n            FieldType.MEASURE);\n        [colorField, sizeField, shapeField].forEach((field) => {\n            if (fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                !retinalEncodingsAndMeasures[field] && (retinalEncodingsAndMeasures[field] = []);\n                retinalEncodingsAndMeasures[field].push(...measures);\n            }\n        });\n    });\n\n    for (const key in retinalEncodingsAndMeasures) {\n        if ({}.hasOwnProperty.call(retinalEncodingsAndMeasures, key)) {\n            retinalEncodingsAndMeasures[key] = [...new Set(retinalEncodingsAndMeasures[key])];\n        }\n    }\n    return retinalEncodingsAndMeasures;\n};\n\nexport const transformDataModels = (transform, dataModel) => {\n    const dataModels = {};\n    for (const key in transform) {\n        if ({}.hasOwnProperty.call(transform, key)) {\n            const transformVal = transform[key];\n            dataModels[key] = transformVal(dataModel);\n        }\n    }\n\n    return dataModels;\n};\n\nexport const getLayerFromDef = (context, definition, existingLayer, namespaces) => {\n    let instances = existingLayer;\n    const dependencies = context._layerDeps;\n    const metaInf = context.metaInf();\n    if (!existingLayer) {\n        instances = layerFactory.getLayerInstance(definition);\n        toArray(instances).forEach((inst, i) => {\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: namespaces[i]\n            });\n            inst.store(context.store());\n        });\n    }\n    const layers = {};\n    const instanceArr = toArray(instances);\n    definition = toArray(definition);\n    definition.reduce((acc, def, idx) => {\n        const instance = instanceArr[idx];\n        instance.config(def);\n        instance.dependencies(dependencies);\n        instance.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        if (def.name) {\n            instance.alias(def.name);\n        }\n        layers[instance.alias()] = instance;\n        return acc;\n    }, {});\n    return layers;\n};\n\nexport const resolveEncodingTransform = (layerInst, store) => {\n    const encodingTransform = layerInst.config().encodingTransform || {};\n    const resolvable = encodingTransform.resolvable;\n    let depArr = [];\n    if (resolvable) {\n        const resolved = resolvable(store);\n        depArr = resolved.depArr;\n        layerInst.encodingTransform(resolved.fn);\n    } else if (encodingTransform instanceof Function) {\n        layerInst.encodingTransform(encodingTransform);\n    }\n    return depArr;\n};\n\nexport const createLayers = (context, layerDefinitions) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    const store = {\n        layers: {},\n        components: {\n            unit: context\n        }\n    };\n    let layerIndex = 0;\n    let layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef, i) => {\n        const mark = layerDef.mark;\n        const definition = layerDef.def;\n        const markId = `${mark}-${i}`;\n        const defArr = toArray(definition);\n        defArr.forEach((def) => {\n            def.order = layerDef.order + layerIndex;\n        });\n        layerIndex += defArr.length;\n        const instances = getLayerFromDef(context, definition, layersMap[markId], i);\n        store.layers = Object.assign(store.layers, instances);\n        const instanceValues = Object.values(instances);\n        layersArr = layersArr.concat(...instanceValues);\n        layersMap[markId] = instanceValues;\n        markSet[markId] = markId;\n        return layersArr;\n    }, []);\n    store.unit = context;\n    const layerdeps = {};\n    layers.forEach((layer) => {\n        const depArr = resolveEncodingTransform(layer, store);\n        layerdeps[layer.alias()] = depArr;\n    });\n\n    const order = getDependencyOrder(layerdeps);\n    layers = order.map(name => store.layers[name]);\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n    return layers;\n};\n\nexport const sanitizeLayerDef = (layerDefs) => {\n    const sanitizedDefs = [];\n    layerDefs.forEach((layerDef, i) => {\n        const def = layerDef.def;\n        const mark = layerDef.mark;\n        if (!def) {\n            const sConf = layerFactory.getSerializedConf(layerDef.mark, layerDef);\n            if (!sConf.name) {\n                sConf.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push({\n                mark: layerDef.mark,\n                def: sConf\n            });\n        } else {\n            if (!def.name) {\n                def.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push(layerDef);\n        }\n    });\n    return sanitizedDefs;\n};\n\nexport const attachDataToLayers = (layers, dm, transformedDataModels) => {\n    layers.forEach((layer) => {\n        const dataSource = layer.config().source;\n        const dataModel = dataSource instanceof Function ? dataSource(dm) :\n            (transformedDataModels[dataSource] || dm);\n        if (layer.data() !== dataModel) {\n            layer.data(dataModel);\n        }\n    });\n};\n\nexport const attachAxisToLayers = (axes, layers, layerAxisIndex) => {\n    layers.forEach((layer) => {\n        const layerId = layer.id();\n        const axesObj = {};\n\n        objectIterator(axes, (key) => {\n            const axisInf = layerAxisIndex[layerId];\n            if (axisInf) {\n                axes[key] && (axesObj[key] = axes[key][axisInf[key] || 0]);\n            }\n        });\n        Object.keys(axesObj).length && layer.axes(axesObj);\n    });\n};\n\nexport const getLayerAxisIndex = (layers, fields) => {\n    const layerAxisIndex = {};\n    layers.forEach((layer) => {\n        const { axis, encoding } = layer.config();\n        const id = layer.id();\n        ['x', 'y'].forEach((type) => {\n            let index;\n            const field = defaultValue(getObjProp(axis, type), encoding[type] && encoding[type].field);\n            if (fields[type]) {\n                index = fields[type].findIndex(fieldInst => fieldInst.getMembers().indexOf(field) !== -1);\n            } else {\n                index = 0;\n            }\n            !layerAxisIndex[id] && (layerAxisIndex[id] = {});\n            layerAxisIndex[id][type] = index;\n        });\n    });\n    return layerAxisIndex;\n};\n\nexport const unionDomainFromLayers = (layers, axisFields, layerAxisIndex, fieldsConfig) => {\n    let domains = {};\n    layers = layers.filter(layer => layer.getDataDomain() !== null);\n    layers.forEach((layer) => {\n        let domainValues = {};\n        const config = layer.config();\n        const encoding = config.encoding;\n        const layerDomain = layer.getDataDomain();\n        const layerId = layer.id();\n\n        if (layerDomain !== null && config.calculateDomain !== false) {\n            domainValues = Object.entries(layerDomain);\n            domains = domainValues.reduce((fieldDomain, domain) => {\n                const encodingType = domain[0];\n                const field = encoding[encodingType].field;\n                const axisIndex = layerAxisIndex[layerId][encodingType];\n                if (encodingType in axisFields) {\n                    const fieldStr = `${axisFields[encodingType][axisIndex]}`;\n                    fieldDomain[fieldStr] = fieldDomain[fieldStr] || [];\n                    fieldDomain[fieldStr] = unionDomain(([fieldDomain[fieldStr], domain[1]]),\n                        fieldsConfig[field].def.subtype ? fieldsConfig[field].def.subtype :\n                                fieldsConfig[field].def.type);\n                } else {\n                    fieldDomain[encodingType] = domain[1];\n                }\n                return fieldDomain;\n            }, domains);\n        }\n    });\n    return domains;\n};\n\nexport const renderLayers = (context, container, layers, measurement) => {\n    context._lifeCycleManager.notify({ client: layers, action: 'beforedraw', formalName: 'layer' });\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const orderedLayers = context.layers().sort((a, b) => a.config().order - b.config().order);\n    const layerParentGroup = makeElement(container, 'g', [1], `${classPrefix}-layer-group`);\n    const layerDepOrder = getDependencyOrder(context._layerDepOrder);\n    const groups = {};\n    makeElement(layerParentGroup, 'g', orderedLayers, null, {\n        update: (group, layer) => {\n            groups[layer.alias()] = {\n                group,\n                layer\n            };\n        }\n    });\n    const layerSeq = layerDepOrder.map(name => groups[name]);\n    layerSeq.forEach((o) => {\n        const layer = o.layer;\n        const group = o.group;\n        layer.measurement(measurement);\n        layer.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        layer.config().render !== false && layer.mount(group.node());\n    });\n    return this;\n};\n\nexport const getNearestDimensionalValue = (context, position) => {\n    const fields = context.fields();\n    if (!fields.x.length || !fields.y.length) {\n        return null;\n    }\n    const data = context.data();\n    const axes = context.axes();\n    const fieldsConfig = data.getFieldsConfig();\n    const xField = getObjProp(fields, 'x', 0).getMembers()[0];\n    const yField = getObjProp(fields, 'y', 0).getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n\n    const entryVal = [['x', xFieldType, xField], ['y', yFieldType, yField]].find(entry =>\n        entry[1] === DimensionSubtype.CATEGORICAL || entry[1] === DimensionSubtype.TEMPORAL);\n\n    if (!entryVal || (xFieldType !== MeasureSubtype.CONTINUOUS && yFieldType !== MeasureSubtype.CONTINUOUS)) {\n        return null;\n    }\n    const field = entryVal[2];\n    const index = fieldsConfig[field].index;\n    let key = axes[entryVal[0]][0].invert(position[entryVal[0]]);\n    if (entryVal[1] === DimensionSubtype.TEMPORAL) {\n        const filterData = [...new Set(data.getData().data.map(d => d[index]))];\n        key = filterData[getClosestIndexOf(filterData, key)];\n    }\n\n    return key !== undefined ? [[field], [key]] : null;\n};\n\nexport const getLayersBy = (layers, searchBy, value) => layers.filter((layer) => {\n    const name = searchBy === 'type' ? layer.constructor.formalName() : layer.alias();\n    return name === value;\n});\n\nexport const removeLayersBy = (layers, searchBy, value) => {\n    layers.filter((inst) => {\n        const name = searchBy === 'type' ? inst.config().mark : inst.alias();\n        if (name === value) {\n            inst.remove();\n            return false;\n        }\n        return true;\n    });\n};\n\nexport const createSideEffectGroup = (container, className) => makeElement(container, 'g', [1], className).node();\n\nexport const createRenderPromise = (unit) => {\n    const renderedPromise = unit._renderedPromise;\n    renderedPromise.then(() => {\n        unit._renderedPromise = new Promise((resolve) => {\n            unit._renderedResolve = resolve;\n        });\n        createRenderPromise(unit);\n    });\n};\n","import { getObjProp, defaultValue, makeElement, DimensionSubtype, DataModel, createSelection } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport { GRIDLINEPARENTGROUPCLASS, GRIDBANDPARENTGROUPCLASS, GRIDPARENTGROUP } from '../enums/constants';\nimport { TIMEDIFFS } from '../enums/reactive-props';\n\nconst LINEAR = ScaleType.LINEAR;\n\nconst getLayerDefinition = (context, axes, type, orientation) => {\n    let encoding;\n    const config = context.config();\n    const { classPrefix, gridLines, gridBands } = config;\n    const gridLineColor = gridLines.color;\n    const zeroLineColor = gridLines.zeroLineColor;\n    const defClassName = type === 'band' ? gridBands.defClassName : gridLines.defClassName;\n    const gridBandColor = gridBands[orientation].color;\n    const axis = axes[orientation][0];\n    const isLinearScale = axis.constructor.type() === LINEAR;\n\n    if (type === 'band' && isLinearScale) {\n        encoding = {\n            [orientation]: `${orientation}value`,\n            [`${orientation}0`]: `${orientation}value0`\n        };\n    } else {\n        encoding = {\n            [orientation]: isLinearScale ? `${orientation}value` : `${orientation}dim`\n        };\n    }\n    encoding.color = {\n        value: (data, i) => {\n            const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n            if (type === 'band') {\n                return gridBandColor[i % 2];\n            }\n            return isNegativeDomain && data[orientation] === 0 ? zeroLineColor : gridLineColor;\n        }\n    };\n\n    return {\n        definition: {\n            defClassName: `${defClassName}-${orientation}`,\n            className: config.className,\n            individualClassName: (data, i) => {\n                let className;\n                const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n                if (isNegativeDomain && data.y === 0 && type !== 'band') {\n                    className = `${classPrefix}-axis-zero-line`;\n                } else {\n                    className = `${classPrefix}-grid-${type}-${orientation}-${i % 2}`;\n                }\n                return className;\n            },\n            [`pad${orientation.toUpperCase()}`]: type === 'band' ? 0 : undefined,\n            encoding\n        },\n        axes: {\n            [orientation]: axis\n        },\n        interactive: false\n    };\n};\n\nconst getDefaultVisibilty = (show, axis) => {\n    if (axis.constructor.type() === LINEAR) {\n        return show;\n    }\n    return false;\n};\n\nexport const getGridLayerDefinitions = (context, config, type) => ['x', 'y'].map((axisType) => {\n    const axes = context.axes();\n    if (!axes[axisType]) {\n        return null;\n    }\n    const show = defaultValue(config[axisType] && config[axisType].show,\n        getDefaultVisibilty(config.show, axes[axisType][0]));\n\n    return show ? getLayerDefinition(context, axes, type, axisType) : null;\n}).filter(d => d !== null);\n\nexport const getGridLayerData = (axes, fields, fieldsConfig) => {\n    const gridData = {};\n    ['x', 'y'].forEach((type) => {\n        let ticks = axes[type][0].getTickValues();\n        const subtype = getObjProp(fieldsConfig, getObjProp(fields, type, 0).getMembers()[0], 'def', 'subtype');\n        const jsonData = [];\n        const schema = [\n            {\n                name: 'yvalue',\n                type: 'measure'\n            }, {\n                name: 'xvalue',\n                type: 'measure'\n            },\n            {\n                name: 'yvalue0',\n                type: 'measure'\n            }, {\n                name: 'xvalue0',\n                type: 'measure'\n            }, {\n                name: 'xdim',\n                type: 'dimension',\n                subtype\n            }, {\n                name: 'ydim',\n                type: 'dimension',\n                subtype\n            }\n        ];\n        const len = Math.max(ticks.length);\n        ticks = subtype === DimensionSubtype.TEMPORAL ? ticks.map(d => d.getTime()) : ticks;\n        for (let i = 0; i < len; i += 1) {\n            jsonData.push({\n                [`${type}value`]: ticks[i],\n                [`${type}value0`]: ticks[i + 1],\n                [`${type}dim`]: ticks[i],\n                [`${type}dim`]: ticks[i]\n            });\n        }\n        gridData[type] = new DataModel(jsonData, schema);\n    });\n    return gridData;\n};\n\nexport const createGridLineLayer = (context) => {\n    const vuConf = context.config();\n    const metaInf = context.metaInf();\n    ['band', 'line'].forEach((type) => {\n        let mark;\n        let config;\n        let gridType;\n        if (type === 'band') {\n            mark = 'bar';\n            gridType = 'gridBand';\n            config = vuConf.gridBands;\n        } else {\n            mark = 'tick';\n            gridType = 'gridLine';\n            config = vuConf.gridLines;\n        }\n        const definitions = getGridLayerDefinitions(context, config, type);\n\n        context[`_${gridType}Selection`] = createSelection(context[`${type}Sel`], () => {\n            const inst = layerFactory.getLayerInstance({ mark });\n            inst.dependencies(context._layerDeps);\n            return inst;\n        }, definitions).each((layer, atomicDef, i) => {\n            const definition = atomicDef.definition;\n            const sConf = layerFactory.getSerializedConf(mark, definition);\n            const axesObj = atomicDef.axes;\n            layer\n                            .metaInf({\n                                unitRowIndex: metaInf.rowIndex,\n                                unitColIndex: metaInf.colIndex,\n                                namespace: `${metaInf.namespace}${type}${i}`\n                            })\n                            .store(context.store())\n                            .config(sConf)\n                            .dataProps({\n                                timeDiffs: context.store().get(TIMEDIFFS)\n                            })\n                            .axes(axesObj);\n        });\n    });\n};\n\nexport const attachDataToGridLineLayers = (context) => {\n    const axes = context.axes();\n    const measurement = {\n        width: context.width(),\n        height: context.height()\n    };\n    const gridLines = context._gridLineSelection.getObjects();\n    const gridBands = context._gridBandSelection.getObjects();\n    const gridLayerData = getGridLayerData(axes, context.fields(), context.data().getFieldsConfig());\n    [].concat(...gridBands, ...gridLines).forEach((inst) => {\n        inst.data(inst.axes().x ? gridLayerData.x : gridLayerData.y).measurement(measurement);\n    });\n};\n\nexport const renderGridLineLayers = (context, container) => {\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const gridLines = context._gridLineSelection.getObjects();\n    const gridBands = context._gridBandSelection.getObjects();\n\n    const gridLineParentGroup = makeElement(container, 'g', [1], `${classPrefix}-${GRIDPARENTGROUP}`);\n    [[gridLines, `${classPrefix}-${GRIDLINEPARENTGROUPCLASS}`],\n            [gridBands, `${classPrefix}-${GRIDBANDPARENTGROUPCLASS}`]].forEach((entry) => {\n                const [instances, parentGroupClass] = entry;\n                const mountPoint = makeElement(gridLineParentGroup, 'g', [1], `.${parentGroupClass}`);\n                const className = `${parentGroupClass}-group`;\n                makeElement(mountPoint, 'g', instances, `.${className}`, {\n                    update: (group, instance) => {\n                        instance.dataProps({ timeDiffs: context._timeDiffs }).mount(group.node());\n                    }\n                });\n            });\n};\n","import { CLASSPREFIX, CONSOLIDATED } from './enums/constants';\n\n/**\n * Returns the default configuration of the visual unit\n * @return {Object} Default configuration of visual unit\n */\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'visual-unit',\n    className: '',\n    trackerClassName: 'visual-unit-tracker',\n    gridLines: {\n        defClassName: 'axis-grid-lines',\n        className: '',\n        show: true,\n        color: '#efefef',\n        zeroLineColor: '#b6b6b6'\n    },\n    gridBands: {\n        defClassName: 'axis-grid-bands',\n        className: '',\n        show: false,\n        y: {\n            color: ['#fff', '#fbfbfb']\n        },\n        x: {\n            color: ['#fff', '#f9f9f9']\n        }\n    },\n    arcLayerClassName: 'layer-arc',\n    interaction: {\n        tooltip: {\n            mode: CONSOLIDATED\n        }\n    },\n    sideEffectClassName: 'side-effect-container'\n};\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const GRIDBANDPARENTGROUPCLASS = 'grid-bands';\nexport const GRIDPARENTGROUP = 'grid-parent-group';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const RETINAL_FIELDS = 'retinalFields';\nexport const PARENT_ALIAS = 'parentAlias';\nexport const LAYERS = 'layers';\nexport const CACHED_DATA = 'cachedData';\nexport const STORE = 'store';\n","import { mergeRecursive } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { CONFIG, LAYERDEFS, TRANSFORM, DATA, LAYERS, TRANSFORMEDDATA } from './enums/reactive-props';\nimport { sanitizeLayerDef } from './helper';\n\nexport default {\n    [CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig) => (\n                mergeRecursive(oldConfig || mergeRecursive({}, defaultConfig), config)\n            )\n        }\n    },\n    [LAYERDEFS]: {\n        value: null,\n        meta: {\n            preset: layerDef => sanitizeLayerDef(layerDef)\n        }\n    },\n    [TRANSFORM]: {\n        value: null\n    },\n    [LAYERS]: {\n        value: null\n    },\n    [DATA]: {\n        value: null,\n        meta: {\n            preset: (data, context) => {\n                if (context._cache) {\n                    const cachedData = context.cachedData();\n                    context.cachedData([...cachedData, data]);\n                } else {\n                    const oldData = context.data();\n                    oldData && oldData.unsubscribe('propagation');\n                    context.cachedData([data]);\n                }\n            }\n        }\n    },\n    [TRANSFORMEDDATA]: {\n        value: null,\n        meta: {\n            addAsMethod: false\n        }\n    }\n};\n","export const CONFIG = 'config';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNT = 'mount';\nexport const TRANSFORM = 'transform';\nexport const TRANSFORMEDDATA = 'transformedData';\nexport const DATADOMAIN = 'dataDomain';\nexport const FIELDS = 'fields';\nexport const TIMEDIFFS = 'timeDiffs';\nexport const LAYERAXISINDEX = 'layerAxisIndex';\nexport const LAYERS = 'layers';\nexport const DOMAIN = 'domain';\n\n","import { DimensionSubtype, STATE_NAMESPACES } from 'muze-utils';\nimport * as PROPS from './enums/reactive-props';\nimport {\n    transformDataModels,\n    getDimensionMeasureMap,\n    attachDataToLayers,\n    attachAxisToLayers,\n    unionDomainFromLayers\n} from './helper';\n\nimport { createGridLineLayer, attachDataToGridLineLayers } from './helper/grid-lines';\n\nconst removeExitLayers = (layerDefs, context) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    layerDefs.forEach((layerDef, i) => {\n        const id = `${layerDef.mark}-${i}`;\n        markSet[id] = true;\n    });\n\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n};\n\nexport const calculateDomainListener = (context, namespace) => () => {\n    const domain = unionDomainFromLayers(context.layers(), context.fields(), context._layerAxisIndex,\n        context.data().getFieldsConfig());\n    context.store().commit(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${namespace}`, domain);\n};\n\nexport const listenerMap = (context, namespace, metaInf) => ([\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            config && context.firebolt().config(config.interaction);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.LAYERDEFS}`],\n        listener: ([, layerDefs]) => {\n            const fieldsVal = context.fields();\n            if (layerDefs && fieldsVal) {\n                removeExitLayers(layerDefs, context);\n                const axes = context.axes();\n                if (axes.x || axes.y) {\n                    const props = [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.rowIndex}0`,\n                        `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.colIndex}0`];\n                    const store = context.store();\n                    const listenerInf = {\n                        namespace: namespace.local,\n                        key: 'gridLineListener'\n                    };\n                    store.unsubscribe(listenerInf);\n                    store.registerChangeListener(props, () => {\n                        attachDataToGridLineLayers(context);\n                    }, false, listenerInf);\n                }\n\n                context.addLayer(layerDefs);\n                context._lifeCycleManager.notify({\n                    client: context.layers(),\n                    action: 'initialized',\n                    formalName: 'layer'\n                });\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`],\n        listener: ([, dataModel]) => {\n            const axisFields = context.fields();\n            const axesObj = context.axes();\n            if (dataModel && axisFields && axesObj) {\n                const timeDiffs = {};\n                const timeDiffsByField = {};\n                ['x', 'y'].forEach((type) => {\n                    const field = axisFields[type][0];\n                    if (field && field.subtype() === DimensionSubtype.TEMPORAL) {\n                        timeDiffs[type] = field.getMinDiff();\n                        timeDiffsByField[field] = timeDiffs[type];\n                        axesObj[type].forEach(axis => axis.minDiff(timeDiffs[type]));\n                    }\n                });\n                context._timeDiffsByField = timeDiffsByField;\n                context._timeDiffs = timeDiffs;\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: () => {\n            createGridLineLayer(context);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`,\n            `${namespace.local}.${PROPS.TRANSFORM}`],\n        listener: ([, dataModel], [, transform]) => {\n            if (dataModel) {\n                const dataModels = transformDataModels(transform, dataModel);\n                context.store().commit(`${namespace.local}.${PROPS.TRANSFORMEDDATA}`, dataModels);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.TRANSFORMEDDATA}`,\n            `${namespace.local}.${PROPS.LAYERS}`],\n        listener: ([, transformedData], [, layers]) => {\n            const layerAxisIndexVal = context._layerAxisIndex;\n            const axesVal = context.axes();\n            const dataModel = context.data();\n            if (transformedData && layers && axesVal && layerAxisIndexVal) {\n                context._lifeCycleManager.notify({ client: layers, action: 'beforeupdate', formalName: 'layer' });\n                const model = context.store().model;\n                layers.forEach(lyr => lyr.disableUpdate());\n                attachDataToLayers(layers, dataModel, transformedData);\n                model.lock();\n                layers.forEach((lyr) => {\n                    lyr.enableUpdate().domain(lyr._domain);\n                });\n                model.unlock();\n                context._dimensionMeasureMap = getDimensionMeasureMap(layers,\n                    dataModel.getFieldsConfig(), context.retinalFields());\n                attachAxisToLayers(axesVal, layers, layerAxisIndexVal);\n                context._lifeCycleManager.notify({ client: layers, action: 'updated', formalName: 'layer' });\n            }\n        }\n    }\n]);\n","import { FACET_BY_FIELDS, RETINAL_FIELDS, PARENT_ALIAS, LAYERS, CACHED_DATA } from './enums/constants';\n\nexport const PROPS = {\n    [FACET_BY_FIELDS]: {},\n    [RETINAL_FIELDS]: {},\n    [PARENT_ALIAS]: {},\n    [LAYERS]: {},\n    [CACHED_DATA]: {},\n    detailFields: {},\n    axes: {},\n    fields: {},\n    metaInf: {},\n    registry: {},\n    width: {},\n    height: {},\n    parentContainerInf: {}\n};\n","import { CommonProps } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { DATA } from '../enums/reactive-props';\n\nexport const initSideEffects = (sideEffects, firebolt) => {\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            sideEffects[key] instanceof SpawnableSideEffect && sideEffects[key].drawingContext(() => {\n                const context = firebolt.context;\n                return context.getDrawingContext();\n            });\n        }\n    }\n};\n\nexport const clearActionHistory = (context) => {\n    const actionHistory = context._actionHistory;\n    for (const key in actionHistory) {\n        if (actionHistory[key].isMutableAction) {\n            delete context._actionHistory[key];\n        }\n    }\n};\n\nexport const dispatchQueuedSideEffects = (context) => {\n    const queuedSideEffects = context._queuedSideEffects;\n    Object.entries(queuedSideEffects).forEach((entry) => {\n        const sideEffect = entry[1];\n        context.dispatchSideEffect(sideEffect.name, ...sideEffect.params);\n    });\n    context._queuedSideEffects = {};\n};\n\nexport const registerListeners = (firebolt) => {\n    const context = firebolt.context;\n    const store = context.store();\n\n    store.registerImmediateListener([`local.units.${context.metaInf().namespace}.${DATA}`], (dataModel) => {\n        const dm = dataModel[1];\n\n        if (dm) {\n            firebolt.createSelectionSet(firebolt.context.data().getData().uids);\n            firebolt.initializeSideEffects();\n            const originalData = firebolt.context.cachedData()[0];\n            firebolt.attachPropagationListener(originalData);\n        }\n    });\n\n    store.registerChangeListener([`local.units.${context.metaInf().namespace}.${DATA}`], () => {\n        if (!firebolt.context.mount()) {\n            const originalData = firebolt.context.cachedData()[0];\n            originalData.unsubscribe('propagation');\n        }\n    });\n\n    context._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW],\n        ([, onlayerdraw]) => {\n            if (onlayerdraw) {\n                dispatchQueuedSideEffects(firebolt);\n                clearActionHistory(firebolt);\n            }\n        });\n};\n","import { DimensionSubtype } from 'muze-utils';\n\nconst getRangeFromData = (instance, selectionDataModel, propConfig) => {\n    let criteria;\n    const dataObj = selectionDataModel[0].getData();\n    const propCriteria = propConfig.payload.criteria;\n    const sourceIdentifiers = propConfig.sourceIdentifiers;\n    const schema = dataObj.schema;\n    const fieldMap = instance.data().getFieldsConfig();\n    const data = dataObj.data;\n    const isActionSourceSame = instance.id() === propConfig.sourceId;\n\n    if (isActionSourceSame) {\n        criteria = propCriteria;\n    } else {\n        criteria = (sourceIdentifiers !== null) ? schema.reduce((acc, obj, index) => {\n            let range;\n            const field = obj.name;\n            const fieldObj = fieldMap[field];\n            const type = fieldObj && (fieldObj.def.subtype ? fieldObj.def.subtype : fieldObj.def.type);\n            const isDimension = type === DimensionSubtype.CATEGORICAL;\n\n            if (!fieldObj) {\n                return acc;\n            }\n\n            if (!isDimension) {\n                range = [Math.min(...data.map(d => d[index])), Math.max(...data.map(d => d[index]))];\n            } else {\n                range = data.map(d => d[index]);\n            }\n            acc[field] = range;\n            return acc;\n        }, {}) : null;\n    }\n    return criteria;\n};\n\nexport const payloadGenerator = {\n    brush: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const criteria = getRangeFromData(instance, selectionDataModel, propConfig);\n        const payload = Object.assign({}, propPayload);\n        payload.criteria = criteria;\n        return payload;\n    },\n\n    __default: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const sourceIdentifiers = propConfig.sourceIdentifiers;\n        const dataObj = selectionDataModel[0].getData();\n        let schema = dataObj.schema;\n        const payload = Object.assign({}, propPayload);\n        schema = dataObj.schema;\n        const data = dataObj.data;\n        const sourceFields = schema.map(d => d.name);\n        payload.criteria = !sourceIdentifiers && selectionDataModel[0].isEmpty() ? null :\n            [sourceFields, ...data];\n        payload.sourceFields = sourceIdentifiers ? sourceIdentifiers.getSchema().map(d => d.name) : [];\n        return payload;\n    }\n};\n\n","import { isSimpleObject, FieldType, DataModel } from 'muze-utils';\n\nconst getModelWithFacetData = (dm, data) => {\n    const dataObj = dm.getData();\n    const schema1 = dataObj.schema;\n    const data1 = dataObj.data;\n    const jsonData = [];\n    const schema2 = data[0].map(d => ({\n        name: `${d}`,\n        type: FieldType.DIMENSION\n    }));\n    const data2 = data[1];\n\n    data1.forEach((d) => {\n        const tuple = {};\n        schema1.forEach((obj, i) => {\n            tuple[obj.name] = d[i];\n        });\n        schema2.forEach((obj, i) => {\n            tuple[obj.name] = data2[i];\n        });\n        jsonData.push(tuple);\n    });\n\n    return new DataModel(jsonData, [...schema1, ...schema2]);\n};\n\nexport const propagateValues = (instance, action, config = {}) => {\n    let propagationData;\n    const payload = config.payload;\n    const selectionSet = config.selectionSet;\n    const propagationFieldInf = config.propagationFields[action] || {};\n    const propagationFields = propagationFieldInf.fields || [];\n    const append = propagationFieldInf.append;\n    const criteria = payload.criteria;\n    const context = instance.context;\n    const dataModel = context.cachedData()[0];\n    const sourceId = context.id();\n    const sideEfffects = instance.sideEffects();\n    const behaviourEffectMap = instance._behaviourEffectMap;\n    const mergedModel = selectionSet.mergedEnter.model;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    payload.sourceUnit = sourceId;\n    payload.action = action;\n    payload.sourceCanvas = context.parentAlias();\n    const propagationBehaviourMap = instance._propagationBehaviourMap;\n    const propagationBehaviour = propagationBehaviourMap[action] || action;\n\n    let propFields = [];\n    if (criteria === null) {\n        propagationData = null;\n    } else if (isSimpleObject(criteria)) {\n        propFields = Object.keys(criteria || {});\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    } else {\n        propFields = criteria[0];\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    }\n\n    const facetByFields = context.facetByFields();\n    if (propagationData !== null && propagationFields.length) {\n        const fields = propagationData.getData().schema.map(d => d.name);\n        propagationData = getModelWithFacetData(propagationData, facetByFields);\n        propFields = append ? [...fields, ...propagationFields] : propagationFields;\n        propagationData = propagationData.project(propFields);\n    }\n\n    let propagateInterpolatedValues = false;\n    if (propFields.length && propFields.every(field => fieldsConfig[field] &&\n        fieldsConfig[field].def.type === FieldType.MEASURE)) {\n        propagateInterpolatedValues = true;\n    }\n\n    const groupId = context.parentAlias();\n    payload.action = action;\n    const behaviourInstance = instance._actions.behavioural[propagationBehaviour];\n    const isMutableAction = behaviourInstance ? behaviourInstance.constructor.mutates() : false;\n\n    const filterFn = (entry, propagationConf) => {\n        const effects = behaviourEffectMap[entry.config.action];\n        const mutates = entry.config.groupId ?\n            effects.some(d => sideEfffects[d.name || d].constructor.mutates()) : true;\n        return entry.config.groupId !== propagationConf.groupId && mutates;\n    };\n\n    const sourceBehaviour = instance._actions.behavioural[action];\n    const mutates = sourceBehaviour ? sourceBehaviour.constructor.mutates() : false;\n    let propConfig = {\n        payload,\n        action,\n        criteria: propagationData,\n        isMutableAction: mutates,\n        propagateInterpolatedValues,\n        groupId,\n        sourceId: mutates ? groupId : sourceId,\n        filterFn,\n        enabled: (propConf, firebolt) => (action !== propagationBehaviour ?\n            propConf.payload.sourceCanvas === firebolt.context.parentAlias() : true)\n    };\n\n    dataModel.propagate(propagationData, propConfig, true);\n\n    if (action !== propagationBehaviour) {\n        propConfig = {\n            payload,\n            sourceId: isMutableAction ? groupId : sourceId,\n            criteria: propagationData,\n            isMutableAction,\n            propagateInterpolatedValues,\n            action: propagationBehaviour,\n            groupId,\n            applyOnSource: action === propagationBehaviour,\n            enabled: (propConf, firebolt) => propConf.payload.sourceCanvas !== firebolt.context.parentAlias(),\n            filterFn\n        };\n\n        dataModel.propagate(propagationData, propConfig, true, {\n            filterImmutableAction: (actionInf, propInf) => actionInf.groupId !== propInf.groupId\n        });\n    }\n};\n","import { FieldType } from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\nimport { registerListeners } from './helper';\nimport { payloadGenerator } from './payload-generator';\nimport { propagateValues } from './data-propagator';\n\n/**\n * This class manages the interactions of visual unit. It associates physical actions with\n * behavioural actions. It also propagates the behavioural actions to other datamodels.\n */\nexport default class UnitFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        registerListeners(this);\n    }\n\n    propagate (behaviour, payload, selectionSet, sideEffects) {\n        propagateValues(this, behaviour, {\n            payload,\n            selectionSet,\n            sideEffects,\n            propagationFields: this._propagationFields\n        });\n    }\n\n    getApplicableSideEffects (sideEffects, payload, propagationInf) {\n        const context = this.context;\n        const unitId = context.id();\n        const aliasName = context.parentAlias();\n        const propagationSourceCanvas = propagationInf.propPayload && propagationInf.propPayload.sourceCanvas;\n        const sourceUnitId = propagationInf.propPayload && propagationInf.propPayload.sourceUnit;\n        const sourceSideEffects = this._sourceSideEffects;\n        const sideEffectInstances = this.sideEffects();\n        const actionOnSource = sourceUnitId ? sourceUnitId === unitId : true;\n\n        const applicableSideEffects = payload.sideEffects ? [{\n            effects: payload.sideEffects,\n            behaviours: [payload.action]\n        }] : sideEffects;\n        applicableSideEffects.forEach((d) => {\n            let mappedEffects = d.effects;\n            mappedEffects = mappedEffects.filter((se) => {\n                const mutates = sideEffectInstances[se.name || se].constructor.mutates();\n                if (mutates && propagationInf.isMutableAction === false) {\n                    return false;\n                }\n                if (!actionOnSource && payload.criteria !== null) {\n                    const sideEffectChecker = sourceSideEffects[se.name || se];\n                    return sideEffectChecker ? sideEffectChecker(propagationInf.propPayload, context) : true;\n                }\n                if (propagationSourceCanvas === aliasName || actionOnSource) {\n                    return se.applyOnSource !== false;\n                }\n\n                return true;\n            });\n            d.effects = mappedEffects;\n        });\n        return applicableSideEffects;\n    }\n\n    shouldApplySideEffects (propagate) {\n        return propagate === false;\n    }\n\n    onDataModelPropagation () {\n        return (data, config) => {\n            let isSourceFieldPresent = true;\n            let isMutableAction = false;\n            const propPayload = config.payload;\n            const sourceIdentifiers = config.sourceIdentifiers;\n            const enabledFn = config.enabled;\n            const action = config.action;\n            const payloadFn = payloadGenerator[action] || payloadGenerator.__default;\n\n            if (sourceIdentifiers) {\n                const fieldsConfig = sourceIdentifiers.getFieldsConfig();\n                const sourceIdentifierFields = Object.keys(fieldsConfig);\n                const propFields = Object.keys(data[0].getFieldsConfig());\n                if (!Object.values(fieldsConfig).some(d => d.def.type === FieldType.MEASURE)) {\n                    isSourceFieldPresent = sourceIdentifierFields.some(d => propFields.indexOf(d) !== -1);\n                }\n            }\n\n            const payload = payloadFn(this.context, data, config);\n            const sourceBehaviours = this._sourceBehaviours;\n            const filterFn = sourceBehaviours[action] || sourceBehaviours['*'];\n            let enabled = true;\n\n            if (filterFn) {\n                enabled = filterFn(propPayload || {}, this.context);\n            }\n\n            if (enabledFn) {\n                enabled = enabledFn(config, this) && enabled !== false;\n            }\n\n            if (enabled) {\n                const effects = this._behaviourEffectMap[action];\n                const sideEffectInstances = this.sideEffects();\n                isMutableAction = config.groupId ?\n                    effects.some(d => sideEffectInstances[d.name || d].constructor.mutates()) : config.isMutableAction;\n\n                const propagationInf = {\n                    propagate: false,\n                    data,\n                    propPayload,\n                    sourceIdentifiers,\n                    persistent: false,\n                    isSourceFieldPresent,\n                    sourceId: config.propagationSourceId,\n                    isMutableAction: config.isMutableAction\n                };\n\n                this._actionHistory[action] = {\n                    payload,\n                    propagationInf,\n                    isMutableAction\n                };\n                this.dispatchBehaviour(action, payload, propagationInf);\n            }\n        };\n    }\n\n    prepareSelectionSets (behaviours) {\n        const data = this.context.data();\n        if (data) {\n            this.createSelectionSet(data.getData().uids, behaviours);\n        }\n        return this;\n    }\n\n    initializeSideEffects () {\n        if (this.context.data()) {\n            super.initializeSideEffects();\n        }\n        return this;\n    }\n\n    remove () {\n        this.context.cachedData()[0].unsubscribe('propagation');\n        return this;\n    }\n}\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    Store,\n    setAttrs,\n    getUniqueId,\n    getQualifiedClassName,\n    selectElement,\n    transactor,\n    makeElement,\n    registerListeners,\n    generateGetterSetters,\n    getDataModelFromIdentifiers,\n    isSimpleObject,\n    transposeArray,\n    CommonProps,\n    toArray,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { actionBehaviourMap } from './firebolt/action-behaviour-map';\nimport {\n    renderLayers,\n    getNearestDimensionalValue,\n    removeLayersBy,\n    getLayersBy,\n    getLayerFromDef,\n    getLayerAxisIndex,\n    sanitizeLayerDef,\n    createSideEffectGroup,\n    resolveEncodingTransform,\n    createRenderPromise\n} from './helper';\nimport { renderGridLineLayers } from './helper/grid-lines';\nimport localOptions from './local-options';\nimport { listenerMap, calculateDomainListener } from './listener-map';\nimport {\n    DOMAIN\n} from './enums/reactive-props';\nimport { PROPS } from './props';\nimport UnitFireBolt from './firebolt';\nimport { initSideEffects } from './firebolt/helper';\nimport './styles.scss';\n\nconst FORMAL_NAME = 'unit';\n\n/**\n * Visual Unit is hierarchical component created by {@link VisualGroup}. This component accepts layer definitions\n * and creates concrete layer instances from them, binds data and attaches axis to them. It also retreives the domain\n * from the layers and unions them and sets them on corresponding axis instances. This also creates the parent svg\n * groups for all the layers and delegates the rendering to all the layers.\n *\n * @public\n * @module VisualUnit\n * @class\n */\nexport default class VisualUnit {\n\n    /**\n     * Creates instance of visualization unit.\n     *\n     * @param {Object} registry  Component registry\n     * @param {Object} dependencies  Dependencies required by visual unit.\n     */\n    constructor (registry, dependencies) {\n        this._id = getUniqueId();\n        this._dependencies = dependencies;\n        this._layerDeps = {\n            throwback: new Store({\n                [CommonProps.ON_LAYER_DRAW]: false\n            }),\n            smartLabel: dependencies.smartLabel,\n            lifeCycleManager: dependencies.lifeCycleManager\n        };\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        createRenderPromise(this);\n        this._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW], () => {\n            this._renderedResolve();\n            this._lifeCycleManager.notify({ client: this.layers(), action: 'drawn', formalName: 'layer' });\n        });\n\n        this._lifeCycleManager = dependencies.lifeCycleManager;\n        this._layersMap = {};\n        this._gridLineSelection = [];\n        this._gridBandSelection = [];\n        this._layerNamespaces = {};\n        this._layerAxisIndex = {};\n        this._transformedDataModels = {};\n        layerFactory.setLayerRegistry(registry.layerRegistry);\n        generateGetterSetters(this, PROPS);\n        this.registry(registry);\n        this.cachedData([]);\n    }\n\n    static formalName () {\n        return FORMAL_NAME;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            localOptions\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            this.store().append(`${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}`, {\n                [`${metaInf.namespace}`]: null\n            });\n            const localNs = `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            transactor(this, localOptions, this.store().model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE\n            }, {\n                rowIndex: metaInf.rowIndex,\n                colIndex: metaInf.colIndex\n            });\n            this.firebolt(new UnitFireBolt(this, {\n                physical: physicalActions,\n                behavioural: behaviouralActions,\n                physicalBehaviouralMap: actionBehaviourMap\n            }, sideEffects, behaviourEffectMap));\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Static helper for creates a unit instance\n     *\n     * @param {Object} [id] optional unique identifier for a unit; , id is calculated internally\n     * @param {DataModel} data instance of datamodel\n     * @param {Array.<Layer>} layers layer configuration\n     * @param {Object} config configurtion for the visual unit\n     * @return {VisualUnit} Instance of a unit\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this visual unit. Firebolt dispatches the behavioural actions\n     * when any physical action happens on the elements of visual unit.\n     *\n     * @public\n     *\n     * @return {Firebolt} Instance of firebolt.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Returns the unique id of this visual unit.\n     *\n     * @public\n     * @return {string} Unique identifier.\n     */\n    id () {\n        return this._id;\n    }\n\n    lockModel () {\n        this._store.model.lock();\n        return this;\n    }\n\n    unlockModel () {\n        this._store.model.unlock();\n        return this;\n    }\n\n    timeDiffsByField (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._timeDiffsByField;\n    }\n\n    /**\n     * Renders the visual unit. It creates the layout and renders the axes and layers.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    render (container) {\n        const config = this.config();\n        const { className, defClassName, sideEffectClassName, classPrefix } = config;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const width = this.width();\n        const height = this.height();\n        const containerSelection = selectElement(container).style('position', 'relative');\n\n        this._rootSvg = makeElement(containerSelection, 'svg', [null], className)\n                        .style('width', `${width}px`).style('height', `${height}px`);\n\n        const node = this._rootSvg.node();\n        setAttrs(node, {\n            width,\n            height,\n            class: qualifiedClassName.join(' ')\n        });\n        renderGridLineLayers(this, node);\n        renderLayers(this, node, this.layers(), {\n            width,\n            height\n        });\n        this._sideEffectGroup = createSideEffectGroup(node, `${classPrefix}-${sideEffectClassName}`);\n        const firebolt = this.firebolt();\n        initSideEffects(firebolt.sideEffects(), firebolt);\n        return this;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Caches all the datamodels in an array from the next `data()` call on visual unit until `clearCaching()` or\n     * `resetData()` is called on it.\n     *\n     * @public\n     * @return {VisualUnit} Instance of visual unit.\n     */\n\n    enableCaching () {\n        this._cache = true;\n        return this;\n    }\n\n    /**\n     * Clears all the previous cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    clearCaching () {\n        this._cache = false;\n        this.cachedData([this.cachedData()[0]]);\n        return this;\n    }\n\n    /**\n     * Returns the drawing information from visual unit.Drawing context contains the dimensions of unit and the svg\n     * container of the visual unit.\n     *\n     * @public\n     *\n     * @return {Object} Drawing information.\n     *      ```\n     *          {\n     *              htmlContainer: // Html container of svg container of the visual unit\n     *              svgContainer: // Root svg container\n     *              width: // Width of the visual unit\n     *              height: // Height of the visual unit\n     *              sideEffectGroup: // Svg group for drawing side effect elements.\n     *              parentContainer: // Parent html container of the visual unit.\n     *              xOffset: // x offset space from the starting x position of the container,\n     *              yOffset: // y offset space from the starting y position of the container\n     *          }\n     *      ```\n     */\n    getDrawingContext () {\n        const rootSvg = this._rootSvg && this._rootSvg.node();\n        const width = this.width();\n        const height = this.height();\n        const { el, dimensions } = this.parentContainerInf();\n        return {\n            htmlContainer: this.mount(),\n            svgContainer: rootSvg,\n            width,\n            height,\n            sideEffectGroup: this._sideEffectGroup,\n            parentContainer: el,\n            parentContainerDimensions: dimensions,\n            xOffset: 0,\n            yOffset: 0\n        };\n    }\n\n    /**\n     * Returns the serialized configuration of visual unit.\n     *\n     * @return {Object} serialized configuration\n     */\n    serialize () {\n        return {\n            layers: this.layers().map(layer => layer.serialize()),\n            config: this.config(),\n            axes: this.axes().map(axis => axis.serialize())\n        };\n    }\n\n    mount (...mount) {\n        if (mount.length) {\n            this._mount = mount[0];\n            this.render(mount[0]);\n            this.firebolt().mapActionsAndBehaviour();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     * Adds a new layer to the visual unit. It takes a layer definition and creates layer instances from them. It does\n     * not render the layers. It returns the layer instances in an array. If the layer definition is a composite layer,\n     * then multiple layer instances will be returned in the array.\n     *\n     * To add a layer in the unit,\n     * ```\n     *      unit.addLayer({\n     *          name: 'bullet',\n     *          mark: 'bar',\n     *          encoding: {\n     *              x: 'Year',\n     *              y: 'Acceleration',\n     *              color: 'Origin'\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} layerDef Definition of new layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    addLayer (layerDefinition) {\n        const layerDefinitions = sanitizeLayerDef(toArray(layerDefinition));\n\n        const layersMap = this._layersMap;\n        const markSet = {};\n        const store = {\n            layers: {},\n            components: {\n                unit: this\n            }\n        };\n        let layerIndex = 0;\n        let startIndex = [].concat(...Object.values(this._layersMap)).length;\n        const metaInf = this.metaInf();\n        const props = this._layerNamespaces;\n        const layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef) => {\n            const definition = layerDef.def;\n            const markId = definition.name;\n            const defArr = toArray(definition);\n            const namespaces = [];\n            defArr.forEach((def) => {\n                def.order = layerDef.order + layerIndex;\n                const namespace = `${metaInf.namespace}${startIndex}`;\n                if (!layersMap[markId]) {\n                    startIndex++;\n                    if (definition.calculateDomain !== false) {\n                        props[`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${DOMAIN}.${namespace}`] = true;\n                    }\n                }\n                namespaces.push(namespace);\n            });\n            layerIndex += defArr.length;\n            const instances = getLayerFromDef(this, definition, layersMap[markId], namespaces);\n            store.layers = Object.assign(store.layers, instances);\n            const instanceValues = Object.values(instances);\n            layersArr = layersArr.concat(...instanceValues);\n            layersMap[markId] = instanceValues;\n            markSet[markId] = markId;\n            return layersArr;\n        }, []);\n\n        store.unit = this;\n        const layerdeps = {};\n        const layersArr = [].concat(...Object.values(this._layersMap));\n\n        layersArr.forEach((layer) => {\n            const alias = layer.alias();\n            store.layers[alias] = layer;\n            layerdeps[alias] = [];\n        });\n        layers.forEach((layer) => {\n            const depArr = resolveEncodingTransform(layer, store);\n            layerdeps[layer.alias()] = depArr;\n        });\n\n        this._layerDepOrder = layerdeps;\n        this._layerAxisIndex = Object.assign(this._layerAxisIndex, getLayerAxisIndex(layers, this.fields()));\n        const stateStore = this.store();\n\n        stateStore.unsubscribe({\n            key: 'calculateDomainListener',\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n        });\n        stateStore.registerImmediateListener(Object.keys(props), calculateDomainListener(this, metaInf.namespace),\n            false, {\n                key: 'calculateDomainListener',\n                namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n            });\n        this.layers(layersArr);\n        return layers;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    remove () {\n        const lifeCycleManager = this._dependencies.lifeCycleManager;\n        lifeCycleManager.notify({ client: this, action: 'beforeremove', formalName: 'unit' });\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        this.firebolt().remove();\n        // Remove layers\n        lifeCycleManager.notify({ client: this.layers(), action: 'beforeremove', formalName: 'layer' });\n        this.layers().forEach(layer => layer.remove());\n        lifeCycleManager.notify({ client: this.layers(), action: 'removed', formalName: 'layer' });\n        lifeCycleManager.notify({ client: this, action: 'removed', formalName: 'unit' });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof VisualUnit\n     */\n    getDataModelFromIdentifiers (identifiers, mode, parentModel) {\n        if (identifiers === null) {\n            return null;\n        }\n        const dataModel = parentModel || this.data();\n        return getDataModelFromIdentifiers(dataModel, identifiers, mode);\n    }\n\n    /**\n     * Resets the data of visual unit to original data model. It also clears the cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    resetData () {\n        this.data(this.cachedData()[0]);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getSourceInfo () {\n        return {\n            dimensionMeasureMap: this._dimensionMeasureMap,\n            fields: this.fields(),\n            data: this.data(),\n            axes: this.axes()\n        };\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getDefaultTargetContainer () {\n        const { classPrefix, defClassName } = this.config();\n        return [`.${classPrefix}-${defClassName}`];\n    }\n\n    /**\n     * Returns an array of layer instances which matches the supplied mark type.\n     *\n     * @public\n     *\n     * @param {string} type Mark type of layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    getLayersByType (type) {\n        const layers = getLayersBy(this.layers(), 'type', type);\n        return layers;\n    }\n\n    /**\n     * Returns the layer instance which matches the supplied layer name. If no layer is found, then it returns\n     * undefined.\n     *\n     * @public\n     * @param {string} name Name of layer.\n     *\n     * @return {VisualUnit} Layer instance.\n     */\n    getLayerByName (name) {\n        const layers = getLayersBy(this.layers(), 'name', name);\n        return layers[0];\n    }\n\n    /**\n     * Returns the point located nearest to the supplied x and y position. It returns the unique identifiers of the\n     * point. This function also accepts an additional configuration `getAllPoints` inside `config` object in the third\n     * argument which if set to true, then it returns the identifiers of all the points which falls on the nearest\n     * x value or y value if any one of the field is a dimension. Additionally, a target property is also returned\n     * which contains the identifier of the nearest point. If no nearest point is found, then it returns identifier\n     * as null.\n     *\n     * @public\n     *\n     * @param {number} x X Position of the point from where nearest point is to be found.\n     * @param {number} y Y Position of the point from where nearest point is to be found.\n     * @param {Object} config Additional configuration options.\n     * @param {boolean} config.getAllPoints If true, then returns all the points nearest to the x value or y value if\n     * it is dimension.\n     * @param {Object} config.data Data associated with the nearest point.\n     * @return {Object} Nearest point information\n     * ```\n     *      {\n     *          id: [['Origin'], ['USA'], ['Japan']], // Identifiers of all the points closest to the x value.\n     *          target: [['Origin'], ['Japan']] // Identifier of the nearest point.\n     *      }\n     * ```\n     */\n    getNearestPoint (x, y, config) {\n        let pointObj = {\n            id: null\n        };\n        const dimValue = getNearestDimensionalValue(this, {\n            x,\n            y\n        });\n\n        if (dimValue !== null && config.getAllPoints) {\n            pointObj.id = dimValue;\n            const pointInf = this.getMarkInfFromLayers(x, y, config);\n            pointObj.target = pointInf && pointInf.id ? pointInf.id : pointObj.id;\n            return pointObj;\n        }\n\n        const markInf = this.getMarkInfFromLayers(x, y, config) || { id: null };\n        pointObj = Object.assign({}, markInf);\n\n        pointObj.target = markInf.id;\n        return pointObj;\n    }\n\n    getMarkInfFromLayers (x, y, args) {\n        const layers = this.layers();\n        const len = layers.length;\n        let point = null;\n        // Iterate through the layers array and fetch the nearest point from each layer. If a valid\n        // nearest point is found from any layer, then return that point.\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            const config = layer.config();\n            if (config.interactive !== false) {\n                point = layer.getNearestPoint(x, y, args);\n            }\n            if (point) {\n                return point;\n            }\n        }\n        return point;\n    }\n\n    /**\n     * Get the information of all the marks such as x, y position and size from supplied identifiers. It\n     * returns an array of points whose data matches the given identifiers.\n     *\n     * @public\n     *\n     * @param {Array|Object} identifiers Field names and their corresponding values.\n     * ```\n     * identifiers can be given in an array of array,\n     *      ['Origin', 'Name'], // Names of the fields supplied in first array\n     *      ['USA', 'ford'], // Data values of each field supplied in rest of the arrays.\n     *      ['Japan', 'ford']\n     * or in an object,\n     *      {\n     *          Origin: ['USA']\n     *      }\n     * ```\n     * @param {Object} config Optional configurations which decides which information of the mark will\n     * be retrieved.\n     * @param {boolean} [config.getAllAttrs = false] If true, then returns all the information of each mark.\n     * @param {boolean} [config.getBBox = false] If true, then returns the bounding box of each mark.\n     *\n     * @return {Array} Array of objects containing the information of each point.\n     * ```\n     * By default, the method returns the array of points in this structure,\n     *      [\n     *          {\n     *              x: 20,\n     *              y: 100,\n     *              width: 200,\n     *              height: 100\n     *          }\n     *      ]\n     * If 'config.getAllAttrs' is true, then it returns all the information of each mark,\n     *      [\n     *      // Positions of mark on initial state of transition.\n     *          enter: {\n     *              x: 0,\n     *              y: 0\n     *          },\n     *          // Final positions of the mark\n     *          update: {\n     *              x: 20,\n     *              y: 10\n     *          },\n     *          style: // css styles of each mark\n     *          source: [200, 'USA'] // Row information of each mark\n     *          id: 20 // Row id of each mark\n     *      ]\n     * ```\n     */\n    getPlotPointsFromIdentifiers (identifiers, config = {}) {\n        let points = [];\n        let parsedIdentifiers = identifiers;\n        if (identifiers === null) {\n            return [];\n        }\n        const layers = this.layers();\n        const len = layers.length;\n        if (isSimpleObject(identifiers)) {\n            parsedIdentifiers = [Object.keys(identifiers)];\n            parsedIdentifiers = [...parsedIdentifiers, ...transposeArray(Object.values(identifiers))];\n        }\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            if (layer.config().interactive !== false) {\n                points = [...points, ...layer.getPointsFromIdentifiers(parsedIdentifiers, config)];\n            }\n        }\n        return points;\n    }\n\n    /**\n     * Removes the layer instance which matches the supplied layer name.\n     *\n     * @public\n     * @param {string} name Name of layer\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayerByName (name) {\n        removeLayersBy('name', name);\n        return this;\n    }\n\n    /**\n     * Removes all the layer instances which matches the supplied mark type.\n     *\n     * @public\n     * @param {string} type Mark type of layer.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayersByType (type) {\n        removeLayersBy('type', type);\n        return this;\n    }\n}\n","import { DataModel } from 'muze-utils';\n\nimport { retriveDomainFromData } from './group-utils';\n\n/**\n * Gets name of fields form the variables\n *\n * @param {*} fields1\n * @param {*} [fields2=[]]\n *\n */\nconst getFieldNames = (fields1, fields2 = []) => [fields1, fields2].map(fields => fields.reduce((acc, d) => {\n    acc = [...acc, ...d.getMembers()];\n    return acc;\n}, []));\n\n/**\n * Creates a selected datamodel from a parent datamodel and a set of field names\n *\n * @param {Object} datamodel provided as input\n * @param {Array} fieldNames schema  names\n * @param {Array} fieldValues values of those schema names to be selected\n * @return {Object} creates a new selected datamodel\n */\nconst createSelectedDataModel = (datamodel, fieldNames, fieldValues) =>\n    datamodel.select(fields => fieldNames.every((field, k) => fields[field].value === fieldValues[k]));\n\n/**\n *\n *\n * @param {*} facets\n * @param {*} keyArray\n *\n */\nconst uniqueKeyGenerator = (keyArray, context, depth = 0, val = []) => {\n    const {\n        facets,\n        dataModel,\n        uniqueValues\n    } = context;\n\n    // Get unique keys for the next depth recursively if required\n    if (facets[depth + 1]) {\n        const field = facets[depth];\n        uniqueValues.forEach((value) => {\n            const newDm = dataModel.select(fields => fields[field].value === value);\n            const nextDepthUniqueValues = retriveDomainFromData(newDm, facets[depth + 1]);\n            const newContext = {\n                facets,\n                dataModel: newDm,\n                uniqueValues: nextDepthUniqueValues\n            };\n\n            uniqueKeyGenerator(keyArray, newContext, depth + 1, [...val, value]);\n        });\n    } else {\n        uniqueValues.forEach((value) => {\n            keyArray.push([...val, value]);\n        });\n    }\n};\n\n/**\n * projects row model based on the set of row and/or column and other projection fields\n *\n * @param {Object} datamodel provided as input\n * @return {Object} Projected datamodel\n */\nconst projectRows = (datamodel, projections) => {\n    const {\n        allColumnProjections,\n        rowProjections,\n        optionalProjections\n    } = projections;\n\n    if (rowProjections.length > 0) {\n        return rowProjections.map((projectFields) => {\n            const [projFieldNames, colProjFieldNames] = getFieldNames(projectFields, allColumnProjections);\n            return datamodel.project([...projFieldNames, ...colProjFieldNames, ...optionalProjections]);\n        });\n    }\n    return [datamodel];\n};\n\n/**\n * Adds the datamodels to current row index based on column fields\n *\n * @param {Array} context current context\n * @param {Array} callback List of facets applied to the current datamodel\n */\nconst pushToMatrix = (context, callback) => {\n    let cells = [];\n    const {\n        matrix,\n        datamodel,\n        facetInfo,\n        fieldInfo\n    } = context;\n    // Get projected fields for current row\n    const {\n        rowProjections,\n        colProjections,\n        optionalProjections\n    } = fieldInfo;\n    const {\n        rowIndex,\n        columnIndex\n    } = facetInfo;\n    const rowProj = rowProjections[(rowIndex) % rowProjections.length] || [];\n\n    // Get the cells for the matrix from the return function of the callback on the datamodel.\n    // callback function -> (datamodel, {projections, indices}, facets)\n    if (colProjections.length > 0) {\n        cells = colProjections.map((projectFields, projIdx) => {\n            const [colProjFieldNames, rowProjFieldNames] = getFieldNames(projectFields, rowProj);\n            const projectedDm = datamodel.project([...colProjFieldNames, ...rowProjFieldNames, ...optionalProjections]);\n            const projections = { rowFields: rowProj, columnFields: projectFields };\n            const indices = { rowIndex, columnIndex: columnIndex * colProjections.length + projIdx };\n\n            return callback(projectedDm, { projections, indices }, facetInfo);\n        });\n    } else {\n        const projections = { rowFields: rowProj, columnFields: [] };\n        const indices = { rowIndex, columnIndex };\n\n        cells = [callback(datamodel, { projections, indices }, facetInfo)];\n    }\n\n    matrix[rowIndex] = matrix[rowIndex] || [];\n    matrix[rowIndex].push(...cells);\n};\n\n/**\n * Gets Matrixes for corresponding datamodel, facets and projections\n *\n * @param {Object} dataModel input datamodel\n * @param {Object} fieldMap corresponding fieldmap\n * @param {Array} facetsAndProjections contains the set of facets and projections for the matrices\n * @param {Function} callback Callback executed after datamodels are prepared after sel/proj\n * @return {Object} set of matrices with the corresponding row and column keys\n */\nexport const getMatrixModel = (dataModel, facetsAndProjections, callback) => {\n    let rowDataModels = [];\n    const rowKeys = [];\n    const columnKeys = [];\n    const allColumnProjections = [];\n    const matrix = [];\n    const facetInfo = [];\n\n    const fieldInfo = Object.assign({}, facetsAndProjections);\n    const {\n        rowFacets,\n        colFacets,\n        colProjections\n    } = fieldInfo;\n\n    colProjections.forEach((colProj) => {\n        allColumnProjections.push(...colProj);\n    });\n    fieldInfo.allColumnProjections = allColumnProjections;\n\n    // Performing row selection and projection\n    if (rowFacets.length > 0) {\n        // Get unique values for the root level of facet\n        const field = rowFacets[0].toString();\n        const firstLevelRowKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys in the form of an array of arrays for each row\n        uniqueKeyGenerator(rowKeys, { facets: rowFacets, dataModel, uniqueValues: firstLevelRowKeys });\n\n        // Apply selection -> projection -> row datamodels\n        rowKeys.forEach((val) => {\n            // Create faceted datamodel\n            const [rowFacetFieldNames] = getFieldNames(rowFacets);\n            const selectedDataModel = createSelectedDataModel(dataModel, rowFacetFieldNames, val);\n\n            // Project the datamodel based on the number of projections (based on last levels)\n            facetInfo.push([rowFacets, val]);\n            rowDataModels.push(...projectRows(selectedDataModel, fieldInfo));\n        });\n    } else {\n        // No row facets, hence only row projection\n        rowDataModels.push(...projectRows(dataModel, fieldInfo));\n    }\n\n    // Maintaining set of row datamodels for column resolution\n    rowDataModels = rowDataModels.length > 0 ? rowDataModels : [[]];\n\n    // Performing column selection and projection\n    if (colFacets.length > 0) {\n        const colFacetNames = colFacets.map(d => `${d}`);\n        // Get unique values for the root level of facet\n        const field = colFacetNames[0];\n        const firstLevelColumnKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys to create faceted datamodels: this time for columns\n        uniqueKeyGenerator(columnKeys, {\n            facets: colFacetNames,\n            dataModel,\n            uniqueValues: firstLevelColumnKeys\n        });\n\n        // For each row in the datamodel, apply selection -> projection -> push the projection to matri\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            columnKeys.forEach((val, cIndex) => {\n                matrix[rIndex] = matrix[rIndex] || [];\n\n                // If datamodel is not present in current row, choose parent datamodel\n                const datamodel = dme instanceof DataModel ? dme : dataModel;\n\n                // Selection is made on the datamodel for the current row\n                const selectedDataModel = createSelectedDataModel(datamodel, colFacetNames, val);\n                const context = {\n                    matrix,\n                    datamodel: selectedDataModel,\n                    facetInfo: {\n                        rowFacets: facetInfo[rIndex],\n                        colFacets: [colFacets, val],\n                        rowIndex: rIndex,\n                        columnIndex: cIndex\n                    },\n                    fieldInfo\n                };\n                pushToMatrix(context, callback);\n            });\n        });\n    } else {\n        // No column facets, hence only row projection\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            const context = {\n                matrix,\n                datamodel: dme || dataModel,\n                facetInfo: {\n                    rowFacets: facetInfo[rIndex],\n                    colFacets: [[], []],\n                    rowIndex: rIndex,\n                    columnIndex: 0\n                },\n                fieldInfo\n            };\n\n            pushToMatrix(context, callback);\n        });\n    }\n\n    // Getting column keys\n    const transposedColKeys = columnKeys.length > 0 ? columnKeys[0].map((col, i) =>\n                    columnKeys.map(row => row[i])) : columnKeys;\n\n    return { matrix, rowKeys, columnKeys: transposedColKeys };\n};\n","import { AxisOrientation } from '@chartshq/muze-axis';\nimport { getObjProp, FieldType, STATE_NAMESPACES, createSelection } from 'muze-utils';\nimport { getMatrixModel } from './matrix-model';\nimport {\n    getCellKey,\n    isDistributionEqual,\n    mutateAxesFromMap,\n    getFieldsFromSuppliedLayers,\n    extractFields\n} from './group-utils';\nimport { ROW, ROWS, COLUMNS, COL, LEFT, RIGHT, TOP, BOTTOM, PRIMARY, SECONDARY, X, Y } from '../enums/constants';\n\n/**\n * Updates row and column cells with the geom cell corresponding to the facet keys\n *\n * @param {*} resolver\n * @param {*} facets\n */\nconst updateCells = (resolver, facets, geomCell) => {\n    [ROW, COL].forEach((field) => {\n        const cells = resolver[`${field}Cells`]();\n        const facetKey = facets[`${field}Facets`][1].join();\n\n        !cells[facetKey] && (cells[facetKey] = []);\n        cells[facetKey].push(geomCell);\n        resolver[`${field}Cells`](cells);\n    });\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} datamodel\n * @param {*} fieldInfo\n * @param {*} facets\n *\n */\nexport const createValueCells = (context, datamodel, fieldInfo, facets) => {\n    const {\n        projections,\n        indices\n    } = fieldInfo;\n    const {\n        rowFields,\n        columnFields\n    } = projections;\n    const {\n         rowIndex,\n         columnIndex\n    } = indices;\n    const {\n        suppliedLayers,\n        cell: GeomCell,\n        resolver,\n        config,\n        encoder,\n        detailFields\n    } = context;\n    const axes = resolver.axes();\n    const cacheMaps = resolver.cacheMaps();\n    const matrixLayers = resolver.matrixLayers();\n    const labelManager = resolver.dependencies().smartlabel;\n    const horizontalAxis = resolver.horizontalAxis();\n    const verticalAxis = resolver.verticalAxis();\n    const datamodelTransform = resolver.datamodelTransform();\n    const {\n        entryCellMap,\n        exitCellMap\n    } = cacheMaps;\n    const layerConfigArr = encoder.getLayerConfig({ columnFields, rowFields }, suppliedLayers || []);\n    const axesCreators = { config, labelManager, axes, cacheMaps };\n\n    fieldInfo.normalizedColumns = verticalAxis.fields;\n    fieldInfo.normalizedRows = horizontalAxis.fields;\n\n    const groupAxes = encoder.createAxis(axesCreators, fieldInfo);\n\n    matrixLayers[rowIndex] = matrixLayers[rowIndex] ? matrixLayers[rowIndex] : [];\n    matrixLayers[rowIndex][columnIndex] = layerConfigArr;\n\n    // return from map if already there otherwise create and put in map\n    const geomCellKey = getCellKey(rowIndex, columnIndex);\n    const fields = {\n        y: rowFields,\n        x: columnFields\n    };\n    const allFacets = [\n        [...facets.rowFacets[0], ...facets.colFacets[0]],\n        [...facets.rowFacets[1], ...facets.colFacets[1]]\n    ];\n    const geomCell = !exitCellMap.has(geomCellKey) ? new GeomCell() : exitCellMap.get(geomCellKey);\n\n    geomCell.data(datamodel)\n                    .axes(groupAxes)\n                    .fields(fields)\n                    .transform(datamodelTransform)\n                    .detailFields(detailFields)\n                    .facetByFields(allFacets);\n    entryCellMap.set(geomCellKey, geomCell);\n    exitCellMap.delete(geomCellKey);\n\n    updateCells(resolver, facets, geomCell);\n\n    return entryCellMap.get(geomCellKey);\n};\n\n/**\n * Creates axis cells based on the set of axes\n *\n * @param {Selection} selection Contains a selection of the axis units\n * @param {Array} axes Actual axis units\n * @param {number} axisIndex 0-> primary axis, 1-> secondary axis(when dual axis is made)\n * @param {Object} cells Contains a collection of the cells\n * @return {Object} return either set of axis/blank cells depending on the config\n */\n\nconst createAxisCells = (selection, axes, axisIndex, cells) =>\n    createSelection(selection, axis => axis, axes, (item, i) => i + item.reduce((e, n) => {\n        const id = n.id + axisIndex;\n        return e + id;\n    }, '')).map((axis) => {\n        if (axis && axis[axisIndex]) {\n            const axisInst = axis[axisIndex];\n            const { orientation, show } = axisInst.config();\n\n            return new cells.AxisCell().source(axisInst).config({\n                isOffset: orientation === AxisOrientation.LEFT || orientation === AxisOrientation.TOP,\n                show\n            });\n        }\n        return new cells.BlankCell().config({ show: false });\n    });\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @retur\n */\nconst axisPlaceholderGn = (context, selObj, cells) => {\n    const {\n        matrices\n    } = context;\n    const {\n        axesMatrix\n    } = matrices;\n\n    return (type, axisFrom) => {\n        const axes = axesMatrix[`${type}`];\n\n        if (axes && axes.length) {\n            if (type === X || type === Y) {\n                const fieldNames = type === Y ? ROWS : COLUMNS;\n\n                [PRIMARY, SECONDARY].forEach((fieldType, index) => {\n                    const selObjProp = `${fieldNames}${fieldType}`;\n                    let axisIndex = index;\n                    let axesForDraw = axes;\n                    if (axisFrom === RIGHT || axisFrom === BOTTOM) {\n                        axisIndex = 1 - axisIndex;\n                    }\n                    if (!getObjProp(axes, 0, axisIndex)) {\n                        axesForDraw = [];\n                    }\n                    selObj[selObjProp] = createAxisCells(selObj[selObjProp], axesForDraw, axisIndex, cells);\n                });\n            } else {\n                selObj.rowsPrimary = createAxisCells(selObj.rowPrime, axes.map(() => []), 0, cells);\n                selObj.columnsPrimary = createAxisCells(selObj.colPrime, axes[0], 0, cells);\n            }\n        }\n        return selObj;\n    };\n};\n\n/**\n * Creates header cells based on the set of headers\n *\n * @param {Object} selection Contains a selection of the header units\n * @param {string} headers Contains a list of the headers\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} return either set of header cells depending on the config\n */\nconst createTextCells = (selection, headers, cells, labelManager) => createSelection(selection,\n    label => new cells.TextCell({}, { labelManager }).source(label), headers, (key, i) => key + i);\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @param {*} labelManager\n *\n */\nconst headerPlaceholderGn = (context, selectionObj, cells, labelManager) => {\n    const {\n        axis,\n        keys,\n        type,\n        facet\n    } = context;\n    const counter = axis.length / keys.length;\n    const selectionKeys = keys.length ? axis.map((d, i) => keys[Math.floor(i / counter)]) : [];\n\n    return createSelection(selectionObj[`${type}Headers`], keySet => keySet, selectionKeys,\n        (keySet, i) => `${keySet.join(',')}-${i}`)\n                    .map(keySet => createTextCells(null, keySet, cells, labelManager)\n                                    .map((cell, k, i) => cell.source(keySet[i]).config(facet)));\n};\n\n/**\n * Creates a set of placeholders as a part of selection object\n *\n * @param {Array} normalizedOptions contains normalized rows and columns\n * @param {Array} matrices contains axis and value matrices\n * @param {aArrayny} projections contains set of row and column projections\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} Creates a set of placeholders as a part of selections\n */\nconst generatePlaceholders = (context, cells, labelManager) => {\n    let selectionObj;\n    const {\n        matrices,\n        fields,\n        facetsAndProjections,\n        selection,\n        facet,\n        encoders\n    } = context;\n    const {\n        rows,\n        columns\n    } = fields;\n    const {\n        valuesMatrix\n    } = matrices;\n    const {\n        rowProjections,\n        colProjections\n    } = facetsAndProjections;\n    const {\n        rowKeys,\n        columnKeys\n    } = valuesMatrix;\n    const takeAxisFrom = encoders.simpleEncoder._axisFrom;\n    const takeHeaderFrom = encoders.simpleEncoder._headerFrom;\n\n    selectionObj = selection || {};\n\n    ['pie', X, Y].forEach((axis) => {\n        const axisFrom = axis === X ? takeAxisFrom.column : takeAxisFrom.row;\n        selectionObj = axisPlaceholderGn(context, selectionObj, cells)(axis, axisFrom);\n    });\n\n    const {\n        rowsPrimary,\n        rowsSecondary,\n        columnsPrimary,\n        columnsSecondary\n    } = selectionObj;\n\n    const rowAxis = rowsPrimary && rowsPrimary.getObjects().length ? rowsPrimary.getObjects() :\n        (rowsSecondary && rowsSecondary.getObjects().length ? rowsSecondary.getObjects() : []);\n    const colAxis = columnsPrimary && columnsPrimary.getObjects().length ? columnsPrimary.getObjects() :\n        (columnsSecondary && columnsSecondary.getObjects().length ? columnsSecondary.getObjects() : []);\n\n    const headerConfig = [\n        { type: LEFT, section: rows[0], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: RIGHT, section: rows[1], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: TOP, section: columns[0], axis: colAxis, headerFrom: takeHeaderFrom.column },\n        { type: BOTTOM, section: columns[1], axis: colAxis, headerFrom: takeHeaderFrom.column }\n    ];\n\n    headerConfig.forEach((config, index) => {\n        let keys;\n        let length;\n        const {\n            type,\n            section,\n            axis,\n            headerFrom\n        } = config;\n\n        if (index < 2) {\n            keys = rowKeys;\n            length = rowProjections.length > 0 ? rowProjections.length : 1;\n        } else {\n            keys = columnKeys;\n            length = colProjections.length > 0 ? colProjections.length : 1;\n        }\n\n        if (section.length && headerFrom === type && axis && keys.length) {\n            const hContext = { axis, length, type };\n            let headers = [];\n            if (index < 2) {\n                hContext.keys = keys;\n                hContext.facet = facet.rows;\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            } else {\n                hContext.facet = facet.columns;\n                hContext.keys = keys[0].map((key, i) => keys.map(e => e[i]));\n\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            }\n            selectionObj[`${type}Headers`] = headers;\n        } else {\n            selectionObj[`${type}Headers`] = null;\n        }\n    });\n    return selectionObj;\n};\n\n/**\n * Generates matrices\n *\n * @param {Object} config Configuration to generate matrices\n * @param {Array} matrices Matrices containing the set of visual units and axes units\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} contains a collection of matrices\n */\nexport const generateMatrices = (context, matrices, cells, labelManager) => {\n    const {\n        unitHeight,\n        unitWidth,\n        facetsAndProjections,\n        normalizedRows,\n        normalizedColumns,\n        selection,\n        axisFrom,\n        facet,\n        encoders\n     } = context;\n    const placeholderContext = {\n        fields: {\n            rows: normalizedRows,\n            columns: normalizedColumns\n        },\n        matrices,\n        facetsAndProjections,\n        selection,\n        axisFrom,\n        facet,\n        encoders\n    };\n    // Generate placeholders for all matrices\n    const selectionObj = generatePlaceholders(placeholderContext, cells, labelManager);\n    const {\n        columnsPrimary,\n        columnsSecondary,\n        rowsPrimary,\n        rowsSecondary,\n        leftHeaders,\n        topHeaders,\n        bottomHeaders,\n        rightHeaders\n    } = selectionObj;\n    const [rowPrime, rowSec, colPrime, colSec] = [rowsPrimary, rowsSecondary, columnsPrimary, columnsSecondary]\n        .map(d => (d ? d.getObjects() : []));\n    const [leftFacets, rightFacets] = [leftHeaders, rightHeaders]\n        .map(e => (e ? e.getObjects()\n                        .map(f => f.getObjects()) : []));\n    let rowPriority = rowSec.length ? 1 : -1;\n    rowPrime.length && rowPriority++;\n    let colPriority = colSec.length ? 1 : -1;\n    colPrime.length && colPriority++;\n\n    // Compute left matrix using left headers and the axes on the rows\n    let leftMatrix = leftFacets.length ? leftFacets.map((d, i) => {\n        rowPrime[i] = rowPrime[i] ? [rowPrime[i]] : [];\n        return [...d, ...rowPrime[i]];\n    }) : (rowPrime ? rowPrime.map(d => [d]) : []);\n\n    // Compute right matrix using right headers and the axes on the rows\n    const rightMatrix = rowSec.length ? rowSec.map((d, i) => [d, ...(rightFacets[i] || [])]) : (rightFacets.length ?\n        rightFacets.map(d => [...d]) : []);\n\n    const topMatrix = [];\n    if (topHeaders) {\n        const headers = topHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                topMatrix[i] = topMatrix[i] || [];\n                topMatrix[i].push(x);\n            });\n        });\n    }\n    // Compute top matrix using the top headers and axes on the columns\n    if (colPrime.length) {\n        topMatrix.push(colPrime);\n    }\n\n    // Bottom and right matrices are prepared using the user config.\n    let bottomMatrix = [];\n    if (colSec.length) {\n        bottomMatrix.push(colSec);\n    }\n    const currentBottomLength = bottomMatrix.length;\n    if (bottomHeaders) {\n        const headers = bottomHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                bottomMatrix[i + currentBottomLength] = bottomMatrix[i + currentBottomLength] || [];\n                bottomMatrix[i + currentBottomLength].push(x);\n            });\n        });\n    }\n\n    if (!leftMatrix.length && !rightMatrix.length) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        leftMatrix = [[cell]];\n    }\n\n    if (!topMatrix.length && (!bottomMatrix.length || !bottomMatrix[0].length)) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        bottomMatrix = [[cell]];\n    }\n\n    return {\n        rows: [leftMatrix, rightMatrix],\n        columns: [topMatrix, bottomMatrix],\n        selectionObj,\n        colPriority,\n        rowPriority\n    };\n};\n\n/**\n * Computes matrices for a group\n *\n * @param {Object} datamodel on which the matrices are to be computed\n * @param {Object} config configuration of the matrices\n * @param {Object} layerRegistry contains the registered layers\n * @return {Object} conputed matrices\n * @memberof MatrixResolver\n */\nexport const computeMatrices = (context, config) => {\n    const {\n        resolver,\n        datamodel,\n        componentRegistry,\n        encoders\n    } = context;\n    const {\n            globalConfig,\n            selection,\n            transform\n        } = config;\n    const groupBy = globalConfig.autoGroupBy;\n    const { smartlabel: labelManager } = resolver.dependencies();\n    const fieldMap = datamodel.getFieldsConfig();\n    const layerConfig = resolver.layerConfig();\n    const registry = resolver.registry();\n    const { fields: normalizedRows } = resolver.horizontalAxis();\n    const { fields: normalizedColumns } = resolver.verticalAxis();\n    const otherEncodings = resolver.optionalProjections(config, layerConfig);\n    const facetsAndProjections = resolver.getAllFields();\n    const matrixGnContext = {\n        // Configuration to be passed to generate the  different matrices.\n        // A common config is used for both value matrices and other matrices\n        normalizedColumns,\n        normalizedRows,\n        facetsAndProjections,\n        layers: layerConfig,\n        fieldMap,\n        otherEncodings,\n        encoders,\n        facet: globalConfig.facet || {},\n        axisFrom: globalConfig.axisFrom || {},\n        selection\n    };\n    const cells = {\n        GeomCell: resolver.getCellDef(registry.GeomCell),\n        AxisCell: resolver.getCellDef(registry.AxisCell),\n        BlankCell: resolver.getCellDef(registry.BlankCell),\n        TextCell: resolver.getCellDef(registry.TextCell)\n    };\n    const isRowSizeEqual = isDistributionEqual(normalizedRows);\n    const isColumnSizeEqual = isDistributionEqual(normalizedColumns);\n\n    resolver.colCells({});\n    resolver.rowCells({});\n    resolver.datamodelTransform(transform || {});\n\n    // Cell creation begins here\n    resolver.resetSimpleAxes();\n\n    const {\n        entryCellMap\n    } = resolver.cacheMaps();\n    const newCacheMap = {\n        exitCellMap: entryCellMap,\n        entryCellMap: new Map()\n    };\n\n    resolver.cacheMaps(newCacheMap);\n\n    const valueCellContext = {\n        config: globalConfig,\n        suppliedLayers: encoders.simpleEncoder.serializeLayerConfig(resolver.layerConfig()),\n        resolver,\n        cell: cells.GeomCell,\n        encoder: encoders.simpleEncoder,\n        newCacheMap,\n        detailFields: config.detail\n    };\n    const fieldsConfig = datamodel.getFieldsConfig();\n    let groupedModel = datamodel;\n    if (!groupBy.disabled) {\n        const fields = getFieldsFromSuppliedLayers(valueCellContext.suppliedLayers, datamodel.getFieldsConfig());\n        const allFields = extractFields(facetsAndProjections, fields);\n\n        const dimensions = allFields.filter(field =>\n            fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n        const aggregationFns = groupBy.measures;\n\n        groupedModel = datamodel.groupBy(dimensions.length ? dimensions : [''], aggregationFns).project(allFields);\n    }\n\n    // return a callback function to create the cells from the matrix\n    const cellCreator = resolver.valueCellsCreator(valueCellContext);\n    // Creates value matrices from the datamodel and configs\n    const valueMatrixInfo = getMatrixModel(groupedModel, facetsAndProjections, cellCreator);\n\n    resolver.cacheMaps().exitCellMap.forEach((placeholder) => {\n        placeholder.remove();\n    });\n    resolver.cacheMaps().exitCellMap.clear();\n    resolver.valueMatrix(valueMatrixInfo.matrix);\n\n    const { xAxes, yAxes } = mutateAxesFromMap(resolver.cacheMaps(), resolver.axes());\n\n    resolver.axes({\n        x: xAxes,\n        y: yAxes\n    });\n    const store = resolver.store();\n\n    [xAxes, yAxes].forEach((axesArr, type) => {\n        const stateProps = {};\n        axesArr = axesArr || [];\n        axesArr.forEach((axes, idx) => {\n            axes.forEach((axis, axisIndex) => {\n                stateProps[`${idx}${axisIndex}`] = null;\n            });\n        });\n        store.append(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type ? 'y' : 'x'}`, stateProps);\n    });\n    resolver.createUnits(componentRegistry, config);\n\n    const matrices = {\n        valuesMatrix: valueMatrixInfo,\n        axesMatrix: resolver.axes()\n    };\n    // Create all matrices\n    const {\n        rows,\n        columns,\n        selectionObj,\n        rowPriority,\n        colPriority\n    } = generateMatrices(matrixGnContext, matrices, cells, labelManager);\n\n    resolver.rowMatrix(rows);\n    resolver.columnMatrix(columns);\n\n    return {\n        rows: resolver.rowMatrix(),\n        columns: resolver.columnMatrix(),\n        values: resolver.valueMatrix(),\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority: {\n            row: rowPriority,\n            col: colPriority\n        },\n        selection: selectionObj,\n        dataModels: {\n            groupedModel,\n            parentModel: datamodel\n        }\n    };\n};\n","export const RESOLVER_PROPS = {\n    dependencies: {},\n    units: {},\n    datamodelTransform: {},\n    layerConfig: {},\n    matrixLayers: {},\n    colCells: {},\n    rowCells: {},\n    rowMatrix: {},\n    columnMatrix: {},\n    valueMatrix: {},\n    encoder: {}\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { generateGetterSetters, STATE_NAMESPACES } from 'muze-utils';\nimport {\n     initializeCacheMaps,\n     headerCreator,\n     extractUnitConfig,\n     setFacetsAndProjections\n} from './group-utils';\nimport {\n     ROW, COL, LEFT, RIGHT, COLOR, SIZE, SHAPE, DETAIL, CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS, INITIALIZED,\n     AXIS, UNIT, BEFORE_UPDATE, UPDATED, VALUE_MATRIX, FACET_HEADERS\n} from '../enums/constants';\nimport { createValueCells, computeMatrices } from './cell-creator';\nimport { RESOLVER_PROPS } from './resolver-props';\n\n/**\n * Resolves the matrices from configuration provided\n *\n * @export\n * @class MatrixResolver\n */\nexport default class MatrixResolver {\n\n    /**\n     * Creates an instance of MatrixResolver.\n     * @param {Object} dependencies needed to run the resolver\n     * @memberof MatrixResolver\n     */\n    constructor (dependencies) {\n        this._registry = {};\n        this._layerConfig = [];\n        this._matrixLayers = [];\n        this._dependencies = dependencies;\n        this._rowMatrix = [];\n        this._columnMatrix = [];\n        this._valueMatrix = [];\n        this._facets = { rowFacets: [], colFacets: [] };\n        this._projections = { rowProjections: [], colProjections: [] };\n        this._datamodelTransform = {};\n        this._units = [];\n        this._cacheMaps = {};\n        this._axes = {\n            x: {},\n            y: {},\n            color: [],\n            size: [],\n            shape: []\n        };\n        generateGetterSetters(this, RESOLVER_PROPS);\n        this.cacheMaps(initializeCacheMaps());\n    }\n\n    /**\n     * Set:  Registers placeholders, Get: return {Object} those placeholders\n     *\n     * @param {Object} placeholders cells that will construct the group\n     * @return {Object} Either current instance or the set of placeholders\n     * @memberof MatrixResolver\n     */\n    registry (...placeholders) {\n        if (placeholders.length) {\n            Object.entries(placeholders[0]).forEach((val) => {\n                this._registry[val[0]] = val[1];\n            });\n            return this;\n        }\n        return this._registry;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    cacheMaps (...maps) {\n        if (maps.length) {\n            [CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS].forEach((e) => {\n                this._cacheMaps[`${e}Map`] = maps[0][`${e}Map`] || this._cacheMaps[`${e}Map`];\n            });\n            return this;\n        }\n        return this._cacheMaps;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    axes (...axes) {\n        if (axes.length) {\n            this._axes = Object.assign({}, this._axes, axes[0]);\n            return this;\n        }\n        return this._axes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} facets\n     *\n     * @memberof MatrixResolver\n     */\n    facets (...facets) {\n        if (facets.length) {\n            Object.entries(facets[0]).forEach((e) => {\n                this._facets[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._facets;\n    }\n\n    /**\n     *\n     *\n     * @param {*} projections\n     *\n     * @memberof MatrixResolver\n     */\n    projections (...projections) {\n        if (projections.length) {\n            Object.entries(projections[0]).forEach((e) => {\n                this._projections[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._projections;\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @param {*} layerConfig\n     *\n     * @memberof MatrixResolver\n     */\n    optionalProjections (config, layerConfig) {\n        const otherEncodings = {};\n        const optionalProjections = [];\n        const otherEncodingTypes = [SIZE, COLOR, SHAPE];\n\n        otherEncodingTypes.forEach((type) => {\n            if (config[type] && config[type].field) {\n                const enc = config[type];\n                otherEncodings[type] = enc.field;\n                optionalProjections.push(enc.field);\n            }\n        });\n\n        if (config[DETAIL]) {\n            optionalProjections.push(...config.detail);\n        }\n\n        if (layerConfig.length) {\n            layerConfig.forEach((layer) => {\n                if (layer.encoding) {\n                    Object.values(layer.encoding).forEach((enc) => {\n                        if (enc && optionalProjections.indexOf(enc.field) === -1) {\n                            optionalProjections.push(enc.field ? enc.field : enc);\n                        }\n                    });\n                }\n            });\n        }\n        this.projections({ optionalProjections });\n        return otherEncodings;\n    }\n\n    /**\n     * return the normalized set of rows and facets and projections\n     *\n     * @param {Object} rows parameters needed to set horizontal axis consisiting of rows\n     * @return {Object} facets, projections and normalized rows\n     * @memberof MatrixResolver\n     */\n    horizontalAxis (rows, encoder) {\n        if (rows) {\n            this._horizontalAxis = setFacetsAndProjections(this, { type: ROW, fields: rows }, encoder);\n            return this;\n        }\n        return this._horizontalAxis;\n    }\n\n    /**\n     * return the normalized set of columns and facets and projections\n     *\n     * @param {Object} columns parameters needed to set vertical axis consisiting of columns\n     * @return {Object} facets, projections and normalized columns\n     * @memberof MatrixResolver\n     */\n    verticalAxis (columns, encoder) {\n        if (columns) {\n            this._verticalAxis = setFacetsAndProjections(this, { type: COL, fields: columns }, encoder);\n            return this;\n        }\n        return this._verticalAxis;\n    }\n\n    /**\n     * Gets the class definition of a particular cell type(if the particular type has been extended, that particular\n     * definition is returned)\n     *\n     * @param {Object} cell cell whose class definition is to be retrieved\n     * @return {Object} cell definition\n     * @memberof MatrixResolver\n     */\n    getCellDef (cell) {\n        const registry = this.registry();\n\n        Object.values(registry).forEach((e) => {\n            if (e.prototype instanceof cell) {\n                cell = e;\n            }\n        });\n        return cell;\n    }\n\n    /**\n     * return a visual cell creator along with its axis information to be injected to the datamodel creation\n     * function\n     *\n     * @param {Object} GeomCell Type of cell to be created\n     * @return {Object} Created cell\n     * @memberof MatrixResolver\n     */\n    valueCellsCreator (context) {\n        // reset matrix layers\n        this.matrixLayers([]);\n\n        return (datamodel, fieldInfo, facets) => createValueCells(context, datamodel, fieldInfo, facets);\n    }\n\n    /**\n     * Callback to be applied on each cell of a matrix of a particular type\n     *\n     * @param {string} matrixType type of matrix on which callback is to be applied\n     * @param {Function} callback function to be applied to each cell\n     * @memberof MatrixResolver\n     */\n    forEach (matrixType, callback) {\n        this[matrixType]().forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                callback(rIndex, cIndex, col);\n            });\n        });\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getAllFields () {\n        const retObj = this.projections();\n\n        Object.entries(this.facets()).forEach((e) => {\n            retObj[e[0]] = e[1];\n        });\n        return retObj;\n    }\n\n    /**\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    resetSimpleAxes () {\n        return this.axes({\n            x: new Set(),\n            y: new Set()\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} componentRegistry\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createUnits (componentRegistry, config) {\n        const {\n            globalConfig,\n            alias\n        } = config;\n        const {\n            layerRegistry,\n            sideEffectRegistry\n        } = componentRegistry;\n        const {\n            smartlabel: smartLabel,\n            lifeCycleManager\n        } = this.dependencies();\n        // Provide the source for the matrix\n        const units = [[]];\n        // Setting unit configuration\n        const unitConfig = extractUnitConfig(globalConfig || {});\n        const globalState = VisualUnit.getState()[0];\n        const globalStates = {};\n        const store = this.store();\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            let unit = el.source();\n            if (!unit) {\n                const namespace = `${i}${j}`;\n\n                unit = VisualUnit.create({\n                    layerRegistry,\n                    sideEffectRegistry\n                }, {\n                    smartLabel,\n                    lifeCycleManager\n                });\n                globalStates[namespace] = null;\n                unit.metaInf({\n                    rowIndex: i,\n                    colIndex: j,\n                    namespace\n                });\n                unit.store(store);\n                el.source(unit);\n            }\n            !units[i] && (units[i] = []);\n            units[i][j] = unit;\n            unit.parentAlias(alias);\n            el.config(unitConfig);\n        });\n\n        for (const key in globalState) {\n            store.append(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${key}`, globalStates);\n        }\n\n        lifeCycleManager.notify({ client: units, action: INITIALIZED, formalName: UNIT });\n        return this.units(units);\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    setDomains (config, datamodel, encoders) {\n        const {\n            color,\n            shape,\n            size,\n            globalConfig\n        } = config;\n        const groupBy = globalConfig.autoGroupBy;\n        const {\n            rowFacets,\n            colFacets\n        } = this.getAllFields();\n        const encoding = {\n            color,\n            shape,\n            size\n        };\n        const facetFields = [...rowFacets.map(e => e.toString()), ...colFacets.map(e => e.toString())];\n        const retContext = {\n            domains: encoders.simpleEncoder.getRetinalFieldsDomain(datamodel, encoding, facetFields, groupBy),\n            axes: this.axes(),\n            encoding\n        };\n        encoders.retinalEncoder.setCommonDomain(retContext);\n        return this;\n    }\n\n    resetFacetsAndProjections () {\n        this._facets = {};\n        this._projections = {};\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getRetinalAxes () {\n        const {\n            color,\n            shape,\n            size\n        } = this.axes();\n\n        return {\n            color: [...color],\n            shape: [...shape],\n            size: [...size]\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     *\n     * @memberof MatrixResolver\n     */\n    getSimpleAxes (type) {\n        return this.axes()[`${type}`];\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createRetinalAxes (fieldsConfig, config, encoders) {\n        const layerConfig = this.layerConfig();\n        this.optionalProjections(config, layerConfig);\n        const retinalAxes = encoders.retinalEncoder.createAxis({\n            fieldsConfig,\n            config,\n            axes: this.axes()\n        });\n        const {\n            lifeCycleManager\n        } = this.dependencies();\n\n        [COLOR, SHAPE, SIZE].forEach((e) => {\n            this.axes()[e] = retinalAxes[e];\n        });\n\n        lifeCycleManager.notify({ client: this.axes(), action: INITIALIZED, formalName: AXIS });\n        lifeCycleManager.notify({ client: this.units(), action: BEFORE_UPDATE, formalName: UNIT });\n\n        const units = [];\n        const matrixLayers = this.matrixLayers();\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            el.axes(retinalAxes);\n            el.source() && el.source().retinalFields(config);\n            el.layerDef(encoders.retinalEncoder.getLayerConfig(config, matrixLayers[i][j]));\n            el.updateModel();\n\n            units.push(el.source());\n        });\n\n        lifeCycleManager.notify({ client: units, action: UPDATED, formalName: UNIT });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} placeholders\n     * @param {*} fieldNames\n     *\n     * @memberof MatrixResolver\n     */\n    createHeaders (placeholders, fieldNames, config) {\n        let bottomLeft = [];\n        let bottomRight = [];\n        const {\n            rows,\n            columns\n        } = placeholders;\n        const {\n            smartlabel: labelManager,\n            lifeCycleManager\n        } = this.dependencies();\n        const TextCell = this.getCellDef(this.registry().TextCell);\n        const BlankCell = this.getCellDef(this.registry().BlankCell);\n        const [leftRows, rightRows] = rows;\n        const [topCols, bottomCols] = columns;\n        const rowHeaders = fieldNames.rows;\n        const blankCellCreator = cell => new BlankCell().config({ show: cell.config().show });\n\n        // Headers and footers are created based on the rows. Thereafter, using the column information\n        // they are tabularized into the current structure\n        const headers = {\n            left: headerCreator(leftRows, rowHeaders[0], config.showHeaders ? TextCell : BlankCell, labelManager),\n            right: headerCreator(rightRows, rowHeaders[1], config.showHeaders ? TextCell : BlankCell, labelManager)\n        };\n        const footers = {\n            left: leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : [],\n            right: rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []\n        };\n        const [topLeft, topRight] = [LEFT, RIGHT].map(type => topCols.map((col, i) => {\n            if (i === topCols.length - 1) {\n                return headers[type];\n            }\n            return footers[type];\n        }));\n\n        // Creating only bottom matrices if there is no information on the top\n        if (topCols.length === 0) {\n            [bottomLeft, bottomRight] = [LEFT, RIGHT].map(type => bottomCols.map((col, i) => {\n                if (i === 0) {\n                    return headers[type];\n                }\n                return footers[type];\n            }));\n        } else {\n            bottomLeft = bottomCols.map(() => (leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : []));\n            bottomRight = bottomCols.map(() => (rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []));\n        }\n\n        lifeCycleManager.notify({\n            client: [topLeft, topRight, bottomLeft, bottomRight],\n            action: INITIALIZED,\n            formalName: FACET_HEADERS\n        });\n\n        return { topLeft, topRight, bottomLeft, bottomRight };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @param {*} componentRegistry\n     * @param {*} encoders\n     *\n     * @memberof MatrixResolver\n     */\n    getMatrices (datamodel, config, componentRegistry, encoders) {\n        const context = {\n            datamodel,\n            componentRegistry,\n            encoders,\n            resolver: this\n        };\n\n        return computeMatrices(context, config);\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            return this;\n        }\n        return this._store;\n    }\n}\n","/**\n * This is a wrapper class over the matrix of cells which gets created in visual group. Visual Group creates left,\n * right, bottom and top and center matrices and wraps them using this class.\n *\n * @public\n * @class ValueMatrix\n */\nclass ValueMatrix {\n\n    /**\n     * Creates an instance of ValueMatrix.\n     *\n     * @param {Array} matrixArr Matrix array.\n     */\n    constructor (matrixArr) {\n        const instancesById = {};\n\n        this.matrix(matrixArr || []);\n        this.filter(() => true);\n\n        this.each((el, rIdx, cIdx) => {\n            const cellValue = el.valueOf();\n            if (cellValue && cellValue.id) {\n                const id = cellValue.id();\n                instancesById[id] = {\n                    instance: cellValue,\n                    rowIndex: rIdx,\n                    colIndex: cIdx\n                };\n            }\n        });\n\n        this.instancesById(instancesById);\n    }\n\n    instancesById (...id) {\n        if (id.length) {\n            this._instancesById = id[0];\n            return this;\n        }\n        return this._instancesById;\n    }\n\n    /**\n     * Returns the array of matrices contained in this instance.\n     *\n     * @public\n     * @return {Array} Array of matrices.\n     */\n    matrix (...matrix) {\n        if (matrix.length) {\n            this._matrix = matrix[0];\n            return this;\n        }\n        return this._matrix;\n    }\n\n    /**\n     * Sets a filter criteria. This filter criteria gets applied when each function is called.\n     *\n     * @public\n     * @param {Function} fn Filter function.\n     *\n     * @return {ValueMatrix} Instance of value matrix.\n     */\n    filter (...fn) {\n        if (fn.length) {\n            this._filterFn = fn[0];\n            return this;\n        }\n        return this._filterFn;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    width () {\n        let rowWidth = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowWidth = 0;\n            row.forEach((cell) => {\n                currentRowWidth += cell.getLogicalSpace().width;\n            });\n            rowWidth = Math.max(rowWidth, currentRowWidth);\n        });\n        return rowWidth;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    height () {\n        let rowHeight = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowHeight = 0;\n            row.forEach((cell) => {\n                currentRowHeight = Math.max(currentRowHeight, cell.getLogicalSpace().height);\n            });\n            rowHeight += currentRowHeight;\n        });\n        return rowHeight;\n    }\n\n    /**\n     * Iterates through the two dimensional matrix array and calls the given callback function with the cell instance,\n     * row index, column index and the matrix array.\n     *\n     * @param {Function} fn Callback function which will get called for every cell.\n     * @return {ValueMatrix} Instance of the value matrix.\n     */\n    each (fn) {\n        const matrix = this.matrix();\n        const filterFn = this.filter();\n\n        matrix.forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                if (filterFn(col)) {\n                    fn(col, rIndex, cIndex, matrix);\n                }\n            });\n        });\n        return this;\n    }\n\n    findPlaceHolderById (id) {\n        return this.instancesById()[id];\n    }\n}\n\nexport default ValueMatrix;\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { getEncoder, getBorders } from '../group-helper';\nimport { RetinalEncoder } from '../encoder';\nimport { registerDomainChangeListener, unsubscribeChangeListeners } from './change-listener';\nimport ValueMatrix from './value-matrix';\n\nexport const createUnitState = (context) => {\n    const [globalState] = VisualUnit.getState();\n    const store = context.store();\n    store.append(STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const initializeGlobalState = (context) => {\n    const globalState = context.constructor.getState()[0];\n    const store = context.store();\n    store.append(STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const createLayerState = (context) => {\n    const [globalState] = BaseLayer.getState();\n    context.store().append(STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, globalState);\n};\n\nconst sanitizeRetinalConfig = (retinalConf) => {\n    const conf = {};\n    for (const key in retinalConf) {\n        const confValue = retinalConf[key];\n        if (typeof confValue === 'string' || !confValue) {\n            conf[key] = {\n                field: retinalConf[key]\n            };\n        } else {\n            conf[key] = confValue;\n        }\n    }\n    return conf;\n};\n\nexport const setMatrixInstances = (context, placeholder) => {\n    let {\n        values,\n        rows,\n        columns\n    } = placeholder;\n    values = values || [];\n    rows = rows || [];\n    columns = columns || [];\n    context._composition.matrices = {\n        value: new ValueMatrix(values),\n        left: new ValueMatrix(rows[0]),\n        right: new ValueMatrix(rows[1]),\n        top: new ValueMatrix(columns[0]),\n        bottom: new ValueMatrix(columns[1])\n    };\n\n    context._dependencies.throwback.commit(CommonProps.MATRIX_CREATED, true);\n    return context;\n};\n\nexport const createMatrices = (context) => {\n    const rows = context.rows();\n    const columns = context.columns();\n    const color = context.color();\n    const datamodel = context.data();\n    const size = context.size();\n    const detail = context.detail();\n    const layers = context.layers();\n    const transform = context.transform();\n    const config = context.config();\n    const shape = context.shape();\n\n    // Get the resolver for the matrices\n    const resolver = context.resolver();\n    resolver.store(context.store());\n    // Prepare configuration for matrix preparation\n    let matrixConfig = {\n        selection: context.selection(),\n        alias: context.alias(),\n        globalConfig: config || {},\n        rows,\n        columns,\n        detail,\n        layers,\n        transform\n    };\n\n    unsubscribeChangeListeners(context);\n\n    const retinalConfig = sanitizeRetinalConfig({\n        color,\n        shape,\n        size\n    });\n\n    matrixConfig = Object.assign(matrixConfig, retinalConfig);\n    // Create the encoders for the group\n    const encoders = {};\n    encoders.retinalEncoder = new RetinalEncoder();\n    encoders.simpleEncoder = getEncoder(layers);\n    resolver.encoder(encoders.simpleEncoder);\n\n    // Set the group type\n    context.groupType(encoders.simpleEncoder.constructor.type());\n\n    // Get sanitized fields as instances of the Vars Class\n    const fields = encoders.simpleEncoder.fieldSanitizer(datamodel, matrixConfig);\n    encoders.simpleEncoder.setAxisAndHeaders(config ? config.axisFrom : {}, fields);\n    // Setting layers for the code\n    layers && resolver.layerConfig(layers);\n    // Set the row and column axes\n    resolver.horizontalAxis(fields.rows, encoders).verticalAxis(fields.columns, encoders);\n    // Getting the placeholders\n    const placeholderInfo = resolver.getMatrices(datamodel, matrixConfig, context.registry(), encoders);\n    context._groupedDataModel = placeholderInfo.dataModels.groupedModel;\n    // Set the selection object\n    context.selection(placeholderInfo.selection);\n\n    // Create retinal axes\n    resolver.createRetinalAxes(placeholderInfo.dataModels.parentModel.getFieldsConfig(), retinalConfig,\n            encoders);\n\n    // Domains are evaluated for each of the axes for commonality\n    resolver.setDomains(matrixConfig, placeholderInfo.dataModels, encoders);\n\n    // Create matrix instances\n    setMatrixInstances(context, placeholderInfo);\n\n    // Prepare corner matrices\n    context.cornerMatrices(resolver.createHeaders(placeholderInfo, fields, config));\n\n    // Set placeholder information\n    context.placeholderInfo(placeholderInfo);\n\n    context._composition.axes = resolver.axes();\n    context.metaData({\n        border: getBorders(placeholderInfo, encoders.simpleEncoder)\n    });\n\n    resolver.encoder().unionUnitDomains(context);\n\n    registerDomainChangeListener(context);\n    return context;\n};\n","import { STATE_NAMESPACES } from 'muze-utils';\n\nexport const setupChangeListeners = (context) => {\n    const store = context.store();\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.x.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.y.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n};\n\nexport const registerDomainChangeListener = (context) => {\n    const store = context.store();\n    store.registerChangeListener([`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`], () => {\n        context.resolver().encoder().unionUnitDomains(context);\n    }, false, {\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n\nexport const unsubscribeChangeListeners = (context) => {\n    context.store().unsubscribe({\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\nexport const PROPS = {\n    alias: {},\n    data: {},\n    cornerMatrices: {\n        defaultValue: {\n            topLeft: [],\n            topRight: [],\n            bottomLeft: [],\n            bottomRight: []\n        }\n    },\n    groupType: {},\n\n    metaData: {\n        defaultValue: {\n            border: {}\n        }\n    },\n    placeholderInfo: {\n        defaultValue: {}\n    },\n    resolver: {},\n    registry: {\n        sanitization: (context, value) => {\n            if (context.resolver) {\n                context.resolver().registry(value.cellRegistry);\n            }\n            return value;\n        }\n    },\n    selection: {},\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { generateGetterSetters } from 'muze-utils';\nimport localOptions from './local-options';\nimport { SimpleGroup } from '../simple-group';\nimport {\n    MatrixResolver,\n    findInGroup\n} from '../group-helper';\nimport { createUnitState, initializeGlobalState, setMatrixInstances, createMatrices, createLayerState } from './helper';\nimport { setupChangeListeners } from './change-listener';\nimport { PROPS } from './props';\nimport {\n    CONFIG,\n    MOUNT,\n    RETINAL,\n    Y\n} from '../enums/constants';\n\n/**\n * VisualGroup is instantiated by canvas for creating {@link VisualUnit} and axes instances.It creates the\n * the matrix of visual units and axes. It also creates the layout instance which manages the allocation\n * of space of matrices.\n *\n * To get instance of visual group,\n * ```\n *      const visualGroup = canvas.composition().visualGroup;\n * ```\n * @public\n *\n * @class VisualGroup\n */\nclass VisualGroup extends SimpleGroup {\n\n    /**\n     * Creates an instance of VisualGroup. Requires dependencies and other registry options for placeholders\n     * and layers that create individual units.\n     *\n     * @param {Object} registry Key value pair of compostions for the group\n     * @param {Object} dependencies Dependencies needed to run the group\n     * @memberof VisualGroup\n     */\n    constructor (registry, dependencies) {\n        super();\n\n        const {\n            componentSubRegistry\n        } = registry;\n\n        this._dependencies = dependencies;\n        // Generate getter/setter methods for all properties of the class\n        // One can get each property by calling the method and can set it\n        // by passing paramaters for the same. Thus, one can chain setter\n        // getter methods.\n        generateGetterSetters(this, PROPS);\n        generateGetterSetters(this, localOptions);\n        // Populate the store with default values\n        // initialize group compositions\n        this._composition = {};\n        // store reference to data\n        this._data = [];\n        // store reference to mountpoint\n        this._mount = null;\n        // selection object that takes care of updating of components\n        this._selection = {};\n        // Create instance of matrix resolver\n        this.resolver(new MatrixResolver(this._dependencies));\n        // matrix instance store each of the matrices\n        setMatrixInstances(this, {});\n         // Getting indiviual registered items\n        this.registry({\n            layerRegistry: componentSubRegistry.layerRegistry.get(),\n            cellRegistry: componentSubRegistry.cellRegistry.get()\n        });\n    }\n\n    static getState () {\n        return [{\n            domain: {\n                x: {},\n                y: {},\n                radius: {}\n            }\n        }, {}];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            initializeGlobalState(this);\n            createUnitState(this);\n            createLayerState(this);\n            // Register listeners\n            setupChangeListeners(this);\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Return the instances of matrices created by the visual group.\n     *\n     * @return {Object} Instance of matrices.\n     */\n    matrixInstance (...matrices) {\n        if (matrices.length) {\n            return this;\n        }\n        return this.composition().matrices;\n    }\n\n    /**\n     * Returns the composition of visual group.\n     *\n     * @public\n     *\n     * @return {Object} Composition of visual group. It contains instance of matrices {@link ValueMatrix}\n     * and instances of axis.\n     * ```\n     *          {\n     *              matrices: {\n     *                  value: // Instance of center value matrix.\n     *                  left: // Instance of left value matrix\n     *                  right: // Instance of right value matrix\n     *                  bottom: // Instance of bottom value matrix\n     *                  top: // Instance of top value matrix.\n     *              },\n     *              axes: {\n     *                  x: // Array of x axis.\n     *                  y: // Array of y axis\n     *                  color: // Array of color axis\n     *                  shape: // Array of shape axis\n     *                  size: // Array of size axis.\n     *              }\n     *          }\n     * ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    /**\n     * Locks the model to prevent change listeners to be triggered until unlocked\n     *\n     * @return {Object} Instance of class VisualGroup\n     * @memberof VisualGroup\n     */\n    lockModel () {\n        this.store().model.lock();\n        return this;\n    }\n\n    /**\n     * Unlocks the model so that all change listeners can be triggered\n     *\n     * @return {Object} Instance of class VisualGroup\n     */\n    unlockModel () {\n        this.store().model.unlock();\n        return this;\n    }\n\n    /**\n     * Returns the channel name of the variable. Channels are rows, columns, color, shape and size.\n     *\n     * @public\n     * @param {string} variable Name of the variable.\n     *\n     * @return {string} Name of the channel.\n     */\n    where (variable) {\n        return findInGroup(variable, this.resolver().getAllFields());\n    }\n\n    /**\n     * Gets the axis instances of the visual group based on the given axis type.\n     *\n     * @public\n     * @param {string} type Type of axis. X,Y or retinal axes.\n     *\n     * @return {Array} Array of axis instances.\n     */\n    getAxes (type) {\n        if (type === RETINAL) {\n            return this.resolver().getRetinalAxes();\n        }\n        return this.resolver().getSimpleAxes(type);\n    }\n\n    /**\n     * Returns the instances of cells based on the given type. Type can be given as `row' or `col`.\n     *\n     * @public\n     * @return {Array} Two dimensional array of cells.\n     */\n    getCells (type) {\n        return this.resolver()[`${type}Cells`]();\n    }\n\n    getFieldsFromChannel (channel) {\n        const {\n            rowProjections,\n            colProjections\n        } = this.resolver().getAllFields();\n        return channel === Y ? rowProjections : colProjections;\n    }\n\n    getCellsByFacetKey (facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey] || [];\n        return cells;\n    }\n\n    getAxesByFacetKey (axisType, facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey];\n        const axes = cells[0].valueOf().axes()[axisType] || [];\n\n        return axes;\n    }\n\n    /**\n     * This method is used to return a serialized representation of the instance's properties.\n     *\n     * @return {Object} Object with config proprties.\n     * @memberof VisualGroup\n     */\n    serialize () {\n        const store = this.store();\n\n        return {\n            [CONFIG]: store.get(CONFIG),\n            [MOUNT]: store.get(MOUNT)\n        };\n    }\n\n    /**\n     * Returns the grouped datamodel prepared by visual group. If there is no group by performed, then it returns the\n     * original data model passed to visual group.\n     *\n     * @return {DataModel} Grouped data model.\n     */\n    getGroupByData () {\n        return this._groupedDataModel;\n    }\n\n    createMatrices () {\n        createMatrices(this);\n    }\n}\n\nexport default VisualGroup;\n","import { PersistentBehaviour, SELECTION } from '@chartshq/muze-firebolt';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return 'select';\n    }\n\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            // new add set\n            const existingRemoveSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_OLD_EXIT\n                || selectionSet._set[d] === SELECTION.SELECTION_NEW_EXIT);\n                // existing add set\n            if (existingRemoveSet.length) {\n                selectionSet.updateEntry();\n                selectionSet.add(existingRemoveSet);\n            } else {\n                selectionSet.updateExit();\n                selectionSet.remove(addSet);\n            }\n            const { exitSet } = selectionSet.getSets();\n            const mergedExitSet = [...new Set(exitSet[1]), ...new Set(exitSet[0])];\n            const completeSetCount = selectionSet.getCompleteSet().length;\n            if (exitSet[1].length !== completeSetCount && mergedExitSet.length === completeSetCount) {\n                selectionSet.reset();\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nconst CLASSPREFIX = 'muze';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        target: `.${CLASSPREFIX}-gradient-rect`,\n        behaviours: [BEHAVIOURS.BRUSH]\n    },\n    [ACTIONS.HOVER]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.CLICK]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.SELECT]\n    }\n};\n\nexport const propagationBehaviourMap = {\n    [BEHAVIOURS.SELECT]: BEHAVIOURS.FILTER,\n    [BEHAVIOURS.BRUSH]: BEHAVIOURS.HIGHLIGHT\n};\n","import * as BEHAVIOURS from '../enums/behaviours';\nimport * as sideEffects from '../enums/side-effects';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: [sideEffects.SELECTIONBOX, {\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [sideEffects.Highlighter],\n    select: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }]\n};\n\nexport const propagationSideEffects = {\n    [BEHAVIOURS.BRUSH]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.SELECT]: ['filter']\n};\n\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n\n","export const SELECTIONBOX = 'selectionBox';\nexport const Highlighter = 'highlighter';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const CONFIG = 'config';\nexport const DATAMODEL = 'dataModel';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNTPOINT = 'mountPoint';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const TRANSFORM = 'transform';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const DEFAULTCOLOR = '#F44336';\nexport const DEFAULTSIZE = 50;\nexport const DEFAULTSHAPE = 'circle';\nexport const STEP = 'step';\nexport const GRADIENT = 'gradient';\nexport const ORDINAL = 'ordinal';\nexport const SCALE_FUNCTIONS = {\n    size: 'getSize',\n    shape: 'getShape',\n    color: 'getColor'\n};\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nexport const CENTER = 'center';\nexport const VALUE = 'value';\nexport const PATH = 'path';\nexport const SHAPE = 'shape';\nexport const ICON = 'icon';\nexport const RECT = 'rect';\nexport const START = 'start';\nexport const UPPER = 'upper';\nexport const LOWER = 'lower';\nexport const END = 'end';\nexport const SIZE = 'size';\nexport const DISCRETE = 'discrete';\nexport const MEASURE = 'measure';\n\n","import { assembleModelFromIdentifiers, getDataModelFromRange } from 'muze-utils';\nimport { propagationBehaviourMap } from './action-behaviour-map';\nimport { propagationSideEffects } from './behaviour-effect-map';\nimport { STEP, GRADIENT, DISCRETE, MEASURE } from '../enums/constants';\n\nexport const propagate = (firebolt, action, selectionSet, config = {}) => {\n    let propagationData;\n    const type = firebolt.context.constructor.type();\n    const payload = config.payload;\n    const data = firebolt.context.data();\n    const metaData = firebolt.context.metaData();\n    const fieldType = metaData.getData().schema[0].type;\n\n    const propPayload = {};\n    const sourceId = firebolt.context._id;\n    propPayload.action = propagationBehaviourMap[action] || action;\n    propPayload.sideEffects = propagationSideEffects[action];\n    propPayload.sourceCanvas = firebolt.context.canvasAlias();\n    const isMutableAction = firebolt._actions.behavioural[propPayload.action].constructor.mutates();\n    if (payload.criteria === null) {\n        propagationData = null;\n    } else {\n        const entrySet = selectionSet.mergedEnter;\n        let values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.value);\n        if (type === STEP || (type === DISCRETE && fieldType === MEASURE)) {\n            const field = Object.keys(payload.criteria || {})[0];\n            values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.range);\n            propagationData = values.length ? metaData.select((fields) => {\n                let check = false;\n                for (let i = 0; i < values.length; i++) {\n                    check = fields[field].value >= values[i][0] && fields[field].value <= values[i][1];\n                    if (check === true) {\n                        break;\n                    }\n                }\n                return check;\n            }, {\n                saveChild: false\n            }) : null;\n        } else if (type === GRADIENT) {\n            propagationData = getDataModelFromRange(metaData, payload.criteria);\n        } else if (values.length) {\n            propagationData = assembleModelFromIdentifiers(metaData, [payload.criteria[0], ...values.map(d => [d])]);\n        } else {\n            propPayload.criteria = null;\n            propagationData = metaData.select(() => true, {\n                saveChild: false\n            });\n        }\n    }\n\n    let propagateInterpolatedValues = false;\n\n    if (propagationData) {\n        const schema = propagationData.getSchema();\n        propagateInterpolatedValues = schema.every(d => d.type === MEASURE);\n    }\n\n    const propConfig = {\n        sourceId: `legend-${sourceId}`,\n        payload: propPayload,\n        criteria: propPayload.criteria === null ? null : propagationData,\n        isMutableAction,\n        propagateInterpolatedValues,\n        action: propPayload.action\n    };\n\n    metaData.propagate(propagationData, propConfig, true);\n};\n","import { Firebolt } from '@chartshq/muze-firebolt';\nimport { propagate } from './helper';\nimport { STEP, GRADIENT } from '../enums/constants';\n\n/**\n * This class manages the interactions of legend.\n * @export\n * @class LegendFireBolt\n * @extends {Firebolt}\n */\nexport class LegendFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this.initializeSideEffects();\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet[0];\n    }\n\n    propagate (behaviourName, payload, selectionSet) {\n        propagate(this, behaviourName, selectionSet, {\n            payload\n        });\n    }\n\n    getAddSetFromCriteria (criteria) {\n        let values;\n        let uniqueIds;\n        const type = this.context.constructor.type();\n\n        if (criteria === null) {\n            uniqueIds = null;\n        } else if (type === STEP) {\n            values = Object.values(criteria);\n            uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n        } else if (type === GRADIENT) {\n            uniqueIds = [];\n        } else {\n            values = criteria[1];\n            if (values) {\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.value) !== -1).map(d => d.id);\n            } else {\n                values = Object.values(criteria);\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n            }\n        }\n        return {\n            uids: uniqueIds,\n            model: null\n        };\n    }\n\n    getFullData () {\n        return null;\n    }\n}\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\n/**\n * Adds dragging action to the target element.\n * @param {firebolt} firebolt firebolt\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let endPos = {};\n    let payload;\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const boundingBox = context.measurement().gradientDimensions;\n    const axisType = context.config().align === 'horizontal' ? 'x' : 'y';\n    const axisScale = context.axis().source().scale();\n    const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n    }).on('drag', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                    axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n            }\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }).on('end', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n        if (startPos[axisType] === endPos[axisType]) {\n            payload = {\n                criteria: {}\n            };\n        } else {\n            payload = {\n                criteria: {\n                    [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                        axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n                }\n            };\n        }\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }));\n};\n\nexport default drag;\n","import { getEvent } from 'muze-utils';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} Firebolt instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        const event = getEvent();\n                        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, {\n                            criteria: null\n                        }));\n                        event.stopPropagation();\n                    });\n};\n\nexport default hover;\n","/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nconst click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\n\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport click from './click';\nimport * as ACTIONNAMES from '../../enums/actions';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click\n};\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\n","import {\n    getMousePos,\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\nimport { HEIGHT, WIDTH, HORIZONTAL } from '../../enums/constants';\n\nconst getSelectionCriteria = (subject, axis, measures) => {\n    let criteria = [];\n    const {\n        axisScale,\n        axisType\n    } = axis;\n    const {\n        startPos,\n        endPos,\n        selectionBoxMeasure,\n        drawingInfMeasure,\n        offset\n    } = measures;\n    const subjectStartPoint = subject[axisType];\n\n    if (startPos[axisType] === endPos[axisType]) {\n        criteria = [];\n    } else if (subjectStartPoint + selectionBoxMeasure >= drawingInfMeasure + offset) {\n        criteria = [axisScale.invert(drawingInfMeasure + offset - selectionBoxMeasure),\n            axisScale.invert(drawingInfMeasure + offset)];\n    } else if (subjectStartPoint - offset < offset) {\n        criteria = [axisScale.invert(offset * 2), axisScale.invert(selectionBoxMeasure + offset * 2)];\n    } else {\n        criteria = [axisScale.invert(subjectStartPoint), axisScale.invert(subjectStartPoint + selectionBoxMeasure)];\n    }\n    axisType === 'x' ? criteria : criteria.reverse();\n    return criteria;\n};\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let payload;\n    const endPos = {};\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const axisScale = context.axis().source().scale();\n    const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n    const drawingInfMeasure = context.measurement().gradientDimensions[axisType === 'x' ?\n        WIDTH : HEIGHT];\n    const offset = axisScale.range()[axisType === 'x' ? 0 : 1];\n    const measures = {\n        drawingInfMeasure,\n        offset\n    };\n    let subject = {};\n\n    targetEl.call(d3Drag().on('start', function () {\n        const event = getEvent();\n        startPos = getMousePos(this, event.sourceEvent);\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n\n        subject.x += event.dx;\n        subject.y += event.dy;\n\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(subject, { axisScale, axisType }, measures);\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }).on('end', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(event, { axisScale, axisType }, measures);\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true,\n            config: {\n                transition: {\n                    duration: 200\n                }\n            }\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }));\n};\n\n","import { makeElement } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { CLASSPREFIX, HEIGHT, WIDTH, HORIZONTAL, RECT } from '../../../enums/constants';\nimport { SELECTIONBOX } from '../../../enums/side-effects';\nimport { selectionBoxDrag } from '../../physical/selection-box-drag';\nimport './styles.scss';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\n/* istanbul ignore next */ class SelectionBox extends SpawnableSideEffect {\n    static formalName () {\n        return SELECTIONBOX;\n    }\n\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            className: 'legend-selection-box',\n            classPrefix: CLASSPREFIX\n        };\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     */\n    /* istanbul ignore next */ apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const firebolt = this.firebolt;\n        const context = firebolt.context;\n        const config = this.config();\n        const axis = context.axis().source();\n        const className = `${config.classPrefix}-${config.className}`;\n\n        const domain = payload.criteria[firebolt.context.fieldName()];\n        const axisScale = axis.scale();\n        const range = domain ? [axis.getScaleValue(domain[0]), axis.getScaleValue(domain[1])] : [];\n\n        const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n\n        const gradientDimension = firebolt.context.measurement().gradientDimensions[axisType === 'x' ?\n            HEIGHT : WIDTH];\n\n        const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n        const legendGradContainer = context.getDrawingContext().svgContainer;\n        const legendSelGroup = makeElement(legendGradContainer, 'g', [1], `${config.classPrefix}-selection-box-group`);\n\n        if (firebolt.context.config().align === HORIZONTAL) {\n            x = range[0] - rangeShifter || 0;\n            y = 0;\n            width = range[1] - range[0] || 0;\n            height = gradientDimension;\n        } else {\n            x = 0;\n            y = range[1] - rangeShifter || 0;\n            height = range[0] - range[1] || 0;\n            width = gradientDimension;\n        }\n        const enterFn = function (el) {\n            selectionBoxDrag(firebolt)(el, ['brush']);\n        };\n        const selBox = makeElement(legendSelGroup, RECT, [{ domain, x, y, width, height }], className,\n            { enter: enterFn });\n        selBox.attr('y', y)\n                        .attr('x', x)\n                        .attr(WIDTH, width)\n                        .attr(HEIGHT, height);\n    }\n}\n\nexport default SelectionBox;\n\n","import { selectElement } from 'muze-utils';\n\nexport const strategies = (firebolt) => {\n    const context = firebolt.context;\n    const classed = (set, className, change) => {\n        const classPrefix = context.config().classPrefix;\n        selectElement(context.mount())\n                        .selectAll(`.${classPrefix}-legend-columns`)\n                        .filter(d => set.uids.indexOf(d.id) !== -1)\n                        .selectAll('div')\n                        .classed(className, change);\n    };\n\n    return {\n        fade: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-fadeout`, false);\n            } else {\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-fadeout`, true);\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-fadeout`, false);\n            }\n        },\n        brighten: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-brighten`, false);\n            } else {\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-brighten`, true);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n            }\n        }\n    };\n};\n","import { GenericSideEffect } from '@chartshq/muze-firebolt';\nimport { strategies } from './strategies';\nimport { Highlighter } from '../../../enums/side-effects';\n\nexport default class LegendHighlighter extends GenericSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategies = strategies(this.firebolt);\n        this._strategy = 'brighten';\n    }\n\n    static formalName () {\n        return Highlighter;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    data: {},\n    fieldName: {},\n    legendContainer: {},\n    measurement: {\n        sanitization: (context, value) => {\n            const measurement = mergeRecursive(context._measurement, value);\n            ['padding', 'border', 'margin'].forEach((space) => {\n                measurement[space] = Math.min(measurement[space] > 0 ? measurement[space] : 0,\n                     measurement.maxWidth * 0.1, measurement.maxHeight * 0.1);\n            });\n            return measurement;\n        }\n    },\n    logicalSpace: {},\n    metaData: {},\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.resetLogicalSpace();\n            context.store().commit('range', value);\n            return value;\n        }\n    },\n    scale: {},\n    smartTicks: {},\n    store: {},\n    title: {\n        sanitization: (context, value) => mergeRecursive(context._title || {}, value)\n    }\n};\n","import { getSymbol } from 'muze-utils';\nimport {\n    CENTER,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\nexport const ALIGN = {\n    HORIZONTAL: 'horizontal',\n    VERTICAL: 'vertical'\n};\n\nexport const DEFAULT_MEASUREMENT = {\n    height: 30,\n    width: 30,\n    maxWidth: Infinity,\n    maxHeight: Infinity,\n    padding: 2,\n    margin: 2,\n    border: 1\n};\n\nexport const LEGEND_TITLE = {\n    text: '',\n    orientation: (pos) => {\n        if (pos === LEFT || pos === RIGHT) {\n            return LEFT;\n        } return CENTER;\n    }\n};\n\nexport const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    borderStyle: 'solid',\n    borderColor: 'rgba(0,0,0,0)',\n    formatter: {\n        bounds: {\n            lower: 'less than',\n            upper: 'more than'\n        }\n    },\n    item: {\n        text: {\n            orientation: 'right',\n            width: 10,\n            formatter: val => val\n        },\n        icon: {\n            className: 'legend-icon',\n            height: 20,\n            width: 20,\n            color: 'rgba(0,0,0,.5)',\n            type: 'square'\n        }\n    }\n};\n\n/**\n * Creates a map of pre defined icons\n *\n * @param {string} icon Accepts a icon name like 'square', 'cross', 'diamond' etc\n * @return {Object} icon object which can be used to draw the icons\n */\nexport const ICON_MAP = (icon) => {\n    if (icon && typeof (icon) === 'string') {\n        return getSymbol(icon);\n    } return icon;\n};\n","import { makeElement, numberInterpolator } from 'muze-utils';\n\nimport {\n    SCALE_FUNCTIONS,\n    WIDTH,\n    HEIGHT,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} scale\n *\n */\nexport const getScaleInfo = (scale) => {\n    const scaleType = scale.constructor.type();\n    const domain = scale.uniqueValues();\n    const steps = scale.config().stops || 1;\n    const scaleFn = SCALE_FUNCTIONS[scaleType];\n\n    return { scaleType, domain, steps, scaleFn };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} steps\n *\n */\nexport const getInterpolatedData = (domain, steps) => {\n    const domainForLegend = [];\n    const interpolatedFn = numberInterpolator()(domain[0], domain[1]);\n\n    for (let i = 0; i <= steps; i++) {\n        domainForLegend[i] = interpolatedFn(i / steps);\n    }\n    return domainForLegend;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} text\n * @param {*} measurement\n * @param {*} classPrefix\n */\nexport const titleCreator = (container, title, measurement, config) => {\n    const titleContainer = makeElement(container, 'table', [1], `${config.classPrefix}-legend-title`)\n            .style(WIDTH, `${measurement.width}px`)\n            .style(HEIGHT, `${measurement.height}px`)\n            .style('border-bottom', `${measurement.border}px ${config.borderStyle} ${config.borderColor}`)\n            .style('text-align', title.orientation instanceof Function ?\n                    title.orientation(config.position) : title.orientation);\n    return makeElement(titleContainer, 'td', [1], `${config.classPrefix}-legend-title-text`)\n                    .style(WIDTH, `${measurement.width}px`)\n                    .style(HEIGHT, '100%')\n                    .style('padding', `${measurement.padding}px`)\n                    .text(title.text)\n                    .node();\n};\n\n                                /**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getMaxMeasures = (data, prop, labelManager) => {\n    let maxHeight = -Infinity;\n    let maxWidth = -Infinity;\n\n    data.forEach((item) => {\n        const value = prop ? item[prop] : item;\n        const space = labelManager.getOriSize(value);\n        maxHeight = Math.max(space.height + 2, maxHeight);\n        maxWidth = Math.max(space.width + 2, maxWidth);\n    });\n\n    return { height: maxHeight, width: maxWidth };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getItemMeasures = (data, prop, labelManager, formatter) => {\n    const space = [];\n\n    data.forEach((item, index) => {\n        const value = prop ? item[prop] : item;\n        const { height, width } = labelManager.getOriSize(formatter(value));\n        space[index] = { height: height + 1, width: width + 1 };\n    });\n    return space;\n};\n\n/**\n *\n *\n * @param {*} textOrientation\n * @param {*} effPadding\n * @param {*} titleSpace\n *\n * @memberof Legend\n */\nexport const computeItemSpaces = (config, measures, data) => {\n    let totalHeight = 0;\n    let totalWidth = 0;\n    let maxItemSpaces = {\n        width: 0, height: 0\n    };\n    const {\n        effPadding,\n        titleWidth,\n        labelSpaces,\n        titleHeight,\n        maxWidth\n    } = measures;\n    const {\n        item,\n        align\n    } = config;\n    const {\n        icon,\n        text\n    } = item;\n    const textOrientation = text.orientation;\n    const itemSpaces = [];\n    const iconSpaces = [];\n    let maxIconWidth = 0;\n    labelSpaces.forEach((labelSpace, i) => {\n        const itemSpace = { width: 0, height: 0 };\n        const iconSpace = { width: 0, height: 0 };\n        const datum = data[i] || {};\n            // Compute each legend item height/width\n        if (textOrientation === LEFT || textOrientation === RIGHT) {\n            // Get label, icon and item widths\n            labelSpace.width += effPadding;\n            iconSpace.width = (datum.size ? 2 * Math.sqrt(datum.size / Math.PI) : icon.width) + effPadding;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n            itemSpace.width = labelSpace.width + maxIconWidth;\n\n            // Get label, icon and item heights\n            labelSpace.height = Math.max(labelSpace.height, icon.height) + effPadding;\n            iconSpace.height = labelSpace.height;\n            itemSpace.height = labelSpace.height;\n        } else {\n            // Get label, icon and item widths\n            labelSpace.width = Math.max(labelSpace.width, datum.size ? 2 * Math.sqrt(datum.size / Math.PI)\n            : icon.width) + effPadding;\n            iconSpace.width = labelSpace.width;\n            itemSpace.width = labelSpace.width;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n\n            // Get label, icon and item heights\n            labelSpace.height += effPadding;\n            iconSpace.height = icon.height + effPadding;\n            itemSpace.height = labelSpace.height + iconSpace.height;\n        }\n        // Compute height and width of legend for each alignment\n        if (align === 'horizontal') {\n            totalHeight = Math.max(totalHeight, itemSpace.height);\n        } else {\n            totalHeight += itemSpace.height;\n            totalWidth = Math.max(totalWidth, itemSpace.width, titleWidth) + effPadding;\n        }\n        maxItemSpaces = {\n            width: Math.max(itemSpace.width, maxItemSpaces.width),\n            height: Math.max(itemSpace.height, maxItemSpaces.height)\n        };\n        itemSpaces.push(itemSpace);\n        iconSpaces.push(iconSpace);\n    });\n    itemSpaces.forEach((itemSpace, i) => {\n        if (align === 'horizontal') {\n            itemSpace.height = totalHeight;\n            iconSpaces[i].width = maxIconWidth;\n            if (textOrientation === LEFT || textOrientation === RIGHT) {\n                labelSpaces[i].height = totalHeight;\n                iconSpaces[i].height = totalHeight;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n            } else {\n                labelSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = maxIconWidth;\n                labelSpaces[i].width = maxIconWidth;\n            }\n            totalWidth = Math.max(totalWidth + itemSpaces[i].width);\n        } else {\n            itemSpace.width = Math.max(totalWidth, maxWidth);\n            if (textOrientation === TOP || textOrientation === BOTTOM) {\n                labelSpaces[i].width = totalWidth;\n                iconSpaces[i].width = totalWidth;\n                maxIconWidth = totalWidth;\n            } else {\n                iconSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n                labelSpaces[i].width = maxItemSpaces.width - maxIconWidth;\n                totalWidth = Math.max(totalWidth, itemSpace.width) + effPadding;\n            }\n        }\n    });\n    totalWidth = Math.max(totalWidth, titleWidth);\n    totalHeight += titleHeight + effPadding;\n\n    return { totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth };\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} scaleInfo\n * @param {*} domainInfo\n *\n */\nexport const getDomainBounds = (type, scaleInfo, domainInfo) => {\n    const {\n        scaleFn,\n        scaleType,\n        scale\n    } = scaleInfo;\n    const {\n        domain,\n        domainBounds,\n        domainLeg,\n        steps\n    } = domainInfo;\n    const ele = domain[type === 'lower' ? 0 : domain.length - 1];\n    const step = steps[type === 'lower' ? 0 : steps.length - 1];\n\n    return {\n        [scaleType]: scaleType === 'size' ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n        value: domainBounds[type],\n        id: type === 'lower' ? 0 : domainLeg.length + 2,\n        range: [ele, step]\n    };\n};\n","import {\n    makeElement,\n    selectElement,\n    getUniqueId,\n    getSmartComputedStyle,\n    generateGetterSetters,\n    mergeRecursive\n} from 'muze-utils';\nimport { behaviouralActions } from '@chartshq/muze-firebolt';\nimport * as legendBehaviours from '../firebolt/behavioural';\n\nimport { LegendFireBolt } from '../firebolt/legend-firebolt';\nimport { actionBehaviourMap } from '../firebolt/action-behaviour-map';\nimport { physicalActions } from '../firebolt/physical';\nimport * as sideEffects from '../firebolt/side-effects';\nimport { behaviourEffectMap } from '../firebolt/behaviour-effect-map';\nimport { VALUE, PATH } from '../enums/constants';\nimport { PROPS } from './props';\nimport { DEFAULT_MEASUREMENT, DEFAULT_CONFIG, LEGEND_TITLE } from './defaults';\nimport { getItemMeasures, titleCreator, computeItemSpaces } from './legend-helper';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class SimpleLegend\n */\nexport default class SimpleLegend {\n\n    /**\n     * Creates an instance of Legend.\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @memberof Legend\n     */\n    constructor (dependencies) {\n        this._data = [];\n        this._metaData = [];\n        this._mount = null;\n        this._fieldName = null;\n        this._title = Object.assign({}, LEGEND_TITLE);\n        this._metaData = null;\n        this._labelManager = dependencies.labelManager;\n        this._cells = dependencies.cells;\n        this._id = getUniqueId();\n        this._measurement = Object.assign({}, this.constructor.defaultMeasurement());\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n\n        generateGetterSetters(this, PROPS);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'),\n            `${this.config().classPrefix}-legend-item-info`);\n\n        this._firebolt = new LegendFireBolt(this, {\n            behavioural: Object.assign({}, behaviouralActions, legendBehaviours),\n            physical: physicalActions,\n            physicalBehaviouralMap: actionBehaviourMap\n        }, sideEffects, behaviourEffectMap);\n    }\n\n    id () {\n        return this._id;\n    }\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new SimpleLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENT;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleLegend\n     */\n    firebolt (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return PATH;\n    }\n\n    canvasAlias (...alias) {\n        if (alias.length) {\n            this._canvasAlias = alias[0];\n            return this;\n        }\n        return this._canvasAlias;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    mount (...params) {\n        if (params.length) {\n            this._mount = params[0];\n            this.render();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces () {\n        const {\n            item,\n            classPrefix\n        } = this.config();\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n            `${classPrefix}-legend-item-info`));\n        return getItemMeasures(this.data(), VALUE, this._labelManager, item.text.formatter);\n    }\n\n    /**\n     * Sets the height and width of a legend based on provided max\n     * height and width and based on its contents\n     *\n     * @return {Instance} Current instance\n     * @memberof Legend\n     */\n    setLegendMeasures () {\n        const {\n           width,\n           height,\n           maxWidth,\n           maxHeight,\n           padding,\n           margin,\n           border\n       } = this.measurement();\n        const {\n            align\n        } = this.config();\n\n        // Effective padding, margin and padding\n        const effPadding = padding * 2;\n        const effBorder = border * 2;\n        const effMargin = margin * 2;\n\n        this.data(this.dataFromScale(this.scale()));\n        // Get space occupied by title\n        const titleSpace = this.getTitleSpace();\n        const titleHeight = titleSpace.height > 0 ? titleSpace.height + effPadding : 0;\n        const titleWidth = titleSpace.width + effPadding;\n\n        // Get space occupied by labels\n        const labelSpaces = this.getLabelSpaces(effPadding, align);\n\n        const {\n            totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth\n        } = computeItemSpaces(this.config(),\n        { effPadding, titleWidth, labelSpaces, titleHeight, maxWidth, maxHeight }, this.data());\n\n        this.measurement({\n            width: Math.max(totalWidth, width) + effMargin + effBorder,\n            height: Math.max(totalHeight, height) + effMargin + effBorder,\n            labelSpaces,\n            iconSpaces,\n            itemSpaces,\n            maxItemSpaces,\n            maxIconWidth,\n            titleSpaces: {\n                width: Math.min(maxWidth, this.measurement().width) - effMargin - effBorder,\n                height: titleHeight\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Returns the space occupied by the legend title\n     *\n     * @return {Object} Space occupied by title\n     * @memberof Legend\n     */\n    getTitleSpace () {\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n                                                 `${this.config().classPrefix}-legend-title`));\n        return this._labelManager.getOriSize(this.title().text ? this.title().text : '');\n    }\n\n    /**\n     * Creates the title for the legend\n     *\n     * @param {DOM} container Container made for the title\n     * @return {Selection} Title and it's node\n     * @memberof Legend\n     */\n    renderTitle (container) {\n        const { titleSpaces, border, padding, width } = this.measurement();\n        const { borderStyle, borderColor } = this.config();\n        return titleCreator(container, this.title(), {\n            height: titleSpaces.height,\n            width,\n            border,\n            padding,\n            borderStyle,\n            borderColor\n        }, this.config());\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const {\n            classPrefix,\n            borderStyle,\n            borderColor\n        } = this.config();\n        const {\n           maxWidth,\n           maxHeight,\n           width,\n           height,\n           margin,\n           border\n       } = this.measurement();\n        const legendContainer = makeElement(selectElement(this.mount()), 'div', [1], `${classPrefix}-legend-box`);\n\n        legendContainer.classed(`${classPrefix}-legend-box-${this._id}`, true);\n        legendContainer.style('float', 'left');\n        // set height and width\n        legendContainer.style('width', `${Math.min(maxWidth, width) - margin * 2}px`)\n                        .style('height', `${Math.min(maxHeight, height) - margin * 2}px`)\n                        .style('margin', `${margin}px`)\n                        .style('border', `${border}px ${borderStyle} ${borderColor}`);\n        this.legendContainer(legendContainer.node());\n\n        // create title\n        this.renderTitle(legendContainer);\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n  /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        const type = this.metaData().getData().schema[0].type;\n        if (type === 'measure') {\n            return {\n                [fieldName]: data.range\n            };\n        }\n        return [[fieldName], [data.value]];\n    }\n}\n","import {\n    LEFT,\n    RIGHT,\n    START,\n    END,\n    TOP,\n    BOTTOM,\n    HORIZONTAL,\n    VERTICAL,\n    CENTER,\n    SHAPE,\n    VALUE\n} from '../enums/constants';\n\nconst legendOrientation = {\n    [HORIZONTAL]: {\n        datasets: data => ({\n            row: [1],\n            column: data\n        }),\n        itemContainerMeasures: (measurement) => {\n            const {\n                itemSpaces,\n                width\n            } = measurement;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                },\n                column: {\n                    width: (d, i) => `${itemSpaces[i].width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, height } = measurement;\n            return {\n                iconHeight: height,\n                iconWidth: maxItemSpaces.width,\n                stepPadding: {\n                    horizontal: true,\n                    vertical: false\n                }\n            };\n        }\n    },\n    [VERTICAL]: {\n        datasets: data => ({\n            row: data,\n            column: d => [d]\n        }),\n        itemContainerMeasures: (measurement, config) => {\n            const {\n                width\n            } = measurement;\n            const { padding } = config;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${padding}px`\n                },\n                column: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, width } = measurement;\n            return {\n                iconHeight: maxItemSpaces.height,\n                iconWidth: width,\n                stepPadding: {\n                    horizontal: false,\n                    vertical: true\n                }\n            };\n        }\n    }\n};\n\nexport const positionConfig = {\n    [LEFT]: legendOrientation[VERTICAL],\n    [RIGHT]: legendOrientation[VERTICAL],\n    [TOP]: legendOrientation[HORIZONTAL],\n    [BOTTOM]: legendOrientation[HORIZONTAL]\n};\n\nexport const alignmentMap = {\n    [LEFT]: END,\n    [RIGHT]: START,\n    [TOP]: CENTER,\n    [BOTTOM]: CENTER\n};\n\n// Reverses data for step legend\nexport const stepData = data => ({\n    [LEFT]: data.reverse(),\n    [RIGHT]: data.reverse(),\n    [TOP]: data,\n    [BOTTOM]: data\n});\n\n// Changes the item layout based on the position of the text\nexport const itemStack = {\n    [LEFT]: [VALUE, SHAPE],\n    [RIGHT]: [SHAPE, VALUE],\n    [TOP]: [VALUE, SHAPE],\n    [BOTTOM]: [SHAPE, VALUE]\n};\n","import { makeElement, selectElement, applyStyle } from 'muze-utils';\nimport { ICON_MAP } from './defaults';\nimport { positionConfig, alignmentMap, itemStack } from './position-config';\nimport {\n    WIDTH,\n    HEIGHT,\n    CENTER,\n    VALUE,\n    RECT,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} legendInstance\n * @param {*} align\n *\n */\nexport const getItemContainers = (container, data, legendInstance) => {\n    const measurement = legendInstance.measurement();\n    const config = legendInstance.config();\n    const {\n        itemSpaces\n    } = measurement;\n    const {\n        classPrefix,\n        position\n    } = config;\n    const positionObj = positionConfig[position];\n    const datasets = positionObj.datasets(data);\n    const measures = positionObj.itemContainerMeasures(measurement, config);\n\n    const rows = makeElement(container, 'div', datasets.row, `${classPrefix}-legend-row`);\n    rows.style(HEIGHT, (d, i) => `${itemSpaces[i].height}px`);\n    rows.style(WIDTH, measures.row.width);\n    rows.style('padding', measures.row.padding);\n\n    const columns = makeElement(rows, 'div', datasets.column, `${classPrefix}-legend-columns`);\n    columns.style(WIDTH, measures.column.width);\n    columns.style('padding', measures.column.padding);\n\n    return columns;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} classPrefix\n * @param {*} data\n *\n * @memberof DiscreteLegend\n */\nexport const createLegendSkeleton = (context, container, classPrefix, data) => {\n    let gradWidth = 0;\n    let gradHeight = 0;\n    let maxGradHeight = 0;\n    let maxGradWidth = 0;\n    const measurement = context.measurement();\n    const {\n            margin,\n            border,\n            titleSpaces,\n            width,\n            height,\n            maxWidth,\n            maxHeight\n        } = measurement;\n\n    gradHeight = height - (titleSpaces.height + 2 * margin + 2 * border);\n    gradWidth = width - (margin * 2 + border * 2);\n\n    maxGradHeight = maxHeight - (titleSpaces.height + margin * 2 + border * 2);\n    maxGradWidth = maxWidth - (margin * 2 + border * 2);\n\n    let legendBody = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    legendBody.select(`.${classPrefix}-legend-overflow`).remove();\n        // Create a div with scroll when overflow\n    if (maxGradWidth && maxGradWidth < gradWidth) {\n        legendBody = legendBody.style(WIDTH, `${maxGradWidth}px`).style('overflow-x', 'scroll');\n    }\n        // Create a div with scroll when overflow\n    if (maxGradHeight && maxGradHeight < gradHeight) {\n        legendBody.style(HEIGHT, `${maxGradHeight}px`).style('overflow-y', 'scroll');\n    }\n\n    legendBody = makeElement(legendBody, 'div', [1], `${classPrefix}-legend-overflow`);\n\n    legendBody.style(WIDTH, `${gradWidth}px`);\n    legendBody.style(HEIGHT, `${gradHeight}px`);\n\n    const legendItem = getItemContainers(legendBody, data, context);\n    return { legendItem };\n};\n\n/**\n * Creates legend item based on alignment and text orientation\n *\n * @param {Selection} container Point where items are to be mounted\n * @return {Instance} Current instance\n * @memberof Legend\n */\nexport const createItemSkeleton = (context, container) => {\n    const {\n        classPrefix,\n        item\n    } = context.config();\n    const textOrientation = item.text.orientation;\n\n    const stack = itemStack[textOrientation];\n    const itemSkeleton = makeElement(container, 'div', (d, i) => stack.map(e => [e, d[e], d.color, d.size,\n        d.value, context.fieldName(), i]), `${classPrefix}-legend-item-info`);\n\n    const alignClass = alignmentMap[textOrientation];\n\n    itemSkeleton.classed(alignClass, true);\n    return { itemSkeleton };\n};\n\n/**\n *\n *\n * @param {*} measureType\n * @param {*} stepColorCheck\n */\nexport const applyItemStyle = (item, measureType, stepColorCheck, context) => {\n    const {\n        padding,\n        labelSpaces,\n        iconSpaces,\n        maxIconWidth\n    } = context.measurement();\n    const diff = stepColorCheck ? -padding * 2 : 0;\n\n    if (item[0] === VALUE) {\n        return `${labelSpaces[item[6]][measureType]}px`;\n    }\n    return `${measureType === 'width' && !stepColorCheck ? maxIconWidth : iconSpaces[item[6]][measureType] - diff}px`;\n};\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem, defaultIcon, width, height) {\n    const groupElement = elem;\n    // const { shape, size, update } = d;\n    const size = d[3] || Math.min(width, height) * Math.PI;\n    const shape = d[1] || defaultIcon;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            return createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        shapeElement.attr('transform', `scale(${size / 100})`);\n        return selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = ICON_MAP(shape).size(size)();\n        }\n        return makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    }\n    d[1] = 'circle';\n    return createShape(d, elem, 'circle');\n};\n\n/**\n * Returns the icon of the legend item\n *\n * @param {Object} datum Data property attached to the item\n * @param {number} width width of the item\n * @param {number} height height of the item\n * @return {Object|string} returns the path string or the string name of the icon\n * @memberof Legend\n */\nexport const getLegendIcon = (datum, width, height, defaultIcon) => {\n    const icon = ICON_MAP(datum[1]);\n\n    if (icon) {\n        return icon.size(datum[3] || Math.min(width, height) * Math.PI);\n    }\n    return ICON_MAP(datum[3] ? 'circle' : defaultIcon).size(datum[3] || Math.min(width, height) * Math.PI);\n};\n\n/**\n *\n *\n */\nexport const renderIcon = (icon, container, datum, context) => {\n    const {\n        classPrefix,\n        iconHeight,\n        iconWidth,\n        maxIconWidth,\n        padding,\n        color\n    } = context;\n    const svg = makeElement(container, 'svg', f => [f], `${classPrefix}-legend-icon-svg`)\n    .attr(WIDTH, maxIconWidth)\n    .attr(HEIGHT, iconHeight)\n    .style(WIDTH, `${maxIconWidth}px`)\n    .style(HEIGHT, `${iconHeight}px`);\n\n    if (icon !== RECT) {\n        const group = makeElement(svg, 'g', [datum[1]], `${classPrefix}-legend-icon`);\n        createShape(datum, group, datum[3] ? 'circle' : 'square', iconWidth, iconHeight)\n                        .attr('transform', `translate(${maxIconWidth / 2 - padding} ${iconHeight / 2})`)\n                        .attr('fill', datum[2] || color);\n    } else {\n        makeElement(svg, RECT, [datum[1]], `${classPrefix}-legend-icon`)\n                        .attr('x', 0)\n                        .attr('y', 0)\n                        .attr(WIDTH, maxIconWidth)\n                        .attr(HEIGHT, iconHeight)\n                        .attr('fill', datum[2] || color);\n    }\n};\n\n/**\n * Renders the items in the legend i.e, icon and text\n *\n * @param {DOM} container Point where item is to be mounted\n * @memberof Legend\n */\nexport const renderDiscreteItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n           item,\n           classPrefix\n    } = context.config();\n    const {\n        maxIconWidth,\n        padding\n    } = context.measurement();\n    const {\n            width: iconWidth,\n            height: iconHeight,\n            color,\n            className\n        } = item.icon;\n\n    const textOrientation = item.text.orientation;\n    const formatter = item.text.formatter;\n\n    labelManager.useEllipsesOnOverflow(true);\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, false, context),\n        height: d => applyItemStyle(d, HEIGHT, false, context),\n        'text-align': CENTER,\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1]))\n                            .style(`padding-${textOrientation === RIGHT ? LEFT : RIGHT}`, '0px');\n        } else {\n            // const icon = getLegendIcon(d, iconWidth, iconHeight, type);\n            selectElement(this).classed(`${classPrefix}-${className}`, true);\n            selectElement(this).classed(`${classPrefix}-${className}-${i}`, true);\n            renderIcon('circle', selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                // iconWidth: 2 * Math.sqrt(d[3] / Math.PI) || iconWidth,\n                iconHeight,\n                maxIconWidth,\n                padding,\n                color\n            });\n        }\n    });\n};\n\n/**\n* Renders the items in the legend i.e, icon and text\n*\n* @param {DOM} container Point where item is to be mounted\n* @memberof Legend\n*/\nexport const renderStepItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n      item,\n      position,\n      classPrefix\n   } = context.config();\n    const {\n      maxItemSpaces,\n      maxIconWidth,\n      padding\n   } = context.measurement();\n    const {\n       width,\n       height,\n       color\n   } = item.icon;\n    const {\n        formatter\n   } = item.text;\n\n    labelManager.useEllipsesOnOverflow(true);\n    const { iconHeight, iconWidth, stepPadding } = positionConfig[position].getStepSpacesInfo({\n        maxItemSpaces, height, width\n    });\n\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, stepPadding.horizontal, context),\n        height: d => applyItemStyle(d, HEIGHT, stepPadding.vertical, context),\n        'text-align': 'center',\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    container.each(function (d) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1]));\n        } else {\n            renderIcon(RECT, selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                iconHeight,\n                maxIconWidth,\n                color\n            });\n        }\n    });\n};\n","import SimpleLegend from './simple-legend';\nimport { DISCRETE, LEFT, SIZE } from '../enums/constants';\nimport { getScaleInfo } from './legend-helper';\nimport { createLegendSkeleton, createItemSkeleton, renderDiscreteItem } from './renderer';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class DiscreteLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new DiscreteLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof DiscreteLegend\n     */\n    static type () {\n        return DISCRETE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof DiscreteLegend\n     */\n    dataFromScale (scale) {\n        const { scaleType, domain, scaleFn } = getScaleInfo(scale);\n        let domainForLegend = [...new Set(domain)];\n        const type = this.metaData().getData().schema[0].type;\n\n        domainForLegend = domainForLegend.map((ele, i) => {\n            let value = 0;\n            let range = 0;\n            if (type === 'measure') {\n                value = (+domainForLegend[i]).toFixed(0);\n                const nextVal = domainForLegend[i + 1] ? +domainForLegend[i + 1] : +value;\n                range = [value, nextVal.toFixed(0)];\n            } else {\n                value = domainForLegend[i];\n                range = [domainForLegend[i]];\n            }\n            return {\n                [scaleType]: scale[scaleFn](ele),\n                value,\n                id: i,\n                range\n            };\n        }).filter(d => d.value !== null);\n\n        domainForLegend = scaleType === SIZE ? domainForLegend.sort((a, b) => a[scaleType] - b[scaleType])\n            : domainForLegend;\n        return domainForLegend;\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const data = this.data();\n        const { classPrefix } = this.config();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n        renderDiscreteItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n}\n","import { makeElement, applyStyle } from 'muze-utils';\nimport { ContinousAxis } from '@chartshq/muze-axis';\nimport { BOTTOM, RIGHT } from '../enums/constants';\nimport { ALIGN } from './defaults';\nimport '../styles.scss';\n\n/**\n *\n *\n * @param {*} data\n *\n */\nexport const getGradientDomain = (data) => {\n    if (typeof data[0].value === 'number') {\n        return data.reduce((accumulator, currentValue) =>\n            [Math.min(currentValue.value, accumulator[0]), Math.max(currentValue.value, accumulator[1])],\n                [Number.MAX_VALUE, Number.MIN_VALUE]);\n    }\n    return data.map(e => e.value);\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} domain\n *\n */\nexport const makeLinearGradient = (container, data, domain) => {\n    const defs = makeElement(container, 'defs', [1]);\n    const linearGradient = makeElement(defs, 'linearGradient', [1])\n                .attr('id', 'linear-gradient')\n                .attr('x1', '0%')\n                .attr('y2', '0%');\n    makeElement(linearGradient, 'stop', data, 'stop-gradient')\n                    .attr('offset', d => `${(d.value - domain[0]) * 100 / (domain[1] - domain[0])}%`)\n                    .attr('stop-color', d => d.color);\n    return linearGradient;\n};\n\n/**\n * Creates an axis cell with a linear axis for computing space and\n * creating gradient legend\n *\n * @return {AxisCell} Instance of Axis Cell for the gradient axis\n * @memberof Legend\n */\nexport const createAxis = (context) => {\n    const data = context.data();\n    const { align } = context.config();\n    const AxisCell = context._cells.AxisCell;\n    const newAxis = new ContinousAxis({\n        id: `legend-${context._id}`,\n        orientation: align === ALIGN.VERTICAL ? RIGHT : BOTTOM,\n        style: context._computedStyle,\n        nice: false,\n        showAxisName: false,\n        tickValues: data.map(d => d.value),\n        fixedBaseline: false,\n        labels: {\n            rotation: 0\n        }\n    }, { labelManager: context._labelManager });\n\n    newAxis.domain(getGradientDomain(data));\n    newAxis.range([1, 1]);\n    return new AxisCell().source(newAxis).config({\n        margin: { left: 0, bottom: 0, top: 0, right: 0 }\n    });\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} classPrefix\n *\n * @memberof GradientLegend\n */\nconst createLegendSkeleton = (container, classPrefix, data) => {\n    const domain = getGradientDomain(data);\n    const legendContainer = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    const legendGradSvg = makeElement(legendContainer, 'svg', [1], `${classPrefix}-gradient`);\n    const legendGradCont = makeElement(legendGradSvg, 'g', [1], `${classPrefix}-gradient-group`);\n    const linearGradient = makeLinearGradient(legendGradSvg, data, domain);\n    const legendRect = makeElement(legendGradCont, 'rect', [1], `${classPrefix}-gradient-rect`);\n\n    return {\n        legendContainer,\n        legendGradCont,\n        legendGradSvg,\n        linearGradient,\n        legendRect\n    };\n};\n\n/**\n * Renders the axis for the gradient\n *\n * @param {Selection} container Point where axis is to be mounted\n * @param {number} height Height for axis\n * @param {number} width Width for axis\n * @memberof Legend\n */\nexport const renderAxis = (context, container, height, width) => {\n    const axis = context.axis();\n\n    axis.setAvailableSpace(width, height);\n    axis.render(container.node());\n    axis.source().render();\n};\n\n/**\n * Renders gradient legends\n *\n * @param {Selection} container Point where the legend is to be appended\n * @memberof GradientLegend\n */\nexport const renderGradient = (context, container) => {\n    let gradHeight = 0;\n    let gradWidth = 0;\n    const {\n        align,\n        classPrefix,\n        item\n    } = context.config();\n    const data = context.data();\n    // Create the skeleton for the legend\n    const {\n        legendContainer,\n        legendGradSvg,\n        legendGradCont,\n        linearGradient,\n        legendRect\n    } = createLegendSkeleton(container, classPrefix, data);\n    const labelDim = context.axis().source().getAxisDimensions().tickDimensions;\n    const {\n        padding,\n        margin,\n        border,\n        titleSpaces,\n        maxHeight,\n        maxWidth,\n        height,\n        width\n    } = context.measurement();\n    const gradientDimensions = {};\n\n    gradHeight = Math.floor(height - (titleSpaces.height + 2 * margin + 2 * border));\n    gradWidth = Math.floor(width - (margin * 2 + border * 2));\n\n    if (align === ALIGN.HORIZONTAL) {\n        gradientDimensions.height = item.icon.height;\n        gradientDimensions.width = gradWidth - 2 * padding - labelDim.width / 2;\n        linearGradient.attr('x2', '100%').attr('y1', '0%');\n        legendGradCont.attr('transform', `translate( ${labelDim.width / 2} 0)`);\n        renderAxis(context, legendContainer, gradHeight - item.icon.height - padding, gradWidth - 2 * padding - 1);\n        legendContainer.classed(`${classPrefix}-overflow-x`, width > maxWidth);\n\n        applyStyle(legendContainer, {\n            height: `${height}px`,\n            width: `${Math.min(width, maxWidth)}px`,\n            padding: `${padding}px`\n        });\n\n        legendRect.attr('height', gradientDimensions.height);\n        legendRect.attr('width', gradientDimensions.width - labelDim.width / 2);\n    } else {\n        gradientDimensions.height = gradHeight - 2 * padding - labelDim.height / 2;\n        gradientDimensions.width = item.icon.width;\n        linearGradient.attr('x2', '0%').attr('y1', '100%');\n        legendGradCont.attr('transform', `translate(0 ${labelDim.height / 2})`);\n        renderAxis(context, legendContainer, gradHeight - 2 * padding - 1, gradWidth - item.icon.width - padding * 2);\n        legendContainer.classed(`${classPrefix}-overflow-y`, height > maxHeight);\n        applyStyle(legendContainer, {\n            height: `${Math.min(height, maxHeight)}px`,\n            width: `${width}px`,\n            padding: `${padding}px`\n        });\n        legendRect.attr('height', gradientDimensions.height - labelDim.height / 2);\n        legendRect.attr('width', gradientDimensions.width);\n    }\n\n    // Apply Styles to the legend plot area\n    applyStyle(legendGradSvg, {\n        height: `${gradientDimensions.height}px`,\n        width: `${gradientDimensions.width}px`\n    });\n\n        // Apply styles to the legend rect\n    applyStyle(legendRect, {\n        fill: 'url(#linear-gradient)'\n    });\n    legendGradSvg.attr('height', gradientDimensions.height);\n    legendGradSvg.attr('width', gradientDimensions.width);\n\n    context.measurement({\n        gradientDimensions\n    });\n    context._legendGradientSvg = legendGradSvg;\n    return context;\n};\n","import SimpleLegend from './simple-legend';\nimport { getScaleInfo, getInterpolatedData } from './legend-helper';\nimport { GRADIENT, LEFT, SIZE } from '../enums/constants';\nimport { renderGradient, createAxis } from './gradient-helper';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class GradientLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new GradientLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof GradientLegend\n     */\n    static type () {\n        return GRADIENT;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axis\n     *\n     * @memberof GradientLegend\n     */\n    axis (...axis) {\n        if (axis.length) {\n            this._axis = axis[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof GradientLegend\n     */\n    dataFromScale (scale) {\n        let domainForLegend = [];\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainForLegend[0] = domain[0];\n            }\n            domainForLegend = [...domainForLegend, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainForLegend.push(domain[1]);\n            }\n        } else {\n            domainForLegend = getInterpolatedData(domain, steps - 1);\n        }\n        domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n        return domainForLegend.map((ele, i) => {\n            const value = domainForLegend[i];\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor()\n                    : scale[scaleFn](Math.floor(ele)),\n                value: +value.toFixed(2),\n                id: i\n            };\n        }).filter(d => d.value !== null);\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        const axis = createAxis(this);\n        const axisSpace = axis.getLogicalSpace();\n        const space = { width: axisSpace.width - effPadding, height: axisSpace.height - effPadding };\n        const axisDomainLength = axis.source().domain().length;\n        const labelSpaces = new Array(axisDomainLength).fill(space);\n\n        this.axis(axis);\n        return labelSpaces;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof GradientLegend\n     */\n    getDrawingContext () {\n        return {\n            svgContainer: this._legendGradientSvg\n        };\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        renderGradient(this, legendContainer);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof SimpleLegend\n     */\n    getCriteriaFromData (data) {\n        return [[this.fieldName()], [data.value]];\n    }\n}\n","import SimpleLegend from './simple-legend';\nimport {\n    getScaleInfo,\n    getInterpolatedData,\n    getDomainBounds\n} from './legend-helper';\nimport {\n    createLegendSkeleton,\n    createItemSkeleton,\n    renderStepItem\n} from './renderer';\nimport { STEP, RECT, LEFT, SIZE, UPPER, LOWER } from '../enums/constants';\nimport { stepData } from './position-config';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class StepLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new StepLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof StepLegend\n     */\n    static type () {\n        return STEP;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof StepLegend\n     */\n    dataFromScale (scale) {\n        let domainLeg = [];\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        const { formatter } = this.config();\n        const domainBounds = {\n            lower: null, upper: null\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainBounds.lower = [`${formatter.bounds.lower} ${steps[0]}`];\n            }\n            domainLeg = [...domainLeg, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainBounds.upper = [`${formatter.bounds.upper} ${steps[steps.length - 1]}`];\n            }\n        } else {\n            domainLeg = getInterpolatedData(domain, steps);\n        }\n\n        domainLeg = [...new Set(domainLeg)].sort((a, b) => a - b);\n        domainLeg = domainLeg.map((ele, i) => {\n            let value = null;\n            if (i < domainLeg.length - 1) {\n                value = `${(ele.toFixed(1))} - ${(+domainLeg[i + 1].toFixed(1))}`;\n            }\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n                value,\n                id: i + 1,\n                range: [ele, domainLeg[i + 1]]\n            };\n        }).filter(d => d.value !== null);\n\n        if (domainBounds.lower) {\n            const lowerBounds = getDomainBounds(LOWER, { scale, scaleFn, scaleType },\n                { domain, steps, domainBounds });\n            domainLeg = [lowerBounds, ...domainLeg];\n        }\n        if (domainBounds.upper) {\n            const upperBounds = getDomainBounds(UPPER, { scale, scaleFn, scaleType },\n            { domain, steps, domainBounds, domainLeg });\n            domainLeg = [...domainLeg, upperBounds];\n        }\n        return domainLeg;\n    }\n\n     /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding, align) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        return super.getLabelSpaces(effPadding, align);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return RECT;\n    }\n\n     /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const { classPrefix, position } = this.config();\n        const data = stepData(this.data())[position];\n\n        const legendContainer = super.render(this.mount());\n\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n\n        renderStepItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        return {\n            [fieldName]: data.range\n        };\n    }\n}\n","import { GradientLegend, DiscreteLegend, StepLegend } from '@chartshq/muze-legend';\n\n/**\n * Contants to be used as attr\n */\nexport const ROWS = 'rows';\nexport const COLUMNS = 'columns';\nexport const DATA = 'data';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\nexport const DETAIL = 'detail';\nexport const LAYERS = 'layers';\nexport const TRANSFORM = 'transform';\nexport const INITIALIZED = 'isInitialized';\nexport const SOURCE = 'source';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const PADDING = 'padding';\nexport const BORDER = 'border';\nexport const MARGIN = 'margin';\nexport const CONFIG = 'config';\nexport const MOUNT = 'mount';\nexport const CANVAS_UPDATED = 'canvasUpdated';\nexport const CLASSPREFIX = 'classPrefix';\nexport const POLICIES = '_policies';\nexport const LEGEND = 'legend';\nexport const TITLE = 'title';\nexport const SUB_TITLE = 'subtitle';\nexport const RESOLVE = 'resolve';\nexport const DISCRETE = 'discrete';\nexport const STEP_COLOR = 'step-color';\nexport const GRADIENT = 'gradient';\nexport const LINEAR = 'linear';\nexport const ORDINAL = 'ordinal';\nexport const MUZE_PREFIX = 'muze';\n\nexport const TITLE_TEMPLATE_NOT_ALLOWED_TAGS = [\n    'script',\n    'style'\n];\n\nexport const LEGEND_TYPE_MAP = {\n    [`${ORDINAL}-${true}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${COLOR}`]: StepLegend,\n    [`${LINEAR}-${false}-${COLOR}`]: GradientLegend\n};\n\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const GROUP = 'group';\nexport const LAYOUT = 'layout';\nexport const RETINAL = 'retinal';\nexport const DIMENSION = 'dimension';\nexport const MEASURE = 'measure';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\n","import { ComposedVars, SimpleVariable } from '@chartshq/visual-group';\nimport { TITLE_TEMPLATE_NOT_ALLOWED_TAGS } from './constants';\n\n/**\n * This method creates a new composed variable instance from multiple variables. This is required when we have multiple\n * variables on a single axis and the union of domain of all the variables needs to be set on the axis.\n *\n * To create a new composed variable from multiple fields,\n * ```\n *  const sharedVar = share('open', 'high', 'low', 'close');\n *  canvas.rows([sharedVar])\n *      .columns(['date']);\n * ```\n *\n * @module Operators\n * @public\n * @function share\n * @param {Array} vars Variable names.\n *\n * @return {ComposedVars} Instance of composed variable\n */\nexport const share = (...vars) => new ComposedVars(...vars.map(variable => new SimpleVariable(variable)));\n\n/**\n *\n *\n * @param {*} node\n *\n */\nfunction treeShakeNode (node) {\n    if (node.nodeType !== Node.ELEMENT_NODE) { return; }\n\n    if (TITLE_TEMPLATE_NOT_ALLOWED_TAGS.indexOf(node.tagName.toLowerCase()) !== -1) {\n        node.parentNode.removeChild(node);\n    } else {\n        for (const childNode of node.childNodes) {\n            treeShakeNode(childNode);\n        }\n    }\n}\n\n/**\n * A string template tagged function which sanitizes input html formatted string according to the allowed html tags.\n * This is used to render html in canvas components like title and tooltip.\n *\n * To render html in canvas components,\n * ```\n *     canvas.title(html`<span style=font-size:20px;>TITLE</span>`);\n * ```\n *\n * @public\n * @module Operators\n * @function html\n * @param {Array.<string>} strings - The string parts of the template.\n * @param {Array} exps - The list of evaluated expression values.\n *\n * @return {Function} Returns a function which returns the sanitized html string.\n */\nexport function html (strings, ...exps) {\n    let htmlCode = '';\n    const expLn = exps.length;\n    let i = 0;\n\n    for (; i < expLn; ++i) {\n        htmlCode += strings[i] + exps[i];\n    }\n    htmlCode += strings[i];\n\n    const frag = document.createDocumentFragment();\n    const wrapper = document.createElement('div');\n\n    frag.appendChild(wrapper);\n    wrapper.innerHTML = htmlCode;\n\n    treeShakeNode(wrapper);\n    const { innerHTML } = wrapper;\n\n    return () => innerHTML;\n}\n","import { mergeRecursive, CommonProps } from 'muze-utils';\n\nconst defaultPolicy = (registrableComponents) => {\n    const aliases = registrableComponents.map(comp => comp.alias());\n    return {\n        behaviours: {\n            '*': (propagationPayload) => {\n                const propagationCanvas = propagationPayload.sourceCanvas;\n                return propagationCanvas ? aliases.indexOf(propagationCanvas) !== -1 : true;\n            }\n        }\n    };\n};\n\nconst listenerFn = (canvas, fn) => () => {\n    const valueMatrix = canvas.composition().visualGroup.matrixInstance().value;\n    valueMatrix.each(cell => fn(cell.valueOf().firebolt()));\n};\n\nconst canvasIterator = (canvases, iteratorFn, cFn) => {\n    canvases.forEach((canvas) => {\n        const matrix = canvas.composition().visualGroup.matrixInstance().value;\n        matrix.each(cell => iteratorFn(cell.valueOf().firebolt()));\n        cFn && cFn(canvas);\n        // Also register actions on canvas update\n        const throwback = canvas._throwback;\n\n        throwback.registerImmediateListener([CommonProps.MATRIX_CREATED],\n            listenerFn(canvas, iteratorFn));\n    });\n};\n\n/**\n * This class is initiated only once in lifecycle and is reponsible for regisration of physical and behavioural\n * actions and side effects and the mapping between them.\n *\n * To get the instance of action model\n * ```\n *  const ActionModel = muze.ActionModel;\n * ```\n *\n * @public\n * @module ActionModel\n */\nclass ActionModel {\n    constructor () {\n        this._registrableComponents = [];\n    }\n\n    /**\n     * Takes an array of canvases on which the physical and behavioural actions will get registered.\n     *\n     * @public\n     * @param  {Canvas} components Array of canvases\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    for (...components) {\n        this._registrableComponents = components;\n        return this;\n    }\n\n    /**\n     * Registers physical actions on the canvases. It takes an object with key as the name of action and value having\n     * the definition of the action.\n     *\n     * To register a {@link PhysicalAction},\n     * ```\n     *  const ActionModel = muze.ActionModel;\n     *  ActionModel\n     *       // Physical actions will be registered on these canvases.\n     *      .for(canvas)\n     *      .registerPhysicalActions({\n     *          // Key is the name of physical action.\n     *          ctrlClick: (firebolt) => (targetEl, behaviours) => {\n     *              targetEl.on('click', function (data) {\n     *                  const event = utils.getEvent();\n     *                  const pos = utils.getClientPoint(event, this);\n     *                  // Get the data point nearest to the mouse position.\n     *                  const nearestPoint = firebolt.context.getNearestPoint(pos, {\n     *                      data\n     *                  });\n     *                  // Prepare the payload\n     *                  const payload = {\n     *                      criteria: nearestPoint.id\n     *                  };\n     *                  behaviours.forEach((behaviour) => firebolt.dispatchBehaviour(behaviour, payload));\n     *              });\n     *          }\n     *      });\n     * ```\n     * @public\n     *\n     * @param {Object} action Names of physical actions and their definitions.\n     *\n     * @return {ActionModel} Instance of the action model.\n     */\n    registerPhysicalActions (action) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalActions(action);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalActions(action);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers behavioural actions on the canvases. It takes definitions of the behavioural actions and registers\n     * them on the canvases. Every behavioural action must inherit the {@link GenericBehaviour} class.\n     *\n     * To register a behavioural action\n     * ```\n     *  // Define a new behavioural action\n     *  class SingleSelectBehaviour extends GenericBehaviour {\n     *      static formalName () {\n     *          return 'singleSelect';\n     *      }\n     *\n     *      setSelectionSet (addSet, selectionSet) {\n     *          if (addSet === null) {\n     *              selectionSet.reset();\n     *          } else if (addSet.length) {\n     *              const existingAddSet = selectionSet.getExistingEntrySet(addSet);\n     *              if (existingAddSet.length){\n     *                  selectionSet.reset();\n     *              } else {\n     *               selectionSet.add(addSet);\n     *              }\n     *          } else {\n     *              selectionSet.reset();\n     *          }\n     *      }\n     * }\n     * muze.ActionModel.registerBehaviouralActions(SingleSelectBehaviour);\n     * ```\n     *\n     * @public\n     *\n     * @param {GenericBehaviour} actions Definition of behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerBehaviouralActions (...actions) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerBehaviouralActions(actions);\n        }, (canvas) => {\n            canvas.firebolt().registerBehaviouralActions(actions);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of physical and behavioural actions. This mapping is used to establish which behavioural\n     * actions should be dispatched on any triggering of physical actions.\n     *\n     * To map physical actions with behavioural actions,\n     * ```\n     *  muze.ActionModel.registerPhysicalBehaviouralMap({\n     *      ctrlClick: {\n     *          behaviours: ['select'] // This array must be the formal names of the behavioural actions.\n     *      }\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Contains the physical and behavioural action map.\n     * ```\n     *   {\n     *      // Name of the physical action\n     *      click: {\n     *          // Target element selector. This is an optional field. If not passed, then by default takes the\n     *          // container element of visual unit.\n     *          target: '.muze-layers-area path',\n     *          // Behaviours which should be dispatched on triggering of the mapped physical action.\n     *          behaviours: ['select']\n     *      }\n     *   }\n     * ```\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPhysicalBehaviouralMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalBehaviouralMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalBehaviouralMap(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers what behaviour to propagate on dispatch of a certain behavioural action. By default, when any\n     * behavioural action is dispatched, then the same behavioural action gets propagated to all the other canvases.\n     * This can be changed using this api.\n     *\n     * To register what behaviour should be propagated on dispatch of any behavioural action,\n     * ```\n     *  ActionModel.for(canvas1, canvas2).registerPropagationBehaviourMap({\n     *      select: 'filter',\n     *      brush: 'filter'\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Propagation behaviour map.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPropagationBehaviourMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPropagationBehaviourMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPropagationBehaviourMap(map);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of side effects and behavioural actions. It takes an object which contains key as the\n     * name of behavioural action and the side effects which will be linked to it.\n     *\n     * To map side effects to select behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: ['infoBox'] // This array must be the formal names of the side effects\n     *  });\n     * ```\n     *\n     * To map side effects to select behaviour, but disable all the default side effects attached with this behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: {\n     *          effects: ['infoBox'],\n     *          preventDefaultActions: true\n     *      }\n     *  });\n     * @public\n     * @param {Object} map Mapping of behavioural actions and side effects.\n     * ```\n     *     {\n     *          select: ['infoBox']\n     *     }\n     * ```\n     * @return {ActionModel} Instance of action model.\n     */\n    mapSideEffects (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.mapSideEffects(map);\n        }, (canvas) => {\n            canvas.firebolt().mapSideEffects(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers the side effects on the registered canvases. It takes definitions of side effects and registers them\n     * on the canvases. Every side effect must inherit the base class {@link GenericSideEffect} or\n     * {@link SpawnableSideEffect} or {@link SurrogateSideEffect} class.\n     *\n     * ```\n     * // Define a custom side effect\n     *  class InfoBox extends SpawnableSideEffect {\n     *      static formalName () {\n     *          return 'infoBox';\n     *      }\n     *\n     *      apply (selectionSet) {\n     *      }\n     *  }\n     *  muze.ActionModel.registerSideEffects(InfoBox);\n     * ```\n     * @public\n     * @param  {GenericSideEffect} sideEffects Definition of side effects.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerSideEffects (...sideEffects) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerSideEffects(sideEffects);\n        }, (canvas) => {\n            canvas.firebolt().registerSideEffects(sideEffects);\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between behavioural actions and physical actions. It takes an array of behavioural action\n     * and it's physical action.\n     *\n     * To dissociate behavioural actions from physical actions\n     * ```\n     *  muze.ActionModel.dissociateBehaviour(['select', 'click'], ['highlight', 'hover']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of behavioural action and physical action.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateBehaviour (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateBehaviour(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateBehaviour(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between side effects and behavioural actions. It takes an array of formal names of the side\n     * effects and it's linked behavioural action.\n     *\n     * To dissociate side effects from behavioural actions\n     * ```\n     *  muze.ActionModel.dissociateSideEffect(['crossline', 'highlight'], ['selectionBox', 'brush']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of side effects and behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateSideEffect (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateSideEffect(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateSideEffect(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * By default cross interactivity is disabled between canvases. This enables cross interaction between the canvases\n     * so that any action happening in one canvas gets dispatched on other canvases as well. An optional policy can also\n     * be passed in this method. The policy can be used to control on which canvases the behavioural actions and\n     * side effects gets dispatched.\n     *\n     * To just enable cross interactivity between two canvases,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity();\n     * ```\n     *\n     * To enable cross interactivity but enable any behavioural action only when it is triggered from canvas1.\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          behaviours: {\n     *              // Here * stands for any behavioural action name. We can also give any name of behavioural action\n     *              // in place of this.\n     *              '*': (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     *\n     * To enable cross interactivity but enable tooltip effect if the action is propagated from canvas1,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          sideEffects: {\n     *              tooltip: (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} policy Policy definition.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    enableCrossInteractivity (policy = {}) {\n        const registrableComponents = this._registrableComponents;\n        const mergedPolicy = mergeRecursive(mergeRecursive({}, defaultPolicy(registrableComponents)), policy);\n\n        registrableComponents.forEach((canvas) => {\n            canvas.firebolt().crossInteractionPolicy(mergedPolicy);\n        });\n\n        return this;\n    }\n}\n\nexport const actionModel = (() => new ActionModel())();\n","export const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    interaction: {\n        sideEffect: 'individual'\n    },\n    legend: {\n        position: 'right',\n        color: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        shape: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        size: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        }\n    },\n    showHeaders: false,\n    minWidth: 100,\n    minHeight: 100,\n    facet: {\n        rows: {\n            minCharacters: 3\n        },\n        columns: {\n            maxLines: 2,\n            verticalAlign: 'middle',\n            minCharacters: 1\n        }\n    },\n    border: {\n        style: 'solid',\n        color: '#d6d6d6',\n        width: 2,\n        collapse: true,\n        spacing: 0\n    },\n    autoGroupBy: {\n        disabled: false\n    }\n};\n","/**\n * This is the global options semantics based on which setters getters are created and reactivity is initiated.\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n * @module GlobalOptions\n */\n\nimport { intSanitizer, mergeRecursive, DataModel } from 'muze-utils';\nimport { DEFAULT_CONFIG } from './defaults';\n\nexport default {\n    data: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel\n        }\n    },\n    width: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    height: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitWidth: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitHeight: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    config: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config, oldConfig) => {\n                // Reset the configuration when null is passed\n                const oldConf = mergeRecursive({}, config === null ? {} : oldConfig);\n                const defConfig = mergeRecursive(oldConf, DEFAULT_CONFIG);\n                const newConf = mergeRecursive(defConfig, config);\n                return newConf;\n            }\n\n        }\n    }\n};\n","/**\n * This file exports constants that will be used to\n * create the state store of the table layout.\n */\n/**\n * The index of top, bottom and center in the matrix\n */\nexport const VIEW_INDEX = {\n    top: 0,\n    center: 1,\n    bottom: 2\n};\n\nexport const ROW_MATRIX_INDEX = {\n    0: 'top',\n    1: 'center',\n    2: 'bottom'\n};\n\nexport const COLUMN_MATRIX_INDEX = {\n    0: 'left',\n    1: 'middle',\n    2: 'right'\n};\n\n/**\n * The width of the grid suppied by the user.\n */\nexport const GRID_WIDTH = 'width';\n\n/**\n * The height of the grid supplied by the user.\n */\nexport const GRID_HEIGHT = 'height';\n\n/**\n  * The border for the grid\n  */\nexport const BORDER = 'border';\n\n /**\n  *  The index of the first visible row in view matrix.\n  */\nexport const ROW_POINTER = 'rowPointer';\n\n/**\n * The index of the first visible column in the view matrix.\n */\nexport const COLUMN_POINTER = 'columnPointer';\n\n/**\n * Flag to specify whether row sizes should be equal.\n */\nexport const ROW_SIZE_IS_EQUAL = 'isRowSizeEqual';\n\n/**\n * Flag to specify whether column sizes are equal.\n */\nexport const COLUMN_SIZE_IS_EQUAL = 'isColumnSizeEqual';\n\n/**\n * Field to store an array an of the widths of visible columns.\n * @computed\n */\nexport const COLUMN_WIDTHS = 'visibleColumnWidths';\n\n/**\n * Field to store an array of heights of visible rows.\n * @computed\n */\nexport const ROW_HEIGHTS = 'visibleRowHeights';\n\n/**\n * Field to store the width of the left matrix.\n * @computed\n */\nexport const LEFT_MATRIX_WIDTH = 'leftMatrixWidth';\n\n/**\n * Field to store the width of the right matrix.\n * @computed\n */\nexport const RIGHT_MATRIX_WIDTH = 'rightMatrixWidth';\n\n/**\n * Field to store the height of the top matrix.\n * @computed\n */\nexport const TOP_MATRIX_HEIGHT = 'topMatrixHeight';\n\n/**\n * Field to store the height of the bottom matrix.\n * @computed\n */\nexport const BOTTOM_MATRIX_HEIGHT = 'bottomMatrixHeight';\n\n/**\n * The dom element to render the layout inside.\n */\nexport const MOUNT_POINT = 'mount';\n\n/**\n * The id attribute of the left table element.\n */\nexport const LEFT_TABLE_ID = 'grid-left';\n\n/**\n * The id attribute of the right table element.\n */\nexport const RIGHT_TABLE_ID = 'grid-right';\n\n/**\n * The id attribute of the top table.\n */\nexport const TOP_TABLE_ID = 'grid-top';\n\n/**\n * The id attribute of the bottom table.\n */\nexport const BOTTOM_TABLE_ID = 'grid-bottom';\n\n/**\n * The id attribute of the center table.\n */\nexport const CENTER_TABLE_ID = 'grid-center';\n\n/**\n * The id attribute of the top div.\n */\nexport const TOP_DIV_ID = 'muze-div-top';\n\n/**\n * The id attribute of the bottom div.\n */\nexport const BOTTOM_DIV_ID = 'muze-div-bottom';\n\n/**\n * The id attribute of the center div.\n */\nexport const CENTER_DIV_ID = 'muze-div-center';\n\n/**\n * Field that indicates if the row configuration has changed\n */\nexport const HAVE_ROWS_CHANGED = 'haveRowsChanged';\n\n/**\n * Field that indicates if the column configuration has changed\n */\nexport const HAVE_COLUMNS_CHANGED = 'haveColumnsChanged';\n\n/**\n * Field that indicates if the values configuration for the center matrix has changed\n */\nexport const HAVE_VALUES_CHANGED = 'haveValuesChanged';\n\n/**\n * Field that indicates the width of row matrix\n */\nexport const ROW_MATRIX_WIDTH = 'rowMatrixWidth';\n\n/**\n * Field that indicates the height of row matrix\n */\nexport const COLUMN_MATRIX_HEIGHT = 'columnMatrixHeight';\n\n/**\n * Field that indicates the unit width of layout\n */\nexport const UNIT_WIDTH = 'unitWidth';\n\n/**\n * Field that indicates the unit height of layout\n */\nexport const UNIT_HEIGHT = 'unitHeight';\n\n/**\n * Field that indicates the style object\n */\nexport const STYLE = 'style';\n\n/**\n * Field that indicates the color configuration\n */\nexport const COLOR = 'color';\n\n/**\n * Field that indicates width\n */\nexport const WIDTH = 'width';\n\n/**\n * Field that indicates collpase property for border\n */\nexport const COLLAPSE = 'collapse';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SPACING = 'spacing';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const DISTRIBUTION = 'distribution';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const GUTTERSPACE = 'gutterSpace';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const BREAK_PAGE = 'breakPage';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_ROW_BORDERS = 'showRowBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_COL_BORDERS = 'showColBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_VALUE_BORDERS = 'showValueBorders';\n\nexport const HEIGHT = 'height';\nexport const COLUMN = 'column';\nexport const ROW = 'row';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const CENTER = 'center';\nexport const CLICK = 'click';\nexport const ROW_LEFT = 'rowLeft';\nexport const ROW_RIGHT = 'rowRight';\nexport const COLUMN_BOTTOM = 'colBottom';\nexport const COLUMN_TOP = 'colTop';\nexport const AUTO = 'auto';\nexport const ROW_SPAN = 'rowSpan';\nexport const COL_SPAN = 'colSpan';\nexport const ROW_ROOT = 'rowRoot';\nexport const COLUMN_ROOT = 'columnRoot';\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary';\n","import { sanitizeIP, mergeRecursive } from 'muze-utils';\nimport { TOP, CENTER, BOTTOM } from '../enums/constants';\n\n/*\n * This is the abstract implementation of the root layout. This takes care of common work which all the layouts\n * has to handle. The common work includes sanitizaion of inputs, update, rerender, dispose etc. This class can't be\n * used directly (as ofcourse this is an abstract implementaiton), the class which is implementing it has to implement\n * the necessary methods and gives its on visual.\n */\n\n/**\n * This class is used to create a generic layout. It can be extended to create layouts\n * of different types\n * @class GenericLayout\n */\nexport default class GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config configuration to be given for the layout\n     * @param {Object} dependencies external dependencies.\n     *\n     * @memberof GenericLayout\n     *\n     */\n    constructor (mountPoint, measurement, config, dependencies) {\n        this._config = {};\n        this._measurement = {};\n        this._matrices = [];\n        // External dependencies to be included for the layout. This includes the ext global dependencies like\n        // smartlabel which has one single implementation of throughout the page or per isntance\n        this._dependencies = dependencies;\n\n        this.measurement(measurement);\n        this.mountPoint(mountPoint);\n        this.config(config);\n    }\n\n    /**\n     * Returns an object which is used to recreate the layout.\n     * @return {Object} the serialized components\n     */\n    serialize () {\n        return {\n            measurement: this.measurement(),\n            config: this.config(),\n            matrices: this.matrices()\n        };\n    }\n\n     /**\n     * Sets/Gets the config for the layout\n     * @param {Object} config configuration for the layout\n     * @return {Layout|Object} Gets the Config/ Returns this instance when set\n     */\n    config (config) {\n        if (config) {\n            this._config = mergeRecursive(this._config || {}, config);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Sets/Gets the measurement for the layout\n     * @param {Object} measurement measurement for the layout\n     * @return {Layout|Object} Gets the measurement/ Returns this instance when set\n     */\n    measurement (measurement) {\n        if (measurement) {\n            this._measurement = mergeRecursive(this._measurement || {}, measurement);\n\n            return this;\n        }\n        return this._measurement;\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     * @param {Object} matrices matrices for the layout\n     * @return {Layout|Object} Gets the matrices/ Returns this instance when set\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = sanitizeIP.typeObj([TOP, CENTER, BOTTOM], matrices);\n\n            return this;\n        }\n        return this._matrices;\n    }\n\n    /**\n     * Sets/Gets the matrix for row\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    rowMatrix (matrix) {\n        if (matrix) {\n            this._rowMatrix = matrix;\n            return this;\n        }\n        return this._rowMatrix;\n    }\n\n    /**\n     * Sets/Gets the matrix for columns\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    columnMatrix (matrix) {\n        if (matrix) {\n            this._columnMatrix = matrix;\n            return this;\n        }\n        return this._columnMatrix;\n    }\n\n   /**\n     * Sets/Gets the matrix for value\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    centerMatrix (matrix) {\n        if (matrix) {\n            this._centerMatrix = matrix;\n            return this;\n        }\n        return this._centerMatrix;\n    }\n\n    /**\n     * Sets/Gets the mountPoint for the layout\n     * @param {Object} mountPoint mountPoint for the layout\n     * @return {Layout|Object} Gets the mountPoint/ Returns this instance when set\n     */\n    mountPoint (mountPoint) {\n        if (mountPoint) {\n            this._mountPoint = mountPoint;\n\n            return this;\n        }\n        return this._mountPoint;\n    }\n}\n","import * as FieldNames from '../enums/constants';\n\n/**\n * Default configuration of the layout\n * @return {Object} returns the default configuration\n */\nexport const DEFAULT_CONFIGURATION = {\n    [FieldNames.BORDER]: {\n        [FieldNames.STYLE]: 'solid',\n        [FieldNames.COLOR]: '#d6d6d6',\n        [FieldNames.WIDTH]: 2,\n        [FieldNames.COLLAPSE]: true,\n        [FieldNames.SPACING]: 0\n    },\n    [FieldNames.GUTTERSPACE]: { rows: [], columns: [] },\n    [FieldNames.DISTRIBUTION]: { rows: [], columns: [] },\n    [FieldNames.BREAK_PAGE]: { rows: [], columns: [] },\n    [FieldNames.ROW_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_POINTER]: 0,\n    [FieldNames.ROW_POINTER]: 0\n};\n\n/**\n * Default measurements for the layout\n * @return {Object} returns the default measurements\n */\nexport const DEFAULT_MEASUREMENTS = {\n    [FieldNames.GRID_WIDTH]: 100,\n    [FieldNames.GRID_HEIGHT]: 100,\n    [FieldNames.UNIT_WIDTH]: 100,\n    [FieldNames.UNIT_HEIGHT]: 100\n};\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n","import { ROW_LEFT, ROW_RIGHT, COLUMN_BOTTOM, COLUMN_TOP, TOP, BOTTOM } from '../enums/constants';\n/**\n * This callback is used to filter the array of\n * placeholder cells and filter out cells which have\n * appeared in a previous row.\n *\n * @param {Placeholder} colData Instance of placeholder.\n * @param {number} colIdx The index of the placeholder in array.\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {number} rIdx The index of the row of the placeholder in array.\n * @param {string} type The type of matrix it is (rowLeft, rowRight, colTop, colBottom)\n * @return {boolean} flag to keep/remove element.\n */\nconst columnFilter = (colData, colIdx, matrix, rIdx, type) => {\n    const previousRow = matrix[rIdx - 1];\n    const currentRow = matrix[rIdx];\n\n    // Row Span for left\n    if (type === ROW_LEFT) {\n        if (!previousRow) {\n            return colData;\n        }\n        let i = 0;\n        for (;i <= colIdx; i += 1) {\n            if (currentRow[i].valueOf() !== previousRow[i].valueOf()) {\n                break;\n            }\n        }\n        return (i - 1 === colIdx) ? null : colData;\n    } else if (type === ROW_RIGHT) {\n        if (!previousRow || colIdx === 0) {\n            return colData;\n        }\n        let j = colIdx;\n        for (; j < currentRow.length; j += 1) {\n            if (previousRow[j].valueOf() !== currentRow[j].valueOf()) {\n                break;\n            }\n        }\n        return (j === currentRow.length) ? null : colData;\n    } else if (type === COLUMN_BOTTOM) {\n        if (rIdx === 0) {\n            return colData;\n        }\n        const prevCell = currentRow[colIdx - 1];\n        if (prevCell) {\n            if (prevCell.valueOf() === colData.valueOf()) {\n                const nextRow = matrix[rIdx + 1];\n                if (!nextRow) {\n                    return null;\n                }\n                if (nextRow[colIdx].valueOf() === nextRow[colIdx - 1].valueOf()) {\n                    return null;\n                }\n                return colData;\n            }\n            return colData;\n        }\n        return colData;\n    } else if (type === COLUMN_TOP) {\n        if (rIdx === matrix.length - 1 && matrix.length > 1) {\n            return colData;\n        }\n        const prevCell = currentRow[colIdx - 1];\n        if (prevCell && (prevCell.valueOf() === colData.valueOf())) {\n            const prevRow = matrix[rIdx - 1];\n            if (prevRow) {\n                if (prevRow[colIdx].valueOf() === prevRow[colIdx - 1].valueOf()) {\n                    return null;\n                }\n                return colData;\n            }\n            return null;\n        }\n        return colData;\n    }\n    return colData;\n};\n\n/**\n * This callback is used to calculate the rowspan\n * by checking for repeating entries in subsequent rows\n * at the specified column.\n *\n * @param {Placeholder} colData Instance of placeholder.\n * @param {number} colIdx The index of the placeholder in the array.\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {number} rIdx The index of the row of the placeholder in array.\n * @return {number} The row span.\n */\nconst calcRowSpan = (colData, colIdx, matrix, rIdx) => {\n    let count = 1;\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData || typeof colData.valueOf() !== 'string') {\n        return 1;\n    }\n    let isNull = false;\n    while (!isNull) {\n        if (matrix[rIdx + count] && matrix[rIdx + count][colIdx] === null) {\n            count += 1;\n        } else {\n            isNull = true;\n        }\n    }\n    return count;\n};\n/**\n * This callback is used to calculate the rowspan\n * by checking for repeating entries in subsequent rows\n * at the specified column.\n *\n * @param {Placeholder} colData Instance of placeholder.\n * @param {number} colIdx The index of the placeholder in the array.\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {number} rIdx The index of the row of the placeholder in array.\n * @return {number} The row span.\n */\nconst calcColSpan = (colData, colIdx, matrix, rIdx) => {\n    let count = 1;\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData || typeof colData.valueOf() !== 'string') {\n        return 1;\n    }\n    let isNull = false;\n    while (!isNull) {\n        if (matrix[rIdx][colIdx + count] === null) {\n            count += 1;\n        } else {\n            isNull = true;\n        }\n    }\n    return count;\n};\n\n// create a masking matrix to strip out repeating columns\n// and calculate rowspan.\nconst mask = function (matrix, type) {\n    return matrix.map((row, rIdx) => {\n        if (type === ROW_LEFT || type === ROW_RIGHT) {\n            const filteredRow = row.map((col, colIndex) => columnFilter(col, colIndex, matrix, rIdx, type));\n            const temp = [];\n            const diff = row.length - filteredRow.length;\n            for (let i = 0; i < diff; i += 1) {\n                temp.push(null);\n            }\n            if (type === ROW_RIGHT) {\n                temp.unshift(...filteredRow);\n                return temp;\n            }\n            temp.push(...filteredRow);\n            return temp;\n        }\n\n        const filteredRow = row.map((col, colIndex) => columnFilter(col, colIndex, matrix, rIdx, type));\n        const temp = [];\n        temp.push(...filteredRow);\n        return temp;\n    });\n};\n\n/**\n * This function is used to set the col and row spans\n * for the matrices based on repeated/hierarchichal data\n *\n * @export\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {string} type Type of array (center, top, bottom)\n * @param {number} index Index of array in the row\n * @return {Object} containing the view matrix and their spans\n */\nexport function cellSpanMaker (matrix, type, index) {\n    let span = '';\n    if (type === TOP || type === BOTTOM) {\n        span = type === TOP ? COLUMN_TOP : COLUMN_BOTTOM;\n        const viewMatrix = mask(matrix, span);\n        const spans = viewMatrix.map((row, ridx) => row.map((col, i) => calcColSpan(col, i, viewMatrix, ridx))\n                        .filter(col => col !== 1));\n        return { viewMatrix, spans };\n    } else if (index === 0 || index === 2) {\n        span = index === 0 ? ROW_LEFT : ROW_RIGHT;\n        const viewMatrix = mask(matrix, span);\n        const spans = [];\n        viewMatrix.forEach((row, ridx) => {\n            spans[ridx] = spans[ridx] || [];\n            row.forEach((col, i) => {\n                if (viewMatrix[ridx][i]) {\n                    const currSpan = calcRowSpan(col, i, viewMatrix, ridx);\n                    currSpan && spans[ridx].push(currSpan);\n                }\n            });\n        });\n        return { viewMatrix, spans };\n    }\n    return { viewMatrix: matrix };\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport { cellSpanMaker } from './span-maker';\nimport {\n     TOP, LEFT, RIGHT, BOTTOM, CENTER, WIDTH, ROW_SPAN, COL_SPAN\n} from '../enums/constants';\nimport { BLANK_BORDERS } from './defaults';\n\n/**\n * Creates a table element of the layout\n *\n * @param {Object} mount Mount point for table elements\n * @param {string} className defines class name\n * @param {Array} rowData set of rows for the table\n * @return {Selection} set of selections for the table\n */\nfunction renderTable (mount, className, rowData) {\n    const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n    const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n    const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n    const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null && e.config().show).map(e =>\n                                ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n    return { table, body, rows, cells };\n}\n\nfunction applyRowBorders (cells, borderStyle, showBorders, color) {\n    [TOP, BOTTOM].forEach((borderType) => {\n        const style = `${borderStyle} ${showBorders[borderType] ? color : BLANK_BORDERS}`;\n        cells.style(`border-${borderType}`, style);\n    });\n}\n\nfunction applyColBorders (cells, borderStyle, showBorders, color) {\n    [LEFT, RIGHT].forEach((borderType) => {\n        const style = `${borderStyle} ${showBorders[borderType] ? color : BLANK_BORDERS}`;\n        cells.style(`border-${borderType}`, style);\n    });\n}\n\n/**\n * Applies borders to the cells in a matrix\n *\n * @param {Selection} cells Set of cells made from the matrix\n * @param {Object} border Border info for layout\n * @param {string} type Type of matrix(top/center/bottom)\n * @param {number} index Column index of matrix in the row\n */\nfunction applyBorders (cells, border, type, index) {\n    const {\n        width,\n        style,\n        color,\n        showRowBorders,\n        showColBorders,\n        showValueBorders\n    } = border;\n    const borderStyle = `${width}px ${style}`;\n\n    if (type === CENTER && index === 1) {\n        [TOP, BOTTOM, LEFT, RIGHT].forEach((borderType) => {\n            cells.style(`border-${borderType}`, `${borderStyle} ${showValueBorders[borderType] ?\n                color : BLANK_BORDERS}`);\n        });\n    } else if (type === CENTER) {\n        applyRowBorders(cells, borderStyle, showRowBorders, color);\n    } else if (index === 1) {\n        applyColBorders(cells, borderStyle, showColBorders, color);\n    }\n}\n\n/**\n * Renders a set of matrices in a row\n *\n * @param {Array} matrices Set of matrices in a row\n * @param {Selection} mountPoint Mount point for the row\n * @param {string} type top/center/bottom\n * @param {Object} dimensions dimensions of the matrix\n */\nfunction renderMatrix (matrices, mountPoint, type, dimensions, classPrefix) {\n    matrices.forEach((matrix, index) => {\n        // Creating containers for each matrix individually\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${type}-${index + 1}`)\n        .classed(`${classPrefix}-grid-${type}`, true)\n        .classed(`${classPrefix}-grid`, true);\n\n        const {\n            viewMatrix,\n            spans\n        } = cellSpanMaker(matrix, type, index);\n\n        // Rendering the table components\n        const { cells } = renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        if (type === CENTER && spans) {\n            cells.attr(ROW_SPAN, function (cell, colIndex) {\n                const span = spans[cell.rowIndex][colIndex];\n                const placeholder = cell.placeholder;\n                selectElement(this).style('height', `${placeholder.availHeight() + dimensions.border.width}px`);\n                if (span > 1) {\n                    placeholder.setAvailableSpace(placeholder.availWidth(), placeholder.availHeight() * span);\n                }\n                return span;\n            });\n        } else if ((type === TOP || type === BOTTOM) && index === 1) {\n            cells.attr(COL_SPAN, function (cell, colIndex) {\n                const span = spans[cell.rowIndex][colIndex];\n                const placeholder = cell.placeholder;\n                if (span > 1) {\n                    placeholder.setAvailableSpace(placeholder.availWidth() * span, placeholder.availHeight());\n                }\n                selectElement(this).style('height', `${placeholder.availHeight()}px`);\n                return span;\n            });\n        }\n        // Rendering content within placeholders\n        cells.each(function (cell) {\n            cell.placeholder && cell.placeholder.render(this);\n        }).exit().each((cell) => {\n            cell.placeholder && cell.placeholder.remove();\n        });\n\n        applyBorders(cells, dimensions.border, type, index);\n    });\n}\n\n/**\n * Renders all the matrices of the layout\n *\n * @export\n * @param {Array} matrices Set of matrices in the layout\n * @param {Array} mountPoints Mount points for each row of matrix\n * @param {Array} layoutDimensions Dimensions(height/width) of all the matrices\n */\nexport function renderMatrices (context, matrices, layoutDimensions) {\n    const {\n        top,\n        center,\n        bottom\n    } = matrices;\n    const {\n        classPrefix\n    } = context.config();\n    const {\n        width\n    } = context.measurement();\n    const mount = context.mountPoint();\n\n    const data = [\n        { type: TOP, matrix: top },\n        { type: CENTER, matrix: center },\n        { type: BOTTOM, matrix: bottom }\n    ];\n    makeElement(mount, 'div', data, `${classPrefix}-grid-layout-row`)\n                    .each(function (d, i) {\n                        const row = selectElement(this);\n                        row.classed(`${classPrefix}-grid-layout-row-${i}`, true);\n                        renderMatrix(d.matrix, row, d.type, layoutDimensions, classPrefix);\n                    })\n                    .style(WIDTH, `${Math.ceil(width)}px`);\n}\n","/**\n * This file exports utility functions that are used across the layout module\n */\nimport { Symbols } from 'muze-utils';\nimport { PRIMARY, SECONDARY, HEIGHT, WIDTH } from '../enums/constants';\n\nconst nest = Symbols.nest;\n/**\n *\n *\n * @param {*} isTransposed\n *\n */\nconst getMeasureInfo = (isTransposed) => {\n    if (isTransposed) {\n        return {\n            firstMeasure: HEIGHT,\n            secondMeasure: WIDTH\n        };\n    }\n    return {\n        firstMeasure: WIDTH,\n        secondMeasure: HEIGHT\n    };\n};\n\n/**\n *\n *\n * @param {*} i\n * @param {*} page\n *\n */\nconst findInPage = (i, page) => {\n    let count = 0;\n    for (const x in page) {\n        if (i < page[x]) {\n            count = x;\n            break;\n        }\n    }\n    return count;\n};\n\n/**\n * Creates a single matrix from two matrices\n *\n * @param {Array<Array>} matrix Input matrix\n * @return {Array<Array>} Joined matrix\n * @memberof VisualMatrix\n */\nexport const combineMatrices = (matrix, config) => {\n    const { isTransposed } = config;\n    let joinedMatrix = matrix[0].length > 0 ? matrix[0] : matrix[1];\n    if (isTransposed) {\n        joinedMatrix = matrix[0].length > 0 ? [...matrix[0]] : [];\n        joinedMatrix = matrix[1].length > 0 ? [...joinedMatrix, ...matrix[1]] : joinedMatrix;\n    } else {\n        joinedMatrix = joinedMatrix.map((row, rowIndex) => {\n            let rowData = [];\n            if (matrix[0].length > 0) {\n                rowData = [...matrix[0][rowIndex]];\n            }\n            if (matrix[1].length > 0) {\n                rowData = [...rowData, ...matrix[1][rowIndex]];\n            }\n            return rowData;\n        });\n    }\n    return joinedMatrix;\n};\n\n/**\n * Creates a hirachical tree from the context\n *\n * @param {Object} context context for creating tree\n * @return {Object} nested tree\n */\nexport const createTree = (context) => {\n    let matrixTree = {};\n    let lastLevelKey = 0;\n    let facet = PRIMARY;\n    const nestFn = nest();\n    const keys = [];\n    const layoutMatrix = context._layoutMatrix;\n    const primaryMatrix = context.primaryMatrix();\n    const secondaryMatrix = context.secondaryMatrix();\n    const { isTransposed, breakPage } = context.config();\n\n    if (!isTransposed) {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix[0].length - 1; i++) {\n                keys.push(i);\n            }\n            keys.push(primaryMatrix[0].length - 1);\n            if (facet === SECONDARY || secondaryMatrix.length === 0) {\n                lastLevelKey = primaryMatrix[0].length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const keyLength = primaryMatrix.length > 0 ? primaryMatrix[0].length : 0;\n            for (let i = secondaryMatrix[0].length - 1; i > 0; i--) {\n                keys.push(i + keyLength);\n            }\n            keys.push(keyLength);\n\n            if (facet === PRIMARY) {\n                lastLevelKey = keyLength;\n            }\n        } else {\n            lastLevelKey = primaryMatrix.length > 0 ? primaryMatrix[0].length - 1 : 0;\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        matrixTree = nestFn.entries(layoutMatrix);\n    } else {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix.length - 1; i++) {\n                keys.push(i);\n            }\n            // if (facet === PRIMARY) {\n            keys.push(primaryMatrix.length - 1);\n            // } else {\n            if (facet === SECONDARY) {\n                lastLevelKey = primaryMatrix.length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const primaryMatrixLength = primaryMatrix.length;\n            for (let i = secondaryMatrix.length - 1; i > 0; i--) {\n                keys.push(i + primaryMatrixLength);\n            }\n            // if (facet === SECONDARY) {\n            keys.push(primaryMatrixLength);\n            // }\n            if (facet === PRIMARY) {\n                lastLevelKey = primaryMatrixLength;\n            }\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        let newMatrix = [];\n        newMatrix = layoutMatrix[0].map((col, colIndex) => layoutMatrix.map(row => row[colIndex]));\n        matrixTree = nestFn.entries(newMatrix);\n    }\n    return { tree: matrixTree, lastLevelKey };\n};\n\n/**\n * Gives the min measues\n *\n * @param {boolean} isTransposed is column matrix\n * @param {Object} unitMeasures min measures to be given to cells\n * @return {Object} dimension min cell\n */\nexport const getMinMeasures = (isTransposed, unitMeasures) => {\n    if (!isTransposed) {\n        return {\n            height: unitMeasures.height,\n            width: 0\n        };\n    }\n    return {\n        height: 0,\n        width: unitMeasures.width\n    };\n};\n\n/**\n * Get the logical space from the tree\n *\n * @param {Node} item tree to be calculated\n * @param {number} measures width and height\n * @param {Array} minMeasures min measures for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} dimension\n */\nexport const getLogicalSpace = (item, measures, minMeasures, maxMeasure = []) => {\n    const { firstMeasure, secondMeasure } = measures;\n    let firstMeasureValue = 0;\n    let secondMeasureValue = 0;\n    item.values.forEach((valueArray) => {\n        let fMeasure = 0;\n        let sMeasure = 0;\n        valueArray.forEach((placeholder, colIndex) => {\n            placeholder.setAvailableSpace();\n            const space = placeholder.getLogicalSpace();\n\n            sMeasure = Math.max(sMeasure, +space[secondMeasure], minMeasures[secondMeasure]);\n            maxMeasure[colIndex] = Math.max(maxMeasure[colIndex] || 0, space[firstMeasure]);\n            fMeasure += +maxMeasure[colIndex];\n        });\n        secondMeasureValue += sMeasure;\n        firstMeasureValue = Math.max(firstMeasureValue, fMeasure);\n        item.space = {\n            [secondMeasure]: Math.ceil(secondMeasureValue),\n            [firstMeasure]: Math.ceil(firstMeasureValue)\n        };\n    });\n    return {\n        [secondMeasure]: secondMeasureValue,\n        [firstMeasure]: firstMeasureValue\n    };\n};\n\n/**\n * Computes the logical spcae taken by the matrix tree\n *\n * @param {*} [item={}] tree to be viewed\n * @param {boolean} [isTransposed=false] is column matrix\n * @param {*} unitMeasures min measues for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} logical space taken\n */\nexport const computeLogicalSpace = (item = {}, config, maxMeasures) => {\n    const { isTransposed = false, unitMeasures } = config;\n    const { firstMeasure, secondMeasure } = getMeasureInfo(isTransposed);\n    const { values } = item;\n    const minMeasures = getMinMeasures(isTransposed, unitMeasures);\n    if (values[0].key) {\n        const logicalSpace = { [firstMeasure]: 0, [secondMeasure]: 0 };\n\n        values.forEach((valueItem) => {\n            // Compute logical space for lowest level\n            const space = computeLogicalSpace(valueItem, config, maxMeasures);\n            // Set logical space for first measure\n            logicalSpace[firstMeasure] = Math.max(logicalSpace[firstMeasure], space[firstMeasure],\n                minMeasures[firstMeasure]);\n            // Set logical space for second measure\n            logicalSpace[secondMeasure] += +space[secondMeasure];\n        });\n        item.space = logicalSpace;\n        return logicalSpace;\n    }\n    return getLogicalSpace(item, { firstMeasure, secondMeasure }, minMeasures, maxMeasures);\n};\n\n/**\n * Gives the space taken by a row\n *\n * @param {Array} row matrix array of rows\n * @return {Object} dimension of the row\n */\nexport const spaceTakenByRow = (row) => {\n    let height = 0;\n    let width = 0;\n    row.forEach((col) => {\n        const spaces = col.getLogicalSpace();\n        height = Math.max(height, spaces.height);\n        width += spaces.width;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Gives the space taken by a column\n *\n * @param {Array<Array>} matrix column matrix\n * @param {number} colIndex column index\n * @return {Object} dimension of the column\n */\nexport const spaceTakenByColumn = (matrix, colIndex) => {\n    let height = 0;\n    let width = 0;\n    matrix.forEach((row) => {\n        const col = row[colIndex];\n        const spaces = col.getLogicalSpace();\n        width = Math.max(width, spaces.width);\n        height += spaces.height;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Creates different level matrices\n *\n * @param {Object} item matrix tree\n * @param {boolean} isTransposed is column matrix\n * @return {Object} matrix of each level\n */\nexport const createMatrixEachLevel = (item, isTransposed) => {\n    if (item.values[0].key) {\n        const arr = [];\n        item.values.forEach((child) => {\n            if (!isTransposed) {\n                arr.push(...createMatrixEachLevel(child, isTransposed));\n            } else {\n                const eachLevel = createMatrixEachLevel(child, isTransposed);\n                eachLevel.forEach((e, i) => {\n                    arr[i] = arr[i] || [];\n                    arr[i].push(...e);\n                });\n            }\n        });\n        item.matrix = arr;\n        return arr;\n    }\n    if (!isTransposed) {\n        item.matrix = item.values;\n    } else {\n        item.matrix = item.values[0].map((col, colIndex) => item.values.map(row => row[colIndex]));\n    }\n    return item.matrix;\n};\n\n/**\n * Breaks the matrix into two part\n *\n * @param {Array<Array>} matrix input matrix\n * @param {boolean} isTransposed is column matrix\n * @param {number} breakPointer point in matrix where it is to be broken\n * @return {Array} two broken matrix\n */\nexport const breakMatrix = (matrix, isTransposed, breakPointer) => {\n    const primaryMatrix = [];\n    const secondaryMatrix = [];\n    if (isTransposed) {\n        matrix.forEach((row, rowIndex) => {\n            if (rowIndex >= breakPointer) {\n                secondaryMatrix.push(row);\n            } else {\n                primaryMatrix.push(row);\n            }\n        });\n    } else {\n        matrix.forEach((row, rowIndex) => {\n            row.forEach((column, columnIndex) => {\n                if (columnIndex >= breakPointer) {\n                    secondaryMatrix[rowIndex] = secondaryMatrix[rowIndex] || [];\n                    secondaryMatrix[rowIndex].push(column);\n                } else {\n                    primaryMatrix[rowIndex] = primaryMatrix[rowIndex] || [];\n                    primaryMatrix[rowIndex].push(column);\n                }\n            });\n        });\n    }\n    return [primaryMatrix, secondaryMatrix];\n};\n\n/**\n * Distributed width returned\n *\n * @param {Object} context context for the width distibution\n * @return {number} distributed widths\n */\nexport const getDistributedWidth = (context, layoutConfig) => {\n    const {\n        availableWidth,\n        width,\n        row\n    } = context;\n    const {\n        isDistributionEqual,\n        isTransposed,\n        distribution\n    } = layoutConfig;\n    let distSum = 0;\n    if (distribution && distribution[0]) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    return row.map((col, colIndex) => {\n        const space = col.getLogicalSpace().width;\n        let distWidth = (space + (availableWidth - width) * (space / width));\n        if (isTransposed) {\n            if (distribution.length > 0) {\n                distWidth = (availableWidth * distribution[colIndex] / distSum);\n            } else if (isDistributionEqual || width === 0) {\n                const rowLen = row.length;\n                distWidth = (availableWidth / rowLen);\n            }\n        }\n        return Math.floor(distWidth);\n    });\n};\n\n/**\n * Distributeed heights returned\n *\n * @param {Object} context input for the height distribution\n * @return {Object} distribured heights\n */\nexport const getDistributedHeight = (context) => {\n    let distSum = 0;\n    let gutterSum = 0;\n    let heightWithoutGutter = 0;\n    const {\n        isTransposed,\n        distribution,\n        availableHeight,\n        height,\n        isDistributionEqual,\n        gutter,\n        matrix,\n        cIdx\n    } = context;\n\n    if (distribution && distribution[0] !== undefined) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    if (gutter && gutter[0] !== undefined) {\n        gutterSum = gutter.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    heightWithoutGutter = availableHeight - Math.floor(availableHeight * gutterSum);\n\n    const colLen = matrix.length;\n    return matrix.map((row, rIdx) => {\n        const col = row[cIdx];\n        const space = col.getLogicalSpace().height;\n        let distHeight = (space + (heightWithoutGutter - height) * (space / height));\n\n        if (!isTransposed) {\n            if (distribution.length > 0 && colLen === distribution.length) {\n                distHeight = (heightWithoutGutter * distribution[rIdx] / distSum);\n            } else if (isDistributionEqual || context.height === 0) {\n                distHeight = (heightWithoutGutter / colLen);\n            }\n        }\n        return Math.floor(distHeight);\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} beg\n * @param {*} end\n */\nexport const extraCellsRemover = (arr, beg, end) => arr.slice(beg, -end);\n\n/**\n * Creates matrix instancess\n *\n * @param {Array} [arr=[]] mutated arry\n * @param {number} depth depth of the tree\n * @param {Array} matrixInfo Details about the matrix(tree, etc) to be inserted\n * @param {boolean} layout Instance of layout\n */\nexport const createMatrixInstances = (arr = [], depth, matrixInfo, layout) => {\n    const breakPointer = layout._breakPointer;\n    const config = layout.config();\n    const {\n        isTransposed\n    } = config;\n    const {\n        tree,\n        layoutMatrix\n    } = matrixInfo;\n\n    if (depth === 0) {\n        const brokenMatrix = breakMatrix(tree.matrix, isTransposed, breakPointer);\n        arr.push({\n            matrix: tree.matrix,\n            primaryMatrix: brokenMatrix[0],\n            secondaryMatrix: brokenMatrix[1],\n            space: tree.space\n        });\n        return arr;\n    }\n    const nextLevel = depth - 1;\n    tree.values.forEach((e) => {\n        createMatrixInstances(arr, nextLevel, {\n            tree: e,\n            layoutMatrix\n        }, layout);\n    });\n    return arr;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    maxMeasures: {},\n    availableSpace: {},\n    logicalSpace: {}\n};\n","import { PRIMARY } from '../enums/constants';\n/**\n *\n *\n */\nexport const defaultConfig = {\n    distribution: [],\n    classPrefix: 'muze',\n    isDistributionEqual: true,\n    unitMeasures: {\n        height: 100,\n        width: 100,\n        border: 1\n    },\n    isTransposed: false,\n    facet: PRIMARY,\n    extraCellLengths: []\n};\n","import { mergeRecursive, generateGetterSetters, ERROR_MSG } from 'muze-utils';\nimport {\n    createTree,\n    combineMatrices,\n    createMatrixInstances\n  } from '../utils';\nimport { PROPS } from './props';\nimport { HEIGHT, WIDTH } from '../enums/constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        // Prepare matrices\n        this._lastLevelKey = 0;\n        this._primaryMatrix = matrix[0] || [];\n        this._secondaryMatrix = matrix[1] || [];\n        this._maxMeasures = [];\n        this._availableSpace = {};\n\n        // Store the config\n        generateGetterSetters(this, PROPS);\n        const defCon = Object.assign({}, this.constructor.defaultConfig());\n        this.config(mergeRecursive(defCon, config));\n\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n    }\n\n     /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    computeViewableSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getPriorityDistribution () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    primaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._primaryMatrix;\n    }\n\n    secondaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._secondaryMatrix;\n    }\n\n    tree (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._tree;\n    }\n\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    createTree () {\n        const { tree, lastLevelKey } = createTree(this);\n        this._lastLevelKey = lastLevelKey;\n        return tree;\n    }\n\n    /**\n     * Returns the space taken by visual matrix\n     *\n     * @return {Object} space taken by the matrix\n     * @memberof VisualMatrix\n     */\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    /**\n     * Sets the provied space to the visual matrix\n     *\n     * @param {number} width width provided\n     * @param {number} height height provided\n     * @memberof VisualMatrix\n     */\n    setAvailableSpace (width, height) {\n        this.availableSpace({ width, height });\n        const tree = this.tree();\n        const heightMeasures = this.populateMaxMeasures(HEIGHT, tree);\n        const widthMeasures = this.populateMaxMeasures(WIDTH, tree);\n        const depth = this.calculateDepth(widthMeasures, heightMeasures);\n\n        this.viewableMatrix = this.createViewPortMatrix(depth);\n        this.viewableMeasures = this.redistributeSpaces(width, height);\n        return this;\n    }\n\n    /**\n     * Populate the max measures in the array\n     *\n     * @param {Array} measures array to be filled with max measures\n     * @param {Object} matrixTree matrix tree of visual matrix\n     * @param {number} measure width or height\n     * @param {number} [depth=0] depth of the tree that to be calculated\n     * @memberof VisualMatrix\n     */\n    populateMaxMeasures (type, matrixTree, depth = 0, measures = []) {\n        measures[depth] = Math.max(measures[depth] || 0, matrixTree.space[type]);\n        if (matrixTree.values) {\n            const childDepth = depth + 1;\n            matrixTree.values.forEach((child) => {\n                if (child.space) {\n                    measures = this.populateMaxMeasures(type, child, childDepth, measures);\n                }\n            });\n        }\n        return measures;\n    }\n\n    /**\n     * Gets the viewable measures for the current viewable matrix\n     *\n     * @return {Object} Set of viewable measures\n     * @memberof VisualMatrix\n     */\n    getViewableSpaces () {\n        return this.viewableMeasures;\n    }\n\n    /**\n     * Returns the matrix that can be viewed in the current viewport\n     *\n     * @return {Array} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    getViewableMatrices () {\n        return this.viewableMatrix;\n    }\n\n    /**\n     * Creates the viewport that can be viewed together\n     *\n     * @param {number} depth maxDepth that can be viewed in the viewport\n     * @return {Array<Object>} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    createViewPortMatrix (depth) {\n        const arr = [];\n        createMatrixInstances(arr, depth, this.removeExtraCells(), this);\n        return arr;\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    combineMatrices,\n    spaceTakenByColumn,\n    getDistributedHeight,\n    computeLogicalSpace,\n    createMatrixEachLevel\n  } from '../utils';\nimport { ROW_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class RowVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = (matrix[0].length > 0 ? matrix[0][0].length : 0);\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n\n        // Create Tree\n        this._tree = {\n            key: ROW_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, false);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height\n        } = measures;\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i };\n            const { widths, rowHeights, columnWidths } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = [height, height];\n            const columnMeasures = widths;\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n        tree.matrix = extraCellsRemover(tree.matrix, begCellLen, endCellLen);\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        let remainaingAvailWidth;\n        let remainaingWidth;\n        let cWidths = [];\n        let conditions = [];\n        let maxPrioritySpace = 0;\n        const {\n            matrix,\n            width: availableWidth,\n            maxMeasures: maxWidths,\n            maxWidth: currentWidth,\n            height\n        } = measures;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length ? this.primaryMatrix()[0].length : 0;\n\n        const dist = [];\n\n        remainaingAvailWidth = availableWidth;\n        remainaingWidth = currentWidth;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            // divider = Math.min(2, matrixLen);\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            // divider = Math.min(1, matrixLen);\n        }\n        conditions.forEach((i) => {\n            dist[i] = maxWidths[i];\n            maxPrioritySpace += maxWidths[i];\n            remainaingAvailWidth -= dist[i];\n            remainaingWidth -= dist[i];\n        });\n        matrix[0].forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                dist[i] = remainaingAvailWidth * (maxWidths[i] / remainaingWidth);\n            }\n        });\n        matrix.forEach(row => row.forEach((col, cIdx) => {\n            if (conditions.indexOf(cIdx) === -1) {\n                col.setAvailableSpace(dist[cIdx], height);\n\n                cWidths[cIdx] = Math.max(cWidths[cIdx] || 0, Math.floor(col.getLogicalSpace().width));\n            } else {\n                cWidths[cIdx] = 0;\n            }\n        }));\n\n        const prioritySpace = availableWidth - cWidths.reduce((t, n) => t + n);\n        if (prioritySpace < 0) {\n            cWidths = cWidths.map(() => 0);\n        } else {\n            conditions.forEach((i) => {\n                cWidths[i] = Math.floor(prioritySpace * (dist[i] / maxPrioritySpace || 1));\n            });\n        }\n        return cWidths;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures, heightMeasures) {\n        let i;\n        const { height } = this.availableSpace();\n\n        for (i = 0; i < heightMeasures.length; i++) {\n            if (heightMeasures[i] <= height) break;\n        }\n\n        return Math.min(widthMeasures.length - 1, i);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n        const maxMeasures = this.maxMeasures();\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        const logicalWidths = this.getPriorityDistribution({\n            matrix: this._layoutMatrix,\n            maxWidth,\n            maxMeasures,\n            width,\n            height\n        });\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths, logicalWidths };\n            const measures = this.redistributeViewSpaces(options);\n            maxWidths = measures.maxWidths;\n            maxHeights = measures.maxHeights;\n        });\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let cWidths = [];\n        let rHeights = [];\n        let mHeight = 0;\n        const maxMeasures = this.maxMeasures();\n\n        const {\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        } = this.config();\n        const { matrix, height, maxHeights, maxWidths, logicalWidths } = measures;\n        mHeight = spaceTakenByColumn(matrix, this._lastLevelKey).height;\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        measures.maxMeasures = maxMeasures;\n        measures.maxWidth = maxWidth;\n        if (maxWidth > 0) {\n            cWidths = logicalWidths;\n        } else {\n            cWidths = maxMeasures.map(() => 0);\n        }\n        rHeights = getDistributedHeight({\n            matrix,\n            cIdx: this._lastLevelKey,\n            height: mHeight,\n            availableHeight: height,\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        });\n        if (maxWidths.length > 0) {\n            cWidths = cWidths.map((e, i) => Math.max(e, maxWidths[0][i] || 0));\n        }\n        maxWidths.push(cWidths);\n        for (let x = 0; x < maxWidths.length; x++) {\n            maxWidths[x] = cWidths;\n        }\n        maxHeights.push(rHeights);\n        return { maxWidths, maxHeights };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = maxHeights[matrixIndex][rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth, colHeight - borderWidth);\n\n                if (rIdx === 0 && cIdx < breakPointer) {\n                    columnWidths[0][cIdx] = colWidth;\n                    widths[0] = (widths[0] || 0) + colWidth;\n                } else if (rIdx === 0 && cIdx >= breakPointer) {\n                    columnWidths[1][cIdx - breakPointer] = colWidth;\n                    widths[1] = (widths[1] || 0) + colWidth;\n                }\n                if (cIdx === this._lastLevelKey) {\n                    rowHeights[0][rIdx] = colHeight;\n                    rowHeights[1][rIdx] = colHeight;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    getDistributedWidth,\n    spaceTakenByRow,\n    createMatrixEachLevel,\n    computeLogicalSpace\n  } from '../utils';\nimport { COLUMN_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class ColumnVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = matrix[0].length;\n\n        // Create Tree\n        this._tree = {\n            key: COLUMN_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, true);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height,\n            width\n        } = measures;\n\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i, height };\n            const {\n                heights,\n                rowHeights,\n                columnWidths\n            } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = heights;\n            const columnMeasures = [width, width];\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n\n        tree.matrix = tree.matrix.map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        const {\n            height,\n            maxHeights\n        } = measures;\n        let remainaingHeight = height;\n        let heightDist = [];\n        let conditions = [];\n        let divider = 2;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            divider = 2;\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            divider = 1;\n        }\n        maxHeights.forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                heightDist[i] = e;\n                remainaingHeight -= e;\n            }\n        });\n        if (remainaingHeight < 0) {\n            heightDist = heightDist.map(() => 0);\n        } else {\n            conditions.forEach((e) => {\n                if (remainaingHeight / divider < maxHeights[e]) {\n                    heightDist[e] = 0;\n                } else {\n                    heightDist[e] = Math.min(maxHeights[e], (remainaingHeight) / divider);\n                }\n            });\n        }\n        return heightDist;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures) {\n        let j;\n        const { width } = this.availableSpace();\n\n        for (j = 0; j < widthMeasures.length; j++) {\n            if (widthMeasures[j] <= width) break;\n        }\n        return Math.min(widthMeasures.length - 1, j);\n    }\n\n     /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths };\n            const maxMeasures = this.redistributeViewSpaces(options);\n            maxWidths = maxMeasures.maxWidths;\n            maxHeights = maxMeasures.maxHeights;\n        });\n\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space column wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let rHeights = [];\n        const {\n            matrix,\n            width,\n            maxHeights,\n            maxWidths\n        } = measures;\n        const borderWidth = this.config().unitMeasures.border;\n\n        const mWidth = spaceTakenByRow(matrix[this._lastLevelKey]).width;\n        const cWidths = getDistributedWidth({\n            row: matrix[this._lastLevelKey],\n            width: mWidth,\n            availableWidth: width\n        }, this.config());\n\n        matrix.forEach((row, rIdx) => row.forEach((col, cIdx) => {\n            const oldLogicalSpace = col.getLogicalSpace();\n\n            col.setAvailableSpace(cWidths[cIdx] - borderWidth, oldLogicalSpace.height);\n            rHeights[rIdx] = Math.max(rHeights[rIdx] || 0, Math.floor(col.getLogicalSpace().height));\n        }));\n        if (maxHeights.length > 0) {\n            rHeights = rHeights.map((e, i) => Math.max(e, maxHeights[0][i]));\n        }\n        maxHeights.push(rHeights);\n        for (let x = 0; x < maxHeights.length; x++) {\n            maxHeights[x] = rHeights;\n        }\n        maxWidths.push(cWidths);\n        return { maxHeights, maxWidths };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, height, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        const heightDistribution = this.getPriorityDistribution({ height, maxHeights: maxHeights[0] || [] });\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = heightDistribution[rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth - borderWidth, colHeight);\n\n                if (cIdx === 0 && rIdx < breakPointer) {\n                    rowHeights[0][rIdx] = colHeight;\n                    heights[0] = (heights[0] || 0) + colHeight;\n                } else if (cIdx === 0 && rIdx >= breakPointer) {\n                    rowHeights[1][rIdx - breakPointer] = colHeight;\n                    heights[1] = (heights[1] || 0) + colHeight;\n                }\n                if (rIdx === this._lastLevelKey) {\n                    columnWidths[0][cIdx] = colWidth;\n                    columnWidths[1][cIdx] = colWidth;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { HEIGHT, WIDTH, COLUMN, ROW } from '../enums/constants';\n\n/**\n * Gets measurement for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @return {Object} Logical height/width of the matrix\n */\nexport function getMatrixMeasurement (matrix, type) {\n    if (matrix) {\n        return matrix.getLogicalSpace()[type];\n    }\n    return 0;\n}\n\n/**\n * Sets available space for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @param {number} value Value of measurement\n */\nexport function setMatrixMeasurement (matrix, type, value) {\n    if (matrix) {\n        const spaces = matrix.getLogicalSpace();\n        if (value && spaces[type] !== value) {\n            type === HEIGHT ? matrix.setAvailableSpace(spaces.width, value) :\n                matrix.setAvailableSpace(value, spaces.height);\n        }\n    }\n}\n\nconst setAvailableSpace = (matrix, widths, heights) => {\n    matrix.forEach((row, rIdx) => {\n        row.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(widths[cIdx], heights[rIdx]);\n        });\n    });\n};\n\nconst setViewSpaces = (layout, pointerType, viewSpaces) => {\n    let pointer = layout.config()[`${pointerType}Pointer`];\n    if (viewSpaces.length - 1 < pointer) {\n        pointer = 0;\n        layout.config({ [`${pointerType}Pointer`]: pointer });\n    }\n    return pointer;\n};\n\n/**\n * Computes the measurements of space for all matrices in the\n * layout\n *\n * @param {Object} layout Instance of grid layout\n * @return {Object} set of measurements for the layout\n */\nexport const computeLayoutMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const {\n        width,\n        height\n    } = layout.measurement();\n    const {\n        border\n    } = layout.config();\n    const matrices = layout.matrices();\n    const {\n        top,\n        bottom\n    } = matrices;\n\n    // Get width of row matrix\n    const rowMatrixWidth = getMatrixMeasurement(rowMatrix, WIDTH);\n    const maxRowMatrixWidth = Math.min(rowMatrixWidth, width / 2);\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Set width for column matrix\n    const columnMatrixWidth = width - maxRowMatrixWidth - borderWidth;\n\n    const maxColumnMatrixHeight = Math.min(columnMatrix.getLogicalSpace().height, height / 2);\n\n    columnMatrix.setAvailableSpace(columnMatrixWidth, maxColumnMatrixHeight);\n    const columnViewPages = columnMatrix.getViewableSpaces();\n\n    setViewSpaces(layout, COLUMN, columnViewPages);\n\n    // Figuring out total space needed by current view space\n    const columnViewSpace = columnViewPages[layout.config().columnPointer];\n\n    // Getting height of column matrix\n    const columnMatrixHeight = columnViewSpace.height.primary + columnViewSpace.height.secondary;\n\n    // Set height for row matrix\n    const rowMatrixHeight = height - columnMatrixHeight;\n\n    rowMatrix.setAvailableSpace(maxRowMatrixWidth, rowMatrixHeight);\n    // Get heights of each cell of row matrix\n    const rowViewableSpaces = rowMatrix.getViewableSpaces();\n    setViewSpaces(layout, ROW, rowViewableSpaces);\n    const rowHeights = [].concat(...rowViewableSpaces.map(e => e.rowHeights.primary));\n    const rowWidthsPrimary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.primary));\n    const rowWidthsSecondary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.secondary));\n    const columnViewableSpaces = columnMatrix.getViewableSpaces();\n    // Get widths of each cell of column matrix\n    const columnWidths = [].concat(...columnViewableSpaces.map(e => e.columnWidths.primary));\n    const columnHeightsPrimary = columnViewableSpaces[0].rowHeights.primary;\n\n    const columnHeightsSecondary = [].concat(...columnViewableSpaces.map(e => e.rowHeights.secondary));\n\n    // Setting the available space for each cell in the centre matrix\n    centerMatrix.forEach((matrix, rIdx) => {\n        matrix.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(columnWidths[cIdx] - borderWidth, rowHeights[rIdx] - borderWidth);\n        });\n    });\n    setAvailableSpace(top[0], rowWidthsPrimary, columnHeightsPrimary);\n    setAvailableSpace(top[2], rowWidthsSecondary, columnHeightsPrimary);\n    setAvailableSpace(bottom[0], rowWidthsPrimary, columnHeightsSecondary);\n    setAvailableSpace(bottom[2], rowWidthsSecondary, columnHeightsSecondary);\n\n    return {\n        rowMatrixHeight,\n        rowMatrixWidth,\n        columnMatrixHeight,\n        columnMatrixWidth\n    };\n};\n\n/**\n * Gets view matrices based on current pointers for row and column\n *\n * @param {Object} layout instance of layout\n * @param {number} rowPointer current row pointer\n * @param {number} columnPointer current column pointer\n * @return {Object} returns the view matrix and its relevant information\n */\nexport const getViewMatrices = (layout, rowPointer, columnPointer) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const matrices = layout.matrices();\n    const rowMatrices = rowMatrix.getViewableMatrices();\n    const columnMatrices = columnMatrix.getViewableMatrices();\n    const centralMatrixPointer = {\n        row: 0,\n        column: 0\n    };\n\n    for (let i = rowPointer - 1; i >= 0; i--) {\n        const length = Math.max(rowMatrices[i].primaryMatrix.length,\n            rowMatrices[i].secondaryMatrix.length);\n        centralMatrixPointer.row += length;\n    }\n     /* istanbul ignore next */\n    for (let i = columnPointer - 1; i >= 0; i--) {\n        const matrix = columnMatrices[i];\n        const { primaryMatrix, secondaryMatrix } = matrix;\n        const length = Math.max(primaryMatrix[0] ? primaryMatrix[0].length : 0,\n            secondaryMatrix[0] ? secondaryMatrix[0].length : 0);\n        centralMatrixPointer.column += length;\n    }\n\n    matrices.top[1] = columnMatrices[columnPointer].primaryMatrix;\n    matrices.bottom[1] = columnMatrices[columnPointer].secondaryMatrix;\n\n    matrices.center[0] = rowMatrices[rowPointer].primaryMatrix;\n    matrices.center[2] = rowMatrices[rowPointer].secondaryMatrix;\n\n    const rowMatrixLen = Math.max(matrices.center[0].length, matrices.center[2].length);\n     /* istanbul ignore next */\n    const columnMatrixLen = Math.max(matrices.top[1][0] ? matrices.top[1][0].length : 0, matrices.bottom[1][0] ?\n            matrices.bottom[1][0].length : 0);\n    matrices.center[1] = centerMatrix.slice(centralMatrixPointer.row, centralMatrixPointer.row + rowMatrixLen)\n        .map(matrix => matrix.slice(centralMatrixPointer.column, centralMatrixPointer.column + columnMatrixLen));\n\n    return {\n        matrices,\n        rowPages: rowMatrices.length,\n        columnPages: columnMatrices.length\n    };\n};\n/**\n * Returns measurements of the cells of the current matrix\n *\n * @param {Object} layout instance of layout\n * @return {Object} returns the measurements for current view matrix\n */\nexport const getViewMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const {\n        columnPointer,\n        rowPointer\n    } = layout.config();\n\n    const rowSpaces = rowMatrix.getViewableSpaces()[rowPointer];\n    const rowMatrixWidth = rowSpaces.width;\n    const { primary: leftWidth, secondary: rightWidth } = rowMatrixWidth;\n\n    const colSpaces = columnMatrix.getViewableSpaces()[columnPointer];\n\n    const columnMatrixHeight = colSpaces.height;\n    const { primary: topHeight, secondary: bottomHeight } = columnMatrixHeight;\n\n    const centerHeight = rowSpaces.rowHeights.primary.reduce((t, n) => t + n);\n    const centerWidth = colSpaces.columnWidths.primary.reduce((t, n) => t + n);\n\n    return {\n        viewWidth: [leftWidth, centerWidth, rightWidth],\n        viewHeight: [topHeight, centerHeight, bottomHeight]\n    };\n};\n","/**\n * This file declares a table that can be extended to create a Datagrid, crosstab\n * and man other visualzations that require a tabular structure.\n */\n\nimport { getUniqueId } from 'muze-utils';\nimport GenericLayout from '../generic-layout';\nimport { DEFAULT_CONFIGURATION, DEFAULT_MEASUREMENTS } from './defaults';\nimport {\n    renderMatrices\n} from './renderer';\nimport { generateVisualMatrices } from './layout-helper';\nimport { computeLayoutMeasurements, getViewMeasurements, getViewMatrices } from './computations';\n/**\n * This class is used to create a tabular structure that\n * can house charts and values.\n *\n * @class GridLayout\n */\nexport default class GridLayout extends GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} matrices Set of upto 9 matrices containing the cells to be rendered\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config external configurations.\n     * @memberof GenericLayout\n     */\n    constructor (matrices, mountPoint, measurement, config) {\n        super(mountPoint, measurement, config);\n        this.matrices(matrices);\n        this.config(this.constructor.defaultConfig());\n        this._layoutId = getUniqueId();\n        this._viewInfo = this.constructor.defaultViewInfo();\n    }\n\n    static defaultViewInfo () {\n        return Object.assign({}, {\n            layoutDimensions: {\n                border: this.defaultConfig().border,\n                viewHeight: [0, 0, 0],\n                viewWidth: [0, 0, 0]\n            },\n            viewMatricesInfo: {\n                columnPages: 0,\n                rowPages: 0,\n                matrices: { top: [], center: [], bottom: [] }\n            }\n        });\n    }\n\n    /**\n     * Returns initial set of measurements for the grid layout\n     *\n     * @static\n     * @return {Object} Returns initial set of measurements\n     * @memberof GridLayout\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENTS;\n    }\n\n    /**\n     * Returns initialconfiguration for grid layout\n     *\n     * @static\n     * @return {Object} Returns initial configuration for grid layout\n     * @memberof GridLayout\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIGURATION;\n    }\n\n    /**\n     * This function is used to return an instance of GridLayout\n     *\n     * @return {GridLayout} Instance of grid layout.\n     * @static\n     * @memberof GridLayout\n     */\n    static create () {\n        return new GridLayout(null, null, this.defaultMeasurement(), this.defaultConfig());\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     *\n     * @param {Array} matrices Set of matrices\n     * @return {Object} Getter/Setter\n     * @memberof GridLayout\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = generateVisualMatrices(this, matrices);\n            return this;\n        }\n        return super.matrices(matrices);\n    }\n\n    /**\n     * Triggers the computations for the layout based on the matrices available\n     * This causes a reflow in the entire layout system.\n     *\n     * @return {Object} Layout instance\n     * @memberof GridLayout\n     */\n    triggerReflow () {\n        computeLayoutMeasurements(this);\n        this.setViewInformation();\n        return this;\n    }\n\n    gotoPage (type, pageNumber) {\n        const pageType = type.toLowerCase();\n        const { viewMatricesInfo } = this.viewInfo();\n        const totalPages = viewMatricesInfo[`${pageType}Pages`];\n        const pointer = Math.min(Math.max(1, pageNumber), totalPages);\n        this.config({\n            [`${pageType}Pointer`]: pointer - 1\n        });\n        this.setViewInformation();\n        this.renderGrid();\n        return this;\n    }\n\n    pages (type) {\n        const { viewMatricesInfo } = this.viewInfo();\n        const pageType = type.toLowerCase();\n        return {\n            totalPages: viewMatricesInfo[`${pageType}Pages`],\n            currentPage: this.config()[`${pageType}Pointer`] + 1\n        };\n    }\n\n    viewInfo (...viewInfo) {\n        if (viewInfo.length) {\n            this._viewInfo = viewInfo[0];\n            return this;\n        }\n        return this._viewInfo;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GridLayout\n     */\n    setViewInformation () {\n        const {\n            rowPointer,\n            columnPointer,\n            border\n        } = this.config();\n        const viewMatricesInfo = getViewMatrices(this, rowPointer, columnPointer);\n        const layoutDimensions = getViewMeasurements(this);\n        layoutDimensions.border = border;\n        this.viewInfo({\n            viewMatricesInfo,\n            layoutDimensions\n        });\n        return this;\n    }\n\n    /**\n     * Renders the layout\n     *\n     * @return {Object} current instance\n     * @memberof GridLayout\n     */\n    renderGrid (mountPoint) {\n        this.mountPoint(mountPoint);\n        if (!this.mountPoint()) {\n            return this;\n        }\n        const viewInfo = this.viewInfo();\n        const {\n                viewMatricesInfo,\n                layoutDimensions\n            } = viewInfo;\n            // Render matrices\n        renderMatrices(this, viewMatricesInfo.matrices, layoutDimensions);\n        return this;\n    }\n}\n","import RowMatrix from '../visual-matrix/row-matrix';\nimport ColumnMatrix from '../visual-matrix/column-matrix';\n\nexport const generateVisualMatrices = (context, matrices) => {\n    // Set of matrices for layout is generated starting with the left matrix\n    let leftMatrix = [];\n    let rightMatrix = [];\n    let topMatrix = [];\n    let bottomMatrix = [];\n    let begColCells;\n    let endColCells;\n    const {\n        isRowSizeEqual,\n        isColumnSizeEqual,\n        gutterSpace,\n        distribution,\n        border,\n        breakPage,\n        priority\n    } = context.config();\n    const {\n        minUnitHeight,\n        minUnitWidth\n    } = context.measurement();\n    const { top, center, bottom } = matrices;\n    const [topLeft, topColumns, topRight] = top;\n    const [leftRows, valueMatrix, rightRows] = center;\n    const [bottomLeft, bottomColumns, bottomRight] = bottom;\n\n    if (leftRows.length > 0) {\n        // If no left matrix is present, context will be empty\n        leftMatrix = [...topLeft, ...leftRows, ...bottomLeft];\n    }\n    if (rightRows.length > 0) {\n        // If no right matrix is present, context will be empty\n        rightMatrix = [...topRight, ...rightRows, ...bottomRight];\n    }\n    if (topColumns.length > 0 && topColumns[0].length > 0) {\n        // If no top matrix is present, context will be empty\n        topMatrix = topColumns.map((d, i) => [...topLeft[i], ...d, ...topRight[i]]);\n    }\n    if (bottomColumns.length > 0 && bottomColumns[0].length > 0) {\n        // If no bottom matrix is present, context will be empty\n        bottomMatrix = bottomColumns.map((d, i) => [...bottomLeft[i], ...d, ...bottomRight[i]]);\n    }\n\n    context.rowMatrix(new RowMatrix([leftMatrix, rightMatrix], {\n        isDistributionEqual: isRowSizeEqual,\n        distribution: distribution.rows,\n        gutter: gutterSpace.rows,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.row,\n        breakPage: breakPage.rows.map(e => e + Math.max(topLeft.length, topRight.length)),\n        extraCellLengths: [topLeft.length, bottomLeft.length]\n    }));\n\n    if (topLeft.length > 0) {\n        begColCells = topLeft[0].length;\n    } else {\n        begColCells = bottomLeft.length > 0 ? bottomLeft[0].length : 0;\n    }\n\n    if (topRight.length > 0) {\n        endColCells = topRight[0].length;\n    } else {\n        endColCells = bottomRight.length > 0 ? bottomRight[0].length : 0;\n    }\n\n    context.columnMatrix(new ColumnMatrix([topMatrix, bottomMatrix], {\n        isDistributionEqual: isColumnSizeEqual,\n        distribution: distribution.columns,\n        gutter: gutterSpace.columns,\n        isTransposed: true,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.col,\n        breakPage: breakPage.columns,\n        extraCellLengths: [begColCells, endColCells]\n    }));\n    context.centerMatrix(valueMatrix);\n\n    return matrices;\n};\n","import { ERROR_MSG } from 'muze-utils';\n/**\n * An Interface to be implemented if the transaction support is necessary. This class ensures reactivity to\n * global properties.\n */\nexport default class TransactionSupport {\n    /**\n     * Property accessor for data member of the class. Data is passed to the system by calling this method.\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for width of the class. Width is passed as an integer.\n     */\n    width () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for height of the class. Height is passed as an integer.\n     */\n    height () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for config of the class. Config is passed as an object.\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n}\n","import { TOP, BOTTOM, LEFT, TITLE, SUB_TITLE, GROUP, LAYOUT, LEGEND } from '../constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const arrangeComponents = (context) => {\n    const legendConfig = context.config().legend;\n    const titleConfig = context.title()[1];\n    const subtitleConfig = context.subtitle()[1];\n    const titleLayouts = {\n        [`${TOP}-${TOP}`]: [TITLE, SUB_TITLE, GROUP],\n        [`${BOTTOM}-${BOTTOM}`]: [GROUP, SUB_TITLE, TITLE],\n        [`${TOP}-${BOTTOM}`]: [TITLE, GROUP, SUB_TITLE],\n        [`${BOTTOM}-${TOP}`]: [SUB_TITLE, GROUP, TITLE]\n    };\n    const legendLayouts = [\n        [LEGEND, LAYOUT],\n        [LAYOUT, LEGEND]\n    ];\n    const titlePosition = titleConfig.position || TOP;\n    const subtitlePosition = subtitleConfig.position || TOP;\n\n    return {\n        headers: titleLayouts[`${titlePosition}-${subtitlePosition}`],\n        legends: legendConfig.position === LEFT || legendConfig.position === TOP ?\n        legendLayouts[0] : legendLayouts[1]\n    };\n};\n","/**\n * Flag to specify whether direction is vertical.\n */\nexport const MARGIN = 'margin';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const SPACE_FIXER = 'spaceFixer';\nexport const CLASSPREFIX = 'muze';\nexport const VERTICAL_ALIGN = 'verticalAlign';\nexport const TEXT_ALIGN = 'textAlign';\nexport const IS_OFFSET = 'isOffset';\nexport const MIDDLE = 'middle';\nexport const BASELINE = 'baseline';\nexport const SHOW = 'show';\nexport const CENTER = 'center';\nexport const TEXT = 'text';\nexport const HEADER = 'header';\nexport const HEIGHT = 'height';\nexport const WIDTH = 'width';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const FIELDS = 'fields';\nexport const TRANSFORM = 'transform';\nexport const LAYER_DEF = 'layerDef';\nexport const CONFIG = 'config';\nexport const DETAIL_FIELDS = 'detailFields';\nexport const MAX_LINES = 'maxLines';\nexport const MIN_CHARS = 'minCharacters';\nexport const ROTATION = 'rotation';\n\nexport const TEXT_CELL = 'text-cell';\nexport const AXIS_CELL = 'axis-cell';\nexport const GEOM_CELL = 'geom-cell';\nexport const BLANK_CELL = 'blank-cell';\n","// eneum to refer to simple cell\nexport const SIMPLE = 'simple';\n// eneum to refer to header cell\nexport const TEXT = 'text';\n// enum to refer to axis cell\nexport const AXIS = 'axis';\n// enum to refer to visual cell\nexport const GEOM = 'geom';\n// enum to refer blank cell\nexport const BLANK = 'blank';\n","import {\n    ERROR_MSG,\n    getUniqueId,\n    mergeRecursive\n} from 'muze-utils';\nimport { SIMPLE } from './enums/cell-type';\n\n/**\n * This file declares a class that is used as an interface to create new\n * SimpleCell elements.\n * @module SimpleCell\n */\n/**\n * Base class for all table cells.\n *\n * @interface\n * @class SimpleCell\n */\nclass SimpleCell {\n\n    /**\n     * Creates an instance of SimpleCell.\n     *\n     * @param {*} config The input configuration.\n     * @memberof SimpleCell\n     */\n    constructor (config) {\n        this._id = getUniqueId();\n\n        const defConfig = mergeRecursive({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(defConfig, config || {});\n\n        this._mount = null;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     */\n    get type () {\n        return SIMPLE;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     * @return {Object} Default config for the placeholder\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the value contained by the SimpleCell.\n     *\n     * @memberof SimpleCell\n     */\n    valueOf () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a unique identifier for the instance used\n     * to control selective rendering.\n     *\n     * @memberof SimpleCell\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized representation of the instance.\n     *\n     * @memberof SimpleCell\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns an object with width and height fields\n     * specifying the space taken up by this metod.\n     *\n     * @memberof SimpleCell\n     */\n    getLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Method used to set the space available to render the SimpleCell\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @memberof SimpleCell\n     */\n    setAvailableSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    remove () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n\nexport default SimpleCell;\n","/**\n * This file exports variables that are used as defaults for\n * the placeholders\n */\nimport * as CONSTANTS from './constants';\n\n /**\n * Default Configuration for the cells\n * @return {Object} Default configuration\n */\nexport const DEFAULT_CONFIG = {\n    [CONSTANTS.MARGIN]: {\n        [CONSTANTS.LEFT]: 0,\n        [CONSTANTS.RIGHT]: 0,\n        [CONSTANTS.TOP]: 0,\n        [CONSTANTS.BOTTOM]: 0\n    },\n    [CONSTANTS.SPACE_FIXER]: 2,\n    [CONSTANTS.IS_OFFSET]: false,\n    [CONSTANTS.VERTICAL_ALIGN]: null,\n    [CONSTANTS.TEXT_ALIGN]: CONSTANTS.CENTER,\n    [CONSTANTS.SHOW]: true,\n    [CONSTANTS.MAX_LINES]: 0,\n    [CONSTANTS.MIN_CHARS]: 0,\n    [CONSTANTS.ROTATION]: null\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { GEOM, TEXT, AXIS, BLANK } from './enums/cell-type';\n\nconst DEFAULT_PROPS = {\n    mount: {},\n    availHeight: {},\n    availWidth: {},\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config, value)\n    },\n    logicalSpace: {},\n    minSpacing: {},\n    source: {}\n};\n\nconst geomProps = {\n    data: {},\n    caption: {},\n    config: {},\n    axes: {\n        sanitization: (context, value) => Object.assign(context._axes, value)\n    },\n    facetByFields: {},\n    fields: {},\n    transform: {},\n    layerDef: {},\n    detailFields: {}\n};\n\nconst textProps = {\n    smartText: {}\n};\nexport const PROPS = {\n    [GEOM]: mergeRecursive(geomProps, DEFAULT_PROPS),\n    [TEXT]: mergeRecursive(textProps, DEFAULT_PROPS),\n    [AXIS]: DEFAULT_PROPS,\n    [BLANK]: DEFAULT_PROPS\n};\n","/**\n * This file declares a class that represents a table cell\n * used to house an axis.\n * @module VisualCell\n */\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport { CLASSPREFIX, HEIGHT, WIDTH, AXIS_CELL } from './enums/constants';\nimport SimpleCell from './simple-cell';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { AXIS } from './enums/cell-type';\nimport { PROPS } from './props';\n\n/**\n * Computes the logical space of the an axis instance within an axis cell\n *\n * @param {Object} context Required to get the needed parameters to compute axis space\n * @return {Object} Returns the logical space for axis\n */\nconst computeAxisSpace = (context) => {\n    let logicalWidth;\n    let logicalHeight;\n    const axis = context.source();\n    const {\n        spaceFixer,\n        margin\n    } = context.config();\n    const {\n        width,\n        height\n    } = axis.getLogicalSpace();\n    const {\n            show\n        } = axis.config();\n    if (show === true) {\n        logicalHeight = Math.floor(height + margin.top + margin.bottom + spaceFixer);\n        logicalWidth = Math.floor(width + margin.left + margin.right + spaceFixer);\n    } else {\n        [logicalWidth, logicalHeight] = [width, height];\n    }\n    return {\n        width: logicalWidth,\n        height: logicalHeight\n    };\n};\n\n/**\n * Represents an axis cell.\n *\n * @class Axis\n */\nclass AxisCell extends SimpleCell {\n\n    /**\n     * Creates an instance of AxisCell.\n     *\n     * @param {Object} config The input config.\n     * @memberof AxisCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._axis = null;\n        this._availHeight = null;\n        this._availWidth = null;\n        this._logicalSpace = null;\n\n        generateGetterSetters(this, PROPS[AXIS]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof AxisCell\n     */\n    get type () {\n        return AXIS;\n    }\n\n    /**\n     * This method return the value conatined by this SimpleCell.\n     *\n     * @return {SimpleAxis | ColorAxis} Instance of SimpleAxis or ColorAxis.\n     * @memberof AxisCell\n     */\n    valueOf () {\n        return this.source().id;\n    }\n\n    /**\n     * This method return the unique identififer of the axis\n     *\n     * @return {string} Id of the axis.\n     * @memberof AxisCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Retrns the serialized representation of this cell.\n     *\n     * @return {Object}Object with serializable props.\n     * @memberof AxisCell\n     */\n    serialize () {\n        return {\n            type: AXIS,\n            axis: this.source().serialize()\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof AxisCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * return the space taken up by an axis element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof AxisCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeAxisSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @return {Instance} Returns current Instance\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        const {\n            margin,\n            isOffset\n        } = this.config();\n\n        if (width || height) {\n            this.source().setAvailableSpace(width, height, margin, isOffset);\n            this.source().logicalSpace(null);\n        } else {\n            this.source().resetLogicalSpace();\n        }\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the axis inside the axis cell.\n     *\n     * @param {HTMLElement} mount The mount point.\n     * @return {Selection} node where axis mounted\n     * @memberof AxisCell\n     */\n    /* istanbul ignore next */render (mount) {\n        if (!mount) {\n            return this;\n        }\n        const axis = this.source();\n        const availHeight = this.availHeight();\n        const availWidth = this.availWidth();\n        const {\n            margin\n        } = this.config();\n        const {\n            top,\n            bottom,\n            left,\n            right\n        } = margin;\n        const {\n            show\n        } = axis.config();\n        const wrapperDiv = makeElement(selectElement(mount), 'div', [this], `${CLASSPREFIX}-${AXIS_CELL}`);\n        const selection = makeElement(wrapperDiv, 'svg', [1], `${CLASSPREFIX}-axis-container`);\n\n        this.mount(mount);\n        if (availWidth === 0 || !availWidth) {\n            selection.attr(WIDTH, `${0}px`);\n        }\n        if (availHeight === 0 || !availHeight) {\n            selection.attr(HEIGHT, `${0}px`);\n        }\n        wrapperDiv.style(WIDTH, `${show ? Math.floor(availWidth) : 0}px`)\n                        .style(HEIGHT, `${show ? Math.floor(availHeight) : 0}px`)\n                        .style('margin-top', top)\n                        .style('margin-bottom', bottom)\n                        .style('margin-left', left)\n                        .style('margin-right', right);\n\n        axis.mount(selection.node());\n        return selection;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Current instance of AxisCell\n     * @memberof AxisCell\n     */\n    remove () {\n        this.source() && this.source().remove();\n        this.mount() && this.mount().remove();\n        return this;\n    }\n}\n\nexport default AxisCell;\n\n","/**\n * This file declares a class that represents a BLANK element in a  table.\n * @module VisualCell\n */\nimport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    generateGetterSetters\n    } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { CLASSPREFIX, BLANK_CELL } from './enums/constants';\nimport { BLANK } from './enums/cell-type';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { PROPS } from './props';\n\n/**\n * Represents a table haeder.\n *\n * @class BLANK\n */\nclass BlankCell extends SimpleCell {\n\n    /**\n     * Creates an instance of BLANK.\n     * @param {Object} config The input configuration.\n     * @memberof BLANK\n     */\n    constructor (config) {\n        super(config);\n\n        generateGetterSetters(this, PROPS[BLANK]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof BlankCell\n     */\n    get type () {\n        return BLANK;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof BlankCell\n     */\n    valueOf () {\n        return this.id;\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof BlankCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the BLANK cell.\n     *\n     * @return {string} The unique identifier for the BLANK.\n     * @memberof BlankCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof BLANK\n     */\n    serialize () {\n        return {\n            type: BLANK\n        };\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof BLANK\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            return {\n                width: this.width || 0,\n                height: this.height || 0\n            };\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the BLANK cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof BLANK\n     */\n    /* istanbul ignore next */render (mount) {\n        if (mount) {\n            const { style } = this.config();\n            // append span element to mount point\n            this.mount(mount);\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id]);\n            elem.classed(`${CLASSPREFIX}-${BLANK_CELL}`, true);\n            elem.style('width', `${this.availWidth()}px`);\n            elem.style('height', `${this.availHeight()}px`);\n            elem.html('');\n            // apply style on the returned element\n            if (style) {\n                applyStyle(elem, style);\n            }\n        } return this;\n    }\n\n    /**\n     * Removes the cell(Disposal)\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\nexport default BlankCell;\n","/**\n * This file declares a class that represents a Text element in a  table.\n * @module VisualCell\n */\n\nimport {\n    selectElement,\n    makeElement,\n    getSmartComputedStyle,\n    generateGetterSetters\n} from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { TEXT } from './enums/cell-type';\nimport { PROPS } from './props';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { CLASSPREFIX, TOP, BOTTOM, LEFT, RIGHT, HEADER, WIDTH, TEXT_CELL } from './enums/constants';\nimport './text-cell.scss';\n\nconst setSmartText = (context) => {\n    const source = context.source();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       rotation\n   } = context.config();\n    const {\n        left,\n        right,\n        top,\n        bottom\n     } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const labelManager = context.dependencies().labelManager;\n\n    labelManager.setStyle(context._computedStyle);\n\n    !rotation && context.smartText(labelManager.getSmartText(source, availWidth, availHeight, false));\n    rotation && context.smartText(labelManager.getSmartText(source, availHeight, availWidth, true));\n\n    return context;\n};\n\n/**\n* Computes the Logical Space for the text\n*\n* @param {Object} context Required to get the needed parameters to compute text space\n* @return {Object} Logical space taken up by text\n* @memberof TextCell\n*/\nconst computeTextSpace = (context) => {\n    const { labelManager } = context.dependencies();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       show,\n       maxLines,\n       minCharacters\n   } = context.config();\n    const {\n       left,\n       right,\n       top,\n       bottom\n    } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const source = context.source();\n    const space = context.smartText();\n    const minText = new Array(minCharacters).fill('W').join('');\n    const _minTextSpace = labelManager.getOriSize(minText);\n\n    context.config({ rotation: false });\n    if (space.width > (availWidth || 0) && maxLines) {\n        space.height = space.oriTextHeight * maxLines;\n    }\n    if (availWidth && availWidth < space.width) {\n        space.width = _minTextSpace.width;\n    }\n    if (availWidth && availWidth < Math.min(_minTextSpace.width, space.oriTextWidth)) {\n        const smartSpace = labelManager.getSmartText(source, availHeight, _minTextSpace.height, true);\n        space.width = smartSpace.height;\n        space.height = smartSpace.width;\n        context.config({ rotation: true });\n        context.smartText(smartSpace);\n    }\n\n    if (show) {\n        return {\n            width: Math.ceil(space.width) + paddedWidth,\n            height: Math.ceil(space.height) + paddedHeight\n        };\n    } return {\n        width: 0,\n        height: 0\n    };\n};\n\n/**\n * Represents a table haeder.\n *\n * @class Text\n */\nclass TextCell extends SimpleCell {\n\n    /**\n     * Creates an instance of Text.\n     * @param {Object} config The input configuration.\n     * @param {string} dependencies Dependencies for the class(labelManager)\n     * @memberof Text\n     */\n    constructor (config, dependencies) {\n        super(config);\n\n        this._dependencies = dependencies;\n        this._className = this._config.className ||\n                    (this._config.type === HEADER ? `${CLASSPREFIX}-${HEADER}-cell` : `${CLASSPREFIX}-${TEXT}-cell`);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'), this._className);\n        this._dependencies.labelManager.setStyle(this._computedStyle);\n        generateGetterSetters(this, PROPS[TEXT]);\n        const space = this._dependencies.labelManager.getOriSize('w');\n        this.minSpacing({ width: Math.floor(space.width * 3 / 4), height: Math.floor(space.height / 2) });\n        setSmartText(this);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof TextCell\n     */\n    get type () {\n        return TEXT;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof TextCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the Text cell.\n     *\n     * @return {string} The unique identifier for the Text.\n     * @memberof TextCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the dependencies of the instance\n     *\n     * @return {Object} Dependencies needed by the class\n     * @memberof TextCell\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof TextCell\n     */\n    serialize () {\n        return {\n            text: this.source(),\n            type: TEXT\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof TextCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof Text\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeTextSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        setSmartText(this);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the Text cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof Text\n     */\n    render (mount) {\n        const availWidth = this.availWidth();\n        const availHeight = this.availHeight();\n        const {\n            margin,\n            show,\n            verticalAlign,\n            textAlign,\n            rotation\n        } = this.config();\n\n        this.mount(mount);\n        if (show) {\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id], `${CLASSPREFIX}-${TEXT_CELL}`);\n            const vAlign = verticalAlign || rotation ? 'middle' : 'top';\n            const {\n                width,\n                height\n            } = this.smartText();\n            const {\n                height: minHeightSpace\n            } = this.minSpacing();\n            const translation = {\n                top: width + minHeightSpace / 2,\n                middle: width / 2 + minHeightSpace,\n                bottom: minHeightSpace\n            };\n\n            container.style('vertical-align', vAlign);\n\n            // Set class name\n            elem.classed(this._className, true);\n\n            // Apply styles\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            elem.style('transform', rotation ? `translate(${height / 2}px,\n                ${translation[vAlign]}px) rotate(-90deg)` : '');\n            elem.style(WIDTH, availWidth ? `${availWidth}px` : '100%');\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((type) => {\n                elem.style(`padding-${type}`, `${margin[type]}px`);\n            });\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            // set the text as the innerHTML\n            this._dependencies.labelManager.setStyle(this._computedStyle);\n            elem.html(this._dependencies.labelManager.getSmartText(this.source(), availWidth, availHeight, true).text);\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\n\nexport default TextCell;\n","/**\n * This file declares a class that is used to represent a table cell\n * that houses a visual unit.\n * @module VisualCell\n */\n\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { GEOM } from './enums/cell-type';\nimport { PROPS } from './props';\nimport {\n    CLASSPREFIX, HEIGHT, WIDTH, DATA, AXES, FACET_BY_FIELDS, FIELDS, TRANSFORM, LAYER_DEF, CONFIG, GEOM_CELL,\n    DETAIL_FIELDS\n} from './enums/constants';\nimport { DEFAULT_CONFIG } from './enums/defaults';\n\n/**\n * Calculates the logical space of the cell\n *\n * @param {Object} context Required to get the needed parameters to compute unit space\n * @return {Object} Logical space taken up by the unit\n * @memberof GeomCell\n */\nconst computeGeomSpace = (context) => {\n    const config = context.source().config();\n    const { width, height } = config;\n    return {\n        width: Math.ceil(width),\n        height: Math.ceil(height + context.getCaptionSpace().height)\n    };\n};\n\n /**\n * This class represents a SimpleCell for visual unit.\n *\n * @class GeomCell\n */\nclass GeomCell extends SimpleCell {\n\n    /**\n     * Creates an instance of GeomCell.\n     * @param {Object} config The input configuration.\n     * @memberof GeomCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._unit = null;\n        this._layers = null;\n        this._axes = {};\n        this._datamodel = {};\n        this._facetByFields = {};\n        this._fields = null;\n        this._transform = null;\n        this._caption = null;\n\n        generateGetterSetters(this, PROPS[GEOM]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof GeomCell\n     */\n    get type () {\n        return GEOM;\n    }\n\n    /**\n     * This method return the value contained by this cell.\n     *\n     * @return {VisualUnit} Instance of visual unit contained by visual unit.\n     * @memberof GeomCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return the id of the\n     * visual unit housed by this cell.\n     *\n     * @return {string} The unique id of the visual unit.\n     * @memberof GeomCell\n     */\n    get id () {\n        return this.source().id();\n    }\n\n    /**\n     * This method return a serialized representation of\n     * this instance.\n     *\n     * @return {Object} Object with serializable props.\n     * @memberof GeomCell\n     */\n    serialize () {\n        return {\n            type: GEOM,\n            unit: this.source().serialize(),\n            caption: this.caption()\n        };\n    }\n\n    /**\n     * return the default configuration for the geom cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof GeomCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * Updates the model based on the changed parameters\n     *\n     * @return {Instance} return instance\n     * @memberof GeomCell\n     */\n    updateModel () {\n        const unit = this.source();\n        unit.lockModel();\n        [LAYER_DEF, TRANSFORM, AXES, FIELDS, CONFIG, DATA, AXES, FACET_BY_FIELDS, DETAIL_FIELDS].forEach((prop) => {\n            this[prop]() && unit[prop](this[prop]());\n        });\n        unit.unlockModel();\n        return this;\n    }\n\n    /**\n     * It gives the space taken by the caption of the unit\n     *\n     * @return {Object} return the space taken by caption\n     * @memberof GeomCell\n     */\n    getCaptionSpace () {\n        const caption = this.caption();\n\n        let captionSpace = { width: 0, height: 0 };\n        if (caption) {\n            captionSpace = caption.getLogicalSpace();\n        }\n        return captionSpace;\n    }\n\n    /**\n     * return the space taken up by the element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof GeomCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeGeomSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space available to\n     * render the SimpleCell.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    setAvailableSpace (width, height) {\n        const unit = this.source();\n\n        this.availWidth(width);\n        this.availHeight(height);\n        unit.lockModel();\n        unit.width(width).height(height - this.getCaptionSpace().height);\n        unit.unlockModel();\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * his method is used to render the visual unit inside the provided cell.\n     *\n     * @param {HTMLElement} mount The mountpoint in the table.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    render (mount) {\n        if (mount) {\n            this.mount(mount);\n            const availHeight = this.availHeight();\n            const availWidth = this.availWidth();\n            const caption = this.caption();\n            const wrapperDiv = makeElement(selectElement(mount), 'div', [1], `${CLASSPREFIX}-${GEOM_CELL}`);\n\n            if (caption) {\n                const captionDom = makeElement(wrapperDiv, 'div', [caption], `${CLASSPREFIX}-unit-caption`).node();\n                caption.render(captionDom);\n            }\n            const selection = makeElement(wrapperDiv, 'div', [1], `${CLASSPREFIX}-unit`);\n            wrapperDiv.style(WIDTH, `${availWidth}px`).style(HEIGHT, `${availHeight}px`);\n            selection.style(WIDTH, `${availWidth}px`)\n                            .style(HEIGHT, `${availHeight - this.getCaptionSpace().height}px`);\n            this.source().mount(selection.node());\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Object} Current instance\n     * @memberof GeomCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        this.source().remove();\n        return this;\n    }\n}\n\nexport default GeomCell;\n","import AxisCell from './axis-cell';\nimport BlankCell from './blank-cell';\nimport TextCell from './text-cell';\nimport GeomCell from './geom-cell';\nimport SimpleCell from './simple-cell';\n\nimport * as CONSTANTS from './constants';\n\nexport const DEFAULT_PLACEHOLDERS = {\n    [CONSTANTS.SIMPLE_CELL]: SimpleCell,\n    [CONSTANTS.TEXT_CELL]: TextCell,\n    [CONSTANTS.AXIS_CELL]: AxisCell,\n    [CONSTANTS.GEOM_CELL]: GeomCell,\n    [CONSTANTS.BLANK_CELL]: BlankCell\n};\n\n","export const SIMPLE_CELL = 'SimpleCell';\nexport const TEXT_CELL = 'TextCell';\nexport const AXIS_CELL = 'AxisCell';\nexport const BLANK_CELL = 'BlankCell';\nexport const GEOM_CELL = 'GeomCell';\n\n","import { DEFAULT_PLACEHOLDERS } from './defaults';\n\n/**\n * Creates a registry for the cells, which can be used for\n * setting a new cell or getting the registered cells\n *\n * @return {Object} Setters and getters for registered cells\n */\nconst cellRegistry = () => {\n    const reg = DEFAULT_PLACEHOLDERS;\n    return {\n        set: (key, def) => {\n            if (key in reg) {\n                reg[key] = def;\n            }\n            return cellRegistry;\n        },\n        get: () => reg\n    };\n};\nexport default cellRegistry;\n","import { TextCell } from '@chartshq/visual-cell';\nimport { escapeHTML } from 'muze-utils';\nimport { TOP } from '../constants';\n\n/**\n *\n *\n * @param {*} rawContent\n *\n */\nconst resolveTitleSubTitleContent = (rawContent) => {\n    if (typeof rawContent === 'function' && !rawContent._sanitize) {\n        return rawContent();\n    }\n    return escapeHTML(rawContent());\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} cellType\n * @param {*} labelManager\n * @param {*} prevCell\n *\n */\nconst headerCreator = (config, cellType, labelManager, prevCell) => {\n    const {\n        content,\n        classPrefix,\n        maxLines\n    } = config;\n    const cell = prevCell || new TextCell(\n        {\n            type: cellType === 'title' ? 'header' : 'text',\n            className: `${classPrefix}-${cellType}-cell`\n        }, {\n            labelManager\n        })\n     .config({ maxLines }).minSpacing({ width: 0, height: 0 });\n\n    cell.source(content);\n    cell._minTickDiff = { height: 0, width: 0 };\n    let margin = {};\n    if (config.position === TOP) {\n        margin = { top: 0, bottom: config.padding };\n    } else {\n        margin = { top: config.padding, bottom: 0 };\n    }\n    cell.config({ margin });\n    return {\n        height: cell.getLogicalSpace().height,\n        cell\n    };\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} type\n * @param {*} labelManager\n * @param {*} cell\n *\n */\nconst createHeading = (config, type, labelManager, prevCell) => {\n    if (!config) { return ''; }\n\n    return headerCreator(\n        config,\n        type,\n        labelManager,\n        prevCell\n    );\n};\n\n/**\n *\n *\n * @param {*} context\n */\nexport const createHeaders = (context, canvasHeight, canvasWidth) => {\n    let headerHeight = 0;\n    const headers = {};\n\n    canvasHeight >= 200 && canvasWidth >= 200 && ['title', 'subtitle'].forEach((type) => {\n        const headerOptions = context[type]();\n        const content = resolveTitleSubTitleContent(headerOptions[0]);\n        if (content.length) {\n            const config = headerOptions[1];\n\n            config.width = context.width();\n            config.height = context.height();\n            config.classPrefix = context.config().classPrefix;\n            config.content = content;\n            config.classPrefix = context.config().classPrefix;\n\n            const { height, cell } = createHeading(config, type, context.dependencies().smartlabel,\n                context[`${type}Cell`]);\n\n            headers[`${type}Cell`] = cell;\n            context._composition[type] = cell;\n            headerHeight += height + config.padding;\n        }\n    });\n    return { headerHeight, headers };\n};\n\n","import { TextCell, AxisCell } from '@chartshq/visual-cell';\nimport {\n    VERTICAL, HORIZONTAL, LEFT, RIGHT, LEGEND_TYPE_MAP, PADDING, BORDER, MARGIN\n} from '../constants';\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n *\n */\nexport const legendCreator = (canvas) => {\n    let LegendCls;\n    const dataset = [];\n    const axes = canvas.getRetinalAxes();\n\n    Object.entries(axes).forEach((axisInfo) => {\n        const scale = axisInfo[1][0];\n        const scaleType = axisInfo[0];\n        const scaleProps = canvas[scaleType]();\n\n        if (scaleProps.field && scale) {\n            const {\n                type,\n                step\n            } = scale.config();\n\n            const stepMapper = typeof step === 'boolean' ? step : false;\n            LegendCls = LEGEND_TYPE_MAP[`${type}-${stepMapper}-${scaleType}`];\n            dataset.push({ scale, canvas, fieldName: scaleProps.field, LegendCls, scaleType });\n        }\n    });\n\n    return dataset;\n};\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n * @param {*} measurement\n * @param {*} prevLegends\n *\n */\nexport const legendInitializer = (legendConfig, canvas, measurement, prevLegends) => {\n    const legends = [];\n    const {\n        height,\n        width,\n        headerHeight\n    } = measurement;\n    const {\n        position,\n        align\n    } = legendConfig;\n\n    const legendInfo = legendCreator(canvas);\n\n    legendInfo.forEach((dataInfo, index) => {\n        let legend = {};\n\n        const legendMeasures = {};\n        const {\n                LegendCls,\n                scale,\n                fieldName,\n                scaleType\n            } = dataInfo;\n        const config = legendConfig[scaleType] || {};\n        const title = config.title || {};\n        title.text = title.text || fieldName;\n        if (config.show) {\n            config.position = position;\n            config.align = align;\n\n            if (prevLegends[index]) {\n                legend = prevLegends[index].legend;\n            } else {\n                legend = LegendCls.create({\n                    labelManager: canvas._dependencies.smartlabel,\n                    cells: {\n                        AxisCell, TextCell\n                    }\n                });\n            }\n            legendMeasures.maxHeight = align === VERTICAL ? (height - headerHeight) : height * 0.2;\n            legendMeasures.maxWidth = align === HORIZONTAL ? width : width * 0.2;\n            legendMeasures.width = Math.min(legendMeasures.maxWidth, config.width);\n            legendMeasures.height = Math.min(legendMeasures.maxHeight, config.height);\n\n            [PADDING, BORDER, MARGIN].forEach((e) => {\n                legendMeasures[e] = config[e];\n            });\n            legend.scale(scale)\n                            .title(title)\n                            .fieldName(fieldName)\n                            .config(config)\n                            .metaData(canvas.composition().visualGroup.getGroupByData().project([fieldName]))\n                            .measurement(legendMeasures)\n                            .canvasAlias(canvas.alias())\n                            .setLegendMeasures();\n\n            legends.push({ canvas, legend, scaleType });\n        }\n    });\n    return legends;\n};\n\n/**\n *\n *\n * @param {*} legends\n * @param {*} legendConfig\n * @param {*} availableHeight\n * @param {*} availableWidth\n *\n */\nexport const getLegendSpace = (legends, legendConfig, availableHeight, availableWidth) => {\n    const legendMeasures = legends.map(legendInfo => legendInfo.legend.measurement());\n    const legendSpace = { width: 0, height: 0 };\n\n    legendMeasures.forEach((space) => {\n        let height = 0;\n        let width = 0;\n        width = Math.min(space.width, space.maxWidth);\n        height = Math.min(space.height, space.maxHeight);\n\n        if (legendConfig.align === HORIZONTAL) {\n            if (legendSpace.width + width > availableWidth) {\n                legendSpace.width = availableWidth;\n                legendSpace.height += height;\n            } else {\n                legendSpace.width += width;\n                legendSpace.height = Math.max(legendSpace.height, height);\n            }\n        } else if (legendSpace.height + height > availableHeight) {\n            legendSpace.height = height;\n            legendSpace.width += width;\n        } else {\n            legendSpace.height += height;\n            legendSpace.width = Math.max(legendSpace.width, width);\n        }\n    });\n    if (legendConfig.align === HORIZONTAL) {\n        legendSpace.width = availableWidth;\n    }\n    return legendSpace;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} headerHeight\n *\n */\nexport const createLegend = (context, headerHeight, height, width) => {\n    const measurement = {\n        height,\n        width,\n        headerHeight\n    };\n    const { legend } = context.config();\n    const { show, position } = legend;\n\n    legend.classPrefix = context.config().classPrefix;\n    const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n\n    legend.show = show ? ((align === VERTICAL && width > 200) || (align === HORIZONTAL && height > 200)) : show;\n    legend.align = align;\n    return legendInitializer(legend, context, measurement, context.legends || []);\n};\n","export default class LayoutComponent {\n    constructor (name, dimensions, seed) {\n        this._seed = seed;\n        this._boundBox = {\n            height: dimensions.height,\n            width: dimensions.width,\n            top: null,\n            left: null\n        };\n        this._renderAt = null;\n        this._alignWith = null;\n        this._alignment = null;\n        this._target = null;\n        this._position = null;\n        this._componentName = name;\n        this._className = null;\n    }\n\n    getLogicalSpace () {\n        throw new Error('getLogicalSpace is not defined');\n    }\n\n    setSpatialConfig () {\n        throw new Error('setSpatialSpace is not defined');\n    }\n\n    name (param) {\n        if (param) {\n            this._componentName = param;\n        }\n        return this._componentName;\n    }\n\n    target (param) {\n        if (param) {\n            this._target = param;\n        }\n        return this._target;\n    }\n\n    position (param) {\n        if (param) {\n            this._position = param;\n        }\n        return this._position;\n    }\n\n    alignment (param) {\n        if (param) {\n            this._alignment = param;\n        }\n        return this._alignment;\n    }\n\n    alignWith (param) {\n        if (param) {\n            this._alignWith = param;\n        }\n        return this._alignWith;\n    }\n\n    renderAt (param) {\n        if (param) {\n            this._renderAt = param;\n        }\n        return this._renderAt;\n    }\n\n    boundBox (param) {\n        if (param) {\n            Object.assign(this._boundBox, param);\n        }\n        return this._boundBox;\n    }\n\n    className (param) {\n        if (param) {\n            this._className = param;\n        }\n        return this._className;\n    }\n\n    draw () {\n        throw new Error('draw is not defined');\n    }\n  }\n\n","import LayoutComponent from './layoutComponent';\n\nclass DummyComponent extends LayoutComponent {\n    getLogicalSpace () {\n        return {\n            width: this.boundBox().width,\n            height: this.boundBox().height\n        };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n        return this;\n    }\n\n    draw () {\n        if (!this.component) {\n            throw new Error(`Component not set for ${this.componentName}`);\n        }\n        this.component.mount(document.getElementById(this.renderAt)); // Change the draw method to component draw\n        return this;\n    }\n}\n\nexport default DummyComponent;\n","import { DEFAULT_CONFIG } from '../../../../muze/src/defaults';\n\nconst DEFAULT_WIDTH = 600;\nconst DEFAULT_HEIGHT = 400;\nconst DEFAULT_CLASS_NAME = `${DEFAULT_CONFIG.classPrefix}-layout-container-component`;\nconst NODE_PREFIX = `${DEFAULT_CONFIG.classPrefix}-layout-container`;\n\nexport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT,\n  DEFAULT_CLASS_NAME,\n  NODE_PREFIX\n};\n","export default class DefinitionModel {\n    constructor (config) {\n        this._host = config.host || null;\n        this._cut = config.cut || null;\n        this._ratioWeight = config.ratioWeight === 0 ? 0 : config.ratioWeight || 1;\n        this._preferred = config.preferred || false;\n        this._lanes = config.lanes || [];\n        this._remainingHeight = 0;\n        this._remainingWidth = 0;\n    }\n\n    host (host) {\n        if (host) {\n            this._host = host;\n        }\n        return this._host;\n    }\n\n    preferred (preferred) {\n        if (preferred) {\n            this._preferred = preferred;\n        }\n        return this._preferred;\n    }\n\n    cut (cut) {\n        if (cut) {\n            this._cut = cut;\n        }\n        return this._cut;\n    }\n\n    ratioWeight (ratioWeight) {\n        if (ratioWeight) {\n            this._ratioWeight = ratioWeight;\n        }\n        return this._ratioWeight;\n    }\n\n    lanes (lanes) {\n        if (lanes) {\n            this._lanes = lanes;\n        }\n        return this._lanes;\n    }\n\n    remainingHeight (remainingHeight) {\n        if (remainingHeight) {\n            this._remainingHeight = remainingHeight;\n        }\n        return this._remainingHeight;\n    }\n\n    remainingWidth (remainingWidth) {\n        if (remainingWidth) {\n            this._remainingWidth = remainingWidth;\n        }\n        return this._remainingWidth;\n    }\n}\n","import { NODE_PREFIX } from '../../constants/defaults';\nimport DefinitionModel from '../definition-manager/definitionModel';\nimport DummyComponent from '../../layout-component/dummy-component';\n/**\n * Compares two strings in lowercase\n *\n * @export\n * @param {string} value the value to be compared\n * @param {string} compareTo whom the value would be compared\n * @return {boolean} true if values are equal\n */\nexport function isEqual (value, compareTo) {\n    if (typeof value !== 'string' || typeof compareTo !== 'string') {\n        throw new TypeError('value and compareTo must be string');\n    }\n    return value.toLowerCase() === compareTo.toLowerCase();\n}\n\nexport const getNodeId = (() => {\n    let _uid = 0;\n    return () => `${NODE_PREFIX}-${++_uid}`;\n})();\n\nexport function yExtraSpace (node) {\n    let smallestHeight = 0;\n    if (node.getCutType() === 'v') {\n        smallestHeight = smallestExtraHeightHorizontally(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'h') {\n        node.children().forEach((child) => {\n            smallestHeight += yExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerHeight = node.boundBox().height;\n        const hostHeight = node.model().host().getLogicalSpace().height;\n\n        smallestHeight = containerHeight - hostHeight;\n        if (smallestHeight < 0) {\n            smallestHeight = 0;\n        }\n    } else {\n        smallestHeight = 0;\n    }\n    return smallestHeight;\n}\n\nexport function smallestExtraHeightHorizontally (node) {\n    let smallestHeight = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const h = yExtraSpace(child);\n        if (h < smallestHeight) {\n            smallestHeight = h;\n        }\n    });\n    return smallestHeight;\n}\n\nexport function xExtraSpace (node) {\n    let smallestWidth = 0;\n    if (node.getCutType() === 'h') {\n        smallestWidth = smallestExtraWidthVertically(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'v') {\n        node.children().forEach((child) => {\n            smallestWidth += xExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerWidth = node.boundBox().width;\n        const hostWidth = node.model().host().getLogicalSpace().width;\n        smallestWidth = containerWidth - hostWidth;\n        if (smallestWidth < 0) {\n            smallestWidth = 0;\n        }\n    } else {\n        smallestWidth = 0;\n    }\n    return smallestWidth;\n}\n\nexport function smallestExtraWidthVertically (node) {\n    let smallestWidth = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const w = xExtraSpace(child);\n        if (w < smallestWidth) {\n            smallestWidth = w;\n        }\n    });\n    return smallestWidth;\n}\n\nexport function determineBoundBox (bb, i, arr, instance) {\n    if (i) {\n    // if not first sibling, take boundbox from previous sibling\n        const lastSibling = arr[i - 1];\n        const { top: _top, left: _left, height: _height, width: _width } = lastSibling.boundBox();\n        return {\n            width: bb.width,\n            height: bb.height,\n\n            top: instance.parentCut() === 'h'\n        ? _top + _height : _top,\n\n            left: instance.parentCut() === 'h'\n        ? _left : _left + _width\n        };\n    }\n  // if first sibling, take boundbox from parent\n    const { top: _top, left: _left } = instance.parent().boundBox();\n    return {\n        width: bb.width,\n        height: bb.height,\n        top: _top,\n        left: _left\n    };\n}\n\n// prepares the targetComponent Map for target Mapping ie. where a component should lie\nexport function prepareTargetComponentMap (context) {\n    context.targetComponentMap(new Map());\n    context.componentMap().forEach((value) => {\n        if (context.targetComponentMap().has(value.target())) {\n            context.targetComponentMap().get(value.target()).push(value);\n        } else {\n            const temp = [];\n            temp.push(value);\n            context.targetComponentMap().set(value.target(), temp);\n        }\n    });\n}\n\nexport function getComponent (canvasComponent, componentName) {\n    const comp = canvasComponent.find(component => component.name() === componentName);\n    return (comp && comp !== -1) ? comp : null;\n}\nexport function createPlaceHolderComponent (height, width, position) {\n    const comp = new DummyComponent(0, { height, width });\n    comp.name('placeHolder');\n    comp.position(position);\n    return comp;\n}\n\nexport function placeComponent (definitionModel, component, isPreferred = false, isGridComponent = false) {\n    let cut = '';\n    let componentRatioWidth = 1;\n    let leftOvercomponentRationWidth = 1;\n    let leftHeight = 0;\n    let leftWidth = 0;\n\n    if (!component) {\n        return { first: definitionModel, second: definitionModel };\n    }\n\n    const { height: componentHeight, width: componentWidth } = component.getLogicalSpace();\n    const position = component.position();\n    if (position === 'top' || position === 'bottom') {\n        cut = 'h';\n        componentRatioWidth = componentHeight / definitionModel.remainingHeight();\n        leftHeight = definitionModel.remainingHeight() - componentHeight;\n        leftWidth = definitionModel.remainingWidth();\n    } else {\n        cut = 'v';\n        componentRatioWidth = componentWidth / definitionModel.remainingWidth();\n        leftWidth = definitionModel.remainingWidth() - componentWidth;\n        leftHeight = definitionModel.remainingHeight();\n    }\n    leftOvercomponentRationWidth = 1 - componentRatioWidth;\n\n// update parentModel\n    definitionModel.cut(cut);\n    const firstLaneConfig = {\n        host: component.name(),\n        cut: null,\n        ratioWeight: componentRatioWidth,\n        preferred: isGridComponent ? false : isPreferred,\n        lanes: []\n    };\n    const firstLane = new DefinitionModel(firstLaneConfig);\n    firstLane.remainingHeight(componentHeight);\n    firstLane.remainingWidth(componentWidth);\n\n    const secondLaneConfig = {\n        host: null,\n        cut: null,\n        ratioWeight: leftOvercomponentRationWidth,\n        preferred: isGridComponent ? false : !isPreferred,\n        lanes: []\n    };\n    const secondLane = new DefinitionModel(secondLaneConfig);\n    secondLane.remainingHeight(leftHeight);\n    secondLane.remainingWidth(leftWidth);\n    if (isPreferred) {\n        definitionModel.lanes([firstLane]);\n    } else if (position === 'top' || position === 'left') {\n        definitionModel.lanes([firstLane, secondLane]);\n    } else {\n        definitionModel.lanes([secondLane, firstLane]);\n    }\n    return { first: firstLane, second: secondLane };\n}\n\nexport function placeGridComponent (definitionModel, gridComponents) {\n    let tempDefModel = definitionModel;\n    const rows = gridComponents.length;\n    const column = rows ? gridComponents[0].length : 0;\n    const height = gridComponents.reduce((acc, val) => (acc + val[0].getLogicalSpace().height), 0);\n\n    for (let i = 0; i < column; i++) {\n        const iscolumnPreffered = i === column - 1;\n        const columnPlaceHolderComponent = createPlaceHolderComponent(height,\n                                                    gridComponents[0][i].getLogicalSpace().width, 'left');\n        const { first, second } = placeComponent(tempDefModel, columnPlaceHolderComponent, iscolumnPreffered);\n        tempDefModel = first;\n        for (let j = 0; j < rows; j++) {\n            const rowpreffred = j === (rows - 1);\n            tempDefModel = placeComponent(tempDefModel, gridComponents[j][i], rowpreffred, true).second;\n        }\n        tempDefModel = second;\n    }\n}\n\nexport function negotiateDimension (node) {\n    let preferred;\n    let cumultiveExtraSpaceAmt = 0;\n    let alteredDim;\n    let nonAlteredDim;\n\n    const childrenLength = node.children().length;\n\n    for (let index = 0; index < childrenLength; index++) {\n        let fn;\n        let extraSpaceAmt;\n        const child = node.children()[index];\n\n        if (child.parentCut() === 'h') {\n            fn = yExtraSpace;\n            alteredDim = 'height';\n            nonAlteredDim = 'width';\n        } else {\n            fn = xExtraSpace;\n            alteredDim = 'width';\n            nonAlteredDim = 'height';\n        }\n  // if vertical then get extra height from other node and push it to the preferred node.\n  // for horizontal cut the same thing is to be done with width\n        if (child.isPreferred()) {\n    // push extra space in sink. Execute it when all non preferred space are computed.\n            preferred = child;\n\n            continue; // eslint-disable-line no-continue\n        }\n  // reduce own height and save it in a var\n        cumultiveExtraSpaceAmt += (extraSpaceAmt = fn(child));\n        child.boundBox()[alteredDim] -= extraSpaceAmt;\n  // update nonaltered dim from parent for any change which happened during negotiation\n        child.boundBox()[nonAlteredDim] = child.parent().boundBox()[nonAlteredDim];\n\n        negotiateDimension(child);\n    }\n\n    if (preferred) {\n        preferred.boundBox()[alteredDim] += cumultiveExtraSpaceAmt;\n        preferred.boundBox()[nonAlteredDim] = preferred.parent().boundBox()[nonAlteredDim];\n        negotiateDimension(preferred);\n    }\n}\n\nexport function computePosition (node) {\n    node.children().forEach((child, i, children) => {\n        const boundBox = determineBoundBox(child.boundBox(), i, children, child);\n        child.boundBox(boundBox);\n        computePosition(child);\n    });\n}\n\nexport function allocateBoundingBox (node) {\n    const totalWeight = node.children()\n                            .map(child => child.model().ratioWeight())\n                            .reduce((carry, val) => carry + val, 0);\n\n    node.children().forEach((child, i, children) => {\n        const lastSibling = children[i - 1];\n        const ratio = child.model().ratioWeight() / totalWeight;\n\n        if (child.parentCut() === 'h') {\n            child.boundBox({\n                top: i ? lastSibling.boundBox().top + lastSibling.boundBox().height : 0,\n                left: child.parent().boundBox().left,\n                height: child.parent().boundBox().height * ratio,\n                width: child.parent().boundBox().width\n            });\n        } else {\n            child.boundBox({\n                top: child.parent().boundBox().top,\n                left: i ? lastSibling.boundBox().left + lastSibling.boundBox().width : 0,\n                height: child.parent().boundBox().height,\n                width: child.parent().boundBox().width * ratio\n            });\n        }\n        allocateBoundingBox(child);\n    });\n}\n\n","import { getNodeId } from '../helper';\nimport { LayoutComponent } from '../../layout-component';\n\nclass Node {\n    constructor (data) {\n        this._model = data;\n        this._parent = null;\n        this._children = [];\n        this._parentCut = null;\n        this._boundBox = {\n            top: null,\n            left: null,\n            height: null,\n            width: null\n        };\n\n        this._id = this._model.host() instanceof LayoutComponent && this._model.host().renderAt() ?\n                    this._model.host().renderAt() :\n                    getNodeId();\n    }\n\n    addChildren (entries) {\n        this._children.push(...entries);\n        entries.forEach((e) => { e.parent(this); });\n    }\n\n    isRoot () {\n        return this._parent === null;\n    }\n\n    isLeaf () {\n        return !this._children.length;\n    }\n\n    getCutType () {\n        return this._model.cut();\n    }\n\n    isPreferred () {\n        return !!this._model.preferred();\n    }\n\n    children (children) {\n        if (children) {\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    parent (parent) {\n        if (parent) {\n            this._parent = parent;\n        }\n        return this._parent;\n    }\n\n    parentCut (parentCut) {\n        if (parentCut) {\n            this._parentCut = parentCut;\n        }\n        return this._parentCut;\n    }\n\n    id (id) {\n        if (id) {\n            this._id = id;\n        }\n        return this._id;\n    }\n\n    model (model) {\n        if (model) {\n            this._model = model;\n        }\n        return this._model;\n    }\n\n    boundBox (bound) {\n        if (bound) {\n            this._boundBox = {\n                top: bound.top,\n                left: bound.left,\n                height: bound.height,\n                width: bound.width\n            };\n        }\n        return this._boundBox;\n    }\n  /**\n     * function to search a node and update it with the config provided.\n     * @param  {Object} nodeconfig\n     */\n    updateNode (nodeconfig) {\n        if (this._id === nodeconfig._id) {\n            this._model.cut(nodeconfig.cut);\n            this._model.ratioWeight(nodeconfig.ratioWeight);\n        } else {\n            this._children.forEach((node) => {\n                if (node._id === nodeconfig._id) {\n                    node.model.cut(nodeconfig.cut);\n                    node.model.ratioWeight(nodeconfig.ratioWeight);\n                    return;\n                }\n                this.searchNode(node, nodeconfig);\n            });\n        }\n    }\n\n  // Recursive function to search a node\n    searchNode (node, nodeconfig) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeconfig._id) {\n                childNode.model().cut(nodeconfig.cut);\n                childNode.model().ratioWeight(nodeconfig.ratioWeight);\n            } else {\n                this.searchNode(childNode, nodeconfig);\n            }\n        });\n    }\n\n  /**\n     * function to delete a node from tree Structure.\n     * @param  {String} nodeId - node Id of the Node\n     */\n    delete (nodeId) {\n        this._children.forEach((node) => {\n            if (node.id() === nodeId) {\n                const index = this._children.indexOf(node);\n                this._model.lanes().splice(index, 1);\n            }\n            this.deleteSearchNode(node, nodeId);\n        });\n    }\n\n  // Recursive function to search a node\n    deleteSearchNode (node, nodeId) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeId) {\n                const index = node.children().indexOf(childNode);\n                node.model().lanes().splice(index, 1);\n            } else {\n                this.deleteSearchNode(childNode, nodeId);\n            }\n        });\n    }\n}\n\nexport default Node;\n","import Node from '../tree';\nimport {\n    allocateBoundingBox,\n    negotiateDimension,\n    computePosition\n} from '../helper';\n\nexport default class LayoutModel {\n    constructor (measurements, config) {\n        this._measurements = measurements;\n        this._config = config;\n        this._root = this.createTree(this._config, null);\n        this.setBoundBox();\n    }\n\n    createTree (config, parent) {\n        const node = new Node(config);\n        if (parent) {\n            node.parentCut(parent.getCutType());\n            parent.addChildren([node]);\n        } else {\n            this._root = node;\n        }\n        for (const lane of config.lanes()) {\n            this.createTree(lane, node);\n        }\n\n        return this._root;\n    }\n\n    setBoundBox () {\n        this._root.boundBox({\n            top: 0,\n            left: 0,\n            width: this._measurements.width,\n            height: this._measurements.height\n        });\n        allocateBoundingBox(this._root);\n    }\n\n    setHostPosition (node) {\n        node.children().forEach((child) => {\n            LayoutModel.setHostSpatialConfig(child);\n            this.setHostPosition(child);\n        });\n    }\n\n    static setHostSpatialConfig (node) {\n        const bb = node.boundBox();\n        const host = node.model().host();\n        if (host && host.setSpatialConfig) {\n            const conf = {\n                x: bb.left,\n                y: bb.top,\n                width: bb.width,\n                height: bb.height,\n                renderAt: node.id()\n            };\n            host.setSpatialConfig(conf);\n        }\n    }\n\n    negotiate () {\n        negotiateDimension(this._root);\n        computePosition(this._root);\n        return this;\n    }\n\n    broadcast () {\n        this.setHostPosition(this._root);\n        return this;\n    }\n\n    tree () {\n        return this._root;\n    }\n}\n","/* eslint no-undef: \"off\" */\n/* eslint default-case: \"off\" */\nexport class Utils {\n    static isDOMElement (element) {\n        return element instanceof Element;\n    }\n\n    static getID (element) {\n        return element.id;\n    }\n\n    static getElement (id) {\n        return document.getElementById(id);\n    }\n\n    static findContainer (data) {\n        return data.filter(coordinate => coordinate.parent == null)[0];\n    }\n  /**\n   * static method to remove the div\n   * @param  {} divId - div ID to be removed.\n   */\n    static removeDiv (divId) {\n        if (document.getElementById(divId) !== null) { document.getElementById(divId).remove(); }\n    }\n}\n","import { DEFAULT_CLASS_NAME } from '../constants/defaults';\nimport { LayoutComponent } from '../layout-component';\n\nexport default class DataPoint {\n    constructor (node) {\n        this._node = node;\n        this._className = node.model().host() instanceof LayoutComponent ?\n                            node.model().host().className() : DEFAULT_CLASS_NAME;\n    }\n\n    node () {\n        return this._node;\n    }\n\n    hasHost () {\n        return this._node.model().host() instanceof LayoutComponent;\n    }\n\n    className () {\n        return this._className || DEFAULT_CLASS_NAME;\n    }\n}\n","import { getnodePoints } from './helper';\n\nexport class DataParser {\n    constructor (data) {\n        this._data = data;\n    }\n\n    defaultDataPointLogic () {\n        const nodepoints = [];\n        getnodePoints(this._data, nodepoints);\n        return nodepoints;\n    }\n\n}\n","import DataPoint from './data-point';\n\nexport const getnodePoints = (node, nodepoints) => {\n    const datapoint = new DataPoint(node);\n    nodepoints.push(datapoint);\n    node.children().forEach((child) => {\n        getnodePoints(child, nodepoints);\n    });\n};\n","import { DataParser } from './data-parser';\n\nexport class HTMLDataAdapter extends DataParser {\n    getCoordinates () {\n        return super.defaultDataPointLogic();\n    }\n}\n","export class Renderer {\n\n    initRenderer (node, tree) {\n        node.__logicalTree = tree;\n    }\n}\n","import { HTMLDataAdapter } from '../data-adapters/html-data';\nimport { Utils } from '../utils';\nimport { Renderer } from './renderer';\n\nexport class HTMLRenderer extends Renderer {\n    constructor (data) {\n        super();\n        this._data = data;\n        this._coordinates = new HTMLDataAdapter(this._data).getCoordinates();\n    }\n\n    createhtml (mount, className) {\n        const mainDiv = mount;\n        super.initRenderer(mainDiv, this._data); // Initialise node with layout id\n        this.parentDiv = this.createAndCustomiseParent(className);\n        this._coordinates.forEach((node) => {\n            if (node.hasHost()) {\n                const host = node.node();\n                this.parentDiv.appendChild(this.createAndPositionDiv({ ...host.boundBox(),\n                    id: host.id(),\n                    className: node.className() }));\n            }\n        });\n        mainDiv.appendChild(this.parentDiv);\n    }\n\n    createAndPositionDiv (config) {\n        const { top, left, height, width, className, id } = config;\n        const existingDiv = document.getElementById(id);\n        const div = existingDiv || document.createElement('div');\n        div.style.position = 'absolute';\n        div.style.left = `${left}px`;\n        div.style.top = `${top}px`;\n        div.style.height = `${height}px`;\n        div.style.width = `${width}px`;\n        div.id = id;\n        div.className = className;\n        return div;\n    }\n\n    createAndCustomiseParent (className) {\n        const container = Utils.findContainer(this._coordinates);\n        const host = container.node();\n        const parentDiv = this.createAndPositionDiv({ ...host.boundBox(),\n            id: host.id(),\n            className: container.className() });\n        parentDiv.className = className;\n        parentDiv.style.position = 'relative';\n        return parentDiv;\n    }\n\n    coordinates () {\n        return this._coordinates;\n    }\n}\n","import { HTMLRenderer } from '../renderers/html-renderer';\nimport { LayoutComponent } from '../layout-component';\n\nexport const getChildNode = (context, config) =>\n                        context.renderer().createAndPositionDiv(config);\n\nexport const findNode = (context, nodeID) =>\n                        context.renderer().coordinates().find(point => point.node().id() === nodeID);\n\nexport const renderHTML = (context) => {\n    context.renderer(new HTMLRenderer(context.data()));\n    context.renderer().createhtml(context.mount(), context.className());\n};\n\nexport const drawLayout = (context) => {\n    switch (context.renderer()) {\n    case 'html' :\n        renderHTML(context);\n        break;\n    default:\n        renderHTML(context);\n    }\n};\n\nexport const drawComponent = (componentData) => {\n    componentData.children().forEach((node) => {\n        const host = node.model().host();\n        if (host instanceof LayoutComponent) {\n            host.draw();\n        }\n        drawComponent(node);\n    });\n};\n\nexport const removeElement = (elemID) => {\n    document.removeElement(document.getElementById(elemID));\n};\n\nexport const resolveAligment = (context, componentData) => {\n    componentData.children().forEach((component) => {\n        const host = component.model().host();\n        if (host instanceof LayoutComponent && host.alignWith()) {\n            let newNodeConfig = {};\n            const point = findNode(context, component.id()).node();\n            const node = point.boundBox();\n            const refNode = findNode(context, context.componentMap().get(host.alignWith()).renderAt())\n                                .node()\n                                .boundBox();\n            switch (host.alignment()) {\n            case 'left':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(refNode.left - node.left))\n                };\n                break;\n\n            case 'right':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(node.left + node.width - (refNode.left + refNode.width)))\n                };\n                break;\n\n            case 'top':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: Math.abs(node.height - Math.abs(refNode.top - node.top)),\n                    width: node.width\n                };\n                break;\n\n            case 'bottom':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: Math.abs(node.top - refNode.top + refNode.height),\n                    width: node.width\n                };\n                break;\n\n            case 'h-center':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: refNode.width\n                };\n                break;\n\n            case 'v-center':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: refNode.height,\n                    width: node.width\n                };\n                break;\n            default:\n                break;\n            }\n    // check if model in parent component\n            Object.assign(newNodeConfig, { id: point.id(), className: host.className() });\n            context.renderer().createAndPositionDiv(newNodeConfig);\n            context.componentMap().get(host.name()).renderAt(component.id());\n            context.componentMap().get(host.name()).boundBox({\n                height: newNodeConfig.height,\n                width: newNodeConfig.width\n            });\n            // context.renderer().parentDiv.appendChild(childNode);\n        }\n        resolveAligment(context, component);\n    });\n};\n","import { Utils } from '../utils';\nimport { drawLayout, resolveAligment, drawComponent } from './helper';\n\nexport class DrawingManager {\n    constructor (data, renderer, container) {\n        this._data = data.tree;\n        this._componentMap = data.componentMap;\n        this._layoutClassName = data.layoutClassName;\n        this._renderer = renderer;\n        this._mount = Utils.isDOMElement(container) ? container : Utils.getElement(container);\n    }\n\n    draw () {\n        drawLayout(this);\n        resolveAligment(this, this._data);\n        drawComponent(this._data);\n        return this;\n    }\n\n    data (data) {\n        if (data) {\n            this._data = data;\n        }\n        return this._data;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    className (param) {\n        if (param) {\n            this._layoutClassName = param;\n        }\n        return this._layoutClassName;\n    }\n\n    renderer (param) {\n        if (param) {\n            this._renderer = param;\n        }\n        return this._renderer;\n    }\n\n    mount (param) {\n        if (param) {\n            this._mount = param;\n        }\n        return this._mount;\n    }\n}\n","import DefinitionModel from './definitionModel';\nimport { prepareTargetComponentMap, getComponent, placeComponent, placeGridComponent } from '../helper';\n\nexport default class DefinitionManager {\n    constructor (componentMap, sequence, totalHeight, totalWidth) {\n        this._componentMap = componentMap;\n        this._prioritySequence = sequence;\n        this._totalHeight = totalHeight;\n        this._totalWidth = totalWidth;\n        this._targetComponentMap = null;\n    }\n\n    // create the config model\n    generateConfigModel () {\n        prepareTargetComponentMap(this);\n        const canvasComponent = this._targetComponentMap.get('canvas');\n        const definitionModel = new DefinitionModel({});\n        let tempDefModel = definitionModel;\n        definitionModel.remainingHeight(this._totalHeight);\n        definitionModel.remainingWidth(this._totalWidth);\n\n        let componentRef = null;\n\n        this._prioritySequence.forEach((name) => {\n            componentRef = getComponent(canvasComponent, name);\n            if (name !== 'grid') {\n                tempDefModel = placeComponent(tempDefModel, componentRef).second;\n            } else {\n                tempDefModel = placeGridComponent(tempDefModel, componentRef.component);\n            }\n        });\n        return definitionModel;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    targetComponentMap (param) {\n        if (param) {\n            this._targetComponentMap = param;\n        }\n        return this._targetComponentMap;\n    }\n}\n","import { sanitizeConfig } from './helper';\n\nexport class LayoutDef {\n    constructor () {\n        this._componentMap = new Map();\n        this._layoutDefinition = null;\n    }\n\n    addComponent (component) {\n        this._componentMap.set(component.name(), component);\n    }\n\n    layoutDefinition (def) {\n        if (def) {\n            this._layoutDefinition = def;\n        }\n        return this._layoutDefinition;\n    }\n\n    addMultipleComponent (componentArray) {\n        componentArray.forEach((comp) => {\n            this.addComponent(comp);\n        });\n    }\n\n    sanitizedDefinition () {\n        sanitizeConfig(this, this._layoutDefinition);\n        return this.layoutDefinition();\n    }\n\n    componentMap () {\n        return this._componentMap;\n    }\n    resetComponentMap () {\n        this._componentMap.clear();\n    }\n}\n","import DefinitionManager from '../layout-definition/definition-manager';\n\nexport function sanitizeConfig (context, hostObj) {\n    const hostID = hostObj.host();\n    if (hostObj.lanes() && hostObj.lanes().length) {\n        hostObj.lanes().forEach(childHost => sanitizeConfig(context, childHost));\n    }\n    if (hostID != null && typeof (hostID) === 'string') {\n        if (context.componentMap().get(hostID) !== undefined) {\n            hostObj.host(context.componentMap().get(hostID));\n        }\n    }\n}\n\nexport function calLayOutDef (context) {\n    const { height, width } = context.dimension();\n    const defManager = new DefinitionManager(context.layoutDef().componentMap(),\n                                              context.prioritySequence(),\n                                              height,\n                                              width);\n    const genLayoutdef = defManager.generateConfigModel();\n    return genLayoutdef;\n}\n","import {\n  LayoutModel\n} from '../layout-definition';\n\nimport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT\n} from '../constants/defaults';\n\nimport { DrawingManager } from '../drawing-manager';\nimport { Utils } from '../utils';\nimport { LayoutDef } from './layout-def';\nimport { calLayOutDef } from './helper';\n\nexport default class LayoutManager {\n    constructor (conf) {\n        this._renderAt = conf.renderAt;\n        this._layoutClassName = conf.className;\n        this._dimension = {\n            width: conf.width || DEFAULT_WIDTH,\n            height: conf.height || DEFAULT_HEIGHT\n        };\n\n        this._skeletonType = conf.skeletonType || 'html';\n        this._layoutDefinition = null;\n        this._layoutDef = new LayoutDef();\n        this._drawingManager = null;\n        this._prioritySequence = [];\n        this.tree = null;\n        this._rootNodeID = null;\n    }\n\n    layoutDef (param) {\n        if (param) {\n            this._layoutDef = param;\n        }\n        return this._layoutDef;\n    }\n\n    prioritySequence (param) {\n        if (param) {\n            this._prioritySequence = param;\n        }\n        return this._prioritySequence;\n    }\n\n    dimension (param) {\n        if (param) {\n            Object.assign(this._dimension, param);\n        }\n        return this._dimension;\n    }\n\n    addComponent (component) {\n        this._layoutDef.addComponent(component);\n    }\n\n    addMultipleComponent (componentArray) {\n        this._layoutDef.addMultipleComponent(componentArray);\n    }\n\n    resetNode (node) {\n        if (this.con) {\n            this.con.resetNode(node);\n        }\n    }\n\n  /**\n   * function to update the node and rerender the layout.\n   * @param  {} config - node configuration to change.\n   */\n    updateNode (config) {\n        this.tree.updateNode(config);\n        this._layoutDefinition = this.tree.model;\n        this.compute();\n    }\n\n    compute () {\n        //----\n        if (Utils.isDOMElement(this._renderAt)) {\n            this._renderAt._layout = this;\n        } else {\n            document.getElementById(this._renderAt)._layout = this;\n        }\n        //-----\n        this._layoutDefinition = calLayOutDef(this);\n        this._layoutDef.layoutDefinition(this._layoutDefinition);\n        this._layoutDefinition = this._layoutDef.sanitizedDefinition();\n        this._layout = new LayoutModel({\n            width: this._dimension.width,\n            height: this._dimension.height\n        },\n            this._layoutDefinition);\n        this.tree = this._layout.negotiate().tree();\n        this._layout.broadcast();\n        this._drawingManager = new DrawingManager({\n            tree: this.tree,\n            componentMap: this._layoutDef.componentMap(),\n            layoutClassName: this._layoutClassName\n        }, this._skeletonType, this._renderAt);\n\n        if (this._rootNodeID) {\n            this.tree.id(this._rootNodeID);\n        } else {\n            this._rootNodeID = this.tree.id();\n        }\n    // this will draw all the components by calling their draw method\n        this._drawingManager.draw();\n    }\n\n    getRootNodeId () {\n        return this._rootNodeID;\n    }\n\n  /**\n  * This function takes the LayoutComponents and Register them in component store\n  * @param {Array<LayoutComponent>} layoutComponents\n  */\n    registerComponents (layoutComponents) {\n        this._prioritySequence.length = 0;\n        this._layoutDef.resetComponentMap();\n        layoutComponents.forEach((container) => {\n            if (container) {\n                this._prioritySequence.push(container.name());\n                this.addComponent(container);\n                if (container.name() === 'grid') {\n                    container.component.forEach((componentArr) => {\n                        componentArr.forEach((compo) => {\n                            this.addComponent(compo);\n                        });\n                    });\n                }\n            }\n        });\n        return this;\n    }\n\n    getComponent (componentName) {\n        return this._layoutDef.componentMap().get(componentName);\n    }\n\n    renderAt (mount) {\n        if (mount) {\n            this._renderAt = mount;\n        }\n        return this._renderAt;\n    }\n}\n","import { LayoutComponent } from '../../../../layout/src/tree-layout';\n\nexport default class MuzeComponent extends LayoutComponent {\n    getLogicalSpace () {\n        const { width, height } = this.boundBox();\n        return { width, height };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n    }\n\n    getBoundBox () {\n        return this.boundBox();\n    }\n\n    updateWrapper () {\n        throw Error('Update is not implemented');\n    }\n\n    setParams () {\n        throw Error('set params is not implemented');\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport { LEFT } from '../../constants';\n\nexport default class HeaderComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    renderHeader (container) {\n        const layoutConfig = this.params.config;\n        container = selectElement(container);\n        const { align } = layoutConfig;\n        const sel = container\n          .selectAll(`.${layoutConfig.classPrefix}-inner-container`)\n          .data([this.name]);\n        sel.exit().remove();\n        const selEnter = sel.enter().append('div');\n\n        const cont = selEnter.merge(sel);\n        cont.classed(`${layoutConfig.classPrefix}-inner-container`, true);\n        const { height, width } = this.boundBox();\n        this.component.setAvailableSpace(width, height);\n\n        this.component && this.component.render(cont.node());\n\n        cont.selectAll('div').classed(`${layoutConfig.classPrefix}-inner-content`, true);\n        cont.style('width', `${100}%`);\n\n        if (layoutConfig && this.component) {\n            cont.style('float', LEFT)\n                            .style('text-align', align);\n                            // .style(`padding-${position === TOP ? BOTTOM : TOP}`, `${padding}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderHeader(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.component.getLogicalSpace());\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport {\n     LEFT, RIGHT, VERTICAL, HORIZONTAL\n} from '../../constants';\n\nexport default class LegendComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.measurement.legendSpace, 0);\n        this.setParams(params);\n    }\n\n    renderLegend (container) {\n        container = selectElement(container);\n        const sectionComponents = [];\n        const { legendSpace, height, width } = this.params.config.measurement;\n        const { position, classPrefix } = this.params.config;\n        const legendMount = makeElement(container, 'div', [this.components],\n                                        `${classPrefix}-inner-content`, {}, d => d);\n        legendMount.classed(`${classPrefix}-legend`, true);\n        const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n        const legWidth = align === VERTICAL ? legendSpace.width : width;\n        const legHeight = align === VERTICAL ? height : legendSpace.height;\n\n        [container, legendMount].forEach((elem) => {\n            elem.style('width', `${Math.floor(legWidth)}px`)\n                            .style('height', `${legHeight}px`)\n                            .style('float', LEFT);\n        });\n\n        if (align === VERTICAL) {\n            let sections = -1;\n            let currHeight = legHeight;\n            let currWidth = 0;\n\n            this.components.forEach((legendInfo) => {\n                const leg = legendInfo.legend;\n                if (leg.measurement().height > currHeight) {\n                    sections++;\n                    currWidth = 0;\n                    currHeight = legHeight;\n                } else {\n                    sections < 0 && sections++;\n                }\n                sectionComponents[sections] = sectionComponents[sections] || [];\n                currHeight -= Math.min(leg.measurement().height, currHeight);\n                currWidth = Math.max(Math.min(leg.measurement().width, leg.measurement().maxWidth), currWidth);\n                sectionComponents[sections].push({\n                    legend: leg,\n                    legendHeight: legHeight,\n                    legendWidth: currWidth\n                });\n            });\n\n            const mount = makeElement(legendMount, ['div'], sectionComponents, `${classPrefix}-legend-section`);\n            // mount.each((d, i) => selectElement(this).classed(`${classPrefix}-legend-section-${i}`, true));\n            mount.classed(`${classPrefix}-legend-vertical-section`, true)\n                            .style('width', d => `${d[0].legendWidth}px`);\n            makeElement(mount, ['div'], d => d, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) {\n                                d.legend.mount(this);\n                            })\n                            .style('width', d => `${d.legendWidth}px`);\n        } else {\n            const mount = makeElement(legendMount, 'div', [1], `${classPrefix}-legend-section`);\n            mount.classed(`${classPrefix}-legend-horizontal-section`, true);\n            mount.classed(`${classPrefix}-legend-section-${0}`, true)\n                            .style('width', `${legWidth}px`);\n\n            makeElement(mount, 'div', this.components, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) { d.legend.mount(this); })\n                            .style('width', d => `${d.legend.measurement().width}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderLegend(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.measurement.legendSpace);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.components = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n}\n","import { selectElement, makeElement } from 'muze-utils';\nimport { cellSpanMaker } from '../../../../layout/src/grid-layout/span-maker';\nimport {\n     TOP, LEFT, RIGHT, BOTTOM, CENTER, HEIGHT, WIDTH, ROW_SPAN, COL_SPAN\n} from '../../../../layout/src/enums/constants';\nimport { BLANK_BORDERS } from '../../../../layout/src/grid-layout/defaults';\nimport MuzeComponent from './muze-chart-component';\n\nexport default class MatrixComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n        this.className(params.config.className);\n    }\n\n    renderMatrix (mountPoint) {\n        // Creating containers for each matrix individually\n        const classPrefix = this.params.config.classPrefix;\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        // const dimensions = this.params.config.dimensions;\n        const border = this.params.config.border;\n\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${row}-${column + 1}`)\n                .classed(`${classPrefix}-grid-${row}`, true)\n                .classed(`${classPrefix}-grid`, true);\n\n        const { viewMatrix, spans } = cellSpanMaker(this.component, row, column);\n        if (row !== CENTER) {\n            containerForMatrix.style(WIDTH, `${this.getLogicalSpace().width}px`);\n            containerForMatrix.style(HEIGHT, `${this.getLogicalSpace().height}px`);\n        }\n\n        // Rendering the table components\n        const { cells } = this.renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        if (row === CENTER && spans) {\n            cells.attr(ROW_SPAN, function (cell, colIndex) {\n                const placeholder = cell.placeholder;\n                selectElement(this).style('height', `${placeholder.availHeight() + border.width}px`);\n                return spans[cell.rowIndex][colIndex];\n            });\n        } else if ((row === TOP || row === BOTTOM) && column === 1) {\n            cells.attr(COL_SPAN, function (cell, colIndex) {\n                const span = spans[cell.rowIndex][colIndex];\n                const placeholder = cell.placeholder;\n                if (span > 1) {\n                    placeholder.setAvailableSpace(placeholder.availWidth() * spans, placeholder.availHeight());\n                }\n                selectElement(this).style('height', `${placeholder.availHeight()}px`);\n                return span;\n            });\n        }\n        // Rendering content within placeholders\n        cells.each(function (cell) {\n            cell.placeholder && cell.placeholder.render(this);\n        }).exit().each((cell) => {\n            cell.placeholder && cell.placeholder.remove();\n        });\n        this.applyBorders(cells, border, row, column);\n    }\n\n    applyBorders (cells, border, type, index) {\n        const {\n          width,\n          style,\n          color,\n          showRowBorders,\n          showColBorders,\n          showValueBorders\n      } = border;\n        const borderStyle = `${width}px ${style}`;\n\n        if (type === CENTER && index === 1) {\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((borderType) => {\n                cells.style(`border-${borderType}`, `${borderStyle} ${showValueBorders[borderType] ?\n                  color : BLANK_BORDERS}`);\n            });\n        } else if (type === CENTER) {\n            this.applyRowBorders(cells, borderStyle, showRowBorders, color);\n        } else if (index === 1) {\n            this.applyColBorders(cells, borderStyle, showColBorders, color);\n        }\n    }\n\n    renderTable (mount, className, rowData) {\n        const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n        const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n        const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n        const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null).map(e =>\n                                  ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n        return { table, body, rows, cells };\n    }\n\n    applyRowBorders (cells, borderStyle, showBorders, color) {\n        [TOP, BOTTOM].forEach((borderType) => {\n            const style = `${borderStyle} ${showBorders[borderType] ? color : BLANK_BORDERS}`;\n            cells.style(`border-${borderType}`, style);\n        });\n    }\n\n    applyColBorders (cells, borderStyle, showBorders, color) {\n        [LEFT, RIGHT].forEach((borderType) => {\n            const style = `${borderStyle} ${showBorders[borderType] ? color : BLANK_BORDERS}`;\n            cells.style(`border-${borderType}`, style);\n        });\n    }\n\n    draw (container) {\n        this.renderMatrix(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(TOP);\n        this.className(params.config.className);\n    }\n}\n","import MuzeComponent from './muze-chart-component';\nimport MatrixComponent from './matrix-component';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\nexport default class GridComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.gridComponents = [];\n        this.setParams(params);\n    }\n\n    sanitizeGrid () {\n        let height = 0;\n        let width = 0;\n        const { viewMatricesInfo, layoutDimensions } = this.component.viewInfo();\n\n        for (let i = 0; i < 3; i++) {\n            if (!(this.gridComponents.length && this.gridComponents[i] instanceof Array)) {\n                this.gridComponents[i] = [];\n            }\n            for (let j = 0; j < 3; j++) {\n                const matrixDim = { height: layoutDimensions.viewHeight[i], width: layoutDimensions.viewWidth[j] };\n                const matrix = viewMatricesInfo.matrices[`${ROW_MATRIX_INDEX[i]}`][j];\n                const matrixName = `${ROW_MATRIX_INDEX[i]}-${COLUMN_MATRIX_INDEX[j]}`;\n                const matrixConfig = {\n                    dimensions: matrixDim,\n                    border: layoutDimensions.border,\n                    classPrefix: this.params.config.classPrefix,\n                    row: ROW_MATRIX_INDEX[i],\n                    column: j\n                };\n                if (this.gridComponents[i][j] instanceof MuzeComponent) {\n                    this.gridComponents[i][j].updateWrapper({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                } else {\n                    const matrixWrapper = new MatrixComponent({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                    this.gridComponents[i].push(matrixWrapper);\n                }\n                if (i === 0) {\n                    width += matrixDim.width;\n                }\n                if (j === 0) {\n                    height += matrixDim.height;\n                }\n            }\n        }\n        this.boundBox({ height, width });\n        this.component = this.gridComponents;\n    }\n\n    getBoundBox () {\n        const { top, left } = this.component[0][0].boundBox();\n        const { height, width } = this.boundBox();\n        return {\n            top,\n            left,\n            height,\n            width\n        };\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.className(params.config.className);\n        this.sanitizeGrid();\n    }\n}\n","import { MUZE_PREFIX } from '../constants';\n\nexport const TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 3,\n    className: `${MUZE_PREFIX}-title-container`\n};\n\nexport const SUB_TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 16,\n    maxLines: 2,\n    className: `${MUZE_PREFIX}-subtitle-container`\n};\n\nexport const GRID = 'grid';\n\nexport const CANVAS = 'canvas';\n\nexport const LAYOUT_ALIGN = {\n    TOP: 'top',\n    LEFT: 'left',\n    RIGHT: 'right',\n    BOTTOM: 'bottom'\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { arrangeComponents } from './component-resolver';\nimport { createHeaders } from './title-maker';\nimport { createLegend, getLegendSpace } from './legend-maker';\nimport { TOP, BOTTOM, LEFT, RIGHT, TITLE, SUB_TITLE, LEGEND } from '../constants';\nimport HeaderComponent from './components/headerComponent';\nimport LegendComponent from './components/legendComponent';\nimport GridComponent from './components/grid-component';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG, GRID, CANVAS, LAYOUT_ALIGN } from './defaults';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../layout/src/enums/constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const prepareLayout = (layout, renderDetails) => {\n    const { components, layoutConfig, measurement } = renderDetails;\n    const {\n        rows,\n        columns,\n        values,\n        cornerMatrices\n    } = components;\n    const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n    } = cornerMatrices;\n    if (rows && columns) {\n        layout.measurement(measurement)\n                        .config(layoutConfig)\n                        .matrices({\n                            top: [topLeft, columns[0], topRight],\n                            center: [rows[0], values, rows[1]],\n                            bottom: [bottomLeft, columns[1], bottomRight]\n                        })\n                        .triggerReflow();\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} mount\n *\n */\nexport const getRenderDetails = (context, mount) => {\n    let layoutConfig = mergeRecursive({}, context.config());\n    // Get height width of the mount point\n    let { height, width } = mount.getBoundingClientRect();\n    const heightAttr = context.height();\n    const widthAttr = context.width();\n    const visGroup = context.composition().visualGroup;\n    const {\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority,\n        rows,\n        columns,\n        values\n    } = visGroup.placeholderInfo();\n    const {\n        minWidth,\n        minHeight,\n        classPrefix,\n        showHeaders,\n        legend\n    } = context.config();\n    // Get title configuration\n    const titleConfig = context.title()[1];\n     // Get subtitle configuration\n    const subtitleConfig = context.subtitle()[1];\n    // Get legend position\n    const legendPosition = legend.position;\n    // Arrange components according to config\n    const layoutArrangement = arrangeComponents(context);\n\n    height = Math.floor(height);\n    width = Math.floor(width);\n\n    const availableHeightForCanvas = Math.max(heightAttr > 0 ? heightAttr : height, minHeight);\n    const availableWidthForCanvas = Math.max(widthAttr > 0 ? widthAttr : width, minWidth);\n\n    // Create headers and determine header height\n    const { headers, headerHeight } = createHeaders(context, availableHeightForCanvas, availableWidthForCanvas);\n\n    // Create legends and determine legend space\n    const legends = createLegend(context, headerHeight, availableHeightForCanvas, availableWidthForCanvas);\n    context._composition.legend = {};\n    legends.forEach((e) => {\n        context._composition.legend[e.scaleType] = e.legend;\n    });\n\n    const legendSpace = getLegendSpace(legends, legend, availableHeightForCanvas, availableWidthForCanvas);\n    const legendWidth = (legendPosition === LEFT || legendPosition === RIGHT) ? legendSpace.width : 0;\n    const legendHeight = (legendPosition === TOP || legendPosition === BOTTOM) ? legendSpace.height : 0;\n\n    // Set components for layouting\n    const components = {\n        headers,\n        legends,\n        canvases: [context],\n        rows,\n        columns,\n        values,\n        cornerMatrices: visGroup.cornerMatrices()\n    };\n    const measurement = {\n        mountSpace: {\n            height,\n            width\n        },\n        headerHeight,\n        legendSpace,\n        canvasWidth: availableWidthForCanvas,\n        canvasHeight: availableHeightForCanvas,\n        width: availableWidthForCanvas - legendWidth,\n        height: availableHeightForCanvas - headerHeight - legendHeight,\n        minUnitHeight: context.minUnitHeight(),\n        minUnitWidth: context.minUnitWidth()\n    };\n    layoutConfig = mergeRecursive(layoutConfig, {\n        classPrefix,\n        showHeaders,\n        border: mergeRecursive(visGroup.metaData().border, context.config().border),\n        layoutArrangement,\n        legend,\n        title: titleConfig,\n        subtitle: subtitleConfig,\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        mount,\n        priority\n    });\n    return {\n        layoutConfig,\n        components,\n        measurement\n    };\n};\n// const _getLegendOf = (legends, type) => legends.find(legend => legend.scaleType === type);\n\nexport const renderLayout = (layoutManager, grid, renderDetails) => {\n    // generate component wrappers\n\n    const { components, layoutConfig, measurement } = renderDetails;\n    const target = { target: CANVAS };\n    // title;\n    let titleWrapper = null;\n    if (components.headers && components.headers.titleCell) {\n        const title = components.headers.titleCell;\n        let titleConfig = layoutConfig.title;\n        titleConfig = Object.assign({}, titleConfig, { classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: LAYOUT_ALIGN.LEFT,\n            className: TITLE_CONFIG.className });\n        if (layoutManager.getComponent(TITLE)) {\n            titleWrapper = layoutManager\n                            .getComponent(TITLE)\n                            .updateWrapper({ name: TITLE, component: title, config: titleConfig });\n        } else {\n            titleWrapper = new HeaderComponent({ name: TITLE, component: title, config: titleConfig });\n        }\n    }\n\n     // subtitle\n    let subtitleWrapper = null;\n    if (components.headers && components.headers.subtitleCell) {\n        const subtitle = components.headers.subtitleCell;\n        let subtitleConfig = layoutConfig.subtitle;\n\n        subtitleConfig = Object.assign({}, subtitleConfig, { classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: LAYOUT_ALIGN.LEFT,\n            className: SUB_TITLE_CONFIG.className });\n        if (layoutManager.getComponent(SUB_TITLE)) {\n            subtitleWrapper = layoutManager\n                                .getComponent(SUB_TITLE)\n                                .updateWrapper({ name: SUB_TITLE, component: subtitle, config: subtitleConfig });\n        } else {\n            subtitleWrapper = new HeaderComponent({ name: SUB_TITLE, component: subtitle, config: subtitleConfig });\n        }\n    }\n\n    // color legend\n    let colorLegendWrapper = null;\n    if (components.legends && components.legends.length) {\n        const legendConfig = { ...layoutConfig.legend, ...target, measurement };\n\n        if (layoutManager.getComponent(LEGEND)) {\n            colorLegendWrapper = layoutManager\n                                .getComponent(LEGEND)\n                                .updateWrapper({\n                                    name: LEGEND,\n                                    component: components.legends,\n                                    config: legendConfig });\n        } else {\n            colorLegendWrapper = new LegendComponent({\n                name: LEGEND,\n                component: components.legends,\n                config: legendConfig });\n        }\n    }\n\n    // grid components\n\n    let gridWrapper = null;\n\n    if (layoutManager.getComponent(GRID)) {\n        gridWrapper = layoutManager\n                            .getComponent(GRID)\n                            .updateWrapper({\n                                name: GRID,\n                                component: grid,\n                                config: { ...target,\n                                    classPrefix: layoutConfig.classPrefix,\n                                    dimensions: { height: 0, width: 0 } }\n                            });\n    } else {\n        gridWrapper = new GridComponent({\n            name: GRID,\n            component: grid,\n            config: { ...target,\n                classPrefix: layoutConfig.classPrefix,\n                dimensions: { height: 0, width: 0 } }\n        });\n    }\n\n    layoutManager.registerComponents([\n        titleWrapper,\n        subtitleWrapper,\n        colorLegendWrapper,\n        gridWrapper\n    ]).compute();\n};\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    ROWS,\n    COLUMNS,\n    COLOR,\n    SHAPE,\n    SIZE,\n    DETAIL,\n    LAYERS,\n    TRANSFORM,\n    TITLE,\n    SUB_TITLE\n} from '../constants';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG } from './defaults';\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Canvas.\n * Canvas merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module LocalOptions\n */\n\nexport const localOptions = {\n    [ROWS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLUMNS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLOR]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SHAPE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SIZE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [DETAIL]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n\n    [LAYERS]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [TRANSFORM]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object'\n        }\n    }\n};\n\nexport const canvasOptions = {\n    [TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(title) => {\n                if (typeof title === 'string') {\n                    const t = () => title;\n                    t._sanitized = true;\n                    return t;\n                }\n                return title;\n            }, (titleConfig) => {\n                const defConfig = mergeRecursive({}, TITLE_CONFIG);\n                return mergeRecursive(defConfig, titleConfig);\n            }]\n        }\n    },\n    [SUB_TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(subtitle) => {\n                if (typeof subtitle === 'string') {\n                    const sub = () => subtitle;\n                    sub._sanitized = true;\n                    return sub;\n                }\n                return subtitle;\n            }, (subtitleConfig) => {\n                const defConfig = mergeRecursive({}, SUB_TITLE_CONFIG);\n                return mergeRecursive(defConfig, subtitleConfig);\n            }]\n        }\n    }\n};\n","import { isEqual, STATE_NAMESPACES, selectElement } from 'muze-utils';\nimport { VisualGroup } from '@chartshq/visual-group';\nimport { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, DATA, CONFIG }\n    from '../constants';\nimport { canvasOptions } from './local-options';\nimport { LayoutManager } from '../../../layout/src/tree-layout';\n\n/**\n * Instantiate high level components. Canvas knows what all high level component it has.\n * @nice-to-have dynamic high level components.\n *  - Is it even required ?\n *  - Reactive to source (canvas) streaming ?\n * @param {*} context Canvas instance\n * @return {Object.<Array>} Arrays of Title, visualGroup, Legend\n */\nexport const initCanvas = (context) => {\n    const reg = context._registry.components;\n\n    return [new reg.VisualGroup(context._registry, Object.assign({\n        throwback: context._throwback\n    }, context.dependencies()))];\n};\n\nexport const setLayoutInfForUnits = (context) => {\n    const layoutManager = context._layoutManager;\n    const boundBox = layoutManager.getComponent('grid').getBoundBox();\n    const valueMatrix = context.composition().visualGroup.matrixInstance().value;\n    const parentContainer = selectElement(`#${layoutManager.getRootNodeId()}`).node();\n    valueMatrix.each((cell) => {\n        cell.valueOf().parentContainerInf({\n            el: parentContainer,\n            dimensions: boundBox\n        });\n    });\n};\n\n/**\n *\n *\n * @memberof Canvas\n */\nexport const dispatchProps = (context) => {\n    const lifeCycleManager = context.dependencies().lifeCycleManager;\n    lifeCycleManager.notify({ client: context, action: 'beforeupdate' });\n    const visualGroup = context.composition().visualGroup;\n\n    const allOptions = context._allOptions;\n    for (const key in allOptions) {\n        const value = context[key]();\n        if (value !== null) {\n            visualGroup[key] && visualGroup[key](value);\n        }\n    }\n    visualGroup.createMatrices();\n    context._cachedProps = {};\n    lifeCycleManager.notify({ client: context, action: 'initialized' });\n    lifeCycleManager.notify({ client: context, action: 'updated' });\n};\n\nconst equalityChecker = (props, params) => {\n    let checker = () => false;\n    return !props.every((option, i) => {\n        switch (option) {\n        case ROWS:\n        case COLUMNS:\n        case DETAIL:\n            checker = isEqual('Array');\n            break;\n\n        case SHAPE:\n        case SIZE:\n        case COLOR:\n        case DATA:\n        case CONFIG:\n            checker = isEqual('Object');\n            break;\n        default:\n            checker = () => true;\n            break;\n        }\n        const oldVal = params[i][0];\n        const newVal = params[i][1];\n\n        return checker(oldVal, newVal);\n    });\n};\n\nconst updateChecker = (props, params) => props.every((option, i) => {\n    const val = params[i][1];\n    switch (option) {\n    case ROWS:\n    case COLUMNS:\n        return val !== null;\n\n    case DATA:\n        return val && !val.isEmpty();\n\n    default:\n        return true;\n\n    }\n});\n\nexport const notifyAnimationEnd = (context) => {\n    const centerMatrix = context.layout().viewInfo().viewMatricesInfo.matrices.center[1] || [];\n    const promises = [];\n    centerMatrix.forEach((cellArr) => {\n        cellArr.forEach((cell) => {\n            promises.push(cell.valueOf().done());\n        });\n    });\n    const lifeCycleManager = context.lifeCycle();\n    if (promises.length) {\n        Promise.all(promises).then(() => {\n            // Update life cycle\n            lifeCycleManager.notify({ client: context, action: 'drawn' });\n            const animDonePromises = [];\n\n            centerMatrix.forEach((cellArr) => {\n                cellArr.forEach((cell) => {\n                    cell.valueOf().layers().forEach((layer) => {\n                        animDonePromises.push(layer.animationDone());\n                    });\n                });\n            });\n\n            [context.xAxes(), context.yAxes()].forEach((axisArr) => {\n                axisArr = axisArr || [];\n                axisArr.forEach((axes) => {\n                    axes.forEach((axisInst) => {\n                        animDonePromises.push(axisInst.animationDone());\n                    });\n                });\n            });\n\n            Promise.all(animDonePromises).then(() => {\n                lifeCycleManager.notify({ client: context, action: 'animationend' });\n            });\n        });\n    } else {\n        lifeCycleManager.notify({ client: context, action: 'animationend' });\n    }\n};\n\nexport const setupChangeListener = (context) => {\n    const store = context._store;\n\n    const allOptions = Object.keys(context._allOptions);\n    const props = [...allOptions, ...Object.keys(canvasOptions)];\n    const nameSpaceProps = [...allOptions, ...Object.keys(canvasOptions)].map(prop =>\n        `${STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE}.${prop}`);\n    store.registerChangeListener(nameSpaceProps, (...params) => {\n        let updateProps = equalityChecker(props, params);\n        updateProps = updateChecker(props, params);\n\n        // inform attached board to rerender\n        if (updateProps && context.mount()) {\n            dispatchProps(context);\n            context.render();\n        }\n        notifyAnimationEnd(context);\n    }, true);\n};\n\nexport const applyInteractionPolicy = (firebolt) => {\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    if (visualGroup) {\n        const valueMatrix = visualGroup.matrixInstance().value;\n        const interactionPolicy = firebolt._interactionPolicy;\n        interactionPolicy(valueMatrix, firebolt);\n        const crossInteractionPolicy = firebolt._crossInteractionPolicy;\n        const behaviours = crossInteractionPolicy.behaviours;\n        const sideEffects = crossInteractionPolicy.sideEffects;\n        valueMatrix.each((cell) => {\n            const unitFireBolt = cell.valueOf().firebolt();\n            for (const key in behaviours) {\n                unitFireBolt.changeBehaviourStateOnPropagation(key, behaviours[key]);\n            }\n            for (const key in sideEffects) {\n                unitFireBolt.changeSideEffectStateOnPropagation(key, sideEffects[key]);\n            }\n        });\n    }\n};\n\n/**\n * Sets the rotation for all x axes if any axis has the rotation config set in the\n * entire view\n *\n * @param {Array} columns Column cells that contain the axes cells\n */\nexport const setLabelRotationForAxes = (context) => {\n    let rotation = 0;\n\n    const xAxes = context.xAxes() || [];\n\n    (() => {\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                if (xAxes[i][j].renderConfig().labels.rotation !== 0) {\n                    rotation = xAxes[i][j].renderConfig().labels.rotation;\n                    return;\n                }\n            }\n        }\n    })();\n\n    if (rotation) {\n        xAxes.forEach((axes) => {\n            axes.forEach((axis) => {\n                axis.renderConfig({ labels: { rotation } });\n                axis.smartTicks(axis.setTickConfig());\n            });\n        });\n    }\n};\n\nexport const createGroupState = (context) => {\n    const [globalState, localState] = VisualGroup.getState();\n    const store = context._store;\n    store.append('app.group', globalState);\n    store.append('local.group', localState);\n};\n\nexport const removeChild = (mount) => {\n    while (mount.firstChild) {\n        mount.removeChild(mount.firstChild);\n    }\n};\n\nexport const createLayoutManager = () => {\n    const layoutManager = new LayoutManager({\n        className: 'muze-group-container'\n    });\n    return layoutManager;\n};\n","import {\n    getDataModelFromIdentifiers,\n    FieldType,\n    mergeRecursive,\n    isSimpleObject,\n    CommonProps\n} from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\n\nimport { applyInteractionPolicy } from '../helper';\n\nconst defaultInteractionPolicy = (valueMatrix, firebolt) => {\n    const isMeasure = field => field.type() === FieldType.MEASURE;\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    const xFields = [].concat(...visualGroup.getFieldsFromChannel('x'));\n    const yFields = [].concat(...visualGroup.getFieldsFromChannel('y'));\n    const colDim = xFields.every(field => field.type() === FieldType.DIMENSION);\n    const fieldInf = visualGroup.resolver().getAllFields();\n    const rowFacets = fieldInf.rowFacets;\n    const colFacets = fieldInf.colFacets;\n    valueMatrix.each((cell) => {\n        const unitFireBolt = cell.valueOf().firebolt();\n        if (!(xFields.every(isMeasure) && yFields.every(isMeasure))) {\n            const facetFields = cell.valueOf().facetByFields()[0];\n            const unitColFacets = facetFields.filter(d => colFacets.findIndex(v => v.equals(d)) !== -1);\n            const unitRowFacets = facetFields.filter(d => rowFacets.findIndex(v => v.equals(d)) !== -1);\n            let propFields;\n            if (colDim) {\n                propFields = unitColFacets.map(d => `${d}`);\n            } else {\n                propFields = unitRowFacets.map(d => `${d}`);\n            }\n\n            unitFireBolt.propagateWith('*', propFields, true);\n        }\n    });\n};\n\nconst defaultCrossInteractionPolicy = {\n    behaviours: {\n        '*': (propagationPayload, context) => {\n            const propagationCanvasAlias = propagationPayload.sourceCanvas;\n            const canvasAlias = context.parentAlias();\n            return propagationCanvasAlias ? canvasAlias === propagationCanvasAlias : true;\n        }\n    },\n    sideEffects: {\n        tooltip: (propagationPayload, context) => {\n            const propagationUnit = propagationPayload.sourceUnit;\n            const propagationCanvas = propagationPayload.sourceCanvas;\n            const unitId = context.id();\n            const canvasAlias = context.parentAlias();\n            if (propagationCanvas) {\n                return propagationCanvas !== canvasAlias ? true : unitId === propagationUnit;\n            }\n            return true;\n        }\n    }\n};\n\n/**\n * This class is responsible for dispatching any behavioural action to all the visual units housed by the canvas.\n * It is created by {@link Canvas}. This class does not handle any physical actions. Physical actions get triggered\n * in {@link VisualUnit} which is managed by it's own firebolt instance. The firebolt instance of canvas only\n * propagates the action to all the visual units in it's composition.\n *\n * To get the firebolt instance of {@link Canvas}\n * ```\n *  const firebolt = canvas.firebolt();\n * ```\n *\n * @class GroupFireBolt\n * @public\n */\nexport default class GroupFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this._interactionPolicy = this.constructor.defaultInteractionPolicy();\n        this.crossInteractionPolicy(this.constructor.defaultCrossInteractionPolicy());\n    }\n\n    static defaultInteractionPolicy () {\n        return defaultInteractionPolicy;\n    }\n\n    static defaultCrossInteractionPolicy () {\n        return defaultCrossInteractionPolicy;\n    }\n\n    interactionPolicy (...policy) {\n        if (policy.length) {\n            this._interactionPolicy = policy[0] || this.constructor.defaultInteractionPolicy();\n            return this;\n        }\n        return this._interactionPolicy;\n    }\n\n    crossInteractionPolicy (...policy) {\n        if (policy.length) {\n            this._crossInteractionPolicy = mergeRecursive(mergeRecursive({},\n                this.constructor.defaultCrossInteractionPolicy()), policy[0] || {});\n            const context = this.context;\n            applyInteractionPolicy(this);\n            context._throwback.registerImmediateListener([CommonProps.MATRIX_CREATED], () => {\n                applyInteractionPolicy(this);\n            });\n            return this;\n        }\n        return this._crossInteractionPolicy;\n    }\n\n    /**\n     * Dispatches a behavioural action with a payload. It takes the name of the behavioural action and a payload\n     * object which contains the criteria aend an array of side effects which determines what side effects are\n     * going to be shown in each visual unit of the canvas. It prepares the datamodel from the given criteria\n     * and initiates a propagation from the datamodel of canvas. Then all the visual units of canvas which listens\n     * to the propagation gets informed on which rows got selected and dispatches the behavioural action sent during\n     * propagation.\n     *\n     * To dispatch a behavioural action on the canvas\n     * ```\n     *  // Get the firebolt instance of the canvas\n     *  const firebolt = canvas.firebolt();\n     *  // Dispatch a brush behaviour\n     *  firebolt.dispatchBehaviour('brush', {\n     *      // Selects all the rows with Horsepower having range between 100 and 200.\n     *      criteria: {\n     *          Horsepower: [100, 200]\n     *      }\n     *  });\n     * // On dispatch of this behavioural action, a selection box gets created and plots gets faded out which are the\n     * // default side effects mapped to this behavioural action.\n     * ```\n     *\n     * ```\n     * Additionally, it can also be passed an array of side effects in the payload.\n     *  // Dispatch a select behaviour with only crossline as side effect.\n     *  firebolt.dispatchBehaviour('select', {\n     *      criteria: {\n     *          Cylinders: ['8']\n     *      },\n     *      sideEffects: ['crossline']\n     *  });\n     * ```\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of the behavioural action\n     * @param {Object} payload Object which contains the interaction information.\n     * @param {Object | Array.<Array>} payload.criteria Identifiers by which the selection happens.\n     * @param {Array.<string|Object>} payload.sideEffects Side effects which needs to be shown.\n     *\n     * @return {GroupFireBolt} Instance of firebolt.\n     */\n    dispatchBehaviour (behaviour, payload) {\n        const propPayload = Object.assign(payload);\n        const criteria = propPayload.criteria;\n        const data = this.context.composition().visualGroup.getGroupByData();\n        const fieldsConfig = data.getFieldsConfig();\n        const model = getDataModelFromIdentifiers(data, criteria);\n        const behaviouralAction = this._actions.behavioural[behaviour];\n\n        if (behaviouralAction) {\n            const fields = isSimpleObject(criteria) ? Object.keys(criteria) : (criteria ? criteria[0] : []);\n            const validFields = fields.filter(field => field in fieldsConfig);\n            const mutates = behaviouralAction.constructor.mutates();\n            const propConfig = {\n                payload: propPayload,\n                action: behaviour,\n                criteria: model,\n                sourceId: this.context.alias(),\n                isMutableAction: mutates,\n                propagateInterpolatedValues: validFields.every(field => fieldsConfig[field].def.type ===\n                    FieldType.MEASURE)\n            };\n            data.propagate(model, propConfig, true);\n        }\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        return this;\n    }\n}\n","import GroupFireBolt from './group-firebolt';\n\nexport default GroupFireBolt;\n","export const APP_INITIAL_STATE = {\n    app: {\n        group: {},\n        units: {},\n        layers: {},\n        canvas: {}\n    },\n    local: {\n        canvas: {},\n        group: {},\n        units: {},\n        layers: {}\n    }\n};\n\n","import { GridLayout } from '@chartshq/layout';\nimport { transactor, Store, getUniqueId, selectElement, STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { RETINAL } from '../constants';\nimport TransactionSupport from '../transaction-support';\nimport { getRenderDetails, prepareLayout, renderLayout } from './layout-maker';\nimport { localOptions, canvasOptions } from './local-options';\nimport GroupFireBolt from './firebolt';\nimport options from '../options';\nimport { APP_INITIAL_STATE } from './app-state';\nimport { initCanvas,\n        setupChangeListener,\n        setLabelRotationForAxes,\n        createGroupState,\n        createLayoutManager,\n        setLayoutInfForUnits } from './helper';\n/**\n * Canvas is a logical component which houses a visualization by taking multiple variable in different encoding channel.\n * Canvas manages lifecycle of many other logical component and exposes one consistent interface for creation of chart.\n * Canvas is intialized from environment with settings from environment and singleton dependencies.\n *\n * To create an instance of canvas\n * ```\n *  const env = Muze();\n *  const canvas = env.canvas()\n * ```\n *\n *\n * @class\n * @public\n * @module Canvas\n */\nexport default class Canvas extends TransactionSupport {\n\n    /**\n     * Creates reactive property accessors.\n     * - data\n     * - height\n     * - width\n     * - config\n     * This configs are retrieved from options.\n     */\n    constructor (globalDependencies) {\n        super();\n\n        this._allOptions = Object.assign({}, options, localOptions);\n        this._registry = {};\n        this._composition = {};\n        this._cachedProps = {};\n        this._alias = null;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        this._composition.layout = new GridLayout();\n        this._store = new Store(APP_INITIAL_STATE);\n\n        this._throwback = new Store({\n            [CommonProps.MATRIX_CREATED]: false\n        });\n\n        // Setters and getters will be mounted on this. The object will be mutated.\n        const namespace = STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE;\n        const [, store] = transactor(this, options, this._store.model, {\n            namespace\n        });\n        transactor(this, localOptions, store, {\n            namespace\n        });\n        transactor(this, canvasOptions, store, {\n            namespace\n        });\n\n        this.dependencies(Object.assign({}, globalDependencies, this._dependencies));\n        this.firebolt(new GroupFireBolt(this, {\n            behavioural: behaviouralActions,\n            physical: physicalActions,\n            physicalBehaviouralMap: {}\n        }, sideEffects, behaviourEffectMap));\n        this.alias(`canvas-${getUniqueId()}`);\n        this.title('', {});\n        this.subtitle('', {});\n        this.legend({});\n        this.color({});\n        this.shape({});\n        this.size({});\n        setupChangeListener(this);\n         // init layoutManager\n        this._layoutManager = createLayoutManager();\n    }\n\n    /**\n     * Retrieves an instance of layout which is responsible for layouting. Layout is responsible for creating faceted\n     * presentation using table layout.\n     *\n     * @public\n     *\n     * @return {GridLayout} Instance of layout attached to canvas.\n     */\n    layout (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().layout;\n    }\n\n    /**\n     * Retrieves the composition for a canvas\n     *\n     * @public\n     *\n     * @return {object} Instances of the components which canvas requires to draw the full visualization.\n     *      ```\n     *          {\n     *              layout: // Instance of {@link GridLayout}\n     *              legend: // Instance of {@link Legend}\n     *              subtitle: // Instance of {@link TextCell} using which the title is rendered\n     *              title: // Instance of {@link TextCell} using which the title is rendered\n     *              visualGroup: // Instance of {@link visualGroup}\n     *          }\n     *      ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Sets or gets the alias of the canvas. Alias is a name by which the canvas can be referred.\n     *\n     * When setter\n     * @param {string} alias Name of the alias.\n     *\n     * @return {Canvas} Instance of the canvas.\n     *\n     * When getter\n     *\n     * @return {string} Alias of canvas.\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            const visualGroup = this.composition().visualGroup;\n            this._alias = params[0];\n            visualGroup && visualGroup.alias(this.alias());\n            return this;\n        }\n        return this._alias;\n    }\n\n    /**\n     * Creates an instance initiated with given settings.\n     *\n     * @param {Object} initialSettings Initial settings to be populated in the model\n     * @param {Object} regEntry newly created instance with the initial settings\n     * @param {Object} globalDependencies dependencies which will be created only once in the page\n     *\n     * @return {Object} newly created instance with the initial settings\n     */\n    static withSettings (initialSettings, regEntry, globalDependencies) {\n        const instance = new Canvas(globalDependencies);\n\n        for (const key in initialSettings) {\n            instance[key](initialSettings[key]);\n        }\n        // set registry for instance\n        instance.registry(regEntry);\n        return instance;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof Canvas\n     */\n    static formalName () {\n        return 'canvas';\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this canvas. The firebolt instance can be used to dispatch a\n     * behaviour dynamically on the canvas. This firebolt does not handle any physical actions. It is just used to\n     * propagate the action to all the visual units in it's composition.\n     *\n     * @public\n     *\n     * @return {GroupFireBolt} Instance of firebolt associated with canvas.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Registry peoperty accessor\n     *\n     * @param {Object} reg plain old javascript object keyvalue pairs. Key containing module name and value contains\n     * module definition class. The reg object has to be flat object of level 1.\n     */\n    registry (...params) {\n        if (params.length) {\n            const components = Object.assign({}, params[0].components);\n            const componentSubRegistry = Object.assign({}, params[0].componentSubRegistry);\n\n            this._registry = { components, componentSubRegistry };\n            const initedComponents = initCanvas(this);\n            // @todo is it okay to continue this tight behaviour? If not use a resolver to resolve diff component type.\n            this._composition.visualGroup = initedComponents[0];\n            createGroupState(this);\n            this.composition().visualGroup.alias(this.alias()).store(this._store);\n            return this;\n        }\n        return this._registry;\n    }\n\n    /*\n     * Prepare dependencies for top level elements\n     */\n    dependencies (...param) {\n        if (param.length) {\n            this._dependencies = param[0];\n            return this;\n        }\n        // @todo prepare dependencies here.\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     * @param {*} lifeCycles\n     *\n     * @memberof Canvas\n     */\n    lifeCycle (lifeCycles) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        if (lifeCycles) {\n            lifeCycleManager.register(lifeCycles);\n            return this;\n        }\n        return lifeCycleManager;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    legend (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().legend;\n    }\n\n    /**\n     * Returns a promise for various {@link LifecycleEvents} of the various components of canvas. The promise gets\n     * resolved once the particular event gets completed.\n     *\n     * To use this,\n     * ```\n     *      canvas.once('layer.drawn').then(() => {\n     *          // Do any post drawing work here.\n     *      });\n     * ```\n     * @public\n     *\n     * @param {string} eventName Name of the lifecycle event.\n     *\n     * @return {Promise} A pending promise waiting for resolve to be called.\n     */\n    once (eventName) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        return lifeCycleManager.retrieve(eventName);\n    }\n\n    /**\n     * Internal function to trigger render, this method is cognizant of all the properties of the core modules and\n     * establish a passive reactivity. Passive reactivity is not always a bad thing :)\n     * @internal\n     */\n    render () {\n        const mount = this.mount();\n        // removeChild(mount);\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        // Get render details including arrangement and measurement\n        const renderDetails = getRenderDetails(this, mount);\n        lifeCycleManager.notify({ client: this, action: 'beforedraw' });\n        // Prepare the layout by triggering the matrix calculation\n        prepareLayout(this.layout(), renderDetails);\n\n        this._layoutManager.dimension({\n            height: renderDetails.measurement.canvasHeight,\n            width: renderDetails.measurement.canvasWidth\n        });\n\n        this._layoutManager.renderAt(mount);\n\n        // Render each component\n        renderLayout(this._layoutManager, this.layout(), renderDetails);\n\n        setLayoutInfForUnits(this);\n\n        // setLabelRotation\n        setLabelRotationForAxes(this);\n    }\n\n    /**\n     * Returns the instances of x axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the top axis and the second element represents the bottom\n     *   // axis.\n     *   [\n     *      [X1, X2],\n     *      [X3, X4]\n     *   ]\n     * ```\n     * @public\n     *\n     * @return {Array.<Array>} Instances of x axis.\n     */\n    xAxes () {\n        return this.composition().visualGroup.getAxes('x');\n    }\n\n    /**\n     * Returns the instances of y axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the left axis and the second element represents the right\n     *   // axis.\n     *   [\n     *      [Y1, Y2],\n     *      [Y3, Y4]\n     *   ]\n     * ```\n     * @public\n     * @return {Array.<Array>} Instances of y axis.\n     */\n    yAxes () {\n        return this.composition().visualGroup.getAxes('y');\n    }\n\n    /**\n     * Returns all the retinal axis of the canvas. Color, shape and size axis are combinedly called retinal axis.\n     *\n     * @public\n     * @return {Object} Instances of retinal axis.\n     *          ```\n     *              {\n     *                  color: [ColorAxis], // Array of color axis.\n     *                  shape: [ShapeAxis], // Array of shape axis.\n     *                  size: [SizeAxis] // Array of size axis.\n     *              }\n     *          ```\n     */\n    getRetinalAxes () {\n        const visualGroup = this.composition().visualGroup;\n        return visualGroup.getAxes(RETINAL);\n    }\n\n    mount (...params) {\n        if (params.length) {\n            let value = params[0];\n            if (typeof params[0] === 'string') {\n                value = selectElement(params[0]).node();\n            }\n            this._mount = value;\n            return this;\n        }\n        return this._mount;\n    }\n}\n","import { cellRegistry, SimpleCell } from '@chartshq/visual-cell';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { layerRegistry } from '@chartshq/visual-layer';\nimport { SimpleGroup, VisualGroup } from '@chartshq/visual-group';\n\nexport const COMPONENTS = {\n    VisualGroup,\n    VisualUnit\n};\nexport const SUBREGISTRIES = {\n    cellRegistry,\n    layerRegistry\n};\nexport const INTERFACES = {\n    SimpleGroup,\n    SimpleCell\n};\n\n","import { DEFAULT_LAYERS } from './defaults';\n\nexport default () => {\n    const reg = DEFAULT_LAYERS;\n    const regObj = {\n        set: (key, def) => {\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n    return regObj;\n};\n","import {\n    transactor,\n    Smartlabel,\n    enableChainedTransaction,\n    LifeCycleManager,\n    DataModel,\n    makeElement,\n    getClientPoint,\n    selectElement,\n    getEvent,\n    require,\n    DateTimeFormatter\n} from 'muze-utils';\n\nimport {\n    SurrogateSideEffect,\n    SpawnableSideEffect,\n    sideEffects,\n    PersistentBehaviour,\n    GenericBehaviour,\n    VolatileBehaviour,\n    behaviouralActions,\n    GenericSideEffect\n} from '@chartshq/muze-firebolt';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport pkg from '../package.json';\nimport * as operators from './operators';\nimport { actionModel as ActionModel } from './action-model';\nimport options from './options';\nimport { Canvas } from './canvas';\nimport { COMPONENTS, SUBREGISTRIES } from './default-registry';\nimport './muze.scss';\n\n// Cache singleton instances which should be included only once in a page\nconst globalCache = {};\nconst defaultRegistry = COMPONENTS;\n\nconst overrideRegistryDefinitions = (overrideRegistry, registry) => {\n    for (const prop in overrideRegistry) {\n        registry.set(prop, overrideRegistry[prop]);\n    }\n};\n\n/**\n * Entry point to renderer. Initializes an environment with settings and registries for canvas. This is a simple wrapper\n * over {@link Canvas} which enables common configuration passing to multiple such canvases.\n *\n * Everytime `muze()` is called it creates an environment. These environment supports subset of APIs of Canvas. If\n * common configuration is used to render multiple canvases then it can be set directly in the env. Like if data is\n * common across all the visulization then its better to set the data in env. When a canvas is created it receives all\n * those configuration from env.\n *\n * ```\n *  // Creates an environment\n *  const env = muze()\n *  // Set data property in environment, so that all the canvas created from the same environment gets this data\n *  // automatically\n *  env.data(dm);\n *  // Creates canvas, by default env pushes data to canvas instance\n *  const canvas = env.canvas();\n * ```\n *\n * If a property is set on both environment and canvas instance, property set on canvas instance gets more priority.\n *\n * @public\n * @module muze\n * @namespace Muze\n *\n * @return {Env} Instance of an environment\n */\nconst muze = () => {\n    // Setters and getters will be mounted on this. Object will be mutated.\n    const [env, globalStore] = transactor({}, options);\n    const components = Object.assign({}, COMPONENTS);\n    const componentSubRegistryDef = Object.assign(SUBREGISTRIES);\n    const componentSubRegistry = {};\n\n    for (const prop in componentSubRegistryDef) {\n        componentSubRegistry[prop] = componentSubRegistryDef[prop]();\n    }\n\n    // Apart form the setter getter, an instance method is injected to create real renderer instances\n    env.canvas = () => {\n        // Create a canvas instance with this settings\n        const settings = globalStore.serialize();\n        const canvas = Canvas.withSettings(settings, { /* registry */\n            components,\n            componentSubRegistry\n        }, env.globalDependencies());\n\n        // Whenever settings is changed canvas is updated\n        enableChainedTransaction(globalStore, canvas, Object.keys(settings));\n\n        return canvas;\n    };\n\n    // Global dependencies for for compositions. Only one copy of the same should be in the page\n    env.globalDependencies = () => {\n        if (!globalCache.smartlabel) {\n            globalCache.smartlabel = new Smartlabel(1, 'body');\n        }\n        return {\n            smartlabel: globalCache.smartlabel,\n            lifeCycleManager: new LifeCycleManager()\n        };\n    };\n\n    // Retrieves global settings. This getter is readonly so that user can't change this as change should happen\n    // only from setter to avoid unwanted sync issues.\n    env.settings = () => globalStore.serialize();\n\n    env.registry = (...overrideRegistry) => {\n        // Selectively copy the properties from COMPONENTS\n        if (overrideRegistry.length) {\n            for (const prop in overrideRegistry) {\n                if (prop in defaultRegistry) {\n                    components[prop] = overrideRegistry[prop];\n                }\n            }\n            return env;\n        }\n        return components;\n    };\n\n    env.cellRegistry = (...overrideRegistry) => {\n        const cellRegistry = componentSubRegistry.cellRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], cellRegistry);\n            return env;\n        }\n        return cellRegistry.get();\n    };\n\n    env.layerRegistry = (...overrideRegistry) => {\n        const layerRegistry = componentSubRegistry.layerRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], layerRegistry);\n            return env;\n        }\n        return layerRegistry.get();\n    };\n\n    return env;\n};\n\nconst SideEffects = {\n    sideEffects,\n    standards: {\n        SurrogateSideEffect,\n        SpawnableSideEffect,\n        GenericSideEffect\n    }\n};\n\nconst Behaviours = {\n    behaviouralActions,\n    standards: {\n        GenericBehaviour,\n        PersistentBehaviour,\n        VolatileBehaviour\n    }\n};\n\nmuze.DataModel = DataModel;\nmuze.version = pkg.version;\nmuze.SideEffects = SideEffects;\nmuze.ActionModel = ActionModel;\nmuze.layerFactory = layerFactory;\nmuze.Operators = operators;\nmuze.Behaviours = Behaviours;\nmuze.utils = {\n    getClientPoint,\n    getEvent,\n    makeElement,\n    selectElement,\n    DateTimeFormatter,\n    require\n};\n\nexport default muze;\n"],"sourceRoot":""}
