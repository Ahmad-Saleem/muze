{"version":3,"sources":["webpack://muze/webpack/universalModuleDefinition","webpack://muze/webpack/bootstrap","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/index.js","webpack://muze/./packages/muze/node_modules/fusioncharts-smartlabel/lib/lib.js","webpack://muze/./packages/muze/node_modules/fusioncharts-smartlabel/lib/SmartlabelManager.js","webpack://muze/./packages/muze/src/index.js","webpack://muze/./packages/muze/node_modules/fusioncharts-smartlabel/lib/container-manager.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisector.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisect.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/range.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ticks.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/threshold/sturges.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/map.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/nest.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/set.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/ordinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/band.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/define.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/lab.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/rgb.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/string.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/parse.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/value.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/date.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/object.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/round.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/decompose.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/zoom.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hsl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hcl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/piecewise.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/continuous.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatDecimal.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/exponent.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatSpecifier.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTrim.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatPrefixAuto.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatRounded.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTypes.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatGroup.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatNumerals.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionFixed.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/tickFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionPrefix.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionRound.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/nice.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/log.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/pow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/threshold.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/interval.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/millisecond.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/second.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/minute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/hour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/day.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/week.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/month.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/year.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMinute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcHour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcDay.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcWeek.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMonth.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcYear.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoParse.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/time.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20b.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20c.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/viridis.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/sequential.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/ramp.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://muze/./packages/muze-utils/src/enums/reserved-fields.js","webpack://muze/./packages/muze-utils/src/enums/common-props.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/axis.js","webpack://muze/./packages/muze-utils/node_modules/d3-path/src/path.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/arc.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/line.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/area.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/radial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/lineRadial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/diamond.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/star.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/square.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/triangle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/wye.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/noop.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/bundle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRom.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linearClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/monotone.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/natural.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/step.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/stack.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/cubic.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/poly.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/sin.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/bounce.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/back.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/elastic.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/RedBlackTree.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Edge.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Cell.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Beach.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Diagram.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/voronoi.js","webpack://muze/./packages/muze-utils/node_modules/hyperdis/src/utils/set.js","webpack://muze/./packages/muze-utils/node_modules/hyperdis/src/utils/index.js","webpack://muze/./packages/muze-utils/node_modules/hyperdis/src/graph-node.js","webpack://muze/./packages/muze-utils/node_modules/hyperdis/src/electric-node.js","webpack://muze/./packages/muze-utils/node_modules/hyperdis/src/graph.js","webpack://muze/./packages/muze-utils/node_modules/hyperdis/src/index.js","webpack://muze/./packages/muze-utils/node_modules/hyperdis/src/model.js","webpack://muze/./packages/muze-utils/src/common-utils.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol.js","webpack://muze/./packages/muze-utils/src/enums/stack-config.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/diverging.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/expand.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/wiggle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/pie.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespaces.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespace.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/creator.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selector.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selectorAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/matcher.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sparse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/enter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/data.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sort.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/window.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/classed.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/html.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/raise.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/lower.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/insert.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/clone.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/exit.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/order.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/call.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/nodes.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/node.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/size.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/empty.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/each.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/property.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/append.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/datum.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/local.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/sourceEvent.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/mouse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/touch.js","webpack://muze/./packages/muze-utils/node_modules/d3-dispatch/src/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/noevent.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/nodrag.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/event.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/drag.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timer.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timeout.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/schedule.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/tween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/interpolate.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selection.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attrTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/styleTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/delay.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/ease.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/interrupt.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/interrupt.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/active.js","webpack://muze/./packages/muze-utils/src/renderer-utils.js","webpack://muze/./packages/muze-utils/src/DataSystem/selection.js","webpack://muze/./packages/muze-utils/src/DataSystem/data-object.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/event-list.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/lifecycle-manager.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/index.js","webpack://muze/./packages/muze-firebolt/src/enums/selection.js","webpack://muze/./packages/muze-firebolt/src/selection-set/index.js","webpack://muze/./packages/muze-firebolt/src/helper/index.js","webpack://muze/./packages/muze-firebolt/src/firebolt.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/generic.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/volatile.js","webpack://muze/./packages/muze-firebolt/src/enums/behaviours.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/highlight.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/brush.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/filter.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/persistent.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/select.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-action-config.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-event.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/hover.js","webpack://muze/./packages/muze-firebolt/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/index.js","webpack://muze/./packages/muze-firebolt/src/enums/actions.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/click.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/drag.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/longtouch.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/touch-drag.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic.js","webpack://muze/./packages/muze-firebolt/src/side-effects/surrogate.js","webpack://muze/./packages/muze-firebolt/src/side-effects/spawnable.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/helper.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/selection-box-drag.js","webpack://muze/./packages/muze-tooltip/src/constants.js","webpack://muze/./packages/muze-tooltip/src/default-config.js","webpack://muze/./packages/muze-tooltip/src/helper.js","webpack://muze/./packages/muze-tooltip/src/strategy.js","webpack://muze/./packages/muze-tooltip/src/content.js","webpack://muze/./packages/muze-tooltip/src/tooltip.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/helper/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/crossline/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/strategy.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/filter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/anchors/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/persistent-anchors.js","webpack://muze/./packages/muze-firebolt/src/side-effects/brush-anchors.js","webpack://muze/./packages/muze-firebolt/src/behaviour-effect-map.js","webpack://muze/./packages/visual-layer/src/enums/constants.js","webpack://muze/./packages/visual-layer/src/layers/area/default-config.js","webpack://muze/./packages/visual-layer/src/simple-layer/simple-layer.js","webpack://muze/./packages/transform/src/group-transform/index.js","webpack://muze/./packages/transform/src/identity-transform/index.js","webpack://muze/./packages/transform/src/transform-factory/index.js","webpack://muze/./packages/transform/src/enums/transform-type.js","webpack://muze/./packages/transform/src/stack-transform/index.js","webpack://muze/./packages/visual-layer/src/helpers/index.js","webpack://muze/./packages/visual-layer/src/base-layer/listener-map.js","webpack://muze/./packages/visual-layer/src/enums/props.js","webpack://muze/./packages/visual-layer/src/base-layer/default-options.js","webpack://muze/./packages/visual-layer/src/base-layer/base-layer.js","webpack://muze/./packages/visual-layer/src/layers/line/renderer.js","webpack://muze/./packages/visual-layer/src/layers/line/default-config.js","webpack://muze/./packages/visual-layer/src/layers/line/line.js","webpack://muze/./packages/visual-layer/src/layers/area/renderer.js","webpack://muze/./packages/visual-layer/src/layers/area/area.js","webpack://muze/./packages/visual-layer/src/layers/arc/default-config.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-helper.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc.js","webpack://muze/./packages/visual-layer/src/layers/text/renderer.js","webpack://muze/./packages/visual-layer/src/layers/text/default-config.js","webpack://muze/./packages/visual-layer/src/layers/text/text.js","webpack://muze/./packages/visual-layer/src/layers/point/renderer.js","webpack://muze/./packages/visual-layer/src/layers/point/default-config.js","webpack://muze/./packages/visual-layer/src/layers/point/point.js","webpack://muze/./packages/visual-layer/src/layers/bar/renderer.js","webpack://muze/./packages/visual-layer/src/layers/bar/default-config.js","webpack://muze/./packages/muze-axis/src/enums/axis-orientation.js","webpack://muze/./packages/muze-axis/src/enums/scale-type.js","webpack://muze/./packages/muze-axis/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/scale-creator.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/default-config.js","webpack://muze/./packages/muze-axis/src/axis-renderer.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/helper.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/props.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/simple-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/linear.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/log.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/pow.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/continous-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/band-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/time-axis.js","webpack://muze/./packages/muze-axis/src/color-axis/color-maps.js","webpack://muze/./packages/muze-axis/src/color-axis/defaults.js","webpack://muze/./packages/muze-axis/src/color-axis/props.js","webpack://muze/./packages/muze-axis/src/color-axis/color-strategy.js","webpack://muze/./packages/muze-axis/src/color-axis/color-axis.js","webpack://muze/./packages/muze-axis/src/size-axis/defaults.js","webpack://muze/./packages/muze-axis/src/size-axis/size-strategy.js","webpack://muze/./packages/muze-axis/src/size-axis/props.js","webpack://muze/./packages/muze-axis/src/size-axis/size-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/defaults.js","webpack://muze/./packages/muze-axis/src/shape-axis/props.js","webpack://muze/./packages/muze-axis/src/shape-axis/shape-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/helper.js","webpack://muze/./packages/muze-axis/src/data-type-scale-map.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-helper.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar.js","webpack://muze/./packages/visual-layer/src/layers/tick/default-config.js","webpack://muze/./packages/visual-layer/src/layers/tick/renderer.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick.js","webpack://muze/./packages/visual-layer/src/layer-factory/index.js","webpack://muze/./packages/visual-layer/src/defaults.js","webpack://muze/./packages/visual-group/src/enums/constants.js","webpack://muze/./packages/visual-group/src/visual-group/local-options.js","webpack://muze/./packages/visual-group/src/simple-group/simple-group.js","webpack://muze/./packages/visual-group/src/variable/variable.js","webpack://muze/./packages/visual-group/src/variable/composed-vars.js","webpack://muze/./packages/visual-group/src/variable/simple-var.js","webpack://muze/./packages/visual-group/src/encoder/field-sanitizer.js","webpack://muze/./packages/visual-group/src/encoder/visual-encoder.js","webpack://muze/./packages/visual-group/src/enums/scale-maps.js","webpack://muze/./packages/visual-group/src/data-type-scale-map.js","webpack://muze/./packages/visual-group/src/encoder/encoder-helper.js","webpack://muze/./packages/visual-group/src/encoder/cartesian-encoder.js","webpack://muze/./packages/visual-group/src/encoder/polar-encoder.js","webpack://muze/./packages/visual-group/src/encoder/retinal-encoder.js","webpack://muze/./packages/visual-group/src/group-helper/group-utils.js","webpack://muze/./packages/visual-group/src/enums/defaults.js","webpack://muze/./packages/muze-utils/src/DataSystem/dataSelect.js","webpack://muze/./packages/visual-unit/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/visual-unit/src/enums/reactive-props.js","webpack://muze/./packages/visual-unit/src/helper/index.js","webpack://muze/./packages/visual-unit/src/helper/grid-lines.js","webpack://muze/./packages/visual-unit/src/default-config.js","webpack://muze/./packages/visual-unit/src/enums/constants.js","webpack://muze/./packages/visual-unit/src/local-options.js","webpack://muze/./packages/visual-unit/src/listener-map.js","webpack://muze/./packages/visual-unit/src/props.js","webpack://muze/./packages/visual-unit/src/firebolt/helper.js","webpack://muze/./packages/visual-unit/src/firebolt/payload-generator.js","webpack://muze/./packages/visual-unit/src/firebolt/data-propagator.js","webpack://muze/./packages/visual-unit/src/firebolt/index.js","webpack://muze/./packages/visual-unit/src/visual-unit.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-model.js","webpack://muze/./packages/visual-group/src/group-helper/cell-creator.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-resolver.js","webpack://muze/./packages/visual-group/src/visual-group/value-matrix.js","webpack://muze/./packages/visual-group/src/visual-group/change-listener.js","webpack://muze/./packages/visual-group/src/visual-group/props.js","webpack://muze/./packages/visual-group/src/visual-group/visual-group.js","webpack://muze/./packages/muze-legend/src/firebolt/behavioural/select.js","webpack://muze/./packages/muze-legend/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/muze-legend/src/firebolt/behaviour-effect-map.js","webpack://muze/./packages/muze-legend/src/enums/behaviours.js","webpack://muze/./packages/muze-legend/src/enums/side-effects.js","webpack://muze/./packages/muze-legend/src/enums/constants.js","webpack://muze/./packages/muze-legend/src/firebolt/helper.js","webpack://muze/./packages/muze-legend/src/firebolt/legend-firebolt.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/drag.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/hover.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/click.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/index.js","webpack://muze/./packages/muze-legend/src/enums/actions.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/selection-box-drag.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/selection-box/index.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/strategies.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/index.js","webpack://muze/./packages/muze-legend/src/legend/props.js","webpack://muze/./packages/muze-legend/src/legend/defaults.js","webpack://muze/./packages/muze-legend/src/legend/legend-helper.js","webpack://muze/./packages/muze-legend/src/legend/simple-legend.js","webpack://muze/./packages/muze-legend/src/legend/position-config.js","webpack://muze/./packages/muze-legend/src/legend/renderer.js","webpack://muze/./packages/muze-legend/src/legend/discrete-legend.js","webpack://muze/./packages/muze-legend/src/legend/gradient-helper.js","webpack://muze/./packages/muze-legend/src/legend/gradient-legend.js","webpack://muze/./packages/muze-legend/src/legend/step-legend.js","webpack://muze/./packages/muze/src/constants.js","webpack://muze/./packages/muze/src/operators.js","webpack://muze/./packages/muze/src/action-model.js","webpack://muze/./packages/muze/src/defaults.js","webpack://muze/./packages/muze/src/options.js","webpack://muze/./packages/layout/src/enums/constants.js","webpack://muze/./packages/layout/src/generic-layout/index.js","webpack://muze/./packages/layout/src/grid-layout/defaults.js","webpack://muze/./packages/layout/src/grid-layout/span-maker.js","webpack://muze/./packages/layout/src/grid-layout/renderer.js","webpack://muze/./packages/layout/src/utils/index.js","webpack://muze/./packages/layout/src/visual-matrix/props.js","webpack://muze/./packages/layout/src/visual-matrix/default-config.js","webpack://muze/./packages/layout/src/visual-matrix/visual-matrix.js","webpack://muze/./packages/layout/src/grid-layout/computations.js","webpack://muze/./packages/layout/src/grid-layout/layout.js","webpack://muze/./packages/layout/src/grid-layout/layout-helper.js","webpack://muze/./packages/muze/src/transaction-support.js","webpack://muze/./packages/visual-cell/src/enums/constants.js","webpack://muze/./packages/visual-cell/src/enums/cell-type.js","webpack://muze/./packages/visual-cell/src/simple-cell.js","webpack://muze/./packages/visual-cell/src/enums/defaults.js","webpack://muze/./packages/visual-cell/src/props.js","webpack://muze/./packages/visual-cell/src/axis-cell.js","webpack://muze/./packages/visual-cell/src/blank-cell.js","webpack://muze/./packages/visual-cell/src/text-cell.js","webpack://muze/./packages/visual-cell/src/geom-cell.js","webpack://muze/./packages/visual-cell/src/defaults.js","webpack://muze/./packages/visual-cell/src/constants.js","webpack://muze/./packages/visual-cell/src/cell-registry.js","webpack://muze/./packages/muze/src/canvas/component-resolver.js","webpack://muze/./packages/muze/src/canvas/title-maker.js","webpack://muze/./packages/muze/src/canvas/legend-maker.js","webpack://muze/./packages/muze/src/canvas/layout-maker.js","webpack://muze/./packages/muze/src/canvas/defaults.js","webpack://muze/./packages/muze/src/canvas/local-options.js","webpack://muze/./packages/muze/src/canvas/renderer.js","webpack://muze/./packages/muze/src/canvas/firebolt.js","webpack://muze/./packages/muze/src/canvas/helper.js","webpack://muze/./packages/muze/src/canvas/canvas.js","webpack://muze/./packages/muze/src/default-registry.js","webpack://muze/./packages/visual-layer/src/layer-registry.js","webpack://muze/./packages/muze/src/muze.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/enums/data-format.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/enums/dimension-subtype.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/enums/measure-subtype.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/enums/field-type.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/enums/filtering-mode.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/operator/row-diffset-iterator.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/fields/field.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/utils/date-time-formatter.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/utils/column-major.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/utils/extend2.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/utils/helper.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/field-store.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/value.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/operator/bucket-creator.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/constants/index.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/operator/child-iterator.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/operator/get-common-schema.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/operator/cross-product.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/operator/merge-sort.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/operator/data-builder.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/operator/difference.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/operator/group-by-function.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/utils/reducer-store.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/operator/group-by.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/operator/natural-join-filter-function.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/operator/union.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/operator/outer-join.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/fields/partial-field.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/fields/measure.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/utils/domain-generator.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/fields/dimension.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/fields/categorical.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/fields/datetime.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/fields/discreteMeasure.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/field-creator.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/default-config.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/converter/dsv-arr.js","webpack://muze/./packages/muze-utils/node_modules/d3-dsv/src/dsv.js","webpack://muze/./packages/muze-utils/node_modules/d3-dsv/src/csv.js","webpack://muze/./packages/muze-utils/node_modules/d3-dsv/src/tsv.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/converter/dsv-str.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/converter/flat-json.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/converter/auto-resolver.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/helper.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/relation.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/datamodel.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/stats/index.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/export.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/operator/compose.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/operator/pure-operators.js","webpack://muze/./packages/muze-utils/node_modules/datamodel/src/operator/natural-join.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","DataModel","default","lib","init","win","doc","document","userAgent","navigator","ceil","Math","floor","clsNameSpace","containerClass","classNameWithTag","classNameWithTagBR","maxDefaultCacheLimit","classNameReg","RegExp","classNameBrReg","spanAdditionRegx","spanAdditionReplacer","spanRemovalRegx","xmlTagRegEx","ltgtRegex","brReplaceRegex","testStrAvg","parentContainerStyle","position","top","whiteSpace","padding","width","height","overflow","supportedStyle","font","fontFamily","font-family","fontWeight","font-weight","fontSize","font-size","lineHeight","line-height","fontStyle","font-style","getDocumentSupport","childRetriverFn","childRetriverString","noClassTesting","getElementsByClassName","isIE","test","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","isHeadLess","isWebKit","createContainer","containerParent","body","container","offsetWidth","offsetHeight","appendChild","createElement","className","setAttribute","getElementsByTagName","getNearestBreakIndex","text","maxWidth","sl","length","difference","getWidth","_getWidthFn","charLen","increment","oriWidth","avgWidth","substr","setLineHeight","styleObj","fSize","parseInt","_interopRequireDefault","obj","_lib2","_containerManager2","slLib","undefined","M","max","round","htmlSplCharSpace"," ","documentSupport","SVG_BBOX_CORRECTION","SmartLabelManager","id","useEllipses","options","wrapper","prop","prevInstance","isBrowserLess","store","_typeof","dispose","this","maxCacheLimit","isFinite","getElementById","innerHTML","style","parentContainer","_containerManager","_showNoEllipses","_init","setStyle","textToLines","smartlabel","toString","lines","split","_calCharDimWithCache","calculateDifference","size","csArr","tw","twi","cachedStyle","asymmetricDifference","maxAdvancedCacheLimit","_container","cache","_advancedCache","advancedCacheKey","_advancedCacheKey","cacheName","cacheInitName","repeat","Array","join","push","shift","parseFloat","contObj","_containerObj","svgText","str","bbox","textContent","getBBox","_styleNotSet","sCont","node","_context","context","_cache","charCache","_lineHeight","useEllipsesOnOverflow","getSmartText","maxHeight","noWrap","len","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriHeight","newCharIndex","nearestChar","tempChar","initialLeft","initialTop","getOriSizeImproveObj","spanArr","x","y","minWidth","elem","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","ellipsesWidth","dotWidth","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","replace","charAt","slice","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","match","getOriSize","detailObj","tooltext","lastIndexOf","splice","concat","spaceIdx","dashIdx","offsetLeft","offsetTop","parentNode","insertBefore","removeChild","error","Error","detailedCalculationFlag","textArr","letter","lSize","cumulativeSize","indiSizeStore","Muze","ContainerManager","maxContainers","svg","first","last","containers","rootNode","createElementNS","setAttributeNS","svgRoot","diff","containerObj","keyStr","prev","next","removeContainer","addContainer","avgCharWidth","display","cObj","ascending","a","b","NaN","bisector","compare","ascendingComparator","f","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisect","number","array_array","src_range","map","start","stop","step","arguments","range","e10","sqrt","e5","e2","src_ticks","count","reverse","ticks","tickIncrement","power","log","LN10","pow","tickStep","step0","abs","step1","quantile","values","valueof","i0","value0","map_Map","map_map","each","set","isArray","constructor","has","remove","clear","keys","entries","empty","src_map","src_nest","sortValues","rollup","nest","sortKeys","apply","array","depth","createResult","setResult","sort","keyValue","valuesByKey","result","createObject","setObject","createMap","setMap","sortKey","v","k","order","set_Set","proto","set_set","add","src_array_array","src_array_map","array_slice","implicit","ordinal","index","domain","unknown","scale","_","copy","band","bandwidth","ordinalRange","paddingInner","paddingOuter","align","rescale","rangeRound","min","invertExtent","r0","r1","hiIndex","getClosestIndexOf","invert","arr","side","highVal","d1","low","high","extend","parent","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_color","format","trim","toLowerCase","exec","Rgb","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","color_rgb","hex","h","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","isNaN","deg2rad","PI","rad2deg","Xn","Yn","Zn","lab_t0","lab_t1","t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","A","B","C","cubehelix_D","E","ED","EB","BC_DA","cubehelix_cubehelix","cubehelixConvert","Cubehelix","bl","basis","t1","v0","v1","v2","v3","cosh","sinh","src_constant","linear","color_hue","gamma","nogamma","exponential","rgbGamma","color","end","rgbSpline","spline","colors","rgbBasis","src_number","reA","reB","source","cssNode","cssRoot","cssView","svgNode","src_string","am","bm","bs","bi","lastIndex","q","one","string_zero","src_value","value_typeof","src_rgb","Date","setTime","nb","na","valueOf","src_round","degrees","decompose_identity","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","e","atan","interpolateTransform","parse","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","interpolateTransformCss","parseCss","documentElement","defaultView","transform","getComputedStyle","getPropertyValue","interpolateTransformSvg","parseSvg","baseVal","consolidate","matrix","SQRT2","hsl_hsl","hue","hslLong","hcl_hcl","src_cubehelix_cubehelix","cubehelixGamma","cubehelix","cubehelixLong","piecewise_piecewise","interpolate","I","d3_scale_src_constant","d3_scale_src_number","continuous_unit","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","j","target","clamp","continuous","piecewise","output","input","deinterpolateClamp","reinterpolateClamp","formatDecimal","toExponential","indexOf","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","fill","sign","symbol","zero","comma","precision","type","prefixExponent","defaultLocale_locale","defaultLocale_format","defaultLocale_formatPrefix","formatTrim","out","i1","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","src_identity","prefixes","src_locale","locale","group","grouping","thousands","substring","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","charCodeAt","Infinity","formatPrefix","defaultLocale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","linear_linear","identity_identity","src_nice","interval","x0","x1","log_deinterpolate","log_reinterpolate","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","u","raise","quantile_quantile","thresholds","quantiles","quantize_quantize","threshold_threshold","interval_t0","interval_t1","newInterval","floori","offseti","field","date","offset","previous","filter","every","millisecond_millisecond","src_millisecond","durationMinute","durationWeek","second_second","getUTCSeconds","minute_minute","getMinutes","hour_hour","getTimezoneOffset","getHours","src_hour","day_day","setHours","setDate","getDate","src_day","weekday","getDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","month_month","setMonth","getMonth","getFullYear","src_month","year_year","setFullYear","src_year","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","src_utcYear","localDate","H","S","L","utcDate","UTC","newYear","src_defaultLocale_locale","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","locale_pad","string","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","getMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","getSeconds","formatWeekdayNumberMonday","day","formatWeekNumberSunday","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","locale_formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","src_utcDay","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","defaultLocale_defaultLocale","formatLocale","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatPeriod","Y","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parsePeriod","parseLocaleDate","parseLocaleTime","pad","newParse","newDate","week","toISOString","time_durationSecond","time_durationMinute","time_durationHour","time_durationDay","time_durationWeek","durationMonth","durationYear","time_date","time_number","calendar","year","month","hour","minute","second","millisecond","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatYear","tickIntervals","tickInterval","t0","src_time","src_minute","src_second","src_colors","category10","category20b","category20","ramp","sequential","interpolator","d3_scale_chromatic_src_colors","Accent","Dark2","Paired","Pastel1","Pastel2","Set1","Set2","Set3","src_ramp","scheme","BrBG_scheme","BrBG","PRGn_scheme","PRGn","PiYG_scheme","PiYG","PuOr","RdBu","RdGy","RdYlBu","RdYlGn","Spectral","BuGn","BuPu","GnBu","OrRd","PuBuGn","PuBu","PuRd","RdPu","YlGnBu","YlGn","YlOrBr","YlOrRd","Blues_scheme","Blues","Greens","Greys","Purples","Reds","Oranges","sequential_multi_cubehelix","rainbow_warm","rainbow_cool","rainbow_c","sequential_multi_rainbow","ts","viridis_ramp","viridis_magma","viridis_inferno","viridis_plasma","reserved_fields","ROW_ID","common_props","ACTION_INF","ON_LAYER_DRAW","src_array_slice","d3_axis_src_identity","axis_top","axis_right","axis_bottom","axis_left","epsilon","entering","__axis","axis_axis","orient","tickArguments","tickValues","tickTransform","tickSizeInner","tickSizeOuter","tickPadding","axis","spacing","range0","range1","axis_center","axis_number","selection","path","selectAll","data","tick","tickExit","exit","tickEnter","enter","append","attr","line","select","merge","insert","transition","getAttribute","tickSize","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","path_path","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","a1","ccw","dx","dy","cw","da","rect","src_path","d3_shape_src_constant","constant","math_max","math_min","math_sqrt","math_epsilon","math_pi","halfPi","math_tau","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","d2","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","point","curve_linear","point_x","point_y","defined","curve","buffer","defined0","src_area","area","x0z","y0z","arealine","src_line","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","curveRadial","Radial","_curve","radial","d3_shape_src_array_slice","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye_s","wye_k","wye_a","wye","noop","that","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","beta","_basis","_beta","_x","_y","custom","bundle","cardinal_point","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","catmullRom_point","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","monotone_sign","slope3","h0","h1","s0","s1","slope2","monotone_point","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","_t","curve_step","stepBefore","stepAfter","none","series","order_none","stackValue","order_ascending","sums","ascending_sum","cubicInOut","polyIn","polyOut","polyInOut","b1","b2","b3","b4","b5","b6","b7","b8","b9","b0","bounceOut","backIn","overshoot","backOut","backInOut","elastic_tau","elasticOut","elasticIn","amplitude","period","d3_voronoi_src_constant","elasticInOut","src_point_x","src_point_y","RedBlackTree","RedBlackNode","R","P","N","RedBlackRotateLeft","tree","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","sibling","src_RedBlackTree","createEdge","edge","Diagram_edges","setEdgeEnd","Diagram_cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","Diagram_epsilon2","ha","hc","circle","Circle","before","circles","detachCircle","beachPool","createBeach","beach","Beach","detachBeach","beaches","removeBeach","disappearing","Diagram_epsilon","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","sortCellHalfedges","clipEdges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","cover","dc","v00","v01","v11","v10","edges","cells","polygons","polygon","triangles","forEach","e1","links","find","radius","_found","vx","vy","src_voronoi","voronoi","makeEntry","sCon","ForeignSet","_classCallCheck","_set","set1","set2","filteredKeys","s2","isSimpleObject","utils_typeof","reqAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","getTimeBasedId","__lastTime","getTime","__id","flat","_len","params","_key","res","param","_toConsumableArray","scheduler","onFinishCallback","queue","animationFrame","listeners","unique","fns","reduce","fn","utils_fetch","fetch","namedNode","_len2","_key2","qualifiedName","seed","fetchAggregator","_len3","_key3","dependencies","getUpstreamNodes","list","rec","qname","placedIndex","preArr","postArr","outgoingEdges","utils_resolver","accumulate","_len4","_key4","resp","nodeDetails","assign","_defineProperty","identity","CustomResolver","resolver","utils_classCallCheck","dep","_dep","GraphNode","graph_node_classCallCheck","_seed","requireResolve","retriever","history","electricEdges","_edges","_this","entry","graph_node_toConsumableArray","retrieveDetails","head","hist","ElectricNode","electric_node_classCallCheck","nextFrame","currentFrame","lstnrs","pullableRecent","nodes","nFn","_this2","pullableEnd","Graph","graph_classCallCheck","qualifiedNodeMap","graph_node","_wholeSet","_propagate","propagationOverride","currentFrameListeners","nextFrameListeners","_schedule","flush","mount","val","resolveReqList","objn","perv","addDependencies","_node","graph_toConsumableArray","getDependencies","utils_set","getResolvedList","resolve","props","fnSpec","_ref","eNode","electric_node","addEdges","addElectricNode","changedSet","upstreamNodes","upstreamNode","__execUniqueElectricEdges","from","Set","_this3","cfLstnrs","nfLstnrs","toArray","repeatHead","resetPropagationOverride","_this4","qnames","args","update","resolved","resolveDependencyOrder","resolveMap","neighbour","isRoot","hyperdis_src","Model","model_classCallCheck","_graph","graph","_lockFlag","_reqQ","mountPoint","_addPropInModel","_customResolver","calculationConfig","customResolver","varName","fetchFn","model_toConsumableArray","model_defineProperty","createNodesFrom","instantCall","_graph$stopPropagatio","propsArr","unsub","createElectricNodeOf","stopPropagation","setPropagationOverride","resetNodeValue","_graph$stopPropagatio2","setProp","getNodeValue","getNodeFromQualifiedName","HTMLElement","common_utils_isSimpleObject","common_utils_typeof","getUniqueId","random","clone","sanitizeIP","typeObj","nonExistentKeys","checkExistence","getMax","common_utils_toConsumableArray","getMin","common_utils_getDomainFromData","getDomainFromData","fields","fieldType","domArr","datamodel_src","CATEGORICAL","firstMin","secondMin","firstMax","secondMax","symbolFns","cross","easeFns","cubic","bounce","src_linear_linear","elastic","back","poly","circleInOut","common_utils_getClosestIndexOf","getQualifiedClassName","cancelAnimationFrame","cls","defaultValue","objectIterator","common_utils_Voronoi","Voronoi","common_utils_classCallCheck","_voronoi","_voronoiFn","common_utils_Store","Store","config","model","_listeners","serialize","propName","propNames","callBack","on","calculatedProp","intSanitizer","common_utils_transactor","transactor","holder","conf","_loop","common_utils_defineProperty","meta","compareTo","paramsLen","prevVal","spreadParams","sanitization","typeCheck","typeExpected","preset","oldValues","generateGetterSetters","propInfo","typeChecker","common_utils_isEqual","isEqual","oldVal","newVal","arraysEqual","arr1","arr2","is","ERROR_MSG","INTERFACE_IMPL","mergeRecursive","sink","common_utils_numberInterpolator","numberInterpolator","common_utils_piecewiseInterpolator","piecewiseInterpolator","rgbToHsv","detectColor","col","getDataModelFromRange","dataModel","criteria","selFields","selFn","saveChild","common_utils_getDataModelFromIdentifiers","getDataModelFromIdentifiers","identifiers","filteredDataModel","fieldsConfig","getFieldsConfig","dataArr","Function","filteredSchema","include","propField","idx","findIndex","common_utils_registerListeners","registerListeners","listenerMap","propListenerMap","mapObj","propType","listenerFn","listener","isValidValue","getObjProp","retObj","common_utils_getSymbol","getSymbol","src_symbol","stackOrders","_stackOrders","stackOffsets","yp","yn","_stackOffsets","si","sij0","s3","sk","common_utils_stack","stack","oz","kz","sz","sij","ki","src_stack","pathInterpolators","curveLinear","curveStepAfter","curveStepBefore","curveStep","curveCatmullRom","Symbols","axisLeft","axisRight","axisTop","axisBottom","pie","sum","arcs","pa","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","intersect","x3","y3","x32","y32","kc","lc","centroid","Scales","xhtml","namespaces","xlink","xml","xmlns","namespace","space","local","creator","fullname","creatorFixed","ownerDocument","creatorInherit","uri","namespaceURI","selector_none","src_selector","selector","querySelector","selectorAll_empty","selectorAll","querySelectorAll","matcher","matches","matcher_element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","src_matcher","sparse","EnterNode","datum","_next","_parent","__data__","child","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","sort_ascending","src_window","styleValue","classArray","classList","ClassList","_names","classedAdd","classedRemove","contains","textRemove","htmlRemove","raise_raise","nextSibling","lower","previousSibling","firstChild","constantNull","remove_remove","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","on_event","mouseenter","mouseleave","filterContextListener","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","selection_root","Selection","groups","parents","_groups","_parents","selection_selection","subgroups","subnode","subgroup","d3_selection_src_constant","enterGroup","updateGroup","_enter","_exit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","attrRemoveNS","removeAttributeNS","attrRemove","removeAttribute","attrFunctionNS","attrFunction","attrConstantNS","attrConstant","priority","styleRemove","removeProperty","styleFunction","setProperty","styleConstant","propertyRemove","propertyFunction","propertyConstant","classed","classedFunction","classedTrue","classedFalse","textFunction","textConstant","html","htmlFunction","htmlConstant","deep","typenames","parseTypenames","dispatch","dispatchFunction","dispatchConstant","src_selection","src_select","nextId","Local","current","src_point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","dispatch_noop","dispatch_dispatch","Dispatch","dispatch_get","dispatch_set","T","dispatch_parseTypenames","types","src_dispatch","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","d3_drag_src_constant","DragEvent","subject","active","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","taskHead","taskTail","src_drag","mousedownx","mousedowny","mousemoving","touchending","touchable","gestures","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","yesdrag","noclick","clearTimeout","sublisteners","clickDistance","timer_frame","timeout","timer_interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","timer_typeof","now","setFrame","clearNow","Timer","_call","_time","timer","delay","restart","wake","timerFlush","nap","sleep","poke","clearInterval","setInterval","TypeError","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","schedule_create","self","tween","state","duration","ease","schedule","schedule_get","schedule_set","tweenValue","_id","transition_interpolate","selection_Selection","transition_id","Transition","_name","newId","selection_prototype","src_transition_transition","children","inherit","id0","id1","onFunction","on0","on1","sit","on_start","attrTween","attr_attrFunctionNS","value00","value10","interpolate0","value1","attr_attrFunction","attr_attrRemoveNS","attr_attrRemove","attr_attrConstantNS","attr_attrConstant","_value","attrTweenNS","styleTween","style_styleRemove","styleRemoveEnd","style_styleFunction","style_styleConstant","text_textFunction","text_textConstant","removeFunction","tweenRemove","tween0","tween1","tweenFunction","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","defaultTiming","transition_inherit","interrupt","renderer_utils_selectElement","selectElement","element","makeElement","elemType","callbacks","keyFn","SVGElement","selectorVal","selectorType","actualSelector","enterSel","mergeSel","exitSel","applyStyle","setElementAttrs","attrs","renderer_utils_setAttrs","setAttrs","renderer_utils_setStyles","setStyles","styles","renderer_utils_createElements","createElements","sel","renderer_utils_getClientPoint","getClientPoint","pos","clientPoint","renderer_utils_getEvent","getEvent","renderer_utils_getD3Drag","getD3Drag","renderer_utils_getSmartComputedStyle","getSmartComputedStyle","css","textEl","mandatoryStyle","fill-opacity","renderer_utils_typeof","computedStyle","styleForSmartLabel","hasTouch","DataSystem_selection","selection_classCallCheck","_data","_idMap","_mode","_enterdata","_exitdata","newData","idGetter","_idGetter","tempMap","purgedIds","purged","temp","item","_this5","_this6","DataObject","data_object_classCallCheck","events","EVENT_LIST","composition","event_list","lifecycle_manager_resolver","resolveFn","notification","hasOwn","src_lifecycle_manager","LifeCycleManager","lifecycle_manager_classCallCheck","_eventList","_promises","Map","_notifiers","_lifeCycles","_unreleasedLifeCycles","_boot","acc","_preparePromises","eventName","Promise","_makeNotifierPromise","formalName","client","_releasePromisesFromCache","_notify","stage","action","_resolvePromise","promise","retrieve","_callLifeCycleCallback","_cachePromise","_resetTargetPromise","lifeCycles","SELECTION_NEW_ENTRY","SELECTION_NEW_EXIT","SELECTION_NULL","SELECTION_OLD_ENTRY","SELECTION_OLD_EXIT","selection_set","SelectionSet","completeSet","_volatile","selection_set_classCallCheck","_completeSetCount","_lockedSelection","_resetted","ids","entrySet","exitSet","Number","lockedSel","addSet","removeSet","updateSet","changeSideEffectAvailability","toEnable","sideEffects","change","enable","disable","getMergedSet","helper_toConsumableArray","conditionsMap","newEntry","oldEntry","mergedEnter","newExit","oldExit","mergedExit","complete","getSetInfo","selectionSet","propagationData","resetted","getModelFromSet","some","condition","uids","Firebolt","actions","behaviourEffectMap","firebolt_classCallCheck","_sideEffectDefinitions","_sideEffects","_propagationInf","_actions","behavioural","physical","_selectionSet","_volatileSelectionSet","_propagationFields","_sourceSideEffects","tooltip","selectionBox","_actionBehaviourMap","_config","_behaviourEffectMap","_entryExitSet","_actionHistory","_queuedSideEffects","mapSideEffects","registerBehaviouralActions","registerSideEffects","registerPhysicalBehaviouralMap","physicalBehaviouralMap","registerPhysicalActions","sideEffectConf","behEffectMap","firebolt_toConsumableArray","behaviours","initializeBehaviouralActions","dispatchableBehaviours","Action","prepareSelectionSets","payload","sideEffectStore","actionHistory","queuedSideEffects","sideEffect","effects","combinedSet","unionSets","models","behaviour","entryExitSet","existingModel","union","helper_unionSets","effect","firebolt_typeof","sideEffectInstance","isEnabled","mutates","isMutableAction","dispatchSideEffect","propagationInfo","propagate","getSideEffects","propagationSelectionSet","getPropagationSelectionSet","shouldApplySideEffects","sourceSelectionSet","applicableSideEffects","getApplicableSideEffects","applySideEffects","physicalAction","actionBehaviourMap","behaviourMap","unsubscribe","onDataModelPropagation","propValue","dispatchBehaviour","uniqueIds","behaviouralActions","volatileSelectionSet","sideEffectDefinitions","initializeSideEffects","sideEffectsMap","SideEffect","helper_initializeSideEffects","initedActions","initializePhysicalActions","physicalActions","initedPhysicalActions","getDefaultTargetContainer","bindActionWithBehaviour","targets","behaviourList","propagationInf","xFields","yFields","xMeasures","MEASURE","yMeasures","filterPropagationModel","propModel","measures","_propModel$getData","getData","schema","filteredModel","fieldMap","row","def","common_utils_filterPropagationModel","getFullData","sourceId","propagationSource","applicableSelectionSets","GenericBehaviour","firebolt","generic_classCallCheck","_enabled","selectionSets","getSelectionSets","_firebolt$getAddSetFr","getAddSetFromCriteria","getPropagationInf","setSelectionSet","getEntryExitSet","_selectionSet$getSets","getSets","setConfig","isSourceFieldPresent","getSourceFields","sourceIdentifiers","getSchema","generic","reset","existingAddSet","updateExit","getCompleteSet","BRUSH","HIGHLIGHT","TOOLTIP","FILTER","SELECT","behavioural_volatile","updateEntry","mergedExitSet","completeSetCount","persistent","drag_action_config","getDragActionConfig","sourceInfo","axes","xAxis","yAxis","axisFields","xField","getMembers","yField","xFieldType","subtype","yFieldType","dimensions","stPos","startPos","endPos","dragDim","isXDimension","isYDimension","xRange","yRange","selectedDomains","rangeObj","xdom","ydom","snap","getNearestRange","drag_event_attachDragEvent","attachDragEvent","targetEl","d3Drag","boundingBox","touchStart","getSourceInfo","beh","dragEnd","physical_hover","hover","interaction","getDrawingContext","svgContainer","nearestPoint","getNearestPoint","getAllPoints","showInPosition","helpers_generatePayloadFromEvent","generatePayloadFromEvent","DRAG","HOVER","SELECTIONDRAG","CLICK","LONGTOUCH","TOUCHDRAG","physical_click","click","physical_defineProperty","_physicalActions","longtouch","touchEnd","touchdrag","GenericSideEffect","side_effects_generic_classCallCheck","_strategy","_strategies","defaultConfig","side_effects_generic","interactionType","layers","layer","interactive","applyInteractionStyle","_drawingContext","helper_changeVisibility","changeVisibility","sideEffectGroup","visible","defClassName","classPrefix","selection_box","spawnable","boxConf","box","drawingInf","drawingContext","unitWidth","unitHeight","selectionGroupClassName","hide","sourceInf","_getBoxDimensionsFrom","getBoxDimensionsFromPayload","direction","xDim","yDim","xLinear","yLinear","xCriteria","yCriteria","bandScale","x1Val","x2Val","x1DomainIndex","x2DomainIndex","_sort","_sort2","helper_slicedToArray","getScaleValue","getUnitWidth","y1Val","y2Val","y1DomainIndex","y2DomainIndex","_sort3","_sort4","_xDim","_yDim","dimension","show","points","selectionBoxDrag","onDrag","selection_box_drag_selectionBoxDrag","boxClassName","INITIAL_STYLE","default_config_defaultConfig","connectorClassName","margin","content","iconContainerSize","iconSize","iconShape","iconColor","rowMargin","separator","parentClassName","arrow","disabled","helper_getArrowPos","getArrowPos","dim","measurement","arrowPos","boxHeight","boxWidth","arrowWidth","plotBottom","boxBottom","plotRight","boxRight","helper_placeArrow","placeArrow","tooltipArrow","_tooltipArrow","tooltipBackground","_tooltipBackground","arrowConf","_arrowOrientation","timeFormats","timeDurations","strategy_defaultTooltipFormatters","defaultTooltipFormatters","formatter","_formatters","strategy_defineProperty","formatters","TEMPORAL","nearestInterval","getNearestInterval","strategy_getNearestInterval","formatAs","DIMENSION","strategy_strategy","buildTooltipData","fieldValues","dataObj","fieldspace","getFieldspace","fieldsObj","dimensionMeasureMap","dataLen","getRowContent","formattedValue","measureIndex","getMinDiff","formatterFn","uniqueVals","strategy_toConsumableArray","colorAxis","shapeAxis","shape","sizeAxis","isRetinalField","associatedMeasures","icon","getColor","getShape","getSize","measure","numberFormat","margin-left","allMeasures","strategy_buildTooltipData","DEFAULT_STRATEGY","Content","content_classCallCheck","_model","_formatter","strategy","ctx","_mount","rows","margin-right","el","Tooltip","htmlContainer","tooltip_classCallCheck","connectorContainer","tooltipConf","contentClass","_tooltipContainer","_contentContainer","_contents","_tooltipConnectorContainer","qualifiedClassName","addClass","defConf","contentConfig","src_content","reorderContainers","contentConf","render","_target","repositionArrow","arrowOrient","connector","_offset","orientation","_extent","arrowDisabled","arrowSize","topSpace","dimX","rightSpace","leftSpace","positionTop","positionRight","positionLeft","positionHorizontal","positionVertical","_position","_arrowPos","strategies_strategies","showSelectedItems","dm","aggregatedModel","groupBy","fieldsConf","strategies_toConsumableArray","defAggFn","side_effects_tooltip_classCallCheck","tooltip_possibleConstructorReturn","__proto__","getPrototypeOf","_tooltips","totalHeight","totalWidth","isEmpty","tooltips","boundBox","dataModels","fragmented","showVertically","tooltipPos","boxes","tooltip_toConsumableArray","fieldsArr","plotDimensions","getPlotPointsFromIdentifiers","plotDim","dt","layoutContainer","layoutBoundBox","unitBoundBox","tooltipInst","src_tooltip","positionRelativeTo","tooltipBoundBox","getContents","spaceOutBoxes","spaceOutIfOverlap","firstBox","secondBox","opposite","bottom","bandWidth","bandClass","lineClass","elemData","fieldIndex","axisIndex","fieldInst","xOffset","plotWidth","crossline_toConsumableArray","getPlotSpan","getPlotPadding","startPx","endPx","dataPoint","parentGroup","CLASSPREFIX","strategy_strategies","fade","fadeFn","focus","highlight","PlotHighlighter","plot_highlighter_classCallCheck","plot_highlighter_possibleConstructorReturn","surrogate","entryModel","clearCaching","resetData","enableCaching","AnchorEffect","anchors_classCallCheck","anchors_possibleConstructorReturn","_layers","addAnchorLayers","shouldDrawAnchors","encodingFieldsInf","layerObj","instances","addLayer","alias","mark","encoding","colorField","sizeField","defaultSizeValue","getTransitionConfig","calculateDomain","linkedLayer","anchorGroup","elems","_linkedLayer$getTrans","getTransformedDataFromIdentifiers","_linkedLayer$getTrans2","anchors_slicedToArray","transformedData","transformedDataModel","src_default","side_effects_anchors","behaviour_effect_map_behaviourEffectMap","behaviour_effect_map_defineProperty","STACK","ANGLE","RADIUS","SIZE","COLOR","SHAPE","ENCODING","X0","Y0","area_default_config_defaultConfig","nearestPointThreshold","strokeOpacity","connectNullData","group_transform","groupByIndices","fieldName","nestCollection","nestFn","common_utils_nestCollection","transformMap","transform_factory_defineProperty","identityTransform","_transformMap","uniqueField","valueField","normalizedData","normalizeData","groupedData","uniqueFieldIndex","valueFieldIndex","seriesKeyIndex","seriesKeys","fieldNames","tuples","rowObj","_tuple","seriesKey","newArr","stack_transform_normalizeData","stackData","seriesData","transform_factory","transformFactory","getLayerColor","_ref2","colorEncoding","colorFieldIndex","rawColor","getRawColor","getHslString","transfromColor","styleType","intensity","stateColor","originalColor","fillColorInfo","transformColor","helpers_applyInteractionStyle","interactionStyles","elements","getPlotElementsFromSet","_d$meta","colorTransform","_ref3","_ref4","helpers_slicedToArray","helpers_getAxesScales","getAxesScales","_map","_map2","_map3","_map4","xScale","yScale","attachDataToVoronoi","_ref5","helpers_toConsumableArray","helpers_updateStyle","updateStyle","positionPoints","positioner","encodingTransform","_dependencies","listener_map_listenerMap","dataModelValue","configValue","encodingValue","getEncodingFieldInf","_map5","_map6","x0Field","y0Field","shapeField","_map7","_map8","_map9","_map10","xFieldSubType","yFieldSubType","_map11","_map12","xFieldIndex","yFieldIndex","x0FieldIndex","y0FieldIndex","helpers_getEncodingFieldInf","transformType","getValidTransform","layerConfig","encodingFieldInf","groupByField","groupByFieldMeasure","helpers_getValidTransform","getTransformedData","transformedDataValue","getNormalizedData","normalizedDataValue","calculateDomainFromData","throwback","commit","defaultOptions","default_options_defineProperty","oldConfig","newConf","defaultPolicy","_defaultOptions","_cacheEnabled","_cachedData","BaseLayer","base_layer_classCallCheck","base_layer_possibleConstructorReturn","DATA","_points","_measurement","simple_layer","_store","_encodingFieldsInf","_encodingTransform","_alias","transformData","withUid","helpers_transformData","domains","yEnc","xEnc","helpers_calculateDomainFromData","encodingType","transformedDataArr","fieldsLen","pointObj","tuple","helpers_getNormalizedData","_transformType","unsubscribeAll","pointMap","_pointMap","_dataProps","base_layer_slicedToArray","xMeasure","yMeasure","_identifiers$","_identifiers$2","xMeasureIndex","yMeasureIndex","getAllAttrs","filteredPoints","base_layer_toConsumableArray","sizeVal","_encodingFieldsInf2","enc","transformedVal","userConf","renderer_line","renderer_drawLine","drawLine","curveInterpolatorFn","linepath","line_default_config_defaultConfig","LineLayer","line_classCallCheck","line_possibleConstructorReturn","base_layer","isXDim","isYDim","xPx","yPx","_getLayerColor","stroke","rowId","cachePoint","seriesClassName","containerSelection","colorFieldMeasure","animateGroup","groupTransition","groupAnimateStyle","helpers_animateGroup","stroke-opacity","getPathStyle","translatePoints","getDrawFn","searchRadius","_point$data$data","getIdentifiersFromData","layerId","renderer_area","renderer","drawArea","easeEffect","renderer_slicedToArray","enterAreaPath","updateAreaPath","selectionEnter","line_line","_getAxesScales","y0Px","arc_default_config_defaultConfig","minOuterRadius","stroke-width","stroke-linejoin","angle","innerRadiusFixer","states","enums_constants_CLASSPREFIX","fadeout","selected","arc_helper_tweenPie","tweenPie","prevData","uid","prevDatum","getIndexedPoint","currIndex","prevArc","nextArc","prevObject","common_utils_interpolator","arc_pie","arc_arc","ArcLayer","arc_classCallCheck","arc_possibleConstructorReturn","_prevPieData","pieData","_getFieldIndices","getFieldIndices","arc_helper_slicedToArray","angleField","radiusField","angleIndex","sizeIndex","radiusIndex","colorIndex","arc_helper_getFieldIndices","dataVal","outerRadiusValue","colorVal","angleVal","_dataPoint$datum","chartHeight","chartWidth","qualClassName","getRadiusRange","defaultRadius","radiusDomain","getRangeValue","domainMultiplier","sizeAxisDomain","sizeMultiplier","text_renderer","drawText","backgroundPadding","selectionMerge","background","textanchor","backgroundEnabled","_smartLabel$getOriSiz","backgroundEl","textNode","text_default_config_defaultConfig","enabled","textEncoding","textField","textFormatter","backgroundField","backgroundFieldIndex","textFieldIndex","textValue","text_slicedToArray","text-anchor","point_renderer","drawSymbols","mergedGroups","symbolGroups","symbolEnter","createShape","groupElement","then","Element","newShape","nodeName","src","href","shapeElement","pathStr","checkPath","renderer_createShape","exitGroups","point_default_config_defaultConfig","defColorStyle","fillOpacity","shapes","sizes","PointLayer","point_classCallCheck","point_possibleConstructorReturn","sizeEncoding","shapeEncoding","shapeFieldIndex","sizeFieldIndex","point_slicedToArray","maxSize","point_toConsumableArray","drawFn","_maxSize","distanceLimit","renderer_drawRects","drawRects","barEnterFn","transitionBars","classnameFn","selTransition","renderer_transitionBars","bar_default_config_defaultConfig","innerPadding","axis_orientation_BOTTOM","axis_orientation_TOP","axis_orientation_LEFT","axis_orientation_RIGHT","axisOrientationMap","axis_orientation_defineProperty","_axisOrientationMap","LINEAR","BAND","TIME","scale_type_COLOR","ORDINAL","QUANTIZE","QUANTILE","LOG","POW","scale_type_IDENTITY","SEQUENTIAL","THRESHOLD","CONTINOUS","DISCRETE","constants_SEQUENTIAL","constants_ORDINAL","constants_LINEAR","constants_QUANTIZE","HIDDEN","scaleLinear","scales_namespaceObject","scaleThreshold","scaleLog","scalePow","scaleIdentity","scaleOrdinal","scaleSequential","scaleQuantize","scaleQuantile","scaleBand","scaleTime","scaleMap","scale_creator_defineProperty","_scaleMap","scale_creator_createScale","scaleFactory","cartesian_axis_default_config_defaultConfig","axisName","axisNamePadding","src_enums_constants_CLASSPREFIX","fixedBaseline","labels","rotation","smartTicks","numberOfTicks","showAxisName","showInnerTicks","showOuterTicks","yOffset","axis_renderer_rotateAxis","rotateAxis","instance","tickText","labelManager","getTickSize","yShift","xShift","tickFormatter","tickLabelDim","quadrant","rotationNormalizer","angleToRadian","axis_renderer_changeTickOrientation","changeTickOrientation","selectContainer","axisInstance","_smartTicks","isSmartTicks","axis_renderer_setFixedBaseline","setFixedBaseline","axis_renderer_setAxisNamePos","setAxisNamePos","axisNameHeight","labelOffset","availableSpace","getTickLabelInfo","largestLabel","labelProps","smartTick","axisTickLabels","allLabelLengths","_context$config","labelFunc","_tickLabelStyle","originalLabel","formattedLabel","label","largestLabelDim","helper_setOffset","setOffset","logicalSpace","helper_adjustRange","adjustRange","minDiff","getAxisOffset","timeDiff","avWidth","bars","registerChangeListeners","_domainLock","getHorizontalAxisSpace","axisDimensions","axisLabelDim","axisDimHeight","tickDimHeight","tickDimWidth","minTickDiff","getMinTickDifference","cartesian_axis_helper_toConsumableArray","_minTickDistance","getVerticalAxisSpace","PROPS","_rotationLock","createAxis","SimpleAxis","simple_axis_classCallCheck","_range","_domain","_axisDimensions","defCon","simpleConfig","bodyElem","_axisNameStyle","_scale","createScale","_axis","setTickConfig","axisClass","labelWidth","domainVal","computeAxisDimensions","_context$config2","_getTickLabelInfo","labelHeight","setRotationConfig","calculateContinousSpace","getAxisDimensions","axisDimWidth","_getHorizontalAxisSpa2","_getVerticalAxisSpace2","helper_calculateContinousSpace","currentDomain","updateDomainBounds","registerEvent","renderAxis","setTickValues","axisNameSpace","axisNameWidth","interpolatorMap","continous_axis_defineProperty","interpolators_log","_interpolatorMap","interpolators_pow","interpolators_linear","simple_axis","InterpolatorCls","_interpolator","isOffset","_config3","labelSpace","axisHeight","getLogicalSpace","axisWidth","getTickValues","_config5","getNumberOfTicks","labelDim","tickLength","numberOfValues","getSmallestDiff","_config6","_axisDimensions$large","band_axis_get","_config2","calculateBandSpace","largestDimHeight","largestDimWidth","_getHorizontalAxisSpa","_getVerticalAxisSpace","helper_calculateBandSpace","availSpace","smartWidth","TimeAxis","time_axis_classCallCheck","time_axis_possibleConstructorReturn","_minDiff","time_axis_get","_getAxisDimensions","x11Colors","Pink","LightPink","HotPink","DeepPink","PaleVioletRed","MediumVioletRed","LightSalmon","Salmon","DarkSalmon","LightCoral","IndianRed","Crimson","FireBrick","DarkRed","Red","OrangeRed","Tomato","Coral","DarkOrange","Orange","Gold","Yellow","LightYellow","LemonChiffon","LightGoldenrodYellow","PapayaWhip","Moccasin","PeachPuff","PaleGoldenrod","Khaki","DarkKhaki","Cornsilk","BlanchedAlmond","Bisque","NavajoWhite","Wheat","BurlyWood","Tan","RosyBrown","SandyBrown","Goldenrod","DarkGoldenrod","Peru","Chocolate","SaddleBrown","Sienna","Brown","Maroon","DarkOliveGreen","Olive","OliveDrab","YellowGreen","LimeGreen","Lime","LawnGreen","Chartreuse","GreenYellow","SpringGreen","MediumSpringGreen","LightGreen","PaleGreen","DarkSeaGreen","MediumSeaGreen","SeaGreen","ForestGreen","Green","DarkGreen","MediumAquamarine","Aqua","Cyan","LightCyan","PaleTurquoise","Aquamarine","Turquoise","MediumTurquoise","DarkTurquoise","LightSeaGreen","CadetBlue","DarkCyan","Teal","LightSteelBlue","PowderBlue","LightBlue","SkyBlue","LightSkyBlue","DeepSkyBlue","DodgerBlue","CornflowerBlue","SteelBlue","RoyalBlue","Blue","MediumBlue","DarkBlue","Navy","MidnightBlue","Lavender","Thistle","Plum","Violet","Orchid","Fuchsia","Magenta","MediumOrchid","MediumPurple","BlueViolet","DarkViolet","DarkOrchid","DarkMagenta","Purple","Indigo","DarkSlateBlue","SlateBlue","MediumSlateBlue","White","Snow","Honeydew","MintCream","Azure","AliceBlue","GhostWhite","WhiteSmoke","Seashell","Beige","OldLace","FloralWhite","Ivory","AntiqueWhite","Linen","LavenderBlush","MistyRose","Gainsboro","LightGray","Silver","DarkGrey","Grey","DimGrey","LightSlateGrey","SlateGrey","DarkSlateGrey","Black","palette","DEFAULT_CONFIG","stops","props_getHslString","hslArr","convertToXllString","baseString","props_getActualHslColor","getActualHslColor","paletteColor","hexToHsv","props_toConsumableArray","props_PROPS","newConfig","uniqueValues","color_strategy_getStops","getStops","newStops","color_strategy_toConsumableArray","color_strategy_piecewiseDomain","piecewiseDomain","retDomain","hslValues","hslInterpolator","common_utils_hslInterpolator","scaleDomain","indexedDomain","indexedDomainMeasure","normalDomain","color_strategy_steppedDomain","steppedDomain","_getStops","rangeStops","newStopsLength","newRange","maxRangeLength","rangeCycles","continousSteppedDomain","_getStops2","uniqueRange","domainValue","indexedRange","normalRange","strategyGetter","domainType","rangeType","schemeType","strategies","color_strategy_defineProperty","domainRange","color_strategy_strategies","ColorAxis","color_axis_classCallCheck","_domainType","_rangeType","_schemeType","getSchemeType","_colorStrategy","setColorStrategy","updateDomain","colorStrategy","getScheme","color_schemes_namespaceObject","hslColorArray","rgbArr","color_axis_toConsumableArray","scaleInfo","domainRangeFn","transformationArr","newH","newS","newL","newA","defaults_DEFAULT_CONFIG","size_strategy_strategies","size_strategy_defineProperty","pieceWiseRange","numVal","size_strategy_toConsumableArray","intervals","newIntervals","discreteRange","size_axis_props_PROPS","SizeAxis","size_axis_classCallCheck","_sizeStrategy","setStrategy","size_strategy_strategyGetter","domainInfo","domainFn","shape_axis_defaults_DEFAULT_CONFIG","generator","shape_axis_props_PROPS","ShapeAxis","shape_axis_classCallCheck","_generatedShapes","shapeType","shapeGenerator","generatorFn","generatedShapes","DATA_TYPES","bar_helper_BAND","data_type_scale_map_defineProperty","dataTypeScaleMap","_dataTypeScaleMap","scale_type_namespaceObject","bar_helper_resolveDimByField","resolveDimByField","axesInfo","spaceType","sizeConfig","sizeValue","enterSpace","minVal","maxVal","scales","diffPx","zeroPos","axisType","axisType0","resolveDimensions","_resolveDimByField","enterWidth","enterX","xPos","_resolveDimByField2","enterHeight","getBarMeasurement","offsetValues","actualGroupWidth","groupWidth","getGroupWidth","isAxisBandScale","axisPadding","groupPadding","bar_scaleBand","BarLayer","bar_classCallCheck","bar_possibleConstructorReturn","_bandScale","bar_get","getTranslatedPoints","_context$encodingFiel","bar_helper_getTranslatedPoints","normalizedDataArr","clipElement","clipPathElement","renderer_utils_clipElement","generateDataPoints","individualClassName","fieldInfo","dataProps","timeDiffs","bar_slicedToArray","barWidthMetrics","barHeightMetrics","barWidthOffsets","barHeightOffsets","_plotSpan","_plotPadding","barWidth","barWidthOffset","barHeight","barHeightOffset","uniqueFieldType","filterData","pointFound","bar_toConsumableArray","p2","tick_default_config_defaultConfig","tick_renderer","ticksEnter","point_point","xbandwidth","ybandwidth","x0Px","sanitizeEncoding","layer_factory","compositeLayers","factoryObj","setLayerRegistry","reg","_layerRegistry","getSerializedConf","layerDef","serializedDefs","defs","unitLayerDef","sDef","parseLayerDefinition","layerType","strs","layer_factory_toConsumableArray","layer_factory_parseLayerDefinition","getLayerInstance","layerRegistry","composeLayers","layerDefs","DEFAULT_LAYERS","defaults_defineProperty","area_area","_DEFAULT_LAYERS","layers_arc_arc","text_text","tick_tick","bar","ROWS","COLUMNS","COL","ROW","enums_constants_COLOR","enums_constants_SHAPE","enums_constants_SIZE","constants_LEFT","constants_RIGHT","CELL","X_AXES","Y_AXES","ENTRY_CELLS","EXIT_CELLS","constants_RADIUS","constants_ANGLE","PRIMARY","SECONDARY","local_options","local_options_defineProperty","_CONFIG$ROWS$COLUMNS$","simple_group","composed_vars","ComposedVars","composed_vars_classCallCheck","texts","composed_vars_possibleConstructorReturn","vars","variable_variable","_vars","member","SimpleVariable","simple_var_classCallCheck","simple_var_possibleConstructorReturn","oneVar","_oneVar","fieldDef","field_sanitizer_convertToVar","convertToVar","datamodel","simple_var","field_sanitizer_transformFields","transformFields","normalizedFields","normalizeFields","norFields","orderFields","fieldArray","dimensionArr","measureArr","temporalArr","categoricalArr","fieldList","numOfMeasures","allDimensions","field_sanitizer_toConsumableArray","temporal","categorical","field_sanitizer_orderFields","field_sanitizer_slicedToArray","rowsInfo","columnsInfo","rowDimensions","rowMeasures","rowTemporalFields","rowCategoricalFields","columns","columnDimensions","columnMeasures","columnTemporalFields","columnCategoricalFields","_fieldInfo","_axisFrom","_headerFrom","__headerFrom","axisFrom","_getHeaderAxisFrom","group_utils_getHeaderAxisFrom","_getHeaderAxisFrom2","visual_encoder_slicedToArray","rowHeader","rowAxis","_getHeaderAxisFrom3","_getHeaderAxisFrom4","colHeader","colAxis","column","headerFrom","scaleMaps","continous_axis","band_axis","time_axis","size_axis","color_axis","shape_axis","data_type_scale_map_dataTypeScaleMap","encoder_helper_createSimpleAxis","createSimpleAxis","axisConfig","axesCreators","Cls","encoder_helper_generateAxisFromMap","generateAxisFromMap","groupAxes","axisKey","currentAxes","cacheMaps","getAxisKey","getAxisConfig","axisInfo","axisOrientation","userAxisConfig","axis_orientation_namespaceObject","LEFT","RIGHT","TOP","BOTTOM","encoder_helper_getAxisConfig","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","done","encoder_helper_slicedToArray","err","return","getIndex","arrIndex","visual_encoder","geomCellAxes","projections","indices","rowFields","columnFields","rowIndex","columnIndex","xAxes","yAxes","facets","counter","primaryFacets","secondaryFacets","primaryFields","secondaryFields","primaryLen","secondaryLen","projArr","primaryField","secondaryField","facet","existIndex","axisFromIndex","cartesian_encoder_get","CartesianEncoder","groupedModel","encodingObj","retriveDomainFromData","layerArray","serializedLayers","userLayerConfig","colField","colFieldName","rowField","configs","rowFieldName","rowFieldType","getDefaultMark","colFieldType","encoder_helper_getDefaultMark","layerConfigs","getLayerConfFromFields","colFields","encodingArr","encoder_helper_toConsumableArray","colFieldExist","rowFieldExist","layerConf","cartesian_encoder_toConsumableArray","pieAxes","sanitizedRows","sanitizedColumns","polar_encoder_get","sanitizedFields","typeIndex","fieldSet","polar_encoder_toConsumableArray","facetFields","parentModel","layerEncoding","encType","measureField","polar_encoder_defineProperty","allFields","newAxes","createRetinalAxis","fieldProps","group_utils_getAxisType","encoder_helper_createRetinalAxis","encodingConfigs","group_utils_initStore","initStore","group_utils_defineProperty","group_utils_isDistributionEqual","isDistributionEqual","group_utils_toConsumableArray","rowType","initializeCacheMaps","cellMap","xAxesMap","yAxesMap","entryCellMap","exitCellMap","scaleType","group_utils_headerCreator","headerCreator","fieldHeaders","TextCell","getHeaderText","headers","rowLength","header","getAxisType","getHeaderAxisFrom","userAxisFromConfig","_fields","group_utils_slicedToArray","firstField","secondField","firstFieldType","secondFieldType","setFacetsAndProjections","encoder","_encoder$simpleEncode","simpleEncoder","getFacetsAndProjections","group_utils_createSelection","createSelection","appendObj","idFn","dataSelect","mergedSelection","group_utils_getBorders","getBorders","matrices","showRowBorders","showColBorders","showValueBorders","valueMatrix","_rows","leftRows","rightRows","_columns","topColumns","bottomColumns","_encoder$fieldInfo","allDimensionLength","allMeasuresLength","allTemporalFieldsLength","getRowBorders","borders","getColumnsBorders","getValueBorders","borderTypeRow","borderTypeCol","group_utils_getValueBorders","action_behaviour_map_defineProperty","actions_namespaceObject","behaviours_namespaceObject","reactive_props_CONFIG","reactive_props_DATA","reactive_props_AXES","LAYERDEFS","reactive_props_WIDTH","reactive_props_HEIGHT","reactive_props_MOUNT","primaryXAxisUpdated","primaryYAxisUpdated","secondaryXAxisUpdated","secondaryYAxisUpdated","reactive_props_TRANSFORM","DATADOMAIN","LAYERSCREATED","FIELDS","TIMEDIFFS","LAYERAXISINDEX","helper_getLayerFromDef","getLayerFromDef","existingLayer","_layerDeps","instanceArr","helper_createLayers","createLayers","layerDefinitions","layersMap","_layersMap","markSet","components","unit","layersArr","_layersArr","markId","instanceValues","src_helper_toConsumableArray","layerdeps","resolvable","depArr","getDependencyOrder","dependencyOrder","visited","visit","helper_attachAxisToLayers","attachAxisToLayers","layerAxisIndex","axesObj","axisInf","helper_getLayerAxisIndex","getLayerAxisIndex","_layer$config","helper_unionDomainFromLayers","unionDomainFromLayers","getDataDomain","domainValues","layerDomain","fieldDomain","fieldStr","unionDomain","dom","common_utils_unionDomain","getLayersBy","searchBy","removeLayersBy","inst","grid_lines_LINEAR","grid_lines_getGridLayerDefinitions","getGridLayerDefinitions","getDefaultVisibilty","getLayerDefinition","_definition","_encoding","gridLines","gridBands","gridLineColor","zeroLineColor","gridBandColor","isLinearScale","grid_lines_defineProperty","isNegativeDomain","grid_lines_renderGridLineLayers","renderGridLineLayers","createGridLineLayer","vuConf","_gridbands","_gridlines","atomicDef","sConf","grid_lines_createGridLineLayer","getGridLayerData","gridData","jsonData","_jsonData$push","grid_lines_getGridLayerData","_entry","grid_lines_slicedToArray","parentGroupClass","src_default_config_defaultConfig","trackerClassName","arcLayerClassName","sideEffectClassName","src_local_options","src_local_options_defineProperty","_CONFIG$LAYERDEFS$AXE","prevAxes","cachedData","local_options_toConsumableArray","oldData","axisMap","1","axisProps","src_listener_map_listenerMap","listener_map_slicedToArray","reactive_props_namespaceObject","isReverse","layerDefsValue","fieldsVal","_layerAxisIndex","_lifeCycleManager","notify","layersCreated","dataModelVal","layerAxisIndexVal","axesVal","transformDataModels","transformVal","_transformedDataModels","attachDataToLayers","transformedDataModels","dataSource","_dimensionMeasureMap","getDimensionMeasureMap","retinalEncodingsAndMeasures","_layer$encodingFields","_retinalEncodingsAndM","helper_getDimensionMeasureMap","retinalFields","dataDomain","updateAxisDomain","src_props_PROPS","props_defineProperty","_PROPS","dispatchQueuedSideEffects","firebolt_helper_toConsumableArray","helper_registerListeners","registerImmediateListener","originalData","createSelectionSet","attachPropagationListener","registerChangeListener","firebolt_helper_slicedToArray","mapActionsAndBehaviour","clearActionHistory","payloadGenerator","brush","selectionDataModel","propConfig","propPayload","getRangeFromData","propCriteria","fieldObj","isDimension","payload_generator_toConsumableArray","payload_generator_getRangeFromData","__default","data_propagator_propagateValues","propagateValues","propagationFields","mutableEffect","data_propagator_toConsumableArray","mergedModel","sourceUnit","sourceCanvas","parentAlias","project","criteriaFields","addToPropNamespace","actionName","UnitFireBolt","src_firebolt_classCallCheck","firebolt_possibleConstructorReturn","src_firebolt","unitId","aliasName","propagationSourceCanvas","sourceUnitId","sourceSideEffects","actionOnSource","mappedEffects","se","applyOnSource","payloadFn","sourceIdentifierFields","propFields","firebolt_get","VisualUnit","registry","visual_unit_classCallCheck","onlayerdraw","_renderedResolve","_renderedPromise","lifeCycleManager","visual_unit_defineProperty","visual_unit_src_firebolt","behavioural_namespaceObject","side_effects_namespaceObject","_firebolt","lock","unlock","_rootSvg","class","renderLayers","orderedLayers","layerParentGroup","helper_renderLayers","_sideEffectGroup","createSideEffectGroup","helper_createSideEffectGroup","rootSvg","layerName","getLayerByName","serializedDef","visual_unit_toConsumableArray","lyr","axisConf","alignZeroLine","adjustedDomain","getAdjustedDomain","y1ratio","y2ratio","allSameSign","updateDomainCache","dimValue","getNearestDimensionalValue","entryVal","helper_getNearestDimensionalValue","pointInf","getMarkInfFromLayers","markInf","parsedIdentifiers","transposeArray","getPointsFromIdentifiers","_parentContainer","getFieldNames","fields1","matrix_model_toConsumableArray","createSelectedDataModel","matrix_model_uniqueKeyGenerator","uniqueKeyGenerator","keyArray","newDm","nextDepthUniqueValues","projectRows","allColumnProjections","rowProjections","optionalProjections","projectFields","_getFieldNames","_getFieldNames2","matrix_model_slicedToArray","projFieldNames","colProjFieldNames","pushToMatrix","_matrix$rowIndex","facetInfo","colProjections","rowProj","projIdx","_getFieldNames3","_getFieldNames4","rowProjFieldNames","projectedDm","cell_creator_createValueCells","createValueCells","suppliedLayers","GeomCell","matrixLayers","horizontalAxis","verticalAxis","datamodelTransform","layerConfigArr","getLayerConfig","normalizedColumns","normalizedRows","geomCellKey","getCellKey","columnId","allFacets","cell_creator_toConsumableArray","rowFacets","colFacets","geomCell","facetByFields","delete","updateCells","facetKey","cell_creator_updateCells","cell_creator_createAxisCells","createAxisCells","axisInst","AxisCell","BlankCell","cell_creator_headerPlaceholderGn","headerPlaceholderGn","selectionObj","facetConfig","selectionKeys","keySet","createTextCells","cell_creator_createTextCells","cell_creator_generatePlaceholders","generatePlaceholders","facetsAndProjections","encoders","valuesMatrix","rowKeys","columnKeys","takeAxisFrom","takeHeaderFrom","axisPlaceholderGn","selObj","axesMatrix","selObjProp","axesForDraw","rowsPrimary","rowPrime","columnsPrimary","colPrime","cell_creator_axisPlaceholderGn","_selectionObj","rowsSecondary","columnsSecondary","getObjects","section","hContext","cell_creator_computeMatrices","computeMatrices","componentRegistry","globalConfig","autoGroupBy","otherEncodings","getAllFields","matrixGnContext","getCellDef","isRowSizeEqual","isColumnSizeEqual","colCells","rowCells","resetSimpleAxes","newCacheMap","valueCellContext","serializeLayerConfig","extractFields","layerFields","flattenArray","group_utils_extractFields","getFieldsFromSuppliedLayers","suppliedLayerConfig","group_utils_getFieldsFromSuppliedLayers","aggregationFns","valueMatrixInfo","getMatrixModel","rowDataModels","colProj","firstLevelRowKeys","_rowDataModels","_getFieldNames5","rowFacetFieldNames","selectedDataModel","_rowDataModels2","colFacetNames","firstLevelColumnKeys","dme","rIndex","cIndex","transposedColKeys","matrix_model_getMatrixModel","valueCellsCreator","placeholder","createUnits","_mutateAxesFromMap","mutateAxesFromMap","xAxisSet","yAxisSet","axisId","group_utils_mutateAxesFromMap","_generateMatrices","generateMatrices","leftHeaders","topHeaders","bottomHeaders","rightHeaders","cell_creator_slicedToArray","rowSec","colSec","leftFacets","rightFacets","leftMatrix","rightMatrix","topMatrix","bottomMatrix","currentBottomLength","setAvailableSpace","rowMatrix","columnMatrix","MatrixResolver","matrix_resolver_classCallCheck","_registry","_layerConfig","_matrixLayers","_rowMatrix","_columnMatrix","_valueMatrix","_facets","_projections","_datamodelTransform","_units","_cacheMaps","_axes","maps","_rowCells","_colCells","matrix_resolver_toConsumableArray","_horizontalAxis","_verticalAxis","matrixType","sideEffectRegistry","units","unitConfig","extractUnitConfig","group_utils_extractUnitConfig","visual_unit","_getAllFields","retContext","getRetinalFieldsDomain","retinalEncoder","setCommonDomain","_axes2","retinalAxes","updateModel","placeholders","bottomLeft","bottomRight","_dependencies3","matrix_resolver_slicedToArray","topCols","bottomCols","rowHeaders","footers","topLeft","topRight","value_matrix","ValueMatrix","matrixArr","value_matrix_classCallCheck","instancesById","cellValue","_instancesById","_matrix","_filterFn","rowWidth","currentRowWidth","rowHeight","currentRowHeight","filterFn","change_listener_setupChangeListeners","setupChangeListeners","change_listener_toConsumableArray","matrixConfig","retinalConfig","sanitizeRetinalConfig","retinalConf","confValue","retinal_encoder","getEncoder","cartesian_encoder","polar_encoder","group_utils_getEncoder","groupType","fieldSanitizer","setAxisAndHeaders","placeholderInfo","getMatrices","_groupedDataModel","createRetinalAxes","setDomains","setMatrixInstances","_composition","change_listener_setMatrixInstances","cornerMatrices","createHeaders","metaData","border","visual_group_props_PROPS","hasDataUpdated","matrixInstance","cellRegistry","visual_group","VisualGroup","visual_group_classCallCheck","visual_group_possibleConstructorReturn","componentSubRegistry","_matrixInstance","_selection","_placeholderInfo","_cornerMatrices","matrix_resolver","variable","findInGroup","channel","group_utils_this","facetType","projType","group_utils_findInGroup","getRetinalAxes","getSimpleAxes","_resolver$getAllField","visual_group_defineProperty","existingRemoveSet","enums_selection_namespaceObject","select_toConsumableArray","firebolt_action_behaviour_map_actionBehaviourMap","firebolt_action_behaviour_map_defineProperty","action_behaviour_map_actionBehaviourMap","propagationBehaviourMap","_propagationBehaviour","src_firebolt_behaviour_effect_map_behaviourEffectMap","firebolt_behaviour_effect_map_defineProperty","firebolt_behaviour_effect_map_behaviourEffectMap","propagationSideEffects","_propagationSideEffec","SCALE_FUNCTIONS","VALUE","helper_propagate","check","assembleModelFromIdentifiers","_loop2","fieldVal","cIdx","src_firebolt_helper_toConsumableArray","legend_firebolt_LegendFireBolt","_Firebolt","LegendFireBolt","legend_firebolt_classCallCheck","legend_firebolt_possibleConstructorReturn","legend_firebolt_inherits","legend_firebolt_createClass","behaviourName","firebolt_physical_hover","getCriteriaFromData","firebolt_physical_click","firebolt_physical_physicalActions","firebolt_physical_defineProperty","physical_physicalActions","gradientDimensions","axisScale","rangeShifter","drag_defineProperty","getSelectionCriteria","selectionBoxMeasure","drawingInfMeasure","subjectStartPoint","side_effects_selection_box","gradientDimension","legendGradContainer","legendSelGroup","enterFn","getMousePos","boundingClientRect","selection_box_drag_defineProperty","fadeOut","physical_selection_box_drag_selectionBoxDrag","legend_highlighter_strategies_strategies","brighten","LegendHighlighter","legend_highlighter_classCallCheck","legend_highlighter_possibleConstructorReturn","legend_props_PROPS","legendContainer","resetLogicalSpace","title","_title","ALIGN","DEFAULT_MEASUREMENT","LEGEND_TITLE","legend_defaults_DEFAULT_CONFIG","bounds","upper","defaults_ICON_MAP","ICON_MAP","legend_helper_getScaleInfo","getScaleInfo","steps","scaleFn","legend_helper_getInterpolatedData","getInterpolatedData","domainForLegend","interpolatedFn","getDomainBounds","domainBounds","domainLeg","ele","legend_helper_defineProperty","getScaleFactor","SimpleLegend","simple_legend_classCallCheck","_metaData","_fieldName","_labelManager","_cells","defaultMeasurement","_computedStyle","firebolt_behavioural_namespaceObject","firebolt_side_effects_namespaceObject","getItemMeasures","_labelManager$getOriS","effPadding","effBorder","effMargin","dataFromScale","titleSpace","getTitleSpace","titleHeight","titleWidth","labelSpaces","getLabelSpaces","_computeItemSpaces","computeItemSpaces","maxItemSpaces","textOrientation","itemSpaces","iconSpaces","maxIconWidth","itemSpace","iconSpace","legend_helper_computeItemSpaces","titleSpaces","_measurement2","titleCreator","legend_helper_titleCreator","_measurement3","renderTitle","simple_legend_defineProperty","legendOrientation","position_config_defineProperty","datasets","itemContainerMeasures","getStepSpacesInfo","iconHeight","iconWidth","stepPadding","horizontal","vertical","_legendOrientation","positionConfig","_positionConfig","alignmentMap","_alignmentMap","itemStack","_itemStack","renderer_applyItemStyle","applyItemStyle","measureType","stepColorCheck","_context$measurement","renderer_renderIcon","renderIcon","renderer_createLegendSkeleton","createLegendSkeleton","gradWidth","gradHeight","maxGradHeight","maxGradWidth","legendBody","legendItem","getItemContainers","legendInstance","positionObj","renderer_getItemContainers","renderer_createItemSkeleton","createItemSkeleton","itemSkeleton","alignClass","renderer_renderDiscreteItem","renderDiscreteItem","_context$measurement2","_item$icon","text-align","getLegendIcon","defaultIcon","renderer_getLegendIcon","simple_legend","_getScaleInfo","discrete_legend_toConsumableArray","discrete_legend_defineProperty","discrete_legend_get","DiscreteLegend","getGradientDomain","accumulator","currentValue","MAX_VALUE","MIN_VALUE","gradient_helper_createLegendSkeleton","legendGradSvg","legendGradCont","linearGradient","makeLinearGradient","gradient_helper_makeLinearGradient","legendRect","gradient_helper_renderAxis","gradient_legend_toConsumableArray","gradient_legend_defineProperty","newAxis","gradient_helper_createAxis","axisSpace","axisDomainLength","_legendGradientSvg","gradient_legend_get","renderGradient","_createLegendSkeleton","gradient_helper_renderGradient","GradientLegend","step_legend_toConsumableArray","step_legend_defineProperty","lowerBounds","upperBounds","step_legend_get","StepLegend","stepData","position_config_stepData","renderStepItem","_context$config3","_context$measurement3","_item$icon2","_positionConfig$posit","renderer_renderStepItem","PADDING","BORDER","src_constants_CONFIG","TITLE_TEMPLATE_NOT_ALLOWED_TAGS","LEGEND_TYPE_MAP","constants_defineProperty","src_constants_ORDINAL","discrete_legend","_LEGEND_TYPE_MAP","src_constants_LINEAR","step_legend","gradient_legend","operators_share","share","operators_toConsumableArray","operators_html","strings","htmlCode","expLn","frag","createDocumentFragment","treeShakeNode","nodeType","Node","ELEMENT_NODE","tagName","childNodes","actionModel","ActionModel","action_model_classCallCheck","_registrableComponents","canvas","once","visualGroup","_cell$valueOf$firebol","dissociateBehaviour","_len5","_key5","src_defaults_DEFAULT_CONFIG","legend","showHeaders","minHeight","collapse","src_options","isInteger","minUnitWidth","minUnitHeight","oldConf","defConfig","VIEW_INDEX","center","enums_constants_WIDTH","enums_constants_HEIGHT","layout_src_enums_constants_TOP","src_enums_constants_LEFT","src_enums_constants_RIGHT","layout_src_enums_constants_BOTTOM","constants_CENTER","ROW_LEFT","ROW_RIGHT","COLUMN_BOTTOM","COLUMN_TOP","ROW_SPAN","COL_SPAN","ROW_ROOT","COLUMN_ROOT","GenericLayout","generic_layout_classCallCheck","_matrices","_centerMatrix","_mountPoint","DEFAULT_CONFIGURATION","grid_layout_defaults_defineProperty","_FieldNames$BORDER","_DEFAULT_CONFIGURATIO","DEFAULT_MEASUREMENTS","_DEFAULT_MEASUREMENTS","BLANK_BORDERS","span_maker_columnFilter","columnFilter","colData","colIdx","rIdx","previousRow","currentRow","prevCell","nextRow","prevRow","calcRowSpan","isNull","calcColSpan","span_maker_mask","mask","filteredRow","colIndex","_temp","span_maker_toConsumableArray","applyBorders","borderStyle","borderType","applyRowBorders","showBorders","applyColBorders","renderMatrix","containerForMatrix","_cellSpanMaker","cellSpanMaker","viewMatrix","spans","ridx","currSpan","viewWidth","viewHeight","renderTable","rowData","table","availHeight","span","splitMatrices","utils_nest","findInPage","page","combineMatrices","isTransposed","joinedMatrix","utils_toConsumableArray","computeLogicalSpace","maxMeasures","_config$isTransposed","unitMeasures","_getMeasureInfo","getMeasureInfo","firstMeasure","secondMeasure","utils_getMeasureInfo","minMeasures","getMinMeasures","_logicalSpace","utils_defineProperty","valueItem","maxMeasure","firstMeasureValue","secondMeasureValue","valueArray","_item$space","fMeasure","sMeasure","utils_getLogicalSpace","extraCellsRemover","beg","visual_matrix_props_PROPS","visual_matrix_default_config_defaultConfig","distribution","extraCellLengths","VisualMatrix","visual_matrix_classCallCheck","_lastLevelKey","_primaryMatrix","_secondaryMatrix","_maxMeasures","_availableSpace","_breakPointer","_layoutMatrix","_tree","createTree","setLogicalSpace","_createTree2","matrixTree","lastLevelKey","layoutMatrix","primaryMatrix","secondaryMatrix","breakPage","primaryMatrixLength","newMatrix","keyLength","utils_createTree","createMatrixEachLevel","_arr$i","heightMeasures","populateMaxMeasures","widthMeasures","calculateDepth","viewableMatrix","createViewPortMatrix","viewableMeasures","redistribute","childDepth","maxHeights","maxWidths","matrixInst","mWidth","mHeight","redistributeColumnWise","redistributeRowWise","cellDimOptions","matrixIndex","_getCellDimensions","getCellDimensions","heights","widths","rowHeights","columnWidths","primary","secondary","begCellLen","endCellLen","NEGATIVE_INFINITY","createMatrixInstances","matrixInfo","layout","breakPointer","brokenMatrix","breakMatrix","nextLevel","removeExtraCells","rHeights","cWidths","_config4","gutter","spaceTakenByColumn","spaces","getDistributedHeight","heightWithoutGutter","distSum","gutterSum","availableHeight","colLen","borderWidth","spaceTakenByRow","getDistributedWidth","layoutConfig","availableWidth","rowLen","oldLogicalSpace","mainMeasures","computedMeasures","colHeight","colWidth","setMatrixMeasurement","computations_setAvailableSpace","setViewSpaces","pointerType","viewSpaces","pointer","computations_defineProperty","GridLayout","layout_classCallCheck","layout_possibleConstructorReturn","_layoutId","generic_layout","generateVisualMatrices","begColCells","endColCells","gutterSpace","_top","layout_helper_slicedToArray","_center","_bottom","layout_helper_toConsumableArray","visual_matrix","centerMatrix","layout_helper_generateVisualMatrices","layout_get","computeLayoutMeasurements","_layout$measurement","rowMatrixWidth","getMatrixMeasurement","columnMatrixWidth","columnViewPages","getViewableSpaces","columnViewSpace","columnPointer","columnMatrixHeight","rowMatrixHeight","rowViewableSpaces","computations_toConsumableArray","rowWidthsPrimary","rowWidthsSecondary","columnViewableSpaces","columnHeightsPrimary","columnHeightsSecondary","computations_computeLayoutMeasurements","setViewInformation","pageNumber","pageType","totalPages","getViewInformation","viewMatricesInfo","layout_defineProperty","renderGrid","currentPage","rowPointer","getViewMatrices","rowMatrices","getViewableData","columnMatrices","centralMatrixPointer","rowMatrixLen","columnMatrixLen","rowPages","columnPages","layoutDimensions","getViewMeasurements","_layout$measurement2","_layout$config3","leftWidth","rightWidth","topHeight","bottomHeight","viewInfo","_getViewInformation3","renderMatrices","newCenter","newBottom","newTop","breakLength","topBreak","bottomBreak","INTERFACE_IMPl","visual_cell_src_enums_constants_LEFT","visual_cell_src_enums_constants_RIGHT","visual_cell_src_enums_constants_BOTTOM","visual_cell_src_enums_constants_TOP","visual_cell_src_enums_constants_CLASSPREFIX","constants_HEADER","enums_constants_DATA","enums_constants_AXES","constants_FACET_BY_FIELDS","constants_FIELDS","enums_constants_TRANSFORM","LAYER_DEF","src_enums_constants_CONFIG","cell_type_TEXT","cell_type_AXIS","GEOM","BLANK","simple_cell","SimpleCell","simple_cell_classCallCheck","enums_defaults_DEFAULT_CONFIG","enums_defaults_defineProperty","_CONSTANTS$MARGIN","_DEFAULT_CONFIG","DEFAULT_PROPS","availWidth","geomProps","caption","packages_visual_cell_src_props_PROPS","src_props_defineProperty","visual_cell_src_props_PROPS","axis_cell","axis_cell_classCallCheck","axis_cell_possibleConstructorReturn","_availHeight","_availWidth","computeAxisSpace","logicalWidth","logicalHeight","spaceFixer","_axis$getLogicalSpace","wrapperDiv","blank_cell","blank_cell_classCallCheck","blank_cell_possibleConstructorReturn","src_text_cell","text_cell_classCallCheck","text_cell_possibleConstructorReturn","_className","_minTickDiff","computeTextSpace","verticalAlign","textAlign","geom_cell","geom_cell_classCallCheck","geom_cell_possibleConstructorReturn","_unit","_datamodel","_facetByFields","_transform","_caption","lockModel","unlockModel","captionSpace","computeGeomSpace","getCaptionSpace","captionDom","DEFAULT_PLACEHOLDERS","src_defaults_defineProperty","_DEFAULT_PLACEHOLDERS","cell_registry","createHeading","cellType","title_maker_headerCreator","legend_maker_legendInitializer","legendInitializer","legendConfig","prevLegends","legends","headerHeight","legendCreator","LegendCls","dataset","scaleProps","_scale$config","legend_maker_legendCreator","dataInfo","legendMeasures","getGroupByData","setLegendMeasures","layout_maker_BlankCell","createBlankCell","fillArray","blankMatrixCreator","blankCellCreator","maxRows","rowMatrixIndex","numberOfRows","layout_maker_toConsumableArray","prepareLayout","topL","topR","bottomL","bottomR","getMaxRows","colLengths","_blankCellCreator","_blankCellCreator2","layout_maker_slicedToArray","_blankCellCreator3","_blankCellCreator4","triggerReflow","layout_maker_getRenderDetails","getRenderDetails","visGroup","_visGroup$placeholder","titleConfig","subtitleConfig","subtitle","legendPosition","layoutArrangement","arrangeComponents","_titleLayouts","legendLayouts","component_resolver_defineProperty","titleLayouts","src_constants_TOP","src_constants_BOTTOM","component_resolver_arrangeComponents","_mount$getBoundingCli","heightAttr","widthAttr","availableHeightForCanvas","availableWidthForCanvas","_createHeaders","canvasHeight","canvasWidth","headerOptions","resolveTitleSubTitleContent","rawContent","_sanitize","escapeHTML","htmlEscapes","&","<",">","\"","'","/","title_maker_resolveTitleSubTitleContent","_createHeading","title_maker_createHeaders","createLegend","legend_maker_createLegend","legendSpace","getLegendSpace","legendInfo","legend_maker_getLegendSpace","legendWidth","legendHeight","canvases","mountSpace","TITLE_CONFIG","SUB_TITLE_CONFIG","localOptions","canvas_local_options_defineProperty","_localOptions","canvasOptions","_sanitized","_canvasOptions","sub","renderer_renderHeader","renderHeader","headerCell","cont","renderComponents","_getSkeletons","getSkeletons","innerContainer","layoutType","renderer_getSkeletons","prepareGridContainer","innerSel","renderer_prepareGridContainer","setLabelRotationForAxes","renderLegend","legendComponents","sectionComponents","legendMount","legWidth","legHeight","sections","currHeight","currWidth","leg","renderer_renderLegend","shiftHeaders","shifter","renderer_shiftHeaders","GroupFireBolt","canvas_firebolt_classCallCheck","helper_setupChangeListener","setupChangeListener","allOptions","_allOptions","canvas_helper_toConsumableArray","equalityChecker","option","dispatchProps","_cachedProps","Canvas","globalDependencies","canvas_classCallCheck","canvas_possibleConstructorReturn","grid_layout_layout","canvas_firebolt","_transactor","canvas_slicedToArray","transaction_support","initedComponents","initCanvas","register","_getRenderDetails","promises","all","getAxes","initialSettings","regEntry","COMPONENTS","SUBREGISTRIES","regObj","globalCache","defaultRegistry","overrideRegistryDefinitions","overrideRegistry","muze_muze","muze","_transactor2","muze_slicedToArray","env","globalStore","componentSubRegistryDef","settings","canvas_canvas","withSettings","enableChainedTransaction","transactionModel","transactionEndpoint","transactionItems","_slicedToArray","SmartlabelManager_default","SideEffects","standards","SurrogateSideEffect","SpawnableSideEffect","Behaviours","PersistentBehaviour","VolatileBehaviour","pkg","muze_package","layerFactory","Operators","operators_namespaceObject","utils","DateTimeFormatter","require","lookupWhat","lookupDetails","lookupTarget","deps","__webpack_exports__","data_format","FLAT_JSON","DSV_STR","DSV_ARR","AUTO","dimension_subtype","GEO","measure_subtype","field_type","filtering_mode","NORMAL","INVERSE","ALL","rowDiffsetIterator","rowDiffset","diffStr","diffStsArr","Field","partialFeild","rowDiff","_rowDiff","sanitize","parsed","subType","datas","description","bins","convertToNativeDate","dtParams","nativeDate","escape","TOKEN_PREFIX","DATETIME_PARAM_SEQUENCE","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","defaultNumberParser","defVal","parsedVal","defaultRangeParser","nVal","getTokenDefinitions","daysDef","short","long","monthsDef","extract","parser","hours","K","getTokenFormalNames","definitions","HOUR_12","AMPM_UPPERCASE","AMPM_LOWERCASE","SHORT_DAY","LONG_DAY","DAY_OF_MONTH","DAY_OF_MONTH_CONSTANT_WIDTH","SHORT_MONTH","LONG_MONTH","MONTH_OF_YEAR","SHORT_YEAR","LONG_YEAR","tokenResolver","defaultResolver","arg","targetParam","hourFormat24","hourFormat12","ampmLower","ampmUpper","amOrpm","isPM","findTokens","tokenPrefix","tokenLiterals","occurrence","forwardChar","token","nDate","formattedStr","String","formattedVal","dateTimeStamp","extractTokenValue","dtParamSeq","noBreak","dtParamArr","resolverKey","resolverParams","resolverFn","resolvedVal","tokenObj","lastOccurrenceIndex","occObj","occIndex","targetText","regexFormat","tokenArr","occurrenceLength","extractValues","getNativeDate","column_major","OBJECTSTRING","objectToStrFn","objectToStr","arrayToStr","checkCyclicRef","parentArr","bIndex","extend2","obj1","obj2","skipUndef","tgtArr","srcArr","srcVal","tgtVal","cRef","isCallable","isArrEqual","formatNumber","field_store","createNamespace","fieldArr","dataId","getMeasure","getDimension","Value","value_classCallCheck","configurable","writable","createBinnedFieldData","buckets","binCount","binSize","dataStore","binnedData","_field$domain","_field$domain2","oriMax","binEnd","prevEndpoint","extraBinELm","endPoint","bucket_creator_toConsumableArray","DM_DERIVATIVES","PROJECT","GROUPBY","COMPOSE","CAL_VAR","BIN","JOINS","CROSS","LEFTOUTER","RIGHTOUTER","NATURAL","FULLOUTER","LOGICAL_OPERATORS","childIterator","operation","_children","_derivation","op","actualProjField","groupByString","reducer","getCommonSchema","fs1","fs2","retArr","fs1Arr","defaultFilterFn","crossProduct","dm1","dm2","replaceCommonSchema","jointype","applicableFilterFn","dm1FieldStore","dm2FieldStore","dm1FieldStoreName","dm2FieldStoreName","commonSchemaList","tmpSchema","_rowDiffset","rowAdded","rowPosition","ii","userArg","dm1Fields","prepareJoinData","dm2Fields","tupleObj","cellVal","iii","src_datamodel","defSortFn","mergeSort","sortFn","merge_sort_sort","merge_sort_merge","mainArr","auxArr","getSortFn","dataType","sortType","retFunc","groupData","hashMap","createSortingFnArg","groupedDatum","targetFields","targetFieldDetails","dataBuilder","fieldStore","colIdentifier","sortingDetails","addUid","columnWise","reqSorting","tmpDataArr","colName","insertInd","sortData","sortMeta","fDetails","fieldInSchema","sortingFn","data_builder_toConsumableArray","tmpData","difference_difference","hashTable","schemaNameArr","dm1FieldStoreFieldObj","dm2FieldStoreFieldObj","_colIdentifier","prepareDataHelper","addData","hashData","schemaName","allNulls","isNestedArray","sumVal","carry","group_by_function_toConsumableArray","avg","arrSum","fnList","group_by_function_min","group_by_function_max","std","variance","mean","num","defaultReducerName","reducer_store_ReducerStore","ReducerStore","reducer_store_classCallCheck","__unregister","reducer_store","getStore","group_by_groupBy","reducers","existingDataModel","sFieldArr","getFieldArr","getPartialFieldspace","group_by_slicedToArray","reducerObj","getReducerObj","pReducers","defaultReducer","fieldStoreObj","dbName","newDataModel","_ref7","_ref8","rowCount","hash","__calculateFieldspace","src_export","naturalJoinFilter","commonSchemaArr","retainTuple","union_union","leftOuterJoin","dataModel1","dataModel2","rightOuterJoin","partial_field","PartialField","partial_field_classCallCheck","fieldDescription","Measure","measure_classCallCheck","_possibleConstructorReturn","fieldUnit","fieldScale","fieldDefAggFn","fieldNumberformat","POSITIVE_INFINITY","domain_generator","_unique","Categorical","categorical_classCallCheck","categorical_possibleConstructorReturn","datetime","DateTime","datetime_classCallCheck","datetime_possibleConstructorReturn","_dtf","discreteMeasure","DiscreteMeasure","bin","discreteMeasure_classCallCheck","discreteMeasure_possibleConstructorReturn","field_creator","createFields","dataColumn","headersObj","createUnitField","default_config","dataFormat","dsv_arr","DSVArr","firstRowHeader","dsv_arr_toConsumableArray","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","JSON","stringify","src_dsv","delimiter","reFormat","DELIMITER","parseRows","eof","eol","formatRow","formatValue","convert","customConverter","inferColumns","columnSet","formatRows","csv","tsv","dsv_str","DSVStr","fieldSeparator","dsv","flat_json","FlatJSON","insertionIndex","auto_resolver","Auto","converter","isString","isObject","prepareSelectionData","helper_persistDerivation","persistDerivation","_model$_derivation","criteriaFn","derivative","helper_filterPropagationModel","propModels","filterByMeasure","fieldsSpace","helper_cloneWithSelect","cloneWithSelect","sourceDm","selectFn","selectConfig","cloneConfig","cloned","selectHelper","newRowDiffSet","lastInsertedValue","li","checker","helper_selectHelper","calculateFieldsConfig","helper_cloneWithProject","cloneWithProject","projField","projectionSet","helper_updateData","updateData","relation","converterFn","converter_namespaceObject","_converterFn","_converterFn2","formattedData","nameSpace","_partialFieldspace","helper_propagateIdentifiers","propagateIdentifiers","nonTraversingModel","grouped","forwardPropagation","targetDM","hasGrouped","handlePropagation","propagationSourceId","groupedPropModel","selectIterator","selectionModel","rejectionModel","projectIterator","projModel","rejectionProjModel","groupByIterator","selectionGroupedModel","rejectionGroupedModel","calculatedVariableIterator","_propModel$0$clone","_propModel$1$clone","calculateVariable","replaceVar","exitModel","getRootDataModel","propagateToAllDataModels","rootModels","propagationNameSpace","filteredCriteria","mutableActions","rootGroupByModel","groupByModel","rootModel","src_relation","Relation","relation_classCallCheck","_fieldStoreName","_propagationNameSpace","immutableActions","_fieldspace","updateFields","partialFieldspace","fieldStoreName","collID","partialFieldMap","newFields","coll","fields_field","helper_updateFields","joinWith","unionWith","differenceWith","oDm","retDataModel","fieldConfig","normalizedProjField","relation_toConsumableArray","search","_fieldConfig","criteriaQueue","datamodel_classCallCheck","datamodel_possibleConstructorReturn","_onPropagation","_sortingDetails","dataGenerated","fmtFieldIdx","fIdx","fmtFn","datumIdx","rawData","dataInCSVArr","sortedDm","fieldinst","dependency","depVars","retrieveFn","depFieldIndices","fieldSpec","fs","suppliedFields","computedValues","fieldsData","datamodel_toConsumableArray","_createFields","datamodel_slicedToArray","addField","getRootGroupByModel","propagateImmutableActions","criteriaModel","sourceNamespace","measureName","binFieldName","dataSet","currfield","binField","stats_sum","stats_avg","stats_min","stats_max","stats_first","stats_last","stats_count","sd","compose","operations","currentDM","frstChild","derivations","compose_toConsumableArray","addParent","naturalJoin","natural_join_naturalJoin","fullOuterJoin","Stats","stats_namespaceObject","enums_namespaceObject","DataFormat","FilteringMode","version","datamodel_package"],"mappings":"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ENgB,GAAeP,GAAKM,ICApBE,GAAeR,GAZK,IAAI15B,MAAM,GAAG+E,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAwD,IAAI0wB,KCENkB,GAAeT,GAZK,IAAI15B,MAAM,GAAG+E,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAwD,IAAI0wB,KCENmB,GAAeV,GAZK,IAAI15B,MAAM,GAAG+E,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAwD,IAAI0wB,KCENoB,GAAeX,GAZK,IAAI15B,MAAM,GAAG+E,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAwD,IAAI0wB,KCENqB,GAAeZ,GAZK,IAAI15B,MAAM,GAAG+E,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAwD,IAAI0wB,KCENsB,GAAeb,GAZK,IAAI15B,MAAM,GAAG+E,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAwD,IAAI0wB,KCANuB,GAAed,GAVK,IAAI15B,MAAM,GAAG+E,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAwD,IAAI0wB,KCENwB,GAAef,GAVK,IAAI15B,MAAM,GAAG+E,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAwD,IAAI0wB,KCENyB,GAAehB,GAVK,IAAI15B,MAAM,GAAG+E,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAwD,IAAI0wB,KCEN0B,GAAejB,GAVK,IAAI15B,MAAM,GAAG+E,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAwD,IAAI0wB,KCEN2B,GAAelB,GAVK,IAAI15B,MAAM,GAAG+E,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAwD,IAAI0wB,KCEN4B,GAAenB,GAVK,IAAI15B,MAAM,GAAG+E,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAwD,IAAI0wB,KCEN6B,GAAepB,GAVK,IAAI15B,MAAM,GAAG+E,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAwD,IAAI0wB,KCEN8B,GAAerB,GAVK,IAAI15B,MAAM,GAAG+E,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAwD,IAAI0wB,KCEN+B,GAAetB,GAVK,IAAI15B,MAAM,GAAG+E,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAwD,IAAI0wB,KCENgC,GAAevB,GAVK,IAAI15B,MAAM,GAAG+E,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAwD,IAAI0wB,KCENiC,GAAexB,GAVK,IAAI15B,MAAM,GAAG+E,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAwD,IAAI0wB,KCENkC,GAAezB,GAVK,IAAI15B,MAAM,GAAG+E,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAwD,IAAI0wB,KCRKmC,GAAS,IAAIp7B,MAAM,GAAG+E,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAwD,IAAI0wB,IAENoC,GAAe3B,GAAK0B,ICApBE,GAAe5B,GAVK,IAAI15B,MAAM,GAAG+E,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAwD,IAAI0wB,KCENsC,GAAe7B,GAVK,IAAI15B,MAAM,GAAG+E,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAwD,IAAI0wB,KCENuC,GAAe9B,GAVK,IAAI15B,MAAM,GAAG+E,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAwD,IAAI0wB,KCENwC,GAAe/B,GAVK,IAAI15B,MAAM,GAAG+E,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAwD,IAAI0wB,KCENyC,GAAehC,GAVK,IAAI15B,MAAM,GAAG+E,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA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","file":"muze.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"muze\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"muze\"] = factory();\n\telse\n\t\troot[\"muze\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","const DataModel = require('./export');\n\nmodule.exports = DataModel.default ? DataModel.default : DataModel;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nvar lib = {\n\tinit: function init(win) {\n\t\tvar doc = win.document,\n\t\t    nav = win.navigator,\n\t\t    userAgent = nav.userAgent,\n\t\t    DIV = 'DIV',\n\t\t    ceil = Math.ceil,\n\t\t    floor = Math.floor,\n\t\t    containerInstanceCount = 0,\n\t\t    clsNameSpace = 'fusioncharts-smartlabel-',\n\t\t    containerClass = clsNameSpace + 'container',\n\t\t    classNameWithTag = clsNameSpace + 'tag',\n\t\t    classNameWithTagBR = clsNameSpace + 'br';\n\n\t\tlib = {\n\t\t\twin: win,\n\n\t\t\tcontainerClass: containerClass,\n\n\t\t\tclassNameWithTag: classNameWithTag,\n\n\t\t\tclassNameWithTagBR: classNameWithTagBR,\n\n\t\t\tmaxDefaultCacheLimit: 500,\n\n\t\t\tclassNameReg: new RegExp('\\b' + classNameWithTag + '\\b'),\n\n\t\t\tclassNameBrReg: new RegExp('\\b' + classNameWithTagBR + '\\b'),\n\n\t\t\tspanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n\n\t\t\tspanAdditionReplacer: '$1<span class=\"' + classNameWithTag + '\">$2</span>',\n\n\t\t\tspanRemovalRegx: new RegExp('\\\\<span[^\\\\>]+?' + classNameWithTag + '[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>', 'ig'),\n\n\t\t\txmlTagRegEx: new RegExp('<[^>][^<]*[^>]+>', 'i'),\n\n\t\t\tltgtRegex: /&lt;|&gt;/g,\n\n\t\t\tbrReplaceRegex: /<br\\/>/ig,\n\n\t\t\ttestStrAvg: 'WgI',\n\n\t\t\t// This style is applied over the parent smartlabel container. The container is kept hidden from the viewport\n\t\t\tparentContainerStyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '-9999em',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\tpadding: '0px',\n\t\t\t\twidth: '1px',\n\t\t\t\theight: '1px',\n\t\t\t\toverflow: 'hidden'\n\t\t\t},\n\n\t\t\t// All the style which might affect the text metrics\n\t\t\tsupportedStyle: {\n\t\t\t\tfont: 'font',\n\t\t\t\tfontFamily: 'font-family',\n\t\t\t\t'font-family': 'font-family',\n\t\t\t\tfontWeight: 'font-weight',\n\t\t\t\t'font-weight': 'font-weight',\n\t\t\t\tfontSize: 'font-size',\n\t\t\t\t'font-size': 'font-size',\n\t\t\t\tlineHeight: 'line-height',\n\t\t\t\t'line-height': 'line-height',\n\t\t\t\tfontStyle: 'font-style',\n\t\t\t\t'font-style': 'font-style'\n\t\t\t},\n\n\t\t\t// Get the support list for html the document where the text calcution is to be done.\n\t\t\tgetDocumentSupport: function getDocumentSupport() {\n\t\t\t\tvar childRetriverFn, childRetriverString, noClassTesting;\n\n\t\t\t\tif (doc.getElementsByClassName) {\n\t\t\t\t\tchildRetriverFn = 'getElementsByClassName';\n\t\t\t\t\tchildRetriverString = classNameWithTag;\n\t\t\t\t\tnoClassTesting = true;\n\t\t\t\t} else {\n\t\t\t\t\tchildRetriverFn = 'getElementsByTagName';\n\t\t\t\t\tchildRetriverString = 'span';\n\t\t\t\t\tnoClassTesting = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisIE: /msie/i.test(userAgent) && !win.opera,\n\t\t\t\t\thasSVG: Boolean(win.SVGAngle || doc.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n\t\t\t\t\tisHeadLess: new RegExp(' HtmlUnit').test(userAgent),\n\t\t\t\t\tisWebKit: new RegExp(' AppleWebKit/').test(userAgent),\n\t\t\t\t\tchildRetriverFn: childRetriverFn,\n\t\t\t\t\tchildRetriverString: childRetriverString,\n\t\t\t\t\tnoClassTesting: noClassTesting\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n    * Create a html div element and attach it with a parent. All the subsequent operations are performed\n    * by upding this dom tree only.\n    *\n    * @param {HTMLElement} - The html element where the newly created div is to be attached. If not passed,\n    *                      the new div is appended on the body.\n    */\n\t\t\tcreateContainer: function createContainer(containerParent) {\n\t\t\t\tvar body, container;\n\n\t\t\t\tif (containerParent && (containerParent.offsetWidth || containerParent.offsetHeight)) {\n\t\t\t\t\tif (containerParent.appendChild) {\n\t\t\t\t\t\tcontainerParent.appendChild(container = doc.createElement(DIV));\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbody = doc.getElementsByTagName('body')[0];\n\n\t\t\t\t\tif (body && body.appendChild) {\n\t\t\t\t\t\tcontainer = doc.createElement(DIV);\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\tcontainerInstanceCount += 1;\n\t\t\t\t\t\tbody.appendChild(container);\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Finds a approximate position where the text is to be broken\n\t\t\tgetNearestBreakIndex: function getNearestBreakIndex(text, maxWidth, sl) {\n\t\t\t\tif (!text || !text.length) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar difference,\n\t\t\t\t    getWidth = sl._getWidthFn(),\n\t\t\t\t    charLen = 0,\n\t\t\t\t    increment = 0,\n\t\t\t\t    oriWidth = getWidth(text),\n\t\t\t\t    avgWidth = oriWidth / text.length;\n\n\t\t\t\tdifference = maxWidth;\n\t\t\t\tcharLen = ceil(maxWidth / avgWidth);\n\n\t\t\t\tif (oriWidth < maxWidth) {\n\t\t\t\t\treturn text.length - 1;\n\t\t\t\t}\n\n\t\t\t\tif (charLen > text.length) {\n\t\t\t\t\tdifference = maxWidth - oriWidth;\n\t\t\t\t\tcharLen = text.length;\n\t\t\t\t}\n\n\t\t\t\twhile (difference > 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (difference < 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn charLen;\n\t\t\t},\n\n\t\t\t/*\n    * Determine lineheight of a text for a given style. It adds propery lineHeight to the style passed\n    *\n    * @param {Object} - The style based on which the text's metric needs to be calculated. The calculation happens\n    *                  based on fontSize property, if its not present a default font size is assumed.\n    *\n    * @return {Object} - The style that was passed with lineHeight as a named propery set on the object.\n    */\n\t\t\tsetLineHeight: function setLineHeight(styleObj) {\n\t\t\t\tvar fSize = styleObj.fontSize = styleObj.fontSize || '12px';\n\t\t\t\tstyleObj.lineHeight = styleObj.lineHeight || styleObj['line-height'] || parseInt(fSize, 10) * 1.2 + 'px';\n\t\t\t\treturn styleObj;\n\t\t\t}\n\t\t};\n\n\t\treturn lib;\n\t}\n};\n\nexports['default'] = lib;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar _containerManager = require('./container-manager');\n\nvar _containerManager2 = _interopRequireDefault(_containerManager);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    BLANK = '',\n    htmlSplCharSpace = { ' ': '&nbsp;' },\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\n/*\n * Create new instance of SmartLabelManager.\n *\n * SmartLabelManager controls the lifetime of the execution space where the text's metrics will be calculated.\n * This takes a string for a given style and returns the height, width.\n * If a bound box is defined it wraps the text and returns the wrapped height and width.\n * It allows to append ellipsis at the end if the text is truncated.\n *\n * @param {String | Number} id - Id of the instance. If the same id is passed, it disposes the old instance and\n *                              save the new one;\n * @param {String | HTMLElement} container - The id or the instance of the container where the intermediate dom\n *                              elements are to be attached. If not passed, it appends in div\n *\n * @param {Boolean} useEllipses - This decides if a ellipses to be appended if the text is truncated.\n * @param {Object} options - Control options\n *                          {\n *                              maxCacheLimit: No of letter to be cached. Default: 500.\n *                          }\n * @constructor\n */\nfunction SmartLabelManager(id, container, useEllipses, options) {\n    var wrapper,\n        prop,\n        max,\n        prevInstance,\n        isBrowserLess = false,\n        store = SmartLabelManager.store;\n\n    if (typeof id === 'undefined' || typeof id === 'object') {\n        return;\n    }\n\n    if (prevInstance = store[id]) {\n        prevInstance.dispose();\n    }\n\n    store[id] = this;\n    options = options || {};\n    options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n    if (typeof container === 'string') {\n        container = doc.getElementById(container);\n    }\n\n    wrapper = slLib.createContainer(container);\n    wrapper.innerHTML = slLib.testStrAvg;\n\n    if (documentSupport.isHeadLess || !documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth) {\n        isBrowserLess = true;\n    }\n\n    wrapper.innerHTML = '';\n    for (prop in slLib.parentContainerStyle) {\n        wrapper.style[prop] = slLib.parentContainerStyle[prop];\n    }\n\n    this.id = id;\n    this.parentContainer = wrapper;\n\n    this._containerManager = new _containerManager2['default'](wrapper, isBrowserLess, 10);\n    this._showNoEllipses = !useEllipses;\n    this._init = true;\n    this.style = {};\n    this.options = options;\n\n    this.setStyle();\n}\n\n/*\n * getSmartText returns the text separated by <br/> whenever a break is necessary. This is to recgonize one\n * generalized format independent of the implementation (canvas based solution, svg based solution). This method\n * converts the output of getSmartText().text to array of lines if the text is wrapped. It sets a named property\n * `lines` on the object passed as parameter.\n *\n * @param {Object} smartlabel - the object returned by getSmartText based on which line arr which to be formed.\n *\n * @return {Object} - The same object which was passed in the arguments. Also a named property `lines` is set.\n */\nSmartLabelManager.textToLines = function (smartlabel) {\n    smartlabel = smartlabel || {};\n\n    if (!smartlabel.text) {\n        smartlabel.text = '';\n    } else if (typeof smartlabel.text !== 'string') {\n        smartlabel.text = smartlabel.text.toString();\n    }\n\n    smartlabel.lines = smartlabel.text.split(/\\n|<br\\s*?\\/?>/ig);\n    return smartlabel;\n};\n\n// Saves all the instance created so far\nSmartLabelManager.store = {};\n\n// Calculates space taken by a character with an approximation value which is calculated by repeating the\n// character by string length times.\nSmartLabelManager.prototype._calCharDimWithCache = function (text, calculateDifference, length) {\n    if (!this._init) {\n        return false;\n    }\n\n    var size,\n        csArr,\n        tw,\n        twi,\n        cachedStyle,\n        asymmetricDifference,\n        maxAdvancedCacheLimit = this.options.maxCacheLimit,\n        container = this._container,\n        style = this.style || {},\n        cache = this._advancedCache || (this._advancedCache = {}),\n        advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []),\n        cacheName = text + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK),\n        cacheInitName = text + 'init' + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK);\n\n    htmlSplCharSpace[text] && (text = htmlSplCharSpace[text]);\n\n    if (!calculateDifference) {\n        asymmetricDifference = 0;\n    } else {\n        if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n            container.innerHTML = text.repeat ? text.repeat(length) : Array(length + 1).join(text); // jshint ignore:line\n            tw = container.offsetWidth;\n\n            container.innerHTML = text;\n            twi = container.offsetWidth;\n\n            asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n            advancedCacheKey.push(cacheInitName);\n            if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n                delete cache[advancedCacheKey.shift()];\n            }\n        }\n    }\n\n    if (cachedStyle = cache[cacheName]) {\n        csArr = cachedStyle.split(',');\n        return {\n            width: parseFloat(csArr[0], 10),\n            height: parseFloat(csArr[1], 10)\n        };\n    }\n\n    container.innerHTML = text;\n\n    size = {\n        height: container.offsetHeight,\n        width: container.offsetWidth + asymmetricDifference\n    };\n\n    cache[cacheName] = size.width + ',' + size.height;\n    advancedCacheKey.push(cacheName);\n    if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n    }\n\n    return size;\n};\n\n// Provide function to calculate the height and width based on the environment and available support from dom.\nSmartLabelManager.prototype._getWidthFn = function () {\n    var contObj = this._containerObj,\n        container = this._container,\n        svgText = contObj.svgText;\n\n    if (svgText) {\n        return function (str) {\n            var bbox, width;\n\n            svgText.textContent = str;\n            bbox = svgText.getBBox();\n            width = bbox.width - SVG_BBOX_CORRECTION;\n            if (width < 1) {\n                width = bbox.width;\n            }\n\n            return width;\n        };\n    } else {\n        return function (str) {\n            container.innerHTML = str;\n            return container.offsetWidth;\n        };\n    }\n};\n\n/*\n * Sets the style based on which the text's metrics to be calculated.\n *\n * @param {Object} style - The style object which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                      }\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.setStyle = function (style) {\n    if (!this._init) {\n        return this;\n    }\n\n    var sCont;\n\n    if (style === this.style && !this._styleNotSet) {\n        return;\n    }\n\n    if (!style) {\n        style = this.style;\n    }\n\n    slLib.setLineHeight(style);\n    this.style = style;\n\n    this._containerObj = sCont = this._containerManager.get(style);\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n\n    return this;\n};\n\n/*\n * Decides whether ellipses to be shown if the node is truncated\n *\n * @param {Boolean} useEllipses - decides if a ellipses to be appended if the text is truncated. Default: false\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n    if (!this._init) {\n        return this;\n    }\n    this._showNoEllipses = !useEllipses;\n    return this;\n};\n\n/*\n * Get wrapped or truncated text if a bound box is defined around it. The result text would be separated by <br/>\n * if wrapped\n *\n * @param {String} text - the subject text\n * @param {Number} maxWidth - width in px of the the bound box\n * @param {Number} maxHeight - height in px of the the bound box\n * @param {Boolean} noWrap - whether the text to be wrapped. Default false.\n *\n * @return {Object} - The metrics of the text bounded by the box\n *                  {\n *                      height : height of the wrapped text\n *                      width : width of the wrapped text\n *                      isTruncated : whether the text is truncated\n *                      maxHeight : Maximum height given\n *                      maxWidth : Maximum width given\n *                      oriText : Original text sent\n *                      oriTextHeight : Original text height\n *                      oriTextWidth : Original text width\n *                      text : SMART TEXT\n *                  }\n */\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var len,\n        trimStr,\n        tempArr,\n        tmpText,\n        maxWidthWithEll,\n        toolText,\n        oriWidth,\n        oriHeight,\n        newCharIndex,\n        nearestChar,\n        tempChar,\n        getWidth,\n        initialLeft,\n        initialTop,\n        getOriSizeImproveObj,\n        spanArr,\n        x,\n        y,\n        minWidth,\n        elem,\n        chr,\n        elemRightMostPoint,\n        elemLowestPoint,\n        lastBR,\n        removeFromIndex,\n        removeFromIndexForEllipses,\n        hasHTMLTag = false,\n        maxStrWidth = 0,\n        lastDash = -1,\n        lastSpace = -1,\n        lastIndexBroken = -1,\n        strWidth = 0,\n        strHeight = 0,\n        oriTextArr = [],\n        i = 0,\n        ellipsesStr = this._showNoEllipses ? '' : '...',\n        lineHeight = this._lineHeight,\n        context = this._context,\n        container = this._container,\n        sCont = this._containerObj,\n        ellipsesWidth = sCont.ellipsesWidth,\n        dotWidth = sCont.dotWidth,\n        characterArr = [],\n        dashIndex = -1,\n        spaceIndex = -1,\n        lastLineBreak = -1,\n        fastTrim = function fastTrim(str) {\n        str = str.replace(/^\\s\\s*/, '');\n        var ws = /\\s/,\n            i = str.length;\n        while (ws.test(str.charAt(i -= 1))) {/* jshint noempty:false */}\n        return str.slice(0, i + 1);\n    },\n        smartLabel = {\n        text: text,\n        maxWidth: maxWidth,\n        maxHeight: maxHeight,\n        width: null,\n        height: null,\n        oriTextWidth: null,\n        oriTextHeight: null,\n        oriText: text,\n        isTruncated: false\n    };\n\n    getWidth = this._getWidthFn();\n\n    // In some browsers, offsetheight of a single-line text is getting little (1 px) heigher value of the\n    // lineheight. As a result, smartLabel is unable to return single-line text.\n    // To fix this, increase the maxHeight a little amount. Hence maxHeight =  lineHeight * 1.2\n    if (maxHeight === lineHeight) {\n        maxHeight *= 1.2;\n    }\n\n    if (container) {\n        if (!documentSupport.isBrowserLess) {\n            hasHTMLTag = slLib.xmlTagRegEx.test(text);\n            if (!hasHTMLTag) {\n                // Due to support of <,> for xml we convert &lt;, &gt; to <,> respectively so to get the correct\n                // width it is required to convert the same before calculation for the new improve version of the\n                // get text width.\n                tmpText = text.replace(slLib.ltgtRegex, function (match) {\n                    return match === '&lt;' ? '<' : '>';\n                });\n                getOriSizeImproveObj = this.getOriSize(tmpText, true);\n\n                smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n                smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n            } else {\n                container.innerHTML = text;\n                smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n                smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n            }\n\n            if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n                smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n                smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n                return smartLabel;\n            }\n\n            if (lineHeight > maxHeight) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = 0;\n                smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n        }\n\n        // Calculate width with ellipses\n        text = fastTrim(text).replace(/(\\s+)/g, ' ');\n        maxWidthWithEll = this._showNoEllipses ? maxWidth : maxWidth - ellipsesWidth;\n\n        if (!hasHTMLTag) {\n            oriTextArr = text.split('');\n            len = oriTextArr.length;\n            trimStr = '', tempArr = [];\n            tempChar = oriTextArr[0];\n\n            if (this._cache[tempChar]) {\n                minWidth = this._cache[tempChar].width;\n            } else {\n                minWidth = getWidth(tempChar);\n                this._cache[tempChar] = { width: minWidth };\n            }\n\n            if (maxWidthWithEll > minWidth) {\n                tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split('');\n                i = tempArr.length;\n            } else if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            } else if (ellipsesStr) {\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            strWidth = getWidth(tempArr.join(''));\n            strHeight = this._lineHeight;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = smartLabel.oriText;\n                            smartLabel.width = getWidth(smartLabel.text);\n                            smartLabel.height = this._lineHeight;\n                            return smartLabel;\n                        }\n                    }\n                }\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = strWidth;\n                smartLabel.height = this._lineHeight;\n                return smartLabel;\n            } else {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (tempChar === ' ' && !context) {\n                        tempChar = '&nbsp;';\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            /** @todo use regular expressions for better performance. */\n                            lastSpace = text.substr(0, tempArr.length).lastIndexOf(' ');\n                            lastDash = text.substr(0, tempArr.length).lastIndexOf('-');\n                            if (lastSpace > lastIndexBroken) {\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                tempArr.splice(lastSpace, 1, '<br/>');\n                                lastIndexBroken = lastSpace;\n                                newCharIndex = lastSpace + 1;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === tempArr.length - 1) {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '<br/>-');\n                                } else {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '-<br/>');\n                                }\n                                lastIndexBroken = lastDash;\n                                newCharIndex = lastDash + 1;\n                            } else {\n                                tempArr.splice(tempArr.length - 1, 1, '<br/>' + oriTextArr[i]);\n                                lastLineBreak = tempArr.length - 2;\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastLineBreak + 1).join(''));\n                                lastIndexBroken = lastLineBreak;\n                                newCharIndex = i;\n                            }\n                            strHeight += this._lineHeight;\n                            if (strHeight > maxHeight) {\n                                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                                smartLabel.tooltext = smartLabel.oriText;\n                                // The max width among all the lines will be the width of the string.\n                                smartLabel.width = maxWidth;\n                                smartLabel.height = strHeight - this._lineHeight;\n                                return smartLabel;\n                            } else {\n                                maxStrWidth = max(maxStrWidth, strWidth);\n                                trimStr = null;\n                                nearestChar = slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                                strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n                                if (tempArr.length < newCharIndex + nearestChar) {\n                                    tempArr = tempArr.concat(text.substr(tempArr.length, newCharIndex + nearestChar - tempArr.length).split(''));\n                                    i = tempArr.length - 1;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                maxStrWidth = max(maxStrWidth, strWidth);\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = maxStrWidth;\n                smartLabel.height = strHeight;\n                return smartLabel;\n            }\n        } else {\n            toolText = text.replace(slLib.spanAdditionRegx, '$2');\n            text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n            text = text.replace(/(<br\\s*\\/*\\>)/g, '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>');\n\n            container.innerHTML = text;\n\n            spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n            for (x = 0, y = spanArr.length; x < y; x += 1) {\n                elem = spanArr[x];\n                //chech whether this span is temporary inserted span from it's class\n                if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n                    chr = elem.innerHTML;\n                    if (chr !== '') {\n                        if (chr === ' ') {\n                            spaceIndex = characterArr.length;\n                        } else if (chr === '-') {\n                            dashIndex = characterArr.length;\n                        }\n\n                        characterArr.push({\n                            spaceIdx: spaceIndex,\n                            dashIdx: dashIndex,\n                            elem: elem\n                        });\n                        oriTextArr.push(chr);\n                    }\n                }\n            }\n\n            i = 0;\n            len = characterArr.length;\n            minWidth = characterArr[0].elem.offsetWidth;\n\n            if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n\n                return smartLabel;\n            } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            initialLeft = characterArr[0].elem.offsetLeft;\n            initialTop = characterArr[0].elem.offsetTop;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n                        if (container.offsetWidth > maxWidth) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            } else {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    lastBR = null;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n\n                        if (elemRightMostPoint > maxWidth) {\n                            lastSpace = characterArr[i].spaceIdx;\n                            lastDash = characterArr[i].dashIdx;\n                            if (lastSpace > lastIndexBroken) {\n                                characterArr[lastSpace].elem.innerHTML = '<br/>';\n                                lastIndexBroken = lastSpace;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === i) {\n                                    // in case the overflowing character itself is the '-'\n                                    characterArr[lastDash].elem.innerHTML = '<br/>-';\n                                } else {\n                                    characterArr[lastDash].elem.innerHTML = '-<br/>';\n                                }\n                                lastIndexBroken = lastDash;\n                            } else {\n                                elem.parentNode.insertBefore(lastBR = doc.createElement('br'), elem);\n                            }\n\n                            //check whether this break made current element outside the area height\n                            if (elem.offsetHeight + elem.offsetTop > maxHeight) {\n                                //remove the lastly inserted line break\n                                if (lastBR) {\n                                    lastBR.parentNode.removeChild(lastBR);\n                                } else if (lastIndexBroken === lastDash) {\n                                    characterArr[lastDash].elem.innerHTML = '-';\n                                } else {\n                                    characterArr[lastSpace].elem.innerHTML = ' ';\n                                }\n                                removeFromIndex = i;\n                                //break the looping condition\n                                i = len;\n                            } else {\n                                removeFromIndexForEllipses = null;\n                            }\n                        }\n                    } else {\n                        //check whether this break made current element outside the area height\n                        if (elemLowestPoint > maxHeight) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            }\n\n            if (removeFromIndex < len) {\n                //set the trancated property of the smartlabel\n                smartLabel.isTruncated = true;\n\n                /** @todo is this really needed? */\n                removeFromIndexForEllipses = removeFromIndexForEllipses ? removeFromIndexForEllipses : removeFromIndex;\n\n                for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n                    elem = characterArr[i].elem;\n                    //chech whether this span is temporary inserted span from it's class\n                    elem.parentNode.removeChild(elem);\n                }\n\n                for (; i >= 0; i -= 1) {\n                    elem = characterArr[i].elem;\n                    if (slLib.classNameBrReg.test(elem.className)) {\n                        //chech whether this span is temporary inserted span from it's class\n                        elem.parentNode.removeChild(elem);\n                    } else {\n                        i = 0;\n                    }\n                }\n            }\n\n            //get the smart text\n            smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&');\n            if (smartLabel.isTruncated) {\n                smartLabel.text += ellipsesStr;\n                smartLabel.tooltext = toolText;\n            }\n        }\n\n        smartLabel.height = container.offsetHeight;\n        smartLabel.width = container.offsetWidth;\n\n        return smartLabel;\n    } else {\n        smartLabel.error = new Error('Body Tag Missing!');\n        return smartLabel;\n    }\n};\n\n/*\n * Get the height and width of a text.\n *\n * @param {String} text - Text whose metrics to be measured\n * @param {Boolean} Optional detailedCalculationFlag - this flag if set it calculates per letter position\n *                          information and returns it. Ideally you dont need it unless you want to post process the\n *                          string. And its an EXPENSIVE OPERATION.\n *\n * @return {Object} - If detailedCalculationFlag is set to true the returned object would be\n *                  {\n *                      height: height of the text\n *                      width: width of the text\n *                      detailObj: detail calculation of letters in the format {lettername: width}\n *                  }\n *                  If detailedCalculationFlag is set to false the returned object wont have the detailObj prop.\n */\nSmartLabelManager.prototype.getOriSize = function (text, detailedCalculationFlag) {\n    if (!this._init) {\n        return false;\n    }\n\n    var textArr,\n        letter,\n        lSize,\n        i,\n        l,\n        cumulativeSize = 0,\n        height = 0,\n        indiSizeStore = {};\n\n    if (!detailedCalculationFlag) {\n        return this._calCharDimWithCache(text);\n    }\n\n    // Calculate the width of every letter with an approximation\n    textArr = text.split('');\n    for (i = 0, l = textArr.length; i < l; i++) {\n        letter = textArr[i];\n        lSize = this._calCharDimWithCache(letter, true, textArr.length);\n        height = max(height, lSize.height);\n        cumulativeSize += lSize.width;\n        indiSizeStore[letter] = lSize.width;\n    }\n\n    return {\n        width: round(cumulativeSize),\n        height: height,\n        detailObj: indiSizeStore\n    };\n};\n\n/*\n * Dispose the container and object allocated by the smartlabel\n */\nSmartLabelManager.prototype.dispose = function () {\n    if (!this._init) {\n        return this;\n    }\n\n    this._containerManager && this._containerManager.dispose && this._containerManager.dispose();\n\n    delete this._container;\n    delete this._context;\n    delete this._cache;\n    delete this._containerManager;\n    delete this._containerObj;\n    delete this.id;\n    delete this.style;\n    delete this.parentContainer;\n    delete this._showNoEllipses;\n\n    return this;\n};\n\nexports['default'] = SmartLabelManager;\nmodule.exports = exports['default'];","const Muze = require('./muze');\n\nmodule.exports = Muze.default ? Muze.default : Muze;\n","'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction ContainerManager(parentContainer, isBrowserLess, maxContainers) {\n    var svg;\n\n    maxContainers = maxContainers > 5 ? maxContainers : 5;\n    maxContainers = maxContainers < 20 ? maxContainers : 20;\n\n    this.maxContainers = maxContainers;\n    this.first = null;\n    this.last = null;\n    this.containers = {};\n    this.length = 0;\n    this.rootNode = parentContainer;\n\n    if (isBrowserLess) {\n        svg = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'height', '0');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'width', '0');\n        this.svgRoot = svg;\n        this.rootNode.appendChild(svg);\n    }\n}\n\nContainerManager.prototype.get = function (style) {\n    var diff,\n        key,\n        containerObj,\n        containers = this.containers,\n        len = this.length,\n        max = this.maxContainers,\n        keyStr = '';\n\n    for (key in slLib.supportedStyle) {\n        if (style[key] !== undefined) {\n            keyStr += slLib.supportedStyle[key] + ':' + style[key] + ';';\n        }\n    }\n\n    if (!keyStr) {\n        return false;\n    }\n\n    if (containerObj = containers[keyStr]) {\n        if (this.first !== containerObj) {\n            containerObj.prev && (containerObj.prev.next = containerObj.next);\n            containerObj.next && (containerObj.next.prev = containerObj.prev);\n            containerObj.next = this.first;\n            containerObj.next.prev = containerObj;\n            this.last === containerObj && (this.last = containerObj.prev);\n            containerObj.prev = null;\n            this.first = containerObj;\n        }\n    } else {\n        if (len >= max) {\n            diff = len - max + 1;\n            // +1 is to remove an extra entry to make space for the new container to be added.\n            while (diff--) {\n                this.removeContainer(this.last);\n            }\n        }\n        containerObj = this.addContainer(keyStr);\n    }\n\n    return containerObj;\n};\n\nContainerManager.prototype.addContainer = function (keyStr) {\n    var node, container;\n\n    this.containers[keyStr] = container = {\n        next: null,\n        prev: null,\n        node: null,\n        ellipsesWidth: 0,\n        lineHeight: 0,\n        dotWidth: 0,\n        avgCharWidth: 4,\n        keyStr: keyStr,\n        charCache: {}\n    };\n\n    // Since the container objects are arranged from most recent to least recent order, we need to add the new\n    // object at the beginning of the list.\n    container.next = this.first;\n    container.next && (container.next.prev = container);\n    this.first = container;\n    if (!this.last) {\n        this.last = container;\n    }\n    this.length += 1;\n\n    node = container.node = doc.createElement('div');\n    this.rootNode.appendChild(node);\n\n    if (documentSupport.isIE && !documentSupport.hasSVG) {\n        node.style.setAttribute('cssText', keyStr);\n    } else {\n        node.setAttribute('style', keyStr);\n    }\n\n    node.setAttribute('aria-hidden', 'true');\n    node.setAttribute('role', 'presentation');\n    node.style.display = 'inline-block';\n\n    node.innerHTML = slLib.testStrAvg; // A test string.\n    container.lineHeight = node.offsetHeight;\n    container.avgCharWidth = node.offsetWidth / 3;\n\n    if (documentSupport.isBrowserLess) {\n        node = container.svgText = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n        node.setAttribute('style', keyStr);\n        this.svgRoot.appendChild(node);\n\n        node.textContent = slLib.testStrAvg; // A test string.\n        container.lineHeight = node.getBBox().height;\n        container.avgCharWidth = (node.getBBox().width - SVG_BBOX_CORRECTION) / 3;\n\n        node.textContent = '...';\n        container.ellipsesWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n        node.textContent = '.';\n        container.dotWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n    } else {\n        node.innerHTML = '...';\n        container.ellipsesWidth = node.offsetWidth;\n        node.innerHTML = '.';\n        container.dotWidth = node.offsetWidth;\n        node.innerHTML = '';\n    }\n\n    return container;\n};\n\nContainerManager.prototype.removeContainer = function (cObj) {\n    var keyStr = cObj.keyStr;\n\n    if (!keyStr || !this.length || !cObj) {\n        return;\n    }\n    this.length -= 1;\n\n    cObj.prev && (cObj.prev.next = cObj.next);\n    cObj.next && (cObj.next.prev = cObj.prev);\n    this.first === cObj && (this.first = cObj.next);\n    this.last === cObj && (this.last = cObj.prev);\n\n    cObj.node.parentNode.removeChild(cObj.node);\n\n    delete this.containers[keyStr];\n};\n\nContainerManager.prototype.dispose = function () {\n    var key,\n        containers = this.containers;\n\n    this.maxContainers = null;\n    for (key in containers) {\n        this.removeContainer(containers[key]);\n    }\n\n    this.rootNode.parentNode.removeChild(this.rootNode);\n\n    this.rootNode = null;\n    this.first = null;\n    this.last = null;\n};\n\nmodule.exports = ContainerManager;","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  scale.invertExtent = function(r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1, a, b, t,\n        hiIndex;\n    values.push(values[n] + this.step());\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo));\n    hiIndex = getClosestIndexOf(values, hi);\n    b = lo===hi ? a : Math.max(a, hiIndex - 1);\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) t = a, a = n - b, b = n - t; // map + swap\n    return (a > b) ? undefined : domain().slice(a, b+1);\n  };\n\n  scale.invert = function (r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1,\n        a,\n        t;\n\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo, 'left'));\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    return domain()[reverse ? n - a : a];\n  }\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction getClosestIndexOf (arr, value, side) {\n  var low = 0,\n      arrLen = arr.length,\n      high = arrLen - 1,\n      highVal,\n      mid,\n      d1,\n      d2;\n\n  while (low < high) {\n      mid = Math.floor((low + high) / 2);\n      d1 = Math.abs(arr[mid] - value);\n      d2 = Math.abs(arr[mid + 1] - value);\n\n      if (d2 <= d1) {\n          low = mid + 1;\n      }\n      else {\n          high = mid;\n      }\n  }\n\n  if (!side) {\n      return high;\n  }\n\n  highVal = arr[high];\n  if (highVal === value) {\n      return high;\n  } else if (highVal > value) {\n      if (high === 0) { return high; }\n      return side === 'left'? high - 1 : high;\n  } else {\n      if (high === arr.length - 1) { return high; }\n      return side === 'left'? high : high + 1;\n  }\n}","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute} from \"./duration\";\n\nvar hour = interval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","const ReservedFields = {\n    ROW_ID: '__id__'\n};\n\nexport default ReservedFields;\n","const CommonProps = {\n    ACTION_INF: 'actionInf',\n    ON_LAYER_DRAW: 'onlayerdraw'\n};\n\nexport default CommonProps;\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickTransform = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"))\n        .style('transform', tickTransform);\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.tickTransform = function(_) {\n    return arguments.length ? (tickTransform = _, axis) : tickTransform;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","export var slice = Array.prototype.slice;\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","const makeEntry = (arr, sCon) => {\n    arr.forEach((elem) => {\n        if (elem === undefined || elem === null) {\n            return;\n        }\n        sCon[elem] = 1;\n    });\n};\n\nexport default class ForeignSet {\n    constructor (arr) {\n        this._set = {};\n        makeEntry(arr, this._set);\n    }\n\n    append (arr) {\n        makeEntry(arr, this._set);\n        return this;\n    }\n\n    toArray () {\n        return Object.keys(this._set);\n    }\n\n    static difference (set1, set2) {\n        let key;\n        const filteredKeys = [],\n            s1 = set1._set,\n            s2 = set2._set;\n        for (key in s1) {\n            if (!({}).hasOwnProperty.call(s1, key)) {\n                continue;\n            }\n            if (key in s2) {\n                continue;\n            }\n            filteredKeys.push(key);\n        }\n        return new ForeignSet(filteredKeys);\n    }\n}\n","/* global window */\n\nimport ForeignSet from './set';\n\nconst\n    isSimpleObject = (obj) => {\n        let token;\n        if (typeof obj === 'object') {\n            if (obj === null) { return false; }\n            token = Object.prototype.toString.call(obj);\n            if (token === '[object Object]') {\n                return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n            }\n        }\n        return false;\n    },\n    minMsThreshold = 16,\n    /* istanbul ignore next */win = typeof window === 'undefined' ? (this || {}) : window,\n    /* istanbul ignore next */ reqAnimFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame ||\n        win.mozRequestAnimationFrame || win.oRequestAnimationFrame ||\n        win.msRequestAnimationFrame ||\n        function (callback) {\n            setTimeout(callback, minMsThreshold);\n        },\n\n    getTimeBasedId = () => {\n        if (getTimeBasedId.__lastTime === new Date().getTime()) {\n            return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n        }\n\n        getTimeBasedId.__id = 0;\n        getTimeBasedId.__lastTime = new Date().getTime();\n        return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n    },\n    pullableRecent = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const\n                    hist = node.history,\n                    l = hist.length - 1;\n                return [hist[l - 1 < 0 ? 0 : l - 1], hist[l]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    pullableEnd = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const hist = node.history;\n                return [hist[0], hist[hist.length - 1]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    unique = fns => fns\n                    .reduce((store, fn) => {\n                // @warn function with side effect, it mutates the store passed during initialization\n                        if (fn.__id in store.map) {\n                            return store;\n                        }\n\n                        store.map[fn.__id] = 1;\n                        store.unique.push(fn);\n\n                        return store;\n                    }, { map: {}, unique: [] })\n                    .unique,\n    compose = fns => () => {\n        fns.forEach(fn => fn());\n    },\n    flat = (...params) => {\n        const res = [];\n        params.forEach(param => res.push(...param));\n        return res;\n    },\n    identityMap = arrays => arrays,\n    splitPathProp = (path) => {\n        const pathArr = path.split('.'),\n            len = pathArr.length;\n        return [pathArr.slice(0, len - 1), pathArr[len - 1]];\n    },\n    scheduler = (onFinishCallback) => {\n        let queue = [],\n            animationFrame = null;\n\n        onFinishCallback = onFinishCallback &&\n            typeof onFinishCallback === 'function' && onFinishCallback || (() => { });\n\n        return (listeners) => {\n            [].push.apply(queue, listeners);\n            if (animationFrame === null) {\n                animationFrame = reqAnimFrame(() => {\n                    unique(queue).forEach(fn => fn());\n                    onFinishCallback();\n                    animationFrame = null;\n                    queue.length = 0;\n                });\n            }\n        };\n    },\n    fetch = namedNode => (...params) => params.map((param) => {\n        const node = namedNode[param];\n        return {\n            name: node.name,\n            qualifiedName: node.qualifiedName,\n            value: node.seed\n        };\n    }),\n    fetchAggregator = (...params) => ({\n        dependencies: params.slice(0, params.length - 1),\n        fn: params[params.length - 1]\n    }),\n    getUpstreamNodes = (list) => {\n        let res = [];\n        const map = {};\n        list.forEach(node => map[node.qualifiedName] = -1);\n        function rec (arr) {\n            arr.forEach((node) => {\n                let qname,\n                    placedIndex,\n                    preArr,\n                    postArr;\n                if (!((qname = node.qualifiedName) in map)) {\n                    map[qname] = res.push(node) - 1;\n                } else {\n                    placedIndex = map[qname];\n                    if (placedIndex !== -1 && placedIndex !== res.length - 1) {\n                        // If not the last element, readjust the array so that the later dependency position is saved\n                        preArr = res.slice(0, placedIndex);\n                        postArr = res.slice(placedIndex + 1);\n                        res = preArr.concat(postArr);\n\n                        // reset the index in map\n                        postArr.forEach((elem, i) => map[elem.qualifiedName] = i + preArr.length);\n                        map[qname] = res.push(node) - 1;\n                    }\n                }\n                rec(node.outgoingEdges);\n            });\n        }\n        rec(list);\n        return res;\n    },\n    resolver = {\n        accumulate: (...params) => {\n            const resp = {};\n            params.forEach((nodeDetails) => {\n                Object.assign(resp, { [nodeDetails.name]: nodeDetails.value });\n            });\n            return resp;\n        },\n        identity: nodeDetails => nodeDetails.value\n    };\n\nfunction resolveDependencyOrder (node, resolved, resolveMap) {\n    let qname;\n    node.edges.forEach((neighbour) => {\n        resolveDependencyOrder(neighbour, resolved, resolveMap);\n    });\n\n    if (node.isRoot() || (qname = node.qualifiedName) in resolveMap) {\n        return;\n    }\n    resolved.push(node);\n    resolveMap[qname] = 1;\n}\n\n// function getUpstreamNodes (node, list) {\n//     if (node.isRoot()) {\n//         return;\n//     }\n//     node.outgoingEdges.forEach((_node) => {\n//         list.push(_node);\n//         getUpstreamNodes(_node, list);\n//     });\n// }\n\nclass CustomResolver {\n    constructor (resolver) {\n        this.fn = resolver;\n        this.dep = [];\n    }\n\n    addDependencies(...dep) {\n        this.dep.push(...dep);\n        return this;\n    }\n\n    getDependencies () {\n        return this.dep;\n    }\n\n    get () {\n        return this.fn;\n    }\n}\n\nexport {\n    isSimpleObject,\n    scheduler,\n    compose,\n    flat,\n    identityMap,\n    pullableEnd,\n    pullableRecent,\n    unique,\n    splitPathProp,\n    resolver,\n    ForeignSet,\n    resolveDependencyOrder,\n    fetch,\n    // upstreamNodes,\n    fetchAggregator,\n    CustomResolver,\n    getUpstreamNodes\n};\n","export default class GraphNode {\n    constructor (name, qualifiedName, options) {\n        /* istanbul ignore next */options = options || {};\n        this.name = name;\n        this.qualifiedName = qualifiedName;\n        this.edges = [];\n        this.outgoingEdges = [];\n        this._seed = null;\n        this.requireResolve = true;\n        this.retriever = options.retriever;\n        this.history = [];\n        this.resolver = null;\n        this.electricEdges = [];\n    }\n\n    addDependencies (...dep) {\n        this.edges.push(...dep);\n        dep.forEach(entry => entry.outgoingEdges.push(this));\n        return this;\n    }\n\n    addElectricNode (node) {\n        this.electricEdges.push(node);\n        return this;\n    }\n\n    get seed () {\n        return this._seed;\n    }\n\n    set seed (value) {\n        this._seed = value;\n        this.requireResolve = true;\n        return this;\n    }\n\n    resolve () {\n        this.seed = this.resolver(...this.retrieveDetails());\n        this.history.push(this.seed);\n        this.requireResolve = false;\n        return this;\n    }\n\n    retrieveDetails () {\n        if (this.edges.length === 0) {\n            return [{\n                name: this.name,\n                qualifiedName: this.qualifiedName,\n                value: this.seed\n            }];\n        }\n        return this.retriever(...this.edges.map(edge => edge.qualifiedName));\n    }\n\n    repeatHead () {\n        const\n            history = this.history,\n            head = history[history.length - 1];\n        // @todo- Akash, write test case if history.length === 0 to pass code coverage\n        if (history.length === 0) {\n            return this;\n        }\n        history.push(head);\n        return this;\n    }\n\n    flush () {\n        const hist = this.history,\n            head = hist[hist.length - 1];\n        hist.length = 0;\n        hist.push(head);\n        return this;\n    }\n\n    isRoot () {\n        return this.name === null;\n    }\n}\n","import {\n    pullableRecent,\n    pullableEnd\n} from './utils';\n\nexport default class ElectricNode {\n    constructor () {\n        this.edges = [];\n        this.listeners = {\n            nextFrame: [],\n            currentFrame: []\n        };\n    }\n\n    addEdges (...nodes) {\n        this.edges.push(...nodes);\n        return this;\n    }\n\n    regListenerForCurrFrame (fn) {\n        const lstnrs = this.listeners.currentFrame;\n        let index = lstnrs.push(pullableRecent(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.currentFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    regListenerForNextFrame (fn) {\n        const lstnrs = this.listeners.nextFrame;\n        let index = lstnrs.push(pullableEnd(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.nextFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    hasNextFrameListener () {\n        return !!this.listeners.nextFrame.length;\n    }\n}\n","import {\n    isSimpleObject,\n    resolver,\n    // upstreamNodes,\n    flat,\n    resolveDependencyOrder,\n    getUpstreamNodes,\n    ForeignSet,\n    fetch,\n    CustomResolver,\n    scheduler\n} from './utils';\nimport Node from './graph-node';\nimport ElectricNode from './electric-node';\n\nexport default class Graph {\n    constructor () {\n        this.qualifiedNodeMap = {};\n        this.retriever = fetch(this.qualifiedNodeMap);\n        this.root = new Node(null, null, { retriever: this.retriever });\n        this.root.resolver = resolver.accumulate;\n\n        this._wholeSet = null;\n        this._propagate = true;\n        this.propagationOverride = {\n            currentFrameListeners: false,\n            nextFrameListeners: false\n        };\n\n        this._schedule = scheduler(() => {\n            let qname;\n            for (qname in this.qualifiedNodeMap) {\n                if (!({}).hasOwnProperty.call(this.qualifiedNodeMap, qname)) {\n                    return;\n                }\n                this.qualifiedNodeMap[qname].flush();\n            }\n        });\n    }\n\n    createNodesFrom (obj, mount) {\n        let val,\n            resolveReqList;\n        const qualifiedNodeMap = this.qualifiedNodeMap,\n            root = this.root,\n            retriever = this.retriever;\n\n        (function rec (objn, qualifiedName, history) {\n            let key,\n                qname,\n                perv,\n                node;\n\n            for (key in objn) {\n                if (!({}).hasOwnProperty.call(objn, key)) {\n                    continue;\n                }\n                qname = `${qualifiedName}${key}`;\n                node = new Node(key, qname, { retriever });\n                qualifiedNodeMap[qname] = node;\n\n                if ((perv = history.perv) !== undefined) {\n                    perv.addDependencies(node);\n                } else {\n                    // top most level entries\n                    root.addDependencies(node);\n                }\n\n                if (isSimpleObject(val = objn[key])) {\n                    rec(val, `${qualifiedName}${key}.`, { perv: node });\n                    node.resolver = resolver.accumulate;\n                } else if (val instanceof CustomResolver) {\n                    node.resolver = val.get();\n                    node.addDependencies(...val.getDependencies().map(qname => qualifiedNodeMap[qname]));\n                } else {\n                    node.resolver = resolver.identity;\n                    node.seed = val;\n                    // node.resolve();\n                }\n            }\n        }(obj, mount === null ? '' : `${mount}.`, {\n            perv: qualifiedNodeMap[mount]\n        }));\n\n        this._wholeSet = new ForeignSet(Object.keys(this.qualifiedNodeMap));\n\n        // Recalculate the model without firing the listeners\n        // @todo selective branch resolve. Currently resolve gets called even for a branch which was updated\n        resolveReqList = this.constructor.getResolvedList(root).concat(root).filter(node => node.requireResolve);\n        resolveReqList.forEach(node => node.resolve());\n        getUpstreamNodes(resolveReqList).forEach(node => node.resolve());\n        return this;\n    }\n\n    getNodeValue (prop) {\n        if (prop in this.qualifiedNodeMap) {\n            return this.qualifiedNodeMap[prop].seed;\n        }\n        return undefined;\n    }\n\n    createElectricNodeOf (props, fnSpec) {\n        const nodes = props.map(prop => this.qualifiedNodeMap[prop]),\n            eNode = new ElectricNode().addEdges(...nodes);\n\n        nodes.forEach(node => node.addElectricNode(eNode));\n        return eNode[`regListenerFor${fnSpec.type}`](fnSpec.fn);\n    }\n\n    update (...params) {\n        let changedSet,\n            upstreamNodes;\n        const\n            electricEdges = [],\n            nodes = params.map((entry) => {\n                entry[0].seed = entry[1];\n                return entry[0];\n            });\n        nodes.forEach(node => node.resolve());\n        electricEdges.push(...flat(...nodes.map(node => node.electricEdges)));\n        changedSet = new ForeignSet(nodes.map(node => node.qualifiedName));\n\n        if (!this._propagate) {\n            this.__execUniqueElectricEdges(electricEdges);\n            this._propagate = true;\n            return this;\n        }\n\n        upstreamNodes = getUpstreamNodes(nodes);\n        upstreamNodes.forEach(upstreamNode => upstreamNode.resolve());\n        changedSet.append(upstreamNodes.map(node => node.qualifiedName));\n        electricEdges.push(...flat(...upstreamNodes.map(node => node.electricEdges)));\n\n        this.__execUniqueElectricEdges(Array.from(new Set(electricEdges)), changedSet);\n        return this;\n    }\n\n    __execUniqueElectricEdges (electricEdges, changedSet) {\n        const\n            cfLstnrs = [], // current frame listeners\n            nfLstnrs = []; // next frame listeners\n        if (changedSet) {\n            const\n                differenceSet = ForeignSet.difference(this._wholeSet, changedSet),\n                entries = differenceSet.toArray();\n\n            entries.forEach(entry => this.qualifiedNodeMap[entry].repeatHead());\n        }\n\n        electricEdges.forEach((e) => {\n            cfLstnrs.push(...e.listeners.currentFrame);\n        });\n        electricEdges.forEach((e) => {\n            nfLstnrs.push(...e.listeners.nextFrame);\n        });\n\n        !this.propagationOverride.currentFrameListeners && cfLstnrs.forEach(fn => fn());\n        !this.propagationOverride.nextFrameListeners && this._schedule(nfLstnrs);\n        this.resetPropagationOverride();\n        return this;\n    }\n\n    resetNodeValue (...qnames) {\n        const nodes = qnames.map(qname => this.qualifiedNodeMap[qname]),\n            args = nodes.map(node => [node, node.seed]);\n        this.update(...args);\n        return this;\n    }\n\n    static getResolvedList (node) {\n        const resolved = [];\n        resolveDependencyOrder(node, resolved, {});\n        return resolved;\n    }\n\n    stopPropagation () {\n        this._propagate = false;\n        return this;\n    }\n\n    resetPropagationOverride () {\n        this.propagationOverride.currentFrameListeners = false;\n        this.propagationOverride.nextFrameListeners = false;\n        return this;\n    }\n\n    setPropagationOverride (key) {\n        this.propagationOverride[`${key}Listeners`] = true;\n        return this;\n    }\n\n    getNodeFromQualifiedName (qname) {\n        return this.qualifiedNodeMap[qname];\n    }\n}\n","import Model from './model';\n\nexport default Model;\n","import Graph from './graph';\nimport { CustomResolver, fetchAggregator } from './utils';\n\n/**\n * The container class for Hyperdis. Hyperdis is an enabler for observable object with few interesting features like,\n * calculated property, next frame and same frame listeners, multiple listeners etc with a dependency resolving system.\n * It internally uses a graph to hold the hierarchial relationship of a object. Model is merely a container which\n * ties all the components together.\n *\n * @todo Circular dependency detection is not present\n *\n * @example check src/index.spec.js\n * @class\n */\nclass Model {\n    constructor () {\n        this._graph = new Graph();\n        this._lockFlag = false;\n        this._reqQ = [];\n    }\n\n    /**\n     * Static method to create and init the model with an observable seed\n     *\n     * @param {Object} obj The target object which is required to be made observable\n     * @return {Model} instance of the observable object model\n     */\n    static create (obj) {\n        return new Model()._addPropInModel(null, obj);\n    }\n\n    /**\n     * Appends more observable property on the already observable instance. This mutates the original model.\n     *\n     * This function works in two mode. One being\n     * @param {String} mountPoint the property on which the new set of properties will be mounted. If its a nested\n     *                          property then the mountPoint has to be written such a way so it feels like you are\n     *                          accessing the object. If the mount point is not found then he obeservables are added in\n     *                          the root.\n     * @param {Object} The target object which is required to be made observable\n     *\n     * Another being\n     * @param {Object} The target object which is required to be made observable\n     *\n     * @return {Model} instance of the observable object model\n     */\n    append (...params) {\n        let mountPoint,\n            obj;\n\n        if (params.length === 1) {\n            mountPoint = null;\n            obj = params[0];\n        } else {\n            mountPoint = params[0];\n            obj = params[1];\n        }\n\n        this._addPropInModel(mountPoint, obj);\n        return this;\n    }\n\n    /**\n     * Creates a calculated variable from existing variable. This variable can't be updated from outside.\n     * @param {string} mountpoint property path on which the new variable will be placed\n     * @param {string} name name of the variable. If the variable could have hierarchy like `limits.start`\n     * @param {Function} fn funtion where the dependent variables are injected based on the dependency requirement\n     */\n    calculatedProp (...params) {\n        let calculationConfig,\n            customResolver,\n            varName,\n            mount,\n            fetchFn;\n\n        if (params.length > 2) {\n            mount = params[0];\n            varName = params[1];\n            fetchFn = params[2];\n        } else {\n            mount = null;\n            varName = params[0];\n            fetchFn = params[1];\n        }\n\n        calculationConfig = fetchFn(fetchAggregator);\n        customResolver = new CustomResolver(calculationConfig.fn);\n        customResolver.addDependencies(...calculationConfig.dependencies);\n\n        this._addPropInModel(mount, { [varName]: customResolver });\n        return this;\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    _addPropInModel (mountPoint, obj) {\n        this._graph.createNodesFrom(obj, mountPoint);\n        return this;\n    }\n\n    /**\n     * Register a listener in the current frame when a property or group of properties is changed.\n     *\n     * @example\n     * This function takes a single or group of property and handler which is called when any of the properties are\n     * changed.\n     * When a single property is changed the handler is called with two parameter, what was the old value of the state\n     * property and what is the new value.\n     * myState.on('range.start', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 9);\n     * // Output\n     * Value before prop change 1\n     * Value after prop change 9\n     *\n     * If a handler is registered on change of a property which has another state property as value, then the handler\n     * gets called whenever any state property connected to it gets changed\n     *\n     * myState.on('range', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 10);\n     * myState.prop('range.type.absolute', false);\n     *\n     * // Output\n     * Value before prop change\n     * range {\n     *      start: 9,\n     *      end: 5,\n     *      type: {\n     *          absolute: true\n     *      }\n     * }\n     * Value after prop change\n     * range: {\n     *      start: 10,\n     *      end: 5,\n     *      type: {\n     *          absolute: false\n     *      }\n     * }\n     * If a handler is registered with more than one property change then, the handler is called when any of the\n     * properties gets changed. In this cast the handler is called with more than one parameter: each for one state\n     * property which is registered for listening. Each parameter is of type array containing [oldValue, newValue]\n     *\n     * myState.on('range.start', 'range.end', (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * myState.prop('range.start', 12);\n     *\n     * // Output\n     * Start [10, 12]\n     * End [5, 5]\n     *\n     * myState.prop('range.end', 7);\n     *\n     * // Output\n     * Start [12, 12]\n     * End [5, 7]\n     *\n     * The on returns a function which is when called the listener registered gets unregistered\n     *\n     * let unsub = myState.on(['range.start', 'range.end'], (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * // Unsubscribe\n     * unsub()\n     *\n     * On takes an optional boolean value as the last parameter, which if passed as a true value the handler gets called\n     * during registration itself.\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    on (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed in the current stack frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'CurrFrame',\n                fn\n            });\n\n        if (instantCall) {\n            // Bar current next frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('nextFrame').resetNodeValue(...props);\n        }\n        return unsub;\n    }\n\n    /**\n     * Register a listener for the next frame when a property or group of properties is changed.\n     *\n     * @example\n     * See the examples for the on listener\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties. Here the oldvalue is last value of the last frame\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    next (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed at the tick of next animation frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'NextFrame',\n                fn\n            });\n\n        // @todo check support for this from the graph side\n        if (instantCall) {\n            // Bar current frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('currentFrame').resetNodeValue(...props);\n        }\n\n        return unsub;\n    }\n\n    /**\n     * Lock queues the request of property change and releases the change when unlock is called. This is helpful when\n     * multiple property is getting called and the model listeners are to be fired once at the end of update.\n     *\n     * @return {Model} instance of the model\n     */\n    lock () {\n        this._lockFlag = true;\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * Unlock unleashes the change done after the lock was called.\n\n     * @return {Model} instance of the model\n     */\n    unlock () {\n        this._lockFlag = false;\n        this.setProp(...this._reqQ);\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * This acts as getter and setter. If the function is called by passing only one argument, it retrieve the value\n     * associated with the property. If the same function is called using two parameters, first one being the property\n     * and second one being the value, then the value is set for the property and the handlers are called (if any)\n     * which got registered using the on function\n     *\n     * Getter\n     * @param {string} prop property path whose value to be retrieved\n     * @return {Object} value of the property at the time of call\n     *\n     * Setter\n     * @param {string} property property path whose value to be ser\n     * @return {Model} instance of the model\n     */\n    prop (...params) {\n        let prop,\n            val,\n            len;\n\n        switch (len = params.length) {\n        case 1:\n            prop = params[0];\n            break;\n\n        case 2:\n            prop = params[0];\n            val = params[1];\n            break;\n\n        default:\n            return this;\n        }\n\n        if (len === 2) {\n            this._lockFlag ? this._reqQ.push([prop, val]) : this.setProp([prop, val]);\n            return this;\n        }\n\n        return this._graph.getNodeValue(prop);\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    setProp (...props) {\n        // Filter out the calculated variables, so that it cant be changed from outside\n        // @todo if a node is not leafValue, and change is called, ignore it too\n        // props = props.filter(prop => !(VirtualObj.walkTill(prop[0].split('.'), this._vObj).leafValue()\n        //     instanceof CalculatedVar));\n\n        if (props.length === 0) {\n            return this;\n        }\n\n        this._graph.update(...props.map(prop => [this._graph.getNodeFromQualifiedName(prop[0]), prop[1]]));\n        return this;\n    }\n\n    /**\n     * Retrieves the graph representation of the object\n     * @return {Graph} instance of the graph associated to the model\n     */\n    graph () {\n        return this._graph;\n    }\n\n    /**\n     * Get serialized data from the model\n     *\n     * @return {Object} Serialized data\n     */\n    serialize () {\n        return this._graph.root.seed;\n    }\n}\n\nexport default Model;\n","/* global window, requestAnimationFrame, cancelAnimationFrame */\nimport { FieldType, DimensionSubtype } from 'datamodel';\nimport {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom\n} from 'd3-axis';\nimport {\n    symbolCircle,\n    symbolCross,\n    symbolDiamond,\n    symbolSquare,\n    symbolStar,\n    symbolWye,\n    symbolTriangle,\n    symbol,\n    stack as d3Stack,\n    stackOffsetDiverging,\n    stackOrderNone,\n    stackOrderAscending,\n    stackOrderDescending,\n    stackOffsetNone,\n    stackOffsetExpand,\n    stackOffsetWiggle,\n    pie,\n    arc,\n    line,\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    area\n} from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport {\n    interpolate,\n    interpolateRgb,\n    piecewise,\n    interpolateNumber,\n    interpolateHslLong\n} from 'd3-interpolate';\nimport {\n    easeCubic,\n    easeBounce,\n    easePoly,\n    easeBack,\n    easeCircle,\n    easeLinear,\n    easeElastic\n} from 'd3-ease';\nimport {\n   color,\n   rgb,\n   hsl\n} from 'd3-color';\nimport { voronoi } from 'd3-voronoi';\nimport Model from 'hyperdis';\nimport * as STACK_CONFIG from './enums/stack-config';\n\nconst HTMLElement = window.HTMLElement;\n\nconst isSimpleObject = (obj) => {\n    let token;\n    if (typeof obj === 'object') {\n        if (obj === null) { return false; }\n        token = Object.prototype.toString.call(obj);\n        if (token === '[object Object]') {\n            return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n        }\n    }\n    return false;\n};\n\n/**\n * Returns unique id\n * @return {string} Unique id string\n */\nconst\n    getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Deep copies an object and returns a new object.\n * @param {Object} o Object to clone\n * @return {Object} New Object.\n */\nconst clone = (o) => {\n    const output = {};\n    let v;\n    for (const key in o) {\n        if ({}.hasOwnProperty.call(o, key)) {\n            v = o[key];\n            output[key] = isSimpleObject(v) ? clone(v) : v;\n        }\n    }\n    return output;\n};\n\n/**\n* Checks the existence of keys in an object\n* @param {Array} keys Set of keys which are to be checked\n* @param {Object} obj whose keys are checked from the set of keys provided\n* @return {Object} Error if the keys are absent, or the object itself\n*/\nconst checkExistence = (keys, obj) => {\n    const nonExistentKeys = [];\n    keys.forEach((key) => {\n        if (key in obj) {\n            return;\n        }\n        nonExistentKeys.push(key);\n    });\n    return nonExistentKeys;\n};\n\nconst sanitizeIP = {\n    typeObj: (keys, obj) => {\n        if (typeof obj !== 'object') {\n            return Error('Argument type object expected');\n        }\n\n        const nonExistentKeys = checkExistence(keys, obj);\n        if (nonExistentKeys.length) {\n            return Error(`Missing keys from parameter ${nonExistentKeys.join(', ')}`);\n        }\n        return obj;\n    },\n\n    /* istanbul ignore next */ htmlElem: (elem) => {\n        if (!(elem instanceof HTMLElement)) {\n            return Error('HTMLElement required');\n        }\n        return elem;\n    }\n};\n\n/**\n * Gets the maximum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Maximum value\n */\nconst getMax = (data, field) => Math.max(...data.filter(d => !isNaN(d[field])).map(d => d[field]));\n\n/**\n * Gets the minimum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Minimum value\n */\nconst getMin = (data, field) => Math.min(...data.filter(d => !isNaN(d[field])).map(d => d[field]));\n\n/**\n * Gets the domain from the data based on the field name and type of field\n * @param  {Array.<Object> | Array.<Array>} data       Data Array\n * @param  {Array.<string>} fields    Array of fields from where the domain will be calculated\n * @param {string} fieldType Type of field - nominal, quantitiative, temporal.\n * @return {Array} Usually contains a min and max value if field is quantitative or\n * an array of values if field type is nominal or ordinal\n */\nconst getDomainFromData = (data, fields, fieldType) => {\n    let domain;\n    let domArr;\n    data = data[0] instanceof Array ? data : [data];\n    switch (fieldType) {\n    case DimensionSubtype.CATEGORICAL:\n        domain = [].concat(...data.map(arr => arr.map(d => d[fields[0]]).filter(d => d !== undefined)));\n        break;\n    default:\n        domArr = data.map((arr) => {\n            const firstMin = getMin(arr, fields[0]);\n            const secondMin = getMin(arr, fields[1]);\n            const firstMax = getMax(arr, fields[0]);\n            const secondMax = getMax(arr, fields[1]);\n            return [Math.min(firstMin, secondMin), Math.max(firstMax, secondMax)];\n        });\n        domain = [Math.min(...domArr.map(d => d[0])), Math.max(...domArr.map(d => d[1]))];\n        break;\n    }\n    return domain;\n};\n\n/**\n * Union Domain values\n * @param {Array.<Array>} domains Array of domain values\n * @param {string} fieldType type of field - dimension,measure or datetime.\n * @return {Array} Unioned domain of all domain values.\n */\nconst unionDomain = (domains, fieldType) => {\n    let domain;\n    domains = domains.filter(dom => dom.length);\n    if (fieldType === DimensionSubtype.CATEGORICAL) {\n        domain = domain = [].concat(...domains);\n    } else {\n        domain = [Math.min(...domains.map(d => d[0])), Math.max(...domains.map(d => d[1]))];\n    }\n\n    return domain;\n};\n\nconst symbolFns = {\n    circle: symbolCircle,\n    cross: symbolCross,\n    diamond: symbolDiamond,\n    square: symbolSquare,\n    star: symbolStar,\n    wye: symbolWye,\n    triangle: symbolTriangle\n};\n\nconst easeFns = {\n    cubic: easeCubic,\n    bounce: easeBounce,\n    linear: easeLinear,\n    elastic: easeElastic,\n    back: easeBack,\n    poly: easePoly,\n    circle: easeCircle\n};\n\n/**\n * Returns the maximum or minimum points of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @param {string} minOrMax minimum or maximum.\n * @return {Object} Minimum or maximum point.\n */\nconst getExtremePoint = (points, compareValue, minOrMax) => {\n    let extremePoint;\n    let point;\n    const len = points.length;\n    let minOrMaxVal = minOrMax === 'max' ? -Infinity : Infinity;\n    let val;\n\n    for (let i = 0; i < len; i++) {\n        point = points[i];\n        val = point[compareValue];\n        if (minOrMax === 'min' ? val < minOrMaxVal : val > minOrMaxVal) {\n            minOrMaxVal = val;\n            extremePoint = point;\n        }\n    }\n\n    return extremePoint;\n};\n\n/**\n * Returns the minimum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Minimum point.\n */\nconst getMinPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'min');\n\n/**\n * Returns the maximum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Maximum point.\n */\nconst getMaxPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'max');\n\n/**\n * Gets the index of the closest value of the given value from the array.\n * @param {Array} arr Array of values\n * @param {number} value Value from which the nearest value will be calculated.\n * @param {string} side side property.\n * @return {number} index of the closest value\n */\n/* istanbul ignore next */const getClosestIndexOf = (arr, value, side) => {\n    let low = 0;\n    const arrLen = arr.length;\n    let high = arrLen - 1;\n\n    let mid;\n    let d1;\n    let d2;\n\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        d1 = Math.abs(arr[mid] - value);\n        d2 = Math.abs(arr[mid + 1] - value);\n\n        if (d2 <= d1) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n\n    if (!side) {\n        return high;\n    }\n\n    const highVal = arr[high];\n    if (highVal === value) {\n        return high;\n    } else if (highVal > value) {\n        if (high === 0) { return high; }\n        return side === 'left' ? high - 1 : high;\n    }\n    if (high === arr.length - 1) { return high; }\n    return side === 'left' ? high : high + 1;\n};\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst getWindow = () => window;\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst reqAnimFrame = (() => requestAnimationFrame)();\n\nconst cancelAnimFrame = (() => cancelAnimationFrame)();\n\n/**\n * Capitalizes the first letter of the word\n * @param {string} text word\n * @return {string} Capitalized word\n */\nconst capitalizeFirst = (text) => {\n    text = text.toLowerCase();\n\n    return text.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1));\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\n/* istanbul ignore next */ const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Returns the class name appended with a given id.\n * @param {string} cls class name\n * @param {string} id unique identifier\n * @param {string} prefix string needed to add before the classname\n * @return {string} qualified class name\n */\n/* istanbul ignore next */const getQualifiedClassName = (cls, id, prefix) => {\n    cls = cls.replace(/^\\.*/, '');\n    return [`${prefix}-${cls}`, `${prefix}-${cls}-${id}`];\n};\n\n/**\n * This method is used to set the default value for variables\n * without sullying the code with conditional statements.\n *\n * @export\n * @param {any} param The parameter to test.\n * @param {any} value The default value to assign.\n * @return {any} The value.\n */\n/* istanbul ignore next */ const defaultValue = (param, value) => {\n    if (typeof param === 'undefined' || (typeof param === 'object' && !param)) {\n        return value;\n    }\n    return param;\n};\n\n/**\n * DESCRIPTION TODO\n * @todo\n *\n * @export\n * @param {Object} graph graph whose dependency order has to be generated\n * @return {Object} @todo\n */\nconst getDependencyOrder = (graph) => {\n    const dependencyOrder = [];\n    const visited = {};\n    const keys = Object.keys(graph);\n    /**\n     * DESCRIPTION TODO\n     * @todo\n     *\n     * @export\n     * @param {Object} name @todo\n     * @return {Object} @todo\n     */\n    const visit = (name) => {\n        if (dependencyOrder.length === keys.length) {\n            return true;\n        }\n        visited[name] = true;\n        const edges = graph[name];\n        for (let e = 0; e < edges.length; e++) {\n            const dep = edges[e];\n            if (!visited[dep]) {\n                visit(dep);\n            }\n        }\n\n        dependencyOrder.push(name);\n        return false;\n    };\n\n    for (let i = 0; i < keys.length; i++) {\n        if (visit(keys[i], i)) break;\n    }\n\n    return dependencyOrder;\n};\n\n/**\n * Iterates over the properties of an object and applies the function\n *\n * @param {any} obj object to be iterated upon\n * @param {any} fn  function to be applied on it\n */\nconst objectIterator = (obj, fn) => {\n    for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            fn(key, obj);\n        }\n    }\n};\n\n/**\n * This class creates a d3 voronoi for retrieving the nearest neighbour of any point from a set of two\n * dimensional points\n * @class Voronoi\n */\n/* istanbul ignore next */ class Voronoi {\n    /**\n     * Initialize the voronoi with the data given.\n     * @param {Array.<Object>} data Array of points.\n     */\n    constructor (data) {\n        this._voronoi = voronoi().x(d => d.x).y(d => d.y);\n        this.data(data);\n    }\n\n    /**\n     * Sets the data to voronoi\n     * @param {Array.<Object>} data Array of objects.\n     * @return {Voronoi} Instance of voronoi.\n     */\n    data (data) {\n        if (data) {\n            this._voronoiFn = this._voronoi(data);\n        }\n        return this;\n    }\n\n    /**\n     * Finds the closest point to the x and y position given.\n     * @param {number} x x value\n     * @param {number} y y value\n     * @param {number} radius search radius.\n     * @return {Object} Details of the nearest point.\n     */\n    find (x, y, radius) {\n        return this._voronoiFn.find(x, y, radius);\n    }\n}\n\n/**\n * Methods to handle changes to table configuration and reactivity are handled by this\n * class.\n */\n/**\n *  Common store class\n *\n * @class Store\n */\nclass Store {\n    /**\n     * Creates an instance of Store.\n     * @param {Object} config The object to create the state store with.\n     * @memberof Store\n     */\n    constructor (config) {\n        // create reactive model\n        this.model = Model.create(config);\n        this._listeners = [];\n    }\n\n    /**\n     * This method returns a plain JSON object\n     * with all the fields in the state store.\n     *\n     * @return {Object} Serialized representation of state store.\n     * @memberof Store\n     */\n    serialize () {\n        return this.model.serialize();\n    }\n\n    /**\n     * This method is used to update the value of a property in the state store.\n     *\n     * @param {string} propName The name of the property.\n     * @param {number} value The new value of the property.\n     * @memberof Store\n     */\n    commit (propName, value) {\n        // check if appropriate enum has been used\n        this.model.prop(propName, value);\n    }\n\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */registerChangeListener (propNames, callBack, instantCall) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.next(props, callBack, instantCall);\n        this._listeners.push(fn);\n        return this;\n    }\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */ registerImmediateListener (propNames, callBack, instantCall) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.on(props, callBack, instantCall);\n        this._listeners.push(fn);\n        return this;\n    }\n    /**\n     * This method is used to get the name of the property\n     * from the state store.\n     *\n     * @param {string} propName The name of the field in state store.\n     * @return {any} The value of the field.\n     * @memberof Store\n     */\n    get (propName) {\n        return this.model.prop(propName);\n    }\n\n    /**\n     * This method is used to register a computed property that is computed every time\n     * the store value changes.\n     *\n     * @param {string} propName The name of the property to create.\n     * @param {Function} callBack The function to execute when depemdent props change.\n     * @memberof Store\n     */\n    computed (propName, callBack) {\n        return this.model.calculatedProp(propName, callBack);\n    }\n\n    unsubscribeAll () {\n        this._listeners.forEach(fn => fn());\n    }\n}\n\n/**\n * Sanitize an input number / string mixed number. Currently dot in the no is not supported.\n *\n * @param {number | string} val pure number or string mixed number\n * @return {number | null}  Number if it can be extracted. Otherwise null\n */\nconst intSanitizer = (val) => {\n    const arr = val.toString().match(/(\\d+)(px)*/g);\n    if (!arr) {\n        // If only characters are passed\n        return null;\n    }\n\n    return parseInt(arr[0], 10);\n};\n\n/**\n * Setter getter creator from config\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args. (Optional)\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @param {Object} holder an empty object on which the getters and setters will be mounted\n * @param {Object} options options config based on which the getters and setters are determined.\n * @param {Hyperdis} model optional model to attach the property. If not sent new moel is created.\n * @return {Array} @todo\n */\nconst transactor = (holder, options, model) => {\n    let conf;\n    const store = model && model instanceof Model ? model : Model.create({});\n\n    for (const prop in options) {\n        if ({}.hasOwnProperty.call(options, prop)) {\n            conf = options[prop];\n            if (!store.prop(prop)) {\n                store.append({ [prop]: conf.value });\n            }\n            holder[prop] = ((context, key, meta) => (...params) => {\n                let val;\n                let compareTo;\n                const paramsLen = params.length;\n                const prevVal = store.prop(prop);\n                if (paramsLen) {\n                    // If parameters are passed then it's a setter\n                    const spreadParams = meta && meta.spreadParams;\n                    val = params;\n                    const values = [];\n                    if (meta) {\n                        for (let i = 0; i < paramsLen; i++) {\n                            val = params[i];\n                            const sanitization = meta.sanitization && (spreadParams ? meta.sanitization[i] :\n                                meta.sanitization);\n                            const typeCheck = meta.typeCheck && (spreadParams ? meta.typeCheck[i] : meta.typeCheck);\n                            if (sanitization && typeof sanitization === 'function') {\n                                // Sanitize if required\n                                val = sanitization(val, prevVal, holder);\n                            }\n\n                            if (typeCheck) {\n                                // Checking if a setter is valid\n                                if (typeof typeCheck === 'function') {\n                                    let typeExpected = meta.typeExpected;\n                                    if (typeExpected && spreadParams) {\n                                        typeExpected = typeExpected[i];\n                                    }\n                                    if (typeExpected) {\n                                        compareTo = typeExpected;\n                                    } else {\n                                        compareTo = true;\n                                    }\n\n                                    if (typeCheck(val) === compareTo) {\n                                        values.push(val);\n                                    }\n                                } else if (typeof typeCheck === 'string') {\n                                    if (typeCheck === 'constructor') {\n                                        const typeExpected = spreadParams ? meta.typeExpected[i] : meta.typeExpected;\n                                        if (val && (val.constructor.name === typeExpected)) {\n                                            values.push(val);\n                                        }\n                                    }\n                                } else {\n                                    // context.prop(key, val);\n                                    values.push(val);\n                                }\n                            } else {\n                                values.push(val);\n                            }\n                        }\n                        const preset = meta.preset;\n                        const oldValues = context.prop(key);\n                        preset && preset(values[0], holder);\n                        if (spreadParams) {\n                            oldValues.forEach((value, i) => {\n                                if (values[i] === undefined) {\n                                    values[i] = value;\n                                }\n                            });\n                        }\n                        values.length && context.prop(key, spreadParams ? values : values[0]);\n                    } else {\n                        context.prop(key, spreadParams ? val : val[0]);\n                    }\n                    return holder;\n                }\n            // No parameters are passed hence its a getter\n                return context.prop(key);\n            })(store, prop, conf.meta);\n        }\n    }\n\n    return [holder, store];\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} props\n */\nconst generateGetterSetters = (context, props) => {\n    Object.entries(props).forEach((propInfo) => {\n        const prop = propInfo[0];\n        const typeChecker = propInfo[1].typeChecker;\n        const sanitization = propInfo[1].sanitization;\n        const prototype = context.constructor.prototype;\n        if (!(Object.hasOwnProperty.call(prototype, prop))) {\n            context[prop] = (...params) => {\n                if (params.length) {\n                    let value = params[0];\n                    if (sanitization) {\n                        value = sanitization(context, params[0]);\n                    }\n                    if (typeChecker && !typeChecker(value)) {\n                        return context[`_${prop}`];\n                    }\n                    context[`_${prop}`] = value;\n                    return context;\n                } return context[`_${prop}`];\n            };\n        }\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} prop\n */\nconst getArraySum = (arr, prop) => arr.reduce((total, elem) => {\n    total += prop ? elem[prop] : elem;\n    return total;\n}, 0);\n\n/**\n *\n *\n * @param {*} arr1\n * @param {*} arr2\n * @returns\n */\nconst arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) { return false; }\n    for (let i = arr1.length; i >= 0; i--) {\n        if (arr1[i] !== arr2[i]) { return false; }\n    }\n\n    return true;\n};\n\n/* eslint valid-typeof:0 */\n/**\n * Returns a validation function which can be used to validate variables against a type and value\n *\n * @param {any} type type of value that the object should have\n * @return {Object} validation function\n */\nconst isEqual = type => (oldVal, newVal) => {\n    if (type === 'Array') {\n        if (!oldVal) {\n            return false;\n        }\n        return arraysEqual(oldVal, newVal);\n    } else if (type === 'Object') {\n        return Object.is(oldVal, newVal);\n    } return oldVal === newVal;\n};\n\n/**\n * Description @todo\n *\n * @param {any} transactionModel @todo\n * @param {any} transactionEndpoint @todo\n * @param {any} transactionItems @todo\n * @return {any} @todo\n */\nconst enableChainedTransaction = (transactionModel, transactionEndpoint, transactionItems) =>\n    transactionItems.forEach(item => transactionModel.on(item, ([, newVal]) => transactionEndpoint[item](newVal)));\n\n/**\n * Chceks if the element is istanceof HTMLElement\n *\n * @param {Object} elem any JS Object\n */\nconst isHTMLElem = elem => elem instanceof HTMLElement;\n\nconst ERROR_MSG = {\n    INTERFACE_IMPL: 'Method not implemented'\n};\n\n/**\n * Merges the sink object in the source by recursively iterating through the object properties\n * @param {Object} source Source Object\n * @param {Object} sink Sink Object\n * @return {Object} Merged object\n */\nconst mergeRecursive = (source, sink) => {\n    for (const prop in sink) {\n        if (isSimpleObject(source[prop]) && isSimpleObject(sink[prop])) {\n            mergeRecursive(source[prop], sink[prop]);\n        } else if (sink[prop] instanceof Object && sink[prop].constructor === Object) {\n            source[prop] = {};\n            mergeRecursive(source[prop], sink[prop]);\n        } else {\n            source[prop] = sink[prop];\n        }\n    }\n    return source;\n};\n\nconst interpolateArray = (data, fitCount) => {\n    const linearInterpolate = function (before, after, atPoint) {\n        return before + (after - before) * atPoint;\n    };\n    const newData = [];\n    const springFactor = ((data.length - 1) / (fitCount - 1));\n    newData[0] = data[0]; // for new allocation\n    for (let i = 1; i < fitCount - 1; i++) {\n        const tmp = i * springFactor;\n        const before = (Math.floor(tmp)).toFixed();\n        const after = (Math.ceil(tmp)).toFixed();\n        const atPoint = tmp - before;\n        newData[i] = linearInterpolate(data[before], data[after], atPoint);\n    }\n    newData[fitCount - 1] = data[data.length - 1]; // for new allocation\n    return newData;\n};\n\n/**\n *\n *\n * @param {*} fn\n */\nconst nextFrame = (fn) => {\n    setTimeout(() => {\n        fn();\n    }, 0);\n};\n\n/**\n *\n *\n * @param {*} angle\n */\nconst angleToRadian = angle => angle * Math.PI / 180;\n\n/**\n *\n *\n * @param {*} newName\n * @param {*} oldName\n */\nconst replaceCSSPrefix = () => {\n    // @todo\n};\n\n/**\n * Gets the  interpolator function from d3 color\n *\n */\nconst interpolator = () => interpolate;\n\n/**\n * Gets the number interpolator from d3 color\n *\n */\nconst numberInterpolator = () => interpolateNumber;\n\n/**\n * Gets the rgb interpolator from d3 color\n *\n */\nconst colorInterpolator = () => interpolateRgb;\n\n/**\n * Gets the hsl interpolator from d3 color\n *\n */\nconst hslInterpolator = () => interpolateHslLong;\n\nconst transformColors = () => ({\n    color,\n    rgb,\n    hsl\n});\n\n/**\n * Gets the piecewise interpolator from d3 color\n *\n */\nconst piecewiseInterpolator = () => piecewise;\n\nfunction hue2rgb (p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n\n  /**\n   * Converts an HSL color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n   * Assumes h, s, and l are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  l       The lightness\n   * @return  Array           The RGB representation\n   */\nconst hslToRgb = (h, s, l, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\n  /**\n   * Converts an RGB color value to HSV. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes r, g, and b are contained in the set [0, 255] and\n   * returns h, s, and v in the set [0, 1].\n   *\n   * @param   Number  r       The red color value\n   * @param   Number  g       The green color value\n   * @param   Number  b       The blue color value\n   * @return  Array           The HSV representation\n   */\nconst rgbToHsv = (r, g, b, a = 1) => {\n    r = +r; g = +g; b = +b; a = +a;\n    r /= 255; g /= 255; b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h;\n    let s;\n    const l = (max + min) / 2;\n\n    if (max === min) {\n        h = s = 0; // achromatic\n    } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n        default: break;\n        }\n        h /= 6;\n    }\n    return [h, s, l, a];\n};\n\n  /**\n   * Converts an HSV color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes h, s, and v are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  v       The value\n   * @return  Array           The RGB representation\n   */\nconst hsvToRgb = (h, s, v, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n    default: break;\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\nconst hexToHsv = (hex) => {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n    const r = parseInt(result[1], 16);\n    const g = parseInt(result[2], 16);\n    const b = parseInt(result[3], 16);\n    const a = result[4] ? parseInt(result[4], 16) : 1;\n    return rgbToHsv(r, g, b, a);\n};\n\nconst detectColor = (col) => {\n    const matchRgb = /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/;\n    const matchHsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g;\n\n    // Source :  https://gist.github.com/sethlopezme/d072b945969a3cc2cc11\n     // eslint-disable-next-line\n    const matchRgba = /rgba?\\(((25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,\\s*?){2}(25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,?\\s*([01]\\.?\\d*?)?\\)/;\n     // eslint-disable-next-line\n    const matchHsla = /^hsla\\((0|360|35\\d|3[0-4]\\d|[12]\\d\\d|0?\\d?\\d),(0|100|\\d{1,2})%,(0|100|\\d{1,2})%,(0?\\.\\d|1(\\.0)?)\\)$/;\n    const matchHex = /^#([0-9a-f]{3}){1,2}$/i;\n\n    if (matchRgb.test(col) || matchRgba.test(col)) {\n        return 'rgb';\n    } else if (matchHsl.test(col) || matchHsla.test(col)) {\n        return 'hsl';\n    } else if (matchHex.test(col)) {\n        return 'hex';\n    } return col;\n};\n\n/**\n *\n *\n * @param {*} model\n * @param {*} propModel\n * @returns\n */\nconst filterPropagationModel = (model, propModel, measures) => {\n    const { data, schema } = propModel.getData();\n    let filteredModel;\n    if (schema.length) {\n        const fieldMap = model.getFieldsConfig();\n        filteredModel = model.select((fields) => {\n            const include = data.some(row => schema.every((propField, idx) => {\n                if (!measures && (!(propField.name in fieldMap) ||\n                        fieldMap[propField.name].def.type === FieldType.MEASURE)) {\n                    return true;\n                }\n                return row[idx] === fields[propField.name].valueOf();\n            }));\n            return include;\n        }, {\n            saveChild: false\n        });\n    } else {\n        filteredModel = propModel;\n    }\n\n    return filteredModel;\n};\n\nconst assembleModelFromIdentifiers = (model, identifiers) => {\n    let schema = [];\n    let data;\n    const fieldMap = model.getFieldsConfig();\n    if (identifiers.length) {\n        const fields = identifiers[0];\n        const len = fields.length;\n        for (let i = 0; i < len; i++) {\n            const field = fields[i];\n            const fieldObj = fieldMap[field] && Object.assign({}, fieldMap[field].def);\n            if (fieldObj) {\n                schema.push(Object.assign(fieldObj));\n            }\n        }\n\n        data = [];\n        const header = identifiers[0];\n        for (let i = 1; i < identifiers.length; i += 1) {\n            const vals = identifiers[i];\n            const temp = {};\n            vals.forEach((fieldVal, cIdx) => {\n                temp[header[cIdx]] = fieldVal;\n            });\n            data.push(temp);\n        }\n    } else {\n        data = [];\n        schema = [];\n    }\n\n    return new model.constructor(data, schema);\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} criteria\n * @returns\n */\nconst getDataModelFromRange = (dataModel, criteria, mode) => {\n    if (criteria === null) {\n        return null;\n    }\n    const selFields = Object.keys(criteria);\n    const selFn = fields => selFields.every((field) => {\n        const val = fields[field].value;\n        const range = criteria[field][0] instanceof Array ? criteria[field][0] : criteria[field];\n        if (typeof range[0] === 'string') {\n            return range.find(d => d === val) !== undefined;\n        }\n        return range ? val >= range[0] && val <= range[1] : true;\n    });\n\n    return dataModel.select(selFn, {\n        saveChild: false,\n        mode\n    });\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} identifiers\n * @returns\n */\nconst getDataModelFromIdentifiers = (dataModel, identifiers, mode) => {\n    let filteredDataModel;\n    if (identifiers instanceof Array) {\n        const fieldsConfig = dataModel.getFieldsConfig();\n\n        const dataArr = identifiers.slice(1, identifiers.length);\n        if (identifiers instanceof Function) {\n            filteredDataModel = identifiers(dataModel, {}, false);\n        } else if (identifiers instanceof Array && identifiers[0].length) {\n            const filteredSchema = identifiers[0].filter(d => d in fieldsConfig);\n            filteredDataModel = dataModel.select((fields) => {\n                let include = true;\n                filteredSchema.forEach((propField, idx) => {\n                    const value = fields[propField].valueOf();\n                    const index = dataArr.findIndex(d => d[idx] === value);\n                    include = include && index !== -1;\n                });\n                return include;\n            }, {\n                saveChild: false,\n                mode\n            });\n        }\n    } else {\n        filteredDataModel = getDataModelFromRange(dataModel, identifiers, mode);\n    }\n    return filteredDataModel;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} listenerMap\n */\nconst registerListeners = (context, listenerMap) => {\n    const propListenerMap = listenerMap(context);\n    for (const key in propListenerMap) {\n        if ({}.hasOwnProperty.call(propListenerMap, key)) {\n            const mapObj = propListenerMap[key];\n            const propType = mapObj.type;\n            const props = mapObj.props;\n            const listenerFn = mapObj.listener;\n            context.store()[propType](props, listenerFn);\n        }\n    }\n};\n\nconst isValidValue = value => !isNaN(value) && value !== -Infinity && value !== Infinity;\n/**\n *\n *\n * @param {*} obj\n * @param {*} fields\n * @returns\n */\nconst getObjProp = (obj, ...fields) => {\n    if (obj === undefined || obj === null) {\n        return obj;\n    }\n    let retObj = obj;\n    for (let i = 0, len = fields.length; i < len; i++) {\n        retObj = retObj[fields[i]];\n        if (retObj === undefined || retObj === null) {\n            break;\n        }\n    }\n    return retObj;\n};\n\n/**\n *\n *\n * @param {*} str\n * @returns\n */\nconst escapeHTML = (str) => {\n    const htmlEscapes = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '/': '&#x2F;'\n    };\n    const htmlEscaper = /[&<>\"'/]/g;\n    return (`${str}`).replace(htmlEscaper, match => htmlEscapes[match]);\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst transposeArray = arr => arr[0].map((col, i) => arr.map(row => row[i]));\nconst toArray = arr => (arr instanceof Array ? arr : [arr]);\nconst extendsClass = (cls, extendsFrom, found) => {\n    if (!cls) {\n        return false;\n    }\n    const prototype = cls.prototype;\n    if (prototype instanceof extendsFrom) {\n        found = true;\n    } else {\n        found = extendsClass(prototype, extendsFrom, found);\n    }\n    return found;\n};\n\n/**\n *\n * @param {*} dm1\n * @param {*} dm2\n */\nconst concatModels = (dm1, dm2) => {\n    const dataObj1 = dm1.getData();\n    const dataObj2 = dm2.getData();\n    const data1 = dataObj1.data;\n    const data2 = dataObj2.data;\n    const schema1 = dataObj1.schema;\n    const schema2 = dataObj2.schema;\n    const tuples1 = {};\n    const tuples2 = {};\n    const commonTuples = {};\n    for (let i = 0; i < data1.length; i++) {\n        for (let ii = 0; ii < data2.length; ii++) {\n            const row1 = data1[i];\n            const row2 = data2[ii];\n            const dim1Values = row1.filter((d, idx) => schema1[idx].type === FieldType.DIMENSION);\n            const dim2Values = row2.filter((d, idx) => schema2[idx].type === FieldType.DIMENSION);\n            const allDimSame = dim1Values.every(value => dim2Values.indexOf(value) !== -1);\n            if (allDimSame) {\n                const key = dim1Values.join();\n                !commonTuples[key] && (commonTuples[key] = {});\n                row1.forEach((value, idx) => {\n                    commonTuples[key][schema1[idx].name] = value;\n                });\n                row2.forEach((value, idx) => {\n                    commonTuples[key][schema2[idx].name] = value;\n                });\n            } else {\n                const dm1Key = dim1Values.join();\n                const dm2Key = dim2Values.join();\n                if (!commonTuples[dm1Key] && !commonTuples[dm2Key]) {\n                    !tuples1[dm1Key] && (tuples1[dm1Key] = {});\n                    !tuples2[dm2Key] && (tuples2[dm2Key] = {});\n                    row1.forEach((value, idx) => {\n                        tuples1[dm1Key][schema1[idx].name] = value;\n                    });\n                    row2.forEach((value, idx) => {\n                        tuples2[dm2Key][schema2[idx].name] = value;\n                    });\n                }\n            }\n        }\n    }\n\n    const commonSchema = [...schema1, ...schema2.filter(s2 => schema1.findIndex(s1 => s1.name === s2.name) === -1)];\n    const data = [...Object.values(tuples1), ...Object.values(tuples2), ...Object.values(commonTuples)];\n    return [data, commonSchema];\n};\n\nconst getSymbol = type => symbol().type(symbolFns[type]);\n\nconst stackOrders = {\n    [STACK_CONFIG.ORDER_NONE]: stackOrderNone,\n    [STACK_CONFIG.ORDER_ASCENDING]: stackOrderAscending,\n    [STACK_CONFIG.ORDER_DESCENDING]: stackOrderDescending\n};\nconst stackOffsets = {\n    [STACK_CONFIG.OFFSET_DIVERGING]: stackOffsetDiverging,\n    [STACK_CONFIG.OFFSET_NONE]: stackOffsetNone,\n    [STACK_CONFIG.OFFSET_EXPAND]: stackOffsetExpand,\n    [STACK_CONFIG.OFFSET_WIGGLE]: stackOffsetWiggle\n};\n\n// eslint-disable-next-line require-jsdoc\nconst stack = params => d3Stack().keys(params.keys).offset(stackOffsets[params.offset])\n                .order(stackOrders[params.order])(params.data);\n\n/**\n * Groups the data into a hierarchical tree structure based on one or more fields.\n * @param { Object } params Configuration properties for nesting data\n * @param { Array.<Array> } params.data Data which needs to be grouped\n * @param { Array.<number> } params.keys Field indices by which the data will be grouped\n * @return { Array.<Object> } Grouped data array\n */\nconst nestCollection = (params) => {\n    const nestFn = nest();\n    params.keys.forEach(key => nestFn.key(d => d[key]));\n    return nestFn.entries(params.data);\n};\n\nconst pathInterpolators = {\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    stepAfter: curveStepAfter,\n    catmullRom: curveCatmullRom,\n    step: curveStep,\n    stepBefore: curveStepBefore,\n    linear: curveLinear\n};\n\nconst Symbols = {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom,\n    line,\n    area,\n    pie,\n    arc,\n    nest\n};\n\nconst Scales = {\n    band: scaleBand\n};\n\nconst getSmallestDiff = (points) => {\n    points = points.sort((a, b) => a - b);\n    let minDiff = points[1] - points[0];\n    for (let i = 2; i < points.length; i++) {\n        minDiff = Math.min(minDiff, points[i] - points[i - 1]);\n    }\n\n    return minDiff;\n};\n\nconst require = (lookupWhat, lookupDetails) => ({\n    resolvable: (store) => {\n        const lookupTarget = store[lookupWhat];\n        const depArr = lookupDetails.slice(0, lookupDetails.length - 1);\n        const fn = lookupDetails[lookupDetails.length - 1]; // fn\n\n        const deps = depArr.map(str => lookupTarget[str]);\n        return {\n            fn: fn(...deps),\n            depArr\n        };\n    }\n});\n\nexport {\n    require,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    stack,\n    nestCollection,\n    getSymbol,\n    transformColors,\n    detectColor,\n    hexToHsv,\n    hslToRgb,\n    rgbToHsv,\n    hsvToRgb,\n    concatModels,\n    toArray,\n    angleToRadian,\n    escapeHTML,\n    generateGetterSetters,\n    getArraySum,\n    interpolator,\n    piecewiseInterpolator,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    colorInterpolator,\n    numberInterpolator,\n    ERROR_MSG,\n    reqAnimFrame,\n    filterPropagationModel,\n    transposeArray,\n    cancelAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    symbolFns,\n    easeFns,\n    clone,\n    isEqual,\n    interpolateArray,\n    getMinPoint,\n    defaultValue,\n    getMaxPoint,\n    getClosestIndexOf,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    Store,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    transactor,\n    enableChainedTransaction,\n    isHTMLElem,\n    isSimpleObject,\n    nextFrame,\n    registerListeners,\n    replaceCSSPrefix,\n    getObjProp,\n    extendsClass,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    hslInterpolator,\n    getSmallestDiff\n};\n","export function linear(t) {\n  return +t;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","export const ORDER_ASCENDING = 'ascending';\nexport const ORDER_DESCENDING = 'descending';\nexport const ORDER_NONE = 'none';\nexport const OFFSET_DIVERGING = 'diverging';\nexport const OFFSET_NONE = 'none';\nexport const OFFSET_EXPAND = 'expand';\nexport const OFFSET_WIGGLE = 'wiggle';\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import {Transition} from \"./transition/index\";\nimport {SCHEDULED} from \"./transition/schedule\";\n\nvar root = [null];\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root, name, +i);\n      }\n    }\n  }\n\n  return null;\n}\n","import { select, event as d3event, selection, clientPoint } from 'd3-selection';\nimport { drag as d3drag } from 'd3-drag';\nimport 'd3-transition';\nimport { mergeRecursive } from './common-utils';\n/**\n * This function takes a raw DOM element or\n * a string and returns a d3 selection of that element.\n *\n * @param {HTMLElement | string} element The element to wrap in d3 selection.\n * @return {Selection} Instance of d3 selection.\n */\nconst selectElement = element => select(element);\n\n/**\n * It creates a new d3 element on the parent element\n * @param  {Selection} parent Element to which the element is to be appended\n * @param  {Object} elemType Type of the new element\n * @param  {Array} data Data for the new element\n * @param  {Object} selector classname/id/tagname for the element\n * @return {HTMLElement} Newly Created Element\n */\nconst makeElement = (parent, elemType, data, selector, callbacks = {}, keyFn) => {\n    if ((parent instanceof HTMLElement || parent instanceof SVGElement)) {\n        parent = selectElement(parent);\n    }\n\n    const selectorVal = selector ? selector[0] : null;\n    let selectorType = null;\n    let actualSelector = null;\n    let element = null;\n    let enterSel = null;\n    let mergeSel = null;\n    let filter;\n    if (selectorVal) {\n        if (selectorVal === '#') {\n            selectorType = 'id';\n            actualSelector = selector;\n        } else {\n            selectorType = 'class';\n            actualSelector = selector[0] === '.' ? selector : `.${selector}`;\n        }\n    } else {\n        actualSelector = elemType;\n        filter = true;\n    }\n    element = parent.selectAll(actualSelector);\n\n    filter && (element = element.filter(function () {\n        return this.parentNode === parent.node();\n    }));\n    element = element.data(data, keyFn);\n\n    enterSel = element.enter()\n                            .append(elemType || 'div');\n    callbacks.enter && enterSel.each(function (...params) {\n        callbacks.enter(selectElement(this), ...params);\n    });\n\n    mergeSel = enterSel.merge(element);\n    callbacks.update && mergeSel.each(function (...params) {\n        callbacks.update(selectElement(this), ...params);\n    });\n    if (selectorType === 'class') {\n        mergeSel.classed(selectorVal === '.' ? selector.substring(1, selector.length) : selector, true);\n    } else if (selectorType === 'id') {\n        mergeSel.attr('id', selector.substring(1, selector.length));\n    }\n    const exitSel = element.exit();\n\n    if (callbacks.exit) {\n        exitSel.each(function (...params) {\n            callbacks.exit(selectElement(this), ...params);\n        });\n    } else {\n        exitSel.remove();\n    }\n    return mergeSel;\n};\n\n/**\n * This function applies styles to an element\n *  @param  {Object} elem Element Selection\n * @param  {Object} styleObj Style Object to be applied\n * @return {Element} Newly Created Element\n*/\nconst applyStyle = (elem, styleObj) => {\n    Object.entries(styleObj).forEach((d) => {\n        elem.style(d[0], d[1]);\n    }, this);\n    return elem;\n};\n\n/**\n * This function appends a dom element in another element.\n * @param {HTMLElement | SVGElement} element1 The element in which to append the second element\n * @param {HTMLElement | SVGElement} element2 The element which will be appended.\n */\nconst appendElement = (element1, element2) => {\n    element1.appendChild(element2);\n};\n\n/**\n * Sets the attributes to the element.\n * @param {HTMLElement | SVGElement} element Element on which attributes will be applied\n * @param {Object} attrs Attributes which need to be applied\n */\nconst setElementAttrs = (element, attrs) => {\n    for (const key in attrs) {\n        if ({}.hasOwnProperty.call(attrs, key)) {\n            element.attr(key, attrs[key]);\n        }\n    }\n};\n\n/**\n * Sets attributes in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which attrs will be applied\n * @param {Array.<Object>} attrs Array of attributes\n * @param {string} className className of elements to select.\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setAttrs = (element, attrs, className) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    className !== undefined ? element.selectAll(`.${className}`).each(function () {\n        setElementAttrs(select(this), attrs);\n    }) : setElementAttrs(element, attrs);\n    return element;\n};\n\n/**\n * Adds a css class to elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst addClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, true) :\n                elem.classed(className, true);\n    });\n};\n\n/**\n * Removes the css class from elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst removeClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, false) :\n                elem.classed(className, false);\n    });\n};\n\n/**\n * Sets styles in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which styles will be applied\n * @param {Array.<Object>} styles Array of style attributes\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setStyles = (element, styles) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            element.style(key, styles[key]);\n        }\n    }\n    return element;\n};\n\n/**\n * Creates svg or html elements by binding data to the selection.Removes extra elements\n * on exit.\n * @param {Object} params Parameter object\n * @param {SVGElement | HTMLElement} params.container Container element where all elements will be appended\n * @param {string} params.selector Selector by which elements will be selected from dom\n * @param {string} params.append Append tag\n * @param {Function} params.each Function which will be executed for each data point and element.\n */\nconst createElements = (params) => {\n    const container = select(params.container);\n    let data;\n    let sel;\n\n    data = params.data;\n    if (typeof data === 'number') {\n        data = Array(data).fill().map((d, i) => i);\n    }\n    sel = container.selectAll(params.selector).data(data);\n\n    sel = container.selectAll(params.selector).filter(function () {\n        return this.parentNode === container.node();\n    }).data(params.data);\n\n    const selectionMerge = sel.enter().append(params.append).merge(sel).each(function (d, i) {\n        params.each(d, select(this), i);\n    });\n\n    selectionMerge.attr('class', params.className || '');\n    sel.exit().remove();\n};\n\n/**\n * Clips an element with given measurement. Basically it is used to hide overflowing portions\n * of any element.\n * @param {SVGElement} container svg element which needs to be clipped.\n * @param {Object} measurement Dimensions of the clipped rectangle.\n * @param {string} id Unique id of the clip element\n */\nconst clipElement = (container, measurement, id) => {\n    const clipPathElement = makeElement(select(container), 'clipPath', [1], `#${id}`);\n    const clipPathRect = makeElement(clipPathElement, 'rect', [1]);\n    clipPathRect.attr('x', measurement.x)\n                    .attr('y', measurement.x)\n                    .attr('width', measurement.width)\n                    .attr('height', measurement.height);\n    clipPathElement.attr('clip-path', `url(#${id})`);\n};\n\n/**\n * Returns the element of the corresponding classname.\n * @param {HTMLElement | SVGElement} node html or svg node element.\n * @param {string} className css class to be applied.\n * @return {HTMLElement | SVGElement} html or svg element.\n */\nconst getElementsByClassName = (node, className) => select(node).selectAll(className).nodes();\n\n/**\n * Gets the mouse position relative to an svg type of element\n * @param {SVGElement} element Any svg element like rect, circle, etc.\n * @param {Event} event Event object.\n * @return {Object} x and y position relative to the container element passed.\n */\nconst getMousePos = (element, event) => {\n    const boundingClientRect = element.getBoundingClientRect();\n    return {\n        x: event.x - boundingClientRect.x,\n        y: event.y - boundingClientRect.y\n    };\n};\n\nconst getClientPoint = (...params) => {\n    const pos = clientPoint(...params);\n    return {\n        x: pos[0],\n        y: pos[1]\n    };\n};\n\n/** This function appends a dom element in another element.\n * @param {Object} tag The tag name of the element to append\n * @param {Object} mount Mount point fo the element\n * @return {Object} selection of the appended element\n */\nconst createElement = (tag, mount) => select(mount).append(tag).node();\n\n/**\n * Gets the d3 event function\n * @return {Object} d3 event\n */\nconst getEvent = () => d3event;\n\n/**\n * Gets the d3 drag function\n * @return {Object} d3 drag\n */\nconst getD3Drag = () => d3drag;\n\nconst getSmartComputedStyle = (group, css) => {\n    let textEl;\n    const testText = 'W';\n    const mandatoryStyle = {\n        'fill-opacity': 0\n    };\n    const className = typeof css === 'string' ? css : (css instanceof Array ? css.join(' ') : undefined);\n\n    if (group.node() instanceof HTMLElement) {\n        textEl = group.append('div').html(testText);\n    } else {\n        textEl = group.append('text').text(testText);\n    }\n\n    if (className) {\n        textEl.attr('class', className);\n    } else if (typeof css === 'object') {\n        delete css['fill-opacity'];\n        mergeRecursive(mandatoryStyle, css);\n    }\n\n    textEl.style(mandatoryStyle);\n\n    const computedStyle = window.getComputedStyle(textEl.node());\n    const styleForSmartLabel = {\n        fontSize: computedStyle.fontSize,\n        fontFamily: computedStyle.fontFamily,\n        fontWeight: computedStyle.fontWeight,\n        fontStyle: computedStyle.fontStyle\n    };\n\n    textEl.remove();\n\n    return styleForSmartLabel;\n};\n\nconst hasTouch = () => 'ontouchstart' in document.documentElement;\n\nexport {\n    hasTouch,\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint\n};\n","/**\n * This class represents a selection applied on a data array.\n *\n * @class Selection\n */\nclass Selection {\n    /**\n     * Creates an instance of Selection.\n     * @param {Array<DataObject>} data Array of DataObjects.\n     * @memberof Selection\n     */\n    constructor () {\n        this._data = [];\n        // // map of id to data\n        this._idMap = {};\n\n        this._mode = '';\n        // data.forEach((item, idx) => {\n        //     const index = item.id || idx;\n        //     this._idMap[index] = item;\n        // });\n        // // array to store data in enter phase\n        this._enterdata = [];\n        // // array to store data in exit phase\n        this._exitdata = [];\n    }\n    /**\n     *  Gets the object bound to a class\n     *\n     * @return {Object} current data set bound to the class\n     * @memberof Selection\n     */\n    getObjects () {\n        return Object.keys(this._idMap).map(e => this._idMap[e]);\n    }\n\n    /**\n     * This method is used to supply seed data to a selection.\n     *\n     * @param {Array} newData Seed data to create the enter selection.\n     * @param {Functon | undefined } idGetter This function is used to uniqely identify a data entry.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    data (newData, idGetter) {\n        if (idGetter) {\n            this._data = [];\n            this._idGetter = idGetter;\n            const tempMap = {};\n\n            newData.forEach((...params) => {\n                const index = idGetter(...params);\n                tempMap[index] = params[0];\n            });\n            // check if any data items have been removed\n            const purgedIds = [];\n\n            Object.keys(this._idMap).forEach((id) => {\n                if (!tempMap[id]) {\n                    purgedIds.push(id);\n                }\n            });\n\n            Object.keys(tempMap).forEach((id) => {\n                if (!this._idMap[id]) {\n                    this._enterdata.push(tempMap[id]);\n                } else {\n                    this._idMap[id] = tempMap[id];\n                    this._data.push(tempMap[id]);\n                }\n            });\n            // move the purged items to exit selection\n            purgedIds.forEach((id) => {\n                const purged = this._idMap[id];\n                this._exitdata.push(purged);\n                // this._data = this._data.slice(id, 1);\n                delete this._idMap[id];\n            });\n            // this._data = this._data.slice(temp, this._data.length);\n\n            return this;\n        }\n        // no id getter supplied so use indices\n        if (newData.length > this._data.length) {\n            const startIdx = this._data.length;\n            for (let i = startIdx; i < newData.length; i += 1) {\n                this._enterdata.push(newData[i]);\n            }\n        } else {\n            // push to exit selection\n            const temp = newData.length;\n            for (let i = temp; i < this._data.length; i += 1) {\n                const purged = this._data[i];\n                delete this._idMap[purged.id];\n                this._exitdata.push(purged);\n            }\n            this._data = this._data.slice(temp, this._data.length);\n        }\n        return this;\n    }\n\n    /**\n     * Applies the supplied callback to each data element\n     * and returns a new selection.\n     *\n     * @param {Function} callback Callback to execute on each item.\n     * @return {Selection} New selection with data created using callback.\n     * @memberof EnterSelection\n     */\n    append (callback) {\n        this[`_${this._mode}data`].forEach((...params) => {\n            const data = params[0];\n            const id = this._idGetter ? this._idGetter(...params) : (data.id || params[1]);\n            this._idMap[id] = callback(...params);\n        });\n        this._mode = '';\n        return this;\n    }\n\n    /**\n     * This method returns an enter selection that\n     * allows or update operations.\n     *\n     * @return {EnterSelection} Instance of enter selection.\n     * @memberof Selection\n     */\n    enter () {\n        this._mode = 'enter';\n        return this;\n        // return new EnterSelection(this._enterdata, this._idMap, this._idGetter);\n    }\n\n    /**\n     * This method is used to set key value pairs\n     * on data objects.\n     *\n     * @param {string} key Name of property.\n     * @param {any} value Value of property.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    attr (key, value) {\n        this._data.forEach(item => item.attr(key, value));\n        return this;\n    }\n\n    /**\n     * This method merges the data of one selection with another.\n     *\n     * @param {Selection} selection Instance of selection.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    merge (selection) {\n        selection._data.forEach((...params) => {\n            const id = this._idGetter ? this._idGetter(...params) : (params[0].id || params[1]);\n            this._idMap[id] = params[0];\n            this._data.push(params[0]);\n        });\n        // reset enter selection\n        this._enterdata = [];\n        return this;\n    }\n\n    /**\n     * Returns a selection with exit data.\n     *\n     * @return {Selection} Instance of selection.\n     * @memberof Selection\n     */\n    exit () {\n        this._mode = 'exit';\n        // const exitdata = this._exitdata;\n        // const exitSelection = new Selection(exitdata);\n        // this._exitdata = [];\n        return this;\n    }\n\n    each (fn) {\n        Object.keys(this._idMap).forEach((e) => {\n            fn(this._idMap[e]);\n        });\n        return this;\n    }\n\n    map (fn) {\n        Object.keys(this._idMap).forEach((...params) => {\n            this._idMap[params[0]] = fn(this._idMap[params[0]], ...params);\n        });\n        return this;\n    }\n\n    /**\n     * Executes the cleanup operation associated with data objets.\n     *\n     * @memberof Selection\n     */\n    remove () {\n        // do cleanup on DDO's\n        const data = this[`_${this._mode}data`];\n\n        data.forEach(item => item.remove());\n        if (this._mode === '') {\n            this.each(e => e.remove());\n        }\n        this[`_${this._mode}data`] = [];\n        this._mode = '';\n    }\n}\n\nexport default Selection;\n","import { getUniqueId } from '../index';\n/**\n * Represents the base class that all objects that form\n * the data for a selection must inherit from.\n *\n * @class DataObject\n */\nclass DataObject {\n/**\n * Creates an instance of DataObject.\n * @memberof DataObject\n */\n    constructor () {\n        this._id = getUniqueId();\n    }\n    /**\n     * Returns the id.\n     *\n     * @readonly\n     * @memberof DataObject\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Sets the value corresponding to supplied key.\n     *\n     * @param {string} key The property name.\n     * @param {any} value Value associated with prop.\n     * @memberof DataObject\n     */\n    attr (key, value) {\n        this[key] = value;\n    }\n\n    /**\n     * Clean up code to be executed by each object.\n     *\n     * @override\n     * @memberof DataObject\n     */\n    remove () {\n        // cleanup\n    }\n}\n\nexport default DataObject;\n","const events = [\n    'initialized',\n    'beforeupdate',\n    'updated',\n    'beforedraw',\n    'drawn',\n    'beforeremove',\n    'removed'\n];\n\nconst compositions = [\n    'canvas',\n    'unit',\n    'layer',\n    'axis',\n    'facet-headers',\n    'legend',\n    'caption'\n];\n\nconst EVENT_LIST = [];\n\ncompositions.forEach((composition) => {\n    events.forEach((event) => {\n        EVENT_LIST.push(`${composition}.${event}`);\n    });\n});\n\nexport default EVENT_LIST;\n","import EVENT_LIST from './event-list';\n\n/**\n * At first call it accepts one function\n * calling it second time accepts notification object.\n * notification object then called with first accepted function\n *\n * @param {Function} resolveFn a promise's resolve function\n * @return {Function} a function to accept notification object\n */\nconst resolver = resolveFn => notification => resolveFn(notification);\n\n/**\n * Checks if the property string is present in the source object\n *\n * @param {Object} source source object whom you want to check the property\n * @param {string} property key name that need to be checked\n * @return {boolean} returns true if the property found in the source object\n */\nconst hasOwn = (source, property) => Object.prototype.hasOwnProperty.call(source, property);\n\n/**\n * LifeCycleManager which goes as a dependendecy to a muze\n * it accepts notification from the entire library throughout\n * the exeecution life\n *\n * @export\n * @class LifeCycleManager\n */\nexport default class LifeCycleManager {\n\n    /**\n     * Creates an instance of LifeCycleManager.\n     * @memberof LifeCycleManager\n     */\n    constructor () {\n        this._eventList = EVENT_LIST;\n        this._promises = new Map();\n        this._notifiers = {};\n        this._lifeCycles = {};\n        this._unreleasedLifeCycles = {};\n        this._boot();\n    }\n\n    /**\n     * Fills all the notifiers with resolver callback\n     *\n     * @memberof LifeCycleManager\n     */\n    _boot () {\n        this._notifiers = this._eventList.reduce((acc, name) => {\n            acc[name] = resolver;\n            return acc;\n        }, {});\n        this._preparePromises();\n    }\n\n    /**\n     * Public method which gives the promise corresponding\n     * to the event name\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    retrieve (eventName) {\n        return this._promises.get(eventName);\n    }\n\n    /**\n     * Creates a promise that will be passed to user's callback\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} a pending promise waiting for resolve to be called\n     * @memberof LifeCycleManager\n     */\n    _makeNotifierPromise (eventName) {\n        return new Promise((resolve) => {\n            this._notifiers[eventName] = this._notifiers[eventName](resolve);\n        });\n    }\n\n    /**\n     * Prepares the promise map with pending promises\n     * all the promises are in a pending state where their's\n     * resolve function waiting to be called with notification object\n     * @memberof LifeCycleManager\n     */\n    _preparePromises () {\n        this._eventList.forEach((eventName) => {\n            this._promises.set(eventName, this._makeNotifierPromise(eventName));\n        });\n    }\n\n    /**\n     * Resolves the promise with notification object\n     *\n     * @param {string} eventName name of the event in the system\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     *\n     * @memberof LifeCycleManager\n     */\n    _resolvePromise (eventName, notification) {\n        this._notifiers[eventName](notification);\n    }\n\n    /**\n     * Public method which is being called by different\n     * subcompoents of the system at different execution atages\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    notify (notification) {\n        // get the composition name from notification\n        // or from static formalName() method\n        const composition = notification.formalName || notification.client.constructor.formalName();\n        notification.formalName = composition;\n        this._releasePromisesFromCache();\n        this._notify(composition, notification);\n    }\n\n    /**\n     * Notify user the with promsie in a callback\n     * if callback not found then cache it\n     *\n     * @param {string} composition\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    _notify (composition, notification) {\n        const stage = notification.action;\n        const eventName = `${composition}.${stage}`;\n\n        // resolves promise with the notification object\n        this._resolvePromise(eventName, notification);\n\n        // get the promise from the promise map\n        const promise = this.retrieve(eventName);\n\n        if (this._lifeCycles[composition]) {\n            if (this._lifeCycles[composition][stage]) {\n                // if user given call back exists, then call with promise\n                this._callLifeCycleCallback(composition, stage, promise);\n            } else {\n                // otherwise cache the promise\n                this._cachePromise(composition, stage, promise);\n            }\n        } else {\n            this._cachePromise(composition, stage, promise);\n        }\n    }\n\n    /**\n     * Calls the user's callback with callback\n     *\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _callLifeCycleCallback (composition, stage, promise) {\n        const eventName = `${composition}.${stage}`;\n        this._lifeCycles[composition][stage](promise);\n        this._resetTargetPromise(eventName);\n    }\n\n    /**\n     * Try to clear the cached promsies once we have\n     * macthed callbacks from the user\n     *\n     * @memberof LifeCycleManager\n     */\n    _releasePromisesFromCache () {\n        const compositions = Object.keys(this._unreleasedLifeCycles);\n        compositions.forEach((composition) => {\n            const stages = Object.keys(this._unreleasedLifeCycles[composition]);\n            stages.forEach((stage) => {\n                if (this._lifeCycles[composition]) {\n                    if (this._lifeCycles[composition][stage]) {\n                        // take the promise from unreleased lifeCycles\n                        const promise = this._unreleasedLifeCycles[composition][stage];\n                        // call the user given callback with that promise\n                        this._callLifeCycleCallback(composition, stage, promise);\n                        // delete promise from unreleased lifeCycles\n                        delete this._unreleasedLifeCycles[composition][stage];\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Cache the promise in the map. This cache\n     * then get consumed if we get user callbacks\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _cachePromise (composition, stage, promise) {\n        if (!hasOwn(this._unreleasedLifeCycles, composition)) {\n            this._unreleasedLifeCycles[composition] = {};\n        }\n\n        if (!hasOwn(this._unreleasedLifeCycles[composition], stage)) {\n            this._unreleasedLifeCycles[composition][stage] = {};\n        }\n        this._unreleasedLifeCycles[composition][stage] = promise;\n    }\n\n    /**\n     * It register's the callbacks gievn the user\n     *\n     * @param {Object} [lifeCycles={}] a object with list of callbacks\n     * @memberof LifeCycleManager\n     */\n    register (lifeCycles = {}) {\n        this._lifeCycles = lifeCycles;\n        // as we get all the callbacks, try to call them\n        // from unreleased promise map\n        this._releasePromisesFromCache();\n    }\n\n    /**\n     * Reset the promise into pending state\n     *\n     * @param {string} eventName name of the event happening\n     * @memberof LifeCycleManager\n     */\n    _resetTargetPromise (eventName) {\n        setTimeout(() => {\n            this._notifiers[eventName] = resolver;\n            this._promises.set(eventName, this._makeNotifierPromise(eventName));\n        }, 0);\n    }\n}\n","import LifeCycleManager from './lifecycle-manager';\n\nexport default LifeCycleManager;\n","const SELECTION_NEW_ENTRY = 1;\nconst SELECTION_NEW_EXIT = -1;\nconst SELECTION_NULL = 0;\nconst SELECTION_OLD_ENTRY = 2;\nconst SELECTION_OLD_EXIT = -2;\n\nexport {\n    SELECTION_NEW_ENTRY,\n    SELECTION_NEW_EXIT,\n    SELECTION_NULL,\n    SELECTION_OLD_ENTRY,\n    SELECTION_OLD_EXIT\n};\n","import {\n    SELECTION_NEW_ENTRY, SELECTION_NEW_EXIT, SELECTION_NULL, SELECTION_OLD_ENTRY, SELECTION_OLD_EXIT\n} from '../enums/selection';\n/* eslint-disable guard-for-in */\n\n/**\n * This component is used to keep track of the row tuples of the data which gets added and removed.\n * @class SelectionSet\n */\nclass SelectionSet {\n    /**\n     * Creates an instance of selection set\n     * @param {Array.<string>} completeSet Set of unique ids.\n     */\n    constructor (completeSet, _volatile) {\n        this.completeSet = completeSet;\n        this._set = completeSet.reduce((obj, key) => {\n            obj[key] = SELECTION_NULL;\n            return obj;\n        }, {});\n        this._volatile = _volatile;\n        this._completeSetCount = completeSet.length;\n        this._lockedSelection = {};\n        this._resetted = true;\n    }\n\n    /**\n     * Adds a set of ids to the selection set.\n     * @param {Array.<number|string>} ids Array of unique ids\n     * @return {SelectionSet} Instance of selection set.\n     */\n    add (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_ENTRY;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_ENTRY && set[key] !== SELECTION_OLD_ENTRY) {\n                set[key] = set[key] < 0 ? SELECTION_OLD_EXIT : SELECTION_NEW_EXIT;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Adds a set of ids to the selection set.\n     * @param {Array.<number|string>} ids Array of unique ids\n     * @return {SelectionSet} Instance of selection set.\n     */\n    update (ids) {\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_OLD_ENTRY;\n        });\n\n        return this;\n    }\n\n    /**\n     * Adds a set of ids to the selection set.\n     * @param {Array.<number|string>} ids Array of unique ids\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateEntry () {\n        const set = this._set;\n\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_ENTRY ? SELECTION_OLD_ENTRY : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Adds a set of ids to the selection set.\n     * @param {Array.<number|string>} ids Array of unique ids\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateExit () {\n        const set = this._set;\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_EXIT ? SELECTION_OLD_EXIT : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Removes the ids from the selection set.\n     * @param {Array.<string>} ids Array of unique ids\n     * @return {SelectionSet}  Instance of selection set\n     */\n    remove (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_EXIT;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_EXIT && set[key] !== SELECTION_OLD_EXIT) {\n                set[key] = set[key] === 0 ? SELECTION_NEW_ENTRY : SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n\n    getSets () {\n        const set = this._set;\n        const retObj = {\n            entrySet: [[], []],\n            exitSet: [[], []],\n            completeSet: []\n        };\n\n        for (const key in set) {\n            if (set[key] > 0) {\n                set[key] === SELECTION_OLD_ENTRY && retObj.entrySet[0].push(key);\n                set[key] === SELECTION_NEW_ENTRY && retObj.entrySet[1].push(key);\n            } else if (set[key] < 0) {\n                set[key] === SELECTION_OLD_EXIT && retObj.exitSet[0].push(key);\n                set[key] === SELECTION_NEW_EXIT && retObj.exitSet[1].push(key);\n            }\n            retObj.completeSet.push(key);\n        }\n\n        ['entrySet', 'exitSet'].forEach((type) => {\n            retObj[type] = retObj[type].map(e => e.map(Number));\n        });\n        retObj.completeSet = retObj.completeSet.map(Number);\n\n        return retObj;\n    }\n\n    /**\n     * Resets the selection set to initial state. It sets the value of every unique id value to\n     * null in the selection set.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    reset (ids) {\n        const set = this._set;\n        if (ids) {\n            ids.forEach((i) => {\n                set[i] = SELECTION_NULL;\n            });\n        } else {\n            const lockedSel = this._lockedSelection;\n            for (const key in set) {\n                if (!(key in lockedSel)) {\n                    set[key] = SELECTION_NULL;\n                }\n            }\n        }\n        this._resetted = true;\n        return this;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getEntrySet () {\n        const set = this._set;\n        const addSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_ENTRY && addSet.push(key);\n        }\n\n        return addSet;\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in entry set\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old entry set or new entry set\n     */\n    getExistingEntrySet (addSet) {\n        const set = this._set;\n        return addSet.filter(d => set[d] === SELECTION_NEW_ENTRY || set[d] === SELECTION_OLD_ENTRY);\n    }\n\n    getExistingExitSet (removeSet) {\n        const set = this._set;\n        return removeSet.filter(d => set[d] === SELECTION_NEW_EXIT || set[d] === SELECTION_OLD_EXIT);\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldEntry () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_ENTRY && updateSet.push(key);\n        }\n        return updateSet;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldExit () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_EXIT && updateSet.push(key);\n        }\n\n        return updateSet;\n    }\n\n    /**\n     * Gets the set of ids which are in the remove set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getExitSet () {\n        const set = this._set;\n        const removeSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_EXIT && removeSet.push(key);\n        }\n        return removeSet;\n    }\n\n    getCompleteSet () {\n        const set = this._set;\n        const completeSet = [];\n\n        for (const key in set) {\n            completeSet.push(key);\n        }\n\n        return completeSet;\n    }\n\n    getCompleteSetCount () {\n        return this._completeSetCount;\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Swaps the add set and remove set in the selection set.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    toggle () {\n        const set = this._set;\n\n        for (const key in set) {\n            if (set[key] === SELECTION_NEW_ENTRY) {\n                set[key] = SELECTION_NEW_EXIT;\n            } else if (set[key] === SELECTION_NEW_EXIT) {\n                set[key] = SELECTION_NEW_ENTRY;\n            } else if (set[key] === SELECTION_OLD_ENTRY) {\n                set[key] = SELECTION_OLD_EXIT;\n            } else {\n                set[key] = SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n}\n\nexport default SelectionSet;\n","import { clone } from 'muze-utils';\nimport * as SELECTION from '../enums/selection';\n\nexport const initializeSideEffects = (context, sideEffects) => {\n    const sideEffectsMap = context._sideEffects;\n\n    sideEffects = sideEffects instanceof Array ? sideEffects : Object.values(sideEffects);\n    sideEffects.forEach((SideEffect) => {\n        const sideEffectInstance = sideEffectsMap[SideEffect.formalName()];\n        sideEffectsMap[SideEffect.formalName()] = sideEffectInstance || new SideEffect(context);\n    });\n    return sideEffectsMap;\n};\n\nexport const initializeBehaviouralActions = (context, actions) => {\n    const dispatchableBehaviours = {};\n\n    actions = actions instanceof Array ? actions : Object.values(actions);\n    actions.forEach((Action) => {\n        dispatchableBehaviours[Action.formalName()] = new Action(context);\n    });\n    return dispatchableBehaviours;\n};\n\nexport const initializePhysicalActions = (context, actions) => {\n    const physicalActions = {};\n\n    for (const name in actions) {\n        if (!({}).hasOwnProperty.call(name, actions)) {\n            physicalActions[name] = actions[name](context);\n        }\n    }\n    return physicalActions;\n};\n\nexport const changeSideEffectAvailability = (context, fn, toEnable) => {\n    const sideEffects = context.sideEffects();\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            let change = true;\n            if (fn && fn(key) === false) {\n                change = false;\n            }\n            if (change) {\n                toEnable ? sideEffects[key].enable() : sideEffects[key].disable();\n            }\n        }\n    }\n};\n\nexport const getMergedSet = set => [...new Set([...set[0], ...set[1]])];\n\nexport const getSourceFields = (propagationInf, criteria = {}) => {\n    const sourceIdentifiers = propagationInf.sourceIdentifiers;\n    let sourceFields;\n    if (sourceIdentifiers) {\n        sourceFields = sourceIdentifiers.getSchema().map(d => d.name);\n    } else if (criteria instanceof Array) {\n        sourceFields = criteria[0];\n    } else {\n        sourceFields = Object.keys(criteria || {});\n    }\n    return sourceFields;\n};\n\nconst conditionsMap = {\n    newEntry: [SELECTION.SELECTION_NEW_ENTRY],\n    oldEntry: [SELECTION.SELECTION_OLD_ENTRY],\n    mergedEnter: [SELECTION.SELECTION_NEW_ENTRY, SELECTION.SELECTION_OLD_ENTRY],\n    newExit: [SELECTION.SELECTION_NEW_EXIT],\n    oldExit: [SELECTION.SELECTION_OLD_EXIT],\n    mergedExit: [SELECTION.SELECTION_NEW_EXIT, SELECTION.SELECTION_OLD_EXIT],\n    complete: []\n};\n\nexport const getModelFromSet = (type, model, set) => {\n    if (model) {\n        return model.select((fields, i) =>\n           (conditionsMap[type].some(condition => set[i] === condition)), {\n               saveChild: false\n           });\n    }\n    return null;\n};\n\nexport const getSetInfo = (type, set, config) => {\n    let model = null;\n    const filteredDataModel = config.filteredDataModel;\n    const selectionSet = config.selectionSet;\n    if (!config.propagationData) {\n        if (selectionSet.resetted()) {\n            model = null;\n        } else {\n            model = getModelFromSet(type, config.dataModel, config.selectionSet._set);\n        }\n    } else if (filteredDataModel) {\n        model = type === 'mergedEnter' ? filteredDataModel[0] : filteredDataModel[1];\n    }\n    return {\n        uids: set,\n        length: set.length,\n        model\n    };\n};\n\nexport const getSideEffects = (behaviour, behaviourEffectMap) => {\n    const sideEffects = [];\n    for (const key in behaviourEffectMap) {\n        const behaviours = key.split(',');\n        const found = behaviours.some(d => d === behaviour);\n        if (found) {\n            sideEffects.push({\n                effects: behaviourEffectMap[key],\n                behaviours\n            });\n        }\n    }\n    return sideEffects;\n};\n\nexport const unionSets = (context, behaviours) => {\n    let combinedSet = {};\n    const models = {\n        mergedEnter: null,\n        mergedExit: null\n    };\n    behaviours.forEach((behaviour) => {\n        const entryExitSet = context._entryExitSet[behaviour];\n        if (entryExitSet) {\n            combinedSet = Object.assign(combinedSet, clone(entryExitSet));\n            ['mergedEnter', 'mergedExit'].forEach((type) => {\n                const model = entryExitSet[type].model;\n                let existingModel = models[type];\n                if (!existingModel) {\n                    existingModel = models[type] = model;\n                } else {\n                    existingModel = models[type] = model.union(existingModel);\n                }\n                combinedSet[type].model = existingModel;\n            });\n        }\n    });\n    return combinedSet;\n};\n","import {\n    mergeRecursive,\n    hasTouch,\n    filterPropagationModel,\n    FieldType,\n    selectElement\n} from 'muze-utils';\nimport SelectionSet from './selection-set';\nimport {\n    initializeBehaviouralActions,\n    initializeSideEffects,\n    changeSideEffectAvailability,\n    initializePhysicalActions,\n    unionSets,\n    getSideEffects\n} from './helper';\n\n/**\n * Relient firebolt is responsible for dispatching behaviours. It has only behaviours which can be\n * dispatched without any physical action being triggered.\n */\nexport default class Firebolt {\n    constructor (context, actions, sideEffects, behaviourEffectMap) {\n        this.context = context;\n        this._sideEffectDefinitions = {};\n        this._sideEffects = {};\n        this._propagationInf = {};\n        this._actions = {\n            behavioural: {},\n            physical: {}\n        };\n        this._selectionSet = {};\n        this._volatileSelectionSet = {};\n        this._propagationFields = {};\n        this._sourceSideEffects = {\n            tooltip: true,\n            selectionBox: true\n        };\n        this._actionBehaviourMap = {};\n        this._config = {};\n        this._behaviourEffectMap = {};\n        this._entryExitSet = {};\n        this._actionHistory = {};\n        this._queuedSideEffects = [];\n\n        this.mapSideEffects(behaviourEffectMap);\n        this.registerBehaviouralActions(actions.behavioural);\n        this.registerSideEffects(sideEffects);\n        this.registerPhysicalBehaviouralMap(actions.physicalBehaviouralMap);\n        this.registerPhysicalActions(actions.physical);\n    }\n\n    config (...config) {\n        if (config.length) {\n            const conf = this._config = mergeRecursive(this._config, config[0]);\n            const sideEffects = this.sideEffects();\n            for (const key in sideEffects) {\n                if ({}.hasOwnProperty.call(sideEffects, key)) {\n                    const sideEffectConf = conf[key];\n                    sideEffectConf && sideEffects[key].config(sideEffectConf);\n                }\n            }\n            return this;\n        }\n        return this._config;\n    }\n\n    mapSideEffects (behEffectMap) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        for (const key in behEffectMap) {\n            if ({}.hasOwnProperty.call(behEffectMap, key)) {\n                const sideEffects = behEffectMap[key] || [];\n                !behaviourEffectMap[key] && (behaviourEffectMap[key] = []);\n                this._behaviourEffectMap[key] = [...new Set([...behaviourEffectMap[key], ...sideEffects])];\n            }\n        }\n        return this;\n    }\n\n    registerBehaviouralActions (actions) {\n        const behaviours = initializeBehaviouralActions(this, actions);\n        this.prepareSelectionSets(behaviours);\n        Object.assign(this._actions.behavioural, behaviours);\n        return this;\n    }\n\n    prepareSelectionSets () {\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        return this;\n    }\n\n    applySideEffects (sideEffects, selectionSet, payload) {\n        const sideEffectStore = this.sideEffects();\n        const actionHistory = this._actionHistory;\n        const queuedSideEffects = [];\n        sideEffects.forEach((sideEffect) => {\n            let options;\n            let name;\n            const effects = sideEffect.effects;\n            const behaviours = sideEffect.behaviours;\n            const combinedSet = unionSets(this, behaviours, selectionSet);\n            effects.forEach((effect) => {\n                if (typeof effect === 'object') {\n                    name = effect.name;\n                    options = effect.options;\n                } else {\n                    name = effect;\n                }\n\n                const sideEffectInstance = sideEffectStore[name];\n                if (sideEffectInstance.isEnabled()) {\n                    if (!sideEffectInstance.constructor.mutates() &&\n                        Object.values(actionHistory).some(d => d.isMutableAction)) {\n                        queuedSideEffects.push({\n                            name,\n                            params: [combinedSet, payload, options]\n                        });\n                    } else {\n                        this.dispatchSideEffect(name, combinedSet, payload, options);\n                    }\n                }\n            });\n        });\n        this._queuedSideEffects.push(...queuedSideEffects);\n        return this;\n    }\n\n    dispatchSideEffect (name, selectionSet, payload, options = {}) {\n        const sideEffectStore = this.sideEffects();\n        const sideEffect = sideEffectStore[name];\n        let disable = false;\n        if (options.filter && options.filter(sideEffect)) {\n            disable = true;\n        }\n        !disable && sideEffectStore[name].apply(selectionSet, payload, options);\n    }\n\n    dispatchBehaviour (behaviour, payload, propagationInfo = {}) {\n        const propagate = propagationInfo.propagate !== undefined ? propagationInfo.propagate : true;\n        const behaviouralActions = this._actions.behavioural;\n        const action = behaviouralActions[behaviour];\n        const behaviourEffectMap = this._behaviourEffectMap;\n        const sideEffects = getSideEffects(behaviour, behaviourEffectMap);\n        this._propagationInf = propagationInfo;\n        if (action && action.isEnabled()) {\n            const selectionSet = action.dispatch(payload);\n            const propagationSelectionSet = this.getPropagationSelectionSet(selectionSet);\n            this._entryExitSet[behaviour] = propagationSelectionSet;\n            const shouldApplySideEffects = this.shouldApplySideEffects(propagate);\n\n            if (propagate) {\n                this.propagate(behaviour, payload, selectionSet.find(d => d.sourceSelectionSet), sideEffects);\n            }\n            if (shouldApplySideEffects) {\n                const applicableSideEffects = this.getApplicableSideEffects(sideEffects, payload, propagationInfo);\n                this.applySideEffects(applicableSideEffects, propagationSelectionSet, payload);\n            }\n        }\n\n        return this;\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet.find(d => !d.sourceSelectionSet);\n    }\n\n    shouldApplySideEffects () {\n        return true;\n    }\n\n    propagate () {\n        return this;\n    }\n\n    sideEffects (...sideEffects) {\n        if (sideEffects.length) {\n            this._sideEffects = sideEffects[0];\n            return this;\n        }\n        return this._sideEffects;\n    }\n\n    enableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, true);\n        return this;\n    }\n\n    disableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, false);\n        return this;\n    }\n\n    dissociateBehaviour (behaviour, physicalAction) {\n        const actionBehaviourMap = this._actionBehaviourMap;\n        for (const key in actionBehaviourMap) {\n            if (key === physicalAction) {\n                const behaviourMap = actionBehaviourMap[key];\n                behaviourMap.behaviours = behaviourMap.behaviours.filter(d => d !== behaviour);\n            }\n        }\n\n        return this;\n    }\n\n    dissociateSideEffect (sideEffect, behaviour) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        behaviourEffectMap[behaviour] = behaviourEffectMap[behaviour].filter(d => (d.name || d) !== sideEffect);\n        return this;\n    }\n\n    getApplicableSideEffects (sideEffects) {\n        return sideEffects;\n    }\n\n    attachPropagationListener (dataModel) {\n        dataModel.unsubscribe('propagation');\n        dataModel.on('propagation', this.onDataModelPropagation());\n        return this;\n    }\n\n    onDataModelPropagation () {\n        return (propValue) => {\n            const payload = propValue.payload;\n            const action = payload.action;\n\n            this.dispatchBehaviour(action, payload, {\n                propagate: false\n            });\n        };\n    }\n\n    createSelectionSet (uniqueIds, behaviouralActions) {\n        const behaviours = behaviouralActions || this._actions.behavioural;\n        const selectionSet = this._selectionSet;\n        const volatileSelectionSet = this._volatileSelectionSet;\n\n        for (const key in behaviours) {\n            if ({}.hasOwnProperty.call(behaviours, key)) {\n                selectionSet[key] = new SelectionSet(uniqueIds);\n                volatileSelectionSet[key] = new SelectionSet(uniqueIds, true);\n            }\n        }\n        this._volatileSelectionSet = volatileSelectionSet;\n        this.selectionSet(selectionSet);\n        return this;\n    }\n\n    selectionSet (...selectionSet) {\n        if (selectionSet.length) {\n            this._selectionSet = selectionSet[0];\n            return this;\n        }\n        return this._selectionSet;\n    }\n\n    initializeSideEffects () {\n        const sideEffectDefinitions = this._sideEffectDefinitions;\n        this.sideEffects(initializeSideEffects(this, sideEffectDefinitions));\n        return this;\n    }\n\n    registerPhysicalActions (actions) {\n        const initedActions = initializePhysicalActions(this, actions);\n        Object.assign(this._actions.physical, initedActions);\n        return this;\n    }\n\n    propagateWith (action, ...fields) {\n        if (fields.length) {\n            this._propagationFields[action] = fields;\n            return this;\n        }\n        return this._propagationFields;\n    }\n\n    /**\n     * Map actions and behaviours\n     * @return {Firebolt} Firebolt instance\n     */\n    mapActionsAndBehaviour () {\n        const initedPhysicalActions = this._actions.physical;\n        const map = this._actionBehaviourMap;\n\n        for (const action in map) {\n            if (!({}).hasOwnProperty.call(action, map)) {\n                let target;\n                const mapObj = map[action];\n                target = mapObj.target;\n                const touch = mapObj.touch;\n                if (!target) {\n                    target = this.context.getDefaultTargetContainer();\n                }\n                const bind = hasTouch() ? touch === true || touch === undefined : !touch;\n                bind && this.bindActionWithBehaviour(initedPhysicalActions[action], target, mapObj.behaviours);\n            }\n        }\n        return this;\n    }\n\n    registerPhysicalBehaviouralMap (map) {\n        Object.assign(this._actionBehaviourMap, map);\n        return this;\n    }\n\n    /**\n     * Binds a target element with an action.\n     * @param {Function} action Action method\n     * @param {string} target Class name of element\n     * @param {Array} behaviourList Array of behaviours\n     * @return {FireBolt} Instance of firebolt\n     */\n    bindActionWithBehaviour (action, targets, behaviourList) {\n        if (typeof (targets) === 'string') {\n            targets = [targets];\n        }\n        targets.forEach((target) => {\n            const mount = this.context.mount();\n            const nodes = target.node instanceof Function ? target : selectElement(mount).selectAll(target);\n            if (behaviourList.length && !nodes.empty()) {\n                if (nodes instanceof Array) {\n                    nodes.forEach((node) => {\n                        action(selectElement(node), behaviourList);\n                    });\n                } else {\n                    action(nodes, behaviourList);\n                }\n            }\n        });\n        return this;\n    }\n\n    getPropagationInf () {\n        return this._propagationInf;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.context;\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all');\n        const xFields = context.fields().x || [];\n        const yFields = context.fields().y || [];\n        const xMeasures = xFields.every(field => field.type() === FieldType.MEASURE);\n        const yMeasures = yFields.every(field => field.type() === FieldType.MEASURE);\n        return {\n            model: filteredDataModel,\n            uids: criteria === null ? null : (propagationInf.data ? filterPropagationModel(this.getFullData(),\n                propagationInf.data[0], xMeasures && yMeasures).getData().uids : filteredDataModel[0].getData().uids)\n        };\n    }\n\n    getSelectionSets (action) {\n        const sourceId = this.context.id();\n        const propagationInf = this._propagationInf || {};\n        const propagationSource = propagationInf.sourceId;\n        let applicableSelectionSets = [];\n        if (propagationSource !== sourceId) {\n            applicableSelectionSets = [this._volatileSelectionSet[action]];\n        }\n\n        if (propagationSource) {\n            applicableSelectionSets.push(this.selectionSet()[action]);\n        }\n        return applicableSelectionSets;\n    }\n\n    getFullData () {\n        return this.context.data();\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n}\n","import { getSetInfo, getMergedSet, getSourceFields } from '../../helper';\n\nexport default class GenericBehaviour {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n    }\n\n    dispatch (payload) {\n        const criteria = payload.criteria;\n        const firebolt = this.firebolt;\n        const formalName = this.constructor.formalName();\n        const selectionSets = firebolt.getSelectionSets(formalName);\n        const {\n            model: filteredDataModel,\n            uids\n        } = this.firebolt.getAddSetFromCriteria(criteria, this.firebolt.getPropagationInf());\n        const entryExitSets = selectionSets.map((selectionSet) => {\n            this.setSelectionSet(uids, selectionSet);\n            return this.getEntryExitSet(selectionSet, filteredDataModel, payload);\n        });\n\n        return entryExitSets;\n    }\n\n    setSelectionSet () {\n        return this;\n    }\n\n    getEntryExitSet (selectionSet, filteredDataModel, payload) {\n        const {\n            entrySet,\n            exitSet,\n            completeSet\n        } = selectionSet.getSets();\n        const propagationInf = this.firebolt.getPropagationInf();\n        const dataModel = this.firebolt.getFullData();\n        const setConfig = {\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            dataModel,\n            filteredDataModel,\n            propagationData: propagationInf.data,\n            selectionSet\n        };\n\n        return {\n            entrySet: [getSetInfo('oldEntry', entrySet[0], setConfig),\n                getSetInfo('newEntry', entrySet[1], setConfig)],\n            exitSet: [getSetInfo('oldEntry', exitSet[0], setConfig),\n                getSetInfo('newExit', exitSet[1], setConfig)],\n            mergedEnter: getSetInfo('mergedEnter', getMergedSet(entrySet), setConfig),\n            mergedExit: getSetInfo('mergedExit', getMergedSet(exitSet), setConfig),\n            completeSet: getSetInfo('complete', completeSet, setConfig),\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            fields: getSourceFields(propagationInf, payload.criteria),\n            sourceSelectionSet: selectionSet._volatile === true\n        };\n    }\n\n    static mutates () {\n        return false;\n    }\n\n    enable () {\n        this._enabled = true;\n    }\n\n    disable () {\n        this._enabled = false;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n}\n\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class VolatileBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n                // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                    || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            selectionSet.updateExit();\n            const { entrySet } = selectionSet.getSets();\n            selectionSet.reset(getMergedSet(entrySet));\n            selectionSet.add(addSet);\n            selectionSet.update(existingAddSet);\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n    }\n}\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n","import VolatileBehaviour from './volatile';\nimport { HIGHLIGHT } from '../../enums/behaviours';\n\nexport default class HighlightBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return HIGHLIGHT;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport * as BEHAVIOURNAMES from '../../enums/behaviours';\n\n/**\n * This is the behaviour for brushing a region on the chart. It accepts a payload\n * which contains the x and y range of the data and other configuration. It will then\n * create a selection box from the range and select the points which fall within the range.\n */\nexport default class BrushBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return BEHAVIOURNAMES.BRUSH;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport { FILTER } from '../../enums/behaviours';\n\nexport default class FilterBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return FILTER;\n    }\n\n    static mutates () {\n        return true;\n    }\n}\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class PersistentBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            const propagationInf = this.firebolt.getPropagationInf();\n            // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            if (propagationInf.propagate === false) {\n                selectionSet.updateExit();\n                const { entrySet } = selectionSet.getSets();\n                selectionSet.reset(getMergedSet(entrySet));\n                selectionSet.add(addSet);\n                selectionSet.update(existingAddSet);\n            } else {\n                // existing add set\n                if (existingAddSet.length) {\n                    selectionSet.updateExit();\n                    selectionSet.remove(existingAddSet);\n                } else {\n                    selectionSet.updateEntry();\n                    selectionSet.add(addSet);\n                }\n                const { exitSet } = selectionSet.getSets();\n                const mergedExitSet = getMergedSet(exitSet);\n                const completeSetCount = selectionSet.getCompleteSet().length;\n                if (exitSet[1].length !== completeSetCount && mergedExitSet.length === completeSetCount) {\n                    selectionSet.reset();\n                }\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n\n        return this;\n    }\n}\n","import PersistentBehaviour from './persistent';\nimport { SELECT } from '../../enums/behaviours';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return SELECT;\n    }\n}\n\n","import { DimensionSubtype, FieldType } from 'muze-utils';\n/**\n * Gets the drag action configuration\n * @param {VisualUnit} instance instance of visual unit\n * @param {Object} config x y positions\n * @return {Object} Payload of behaviour\n*/\n/* istanbul ignore next */ const getDragActionConfig = (sourceInfo, config, fieldsConfig) => {\n    if (!(sourceInfo.axes.x || sourceInfo.axes.y)) {\n        return {\n            criteria: null\n        };\n    }\n\n    const axes = sourceInfo.axes;\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const axisFields = sourceInfo.fields;\n    const xField = axisFields.x[0].getMembers()[0];\n    const yField = axisFields.y[0].getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype ? fieldsConfig[xField].def.subtype :\n        fieldsConfig[xField].def.type;\n    const yFieldType = fieldsConfig[yField].def.subtype ? fieldsConfig[yField].def.subtype :\n            fieldsConfig[yField].def.type;\n    const dimensions = {};\n    const stPos = config.startPos;\n    const endPos = config.endPos;\n\n    if (stPos.x === endPos.x && stPos.y === endPos.y) {\n        return {\n            criteria: null\n        };\n    }\n\n    const dragDim = xFieldType === FieldType.MEASURE ? (yFieldType === FieldType.MEASURE ? ['x', 'y'] : ['y']) : ['x'];\n    const criteria = {};\n    const isXDimension = xFieldType === DimensionSubtype.CATEGORICAL;\n    const isYDimension = yFieldType === DimensionSubtype.CATEGORICAL;\n    const xRange = xAxis.constructor.type() === 'band' ? xAxis.scale().invertExtent(stPos.x, endPos.x) :\n        xAxis.invert(stPos.x, endPos.x);\n    const yRange = yAxis.constructor.type() === 'band' ? yAxis.scale().invertExtent(stPos.y, endPos.y) :\n        yAxis.invert(stPos.y, endPos.y);\n    const selectedDomains = {\n        x: stPos.x === endPos.x ? [] : (isXDimension ? xRange : xRange.sort((a, b) => a - b)),\n        y: stPos.y === endPos.y ? [] : (isYDimension ? yRange : yRange.sort((a, b) => a - b))\n    };\n    const rangeObj = {};\n\n    if (dragDim.length === 2) {\n        rangeObj[xField] = selectedDomains.x;\n        rangeObj[yField] = selectedDomains.y;\n        if (xField === yField) {\n            const xdom = selectedDomains.x;\n            const ydom = selectedDomains.y;\n            const min = xdom[0] > ydom[0] ? ydom : xdom;\n            const max = min === ydom ? xdom : ydom;\n            if (min[1] < max[0]) {\n                rangeObj[xField] = [];\n            } else {\n                rangeObj[xField] = [max[0], min[1] < max[1] ? min[1] : max[1]];\n            }\n            dimensions.x = [stPos.x, endPos.x];\n            dimensions.y = [stPos.y, endPos.y];\n        }\n    } else {\n        criteria[dragDim[0]] = selectedDomains[dragDim[0]] || [];\n\n        if (dragDim[0] === 'x') {\n            rangeObj[xField] = criteria.x;\n            if (xFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.x = (config.snap && stPos.x !== endPos.x) ? xAxis.getNearestRange(stPos.x, endPos.x) :\n                    [stPos.x, endPos.x];\n            }\n        } else {\n            rangeObj[yField] = criteria.y;\n            if (yFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.y = (config.snap && stPos.y !== endPos.y) ? yAxis.getNearestRange(stPos.y, endPos.y) :\n                    [stPos.y, endPos.y];\n            }\n        }\n    }\n\n    return {\n        criteria: rangeObj,\n        dimensions\n    };\n};\n\nexport default getDragActionConfig;\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './drag-action-config';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const attachDragEvent = (targetEl, behaviours, firebolt, touch) => {\n    let startPos = {};\n    let endPos = {};\n    const d3Drag = getD3Drag();\n    const boundingBox = targetEl.node().getBoundingClientRect();\n    let touchStart;\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n        touchStart = new Date().getTime();\n    }).on('drag', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        if (touch && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos\n        }, firebolt.context.data().getFieldsConfig());\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }).on('end', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        const duration = new Date().getTime() - touchStart;\n\n        if (touch && duration > 100 && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos,\n            snap: true\n        }, firebolt.context.data().getFieldsConfig());\n        payload.dragEnd = true;\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }));\n};\n\n","import { getClientPoint, getEvent } from 'muze-utils';\nimport { CONSOLIDATED, FRAGMENTED } from '../../enums/constants';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} instance instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const context = firebolt.context;\n        const tooltipConf = context.config().interaction.tooltip;\n        const mode = tooltipConf.mode;\n        const pos = getClientPoint(context.getDrawingContext().svgContainer, event);\n        const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n            getAllPoints: mode === CONSOLIDATED || mode === FRAGMENTED,\n            data: args\n        });\n        const payload = {\n            criteria: nearestPoint ? nearestPoint.id : null,\n            showInPosition: nearestPoint.showInPosition,\n            target: nearestPoint.target,\n            position: pos,\n            mode\n        };\n\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                            criteria: null\n                        }));\n                    });\n};\n\nexport default hover;\n","export const CLASSPREFIX = 'muze';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\n\n","import { getClientPoint } from 'muze-utils';\n\nexport const generatePayloadFromEvent = function (args, event, firebolt) {\n    const context = firebolt.context;\n    const pos = getClientPoint(context.getDrawingContext().svgContainer, event.touches ? event.touches[0] : event);\n    const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n        data: args\n    });\n    return {\n        criteria: nearestPoint ? nearestPoint.id : null,\n        showInPosition: nearestPoint.showInPosition,\n        target: nearestPoint.target,\n        position: pos\n    };\n};\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\nexport const LONGTOUCH = 'longtouch';\nexport const TOUCHDRAG = 'touchdrag';\n\n","import { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport { longtouch } from './longtouch';\nimport { touchdrag } from './touch-drag';\nimport * as ACTIONNAMES from '../../enums/actions';\nimport click from './click';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click,\n    [ACTIONNAMES.LONGTOUCH]: longtouch,\n    [ACTIONNAMES.TOUCHDRAG]: touchdrag\n};\n\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt);\n};\n\nexport default drag;\n","/* global setTimeout */\nimport { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nexport const longtouch = firebolt => (targetEl, behaviours) => {\n    let event;\n    let touchEnd;\n    const dispatchBehaviour = function (args) {\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    touchEnd = false;\n    event = getEvent();\n    targetEl.on('touchstart', (args) => {\n        event = getEvent();\n        touchEnd = false;\n        setTimeout(() => {\n            if (!touchEnd) {\n                dispatchBehaviour(args);\n            } else {\n                behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                    criteria: null\n                }));\n            }\n        }, 100);\n    }).on('touchend', () => {\n        touchEnd = true;\n    });\n};\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const touchdrag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt, true);\n};\n\n","import { mergeRecursive, getUniqueId } from 'muze-utils';\n\nexport default class GenericSideEffect {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n        this._strategy = 'default';\n        this._config = {};\n        this._id = getUniqueId();\n        this._strategies = {};\n        this.config(this.constructor.defaultConfig());\n    }\n\n    static defaultConfig () {\n        return {};\n    }\n\n    static target () {\n        return 'all';\n    }\n\n    static mutates () {\n        return false;\n    }\n\n    config (...params) {\n        if (params.length) {\n            this._config = mergeRecursive(this._config, params[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    disable () {\n        this._enabled = false;\n        return this;\n    }\n\n    enable () {\n        this._enabled = true;\n        return this;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n\n    apply () {\n        return this;\n    }\n\n    addStrategy (name, fn) {\n        this._strategies[name] = fn;\n        return this;\n    }\n}\n","import GenericSideEffect from './generic';\n\nexport default class SurrogateSideEffect extends GenericSideEffect {\n    applyInteractionStyle (set, config = {}, interactionType, apply) {\n        const layers = this.firebolt.context.layers();\n        layers.forEach(layer => layer.config().interactive !== false &&\n            layer.applyInteractionStyle(interactionType, set.uids, apply));\n    }\n}\n","import { makeElement } from 'muze-utils';\n\nimport GenericSideEffect from './generic';\n\nexport default class SpawnableSideEffect extends GenericSideEffect {\n    createElement (container, elemType, data, className, callbacks) {\n        return makeElement(container, elemType, data, className, callbacks);\n    }\n\n    drawingContext (...drawingContext) {\n        if (drawingContext.length) {\n            this._drawingContext = drawingContext[0];\n            return this;\n        }\n        return this._drawingContext();\n    }\n\n    show () {\n        return this;\n    }\n\n    hide () {\n        return this;\n    }\n}\n","import { selectElement } from 'muze-utils';\n\nexport const getBoxDimensionsFromPayload = (payload, axes, axisFields) => {\n    let x1;\n    let x2;\n    let y1;\n    let y2;\n    let xRange;\n    let yRange;\n    let direction;\n    const criteria = payload.criteria;\n    const dimensions = payload.dimensions || {};\n    const xDim = dimensions.x;\n    const yDim = dimensions.y;\n\n    if (criteria === null) {\n        return null;\n    }\n\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const xLinear = xAxis.constructor.type() === 'linear';\n    const yLinear = yAxis.constructor.type() === 'linear';\n    const xField = `${axisFields.x[0]}`;\n    const yField = `${axisFields.y[0]}`;\n    const xCriteria = criteria[xField];\n    const yCriteria = criteria[yField];\n\n    if (xCriteria && xCriteria[0] instanceof Array) {\n        xRange = xCriteria[0];\n        yRange = xCriteria[1];\n    } else {\n        xRange = xCriteria || [];\n        yRange = yCriteria || [];\n    }\n    direction = xCriteria && yCriteria ? 'both' : (xCriteria ? 'vertical' : 'horizontal');\n    if (xRange && xRange.length) {\n        if ((yAxis.constructor.type() === 'band' && xLinear)) {\n            x1 = x2 = undefined;\n            direction = 'horizontal';\n        } else {\n            const domain = xAxis.domain();\n            const bandScale = xAxis.constructor.type() === 'band';\n            let x1Val;\n            let x2Val;\n            if (bandScale) {\n                let x1DomainIndex = domain.indexOf(xRange[0]);\n                let x2DomainIndex = domain.indexOf(xRange[xRange.length - 1]);\n                [x1DomainIndex, x2DomainIndex] = [x1DomainIndex, x2DomainIndex].sort((a, b) => a - b);\n                x1Val = domain[x1DomainIndex];\n                x2Val = domain[x2DomainIndex];\n            } else {\n                x1Val = xRange[0];\n                x2Val = xRange[xRange.length - 1];\n            }\n            x1 = xAxis.getScaleValue(x1Val);\n            x2 = xAxis.getScaleValue(x2Val);\n            x2 += bandScale ? xAxis.getUnitWidth() : 0;\n        }\n    } else {\n        x1 = x2 = undefined;\n    }\n    if (yRange && yRange.length) {\n        if ((xAxis.constructor.type() === 'band' && yLinear)) {\n            y1 = y2 = undefined;\n            direction = 'vertical';\n        } else {\n            const domain = yAxis.domain();\n            const bandScale = yAxis.constructor.type() === 'band';\n            let y1Val;\n            let y2Val;\n            if (bandScale) {\n                let y1DomainIndex = domain.indexOf(yRange[0]);\n                let y2DomainIndex = domain.indexOf(yRange[yRange.length - 1]);\n                [y1DomainIndex, y2DomainIndex] = [y1DomainIndex, y2DomainIndex].sort(((a, b) => b - a));\n                y1Val = domain[y1DomainIndex];\n                y2Val = domain[y2DomainIndex];\n            } else {\n                y1Val = yRange[0];\n                y2Val = yRange[yRange.length - 1];\n            }\n            y1 = yAxis.getScaleValue(y1Val);\n            y2 = yAxis.getScaleValue(y2Val);\n            y2 += yAxis.constructor.type() === 'band' ? yAxis.getUnitWidth() : 0;\n        }\n    } else {\n        y1 = y2 = undefined;\n    }\n\n    if ((yLinear && xLinear) || !payload.dragEnd) {\n        if (xDim) {\n            [x1, x2] = xDim;\n        }\n        if (yDim) {\n            [y1, y2] = yDim;\n        }\n    }\n\n    return {\n        dimension: {\n            x1,\n            x2,\n            y1,\n            y2\n        },\n        direction\n    };\n};\n\nexport const changeVisibility = (context, sideEffectGroup, visible) => {\n    const config = context.config();\n    const className = config.defClassName;\n    const classPrefix = config.classPrefix;\n    selectElement(sideEffectGroup).selectAll(`.${classPrefix}-${className}`)\n                    .style('display', visible ? 'block' : 'none');\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    isValidValue\n} from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport './styles.scss';\nimport SpawnableSideEffect from '../spawnable';\nimport { selectionBoxDrag } from '../../actions/physical/selection-box-drag';\nimport { getBoxDimensionsFromPayload, changeVisibility } from './helper';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\nclass SelectionBox extends SpawnableSideEffect {\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            defClassName: 'selection-box-group',\n            className: '',\n            classPrefix: CLASSPREFIX,\n            box: {\n                defClassName: 'selection-box',\n                className: ''\n            },\n            transition: {\n                duration: 200\n            }\n        };\n    }\n\n    static formalName () {\n        return 'selectionBox';\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     * @param {Object} dimension Dimensions of the selection box.\n     * @param {number} dimension.x1 Starting x position\n     * @param {number} dimension.x2 Ending x position\n     * @param {number} dimension.y1 Starting y position\n     * @param {number} dimension.y2 Ending y position\n     * @param {Object} conf Configuration needed to draw the selection box\n     * @param {number} unitWidth Width of the visual unit.\n     * @param {number} unitHeight Height of the visual unit.\n     */\n    apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const config = this._config;\n        const boxConf = config.box;\n        const firebolt = this.firebolt;\n        const drawingInf = this.drawingContext();\n        const mountPoint = drawingInf.sideEffectGroup;\n        const unitWidth = drawingInf.width;\n        const unitHeight = drawingInf.height;\n        const classPrefix = config.classPrefix;\n        const selectionGroupClassName = config.defClassName;\n\n        if (payload.criteria === null) {\n            this.hide(drawingInf);\n            return this;\n        }\n\n        const sourceInf = firebolt.context.getSourceInfo();\n        const { dimension, direction } = getBoxDimensionsFromPayload(payload, sourceInf.axes,\n            sourceInf.fields);\n        const transition = payload.dragEnd && config.transition;\n\n        if (direction === 'both' || direction === 'vertical') {\n            x = Math.min(dimension.x1, dimension.x2);\n            width = Math.abs(dimension.x2 - dimension.x1);\n        } else {\n            x = 0;\n            width = unitWidth;\n        }\n        if (direction === 'both' || direction === 'horizontal') {\n            y = Math.min(dimension.y1, dimension.y2);\n            height = Math.abs(dimension.y2 - dimension.y1);\n        } else {\n            height = unitHeight;\n            y = 0;\n        }\n        this.show(drawingInf);\n        // Create the data array for drawing the rectangle\n        const points = [\n            {\n                x,\n                y,\n                width,\n                height\n            }\n        ];\n        // Create the container group for selection box.\n        const selectionGroup = makeElement(selectElement(mountPoint), 'g', [1],\n            `.${classPrefix}-${selectionGroupClassName}`);\n        const sideEffect = this;\n        const selection = selectionGroup.selectAll('rect').data(points);\n        const selectionBox = selection.enter().append('rect')\n                        .each(function () {\n                            selectionBoxDrag(firebolt)(selectElement(this), ['brush'], sideEffect);\n                        })\n                        .merge(selection)\n                        .each(function (attrs) {\n                            let element = selectElement(this);\n                            transition && (element = element.transition().duration(transition.duration));\n                            for (const key in attrs) {\n                                if ({}.hasOwnProperty.call(attrs, key)) {\n                                    isValidValue(attrs[key]) && element.attr(key, attrs[key]);\n                                }\n                            }\n                        });\n        // Get the qualified class name for selection box rectangle\n        const boxClassName = getQualifiedClassName(boxConf.defClassName, this._id, classPrefix);\n        selectionBox.classed(boxClassName.join(' '), true);\n        selectionBox.classed(boxConf.className, true);\n\n        return this;\n    }\n\n    hide (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, false);\n    }\n\n    show (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, true);\n    }\n}\n\nexport default SelectionBox;\n\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './helpers/drag-action-config';\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let subject;\n    const context = firebolt.context;\n    const drawingInf = context.getDrawingContext();\n    const onDrag = (payload) => {\n        behaviours.forEach(action => firebolt.dispatchBehaviour(action, payload));\n    };\n    const d3Drag = getD3Drag();\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        subject.x += event.dx;\n        subject.y += event.dy;\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            }, context.data().getFieldsConfig());\n            onDrag(payload);\n        }\n    }).on('end', () => {\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                },\n                snap: true\n            }, context.data().getFieldsConfig());\n            payload.dragEnd = true;\n            onDrag(payload);\n        }\n    }));\n};\n","export const CLASSPREFIX = 'muze';\nexport const ARROW_RIGHT = 'right';\nexport const ARROW_TOP = 'top';\nexport const ARROW_BOTTOM = 'bottom';\nexport const ARROW_LEFT = 'left';\nexport const TOOLTIP_LEFT = 'left';\nexport const TOOLTIP_RIGHT = 'right';\nexport const TOOLTIP_BOTTOM = 'bottom';\nexport const TOOLTIP_TOP = 'top';\nexport const INITIAL_STYLE = {\n    position: 'absolute',\n    width: 0,\n    height: 0\n};\n","import { CLASSPREFIX } from './constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'tooltip-box',\n    connectorClassName: 'tooltip-connectors',\n    className: '',\n    row: {\n        margin: 0\n    },\n    content: {\n        spacing: 5,\n        iconContainerSize: 10,\n        iconSize: 30,\n        iconShape: 'circle',\n        iconColor: '#ff0000',\n        rowMargin: '0px',\n        margin: 10,\n        separator: ':',\n        className: 'tooltip-content-container',\n        parentClassName: 'tooltip-content-parent-container'\n    },\n    arrow: {\n        size: 10,\n        disabled: false,\n        defClassName: 'tooltip-arrow',\n        className: '',\n        color: 'rgba(195,195,195,0.85)'\n    }\n};\n","import { getQualifiedClassName } from 'muze-utils';\nimport { TOOLTIP_LEFT, TOOLTIP_RIGHT, ARROW_RIGHT, ARROW_LEFT, TOOLTIP_BOTTOM } from './constants';\n\nexport const getArrowPos = (orient, dim, measurement, config) => {\n    let arrowPos;\n    const { x, y, boxHeight, boxWidth } = measurement;\n    const arrowDisabled = config.arrow.disabled;\n    const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n\n    if (orient === ARROW_LEFT || orient === ARROW_RIGHT) {\n        let start = 0;\n        let diff = boxHeight / 2;\n        const plotBottom = dim.y + dim.height;\n        const boxBottom = y + boxHeight;\n\n        if (dim.y > y) {\n            start = dim.y - y;\n            diff = (plotBottom >= boxBottom ? (boxBottom - dim.y) : dim.height) / 2;\n        } else if (boxBottom > plotBottom) {\n            diff = Math.abs(y - (dim.y + dim.height)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    } else {\n        let start = 0;\n        let diff = boxWidth / 2;\n        const plotRight = dim.x + dim.width;\n        const boxRight = x + boxWidth;\n\n        if (dim.x > x) {\n            start = dim.x - x;\n            diff = (plotRight >= boxRight ? (boxRight - dim.x) : dim.width) / 2;\n        } else if (boxRight > plotRight) {\n            diff = Math.abs(x - (dim.x + dim.width)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    }\n    return arrowPos;\n};\n\n/**\n * Places the arrow in the specified arrow position. It also applies appropriate arrow\n * class name to the arrow element.\n * @param {string} position Left, bottom or right position of the arrow;\n * @param {number} arrowPos position of arrow in pixels\n * @return {Tooltip} Instance of tooltip.\n */\nexport const placeArrow = (context, position, arrowPos) => {\n    const tooltipArrow = context._tooltipArrow;\n    const tooltipBackground = context._tooltipBackground;\n    const config = context._config;\n    const classPrefix = config.classPrefix;\n    const arrowConf = config.arrow;\n    const className = getQualifiedClassName(arrowConf.defClassName, context._id, config.classPrefix);\n\n    tooltipArrow.style('display', 'block');\n    tooltipArrow.attr('class', `${className.join(' ')}`);\n    if (position === TOOLTIP_LEFT || position === TOOLTIP_RIGHT) {\n        tooltipArrow.style('top', `${arrowPos}px`);\n        tooltipArrow.style('left', '');\n        tooltipBackground.style('top', `${arrowPos}px`);\n        tooltipBackground.style('left', '');\n    } else {\n        position === TOOLTIP_BOTTOM ? tooltipArrow.style('top', '100%') : tooltipArrow.style('top',\n            `-${arrowConf.size}px`);\n        tooltipArrow.style('left', `${arrowPos}px`);\n        position === TOOLTIP_BOTTOM ? tooltipBackground.style('top', '100%') : tooltipBackground.style('top',\n            `-${arrowConf.size + 3}px`);\n        tooltipBackground.style('left', `${arrowPos}px`);\n    }\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow`, true);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${context._arrowOrientation}`, false);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${position}`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${context._arrowOrientation}`, false);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${position}`, true);\n    return this;\n};\n\nexport const reorderContainers = (parentContainer, className) => {\n    parentContainer.selectAll(className).sort((a, b) => a - b);\n};\n","import {\n    getClosestIndexOf,\n    DateTimeFormatter,\n    DimensionSubtype,\n    FieldType\n} from 'muze-utils';\n\nconst timeFormats = {\n    millisecond: '%A, %b %e, %H:%M:%S.%L',\n    second: '%A, %b %e, %H:%M:%S',\n    minute: '%A, %b %e, %H:%M',\n    hour: '%A, %b %e, %H:%M',\n    day: '%A, %b %e, %Y',\n    month: '%B %Y',\n    year: '%Y'\n};\nconst timeDurations = [\n    ['millisecond', 'second', 'minute', 'hour', 'day', 'month', 'year'],\n    [1, 1000, 60000, 3600000, 86400000, 2592000000, 31536000000]\n];\nconst getNearestInterval = (interval) => {\n    const index = getClosestIndexOf(timeDurations[1], interval);\n    return timeDurations[0][index];\n};\nconst defaultTooltipFormatters = (type, formatter) => {\n    const formatters = {\n        [DimensionSubtype.TEMPORAL]: (value, interval) => {\n            const nearestInterval = getNearestInterval(interval);\n            return DateTimeFormatter.formatAs(value, timeFormats[nearestInterval]);\n        },\n        [FieldType.MEASURE]: value => formatter(value ? value.toFixed(2) : value),\n        [FieldType.DIMENSION]: value => value\n    };\n    return formatters[type];\n};\n\nexport const buildTooltipData = (dataModel, config = {}, context) => {\n    let fieldValues = [];\n    const dataObj = dataModel.getData();\n    const data = dataObj.data;\n    const schema = dataObj.schema;\n    const formatters = config.formatters;\n    const separator = config.separator;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const fieldspace = dataModel.getFieldspace();\n    const fieldsObj = fieldspace.fieldsObj();\n    const dimensionMeasureMap = context.dimensionMeasureMap;\n    const axes = context.axes;\n    const dimensions = schema.filter(d => d.type === FieldType.DIMENSION);\n    const measures = schema.filter(d => d.type === FieldType.MEASURE);\n    const dataLen = data.length;\n    const getRowContent = (field, type) => {\n        let value;\n        let formattedValue;\n        let measureIndex;\n        const values = [];\n        const index = fieldsConfig[field].index;\n        const interval = fieldsConfig[field].def.subtype === DimensionSubtype.TEMPORAL ?\n                fieldsObj[field].getMinDiff() : 0;\n        const formatterFn = (formatters && formatters[field]) || defaultTooltipFormatters(type, val => val);\n\n        if (value !== null) {\n            let uniqueVals = type === FieldType.MEASURE ? data.map(d => d[index]) :\n                [...new Set(data.map(d => d[index]))];\n            uniqueVals = uniqueVals.filter(d => d !== '');\n            const colorAxis = axes.color[0];\n            const shapeAxis = axes.shape[0];\n            const sizeAxis = axes.size[0];\n            const isRetinalField = (colorAxis || shapeAxis || sizeAxis) && dataLen > 1 &&\n                    type !== FieldType.MEASURE;\n\n            uniqueVals.forEach((val, i) => {\n                let key;\n                const associatedMeasures = dimensionMeasureMap[field];\n\n                if (associatedMeasures && associatedMeasures.length && dataLen > 1) {\n                    key = val;\n                    let icon = {\n                        value: ''\n                    };\n\n                    if (isRetinalField) {\n                        icon = {\n                            type: 'icon',\n                            color: colorAxis.getColor(val),\n                            shape: shapeAxis.getShape(val),\n                            size: sizeAxis.getSize(val) * config.iconSize\n                        };\n                    }\n                    if (associatedMeasures.length > 1) {\n                        values.push([icon, `${key}`]);\n                        associatedMeasures.forEach((measure) => {\n                            measureIndex = fieldsConfig[measure].index;\n                            value = data[i][measureIndex];\n                            formattedValue = defaultTooltipFormatters('measure',\n                                fieldspace.fields[measureIndex]._ref.numberFormat())(value, interval);\n                            values.push([{\n                                value: `${measure}${separator}`,\n                                style: {\n                                    'margin-left': `${config.margin}px}`\n                                },\n                                className: `${config.classPrefix}-tooltip-key`\n                            }, {\n                                value: `${formattedValue}`,\n                                className: `${config.classPrefix}-tooltip-value`\n                            }]);\n                        });\n                    } else {\n                        measureIndex = fieldsConfig[associatedMeasures[0]].index;\n                        value = data[i][measureIndex];\n                        formattedValue = defaultTooltipFormatters('measure',\n                            fieldspace.fields[measureIndex]._ref.numberFormat())(value, interval);\n                        values.push([icon, {\n                            value: `${key}${separator}`,\n                            className: `${config.classPrefix}-tooltip-key`\n                        }, {\n                            value: `${formattedValue}`,\n                            className: `${config.classPrefix}-tooltip-value`\n                        }]);\n                    }\n                } else {\n                    key = field;\n                    value = val;\n                    formattedValue = formatterFn(value, interval);\n                    values.push([{\n                        value: `${key}${separator}`,\n                        className: `${config.classPrefix}-tooltip-key`\n                    }, {\n                        value: `${formattedValue}`,\n                        className: `${config.classPrefix}-tooltip-value`\n                    }]);\n                }\n            });\n        }\n        return values;\n    };\n\n    dimensions.forEach((item) => {\n        const type = item.subtype ? item.subtype : item.type;\n        fieldValues = [...fieldValues, ...getRowContent(item.name, type)];\n    });\n\n    const allMeasures = [...new Set(...Object.values(dimensionMeasureMap))];\n    const filteredMeasures = dataLen > 1 ? measures.filter(d => allMeasures.indexOf(d.name) === -1)\n        : measures;\n    filteredMeasures.forEach((item) => {\n        const type = item.subtype ? item.subtype : item.type;\n        fieldValues = [...fieldValues, ...getRowContent(item.name, type)];\n    });\n\n    return fieldValues;\n};\n\n/**\n * This contains the strategy methods for showing tooltip in the chart.\n * @param {VisualUnit} context Attached instance.\n */\nexport const strategy = {\n    keyValue: (data, config, context) => {\n        const values = buildTooltipData(data, config, context);\n        return values;\n    }\n};\n\nexport const DEFAULT_STRATEGY = 'keyValue';\n","import {\n    selectElement,\n    mergeRecursive,\n    makeElement,\n    setAttrs,\n    setStyles,\n    getSymbol\n} from 'muze-utils';\nimport { DEFAULT_STRATEGY, strategy } from './strategy';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class is used to manage the content of tooltip.\n */\nexport default class Content {\n    /**\n     * Creates an instance of content.\n     */\n    constructor () {\n        this._model = null;\n        this._strategy = DEFAULT_STRATEGY;\n        this._formatter = null;\n        this._config = this.constructor.defaultConfig();\n    }\n   /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        const config = defaultConfig.content;\n        config.classPrefix = defaultConfig.classPrefix;\n        return config;\n    }\n\n    config (...c) {\n        if (c.length > 0) {\n            this._config = mergeRecursive(this._config, c[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Update model. The format contains presentation strategy which determines how to show the content.\n     * If no strategy is mentioned then default is to show key value pair\n    */\n    update (item) {\n        this._model = item.model;\n        this._strategy = item.strategy !== undefined ? item.strategy : DEFAULT_STRATEGY;\n        this._formatter = item.formatter;\n        return this;\n    }\n\n    context (ctx) {\n        this._context = ctx;\n        return this;\n    }\n\n    render (mount) {\n        let data;\n        const config = this._config;\n        const iconContainerSize = config.iconContainerSize;\n        const formatter = this._formatter;\n        const rowMargin = config.rowMargin;\n        const model = this._model;\n\n        this._mount = mount;\n        if (model instanceof Array) {\n            data = model;\n        } else {\n            data = formatter instanceof Function ? formatter(this._model, this._context) :\n                strategy[this._strategy](this._model, this.config(), this._context);\n        }\n\n        if (data instanceof Function) {\n            mount.html(data());\n        } else {\n            const rows = makeElement(mount, 'p', data, `${config.classPrefix}-tooltip-row`);\n            const cells = makeElement(rows, 'span', d => d, `${config.classPrefix}-tooltip-content`);\n            cells.attr('class', `${config.classPrefix}-tooltip-content`);\n            setStyles(rows, {\n                margin: rowMargin\n            });\n            setStyles(cells, {\n                display: 'inline-block',\n                'margin-right': `${config.spacing}px`\n            });\n\n            cells.each(function (d) {\n                const el = selectElement(this);\n                el.html('');\n                if (d instanceof Object) {\n                    if (d.type === 'icon') {\n                        const svg = makeElement(el, 'svg', [1]);\n                        const path = makeElement(svg, 'path', [1]);\n                        const shape = d.shape instanceof Function ? d.shape : getSymbol(d.shape);\n\n                        setAttrs(svg, {\n                            x: 0,\n                            y: 0,\n                            width: iconContainerSize,\n                            height: iconContainerSize\n                        });\n                        setAttrs(path, {\n                            d: shape.size(d.size)(),\n                            transform: `translate(${iconContainerSize / 2}, ${iconContainerSize / 2})`\n                        });\n                        setStyles(path, {\n                            fill: d.color\n                        });\n                    } else {\n                        el.html(d.value);\n                        d.className && el.classed(d.className, true);\n                        setStyles(el, d.style);\n                    }\n                } else {\n                    el.html(d);\n                }\n            });\n        }\n        return this;\n    }\n\n    clear () {\n        this._model = null;\n        return this;\n    }\n}\n","import {\n    mergeRecursive,\n    getQualifiedClassName,\n    getUniqueId,\n    selectElement,\n    setStyles,\n    makeElement\n} from 'muze-utils';\nimport { ARROW_BOTTOM, ARROW_LEFT, ARROW_RIGHT, TOOLTIP_LEFT, TOOLTIP_RIGHT, TOOLTIP_BOTTOM, TOOLTIP_TOP,\n    INITIAL_STYLE } from './constants';\nimport { defaultConfig } from './default-config';\nimport { getArrowPos, placeArrow, reorderContainers } from './helper';\nimport './styles.scss';\nimport Content from './content';\n\n/**\n * This component is responsible for creating a tooltip element. It appends the tooltip\n * in the body element.\n * @class Tooltip\n */\nexport default class Tooltip {\n    /**\n     * Initializes the tooltip with the container element and configuration\n     * @param {HTMLElement} container container where the tooltip will be mounted.\n     * @param {string} className Class name of the tooltip.\n     */\n    constructor (htmlContainer, svgContainer) {\n        let connectorContainer = svgContainer;\n        this._id = getUniqueId();\n        this._config = {};\n        this.config({});\n        const tooltipConf = this._config;\n        const classPrefix = tooltipConf.classPrefix;\n        const contentClass = tooltipConf.content.parentClassName;\n        const container = makeElement(htmlContainer, 'div', [1], `${classPrefix}-tooltip-container`);\n        this._container = container;\n        this._tooltipContainer = container.append('div').style('position', 'absolute');\n        this._contentContainer = this._tooltipContainer.append('div').attr('class', `${classPrefix}-${contentClass}`);\n        this._tooltipBackground = this._tooltipContainer.append('div').style('position', 'relative');\n        this._tooltipArrow = this._tooltipContainer.append('div');\n\n        if (!svgContainer) {\n            connectorContainer = htmlContainer.append('svg').style('pointer-events', 'none');\n        }\n        this._contents = {};\n        this._tooltipConnectorContainer = selectElement(connectorContainer)\n            .append('g')\n            .attr('class', `${tooltipConf.classPrefix}-${tooltipConf.connectorClassName}`);\n        const id = this._id;\n        const defClassName = tooltipConf.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, id, tooltipConf.classPrefix);\n\n        setStyles(this._tooltipArrow, INITIAL_STYLE);\n        setStyles(this._tooltipBackground, INITIAL_STYLE);\n        this.addClass(qualifiedClassName.join(' '));\n        this.addClass(tooltipConf.className);\n        this.hide();\n    }\n\n    /**\n     * Sets the configuration of tooltip.\n     * @param {Object} config Configuration of tooltip\n     * @return {Tooltip} Instance of tooltip\n     */\n    config (...config) {\n        if (config.length > 0) {\n            const defConf = mergeRecursive({}, this.constructor.defaultConfig());\n            this._config = mergeRecursive(defConf, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n    /**\n     * Sets the class name of tooltip\n     * @param {string} className tooltip class name\n     * @return {Tooltip} Instance of tooltip.\n     */\n    addClass (className) {\n        this._tooltipContainer.classed(className, true);\n        return this;\n    }\n\n    context (...ctx) {\n        if (ctx.length) {\n            this._context = ctx[0];\n            return this;\n        }\n        return this._context;\n    }\n\n    content (name, data, contentConfig = {}) {\n        const config = this.config();\n        const { classPrefix } = config;\n        const contentClass = config.content.className;\n        const formatter = config.formatter;\n        const className = contentConfig.className || `${classPrefix}-${contentClass}-${name}`;\n        const content = this._contents[name] = this._contents[name] || new Content();\n        const container = makeElement(this._contentContainer, 'div', [contentConfig.order], className);\n        container.attr('class', `${classPrefix}-${contentClass} ${className}`);\n        reorderContainers(this._contentContainer, `.${classPrefix}-${contentClass}`);\n        const contentConf = config.content;\n        contentConfig.classPrefix = this._config.classPrefix;\n        content.config(contentConf);\n\n        if (data === null) {\n            content.clear();\n            container.remove();\n            delete this._contents[name];\n        } else {\n            content.update({\n                model: data,\n                formatter: contentConfig.formatter || formatter\n            });\n            content.context(this._context);\n            content.render(container);\n        }\n\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n        }\n        return this;\n    }\n\n    getContents () {\n        return Object.values(this._contents);\n    }\n\n    /**\n     * Positions the tooltip at the given x and y position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Tooltip} Instance of tooltip.\n     */\n    position (x, y, conf = {}) {\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n            return this;\n        }\n        this.show();\n        const target = this._target;\n        const repositionArrow = conf.repositionArrow;\n\n        if (target && repositionArrow) {\n            const node = this._tooltipContainer.node();\n            const config = this._config;\n            const arrowDisabled = config.arrow.disabled;\n            const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n            const arrowOrient = this._arrowOrientation;\n            const outsidePlot = arrowOrient === ARROW_LEFT || arrowOrient === ARROW_RIGHT ?\n                (y + node.offsetHeight - arrowWidth) < target.y || y > (target.y + target.height) :\n                (x + node.offsetWidth - arrowWidth) < target.x || x > (target.x + target.width);\n            if (outsidePlot) {\n                let path;\n                this._tooltipArrow.style('display', 'none');\n                this._tooltipBackground.style('display', 'none');\n                this._tooltipConnectorContainer.style('display', 'block');\n                const connector = this._tooltipConnectorContainer.selectAll('path').data([1]);\n                const enter = connector.enter().append('path');\n                if (arrowOrient === ARROW_LEFT) {\n                    path = `M ${x} ${y + node.offsetHeight / 2} L ${target.x + target.width}`\n                        + ` ${target.y + target.height / 2}`;\n                } else if (arrowOrient === ARROW_RIGHT) {\n                    path = `M ${x + node.offsetWidth} ${y + node.offsetHeight / 2}`\n                            + ` L ${target.x} ${target.y + target.height / 2}`;\n                } else if (arrowOrient === ARROW_BOTTOM) {\n                    path = `M ${x + node.offsetWidth / 2} ${y + node.offsetHeight}`\n                        + ` L ${target.x + target.width / 2} ${target.y}`;\n                }\n                enter.merge(connector).attr('d', path).style('display', 'block');\n            } else {\n                const arrowPos = getArrowPos(arrowOrient, target, {\n                    x,\n                    y,\n                    boxHeight: node.offsetHeight,\n                    boxWidth: node.offsetWidth\n                }, this._config);\n\n                placeArrow(this, this._arrowOrientation, arrowPos);\n                this._tooltipConnectorContainer.style('display', 'none');\n            }\n        }\n\n        const offset = this._offset || {\n            x: 0,\n            y: 0\n        };\n        this._tooltipContainer.style('left', `${offset.x + x}px`).style('top',\n            `${offset.y + y}px`);\n\n        return this;\n    }\n\n    /**\n     * Positions the tooltip relative to a rectangular box. It takes care of tooltip overflowing the\n     * boundaries.\n     * @param {Object} dim Dimensions of the plot.\n     */\n    positionRelativeTo (dim, tooltipConf = {}) {\n        let obj;\n        let orientation = tooltipConf.orientation;\n        this.show();\n        if (!dim) {\n            this.hide();\n            return this;\n        }\n\n        const extent = this._extent;\n        const node = this._tooltipContainer.node();\n\n        this._tooltipContainer.style('top', '0px')\n                        .style('left', '0px');\n        const offsetWidth = node.offsetWidth + 2;\n        const offsetHeight = node.offsetHeight + 2;\n        const config = this._config;\n        const offset = this._offset;\n        const arrowDisabled = config.arrow.disabled;\n        const arrowSize = config.arrow.size;\n        const draw = tooltipConf.draw !== undefined ? tooltipConf.draw : true;\n        const topSpace = dim.y;\n        // When there is no space in right\n        const dimX = dim.x + dim.width + offset.x;\n        const rightSpace = extent.width - dimX;\n        const leftSpace = dim.x + offset.x - extent.x;\n        const positionTop = topSpace > (offsetHeight + arrowSize);\n        const positionRight = rightSpace >= offsetWidth + arrowSize;\n        const positionLeft = leftSpace >= offsetWidth + arrowSize;\n\n        const positionHorizontal = () => {\n            let position;\n            let x = dim.x + dim.width;\n            let y = dim.y;\n\n            if (positionRight) {\n                position = TOOLTIP_LEFT;\n                x += arrowSize;\n            } else if (positionLeft) {\n                x = dim.x - offsetWidth;\n                position = TOOLTIP_RIGHT;\n                x -= arrowSize;\n            } else {\n                position = 'left';\n                x += arrowSize;\n            }\n            if (dim.height < offsetHeight) {\n                y = Math.max(0, dim.y + dim.height / 2 - offsetHeight / 2);\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        const positionVertical = () => {\n            let position;\n            let y;\n            // Position tooltip at the center of plot\n            let x = dim.x - offsetWidth / 2 + dim.width / 2;\n\n            // Overflows to the right\n            if ((extent.width - (dim.x + offset.x)) < offsetWidth) {\n                x = extent.width - offsetWidth - offset.x;\n            } else if ((x + offset.x) < extent.x) { // Overflows to the left\n                x = extent.x;\n            }\n\n            if (positionTop) {\n                y = dim.y - offsetHeight - arrowSize;\n                position = TOOLTIP_BOTTOM;\n            } else {\n                y = dim.y + dim.height + arrowSize;\n                position = TOOLTIP_TOP;\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        this._target = dim;\n        if (!orientation) {\n            if (positionTop) {\n                orientation = 'vertical';\n            } else if (positionRight || positionLeft) {\n                orientation = 'horizontal';\n            } else {\n                orientation = 'vertical';\n            }\n        }\n\n        if (orientation === 'horizontal') {\n            obj = positionHorizontal();\n        } else if (orientation === 'vertical') {\n            obj = positionVertical();\n        }\n\n        this._position = {\n            x: obj.x,\n            y: obj.y\n        };\n\n        this._arrowPos = obj.arrowPos;\n        if (!arrowDisabled) {\n            placeArrow(this, obj.position, obj.arrowPos);\n        }\n        this._arrowOrientation = obj.position;\n        draw && this.position(obj.x, obj.y);\n        return this;\n    }\n\n    /**\n     * Hides the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    hide () {\n        this._tooltipContainer.style('display', 'none');\n        this._tooltipConnectorContainer.style('display', 'none');\n        return this;\n    }\n\n    /**\n     * Shows the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    show () {\n        this._tooltipContainer.style('display', 'block');\n        return this;\n    }\n\n    extent (extent) {\n        this._extent = extent;\n        return this;\n    }\n\n    offset (offset) {\n        this._offset = offset;\n        return this;\n    }\n\n    remove () {\n        this._tooltipContainer.remove();\n        this._tooltipBackground.remove();\n        this._tooltipConnectorContainer.remove();\n        return this;\n    }\n}\n","import { FieldType } from 'muze-utils';\n\nexport const strategies = {\n    showSelectedItems: (dm) => {\n        const dataObj = dm.getData();\n        const measures = dataObj.schema.filter(d => d.type === FieldType.MEASURE).map(d => d.name);\n        const aggregatedModel = dm.groupBy(['']);\n        const fieldsObj = dm.getFieldspace().fieldsObj();\n        const fieldsConf = aggregatedModel.getFieldsConfig();\n        let values = [{\n            value: `${dataObj.data.length}`,\n            style: {\n                'font-weight': 'bold'\n            }\n        }, 'Items Selected'];\n        if (measures.length) {\n            values = [...values, ...[`(${fieldsObj[measures[0]].defAggFn().toUpperCase()}) ${measures[0]}`,\n                {\n                    value: `${aggregatedModel.getData().data[0][fieldsConf[measures[0]].index].toFixed(2)}`,\n                    style: {\n                        'font-weight': 'bold'\n                    }\n                }]];\n        }\n        return [values];\n    }\n};\n","import { Tooltip as TooltipRenderer } from '@chartshq/muze-tooltip';\nimport { FieldType, ReservedFields } from 'muze-utils';\nimport { spaceOutBoxes } from '../helper';\nimport { strategies } from './strategies';\nimport { FRAGMENTED } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nexport default class Tooltip extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._tooltips = {};\n        this._strategies = strategies;\n        this._strategy = 'default';\n    }\n\n    static defaultConfig () {\n        return {\n            padding: 5\n        };\n    }\n\n    static formalName () {\n        return 'tooltip';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        let totalHeight = 0;\n        let totalWidth = 0;\n        const dataModel = selectionSet.mergedEnter.model;\n        const context = this.firebolt.context;\n        const drawingInf = this.drawingContext();\n        if (dataModel.isEmpty() || payload.criteria === null) {\n            this.hide(options, null);\n            return this;\n        }\n\n        const tooltips = this._tooltips;\n        const config = this.config();\n        const boundBox = {\n            width: drawingInf.width,\n            height: drawingInf.height\n        };\n        const showInPosition = payload.showInPosition;\n        const pad = config.padding;\n        const dataModels = [];\n        const fragmented = config.mode === FRAGMENTED;\n        const sourceInf = context.getSourceInfo();\n        const fields = sourceInf.fields;\n        const xField = `${fields.x[0]}`;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const xFieldDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const showVertically = !!xFieldDim;\n        const tooltipPos = payload.position;\n        const boxes = [];\n        const enter = {};\n        const uids = dataModel.getData().uids;\n        if (fragmented) {\n            dataModels.push(...uids.map(d => dataModel.select((fieldsArr, i) => i === d, {\n                saveChild: false\n            })));\n        } else {\n            dataModels.push(dataModel);\n        }\n        const plotDimensions = context.getPlotPointsFromIdentifiers(payload.target || payload.criteria, {\n            getBBox: true\n        });\n\n        // Show tooltip for each datamodel\n        for (let i = 0; i < dataModels.length; i++) {\n            let plotDim = plotDimensions[i];\n            if (fragmented) {\n                plotDim = context.getPlotPointsFromIdentifiers([[ReservedFields.ROW_ID],\n                    dataModels[i].getData().uids], { getBBox: true });\n                plotDim = plotDim && plotDim[0];\n            }\n\n            const dt = dataModels[i];\n            enter[i] = true;\n            const layoutContainer = drawingInf.parentContainer;\n            const layoutBoundBox = layoutContainer.getBoundingClientRect();\n            const unitBoundBox = drawingInf.htmlContainer.getBoundingClientRect();\n\n            const offsetLeft = unitBoundBox.left - layoutBoundBox.left;\n            const offsetTop = unitBoundBox.top - layoutBoundBox.top;\n            const tooltipInst = tooltips[i] = tooltips[i] || new TooltipRenderer(layoutContainer,\n                    drawingInf.svgContainer);\n\n            tooltipInst.context(sourceInf);\n            const strategy = strategies[options.strategy];\n            tooltipInst.content(options.strategy || this._strategy, dt, {\n                formatter: strategy,\n                order: options.order\n            })\n                            .config(this.config())\n                            .extent({\n                                x: 0,\n                                y: 0,\n                                width: layoutBoundBox.width,\n                                height: layoutBoundBox.height\n                            })\n                            .offset({\n                                x: offsetLeft,\n                                y: offsetTop\n                            });\n\n            if (showInPosition) {\n                tooltipInst.position(tooltipPos.x + pad, tooltipPos.y + pad);\n            } else if (plotDim) {\n                tooltipInst.positionRelativeTo({\n                    x: plotDim.x,\n                    y: plotDim.y,\n                    width: plotDim.width || 0,\n                    height: plotDim.height || 0\n                }, {\n                    orientation: fragmented ?\n                        (showVertically ? 'horizontal' : 'vertical') : undefined\n                });\n            } else {\n                tooltipInst.hide();\n                break;\n            }\n\n            if (fragmented) {\n                const position = tooltipInst._position;\n                const tooltipBoundBox = tooltipInst._tooltipContainer.node().getBoundingClientRect();\n\n                totalHeight += tooltipBoundBox.height + pad;\n                totalWidth += tooltipBoundBox.width + pad;\n                if (showVertically ? totalHeight > drawingInf.height : totalWidth > drawingInf.width) {\n                    break;\n                }\n                boxes.push({\n                    x: position.x,\n                    y: position.y,\n                    width: tooltipBoundBox.width,\n                    height: tooltipBoundBox.height,\n                    tooltip: tooltipInst\n                });\n            }\n        }\n        for (const key in tooltips) {\n            if (!enter[key]) {\n                const tooltip = tooltips[key];\n                tooltip.content(payload.action, null);\n                if (!tooltip.getContents().length) {\n                    tooltip.remove();\n                    delete tooltips[key];\n                }\n            }\n        }\n        if (fragmented) {\n            spaceOutBoxes(boxes, boundBox, showVertically);\n            boxes.forEach(box => box.tooltip.position(box.x, box.y, {\n                repositionArrow: true\n            }));\n        }\n        return this;\n    }\n\n    hide (options) {\n        const tooltips = this._tooltips;\n        for (const key in tooltips) {\n            if ({}.hasOwnProperty.call(tooltips, key)) {\n                const strategy = options.strategy || this._strategy;\n                tooltips[key].content(strategy, null);\n                tooltips[key].hide();\n            }\n        }\n    }\n}\n","export const spaceOutBoxes = (boxes, extent, showVertically) => {\n    let y;\n    let height;\n    let x;\n    let width;\n    let i;\n    const pad = 5;\n    const len = boxes.length;\n    const spaceOutIfOverlap = (firstBox, secondBox, opposite) => {\n        x = firstBox.x;\n        width = firstBox.width;\n        y = firstBox.y;\n        height = firstBox.height;\n        const bottom = y + height;\n        const right = x + width;\n\n        if (showVertically) {\n            if (opposite ? y < (secondBox.y + secondBox.height) : bottom > secondBox.y) {\n                secondBox.y = opposite ? firstBox.y - secondBox.height - pad :\n                        bottom + pad;\n            }\n        } else if (opposite ? x < (secondBox.x + secondBox.width) : right > secondBox.x) {\n            secondBox.x = opposite ? firstBox.x - secondBox.width - pad :\n                    right + pad;\n        }\n    };\n\n    boxes.sort((a, b) => (showVertically ? a.y - b.y : a.x - b.x));\n    i = 0;\n\n    for (i = 0; i < len - 1; i++) {\n        spaceOutIfOverlap(boxes[i], boxes[i + 1]);\n    }\n\n    if ((boxes[i].y + boxes[i].height) > extent.height ||\n            (boxes[i].x + boxes[i].width) > extent.width) {\n        if (showVertically) {\n            boxes[i].y -= (boxes[i].height + boxes[i].y) - extent.height;\n        } else {\n            boxes[i].x -= (boxes[i].width + boxes[i].x) - extent.width;\n        }\n        for (i = len - 1; i > 0; i--) {\n            spaceOutIfOverlap(boxes[i], boxes[i - 1], true);\n        }\n    }\n    return boxes;\n}\n;\n","import { selectElement, FieldType } from 'muze-utils';\n\nimport './styles.scss';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nexport default class Crossline extends SpawnableSideEffect {\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-crossline-group`,\n            bandClass: `${CLASSPREFIX}-crossband`,\n            lineClass: `${CLASSPREFIX}-crossline`\n        };\n    }\n\n    static formalName () {\n        return 'crossline';\n    }\n\n    apply (selectionSet, payload) {\n        let height;\n        let bandWidth;\n        let px;\n        let width;\n        const {\n            className,\n            bandClass,\n            lineClass\n        } = this.config();\n        const dataModel = selectionSet.mergedEnter.model;\n        const drawingInf = this.drawingContext();\n        if (payload.criteria && dataModel && dataModel.isEmpty()) {\n            return this;\n        }\n        if (payload.criteria === null || !dataModel) {\n            this.hide();\n            return this;\n        }\n\n        const dataObj = dataModel.getData();\n        const sourceInf = this.firebolt.context.getSourceInfo();\n        const axes = sourceInf.axes;\n        const axisFields = sourceInf.fields;\n        const fields = selectionSet.fields;\n        const data = dataObj.data;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const svgContainer = drawingInf.sideEffectGroup;\n\n        const elemData = [];\n        fields.forEach((field) => {\n            const fieldIndex = fieldsConfig[field] && fieldsConfig[field].index;\n            const dataArr = data.map(d => d[fieldIndex]);\n            const axisIndex = [['x', 0], ['x', 1], ['y', 0], ['y', 1]].find((arr) => {\n                const fieldInst = axisFields[arr[0]][arr[1]];\n                return fieldInst && fieldInst.type() === FieldType.DIMENSION &&\n                    fieldInst.getMembers().indexOf(field) !== -1;\n            });\n            if (axisIndex !== undefined && data.length) {\n                const type = axisIndex[0];\n                const axis = axes[type][axisIndex[1]];\n                const value = dataArr[0];\n                bandWidth = axis.getUnitWidth() || 0;\n                px = axis.getScaleValue(value) + bandWidth / 2 + drawingInf.xOffset;\n                const plotWidth = Math.max(...this.firebolt.context.layers().map(layer => layer.getPlotSpan()[type]));\n                const pad = Math.max(...this.firebolt.context.layers().map(layer => layer.getPlotPadding()[type]));\n                height = drawingInf.height;\n                width = drawingInf.width;\n                const startPx = px - plotWidth / 2 - pad / 2;\n                const endPx = px + plotWidth / 2 + pad / 2;\n                const dataPoint = {};\n                if (type === 'y') {\n                    dataPoint.d = `M 0 ${startPx} L 0 ${endPx} L ${width} ${endPx} L ${width} ${startPx} Z`;\n                } else {\n                    dataPoint.d = `M ${startPx} 0 L ${endPx} 0 L ${endPx} ${height} L ${startPx} ${height} Z`;\n                }\n                dataPoint.className = plotWidth ? bandClass : lineClass;\n                elemData.push(dataPoint);\n            }\n        });\n        if (elemData.length) {\n            const parentGroup = this.createElement(svgContainer, 'g', [1], className);\n            const elem = this.createElement(parentGroup, 'path', elemData);\n            elem.attr('d', d => d.d).style('pointer-events', 'none')\n                            .attr('class', d => d.className);\n        }\n        return this;\n    }\n\n    hide () {\n        const className = this.config().className;\n        const drawingInf = this.drawingContext();\n        selectElement(drawingInf.sideEffectGroup).selectAll(`.${className}`).remove();\n    }\n}\n","const fadeFn = (set, context, strategy) => {\n    const {\n        mergedEnter,\n        mergedExit,\n        exitSet,\n        completeSet\n    } = set;\n\n    if (!mergedEnter.length && !mergedExit.length) {\n        context.applyInteractionStyle(completeSet, {}, strategy, false);\n    } else {\n        context.applyInteractionStyle(exitSet[1], {}, strategy, true);\n        context.applyInteractionStyle(mergedEnter, {}, strategy, false);\n    }\n};\n\nexport const strategies = {\n    fade: fadeFn,\n    focus: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'focus', false);\n        } else {\n            context.applyInteractionStyle(mergedExit, {}, 'focus', true);\n            context.applyInteractionStyle(mergedEnter, {}, 'focus', false);\n        }\n    },\n    highlight: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            entrySet,\n            exitSet,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'highlight', false);\n        } else {\n            context.applyInteractionStyle(entrySet[1], {}, 'highlight', true);\n            context.applyInteractionStyle(exitSet[1], {}, 'highlight', false);\n        }\n    }\n};\n","import SurrogateSideEffect from '../surrogate';\nimport { strategies } from './strategy';\n\nexport default class PlotHighlighter extends SurrogateSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategy = 'highlight';\n        this._strategies = strategies;\n    }\n\n    static formalName () {\n        return 'highlighter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        if (selectionSet.isSourceFieldPresent !== false) {\n            strategy(selectionSet, this, options.strategy || this._strategy);\n        }\n\n        return this;\n    }\n}\n","import SurrogateSideEffect from '../surrogate';\n\nexport default class FilterEffect extends SurrogateSideEffect {\n    static formalName () {\n        return 'filter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static mutates () {\n        return true;\n    }\n\n    apply (selectionSet, payload) {\n        const context = this.firebolt.context;\n        const entryModel = selectionSet.mergedEnter.model;\n        if (payload.criteria === null) {\n            context.clearCaching().resetData();\n        } else {\n            context.enableCaching().data(entryModel);\n        }\n        return this;\n    }\n}\n","import { DataModel } from 'muze-utils';\n\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nexport default class AnchorEffect extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        const context = this.firebolt.context;\n        this._layers = this.addAnchorLayers(context);\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-anchors-group`\n        };\n    }\n\n    static formalName () {\n        return 'anchors';\n    }\n\n    addAnchorLayers (context) {\n        const layers = [];\n        this.firebolt.context.layers().forEach((layer, idx) => {\n            const shouldDrawAnchors = layer.shouldDrawAnchors();\n            if (shouldDrawAnchors) {\n                const encodingFieldsInf = layer.encodingFieldsInf();\n                const layerObj = {\n                    instances: context.addLayer({\n                        name: `${layer.alias()}-${this.constructor.formalName()}-${idx}`,\n                        mark: 'point',\n                        encoding: {\n                            x: encodingFieldsInf.xField,\n                            y: encodingFieldsInf.yField,\n                            color: {\n                                field: encodingFieldsInf.colorField\n                            },\n                            size: {\n                                field: encodingFieldsInf.sizeField,\n                                value: this.defaultSizeValue()\n                            }\n                        },\n                        transform: {\n                            type: 'identity'\n                        },\n                        transition: this.getTransitionConfig(),\n                        calculateDomain: false,\n                        source: dt => dt.select(() => false),\n                        interactive: false,\n                        render: false\n                    }),\n                    linkedLayer: layer\n                };\n\n                layers.push(layerObj);\n            }\n        });\n        return layers;\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n\n    /**\n     * Returns the default area value of the anchor point.\n     * @return { number } Default area value of anchor.\n     */\n    defaultSizeValue () {\n        return 100;\n    }\n\n    apply (selectionSet) {\n        const dataModel = selectionSet.mergedEnter.model;\n        const drawingInf = this.drawingContext();\n        const sideEffectGroup = drawingInf.sideEffectGroup;\n        const className = this.config().className;\n        const anchorGroup = this.createElement(sideEffectGroup, 'g', [1], className);\n\n        const layers = this._layers;\n        layers.forEach((layer) => {\n            const instances = layer.instances;\n            const elems = this.createElement(anchorGroup, 'g', instances, className);\n            const linkedLayer = layer.linkedLayer;\n            const [transformedData, schema] = linkedLayer.getTransformedDataFromIdentifiers(dataModel.getData().uids);\n            const transformedDataModel = new DataModel(transformedData, schema);\n            elems.each(function (d, i) {\n                instances[i].data(transformedDataModel).mount(this);\n            });\n        });\n\n        return this;\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class PersistentAnchors extends AnchorEffect {\n    static formalName () {\n        return 'persistent-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-persistent-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class BrushAnchors extends AnchorEffect {\n    static formalName () {\n        return 'brush-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-brush-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import * as BEHAVIOURS from './enums/behaviours';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: ['selectionBox', {\n        name: 'highlighter',\n        options: {\n            strategy: 'fade'\n        }\n    }, 'brush-anchors'],\n    [`${BEHAVIOURS.BRUSH},${BEHAVIOURS.SELECT}`]: [{\n        name: 'tooltip',\n        options: {\n            strategy: 'showSelectedItems',\n            order: 0,\n            filter: context => context.config().mode === 'fragmented'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'highlight'\n        }\n    }, 'crossline', {\n        name: 'tooltip',\n        options: {\n            order: 9999\n        }\n    }, 'anchors'],\n    [BEHAVIOURS.FILTER]: ['filter'],\n    [BEHAVIOURS.SELECT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'focus'\n        }\n    }, 'persistent-anchors']\n};\n","export const CLASSPREFIX = 'muze';\nexport const STACK = 'stack';\nexport const GROUP = 'group';\nexport const IDENTITY = 'identity';\nexport const ANGLE = 'angle';\nexport const RADIUS = 'radius';\nexport const SIZE = 'size';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const OUTER_RADIUS_VALUE = 'outerRadiusValue';\nexport const TEXT_ANCHOR_MIDDLE = 'middle';\nexport const ENCODING = {\n    X: 'x',\n    Y: 'y',\n    X0: 'x0',\n    Y0: 'y0'\n};\n\nexport const ASCENDING = 'asc';\n\nexport const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { CLASSPREFIX, STACK } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-area',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: STACK\n    },\n    interaction: {\n\n    },\n    nearestPointThreshold: 10,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        y0: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * This is an interface class which any new layer class has to extend.\n *\n * @example\n * class BarLayer extends BaseLayer {\n *   update (params) {\n *       // super.update(params);\n *       // Update the bar layer\n *   }\n * }\n * @class\n */\nexport default class SimpleLayer {\n\n    formalName () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets or gets the dependencies.\n     * @param {Object} dependencies Dependencies needed by layer\n     * @return {BaseLayer} Instance of base layer.\n     */\n    dependencies () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the config of the layer\n     *\n     * @param {Object} config Configuration of layer\n     * @return {Object} configuration of layer\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Acts as a getter or setter function\n     * When setter\n     * Returns the datamodel of the layer\n     * @param { DataModel } dataModel instance of DataModel\n     * @return { DataModel } DataModel instance of the layer\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized schema of the layer\n     * @return {Object} Serialized schema\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the unique identifier of this layer\n     * @return {string} id of the layer\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n    /*\n     * This method resolves the x, y, x0 and y0 values from the transformed data.\n     * It also checks the type of transformed data for example, if it is a stacked data\n     * then it fetches the y and y0 values from the stacked data.\n     * @param {Array.<Array>} transformedData transformed data\n     * @param {Object} fieldMap field definitions\n     * @param {string} transformType type of transformed data - stack, group or identity.\n     * @return {Array.<Object>} Normalized data\n     * @private\n     */\n    normalizeTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of dataModel\n     * @param {Object} config configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     * @private\n     */\n    getTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a nominal field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @return {Array} Domain values array.\n     */\n    _calculateDomainFromData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, color, etc.\n     * @return {Object} Axis domains\n     */\n    getDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for getting nearest point\n     * @return {BaseLayer} Instance of base layer\n     */\n    getNearestPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for highlighting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    highlightPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for deselecting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    dehighlightPoint () {\n        return this;\n    }\n\n    linkLayerStore () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets the container element for the layer to be renderered.\n     * @param {SVGElement} mountPoint SVG element or group element.\n     */\n    mount () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n","import { nestCollection } from 'muze-utils';\n\n/**\n * Create multiple datasets from a single dataset by grouping the data using\n * a dimensional field.\n * @param {Array} schema Name and type of fields are stored in schema\n * @param {Array} data Data array\n * @param {Object} config Configuration object\n * @return {Array} Grouped data array\n */\nexport default (schema, data, config) => {\n    const groupBy = config.groupBy instanceof Array ? config.groupBy : [config.groupBy];\n    const groupByIndices = groupBy.map(fieldName => schema.findIndex(d => d.name === fieldName));\n\n    if (groupByIndices.find(d => d === -1) !== undefined) {\n        throw new Error(`Groupby field ${groupBy} not found in schema`);\n    }\n\n    return nestCollection({\n        keys: groupByIndices,\n        data\n    });\n};\n","/**\n * @module Transform\n * This file exports a function that is used to implement\n * the identity transform\n */\n /* eslint no-unused-vars: 0 */\n /**\n  * This function accepts data and returns the data unchanged.\n  * @param {Object} schema The schema.\n  * @param {Array} data The data array.\n  * @param {Object} config The config object.\n  * @return {Array} The unchanged data.\n  */\n function identityTransform (schema, data, config) {\n     return data;\n }\n\n export default identityTransform;\n","/**\n * @module Transform\n * This file exports the transform factory.\n */\nimport * as TransformType from '../enums/transform-type';\nimport identity from '../identity-transform';\nimport group from '../group-transform';\nimport stack from '../stack-transform';\n\n/* istanbul ignore next */\nconst transformMap = {\n    [TransformType.IDENTITY]: identity,\n    [TransformType.GROUP]: group,\n    [TransformType.STACK]: stack\n};\n\n/**\n * This function is used to retirn a transform associated\n * with the given type.\n *\n * @param {string} type The type of the transform.\n * @return {Function} The transform function.\n */\nfunction transformFactory (type) {\n    const transform = transformMap[type];\n    if (typeof transform !== 'function') {\n        throw new Error('Invalid transform type supplied.');\n    }\n    return transform;\n}\n\nexport default transformFactory;\n","/**\n * @module Transform\n * This module exports constants that are used to reference transforms in\n * a consistent manner throughout the project.\n */\n/* eslint one-var: 0 */\n export const IDENTITY = 'identity';\n export const GROUP = 'group';\n export const STACK = 'stack';\n export const FRACTURE = 'fracture';\n","import { stack } from 'muze-utils';\n\nimport group from '../group-transform';\n/*\n    Normalize the data to a form which can be given to d3 stack for stacking the data\n    ['Product', 'Sales', 'Region'],\n    0 ['A', 2000, 'North'],\n    1 ['A', 3000, 'South'],\n    2 ['B', 3000, 'South'],\n    3 ['B', 2000, 'North'],\n    4 ['C', 3000, 'South'],\n    5 ['C', 2000, 'North']\n            |\n            |\n    ['Product', 'North', 'South'],\n    ['A', 2000, 3000],\n    ['B', 2000, 3000],\n    ['C', 2000, 3000]\n*/\n// eslint-disable-next-line require-jsdoc\nconst normalizeData = (data, schema, valueField, uniqueField, groupBy) => {\n    const groupedData = group(schema, data, {\n        groupBy: uniqueField\n    });\n    const uniqueFieldIndex = schema.findIndex(d => d.name === uniqueField);\n    const valueFieldIndex = schema.findIndex(d => d.name === valueField);\n    const seriesKeyIndex = schema.findIndex(d => d.name === groupBy);\n    const seriesKeys = data.map(d => d[seriesKeyIndex]).filter((item, pos, arr) => arr.indexOf(item) === pos).sort();\n    const fieldNames = schema.reduce((acc, obj, i) => {\n        acc[i] = obj.name;\n        return acc;\n    }, {});\n    const dataArr = groupedData.map((arr) => {\n        const tuples = {};\n        const rowObj = arr.values.reduce((acc, row) => {\n            acc = row.reduce((obj, value, i) => {\n                if (i === seriesKeyIndex) {\n                    obj[value] = row[valueFieldIndex];\n                    tuples[value] = row;\n                } else if (i !== valueFieldIndex) {\n                    obj[fieldNames[i]] = value;\n                }\n                return obj;\n            }, acc);\n            return acc;\n        }, {});\n        rowObj._tuple = tuples;\n            // Set missing values field to zero value\n        seriesKeys.forEach((seriesKey) => {\n            if (rowObj[seriesKey] === undefined) {\n                rowObj[seriesKey] = 0;\n                const newArr = new Array(arr.values[0].length);\n                newArr[uniqueFieldIndex] = arr.key;\n                newArr[seriesKeyIndex] = seriesKey;\n                rowObj._tuple[seriesKey] = newArr;\n            }\n        });\n        return rowObj;\n    });\n\n    return {\n        data: dataArr,\n        keys: seriesKeys\n    };\n};\n/**\n * Generate a stacked representation of data\n * @param {Array} schema schema Array\n * @param {Array} data data array\n * @param {Object} config Configuration object\n * @return {Array} stacked data\n */\nexport default (schema, data, config) => {\n    const uniqueField = config.uniqueField;\n    const valueField = config.value;\n    const groupBy = config.groupBy;\n    const sort = config.sort || 'descending';\n    const normalizedData = normalizeData(data, schema, valueField, uniqueField, groupBy);\n    const stackData = stack({\n        keys: normalizedData.keys,\n        offset: config.offset || 'diverging',\n        order: sort,\n        data: normalizedData.data\n    });\n    stackData.forEach((seriesData) => {\n        seriesData.forEach((dataObj) => {\n            dataObj.data = dataObj.data._tuple[seriesData.key];\n        });\n    });\n    return stackData;\n};\n\n","import { FieldType, getDomainFromData, setStyles, easeFns, selectElement } from 'muze-utils';\nimport { transformFactory } from '@chartshq/transform';\nimport { IDENTITY, STACK, GROUP, COLOR, SHAPE, SIZE, ENCODING } from '../enums/constants';\n\nexport const getLayerColor = ({ datum, index }, { colorEncoding, colorAxis, colorFieldIndex }) => {\n    let rawColor = '';\n    let color = '';\n    if (colorEncoding && colorEncoding.value instanceof Function) {\n        color = colorEncoding.value(datum, index);\n        rawColor = colorEncoding.value(datum, index);\n    } else {\n        rawColor = colorAxis.getRawColor(datum._data[colorFieldIndex]);\n        color = colorAxis.getHslString(rawColor);\n    }\n    return { color, rawColor };\n};\n\nconst transfromColor = (colorAxis, datum, styleType, intensity) => {\n    datum.meta.stateColor[styleType] = datum.meta.stateColor[styleType] || datum.meta.originalColor;\n    const fillColorInfo = colorAxis.transformColor(datum.meta.stateColor[styleType], intensity);\n    datum.meta.stateColor[styleType] = fillColorInfo.hsla;\n\n    return fillColorInfo;\n};\n\nexport const applyInteractionStyle = (context, selectionSet, interactionStyles, config) => {\n    const elements = context.getPlotElementsFromSet(selectionSet);\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const apply = config.apply;\n    const interactionType = config.interactionType;\n    interactionStyles.forEach((style) => {\n        const styleType = style.type;\n        elements.style(styleType, ((d) => {\n            const { colorTransform, stateColor, originalColor } = d.meta;\n            colorTransform[interactionType] = colorTransform[interactionType] || {};\n            if (apply && !colorTransform[interactionType][styleType]) {\n                // fade selections\n                colorTransform[interactionType][styleType] = style.intensity;\n                const color = transfromColor(colorAxis, d, styleType, style.intensity).color;\n                return color;\n            }\n            if (!apply && colorTransform[interactionType][styleType]) {\n                 // unfade selections\n                colorTransform[interactionType][styleType] = null;\n                return transfromColor(colorAxis, d, styleType, style.intensity.map(e => -e)).color;\n            }\n            const [h, s, l, a] = stateColor[styleType] ? stateColor[styleType] : originalColor;\n            return `hsla(${h * 360},${s * 100}%,${l * 100}%, ${a || 1})`;\n        }));\n    });\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const fadeUnfadeSelection = (context, selectionSet, hasFaded, interaction) => {\n    const interactionConfig = { interaction, apply: hasFaded };\n    applyInteractionStyle(context, selectionSet, 'fade', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const focusUnfocusSelection = (context, selectionSet, isFocussed, interaction) => {\n    const interactionConfig = { interaction, apply: isFocussed };\n    applyInteractionStyle(context, selectionSet, 'focus', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} axes\n * @returns\n */\nexport const getAxesScales = (axes) => {\n    const [xAxis, yAxis] = [ENCODING.X, ENCODING.Y].map(e => axes[e]);\n    const [xScale, yScale] = [xAxis, yAxis].map(e => e && e.scale());\n    return {\n        xAxis,\n        yAxis,\n        xScale,\n        yScale\n    };\n};\n\n/**\n *\n *\n * @param {*} encoding\n * @param {*} fieldsConfig\n * @returns\n */\nexport const getEncodingFieldInf = (encoding, fieldsConfig) => {\n    const [xField, yField, x0Field, y0Field, colorField, shapeField, sizeField] =\n        [ENCODING.X, ENCODING.Y, ENCODING.X0, ENCODING.Y0, COLOR, SHAPE, SIZE].map(e => encoding[e] &&\n            encoding[e].field);\n\n    const [xFieldType, yFieldType] = [xField, yField, x0Field, y0Field].map(e => fieldsConfig[e] &&\n        fieldsConfig[e].def.type);\n\n    const [xFieldSubType, yFieldSubType] = [xField, yField].map(e => fieldsConfig[e] && (fieldsConfig[e].def.subtype ||\n        fieldsConfig[e].def.type));\n\n    const [xFieldIndex, yFieldIndex, x0FieldIndex, y0FieldIndex] = [xField, yField, x0Field, y0Field]\n        .map(e => fieldsConfig[e] && fieldsConfig[e].index);\n\n    return {\n        xField,\n        yField,\n        colorField,\n        shapeField,\n        sizeField,\n        x0Field,\n        y0Field,\n        xFieldType,\n        yFieldType,\n        xFieldSubType,\n        yFieldSubType,\n        xFieldIndex,\n        yFieldIndex,\n        x0FieldIndex,\n        y0FieldIndex\n    };\n};\n\n/**\n *\n *\n * @param {*} layerConfig\n * @param {*} fieldsConfig\n * @returns\n */\nexport const getValidTransform = (layerConfig, fieldsConfig, encodingFieldInf) => {\n    let transformType;\n    const {\n        transform\n    } = layerConfig;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const groupByField = transform.groupBy;\n    const groupByFieldMeasure = fieldsConfig[groupByField] && fieldsConfig[groupByField].def.type === FieldType.MEASURE;\n    transformType = transform.type;\n    if (!xField || !yField || groupByFieldMeasure || !groupByField || xFieldType === FieldType.DIMENSION &&\n        yFieldType === FieldType.DIMENSION) {\n        transformType = IDENTITY;\n    }\n    return transformType;\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} config\n * @param {*} transformType\n * @returns\n */\nexport const transformData = (dataModel, config, transformType, encodingFieldInf) => {\n    const data = dataModel.getData({ withUid: true });\n    const schema = data.schema;\n    const transform = config.transform;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const uniqueField = xFieldType === FieldType.MEASURE ? yField : xField;\n\n    return transformFactory(transformType)(schema, data.data, {\n        groupBy: transform.groupBy,\n        uniqueField,\n        sort: transform.sort || 'none',\n        offset: transform.offset,\n        value: yFieldType === FieldType.MEASURE ? yField : xField\n    }, data.uids);\n};\n\n/*\n * This method resolves the x, y, x0 and y0 values from the transformed data.\n * It also checks the type of transformed data for example, if it is a stacked data\n * then it fetches the y and y0 values from the stacked data.\n * @param {Array.<Array>} transformedData transformed data\n * @param {Object} fieldsConfig field definitions\n * @param {string} transformType type of transformed data - stack, group or identity.\n * @return {Array.<Object>} Normalized data\n*/\nexport const getNormalizedData = (transformedData, fieldsConfig, encodingFieldInf, transformType) => {\n    const transformedDataArr = transformType === IDENTITY ? [transformedData] : transformedData;\n    const {\n        xFieldType,\n        xFieldIndex,\n        yFieldIndex,\n        x0FieldIndex,\n        y0FieldIndex\n    } = encodingFieldInf;\n    const fieldsLen = Object.keys(fieldsConfig).length;\n    /**\n     * Returns normalized data from transformed data. It recursively traverses through\n     * the transformed data if there it is nested.\n     */\n    return transformedDataArr.map((data) => {\n        const values = transformType === GROUP ? data.values : data;\n        return values.map((d) => {\n            let pointObj = {};\n            let tuple;\n            if (transformType === STACK) {\n                tuple = d.data || [];\n                let y;\n                let y0;\n                let x;\n                let x0;\n                if (d[1] >= d[0]) {\n                    y = x0 = d[1];\n                    x = y0 = d[0];\n                } else {\n                    y = x0 = d[0];\n                    x = y0 = d[1];\n                }\n\n                pointObj = xFieldType === FieldType.MEASURE ? {\n                    x,\n                    x0,\n                    y: tuple[yFieldIndex],\n                    y0: tuple[yFieldIndex]\n                } : {\n                    x: tuple[xFieldIndex],\n                    x0: tuple[xFieldIndex],\n                    y,\n                    y0\n                };\n                pointObj._data = tuple;\n                pointObj._id = tuple[fieldsLen];\n            } else {\n                pointObj = {\n                    x: d[xFieldIndex],\n                    y: d[yFieldIndex],\n                    x0: d[x0FieldIndex],\n                    y0: d[y0FieldIndex]\n                };\n                pointObj._data = d;\n                pointObj._id = d[fieldsLen];\n            }\n            return pointObj;\n        });\n    });\n};\n\nexport const calculateDomainFromData = (data, encodingFieldInf, transformType) => {\n    const {\n        xFieldSubType,\n        yFieldSubType,\n        xField,\n        yField,\n        x0Field,\n        y0Field\n    } = encodingFieldInf;\n    const domains = {};\n    const yEnc = ENCODING.Y;\n    const xEnc = ENCODING.X;\n    if (xField) {\n        domains.x = getDomainFromData(data, x0Field || transformType === STACK ? [xEnc, ENCODING.X0] : [xEnc, xEnc],\n            xFieldSubType);\n    }\n    if (yField) {\n        domains.y = getDomainFromData(data, y0Field || transformType === STACK ? [ENCODING.Y0, ENCODING.Y] :\n            [yEnc, yEnc], yFieldSubType);\n    }\n\n    return domains;\n};\n\nexport const attachDataToVoronoi = (voronoi, points) => {\n    voronoi.data([].concat(...points).filter(d => d._id !== undefined).map((d) => {\n        const point = d.update;\n        return {\n            x: point.x,\n            y: point.y,\n            data: d\n        };\n    }));\n};\n\n/**\n *\n *\n * @param {*} target\n * @param {*} styles\n * @param {*} remove\n */\nexport const updateStyle = (target, styles, remove) => {\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            target.style(key, remove ? null : styles[key]);\n        }\n    }\n};\n\n/**\n *\n *\n * @param {*} mount\n * @param {*} context\n */\nexport const animateGroup = (mount, context) => {\n    let groupTransition;\n    let update;\n    const { transition, groupAnimateStyle } = context;\n    const { duration, effect, disabled } = transition;\n    if (groupAnimateStyle) {\n        setStyles(mount.node(), groupAnimateStyle.enter);\n        update = groupAnimateStyle.update;\n        if (!disabled) {\n            groupTransition = mount.transition()\n                .ease(easeFns[effect])\n                .duration(duration)\n                .on('end', function () {\n                    updateStyle(selectElement(this), update, true);\n                });\n        } else {\n            groupTransition = mount;\n        }\n        updateStyle(groupTransition, update);\n    }\n};\n\nexport const positionPoints = (context, points) => {\n    const positioner = context.encodingTransform();\n    if (positioner) {\n        return positioner(points, context, { smartLabel: context._dependencies.smartLabel });\n    }\n    return points;\n};\n","import { getValidTransform, getEncodingFieldInf } from '../helpers';\nimport * as PROPS from '../enums/props';\n\nexport const listenerMap = context => [\n    {\n        props: [PROPS.TRANSFORMED_DATA],\n        listener: fetch => fetch(PROPS.DATA, PROPS.CONFIG, (dataModel, config) => {\n            const dataModelValue = dataModel.value;\n            const configValue = config.value;\n            const encodingValue = configValue && configValue.encoding;\n            if (dataModelValue && encodingValue) {\n                const fieldsConfig = dataModelValue.getFieldsConfig();\n                const encodingFieldsInf = getEncodingFieldInf(encodingValue, fieldsConfig);\n                context.encodingFieldsInf(encodingFieldsInf);\n                context.transformType(getValidTransform(configValue, fieldsConfig, encodingFieldsInf));\n                return context.getTransformedData(dataModelValue, configValue, context.transformType(),\n                    encodingFieldsInf);\n            }\n            return null;\n        }),\n        type: 'computed'\n    },\n    {\n        props: [PROPS.NORMALIZED_DATA],\n        listener: fetch => fetch(PROPS.TRANSFORMED_DATA, (transformedData) => {\n            const transformedDataValue = transformedData.value;\n            if (transformedDataValue) {\n                const fieldsConfig = context.data().getFieldsConfig();\n                return context.getNormalizedData(transformedDataValue, fieldsConfig);\n            }\n            return null;\n        }),\n        type: 'computed'\n    },\n    {\n        props: [PROPS.DOMAIN],\n        listener: fetch => fetch(PROPS.NORMALIZED_DATA, (normalizedData) => {\n            const normalizedDataValue = normalizedData.value;\n            if (normalizedDataValue) {\n                return context.calculateDomainFromData(normalizedDataValue, context.encodingFieldsInf(),\n                    context.data().getFieldsConfig());\n            }\n            return null;\n        }),\n        type: 'computed'\n    },\n    {\n        props: [PROPS.MOUNT],\n        listener: (mountPoint) => {\n            if (mountPoint[1]) {\n                context.render(mountPoint[1]);\n                context.dependencies().throwback.commit('onlayerdraw', true);\n            }\n        },\n        type: 'registerChangeListener'\n    }\n];\n\n","export const DATA = 'data';\nexport const CONFIG = 'config';\nexport const MEASUREMENT = 'measurement';\nexport const AXES = 'axes';\nexport const NORMALIZED_DATA = 'normalizedData';\nexport const TRANSFORMED_DATA = 'transformedData';\nexport const DOMAIN = 'domain';\nexport const MOUNT = 'mount';\nexport const FIELDMAP = 'fieldMap';\n","import { mergeRecursive } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nexport const defaultOptions = {\n    [PROPS.CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig, context) => {\n                const constructor = context.constructor;\n                const newConf = mergeRecursive({}, constructor.defaultConfig());\n                return constructor.defaultPolicy(newConf, config);\n            }\n        }\n    },\n    [PROPS.DATA]: {\n        value: null,\n        meta: {\n            preset: (data, context) => {\n                if (context._cacheEnabled) {\n                    context._cachedData.push(data);\n                } else {\n                    context._cachedData = [data];\n                }\n            }\n        }\n    },\n    [PROPS.MOUNT]: {\n        value: null\n    },\n    [PROPS.AXES]: {\n        value: null\n    },\n    [PROPS.MEASUREMENT]: {\n        value: null\n    }\n};\n","import {\n    getUniqueId,\n    mergeRecursive,\n    Store,\n    FieldType,\n    selectElement,\n    ReservedFields,\n    registerListeners,\n    transactor,\n    clone\n} from 'muze-utils';\nimport { SimpleLayer } from '../simple-layer';\nimport * as PROPS from '../enums/props';\nimport {\n    transformData,\n    calculateDomainFromData,\n    getNormalizedData,\n    applyInteractionStyle\n} from '../helpers';\nimport { listenerMap } from './listener-map';\nimport { defaultOptions } from './default-options';\n\n/**\n * An abstract class which gives defination of common layer functionality like\n * - transfromation data for various {@link mode}\n * - calculating data domain\n * - linking dependent layers\n * - merging policy of configuration\n * - interaction sideffect helpers\n * - retrieving dom elements from data using id\n * - retrieving the physical dimensions of marks\n * - disposing layer\n *\n * Every layer has to extend base layer and give concrete definition.\n * This layer does not have any default visual. A new layer has to define the logic of `render` for rendering the\n * visuals\n *\n * @public\n * @class\n * @namespace Muze\n */\nexport default class BaseLayer extends SimpleLayer {\n\n    /**\n     * Creates a layer using a configuration and data.\n     *\n     * @public\n     *\n     * @param {DataModel} data Instance of DataModel to be used. This DataModel instance serves as the data for a layer.\n     * @param {Object} axes Axes instances to be used for rendering the layer. Axes are used for mapping data from\n     *      value to px.\n     * @param {SimpleAxis} axes.x X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {SimpleAxis} axes.y X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {ColorAxis} axes.color Axis for coloring a layer using color interpolators\n     * @param {ShapeAxis} axes.shape Axis for providing a shape\n     * @param {SizeAxis} axes.shape Axis for determining size of a mark using size interpolator\n     * @param {LayerConfig} config Configuration of the layer\n     * @param {Object} dependencies Dependencies of the layer\n     * @param {SmartLabel} smartLabel Smartlabel singleton instance\n     */\n    constructor (data, axes, config, dependencies) {\n        super();\n        this.store(new Store({\n            DATA: null\n        }));\n        transactor(this, defaultOptions, this.store().model);\n        this.data(data);\n        this.axes(axes);\n        this.config(config);\n        this.alias(this.constructor.formalName() + getUniqueId());\n        this.dependencies(dependencies);\n        this._points = [];\n        this._cachedData = [];\n        this._id = getUniqueId();\n        this._measurement = {};\n        registerListeners(this, listenerMap);\n    }\n\n    /**\n     * Creates a layer instance\n     * @return {BaseLayer} Instance of a layer\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Default configuration of the layer. This configuration gets merged to the user passed configuration using a\n     * plolicy. Base layer only returns part of configuraion, any layer overridding base layer should return its own\n     * configuration.\n     *\n     * @public\n     * @static\n     *\n     * @return {Object} Default configuration\n     */\n    static defaultConfig () {\n        return {\n            transform: {\n                type: 'identity'\n            }\n        };\n    }\n\n    /**\n     * Policy defines how user config gets merged to default config. The default policy here does a deep copy\n     * operation.\n     * Any policy which does more than deep copying should define the policy as a static member.\n     *\n     * @static\n     * @public\n     *\n     * @param {LayerConfig} conf Configuration with which the user config will be merged\n     * @param {LayerConfig} userConf Configuration given by the user\n     *\n     * @return {LayerConfig} Merged layer configuration\n     */\n    static defaultPolicy (conf, userConf) {\n        return mergeRecursive(conf, userConf);\n    }\n\n    /**\n     * Determines a name for a layer. This name of the layer is used in the input data to refer to this layer.\n     * ```\n     *  .layer([\n     *      mark: 'bar',\n     *      encoding: { ... }\n     *  ])\n     * ```\n     *\n     * @static\n     * @public\n     *\n     * @returns {string} name of layer\n     */\n    static formalName () {\n        return 'base';\n    }\n\n    store (...store) {\n        if (store.length) {\n            this._store = store[0];\n            return this;\n        }\n        return this._store;\n    }\n\n    encodingFieldsInf (...fieldsInf) {\n        if (fieldsInf.length) {\n            this._encodingFieldsInf = fieldsInf[0];\n            return this;\n        }\n        return this._encodingFieldsInf;\n    }\n\n    encodingTransform (...encodingTransform) {\n        if (encodingTransform.length) {\n            this._encodingTransform = encodingTransform[0];\n            return this;\n        }\n        return this._encodingTransform;\n    }\n\n    /**\n     * Provides a alias for a layer. Like it's possible to have same layer (like bar) multiple times, but among multiple\n     * layers of same type if one layer has to be referred, alias is used. If no alias is given then `formalName` is set\n     * as the alias name.\n     *\n     * @public\n     *\n     * If used as setter\n     * @param  {string} alias Name of the alias\n     * @return {BaseLayer} Instance of current base layer\n     *\n     * If used as getter\n     * @return {string} Alias of the current layer\n     */\n    alias (...params) {\n        if (params.length) {\n            this._alias = params[0];\n            return this;\n        }\n        return this._alias || this.constructor.formalName();\n    }\n\n    dependencies (...params) {\n        if (params.length) {\n            this._dependencies = params[0];\n            return this;\n        }\n        return this._dependencies;\n    }\n\n    enableCaching () {\n        this._cacheEnabled = true;\n        return this;\n    }\n\n    clearCaching () {\n        this._cacheEnabled = false;\n        return this.data(this._cachedData[0]);\n    }\n\n    /**\n     * Serialize the schema. Merge config is used for serialization.\n     *\n     * @public\n     *\n     * @return {LayerConfig} Serialized schema\n     */\n    serialize () {\n        return this.config();\n    }\n\n    /**\n     * Returns the unique identifier of this layer. Id is auto generated during the creation proceess of a schema.\n     *\n     * @return {string} id of the layer\n     */\n    id () {\n        return this._id;\n    }\n\n    /**\n     * Gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @public\n     *\n     * @param {DataModel} dataModel Instance of DataModel\n     * @param {Object} config Configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     */\n    getTransformedData (dataModel, config, transformType, encodingFieldsInf) {\n        return transformData(dataModel, config, transformType, encodingFieldsInf);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a nominal field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @param {Object} fieldsConfig Configuration of fields\n     * @return {Array} Domain values array.\n     */\n    calculateDomainFromData (data) {\n        let domains = {};\n        const isEmpty = this.data().isEmpty();\n\n        if (!isEmpty) {\n            domains = calculateDomainFromData(data, this.encodingFieldsInf(), this.transformType());\n        }\n        return domains;\n    }\n\n    shouldDrawAnchors () {\n        return false;\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getDataDomain (encodingType) {\n        const domains = this.store().get(PROPS.DOMAIN);\n        return encodingType !== undefined ? domains[encodingType] || [] : domains;\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getNormalizedData (transformedData, fieldsConfig) {\n        return getNormalizedData(transformedData, fieldsConfig, this.encodingFieldsInf(), this.transformType());\n    }\n\n    /**\n     * Abstract method for getting nearest point\n     * @return {BaseLayer} Instance of base layer\n     */\n    getNearestPoint () {\n        return null;\n    }\n\n    applyInteractionStyle (interactionType, selectionSet, apply) {\n        const interactionConfig = this.config().interaction || {};\n\n        const interactionStyles = interactionConfig[interactionType];\n        if (interactionStyles) {\n            applyInteractionStyle(this, selectionSet, interactionStyles, {\n                apply,\n                interactionType\n            });\n        }\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BaseLayer\n     */\n    transformType (...transformType) {\n        if (transformType.length) {\n            this._transformType = transformType[0];\n            return this;\n        }\n        return this._transformType;\n    }\n\n    /**\n     * Renders the layer\n     * @return {BaseLayer} Instance of the layer.\n     */\n    render () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BaseLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Disposes the entire layer\n     * @return {BaseLayer} Instance of layer.\n     */\n    remove () {\n        this.store().unsubscribeAll();\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     * Stores point in an object with key as the categorical value or temporal value\n     *\n     * @param {string} key categorical value or temporal value\n     * @param {Object} data Information of the data point\n     * @return {BarLayer} Instance of bar layer\n     */\n    cachePoint (key, data) {\n        if (key === null) {\n            return this;\n        }\n        const pointMap = this._pointMap;\n        !pointMap[key] && (pointMap[key] = []);\n        pointMap[key].push(data);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} dataProps\n     * @returns\n     * @memberof BaseLayer\n     */\n    dataProps (...dataProps) {\n        if (dataProps.length) {\n            this._dataProps = dataProps[0];\n            return this;\n        }\n        return this._dataProps;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} id\n     * @returns\n     * @memberof BaseLayer\n     */\n    getIdentifiersFromData (data) {\n        const schema = this.data().getData().schema;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const identifiers = [[], []];\n        const {\n                xFieldType,\n                yFieldType,\n                xField,\n                yField\n            } = this.encodingFieldsInf();\n\n        const [xMeasure, yMeasure] = [xFieldType, yFieldType].map(type => type === FieldType.MEASURE);\n        schema.forEach((d, i) => {\n            const name = d.name;\n            if (fieldsConfig[name].def.type === FieldType.DIMENSION) {\n                identifiers[0].push(name);\n                identifiers[1].push(data[i]);\n            }\n        });\n\n        if (xMeasure && yMeasure) {\n            const xMeasureIndex = fieldsConfig[xField].index;\n            const yMeasureIndex = fieldsConfig[yField].index;\n            identifiers[0].push(...[xField, yField]);\n            identifiers[1].push(...[data[xMeasureIndex], data[yMeasureIndex]]);\n        }\n        return identifiers;\n    }\n\n    getPlotSpan () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    getPlotPadding () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     * @returns\n     * @memberof BaseLayer\n     */\n    getPointsFromIdentifiers (identifiers, config = {}) {\n        const getAllAttrs = config.getAllAttrs;\n        const getBBox = config.getBBox;\n        if (!this.data()) {\n            return [];\n        }\n        const fieldNames = identifiers[0];\n        const values = identifiers.slice(1, identifiers.length);\n        const points = this._points;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPoints = [].concat(...points).filter((point) => {\n            const { _data, _id } = point;\n\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig) {\n                    return values.findIndex(d => d[idx] === _data[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === _id) !== -1;\n                } return false;\n            });\n        });\n        return getAllAttrs ? filteredPoints : filteredPoints.map((d) => {\n            const obj = clone(d);\n            if (getBBox) {\n                const update = obj.update || obj;\n                if (obj.size !== undefined) {\n                    const sizeVal = Math.sqrt(obj.size / Math.PI) * 2;\n                    update.width = sizeVal;\n                    update.height = sizeVal;\n                    update.x -= sizeVal / 2;\n                    update.y -= sizeVal / 2;\n                } else {\n                    if (update.width === undefined) {\n                        update.width = 2;\n                    }\n                    if (update.height === undefined) {\n                        update.height = 2;\n                    }\n                }\n            }\n\n            return obj.update || obj;\n        }).sort((a, b) => a.y - b.y);\n    }\n\n    getTransformedDataFromIdentifiers (identifiers) {\n        const normalizedData = this.store().get(PROPS.NORMALIZED_DATA);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            yField,\n            xField,\n            yFieldType,\n            xFieldType\n        } = this.encodingFieldsInf();\n        let measureIndex;\n        let enc;\n        if (xFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[xField].index;\n            enc = 'x';\n        } else if (yFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[yField].index;\n            enc = 'y';\n        }\n\n        const transformedData = [];\n        normalizedData.forEach((dataArr) => {\n            dataArr.forEach((dataObj) => {\n                const id = dataObj._id;\n                if (identifiers.indexOf(id) !== -1) {\n                    const transformedVal = dataObj[enc];\n                    const row = dataObj._data;\n                    const tuple = {};\n                    for (const key in fieldsConfig) {\n                        const index = fieldsConfig[key].index;\n                        tuple[key] = row[index];\n                        if (index === measureIndex) {\n                            tuple[key] = transformedVal;\n                        }\n                    }\n                    transformedData.push(tuple);\n                }\n            });\n        });\n\n        return [transformedData, this.data().getData().schema];\n    }\n\n    /**\n     *\n     *\n     * @param {*} set\n     * @returns\n     * @memberof BaseLayer\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(data => set.indexOf(data._id) !== -1);\n    }\n}\n","import {\n    selectElement,\n    makeElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\nimport { updateStyle } from '../../helpers';\n\nconst line = Symbols.line;\n\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nexport const drawLine = (context) => {\n    let filteredPoints;\n    const { container, points, interpolate, connectNullData, className, style } = context;\n    const mount = selectElement(container).attr('class', className);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const linepath = line()\n                .curve(curveInterpolatorFn)\n                .x(d => d.update.x)\n                .y(d => d.update.y)\n                .defined(d => d.update.y !== null);\n\n    filteredPoints = points;\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n\n    updateStyle(mount, style);\n    return makeElement(mount, 'path', [1])\n                    .transition()\n                    .duration(1000)\n                    .attr('d', linepath(filteredPoints))\n                    .style('fill-opacity', 0);\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-line',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: 'group'\n    },\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, -10, -10, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, -30, +30, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, -30, +30, 0]\n        }]\n    },\n    nearestPointThreshold: 20,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n\n","import {\n    Voronoi,\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    FieldType,\n    getObjProp\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawLine } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport * as PROPS from '../../enums/props';\nimport { attachDataToVoronoi, animateGroup, getLayerColor, positionPoints } from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * Line Layer creates a line plot.\n * Example :-\n * const config = {\n *  encoding = {\n *      x: {\n *          field: 'date'\n *      },\n *      y: {\n *          field: 'sales'\n *      }\n *  }\n * };\n * const linelayer = layerFactory.getLayer('line', [dataModel, axes, config]);\n * linelayer.render(container);\n * @class\n */\nexport default class LineLayer extends BaseLayer {\n\n    /**\n     *Creates an instance of LineLayer.\n     * @param {*} args\n     * @memberof LineLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof LineLayer\n     */\n    static formalName () {\n        return 'line';\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof LineLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Default configuration of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     * @returns\n     * @memberof LineLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     * Returns the draw method for line\n     * @return {Function} Draw method of line layer\n     */\n    getDrawFn () {\n        return drawLine;\n    }\n\n    /**\n     * Applies selection styles to the elements that fall within the selection set.\n     * @param {Array} selectionSet Array of tuple ids.\n     * @param {Object} config Configuration for selection.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    highlightPoint () {\n        return this;\n    }\n\n    /**\n     * Removes selection styles to the elements that fall within the selection set.\n     * @param {Array} selectionSet Array of tuple ids.\n     * @param {Object} config Configuration for selection.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    dehighlightPoint () {\n        return this;\n    }\n\n    focusSelection () {\n        return this;\n    }\n\n    focusOutSelection () {\n        return this;\n    }\n\n    fadeOutSelection () {\n        return this;\n    }\n\n    unfadeSelection () {\n        return this;\n    }\n\n    shouldDrawAnchors () {\n        return true;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @param {number} seriesIndex index of series\n     * @return {Array} Array of points\n     */\n    translatePoints (data, encodingFieldsInf, axes) {\n        let points = [];\n        const xAxis = axes.x;\n        const yAxis = axes.y;\n        const colorAxis = axes.color;\n        const encoding = this.config().encoding;\n        const { xFieldType, yFieldType } = encodingFieldsInf;\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const colorFieldIndex = colorField && fieldsConfig[colorField].index;\n        const style = {};\n        const meta = {};\n\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const { color, rawColor } = getLayerColor({ datum: d, index: i }, {\n                colorEncoding, colorAxis, colorFieldIndex });\n\n            style.stroke = color;\n            style['fill-opacity'] = 0;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n\n            const point = {\n                enter: {},\n                update: {\n                    x: xPx,\n                    y: d.y === null ? null : yPx\n                },\n                style,\n                _data: d._data,\n                _id: d._id,\n                rowId: d._id,\n                source: d._data,\n                meta\n            };\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the line plot\n     * @param {SVGElement} container svg element\n     * @return {LineLayer} instance of line layer\n     */\n    render (container) {\n        let points;\n        let seriesClassName;\n        let style;\n\n        const config = this.config();\n        const {\n            encoding,\n            interpolate,\n            className,\n            defClassName,\n            transition\n        } = config;\n        const store = this._store;\n        const normalizedData = store.get(PROPS.NORMALIZED_DATA);\n        const transformedData = store.get(PROPS.TRANSFORMED_DATA);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const keys = transformedData.map(d => d.key);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n        const colorField = encoding.color.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n        const colorFieldMeasure = fieldsConfig[colorField] && fieldsConfig[colorField].def.type === FieldType.MEASURE;\n\n        this._points = [];\n        this._pointMap = {};\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        makeElement(container, 'g', normalizedData, null, {\n            enter: (group) => {\n                animateGroup(group, {\n                    transition,\n                    groupAnimateStyle: {\n                        enter: {\n                            'stroke-opacity': 0,\n                            'fill-opacity': this.getPathStyle()['fill-opacity']\n                        },\n                        update: {\n                            'stroke-opacity': encoding.strokeOpacity.value\n                        }\n                    }\n                });\n            },\n            update: (group, dataArr, i) => {\n                points = this.translatePoints(dataArr, this.encodingFieldsInf(), axes, i);\n                this._points.push(points);\n                seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n\n                if (!colorFieldMeasure) {\n                    style = points[0].style;\n                }\n                this.getDrawFn()({\n                    container: group.node(),\n                    interpolate,\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: style || {},\n                    connectNullData: config.connectNullData\n                });\n            }\n        }, d => d[0]._data[colorFieldIndex] || d[0]._id);\n\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            stroke: color,\n            'fill-opacity': '0'\n        };\n    }\n\n    /**\n     * Gets the nearest point closest to the given position\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point information\n     */\n    getNearestPoint (x, y, config) {\n        let searchRadius = config.searchRadius;\n        const data = this.data();\n\n        if (!data || (data && data.isEmpty())) {\n            return null;\n        }\n\n        searchRadius = searchRadius !== undefined ? searchRadius : this.config().nearestPointThreshold;\n        const point = this._voronoi.find(x, y, searchRadius);\n        const dimensions = getObjProp(point, 'data', 'data', 'update');\n\n        if (point) {\n            const { _data, _id } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(_data, _id);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: 2,\n                    height: 2\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import {\n    easeFns,\n    selectElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\n\nconst area = Symbols.area;\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nconst /* istanbul ignore next */ drawArea = (params) => {\n    let filteredPoints;\n    const { container, points, style, transition, className, connectNullData, interpolate } = params;\n\n    const { effect: easeEffect, duration } = transition;\n    const mount = selectElement(container);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const selection = mount.selectAll('path').data([params.points]);\n    const [enterAreaPath, updateAreaPath] = ['enter', 'update'].map(e => area().curve(curveInterpolatorFn)\n                    .x(d => d[e].x)\n                    .y1(d => d[e].y)\n                    .y0(d => d[e].y0)\n                    .defined(d => d[e].y !== null\n            ));\n\n    filteredPoints = points;\n    mount.attr('class', className);\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n    const selectionEnter = selection.enter().append('path').attr('d', enterAreaPath(filteredPoints));\n    selection.merge(selectionEnter).transition().ease(easeFns[easeEffect])\n                    .duration(duration)\n                    .attr('d', updateAreaPath(filteredPoints))\n                    .each(function () {\n                        const element = selectElement(this);\n                        Object.keys(style).forEach(key => element.style(key, style[key]));\n                    });\n};\n\nexport default drawArea;\n","import { FieldType } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { LineLayer } from '../line';\nimport drawArea from './renderer';\nimport './styles.scss';\nimport { STACK, ENCODING } from '../../enums/constants';\nimport { getAxesScales, positionPoints, getLayerColor } from '../../helpers';\n\n/**\n * Area Layer creates a area plot.\n * @example\n * const config = {\n *  encoding = {\n *      x: {\n *          field: 'date'\n *      },\n *      // Top y value\n *      y: {\n *          field: 'maxTemp'\n *      },\n *      // Base y value\n *      y0: {\n *          field: 'minTemp\n *      }\n *  }\n * };\n * const areaLayer = layerFactory.getLayer('area', [dataModel, axes, config]);\n * areaLayer.render(container);\n * @class\n */\nexport default class AreaLayer extends LineLayer {\n    /** oation of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof AreaLayer\n     */\n    static formalName () {\n        return 'area';\n    }\n\n    /**\n     * Calculates the domain from data. It calls its parent class's method which is line layer\n     * to get the domain and overwrites the domain according to its need.\n     * @return {Array} Domain values\n     */\n    calculateDomainFromData (data, encodingFieldsInf, fieldsConfig) {\n        const domains = super.calculateDomainFromData(data, fieldsConfig);\n        [ENCODING.X, ENCODING.Y].forEach((type) => {\n            const { [`${type}FieldType`]: fieldType } = encodingFieldsInf;\n            if (fieldType === FieldType.MEASURE) {\n                domains[type][0] = Math.min(domains[type][0], 0);\n            }\n        });\n        return domains;\n    }\n\n    /**\n     * Returns the drawing method of this layer\n     * @return {Function} Draw method\n     */\n    getDrawFn () {\n        return drawArea;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @return {Array} Array of points\n     */\n    translatePoints (data, encodingFieldsInf, axes) {\n        let points = [];\n        const transformType = this.transformType();\n        const colorAxis = axes.color;\n        const encoding = this.config().encoding;\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const colorFieldIndex = colorField && fieldsConfig[colorField].index;\n        const { xField, yField, y0Field } = encodingFieldsInf;\n        const {\n            xAxis,\n            yAxis\n       } = getAxesScales(axes);\n\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const y0Px = (y0Field || transformType === STACK) ? yAxis.getScaleValue(d.y0) : yAxis.getScaleValue(0);\n            const { color, rawColor } = getLayerColor({ datum: d, index: i }, {\n                colorEncoding, colorAxis, colorFieldIndex });\n            const style = {};\n            const meta = {};\n            style.fill = color;\n            // style['fill-opacity'] = 0;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n            const point = {\n                enter: {\n                    x: xPx,\n                    y: d.y === null ? d.y : yAxis.getScaleValue(0),\n                    y0: d.y0 === null ? d.y0 : yAxis.getScaleValue(0)\n                },\n                update: {\n                    x: xPx,\n                    y: d.y === null ? d.y : yPx,\n                    y0: d.y0 === null ? d.y0 : y0Px\n                },\n                _id: d._id,\n                _data: d._data,\n                source: d._data,\n                rowId: d._id,\n                style,\n                meta\n            };\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            fill: color\n        };\n    }\n}\n\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-arc',\n    padding: { top: 1, bottom: 1, left: 1, right: 1 },\n    className: '',\n    minOuterRadius: 10,\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -20, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }]\n    },\n    height: 100,\n    width: 100,\n    sort: '',\n    cornerRadius: 0,\n    padAngle: 0,\n    padRadius: 0,\n    startAngle: 0,\n    endAngle: 360,\n    colors: ['#F44336', 'blue', 'green', 'yellow', 'orange', 'purple'],\n    transform: {\n        type: 'identity'\n    },\n    encoding: {\n        'stroke-width': {\n            value: '2px'\n        },\n        'stroke-linejoin': {\n            value: 'round'\n        },\n        angle: {\n            value: '1'\n        },\n        radius: {\n            value: '1'\n        },\n        opacity: {\n            value: '1'\n        },\n        color: {\n            value: '1'\n        },\n        shape: {\n            value: '1'\n        },\n        size: {\n            value: '1'\n        }\n    },\n    innerRadiusFixer: 10,\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-arc-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-arc-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-arc-selected`\n        }\n    }\n};\n\n","import { getObjProp, interpolator, FieldType } from 'muze-utils';\nimport { ANGLE, RADIUS, SIZE, COLOR } from '../../enums/constants';\n\n/**\n * Returns the range value from a value inside the domain\n *\n * @param {Object} domainValue Value whose range has to be returned\n * @return {number} range value\n * @memberof ArcLayer\n */\nexport const getRangeValue = (datum, range, domain, defaultRadius, sizeAxis) => {\n    let domainMultiplier = 1;\n    const {\n        outerRadiusValue,\n        sizeVal\n    } = datum;\n    const sizeAxisDomain = sizeAxis.domain();\n    const sizeMultiplier = sizeAxis.getSize(sizeVal) / (sizeAxisDomain ? sizeAxis.range()[1] : sizeAxis.config().value);\n\n    domainMultiplier *= (range[1] - range[0]) / (domain[1] - domain[0]);\n    const rangeVal = (range[0] + (outerRadiusValue - domain[0]) * domainMultiplier);\n    return (rangeVal || defaultRadius) * sizeMultiplier;\n};\n\n/**\n *\n *\n * @memberof ArcLayer\n */\nexport const getRadiusRange = (width, height, config) => {\n    const {\n        minOuterRadius,\n        innerRadius,\n        outerRadius,\n        innerRadiusFixer\n    } = config;\n\n    return [Math.max((innerRadius + innerRadiusFixer || 0), minOuterRadius), outerRadius || Math.min(height,\n        width) / 2];\n};\n\nconst getIndexedPoint = (prevData, currIndex) => {\n    if (!prevData[currIndex]) {\n        const prevArc = prevData[currIndex - 1];\n        const nextArc = prevData[currIndex + 1];\n        if (prevArc && nextArc) {\n            return {\n                startAngle: prevArc[0].endAngle,\n                endAngle: nextArc[0].startAngle\n            };\n        } else if (!nextArc) {\n            return {\n                startAngle: Math.PI * 2,\n                endAngle: Math.PI * 2\n            };\n        }\n    }\n    return { startAngle: 0, endAngle: 0 };\n};\n\n/**\n *\n *\n * @param {*} path\n * @param {*} b\n * @returns\n * @memberof ArcLayer\n */\nexport const tweenPie = (path, b, prevData) => {\n    const { datum } = b[0];\n    const uid = datum.uid;\n    const prevDatum = getObjProp(prevData, uid, 0) || getIndexedPoint(prevData, uid);\n    const prevObject = { startAngle: prevDatum.startAngle, endAngle: prevDatum.endAngle };\n\n    return function (t) {\n        return path(interpolator()(prevObject, datum)(t));\n    };\n};\n\nexport const getFieldIndices = (encoding, fieldsConfig) => {\n    const [angleField, radiusField, colorField, sizeField] = [ANGLE, RADIUS, COLOR, SIZE]\n            .map(e => encoding[e].field);\n    const [angleIndex, sizeIndex, radiusIndex] = [angleField, sizeField, radiusField]\n        .map((e) => {\n            const conf = fieldsConfig[e];\n            if (conf && conf.def.type === FieldType.MEASURE) {\n                return conf.index;\n            }\n            return null;\n        });\n    const colorIndex = getObjProp(fieldsConfig, colorField, 'index');\n    return {\n        angleIndex,\n        sizeIndex,\n        radiusIndex,\n        colorIndex\n    };\n};\n","import {\n    makeElement,\n    selectElement,\n    getQualifiedClassName,\n    isSimpleObject,\n    getDomainFromData,\n    Symbols\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { BaseLayer } from '../../base-layer';\nimport * as PROPS from '../../enums/props';\nimport { ASCENDING, OUTER_RADIUS_VALUE } from '../../enums/constants';\nimport { getRangeValue, getRadiusRange, tweenPie, getFieldIndices } from './arc-helper';\nimport './styles.scss';\n\nconst pie = Symbols.pie;\nconst arc = Symbols.arc;\n\n/**\n * Arc Layer creates a plot with polar coordinates\n * Example :-\n * const config = {\n *  height: 100,\n *  width: 100,\n *  startAngle: 0,\n * endAngle: Math.PI,\n * cornerRadius: 10,\n * minOuterRadius: 10,\n * outerRadius: 10,\n * innerRadius: 5,\n * padAngle: 2,\n * padRadius: 2,\n * colors: []\n * padding: {top: 10, bottom: 10, left: 10, right: 10},\n *  encoding = {\n *      angle: {\n *          field: 'date' //Maps to angle of arc\n *      },\n *      radius: {\n *          field: 'sales' // Maps to radius of arc\n *      }\n *  }\n * };\n * @class\n */\nexport default class ArcLayer extends BaseLayer {\n\n    constructor (data, axes, config, dependencies) {\n        super(data, axes, config, dependencies);\n        this._prevPieData = {};\n    }\n\n    /**\n     * returns the default configuration of the layer\n     *\n     * @static\n     * @return {Object} Default configuration for arc layer\n     * @memberof ArcLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof ArcLayer\n     */\n    static formalName () {\n        return 'arc';\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof ArcLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Transforms data in the appropriate data structure to be consumed by the layer for rendering\n     *\n     * @param {Object} data data model associated with the layer\n     * @param {Object} config configuration of the layer that contains encoding and other parameters\n     * @return {Object} Transformed pie data\n     * @memberof ArcLayer\n     */\n    getTransformedData (dataModel, config) {\n        let pieData = [];\n\n        const {\n            startAngle,\n            endAngle,\n            encoding,\n            sort,\n            minOuterRadius\n        } = config;\n        const prevData = this._store.get(PROPS.TRANSFORMED_DATA) || [];\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            angleIndex,\n            sizeIndex,\n            radiusIndex,\n            colorIndex\n        } = getFieldIndices(encoding, fieldsConfig);\n        const dataVal = dataModel.getData();\n        const data = dataVal.data;\n        const uids = dataVal.uids;\n\n        this._prevPieData = {};\n        prevData.forEach((e, index) => {\n            this._prevPieData[e.uid] = [e, index];\n        });\n        // Creating pie data using angle field provided. If the angle field is a dimension,\n        // all the angles will be equal(360/number of dimensions)\n        pieData = pie()\n            .startAngle((startAngle / 180) * Math.PI)\n            .endAngle(Math.PI * endAngle / 180)\n            .value(d => d[angleIndex] || 1);\n\n        sort.length && pieData.sort((a, b) => {\n            if (sort === ASCENDING) {\n                return a[radiusIndex] - b[radiusIndex];\n            } return b[radiusIndex] - a[radiusIndex];\n        });\n\n        const sizeVal = data.reduce((acc, d) => acc + (d[sizeIndex] || 0), 1);\n        // Adding the radius field values to each data point in pie data\n        pieData = pieData(data).map((d, i) => {\n            d.outerRadiusValue = data[i][radiusIndex] || minOuterRadius;\n            d.colorVal = data[i][colorIndex];\n            d.angleVal = data[i][angleIndex];\n            d.sizeVal = sizeVal;\n            d.uid = uids[i];\n            d.rowId = d.uid;\n            d.source = data[i];\n            return d;\n        });\n        return pieData;\n    }\n\n    /**\n     * Returns normalized data after transformation (it is the same in the case of pie layer)\n     *\n     * @param {Object} data transformed data\n     * @return {Object} normalized data\n     * @memberof ArcLayer\n     */\n    getNormalizedData (data) {\n        return data;\n    }\n\n    /**\n     *\n     *\n     * @param {Object} data\n     * @return {}\n     * @memberof ArcLayer\n     */\n    calculateDomainFromData (data) {\n        const domainKey = OUTER_RADIUS_VALUE;\n        return {\n            radius: getDomainFromData([data], [domainKey, domainKey])\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {Object} x\n     * @param {Object} y\n     * @return {}\n     * @memberof ArcLayer\n     */\n    getNearestPoint (x, y, config = {}) {\n        const dataPoint = config.data;\n        if (isSimpleObject(dataPoint)) {\n            const { data, uid } = dataPoint.datum;\n            return {\n                id: this.getIdentifiersFromData(data, uid),\n                layerId: this.id(),\n                showInPosition: true\n            };\n        }\n        return null;\n    }\n\n    /**\n     *\n     *\n     * @param {*} set\n     * @returns\n     * @memberof ArcLayer\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(d => set.indexOf(d.datum.uid) !== -1);\n    }\n\n    /**\n     *\n     *\n     * @param {Object} container\n     * @return {}\n     * @memberof ArcLayer\n     */\n    render (container) {\n        const {\n            height,\n            width\n        } = this.measurement();\n        const {\n            classPrefix,\n            defClassName,\n            minOuterRadius,\n            innerRadius,\n            outerRadius,\n            cornerRadius,\n            padAngle,\n            padRadius,\n            padding,\n            transition,\n            innerRadiusFixer\n       } = this.config();\n        const sizeAxis = this.axes().size;\n        const store = this._store;\n        const chartHeight = height - padding.top - padding.bottom;\n        const chartWidth = width - padding.left - padding.right;\n        const qualClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        // Sets range for radius\n        const range = getRadiusRange(chartWidth, chartHeight, {\n            minOuterRadius,\n            innerRadius,\n            outerRadius,\n            innerRadiusFixer\n        });\n        const colorAxis = this.axes().color;\n        const defaultRadius = outerRadius || Math.min(chartHeight, chartWidth) / 2;\n        const radiusDomain = store.get(PROPS.DOMAIN).radius;\n        // This returns a function that generates the arc path based on the datum provided\n        const path = arc()\n                .outerRadius(d => getRangeValue(d, range, radiusDomain, defaultRadius, sizeAxis))\n                .innerRadius(innerRadius ? Math.min(chartHeight / 2, chartWidth / 2, innerRadius) : 0)\n                .cornerRadius(cornerRadius)\n                .padAngle(padAngle)\n                .padRadius(padRadius);\n        // Creating the group that holds all the arcs\n        const g = makeElement(selectElement(container), 'g', [1], `${qualClassName[0]}-group`)\n                .classed(`${qualClassName[1]}-group`, true)\n                .attr('transform', `translate(${chartWidth / 2},${chartHeight / 2})`);\n        const tween = (elem) => {\n            makeElement(elem, 'path', (d, i) => [{\n                datum: d,\n                index: i,\n                meta: {\n                    originalColor: colorAxis.getRawColor(d.colorVal),\n                    stateColor: {},\n                    colorTransform: {}\n                }\n            }], `${qualClassName[0]}-path`)\n                            .attr('fill', d => colorAxis.getColor(d.datum.colorVal))\n                            .transition()\n                            .duration(transition.duration)\n                            .attrTween('d', (...params) => tweenPie(path, params, this._prevPieData))\n                            .attr('class', d => `${qualClassName[0]}-path ${qualClassName[1]}-path-${d.index}`);\n        };\n        // Creating groups for all the arcs present individually\n        makeElement(g, 'g', store.get(PROPS.TRANSFORMED_DATA), `${qualClassName[0]}`,\n            { update: tween }, d => d.uid)\n                        .attr('class', (d, i) => `${qualClassName[0]} ${qualClassName[1]}-${i}`)\n                        .call(tween);\n        return this;\n    }\n}\n\n","import {\n    setAttrs,\n    setStyles,\n    selectElement,\n    makeElement,\n    getSmartComputedStyle\n} from 'muze-utils';\n\n/**\n * Draws svg text in the specified container.\n * @param {SVGElement} container Container where labels will be appended.\n * @param {Array.<Object>} data Data of the elements.\n * @return {Selection} d3 selection of the elements.\n */\nconst drawText = (container, data, config, smartLabel) => {\n    const { backgroundPadding } = config;\n\n    const selection = selectElement(container).selectAll('g').data(data);\n\n    const selectionMerge = selection.enter().append('g')\n        .each(function (dataObj) {\n            setAttrs(this, dataObj.enter);\n        })\n        .merge(selection);\n    const style = getSmartComputedStyle(selectElement(container), config.className);\n    const fontSize = parseInt(style.fontSize, 10);\n\n    smartLabel.setStyle(style);\n    selectionMerge.each(function (dataObj) {\n        const element = selectElement(this);\n        const { update, background, text, color, textanchor } = dataObj;\n        if (config.backgroundEnabled) {\n            let diff;\n            const { width, height } = smartLabel.getOriSize(dataObj.text);\n            const backgroundEl = makeElement(element, 'rect', [1]);\n\n            if (textanchor === 'end') {\n                diff = width;\n            } else if (textanchor === 'start') {\n                diff = 0;\n            } else {\n                diff = width / 2;\n            }\n\n            setAttrs(backgroundEl.node(), {\n                x: update.x - diff - backgroundPadding / 2,\n                y: update.y - fontSize - backgroundPadding / 2,\n                width: width + backgroundPadding,\n                height: height + backgroundPadding\n            });\n            background && setStyles(backgroundEl, {\n                background\n            });\n        }\n        const textEl = makeElement(element, 'text', d => [d]).text(text);\n        const textNode = textEl.node();\n        color && setStyles(textNode, {\n            fill: color\n        });\n        setAttrs(textNode, update);\n        textEl.attr('text-anchor', textanchor);\n    });\n    selection.exit().remove();\n    return selection;\n};\n\nexport default drawText;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-text',\n    classPrefix: CLASSPREFIX,\n    className: '',\n    transform: {\n        type: 'identity'\n    },\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, -10, -10, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, -30, +30, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, -30, +30, 0]\n        }]\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: {},\n        text: {\n            value: ''\n        },\n        background: {\n            padding: 10,\n            enabled: false\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-text-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-text-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-text-selected`\n        }\n    }\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    setStyles,\n    createElements\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawText from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getLayerColor, positionPoints } from '../../helpers';\nimport { TEXT_ANCHOR_MIDDLE, ENCODING } from '../../enums/constants';\nimport * as PROPS from '../../enums/props';\n\nimport './styles.scss';\n\n/**\n * Text Layer creates labels. It needs to be passed a data table, axes and configuration\n * of the layer.\n * Example :-\n * const textLayer = layerFactory.getLayer('text', [dataModel, axes, config]);\n * textLayer.render(container);\n * @class\n */\nexport default class TextLayer extends BaseLayer {\n    /**\n     * Returns the default configuration of the text layer\n     * @return {Object} Default configuration of the text layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'text';\n    }\n\n    elemType () {\n        return 'text';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes) {\n        let points;\n        const colorAxis = axes.color;\n        const textEncoding = encoding.text;\n        const { field: textField, value, formatter: textFormatter } = textEncoding;\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding && colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const backgroundField = encoding.background.field;\n        const backgroundFieldIndex = backgroundField ? fieldsConfig[backgroundField].index : -1;\n        const colorFieldIndex = colorField ? fieldsConfig[colorField].index : -1;\n        const textFieldIndex = textField ? fieldsConfig[textField] && fieldsConfig[textField].index : -1;\n        const xEnc = ENCODING.X;\n        const yEnc = ENCODING.Y;\n\n        points = data.map((d, i) => {\n            const row = d._data;\n            const textValue = textField ? row[textFieldIndex] : value;\n\n            const [xPx, yPx] = [xEnc, yEnc].map(type => (axes[type] ? axes[type].getScaleValue(d[type]) +\n                    axes[type].getUnitWidth() / 2 : 0));\n\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            return {\n                enter: {},\n                update: {\n                    x: xPx,\n                    y: yPx\n                },\n                text: textFormatter ? textFormatter(textValue) : textValue,\n                color,\n                background: colorAxis.getColor(d._data[backgroundFieldIndex]),\n                meta: {\n                    stateColor: {},\n                    originalColor: rawColor,\n                    colorTransform: {}\n                },\n                _data: row,\n                _id: d._id,\n                source: d._data,\n                rowId: d._id\n            };\n        });\n        points = positionPoints(this, points);\n\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {textLayer} Instance of text layer\n     */\n    render (container) {\n        let points;\n        const config = this.config();\n        const encoding = config.encoding;\n        const normalizedData = this._store.get(PROPS.NORMALIZED_DATA);\n        const className = config.className;\n        const backgroundPadding = encoding.background.padding;\n        const backgroundEnabled = encoding.background.enabled || encoding.background.field;\n        const qualifiedClassName = getQualifiedClassName(config.defClassName, this.id(), config.classPrefix);\n        const axes = this.axes();\n        const containerSelection = selectElement(container);\n\n        containerSelection.classed(`${qualifiedClassName.join(' ')} ${className}`, true);\n        createElements({\n            data: normalizedData,\n            append: 'g',\n            selector: 'g',\n            container,\n            each: (dataArr, group, i) => {\n                const node = group.node();\n                points = this.translatePoints(dataArr, encoding, axes, i);\n                setStyles(node, {\n                    'text-anchor': TEXT_ANCHOR_MIDDLE\n                });\n                drawText(node, points, {\n                    className: qualifiedClassName[0],\n                    backgroundPadding,\n                    backgroundEnabled\n                }, this._dependencies.smartLabel);\n            }\n        });\n        return this;\n    }\n}\n","/* global Element, document  */\nimport {\n    makeElement,\n    selectElement,\n    easeFns,\n    objectIterator,\n    getSymbol\n} from 'muze-utils';\n\n/**\n *\n *\n * @param {*} str\n * @returns\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem) {\n    const groupElement = selectElement(elem);\n    const { shape, size, update } = d;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        if (newShape.nodeName === 'path' || newShape.nodeName === 'image') {\n            shapeElement.attr('transform', `scale(${size / 100})`);\n        } else {\n            shapeElement.attr('height', size);\n            shapeElement.attr('width', size);\n        }\n        shapeElement.attr('x', -size / 2);\n        shapeElement.attr('y', -size / 2);\n        selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = getSymbol(shape).size(size)(update);\n        }\n        makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    } else {\n        d.shape = 'circle';\n        createShape(d, elem);\n    }\n};\n\n/**\n * Draws symbols using d3 symbol api\n * @param {Object} params Contains the svg container, points and other symbol related attributes.\n */\n/* istanbul ignore next */ const drawSymbols = (params) => {\n    let mergedGroups;\n    const { container, points, transition, className } = params;\n    const { duration, effect, disabled } = transition;\n    const mount = selectElement(container);\n\n    mount.attr('class', className);\n    const symbolGroups = mount.selectAll('g').data(points, params.keyFn);\n    const symbolEnter = symbolGroups.enter().append('g').attr('transform', d => `translate(${d.enter.x},${d.enter.y})`);\n    mergedGroups = symbolGroups.merge(symbolEnter)\n                    .each(function (d) {\n                        createShape(d, this);\n                    });\n    mergedGroups = disabled ? mergedGroups : mergedGroups.transition().duration(disabled ? 0 : transition.duration);\n    mergedGroups.attr('transform', d => `translate(${d.update.x},${d.update.y})`)\n                    .each(function (d) {\n                        const style = d.style;\n                        const element = selectElement(this);\n                        objectIterator(style, key => element.style(key, style[key]));\n                        element.attr('class', `${className}`);\n                        element.classed(d.className, true);\n                    });\n\n    const exitGroups = symbolGroups.exit();\n    if (!disabled) {\n        exitGroups.transition().ease(easeFns[effect])\n                        .duration(duration)\n                        .on('end', function () {\n                            selectElement(this).remove();\n                        })\n                        .style('fill-opacity', 0)\n                        .style('stroke-opacity', 0);\n    } else {\n        exitGroups.remove();\n    }\n};\n\nexport default drawSymbols;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-point',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    defColorStyle: 'stroke',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -20, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [-20, -80, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +50, 0]\n        }\n        ]\n    },\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        size: {\n            value: 30\n        },\n        color: { },\n        shape: {\n            value: 'circle'\n        },\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    shapes: ['circle', 'cross', 'diamond', 'square', 'star', 'wye', 'triangle'],\n    sizes: [20, 30, 40, 50, 60, 70]\n};\n","import {\n    Voronoi,\n    selectElement,\n    getQualifiedClassName,\n    makeElement,\n    FieldType\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawSymbols from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport * as PROPS from '../../enums/props';\nimport { attachDataToVoronoi, getLayerColor, positionPoints } from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * Point Layer creates point. Itt needs to be passed a data table, axes and configuration\n * of the layer.\n * Example :-\n * const pointLayer = layerFactory.getLayer('point', [data, axes, config]);\n * pointLayer.render(container);\n * @class\n */\nexport default class PointLayer extends BaseLayer {\n\n    /**\n     *Creates an instance of PointLayer.\n     * @param {*} args\n     * @memberof PointLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof PointLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Returns the default configuration of the point layer\n     * @return {Object} Default configuration of the point layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof PointLayer\n     */\n    static formalName () {\n        return 'point';\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof PointLayer\n     */\n    static drawFn () {\n        return drawSymbols;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes) {\n        let points = [];\n        const {\n            size: sizeEncoding,\n            shape: shapeEncoding,\n            color: colorEncoding,\n            x,\n            y\n        } = encoding;\n        const sizeField = sizeEncoding.field;\n        const shapeField = shapeEncoding.field;\n        const xField = x.field;\n        const yField = y.field;\n        const { size: sizeAxis, shape: shapeAxis } = axes;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorField = colorEncoding && colorEncoding.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n        const measurement = this._store.get(PROPS.MEASUREMENT);\n        const shapeFieldIndex = fieldsConfig[shapeField] && fieldsConfig[shapeField].index;\n        const sizeFieldIndex = fieldsConfig[sizeField] && fieldsConfig[sizeField].index;\n        const colorAxis = axes.color;\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d._data;\n            const size = sizeAxis.getSize(row[sizeFieldIndex]);\n            const shape = shapeAxis.getShape(row[shapeFieldIndex]);\n\n            const [xPx, yPx] = [ENCODING.X, ENCODING.Y].map((type) => {\n                const bandwidth = axes[type].getUnitWidth() / 2;\n                const value = d[type] === null ? undefined : d[type];\n                const measure = type === ENCODING.X ? measurement.width : measurement.height;\n                return !encoding[type].field ? measure / 2 : axes[type].getScaleValue(value) + bandwidth;\n            });\n\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            const style = {\n                fill: color,\n                stroke: color\n            };\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {\n                        x: xPx,\n                        y: yPx\n                    },\n                    update: {\n                        x: xPx,\n                        y: yPx\n                    },\n                    shape,\n                    size: Math.abs(size),\n                    meta: {\n                        stateColor: {},\n                        originalColor: rawColor,\n                        colorTransform: {}\n                    },\n                    style,\n                    _data: row,\n                    _id: d._id,\n                    source: d._data,\n                    rowId: d._id\n                };\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {BarLayer} Instance of bar layer\n     */\n    render (container) {\n        let points;\n        let maxSize = 0;\n        let seriesClassName;\n        const config = this.config();\n        const { transition, encoding, className, defClassName, classPrefix } = config;\n        const axes = this.axes();\n        const normalizedData = this._store.get(PROPS.NORMALIZED_DATA);\n        const containerSelection = selectElement(container);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        this._points = [];\n        this._pointMap = {};\n\n        containerSelection.classed(qualifiedClassName.join(' '), true).classed(className, true);\n        makeElement(container, 'g', normalizedData, null, {\n            update: (group, dataArr, i) => {\n                points = this.translatePoints(dataArr, encoding, axes, i);\n                this._points.push(points);\n                maxSize = Math.max(maxSize, ...points.map(d => d.size));\n                seriesClassName = `${qualifiedClassName[0]}`;\n                this.constructor.drawFn()({\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    keyFn: d => d._id\n                });\n            }\n        });\n        this._maxSize = Math.sqrt(maxSize / Math.PI) * 2;\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    /**\n     * Gets the nearest point from a position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Point details\n     */\n    getNearestPoint (x, y) {\n        const distanceLimit = this._maxSize;\n\n        if (!this.data()) {\n            return null;\n        }\n\n        const point = this._voronoi.find(x, y, distanceLimit);\n        const dimensions = point && point.data.data.update;\n        const radius = point ? Math.sqrt(point.data.data.size / Math.PI) : 0;\n\n        if (point) {\n            const { _data, _id } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(_data, _id);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: radius,\n                    height: radius\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import { makeElement, easeFns } from 'muze-utils';\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} datum\n * @param {*} index\n * @param {*} context\n */\nconst transitionBars = (elem, datum, index, context) => {\n    const { transition, classnameFn } = context;\n    const { duration, disabled, effect } = transition;\n    const selection = elem;\n    const selTransition = disabled ? selection : selection.transition().duration(duration).ease(easeFns[effect]);\n    const update = datum.update || datum;\n    const updateStyle = datum.style || {};\n    classnameFn && selection.classed(classnameFn(datum, index), true);\n    Object.entries(update).forEach(attr => (!isNaN(attr[1]) && selTransition.attr(attr[0], attr[1])));\n    Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n};\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} d\n */\nconst barEnterFn = (elem, d) => {\n    const selection = elem;\n    const enter = d.enter || {};\n    Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n};\n\n/**\n * Draws rectangles by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Bar Selection\n */\n/* istanbul ignore next */ export const drawRects = (params) => {\n    const { points, container, keyFn } = params;\n    const updateFns = {\n        enter (elem, d) { barEnterFn(elem, d); },\n        update (elem, d, i) { transitionBars(elem, d, i, params); }\n    };\n    return makeElement(container, 'rect', points, null, updateFns, keyFn);\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-bar',\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -20, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }]\n    },\n    transform: {\n        type: 'stack'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    innerPadding: 0.1,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        x0: {},\n        y0: {}\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-bar-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-bar-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-bar-selected`\n        }\n    }\n};\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { Symbols } from 'muze-utils';\nimport * as AxisOrientation from '../enums/axis-orientation';\n\n/**\n * @module Axis\n * This file exports constants that are used to reference axis orientations\n * in a consistent manner.\n */\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\n\n/**\n  * This object is used to associate the axis orientation with the d3 class\n  * used to represent that axis.\n  */\nexport const axisOrientationMap = {\n    [AxisOrientation.LEFT]: Symbols.axisLeft,\n    [AxisOrientation.BOTTOM]: Symbols.axisBottom,\n    [AxisOrientation.RIGHT]: Symbols.axisRight,\n    [AxisOrientation.TOP]: Symbols.axisTop\n};\n","/**\n * @module axis\n * This file exports constants used to reference scale type\n * consistently throughout the project.\n */\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const TIME = 'temporal';\nexport const COLOR = 'color';\nexport const ORDINAL = 'ordinal';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\nexport const LOG = 'log';\nexport const POW = 'pow';\nexport const IDENTITY = 'identity';\nexport const SEQUENTIAL = 'sequential';\nexport const THRESHOLD = 'threshold';\n","export const CLASSPREFIX = 'muze';\n\nexport const CONTINOUS = 'continous';\nexport const DISCRETE = 'discrete';\nexport const SEQUENTIAL = 'sequential';\nexport const ORDINAL = 'ordinal';\nexport const LINEAR = 'linear';\nexport const THRESHOLD = 'threshold';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\n\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\n\nexport const DOMAIN = 'domain';\nexport const BAND = 'band';\nexport const HIDDEN = 'hidden';\nexport const NUMBER = 'number';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\n\n","import { scales, colorSchemes } from 'muze-utils';\n\nimport {\n    SEQUENTIAL,\n    ORDINAL,\n    LINEAR,\n    CONTINOUS,\n    THRESHOLD,\n    QUANTIZE\n} from './enums/constants';\n\nimport * as ScaleType from './enums/scale-type';\n\nconst {\n    scaleLinear,\n    scaleThreshold,\n    scaleLog,\n    scalePow,\n    scaleIdentity,\n    scaleOrdinal,\n    scaleSequential,\n    scaleQuantize,\n    scaleQuantile,\n    schemeCategory10,\n    schemeCategory20,\n    schemeCategory20b,\n    scaleBand,\n    scaleTime\n} = scales;\nexport const scaleMap = {\n    [ScaleType.LINEAR]: scaleLinear,\n    [ScaleType.BAND]: scaleBand,\n    [ScaleType.QUANTIZE]: scaleQuantize,\n    [ScaleType.QUANTILE]: scaleQuantile,\n    [ScaleType.THRESHOLD]: scaleThreshold,\n    [ScaleType.SEQUENTIAL]: scaleSequential,\n    [ScaleType.LOG]: scaleLog,\n    [ScaleType.POW]: scalePow,\n    [ScaleType.IDENTITY]: scaleIdentity,\n    [ScaleType.TIME]: scaleTime,\n    [ScaleType.COLOR]: scaleLinear,\n    [ScaleType.ORDINAL]: scaleOrdinal\n};\nexport const SCHEMES = {\n    SCHEME1: schemeCategory10,\n    SCHEME2: schemeCategory20,\n    SCHEME3: schemeCategory20b\n};\n\n/**\n * Accepts a scheme in a string format and returns the scale from d3-scale-chromatic\n *\n * @export\n * @param {string} scheme a string representing the kind of scheme for the color axis\n * @return {Object} The corresponding scale from a scheme type from d3 chromatic scale\n */\nexport function getScheme (scheme) {\n    if (scheme[0] === 'i') {\n        return scaleSequential(colorSchemes[scheme]);\n    }\n    return scaleOrdinal(colorSchemes[scheme]);\n}\n\n/**\n *\n *\n * @export\n * @param {*} scheme\n * @returns\n */\nexport function getSchemeType (scheme) {\n    let schemeType = '';\n    if (scheme && typeof (scheme) === 'string') {\n        schemeType = scheme[0] === 'i' ? SEQUENTIAL : ORDINAL;\n    } else {\n        schemeType = ORDINAL;\n    }\n    return schemeType;\n}\n\n/**\n * This function is used to create a scale that is assigned to\n * an instance of axis.\n *\n * @export\n * @param {Object} params the input parameters to create a Scale object\n * @param {string} params.type the type of scale\n * @param {Array} params.range the range of scale\n * @return {Object} instance of scale\n */\nexport function createScale (params) {\n    if (!params.type || !scaleMap[params.type]) {\n        throw new Error(`${params.type} is not a valid scale type`);\n    }\n    if (!Array.isArray(params.range)) {\n        throw new Error('range parameter must be an array');\n    }\n    let scaleFactory = null;\n    const range = params.range;\n    // @todo: do it using scale decorator\n    if (params.type === LINEAR && params.interpolator) {\n        scaleFactory = scaleMap[params.interpolator];\n        if (params.interpolator === ScaleType.POW) {\n            return scaleFactory().range(range).exponent(params.exponent);\n        } else if (params.interpolator === ScaleType.LOG) {\n            return scaleFactory().range(range).base([params.base]);\n        }\n    } else {\n        scaleFactory = scaleMap[params.type];\n    }\n\n    if (params.type === QUANTIZE) {\n        scaleFactory().nice();\n    }\n    return scaleFactory().range(range);\n}\n\n/**\n * This method is used to update the range of a scale\n * so that the core module can remain agnostic of the d3\n * scale api.\n *\n * @export\n * @param {Scale} scale Instance of d3 Scale.\n * @param {Array} range new range of the scale.\n * @return {Scale} Updated scale.\n */\nexport function updateScaleRange (scale, range) {\n    return scale.range(range);\n}\n\n/**\n *\n *\n * @export\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} steps\n * @returns\n */\nexport function getScaleType (domainType, rangeType, steps) {\n    if (rangeType === CONTINOUS) {\n        return LINEAR;\n    }\n    if (domainType === CONTINOUS) {\n        if (steps instanceof Array) {\n            return THRESHOLD;\n        }\n        return QUANTIZE;\n    }\n    return ORDINAL;\n}\n","import { getUniqueId } from 'muze-utils';\nimport { CLASSPREFIX } from '../enums/constants';\n\n/**\n *\n *\n */\nexport const defaultConfig = {\n    id: getUniqueId(),\n    axisName: {\n        defClassName: 'axis-name'\n    },\n    axisNamePadding: 12,\n    base: 10,\n    classPrefix: CLASSPREFIX,\n    className: `${CLASSPREFIX}-axis`,\n    exponent: 1,\n    interpolator: 'linear',\n    fixedBaseline: true,\n    labels: {\n        rotation: 0,\n        smartTicks: false\n    },\n    orientation: 'left',\n    maxHeight: 50, // @todo: height and width wont be hardcoded\n    maxWidth: 40,\n    numberFormat: val => val,\n    padding: 0.3,\n    nice: true,\n    numberOfTicks: 10,\n    rotate: false,\n    show: true,\n    showAxisName: true,\n    showInnerTicks: null,\n    showOuterTicks: null,\n    style: {},\n    type: 'linear',\n    tickFormat: null,\n    tickValues: null,\n    xOffset: undefined,\n    yOffset: undefined\n};\n\n","/**\n * This file exports functionality that is used to render axis.\n */\nimport { selectElement, makeElement, angleToRadian } from 'muze-utils';\nimport * as AxisOrientation from './enums/axis-orientation';\nimport { LINEAR, HIDDEN, BOTTOM, TOP } from './enums/constants';\n\n/**\n *\n *\n * @param {*} instance\n * @param {*} container\n * @param {*} labelManager\n * @param {*} config\n */\nconst rotateAxis = (instance, tickText, labelManager, config) => {\n    const axis = instance.axis();\n    const scale = instance.scale();\n    const {\n        orientation,\n        labels,\n        fixedBaseline,\n        type\n     } = config;\n    let { rotation } = labels;\n\n    const tickSize = instance.getTickSize();\n\n    tickText.each(function (datum, index) {\n        let yShift;\n        let xShift;\n        const tickFormatter = axis.tickFormat() ? axis.tickFormat : scale.tickFormat;\n        const temp = tickFormatter ? tickFormatter()(datum) : datum;\n\n        datum = temp.toString();\n\n        const tickLabelDim = labelManager.getOriSize(datum);\n        const width = tickLabelDim.width * 0.5;\n        const height = tickLabelDim.height * 0.5;\n\n        if (rotation < 0) {\n            rotation = 360 + rotation;\n        }\n\n        const quadrant = 4 - Math.floor(rotation / 90);\n        const rotationNormalizer = ((quadrant % 2 === 0) ? rotation : 180 * Math.ceil(rotation / 180) - rotation) % 180;\n\n        yShift = Math.sqrt(height ** 2 + width ** 2) * Math.sin(angleToRadian(rotationNormalizer));\n\n        if ((quadrant === 3 || quadrant === 2) && !(rotationNormalizer > 67.5 && rotationNormalizer <= 90)) {\n            yShift += height * 2;\n        }\n        xShift = width;\n\n        if (rotation === 90) {\n            xShift = height;\n        } else if (rotation === 270) {\n            xShift = -height;\n        } else {\n            xShift = 0;\n        }\n\n        if (orientation === AxisOrientation.TOP) {\n            xShift = (index === 0 && fixedBaseline && type === LINEAR) ? xShift + xShift / 2 : xShift;\n            selectElement(this)\n                            .attr('transform', `translate(${-xShift + tickSize} \n                                ${-yShift - tickSize}) rotate(${rotation})`);\n        } else {\n            xShift = (index === 0 && fixedBaseline && type === LINEAR) ? xShift - xShift / 2 : xShift;\n            selectElement(this)\n                            .attr('transform', `translate(${xShift - tickSize} \n                                ${yShift + tickSize}) rotate(${rotation})`);\n        }\n    });\n    return tickText;\n};\n\n/**\n *\n *\n * @param {*} tickText\n * @param {*} axisInstance\n */\nconst changeTickOrientation = (selectContainer, axisInstance, tickSize) => {\n    const {\n        _smartTicks\n    } = axisInstance;\n    const config = axisInstance.config();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const {\n        labels,\n        orientation\n    } = config;\n    const {\n        rotation,\n        smartTicks: isSmartTicks\n    } = labels;\n\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.selectAll('tspan').remove();\n\n   // rotate labels if not enough space is available\n    if (rotation !== 0 && isSmartTicks === false && (orientation === TOP || orientation === BOTTOM)) {\n        rotateAxis(axisInstance, tickText, labelManager, config);\n    } else if (rotation === 0 && isSmartTicks === false) {\n        tickText.attr('transform', '');\n    } else {\n        tickText.attr('y', 0)\n                        .attr('x', 0)\n                        .text('');\n        const tspan = makeElement(tickText, 'tspan', (d, i) => _smartTicks[i].lines, 'smart-text');\n        tspan.attr('dy', '0')\n                        .style('opacity', '0')\n                        .transition()\n                        .duration(1000)\n                        .attr('dy', (d, i) => {\n                            if (orientation === BOTTOM || i !== 0) {\n                                return _smartTicks[i].oriTextHeight;\n                            }\n                            return -_smartTicks[i].oriTextHeight * (_smartTicks[i].lines.length - 1) - tickSize;\n                        })\n                        .style('opacity', 1)\n                        .attr('x', 0)\n                        .text(e => e);\n    }\n\n    return tickText;\n};\n\nconst setFixedBaseline = (axisInstance) => {\n    const {\n        fixedBaseline\n    } = axisInstance.config();\n    if (fixedBaseline) {\n        axisInstance.setFixedBaseline();\n    }\n};\n\n/**\n *\n *\n * @param {*} textNode\n * @param {*} orientation\n * @param {*} measures\n */\nconst setAxisNamePos = (textNode, orientation, measures) => {\n    const {\n        axisNameHeight,\n        yOffset,\n        labelOffset,\n        availableSpace\n    } = measures;\n    switch (orientation) {\n    case AxisOrientation.LEFT:\n        textNode.attr('transform',\n            `translate(${-(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(-90)`);\n        break;\n    case AxisOrientation.RIGHT:\n        textNode.attr('transform',\n             `translate(${(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(90)`);\n        break;\n    case AxisOrientation.TOP:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${-availableSpace.height + axisNameHeight})`);\n        break;\n    case AxisOrientation.BOTTOM:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${availableSpace.height - axisNameHeight / 2})`);\n        break;\n    default:\n    }\n    return textNode;\n};\n\n/**\n * This method is used to render the axis inside an\n * svg container.\n *\n * @export\n * @param {Object} axisInstance the nput object required to render axis\n * @param {string} axisInstance.orientation the orientation of axis\n * @param {Object} axisInstance.scale instance of d3 scale\n * @param {SVGElement} axisInstance.container the container in which to render\n */\nexport function renderAxis (axisInstance) {\n    const config = axisInstance.config();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const mount = axisInstance.mount();\n    const range = axisInstance.range();\n    const axis = axisInstance.axis();\n    const {\n        _axisNameStyle,\n        _tickLabelStyle\n     } = axisInstance;\n    const {\n        orientation,\n        name,\n        labels,\n        xOffset,\n        yOffset,\n        axisNamePadding,\n        className,\n        showAxisName,\n        show,\n        id,\n        interpolator,\n        classPrefix\n     } = config;\n\n    if (!show) {\n        return;\n    }\n    const tickSize = axisInstance.getTickSize();\n\n    const selectContainer = makeElement(selectElement(mount), 'g', [axisInstance], `${className}`, {},\n        key => key.config().id);\n\n    // Set style for tick labels\n    labelManager.setStyle(_tickLabelStyle);\n\n    // @to-do: Need to write a configuration override using decorator pattern\n    if (interpolator === 'linear') {\n    // Set ticks for the axis\n        axisInstance.setTickValues();\n    }\n\n    // Get range(length of range)\n    const availableSpace = Math.abs(range[0] - range[1]);\n\n    // Get width and height taken by axis labels\n    const labelProps = axisInstance.axisDimensions().tickLabelDim;\n\n    // Draw axis ticks\n    selectContainer.attr('transform', `translate(${xOffset},${yOffset})`);\n    setFixedBaseline(axisInstance);\n    if (labels.smartTicks === false) {\n        selectContainer.transition()\n                        .duration(1000).call(axis);\n    } else {\n        selectContainer.call(axis);\n    }\n    selectContainer.selectAll('.tick').classed(`${classPrefix}-ticks`, true);\n    selectContainer.selectAll('.tick line').classed(`${classPrefix}-tick-lines`, true);\n\n    // Set classes for ticks\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.classed(`${classPrefix}-ticks`, true)\n                    .classed(`${classPrefix}-ticks-${id}`, true);\n    changeTickOrientation(selectContainer, axisInstance, tickSize);\n\n    // Create axis name\n    const textNode = makeElement(selectContainer, 'text', [name], `${classPrefix}-axis-name`)\n                    .attr('text-anchor', 'middle')\n                    .classed(`${classPrefix}-axis-name-${id}`, true)\n                    .text(d => d);\n\n    // Hide axis name if show is off\n    textNode.classed(HIDDEN, !showAxisName);\n\n     // render labels based on orientation of axis\n    const labelOffset = availableSpace / 2;\n\n    // Set style for axis name\n    labelManager.setStyle(_axisNameStyle);\n    const axisNameSpace = labelManager.getOriSize(name);\n    const measures = {\n        labelProps,\n        tickSize,\n        axisNamePadding,\n        axisNameHeight: axisNameSpace.height,\n        axisNameWidth: axisNameSpace.width,\n        yOffset,\n        xOffset,\n        labelOffset,\n        availableSpace: axisInstance.availableSpace()\n    };\n    // Set position for axis name\n    setAxisNamePos(textNode, orientation, measures);\n}\n","import { TOP, LEFT, BOTTOM } from '../enums/axis-orientation';\nimport { LOG } from '../enums/scale-type';\n\nexport const getNumberOfTicks = (availableSpace, labelDim, axis, axisInstance) => {\n    const ticks = axis.scale().ticks();\n    const { numberOfTicks } = axisInstance.config();\n    const tickLength = ticks.length;\n    let numberOfValues = tickLength;\n\n    if (tickLength * (labelDim * 1.5) > availableSpace) {\n        numberOfValues = Math.floor(availableSpace / (labelDim * 1.5));\n    }\n\n    numberOfValues = Math.min(numberOfTicks, Math.max(1, numberOfValues));\n    return axis.scale().ticks(numberOfValues);\n};\n\nexport const sanitizeDomain = (domain, context) => {\n    const interpolator = context.config().interpolator;\n    // @todo: Get from scale decorator\n    if (interpolator === LOG && domain[0] >= 0) {\n        return [Math.max(1, domain[0]), Math.max(1, domain[1])];\n    }\n    return domain;\n};\n\n/**\n *\n *\n * @returns\n * @memberof SimpleAxis\n */\nexport const getTickLabelInfo = (context) => {\n    let largestLabel = '';\n    let labelProps;\n    let smartTick = {};\n    let axisTickLabels;\n    const scale = context.scale();\n    const allLabelLengths = [];\n    const { tickFormat, tickValues, numberFormat } = context.config();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n    // set the style on the shared label manager instance\n    const { labelManager } = context.dependencies();\n\n    labelManager.setStyle(context._tickLabelStyle);\n    // get the values along the domain\n\n    axisTickLabels = tickValues || labelFunc();\n    // Get the tick labels\n    axisTickLabels = axisTickLabels.map((originalLabel, i) => {\n        const formattedLabel = numberFormat(originalLabel);\n\n        //  get formats of tick if any\n        const label = tickFormat ? tickFormat(formattedLabel) : (scale.tickFormat ?\n            numberFormat(scale.tickFormat()(originalLabel)) : formattedLabel);\n\n        // convert to string for quant values\n        const temp = label.toString();\n        // Get spaces for all labels\n        allLabelLengths.push(labelManager.getOriSize(temp));\n        // Getting largest label\n        if (temp.length > largestLabel.length) {\n            largestLabel = temp;\n            smartTick = context.smartTicks() ? context.smartTicks()[i] : {};\n            labelProps = allLabelLengths[i];\n        }\n        return label;\n    });\n\n    labelProps = labelManager.getOriSize(largestLabel);\n\n    return { largestLabel, largestLabelDim: labelProps, axisTickLabels, allLabelLengths, smartTick };\n};\n\n/**\n *\n *\n * @returns\n * @memberof SimpleAxis\n */\nexport const computeAxisDimensions = (context) => {\n    let tickLabelDim = {};\n    const {\n        name,\n        labels,\n        tickValues\n    } = context.config();\n    const angle = ((labels.smartTicks) ? 0 : labels.rotation) * Math.PI / 180;\n    const { labelManager } = context.dependencies();\n    const {\n        largestLabelDim,\n        axisTickLabels,\n        smartTick\n    } = getTickLabelInfo(context);\n    const { height: labelHeight, width: labelWidth } = largestLabelDim;\n    // get the domain of axis\n    const domain = context.domain();\n\n    if (domain.length === 0) {\n        return null;\n    }\n    if (context._rotationLock === false) {\n        context.setRotationConfig(tickValues || axisTickLabels, largestLabelDim.width);\n        context._rotationLock = false;\n    }\n    if (labels.smartTicks) {\n        tickLabelDim = smartTick;\n    } else {\n        tickLabelDim = {\n            width: Math.abs(labelHeight * Math.sin(angle)) + Math.abs(labelWidth * Math.cos(angle)),\n            height: Math.abs(labelWidth * Math.sin(angle)) + Math.abs(labelHeight * Math.cos(angle))\n        };\n    }\n\n    labelManager.setStyle(context._axisNameStyle);\n    return {\n        tickSize: context.getTickSize(),\n        tickLabelDim,\n        axisLabelDim: labelManager.getOriSize(name),\n        largestLabelDim,\n        axisTickLabels\n    };\n};\n\n/**\n*\n*\n* @memberof SimpleAxis\n*/\nexport const setOffset = (context) => {\n    let x = 0;\n    let y = 0;\n    const logicalSpace = context.logicalSpace();\n    const config = context.config();\n    const {\n        orientation,\n        xOffset,\n        yOffset\n    } = config;\n    if (orientation === LEFT) {\n        x = xOffset === undefined ? logicalSpace.width : xOffset;\n    }\n    if (orientation === TOP) {\n        y = yOffset === undefined ? logicalSpace.height : yOffset;\n    }\n    context.config({ xOffset: x, yOffset: y });\n};\n\n/**\n *\n *\n * @param {*} timeDiff\n * @param {*} range\n * @param {*} domain\n * @returns\n */\nconst getAxisOffset = (timeDiff, range, domain) => {\n    const pvr = Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    const width = (pvr * timeDiff);\n    const avWidth = (range[1] - range[0]);\n    const bars = avWidth / width;\n    const barWidth = avWidth / (bars + 1);\n    const diff = avWidth - barWidth * bars;\n\n    return diff / 2;\n};\n\nexport const adjustRange = (minDiff, range, domain, orientation) => {\n    const diff = getAxisOffset(minDiff, range, domain);\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        range[0] += diff;\n        range[1] -= diff;\n    } else {\n        range[0] -= diff;\n        range[1] += diff;\n    }\n    return range;\n};\n\n /**\n * Listener attached to the axis on change of parameters.\n *\n * @param {Function} callback to be excuted on change of domain range etc\n * @memberof SimpleAxis\n */\nexport const registerChangeListeners = (context) => {\n    const store = context.store();\n\n    store.model.next(['domain', 'range', 'mount', 'config'], (...params) => {\n        context.render();\n        context._domainLock = false;\n        context._eventList.forEach((e) => {\n            e.action instanceof Function && e.action(...params);\n        });\n    }, true);\n    return context;\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n * @returns\n */\nexport const getHorizontalAxisSpace = (context, axisDimensions, config, range) => {\n    let width;\n    let height;\n    const {\n        tickSize,\n        tickLabelDim,\n        axisLabelDim\n    } = axisDimensions;\n    const {\n        axisNamePadding,\n        showAxisName,\n        tickValues\n   } = config;\n    const domain = context.domain();\n    const { height: axisDimHeight } = axisLabelDim;\n    const { height: tickDimHeight, width: tickDimWidth } = tickLabelDim;\n\n    width = range && range.length ? range[1] - range[0] : 0;\n\n    height = 0;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [Math.min(...tickValues, ...domain), Math.max(...tickValues, ...domain)];\n\n        width = ((max - min) / Math.abs(minTickDiff)) * (tickDimWidth + context._minTickDistance.width);\n    }\n    if (!width || width === 0) {\n        height = Math.max(tickDimWidth, tickDimHeight);\n    } else {\n        height = tickDimHeight;\n    }\n    height += (showAxisName ? (axisDimHeight + axisNamePadding) : 0) + tickSize;\n    return {\n        width,\n        height\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n * @returns\n */\nexport const getVerticalAxisSpace = (context, axisDimensions, config) => {\n    let height;\n    let width;\n    const {\n        tickSize,\n        tickLabelDim,\n        axisLabelDim\n    } = axisDimensions;\n    const {\n        axisNamePadding,\n        showAxisName,\n        tickValues\n   } = config;\n    const domain = context.domain();\n    const { height: axisDimHeight } = axisLabelDim;\n    const { height: tickDimHeight, width: tickDimWidth } = tickLabelDim;\n\n    height = 0;\n    width = tickDimWidth;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [Math.min(...tickValues, ...domain), Math.max(...tickValues, ...domain)];\n\n        height = ((max - min) / Math.abs(minTickDiff)) * (tickDimHeight);\n    }\n    width += (showAxisName ? axisDimHeight : 0) + tickSize + axisNamePadding;\n\n    return {\n        height,\n        width\n    };\n};\n\n /**\n     * Calculates the logical space of the axis\n     * @return {Object} Width and height occupied by the axis.\n     */\nexport const calculateBandSpace = (context) => {\n    const range = context.range();\n    const config = context.config();\n    const {\n        orientation,\n        show\n    } = config;\n    const axisDimensions = context.getAxisDimensions();\n    const {\n        largestLabelDim,\n        axisTickLabels\n    } = axisDimensions;\n    const { height: largestDimHeight, width: largestDimWidth } = largestLabelDim;\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        let { width, height } = getHorizontalAxisSpace(context, axisDimensions, config, range);\n        if (!width || width === 0) {\n            width = axisTickLabels.length * (Math.min(largestDimWidth + context._minTickDistance.width,\n                         largestDimHeight + context._minTickDistance.width));\n        }\n        if (show === false) {\n            height = 0;\n        }\n        return {\n            width,\n            height\n        };\n    }\n\n    let { width, height } = getVerticalAxisSpace(context, axisDimensions, config, range);\n\n    if (!height || height === 0) {\n        height = axisTickLabels.length * (largestDimHeight + largestDimHeight / 2) + largestDimHeight;\n    }\n    if (show === false) {\n        width = 0;\n    }\n    return {\n        width,\n        height\n    };\n};\n\n/**\n     * Calculates the logical space of the axis\n     * @return {Object} Width and height occupied by the axis.\n     */\nexport const calculateContinousSpace = (context) => {\n    const range = context.range();\n    const config = context.config();\n    const axisDimensions = context.getAxisDimensions();\n\n    const {\n        orientation,\n        show,\n        showAxisName\n    } = config;\n    const {\n        axisLabelDim\n    } = axisDimensions;\n\n    if (show === false) {\n        return {\n            width: 0,\n            height: 0\n        };\n    }\n\n    const { width: axisDimWidth } = axisLabelDim;\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        const { width, height } = getHorizontalAxisSpace(context, axisDimensions, config);\n        const axisWidth = Math.max(width, axisDimWidth);\n\n        return {\n            width: axisWidth,\n            height\n        };\n    }\n\n    const { width, height } = getVerticalAxisSpace(context, axisDimensions, config, range);\n\n    const effHeight = Math.max(height, showAxisName ? axisDimWidth : 0);\n\n    return {\n        width,\n        height: effHeight\n    };\n};\n\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    availableSpace: {},\n    axisDimensions: {},\n    config: {\n        sanitization: (context, value) => {\n            if (value.labels && value.labels.rotation) {\n                context._rotationLock = true;\n            }\n            value = mergeRecursive(context._config || {}, value);\n            value.axisNamePadding = Math.max(value.axisNamePadding, 0);\n            context.axis(context.createAxis(value));\n            context.store().commit('config', value);\n            return value;\n        }\n    },\n    logicalSpace: {},\n    mount: {\n        sanitization: (context, value) => {\n            context.store().commit('mount', value);\n            return value;\n        }\n    },\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.logicalSpace(null);\n            context.store().commit('range', value);\n            return value;\n        }\n    },\n\n    smartTicks: {},\n    store: {},\n    tickSize: {}\n};\n","import {\n    Store,\n    mergeRecursive,\n    getSmartComputedStyle,\n    selectElement,\n    generateGetterSetters,\n    getUniqueId\n} from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { defaultConfig } from './default-config';\nimport { renderAxis } from '../axis-renderer';\nimport { DOMAIN, BAND } from '../enums/constants';\nimport {\n    computeAxisDimensions,\n    setOffset,\n    registerChangeListeners,\n    calculateContinousSpace\n} from './helper';\nimport { PROPS } from './props';\n\nexport default class SimpleAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @memberof SimpleAxis\n     */\n    constructor (config, dependencies) {\n        this._id = getUniqueId();\n\n        this._dependencies = dependencies;\n        this._mount = null;\n        this._range = [];\n        this._domain = [];\n        this._domainLock = false;\n        this._rotationLock = false;\n        this._axisDimensions = {};\n        this._eventList = [];\n\n        const defCon = mergeRecursive({}, this.constructor.defaultConfig());\n        const simpleConfig = mergeRecursive(defCon, config);\n\n        const bodyElem = selectElement('body');\n        const classPrefix = simpleConfig.classPrefix;\n        this._tickLabelStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-ticks`);\n        this._axisNameStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-axis-name`);\n        dependencies.labelManager.setStyle(this._tickLabelStyle);\n        this._minTickDistance = dependencies.labelManager.getOriSize('ww');\n\n        generateGetterSetters(this, PROPS);\n        this.store(new Store({\n            domain: this.domain(),\n            range: this.range(),\n            config: simpleConfig,\n            mount: this.mount()\n        }));\n        this.config(simpleConfig);\n\n        this._scale = this.createScale(this._config);\n        this._axis = this.createAxis(this._config);\n\n        registerChangeListeners(this);\n    }\n\n    /**\n     * Returns the default configuration of simple axis\n     *  @return {Object} default configurations\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    scale (...params) {\n        if (params.length) {\n            this._scale = params[0];\n            return this;\n        }\n        return this._scale;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    axis (...params) {\n        if (params.length) {\n            this._axis = params[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     * @returns\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            this.scale().domain(domain[0]);\n            this._domain = this.scale().domain();\n            this.smartTicks(this.setTickConfig());\n            this.store().commit(DOMAIN, this._domain);\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const scale = createScale({\n            padding,\n            interpolator,\n            exponent,\n            base,\n            range,\n            type: this.constructor.type()\n        });\n\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const {\n            tickFormat,\n            numberFormat,\n            orientation\n        } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            let axis = axisClass(this.scale());\n            let formatter = {};\n\n            if (tickFormat) {\n                formatter = (val, ...params) => tickFormat(numberFormat(val), ...params);\n            } else {\n                formatter = val => numberFormat(val);\n            }\n            axis = axis.tickFormat(formatter);\n            return axis;\n        }\n        return null;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisTickLabels\n     * @param {*} labelWidth\n     * @returns\n     * @memberof SimpleAxis\n     */\n    setRotationConfig (axisTickLabels, labelWidth) {\n        const { orientation } = this.config();\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            const range = this.range();\n            const length = Math.abs(range[0] - range[1]);\n            this.config({ labels: { rotation: 0 } });\n            if (length > 0 && axisTickLabels.length * (labelWidth + this._minTickDistance.width) > length) {\n                this.config({ labels: { rotation: -90 } });\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    adjustRange () {\n        return this;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this.scale()(domainVal);\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        return this.axis().tickSize();\n    }\n\n    /**\n     * Gets the space occupied by the parts of an axis\n     *\n     * @return {Object} object with details about sizes of the axis.\n     * @memberof SimpleAxis\n     */\n    getAxisDimensions () {\n        this.axisDimensions(computeAxisDimensions(this));\n        return this.axisDimensions();\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateContinousSpace(this));\n            setOffset(this);\n            this.logicalSpace();\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (...value) {\n        const values = value.map(d => this.scale().invert(d)) || [];\n        return value.length === 1 ? values[0] : values;\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        let p1;\n        let p2;\n        let extent;\n        const {\n            type\n        } = this.config();\n        const scale = this.scale();\n        const range = scale.range();\n        const reverse = range[0] > range[1];\n\n        if (type === BAND) {\n            extent = scale.invertExtent(v1, v2);\n            p1 = scale(reverse ? extent[extent.length - 1] : extent[0]);\n            p2 = scale(reverse ? extent[0] : extent[extent.length - 1]) + scale.bandwidth();\n            return [p1, p2];\n        }\n        return [v1, v2];\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SimpleAxis\n     */\n    updateDomainBounds (domain) {\n        let currentDomain = this.domain();\n        if (this.config().domain) {\n            currentDomain = this.config().domain;\n        } else {\n            if (currentDomain.length === 0) {\n                currentDomain = domain;\n            }\n            if (domain.length) {\n                currentDomain = [Math.min(currentDomain[0], domain[0]), Math.max(currentDomain[1], domain[1])];\n            }\n        }\n\n        return this.domain(currentDomain);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domain\n     * @returns\n     * @memberof SimpleAxis\n     */\n    updateDomainCache (domain) {\n        if (this._domainLock === false) {\n            this.domain([]);\n            this._domainLock = true;\n        }\n        return this.updateDomainBounds(domain || []);\n    }\n\n    getMinTickDifference () {\n        return this.domain();\n    }\n\n    /**\n     *\n     *\n     * @param {*} tickValues\n     * @returns\n     * @memberof SimpleAxis\n     */\n    setTickValues () {\n        const {\n            tickValues\n        } = this.config();\n\n        if (tickValues) {\n            tickValues instanceof Array && this.axis().tickValues(tickValues);\n            return this;\n        }\n        return this;\n    }\n\n    /**\n     * This method returns the width in pixels for one\n     * unit along the axis. It is only applicable to band scale\n     * and returns undefined for other scale type.\n     *\n     * @return {number} the width of one band along band scale axis\n     * @memberof SimpleAxis\n     */\n    getUnitWidth () {\n        return 0;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof SimpleAxis\n     */\n    serialize () {\n        return {\n            name: this.name,\n            type: this.type,\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    get id () {\n        return this._id;\n    }\n\n    registerEvent (event, fn) {\n        this._eventList.push({ name: event, action: fn });\n    }\n\n    /**\n     *\n     *\n     * @param {*} fn\n     * @memberof SimpleAxis\n     */\n    on (event, fn) {\n        event = event || 'update';\n        this.registerEvent(event, fn);\n    }\n\n    /**\n     * This method is used to render the axis inside\n     * the supplied svg container.\n     *\n     * @param {SVGElement} svg the svg element in which to render the path\n     * @memberof SimpleAxis\n     */\n    /* istanbul ignore next */render () {\n        if (this.mount()) {\n            renderAxis(this);\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    remove () {\n        this.store().unsubscribeAll();\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    unsubscribe () {\n        this.store().unsubscribeAll();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    isReverse () {\n        const range = this.range();\n        return range[0] > range[1];\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    getPixelToValueRatio () {\n        const scale = this.scale();\n        const range = scale.range();\n        const domain = scale.domain();\n\n        return Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    }\n}\n\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LinearInterpolator {\n\n    createScale (config) {\n        const {\n            range\n        } = config;\n        const scaleFactory = scaleMap.linear;\n        this._scale = scaleFactory().range(range);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LogInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            base\n        } = config;\n        const scaleFactory = scaleMap.log;\n        this._scale = scaleFactory().range(range).base(base);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal <= 0) {\n            return 1;\n        }\n\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain[0] <= 0) {\n            return [Math.max(1, domain[0]), Math.max(1, domain[1])];\n        } return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class PowInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            exponent\n        } = config;\n        const scaleFactory = scaleMap.pow;\n        this._scale = scaleFactory().range(range).exponent(exponent);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { LINEAR, LOG, POW } from '../enums/scale-type';\nimport { LogInterpolator, PowInterpolator, LinearInterpolator } from './interpolators';\nimport { DOMAIN } from '../enums/constants';\nimport {\n    getTickLabelInfo,\n    getNumberOfTicks\n} from './helper';\n\nexport const interpolatorMap = {\n    [LOG]: LogInterpolator,\n    [POW]: PowInterpolator,\n    [LINEAR]: LinearInterpolator\n};\n\nexport default class ContinousAxis extends SimpleAxis {\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const InterpolatorCls = interpolatorMap[interpolator];\n\n        this._interpolator = new InterpolatorCls();\n        let scale = this._interpolator.createScale({\n            padding,\n            exponent,\n            base,\n            range\n        });\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SimpleAxis\n     */\n    updateDomainBounds (domain) {\n        let currentDomain = this.domain();\n        if (this.config().domain) {\n            currentDomain = this.config().domain;\n        } else {\n            if (currentDomain.length === 0) {\n                currentDomain = domain;\n            }\n            if (domain.length) {\n                currentDomain = [Math.min(currentDomain[0], domain[0]), Math.max(currentDomain[1], domain[1])];\n            }\n        }\n\n        return this.domain(currentDomain);\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof ContinousAxis\n     */\n    static type () {\n        return LINEAR;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this._interpolator.getScaleValue(domainVal);\n    }\n /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.config();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n        return axis.tickSize();\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     * @returns\n     * @memberof SimpleAxis\n     */\n    domain (domain) {\n        if (domain && domain.length) {\n            const { nice } = this.config();\n            if (domain.length && domain[0] === domain[1]) {\n                domain = [0, +domain[0] * 2];\n            }\n            this.scale().domain(domain);\n            nice && this.scale().nice();\n            this._domain = this.scale().domain();\n            this.store().commit(DOMAIN, this._domain);\n            this.logicalSpace(null);\n            return this;\n        } return this._domain;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        const {\n            left,\n            right,\n            top,\n            bottom\n        } = padding;\n        const {\n            orientation,\n            fixedBaseline\n        } = this.config();\n        const { tickLabelDim } = this.getAxisDimensions();\n        this.availableSpace({ width, height });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            const labelSpace = tickLabelDim.width;\n            this.range([(fixedBaseline ? 0 : (labelSpace / 2)) + left, width - right - labelSpace / 2]);\n            const axisHeight = this.getLogicalSpace().height;\n            isOffset && this.config({ yOffset: Math.max(axisHeight, height) });\n        } else {\n            const labelSpace = tickLabelDim.height;\n            this.range([height - bottom - (fixedBaseline ? 0 : (labelSpace / 2)), labelSpace / 2 + top]);\n            const axisWidth = this.getLogicalSpace().width;\n            isOffset && this.config({ xOffset: Math.max(axisWidth, width) });\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} tickValues\n     * @returns\n     * @memberof SimpleAxis\n     */\n    setTickValues () {\n        const {\n            tickValues\n        } = this.config();\n        const axis = this.axis();\n\n        if (tickValues) {\n            tickValues instanceof Array && this.axis().tickValues(tickValues);\n            return this;\n        }\n        axis.tickValues(this.getTickValues());\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    getTickValues () {\n        let labelDim = 0;\n        const {\n            orientation,\n            tickValues\n        } = this.config();\n        const range = this.range();\n        const axis = this.axis();\n\n        const availableSpace = Math.abs(range[0] - range[1]);\n\n        const labelProps = getTickLabelInfo(this).largestLabelDim;\n\n        if (tickValues) {\n            return axis.scale().ticks(tickValues);\n        }\n        labelDim = labelProps[orientation === BOTTOM || orientation === TOP ? 'width' : 'height'];\n\n        return getNumberOfTicks(availableSpace, labelDim, axis, this);\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domain\n     * @returns\n     * @memberof SimpleAxis\n     */\n    updateDomainCache (domain) {\n        if (this._domainLock === false) {\n            this._domain = [];\n            this._domainLock = true;\n        }\n        return this.updateDomainBounds(domain || []);\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline (tickText) {\n        const {\n            orientation,\n            labels\n        } = this.config();\n        const {\n            rotation\n        } = labels;\n        const axis = this.axis();\n        const { width, height } = this._axisDimensions.largestLabelDim;\n        axis.tickTransform((d, i) => {\n            if (i === 0 && (orientation === LEFT || orientation === RIGHT)) {\n                return `translate(0, -${(height) / 3}px)`;\n            }\n            if (i === 0 && (orientation === TOP || orientation === BOTTOM) && rotation === 0) {\n                return `translate(${width / 2}px,  ${0}px) rotate(${rotation}deg)`;\n            } return '';\n        });\n        return tickText;\n    }\n\n}\n","import SimpleAxis from './simple-axis';\nimport { BAND } from '../enums/scale-type';\nimport { TOP, BOTTOM } from '../enums/axis-orientation';\nimport { calculateBandSpace, setOffset } from './helper';\n\nexport default class BandAxis extends SimpleAxis {\n\n    /**\n     *\n     *\n     * @param {*} range\n     * @returns\n     * @memberof BandAxis\n     */\n    createScale (range) {\n        const scale = super.createScale(range);\n        const { padding } = this.config();\n        if (typeof padding === 'number') {\n            scale.padding(padding);\n        }\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof BandAxis\n     */\n    static type () {\n        return BAND;\n    }\n\n    /**\n     *\n     *\n     * @param {*} width\n     * @param {*} height\n     * @param {*} padding\n     * @param {*} isOffset\n     * @memberof BandAxis\n     */\n    setAvailableSpace (width, height, padding, isOffset) {\n        const {\n            left,\n            right,\n            top,\n            bottom\n        } = padding;\n        const {\n            orientation,\n            showAxisName,\n            axisNamePadding\n        } = this.config();\n        const { axisLabelDim } = this.getAxisDimensions();\n        const { height: axisDimHeight } = axisLabelDim;\n\n        this.availableSpace({ width, height });\n        if (orientation === TOP || orientation === BOTTOM) {\n            // Set x axis range\n            this.range([0, width - left - right]);\n            const axisHeight = this.getLogicalSpace().height - (showAxisName === false ?\n                (axisDimHeight + axisNamePadding) : 0);\n            isOffset && this.config({ yOffset: Math.max(axisHeight, height) });\n        } else {\n            // Set y axis range\n            this.range([height - bottom, top]);\n            const axisWidth = this.getLogicalSpace().width - (showAxisName === false ? axisDimHeight : 0);\n            isOffset && this.config({ xOffset: Math.max(axisWidth, width) });\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    getUnitWidth () {\n        return this.scale().bandwidth();\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks = '';\n        let smartlabel;\n        const { maxWidth, maxHeight } = this.config();\n        const { labelManager } = this._dependencies;\n        const domain = this.axis().scale().domain();\n        const axis = this.axis();\n\n        smartTicks = domain;\n        const tickFormatter = axis.tickFormat();\n\n        if (domain && domain.length) {\n            smartTicks = domain.map((d) => {\n                labelManager.useEllipsesOnOverflow(true);\n                smartlabel = labelManager.getSmartText(tickFormatter(d), maxWidth, maxHeight);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        return smartTicks;\n    }\n\n/**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n            setOffset(this);\n            this.logicalSpace();\n        }\n        return this.logicalSpace();\n    }\n    /**\n     *\n     *\n     * @param {*} axisTickLabels\n     * @param {*} labelWidth\n     * @returns\n     * @memberof BandAxis\n     */\n    setRotationConfig (axisTickLabels, labelWidth) {\n        const { orientation } = this.config();\n        const range = this.range();\n        const availSpace = Math.abs(range[0] - range[1]);\n\n        this.config({ labels: { rotation: 0, smartTicks: false } });\n        if (orientation === TOP || orientation === BOTTOM) {\n            const smartWidth = this.smartTicks().reduce((acc, n) => acc + n.width + this._minTickDistance.width, 0);\n            // set multiline config\n            if (availSpace > 0 && axisTickLabels.length * (labelWidth + this._minTickDistance.width) > availSpace) {\n                if (availSpace && smartWidth < availSpace) {\n                    this.config({ labels: { smartTicks: true } });\n                } else {\n                    this.config({ labels: { rotation: -90 } });\n                }\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    getTickValues () {\n        return this.axis().scale().domain();\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.config();\n        const axis = this.axis();\n\n        axis.tickSizeInner(showInnerTicks ? 6 : 0);\n        axis.tickSizeOuter(showOuterTicks ? 6 : 0);\n        return axis.tickSize();\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SimpleAxis\n     */\n    updateDomainBounds (domain) {\n        let currentDomain = this.domain();\n        if (this.config().domain) {\n            currentDomain = this.config().domain;\n        } else {\n            if (currentDomain.length === 0) {\n                currentDomain = domain;\n            }\n            currentDomain = currentDomain.concat(domain);\n        }\n        this.domain(currentDomain);\n        return this;\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (...value) {\n        const values = value.map(d => this.scale().invert(d)) || [];\n        return value.length === 1 ? values[0] && values[0].toString() : values.map(d => d.toString());\n    }\n}\n","import SimpleAxis from './simple-axis';\nimport { adjustRange } from './helper';\nimport { TIME } from '../enums/scale-type';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { DOMAIN } from '../enums/constants';\n\n/**\n *\n *\n * @export\n * @class TimeAxis\n * @extends {SimpleAxis}\n */\nexport default class TimeAxis extends SimpleAxis {\n\n    constructor (...params) {\n        super(...params);\n        this._minDiff = Infinity;\n    }\n\n    /**\n     *\n     *\n     * @param {*} range\n     * @returns\n     * @memberof TimeAxis\n     */\n    createScale (range) {\n        let scale = super.createScale(range);\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof TimeAxis\n     */\n    static type () {\n        return TIME;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks;\n        let smartlabel;\n        const { maxWidth, maxHeight, tickFormat } = this.config();\n        const { labelManager } = this._dependencies;\n        const domain = this.getTickValues();\n        const scale = this.scale();\n\n        smartTicks = domain;\n        const tickFormatter = tickFormat || scale.tickFormat();\n\n        if (domain && domain.length) {\n            smartTicks = domain.map((d) => {\n                smartlabel = labelManager.getSmartText(tickFormatter(d), maxWidth, maxHeight);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        return smartTicks;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const {\n            tickFormat,\n            orientation\n        } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            let axis = axisClass(this.scale());\n\n            if (tickFormat) {\n                axis = axis.tickFormat(tickFormat);\n            }\n\n            return axis;\n        }\n        return null;\n    }\n\n     /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.config();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n        return super.getTickSize();\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof TimeAxis\n     */\n    getTickValues () {\n        return this.scale().ticks();\n    }\n\n    /**\n     *\n     *\n     * @param {*} diff\n     * @returns\n     * @memberof TimeAxis\n     */\n    minDiff (diff) {\n        this._minDiff = Math.min(this._minDiff, diff);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisTickLabels\n     * @param {*} labelWidth\n     * @returns\n     * @memberof BandAxis\n     */\n    setRotationConfig (axisTickLabels, labelWidth) {\n        const { orientation } = this.config();\n        const range = this.range();\n        const availSpace = Math.abs(range[0] - range[1]);\n\n        this.config({ labels: { rotation: 0, smartTicks: false } });\n        if (orientation === TOP || orientation === BOTTOM) {\n            const smartWidth = this.smartTicks().reduce((acc, n) => acc + n.width, 0);\n            // set multiline config\n            if (availSpace > 0 && axisTickLabels.length * labelWidth > availSpace) {\n                if (availSpace && smartWidth * 1.25 < availSpace) {\n                    this.config({ labels: { smartTicks: true } });\n                }\n                this.config({ labels: { rotation: -90 } });\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     * @returns\n     * @memberof SimpleAxis\n     */\n    domain (domain) {\n        if (domain) {\n            const { nice } = this.config();\n\n            if (domain.length && domain[0] === domain[1]) {\n                domain = [0, +domain[0] * 2];\n            }\n            this.scale().domain(domain);\n            nice && this.scale().nice();\n            this._domain = this.scale().domain();\n            this.smartTicks(this.setTickConfig());\n            this.store().commit(DOMAIN, this._domain);\n            this.logicalSpace(null);\n            return this;\n        } return this._domain;\n    }\n\n    /**\n     *\n     *\n     * @param {*} width\n     * @param {*} height\n     * @param {*} padding\n     * @param {*} isOffset\n     * @memberof TimeAxis\n     */\n    setAvailableSpace (width, height, padding, isOffset) {\n        const {\n            left,\n            right,\n            top,\n            bottom\n        } = padding;\n        const {\n            orientation,\n            showAxisName,\n            axisNamePadding\n        } = this.config();\n        const domain = this.domain();\n        const { axisLabelDim, tickLabelDim } = this.getAxisDimensions();\n        const { height: axisDimHeight } = axisLabelDim;\n        const { height: tickDimHeight, width: tickDimWidth } = tickLabelDim;\n\n        this.availableSpace({ width, height });\n        if (orientation === TOP || orientation === BOTTOM) {\n            const labelSpace = tickDimWidth;\n            this.range(adjustRange(this._minDiff, [labelSpace / 2, width - left - right - labelSpace / 2],\n                domain, orientation));\n            const axisHeight = this.getLogicalSpace().height - (showAxisName === false ?\n                                            (axisDimHeight + axisNamePadding) : 0);\n            isOffset && this.config({ yOffset: Math.max(axisHeight, height) });\n        } else {\n            const labelSpace = tickDimHeight;\n            this.range(adjustRange(this._minDiff, [height - top - bottom - labelSpace / 2, labelSpace / 2],\n                domain, orientation));\n            const axisWidth = this.getLogicalSpace().width - (showAxisName === false ? axisDimHeight : 0);\n            this.isOffset && this.config({ xOffset: Math.max(axisWidth, width) });\n        }\n        return this;\n    }\n\n}\n","export const x11Colors = {\n    Pink: { hex: 'ffc0cb', rgb: '255,192,203' },\n    LightPink: { hex: 'ffb6c1', rgb: '255,182,193' },\n    HotPink: { hex: 'ff69b4', rgb: '255,105,180' },\n    DeepPink: { hex: 'ff1493', rgb: '255,20,147' },\n    PaleVioletRed: { hex: 'db7093', rgb: '219,112,147' },\n    MediumVioletRed: { hex: 'c71585', rgb: '199,21,133' },\n    LightSalmon: { hex: 'ffa07a', rgb: '255,160,122' },\n    Salmon: { hex: 'fa8072', rgb: '250,128,114' },\n    DarkSalmon: { hex: 'e9967a', rgb: '233,150,122' },\n    LightCoral: { hex: 'f08080', rgb: '240,128,128' },\n    IndianRed: { hex: 'cd5c5c', rgb: '205,92,92' },\n    Crimson: { hex: 'dc143c', rgb: '220,20,60' },\n    FireBrick: { hex: 'b22222', rgb: '178,34,34' },\n    DarkRed: { hex: '8b0000', rgb: '139,0,0' },\n    Red: { hex: 'ff0000', rgb: '255,0,0' },\n    OrangeRed: { hex: 'ff4500', rgb: '255,69,0' },\n    Tomato: { hex: 'ff6347', rgb: '255,99,71' },\n    Coral: { hex: 'ff7f50', rgb: '255,127,80' },\n    DarkOrange: { hex: 'ff8c00', rgb: '255,140,0' },\n    Orange: { hex: 'ffa500', rgb: '255,165,0' },\n    Gold: { hex: 'ffd700', rgb: '255,215,0' },\n    Yellow: { hex: 'ffff00', rgb: '255,255,0' },\n    LightYellow: { hex: 'ffffe0', rgb: '255,255,224' },\n    LemonChiffon: { hex: 'fffacd', rgb: '255,250,205' },\n    LightGoldenrodYellow: { hex: 'fafad2', rgb: '250,250,210' },\n    PapayaWhip: { hex: 'ffefd5', rgb: '255,239,213' },\n    Moccasin: { hex: 'ffe4b5', rgb: '255,228,181' },\n    PeachPuff: { hex: 'ffdab9', rgb: '255,218,185' },\n    PaleGoldenrod: { hex: 'eee8aa', rgb: '238,232,170' },\n    Khaki: { hex: 'f0e68c', rgb: '240,230,140' },\n    DarkKhaki: { hex: 'bdb76b', rgb: '189,183,107' },\n    Cornsilk: { hex: 'fff8dc', rgb: '255,248,220' },\n    BlanchedAlmond: { hex: 'ffebcd', rgb: '255,235,205' },\n    Bisque: { hex: 'ffe4c4', rgb: '255,228,196' },\n    NavajoWhite: { hex: 'ffdead', rgb: '255,222,173' },\n    Wheat: { hex: 'f5deb3', rgb: '245,222,179' },\n    BurlyWood: { hex: 'deb887', rgb: '222,184,135' },\n    Tan: { hex: 'd2b48c', rgb: '210,180,140' },\n    RosyBrown: { hex: 'bc8f8f', rgb: '188,143,143' },\n    SandyBrown: { hex: 'f4a460', rgb: '244,164,96' },\n    Goldenrod: { hex: 'daa520', rgb: '218,165,32' },\n    DarkGoldenrod: { hex: 'b8860b', rgb: '184,134,11' },\n    Peru: { hex: 'cd853f', rgb: '205,133,63' },\n    Chocolate: { hex: 'd2691e', rgb: '210,105,30' },\n    SaddleBrown: { hex: '8b4513', rgb: '139,69,19' },\n    Sienna: { hex: 'a0522d', rgb: '160,82,45' },\n    Brown: { hex: 'a52a2a', rgb: '165,42,42' },\n    Maroon: { hex: '800000', rgb: '128,0,0' },\n    DarkOliveGreen: { hex: '556b2f', rgb: '85,107,47' },\n    Olive: { hex: '808000', rgb: '128,128,0' },\n    OliveDrab: { hex: '6b8e23', rgb: '107,142,35' },\n    YellowGreen: { hex: '9acd32', rgb: '154,205,50' },\n    LimeGreen: { hex: '32cd32', rgb: '50,205,50' },\n    Lime: { hex: '00ff00', rgb: '0,255,0' },\n    LawnGreen: { hex: '7cfc00', rgb: '124,252,0' },\n    Chartreuse: { hex: '7fff00', rgb: '127,255,0' },\n    GreenYellow: { hex: 'adff2f', rgb: '173,255,47' },\n    SpringGreen: { hex: '00ff7f', rgb: '0,255,127' },\n    MediumSpringGreen: { hex: '00fa9a', rgb: '0,250,154' },\n    LightGreen: { hex: '90ee90', rgb: '144,238,144' },\n    PaleGreen: { hex: '98fb98', rgb: '152,251,152' },\n    DarkSeaGreen: { hex: '8fbc8f', rgb: '143,188,143' },\n    MediumSeaGreen: { hex: '3cb371', rgb: '60,179,113' },\n    SeaGreen: { hex: '2e8b57', rgb: '46,139,87' },\n    ForestGreen: { hex: '228b22', rgb: '34,139,34' },\n    Green: { hex: '008000', rgb: '0,128,0' },\n    DarkGreen: { hex: '006400', rgb: '0,100,0' },\n    MediumAquamarine: { hex: '66cdaa', rgb: '102,205,170' },\n    Aqua: { hex: '00ffff', rgb: '0,255,255' },\n    Cyan: { hex: '00ffff', rgb: '0,255,255' },\n    LightCyan: { hex: 'e0ffff', rgb: '224,255,255' },\n    PaleTurquoise: { hex: 'afeeee', rgb: '175,238,238' },\n    Aquamarine: { hex: '7fffd4', rgb: '127,255,212' },\n    Turquoise: { hex: '40e0d0', rgb: '64,224,208' },\n    MediumTurquoise: { hex: '48d1cc', rgb: '72,209,204' },\n    DarkTurquoise: { hex: '00ced1', rgb: '0,206,209' },\n    LightSeaGreen: { hex: '20b2aa', rgb: '32,178,170' },\n    CadetBlue: { hex: '5f9ea0', rgb: '95,158,160' },\n    DarkCyan: { hex: '008b8b', rgb: '0,139,139' },\n    Teal: { hex: '008080', rgb: '0,128,128' },\n    LightSteelBlue: { hex: 'b0c4de', rgb: '176,196,222' },\n    PowderBlue: { hex: 'b0e0e6', rgb: '176,224,230' },\n    LightBlue: { hex: 'add8e6', rgb: '173,216,230' },\n    SkyBlue: { hex: '87ceeb', rgb: '135,206,235' },\n    LightSkyBlue: { hex: '87cefa', rgb: '135,206,250' },\n    DeepSkyBlue: { hex: '00bfff', rgb: '0,191,255' },\n    DodgerBlue: { hex: '1e90ff', rgb: '30,144,255' },\n    CornflowerBlue: { hex: '6495ed', rgb: '100,149,237' },\n    SteelBlue: { hex: '4682b4', rgb: '70,130,180' },\n    RoyalBlue: { hex: '4169e1', rgb: '65,105,225' },\n    Blue: { hex: '0000ff', rgb: '0,0,255' },\n    MediumBlue: { hex: '0000cd', rgb: '0,0,205' },\n    DarkBlue: { hex: '00008b', rgb: '0,0,139' },\n    Navy: { hex: '000080', rgb: '0,0,128' },\n    MidnightBlue: { hex: '191970', rgb: '25,25,112' },\n    Lavender: { hex: 'e6e6fa', rgb: '230,230,250' },\n    Thistle: { hex: 'd8bfd8', rgb: '216,191,216' },\n    Plum: { hex: 'dda0dd', rgb: '221,160,221' },\n    Violet: { hex: 'ee82ee', rgb: '238,130,238' },\n    Orchid: { hex: 'da70d6', rgb: '218,112,214' },\n    Fuchsia: { hex: 'ff00ff', rgb: '255,0,255' },\n    Magenta: { hex: 'ff00ff', rgb: '255,0,255' },\n    MediumOrchid: { hex: 'ba55d3', rgb: '186,85,211' },\n    MediumPurple: { hex: '9370db', rgb: '147,112,219' },\n    BlueViolet: { hex: '8a2be2', rgb: '138,43,226' },\n    DarkViolet: { hex: '9400d3', rgb: '148,0,211' },\n    DarkOrchid: { hex: '9932cc', rgb: '153,50,204' },\n    DarkMagenta: { hex: '8b008b', rgb: '139,0,139' },\n    Purple: { hex: '800080', rgb: '128,0,128' },\n    Indigo: { hex: '4b0082', rgb: '75,0,130' },\n    DarkSlateBlue: { hex: '483d8b', rgb: '72,61,139' },\n    SlateBlue: { hex: '6a5acd', rgb: '106,90,205' },\n    MediumSlateBlue: { hex: '7b68ee', rgb: '123,104,238' },\n    White: { hex: 'ffffff', rgb: '255,255,255' },\n    Snow: { hex: 'fffafa', rgb: '255,250,250' },\n    Honeydew: { hex: 'f0fff0', rgb: '240,255,240' },\n    MintCream: { hex: 'f5fffa', rgb: '245,255,250' },\n    Azure: { hex: 'f0ffff', rgb: '240,255,255' },\n    AliceBlue: { hex: 'f0f8ff', rgb: '240,248,255' },\n    GhostWhite: { hex: 'f8f8ff', rgb: '248,248,255' },\n    WhiteSmoke: { hex: 'f5f5f5', rgb: '245,245,245' },\n    Seashell: { hex: 'fff5ee', rgb: '255,245,238' },\n    Beige: { hex: 'f5f5dc', rgb: '245,245,220' },\n    OldLace: { hex: 'fdf5e6', rgb: '253,245,230' },\n    FloralWhite: { hex: 'fffaf0', rgb: '255,250,240' },\n    Ivory: { hex: 'fffff0', rgb: '255,255,240' },\n    AntiqueWhite: { hex: 'faebd7', rgb: '250,235,215' },\n    Linen: { hex: 'faf0e6', rgb: '250,240,230' },\n    LavenderBlush: { hex: 'fff0f5', rgb: '255,240,245' },\n    MistyRose: { hex: 'ffe4e1', rgb: '255,228,225' },\n    Gainsboro: { hex: 'dcdcdc', rgb: '220,220,220' },\n    LightGray: { hex: 'd3d3d3', rgb: '211,211,211' },\n    Silver: { hex: 'c0c0c0', rgb: '192,192,192' },\n    DarkGrey: { hex: 'a9a9a9', rgb: '169,169,169' },\n    Grey: { hex: '808080', rgb: '128,128,128' },\n    DimGrey: { hex: '696969', rgb: '105,105,105' },\n    LightSlateGrey: { hex: '778899', rgb: '119,136,153' },\n    SlateGrey: { hex: '708090', rgb: '112,128,144' },\n    DarkSlateGrey: { hex: '2f4f4f', rgb: '47,79,79' },\n    Black: { hex: '000000', rgb: '0,0,0' }\n};\n","import {\n    LINEAR\n} from '../enums/constants';\n/**\n * Set of default colors\n */\nexport const palette = [\n    '#086bb6',\n    '#f37d45',\n    '#f5ce02',\n    '#67bda0',\n    '#c54e4e',\n    '#ae70af'\n];\n\nexport const DEFAULT_CONFIG = {\n    range: palette,\n    value: palette[0],\n    step: false,\n    stops: 5,\n    type: LINEAR\n};\n","import { mergeRecursive, detectColor, hexToHsv, rgbToHsv } from 'muze-utils';\nimport { x11Colors } from './color-maps';\nimport { palette } from './defaults';\n\nexport const getHslString = hslArr => `hsla(${hslArr[0] * 360},${hslArr[1] * 100}%,${hslArr[2] * 100}%, \n    ${hslArr[3] || 1})`;\n\nexport const convertToXllString = baseString => (baseString.split(' ') || [])\n                .reduce((x, e) => `${x}${e.charAt(0).toUpperCase()}${e.slice(1)}`, '');\n\nexport const getActualHslColor = (e, paletteColor) => {\n    let color = '';\n    if (typeof e === 'string') {\n        e = e.replace(/ /g, '');\n        e = e.toLowerCase();\n    }\n    if (detectColor(e) === 'hsl' || detectColor(e) === 'hsla') {\n        color = e.match(/(\\d+(\\.\\d+)?)/g);\n        color = [color[0] / 360, color[1] / 100, color[2] / 100, color[3] || 1];\n    } else if (detectColor(e) === 'hex') {\n        color = hexToHsv(e);\n    } else if (detectColor(e) === 'rgb') {\n        const col = e.substring(e.indexOf('(') + 1, e.lastIndexOf(')')).split(/,\\s*/);\n        color = rgbToHsv(...col);\n    } else if (x11Colors[convertToXllString(e)]) {\n        color = rgbToHsv(...x11Colors[convertToXllString(e)].rgb.split(','));\n    } else if (typeof e !== 'string' && !(e instanceof Array)) {\n        color = rgbToHsv(paletteColor);\n    } else {\n        color = e;\n    }\n    return color;\n};\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => {\n            const defCon = mergeRecursive({}, context.constructor.defaultConfig());\n            if (config.type === 'linear' && typeof config.interpolate !== 'boolean') {\n                config.interpolate = true;\n            }\n            const newConfig = mergeRecursive(defCon, config);\n\n            if (newConfig.range instanceof Array) {\n                newConfig.range = newConfig.range.map((e, i) => getActualHslColor(e, palette[i]));\n            }\n            newConfig.value = getActualHslColor(newConfig.value, newConfig.value);\n            return newConfig;\n        }\n    },\n    domain: {},\n    scale: {},\n    uniqueValues: {}\n};\n","import { hslInterpolator, piecewiseInterpolator, numberInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, SEQUENTIAL, ORDINAL, QUANTILE } from '../enums/scale-type';\nimport { getHslString } from './props';\n\nconst getStops = (domain, stops) => {\n    let newStops = [];\n\n    if (stops instanceof Array) {\n        newStops = stops.slice().sort();\n        newStops = [...new Set([domain[0], ...stops, domain[1]])].sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i <= stops; i++) {\n            newStops[i] = interpolator(i / stops);\n        }\n    }\n\n    if (newStops[0] < domain[0]) {\n        newStops.shift();\n    }\n    return { domain, newStops };\n};\n\nconst rangeStops = (newStopsLength, range) => {\n    let newRange = [];\n    const maxRangeLength = Math.min(range.length, 18);\n\n    if (newStopsLength > maxRangeLength) {\n        const rangeCycles = Math.floor((newStopsLength) / maxRangeLength);\n        for (let i = 0; i < rangeCycles; i++) {\n            newRange = [...newRange, ...range];\n        }\n        newRange = [...newRange, ...range.slice(0, (newStopsLength) % maxRangeLength)];\n    } else {\n        newRange = range.slice(0, newStopsLength);\n    }\n    return { newRange };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @returns\n */\nconst piecewiseDomain = (domain, stops, range) => {\n    let newRange = [];\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    const hslValues = range.map(e => getHslString(e));\n    const fn = piecewiseInterpolator()(hslInterpolator(), [...hslValues]);\n    newRange = retDomain.map(e => fn(e));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1], range: newRange };\n};\n\n/**\n*\n*\n* @param {*} domain\n* @returns\n*/\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @returns\n */\nconst indexedDomainMeasure = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { domain, uniqueVals, scaleDomain: [0, 1], range };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @returns\n */\nconst normalDomain = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain, nice: true, range };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} stops\n * @returns\n */\nconst steppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, stops);\n    const { newRange } = rangeStops(newStops.length - 1, range);\n\n    return { uniqueVals, domain: newStops, nice: true, range: newRange };\n};\n\nconst continousSteppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, range.length - 1);\n\n    // const { newRange } = rangeStops(newStops.length, range);\n\n    return { uniqueVals, domain: newStops, nice: true, range };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n * @returns\n */\nconst uniqueRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @returns\n */\nconst indexedRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale) => scale(domainValue);\n\n/**\n *\n *\n * @param {*} stops\n */\nconst strategies = () => ({\n    [`${CONTINOUS}-${CONTINOUS}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${DISCRETE}-${CONTINOUS}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomain,\n        value: () => uniqueRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomain,\n        value: () => uniqueRange\n    },\n    [`${DISCRETE}-${CONTINOUS}-${ORDINAL}`]: {\n        scale: ORDINAL,\n        domainRange: () => piecewiseDomain,\n        value: () => normalRange\n\n    },\n    [`${DISCRETE}-${DISCRETE}-${ORDINAL}`]: {\n        scale: ORDINAL,\n        domainRange: () => normalDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}-${ORDINAL}`]: {\n        scale: LINEAR,\n        domainRange: () => continousSteppedDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${ORDINAL}`]: {\n        scale: QUANTILE,\n        domainRange: () => steppedDomain,\n        value: () => normalRange\n\n    }\n});\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} stops\n */\nexport const strategyGetter = (domainType, rangeType, schemeType, stops) =>\n     strategies(stops)[`${domainType}-${rangeType}-${schemeType || ''}`];\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters, rgbToHsv } from 'muze-utils';\nimport { createScale, getScheme, getSchemeType } from '../scale-creator';\nimport { CONTINOUS, DISCRETE, COLOR } from '../enums/constants';\nimport { strategyGetter } from './color-strategy';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { PROPS, getHslString } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ColorAxis {\n\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} config input parameters.\n    * @param {Object | undefined} params.range Type of color range.\n    * @param {string} params.name the label to show on axis.\n    * @param {string} params.type The type of scale to handle.\n    * @memberof ColorAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n        this.config(config);\n\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = (this._config.type === 'linear' && !this._config.step) ? CONTINOUS : DISCRETE;\n\n        this._schemeType = getSchemeType(this._config.range);\n\n        this._colorStrategy = this.setColorStrategy(this._domainType, this._rangeType, this._schemeType);\n        this._scale = this.createScale(this._colorStrategy);\n\n        this._id = getUniqueId();\n\n        this.updateDomain(config.domain);\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof ColorAxis\n     */\n    static type () {\n        return COLOR;\n    }\n\n    /**\n     *\n     *\n     * @param {*} colorStrategy\n     * @returns\n     * @memberof ColorAxis\n     */\n    createScale (colorStrategy) {\n        const { range } = this.config();\n        if (range && typeof (range) === 'string') {\n            return getScheme(range);\n        }\n        return createScale({\n            type: colorStrategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     * @returns\n     * @memberof ColorAxis\n     */\n    setColorStrategy (domainType, rangeType, schemeType) {\n        const { stops } = this.config();\n\n        return strategyGetter(domainType, rangeType, schemeType, stops);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     * @returns\n     * @memberof ColorAxis\n     */\n    getHslString (hslColorArray) {\n        return getHslString(hslColorArray);\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     * @returns\n     * @memberof ColorAxis\n     */\n    getColor (domainVal) {\n        return this.getHslString(this.getRawColor(domainVal));\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     * @returns\n     * @memberof ColorAxis\n     */\n    getRawColor (domainVal) {\n        if (this.domain() && domainVal !== undefined) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const color = this._colorStrategy.value(range)(domainVal, scale, this.domain(), this.uniqueValues());\n\n            if (typeof color === 'string') {\n                const rgbArr = color.substring(4, color.length - 1)\n                            .replace(/ /g, '')\n                            .split(',');\n                return rgbToHsv(...rgbArr);\n            }\n            return [...color];\n        }\n        return [...this.config().value];\n    }\n\n    /**\n     *\n     *\n     * @param {*} [domain=[]]\n     * @returns\n     * @memberof ColorAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const domainRangeFn = this._colorStrategy.domainRange();\n            const scaleInfo = domainRangeFn(domain, this.config().stops, range);\n\n            this.domain(scaleInfo.domain);\n            scaleInfo.range && this.scale().range(scaleInfo.range);\n            this.uniqueValues(scaleInfo.uniqueVals);\n            this.scale().domain(scaleInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            config: this.config()\n        };\n    }\n\n    transformColor (color, transformationArr) {\n        let h = color[0] * 360;\n        let s = color[1] * 100;\n        let l = color[2] * 100;\n        let a = color[3] || 1;\n        const newH = h + transformationArr[0];\n        const newS = s + transformationArr[1];\n        const newL = l + transformationArr[2];\n        const newA = a + transformationArr[3] || 0;\n        h = newH > 360 ? newH - 360 : (newH < 0 ? newH + 360 : newH);\n        s = newS > 100 ? newS - 100 : (newS < 0 ? newS + 100 : newS);\n        l = newL > 100 ? newL - 100 : (newL < 0 ? newL + 100 : newL);\n        a = newA > 1 ? newA - 1 : (newA < 0 ? newA + 1 : newA);\n\n        return { color: `hsl(${h},${s}%,${l}%,${a})`, hsla: [h / 360, s / 100, l / 100, a] };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n\n}\n","export const DEFAULT_CONFIG = {\n    value: 36,\n    range: [36, 1000]\n};\n","import { numberInterpolator, piecewiseInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, THRESHOLD } from '../enums/scale-type';\n\n/**\n *\n *\n * @param {*} domain\n * @returns\n */\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @returns\n */\nconst normalDomain = (domain) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} intervals\n * @returns\n */\nconst steppedDomain = (domain, intervals) => {\n    let newIntervals = [];\n    if (intervals instanceof Array) {\n        newIntervals = intervals.slice().sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i < intervals; i++) {\n            newIntervals[i] = interpolator(i / (intervals - 1));\n        }\n    }\n    if (newIntervals[0] < domain[0]) {\n        newIntervals.shift();\n    }\n    const retDomain = newIntervals;\n    return { uniqueVals: newIntervals, domain: retDomain, nice: true };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n * @returns\n */\nconst discreteRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n    const interpolator = numberInterpolator()(...scale.range());\n    return interpolator(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @returns\n */\nconst pieceWiseRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    const fn = piecewiseInterpolator()(numberInterpolator(), [...scale.range()]);\n    return fn(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale) => scale(domainValue);\n\n/**\n *\n *\n * @param {*} intervals\n */\nconst strategies = {\n    [`${DISCRETE}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: indexedDomain,\n        range: pieceWiseRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: normalDomain,\n        range: normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}`]: {\n        scale: THRESHOLD,\n        domain: steppedDomain,\n        range: discreteRange\n    }\n};\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} intervals\n */\nexport const strategyGetter = (domainType, rangeType) =>\n     strategies[`${domainType}-${rangeType}`];\n","export const PROPS = {\n    config: {},\n    domain: {\n        sanitization: (context, value) => {\n            context.scale().domain(value);\n            return value;\n        }\n    },\n    range: {},\n    scale: {},\n    uniqueValues: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SIZE, CONTINOUS, DISCRETE } from '../enums/constants';\nimport { strategyGetter } from './size-strategy';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class SizeAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @param {Object} config input parameters.\n     * @memberof SizeAxis\n     */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig(), config);\n        // @todo: Will use configuration override using scale decorator\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = CONTINOUS;\n\n        this._sizeStrategy = this.setStrategy(this._domainType, this._rangeType);\n        this._scale = this.createScale(this._sizeStrategy);\n        this._range = this._config.range;\n\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     * @returns\n     * @memberof ColorAxis\n     */\n    setStrategy (domainType, rangeType) {\n        return strategyGetter(domainType, rangeType);\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SizeAxis\n     */\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SIZE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     * @returns\n     * @memberof SizeAxis\n     */\n    getSize (domainVal = 0) {\n        let sizeVal = 1;\n        const {\n            value\n        } = this.config();\n        const scale = this.scale();\n        const domain = this.domain() || [1, 1];\n\n        if (!scale || domain[0] === domain[1]) {\n            sizeVal = value;\n        } else {\n            return this._sizeStrategy.range(domainVal, scale, this.domain(), this.uniqueValues());\n        }\n        return sizeVal;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SizeAxis\n     */\n    updateDomain (domain) {\n        if (domain) {\n            const domainFn = this._sizeStrategy.domain;\n\n            const domainInfo = domainFn(domain, this.config().intervals);\n\n            this.domain(domainInfo.domain);\n            this.uniqueValues(domainInfo.uniqueVals);\n\n            this.scale().domain(domainInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","export const DEFAULT_CONFIG = {\n    generator: null,\n    value: 'circle',\n    range: ['circle', 'diamond', 'star', 'cross', 'square', 'wye', 'triangle']\n};\n","export const PROPS = {\n    config: {},\n    domain: {},\n    scale: {},\n    uniqueValues: {},\n    generator: {}\n};\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, getSymbol, generateGetterSetters, mergeRecursive } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SHAPE } from '../enums/constants';\nimport { shapeGenerator } from './helper';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ShapeAxis {\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} params input parameters.\n    * @param {Object | undefined} params.range Type of color scheme.\n    * @memberof ShapeAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(this._config, config);\n\n        this._scale = createScale({\n            type: 'ordinal',\n            range: this._config.range\n        });\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SHAPE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} value\n     * @returns\n     * @memberof ShapeAxis\n     */\n    getShape (value) {\n        if (!this.scale() || !this.domain() || !value) {\n            return this.config().value;\n        }\n\n        if (this._generatedShapes) {\n            return this._generatedShapes[value];\n        }\n\n        const shapeType = this.scale()(value);\n        if (shapeType === 'string') {\n            return getSymbol(shapeType);\n        }\n\n        return shapeType;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof ShapeAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            this.uniqueValues(domain);\n            this.domain(domain);\n            this.scale().domain(domain);\n\n            if (this.config().generator) {\n                this._generatedShapes = shapeGenerator(domain, this.config().generator);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.config().range,\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","/**\n *\n *\n * @param {*} domain\n * @param {*} generatorFn\n * @returns\n */\nexport const shapeGenerator = (domain, generatorFn) => {\n    const generatedShapes = {};\n    domain.forEach((value) => {\n        generatedShapes[value] = generatorFn(value);\n    });\n    return generatedShapes;\n};\n","import * as ScaleType from './enums/scale-type';\n\nconst DATA_TYPES = {\n    DIMENSION: 'dimension',\n    CATEGORICAL: 'categorical',\n    MEASURE: 'measure',\n    DATETIME: 'temporal'\n};\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    [DATA_TYPES.DIMENSION]: ScaleType.BAND,\n    [DATA_TYPES.MEASURE]: ScaleType.LINEAR,\n    [DATA_TYPES.DATETIME]: ScaleType.TIME\n};\n\n","import { FieldType, DimensionSubtype } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport * as PROPS from '../../enums/props';\nimport { STACK } from '../../enums/constants';\nimport { getLayerColor, positionPoints } from '../../helpers/';\n\nconst BAND = ScaleType.BAND;\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fieldInfo\n * @param {*} config\n * @param {*} data\n * @returns\n */\nconst resolveDimByField = (type, axesInfo, config, data) => {\n    const spaceType = type === 'x' ? 'width' : 'height';\n    const [fieldType, axis] = [config[`${type}FieldType`], axesInfo[`${type}Axis`]];\n    const {\n        transformType,\n        sizeEncoding,\n        sizeConfig,\n        measurement\n    } = config;\n\n    const sizeValue = sizeEncoding.value;\n    let enter = 0;\n    let pos;\n    let space = 0;\n    let enterSpace = 0;\n    if (fieldType !== undefined) {\n        if (config[`${type}0Field`]) {\n            const minVal = data[type];\n            const maxVal = data[`${type}0`];\n            let min;\n            let max;\n            if (minVal === null || maxVal === null) {\n                return {\n                    enterSpace: undefined,\n                    enter: undefined,\n                    pos: undefined,\n                    space: undefined\n                };\n            } else if (fieldType === FieldType.MEASURE || fieldType === DimensionSubtype.TEMPORAL) {\n                min = Math.min(minVal, maxVal);\n                max = Math.max(minVal, maxVal);\n            } else {\n                min = minVal;\n                max = maxVal;\n            }\n            const scales = type === 'x' ? [min, max] : [max, min];\n            pos = axis.getScaleValue(scales[0]) + axis.getUnitWidth() / 2;\n            space = Math.abs(axis.getScaleValue(scales[1]) - pos) + axis.getUnitWidth() / 2;\n\n            enter = pos;\n            enterSpace = 0;\n        } else if (fieldType === DimensionSubtype.CATEGORICAL || fieldType === DimensionSubtype.TEMPORAL) {\n            pos = axis.getScaleValue(data[type]) +\n                (sizeConfig[type === 'x' ? 'barWidthOffset' : 'barHeightOffset'] || 0);\n\n            space = sizeConfig[type === 'x' ? 'barWidth' : 'barHeight'];\n            if (sizeValue !== undefined) {\n                const diffPx = sizeValue * space;\n                space -= diffPx;\n                pos += diffPx / 2;\n            }\n            enter = pos;\n            enterSpace = space;\n        } else {\n            const zeroPos = axis.getScaleValue(0);\n            const axisType = axis.getScaleValue(data[type]);\n            const axisType0 = axis.getScaleValue(data[`${type}0`]);\n\n            enterSpace = 0;\n            if (type === 'x') {\n                pos = data[type] < 0 || transformType === STACK ? axisType : zeroPos;\n                space = Math.abs(pos - (transformType === STACK ? axisType0 : (data[type] >= 0 ? axisType : zeroPos)));\n            } else {\n                pos = transformType === STACK || data[type] >= 0 ? axisType : zeroPos;\n                space = Math.abs(pos - (transformType === STACK ? axisType0 : (data[type] >= 0 ? zeroPos : axisType)));\n            }\n            enter = zeroPos;\n        }\n    } else {\n        pos = 0;\n        space = measurement[spaceType];\n    }\n\n    return {\n        enterSpace,\n        enter,\n        pos,\n        space\n    };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} config\n * @param {*} axes\n * @returns\n */\nconst resolveDimensions = (data, config, axes) => {\n    const axesInfo = {\n        xAxis: axes.x,\n        yAxis: axes.y\n    };\n    const {\n        enterSpace: enterWidth,\n        enter: enterX,\n        pos: xPos,\n        space: width\n    } = resolveDimByField('x', axesInfo, config, data);\n\n    const {\n        enterSpace: enterHeight,\n        enter: enterY,\n        pos: yPos,\n        space: height\n    } = resolveDimByField('y', axesInfo, config, data);\n    return {\n        enter: {\n            x: enterX,\n            y: enterY,\n            width: enterWidth,\n            height: enterHeight\n        },\n        update: {\n            x: xPos,\n            y: yPos,\n            width,\n            height\n        }\n    };\n};\n\n/**\n  * Gets the width of each bar. It gets the width from axis if it is available for\n  * example when the scale is nominal else it calculates the width from the\n  * range of the axis and number of data points.\n  * @param {SimpleAxis} axis instance of axis\n  * @param {number} minDiff Minimum difference between data points\n  * @return {number} width of each bar\n  * @private\n*/\nconst getGroupWidth = (axis, minDiff) => {\n    let barWidth;\n    const width = axis.getUnitWidth();\n    const scale = axis.scale();\n    const range = scale.range();\n    const domain = scale.domain();\n    !width ? barWidth = (Math.abs(range[1] - range[0])\n        / Math.abs(domain[1] - domain[0])) * minDiff :\n        (barWidth = width);\n\n    return barWidth;\n};\n\n/**\n * Gets the width and offset values of the bar.\n * Bar layer can be grouped or stacked based on which the width and offsetValues are\n * calculated.\n * @param { Axis } axis Axis instance needed for calculating the group width\n * @param { number } dataLen Number of data points\n * @param { string} transformType type of transform - group, stack\n * @param { number } innerPadding padding between bars.\n * @param {number} keys Series values\n * @return { Object } Width and offset of bars.\n */\nexport const getBarMeasurement = (axis, bandScale, config) => {\n    let width;\n    let offsetValues;\n    let actualGroupWidth;\n    let padding;\n    const scale = axis.scale();\n    const {\n        timeDiff,\n        transformType,\n        keys,\n        pad,\n        innerPadding\n    } = config;\n    const groupWidth = getGroupWidth(axis, timeDiff);\n    const isAxisBandScale = axis.constructor.type() === BAND;\n    const axisPadding = axis.config().padding;\n    // If it is a grouped bar then the width of each bar in a grouping is retrieved from\n    // a band scale. The band scale will have range equal to width of one group of bars and\n    // the domain is set to series keys.\n    if (transformType === 'group') {\n        const groupPadding = isAxisBandScale ? 0 : axisPadding * groupWidth / 2;\n        bandScale.range([groupPadding, groupWidth - groupPadding])\n                        .domain(keys);\n        isAxisBandScale ? bandScale.paddingInner(innerPadding) : bandScale.paddingInner(innerPadding);\n        width = bandScale.bandwidth();\n        actualGroupWidth = groupWidth - (isAxisBandScale ? 0 : innerPadding * groupWidth);\n        offsetValues = keys.map(key => bandScale(key) - (isAxisBandScale ? 0 : (groupWidth / 2)));\n    } else if (pad !== undefined) {\n        let offset;\n        if (isAxisBandScale) {\n            const step = scale.step();\n            offset = scale.padding() * step;\n            width = scale.bandwidth() + offset;\n        } else {\n            width = groupWidth;\n        }\n        offsetValues = keys.map(() => (isAxisBandScale ? -(offset / 2) : -(width / 2)));\n    } else {\n        padding = isAxisBandScale ? 0 : axisPadding * groupWidth;\n        width = groupWidth - padding;\n        actualGroupWidth = width;\n        offsetValues = keys.map(() => (isAxisBandScale ? 0 : -(width / 2)));\n    }\n\n    return {\n        width,\n        offsetValues,\n        groupWidth: actualGroupWidth,\n        padding: isAxisBandScale ? axisPadding * axis.scale().step() : axisPadding * groupWidth\n    };\n};\n\n/**\n * Generates an array of objects containing x, y, width and height of the bars from the data\n * @param  {Array.<Array>} data Data Array\n * @param  {Object} encoding  Config\n * @param  {Object} axes     Axes object\n * @param {Object} conf config object for point generation\n * @return {Array.<Object>}  Array of points\n */\nexport const getTranslatedPoints = (context, data, sizeConfig) => {\n    let points = [];\n    const encoding = context.config().encoding;\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const fieldsConfig = context.data().getFieldsConfig();\n    const colorEncoding = encoding.color;\n    const colorField = colorEncoding.field;\n    const sizeEncoding = encoding.size || {};\n    const {\n            x0Field,\n            y0Field,\n            xFieldSubType,\n            yFieldSubType\n        } = context.encodingFieldsInf();\n    const measurement = context._store.get(PROPS.MEASUREMENT);\n    const isXDim = xFieldSubType === DimensionSubtype.CATEGORICAL || xFieldSubType === DimensionSubtype.TEMPORAL;\n    const isYDim = yFieldSubType === DimensionSubtype.CATEGORICAL || yFieldSubType === DimensionSubtype.TEMPORAL;\n    const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n    const transformType = context.transformType();\n    const colorFieldIndex = colorField && fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n    for (let i = 0, len = data.length; i < len; i++) {\n        const d = data[i];\n        const style = {};\n        const meta = {};\n        const dimensions = resolveDimensions(d, {\n            xFieldType: xFieldSubType,\n            yFieldType: yFieldSubType,\n            x0Field,\n            y0Field,\n            transformType,\n            measurement,\n            sizeConfig,\n            sizeEncoding\n        }, axes);\n\n        const { color, rawColor } = getLayerColor({ datum: d, index: i },\n            { colorEncoding, colorAxis, colorFieldIndex });\n\n        style.fill = color;\n        meta.stateColor = {};\n        meta.originalColor = rawColor;\n        meta.colorTransform = {};\n\n        const update = dimensions.update;\n\n        if (!isNaN(update.x) && !isNaN(update.y) && d._id !== undefined) {\n            let point = null;\n            point = {\n                enter: dimensions.enter,\n                update,\n                style,\n                _data: d._data,\n                _id: d._id,\n                source: d._data,\n                rowId: d._id,\n                meta\n            };\n            points.push(point);\n            // Store each point in a hashmap with key as the dimensional or temporal field value\n            context.cachePoint(d[key], point);\n        }\n    }\n\n    points = positionPoints(context, points);\n    return points;\n};\n","import {\n    getClosestIndexOf,\n    getQualifiedClassName,\n    selectElement,\n    createElements,\n    clipElement,\n    DimensionSubtype,\n    FieldType,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawRects } from './renderer';\nimport { defaultConfig } from './default-config';\nimport * as PROPS from '../../enums/props';\nimport './styles.scss';\nimport { getTranslatedPoints, getBarMeasurement } from './bar-helper';\n\nconst MEASURE = FieldType.MEASURE;\nconst scaleBand = Scales.band;\n/**\n * Bar Layer creates a bar plot. It needs to be passed a data table, axes and configuration of the layer.\n *\n * @example\n * const BarLayer = layerFactory.getLayer('bar');\n * BarLayer.create()\n *  .config(config)\n *  .data(dt)\n *  .mountPoint(container);\n * @class\n */\nexport default class BarLayer extends BaseLayer {\n    /**\n     * Creates an instance of bar layer\n     */\n    constructor (...params) {\n        super(...params);\n        this._bandScale = scaleBand();\n        this._pointMap = {};\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BarLayer\n     */\n    elemType () {\n        return 'rect';\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof BarLayer\n     */\n    static formalName () {\n        return 'bar';\n    }\n\n    /**\n     * Returns the default configuration of the bar layer\n     * @return {Object} Default configuration of the bar layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     * @returns\n     * @memberof BarLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const colorField = encoding.color.field;\n        const transform = config.transform;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} fieldsConfig\n     * @returns\n     * @memberof BarLayer\n     */\n    calculateDomainFromData (data, encodingFieldInf, fieldsConfig) {\n        const domain = super.calculateDomainFromData(data, encodingFieldInf, fieldsConfig);\n        ['x', 'y'].forEach((d) => {\n            if (encodingFieldInf[`${d}FieldType`] === MEASURE && domain[d]) {\n                encodingFieldInf[`${d}0Field}`] ? domain[d] = domain[d].sort((a, b) => a - b) :\n                    (domain[d][0] = Math.min(domain[d][0], 0));\n            }\n        });\n        return domain;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the bars from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @param {Object} conf config object for point generation\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, sizeConfig) {\n        return getTranslatedPoints(this, data, sizeConfig);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGGroup} container SVGGroup where plot will be rendered.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    render (container) {\n        const config = this.config();\n        const transition = config.transition;\n        const store = this._store;\n        const normalizedDataArr = store.get(PROPS.NORMALIZED_DATA);\n        const transformedData = store.get(PROPS.TRANSFORMED_DATA);\n        const keys = transformedData.map(d => d.key);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const height = axes.y && axes.y.scale().range()[0];\n        const width = axes.x && axes.x.scale().range()[1];\n        const defClassName = config.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const className = config.className;\n        const containerSelection = selectElement(container);\n        const dimensions = Object.values(fieldsConfig).filter(e => e.def.type === FieldType.DIMENSION)\n            .map(e => e.index);\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        clipElement(container, {\n            x: 0,\n            y: 0,\n            width,\n            height\n        }, `id-${this.id()}`);\n\n        this._points = this.generateDataPoints(normalizedDataArr, keys);\n\n        createElements({\n            data: this._points,\n            container,\n            selector: 'g',\n            append: 'g',\n            each: (points, group, i) => {\n                const seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n                group.style('display', 'block');\n                drawRects({\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: {},\n                    keyFn: d => dimensions.map(key => d._data[key]).join('-'),\n                    classnameFn: config.individualClassName\n                });\n            }\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} normalizedData\n     * @param {*} keys\n     * @returns\n     * @memberof BarLayer\n     */\n    generateDataPoints (normalizedData, keys) {\n        const config = this.config();\n        const axes = this.axes();\n        const transformType = this.transformType();\n        const fieldInfo = this.encodingFieldsInf();\n        const [barWidthMetrics, barHeightMetrics] = ['x', 'y'].map((type) => {\n            if (fieldInfo[`${type}FieldType`] === FieldType.DIMENSION) {\n                const isTemporal = fieldInfo[`${type}FieldSubType`] === DimensionSubtype.TEMPORAL;\n                const timeDiff = isTemporal ? this.dataProps().timeDiffs[type] : 0;\n                return getBarMeasurement(axes[type], this._bandScale, {\n                    timeDiff,\n                    transformType,\n                    keys,\n                    pad: config[`pad${type.toUpperCase()}`],\n                    innerPadding: config.innerPadding\n                });\n            } return {};\n        });\n        const barWidthOffsets = barWidthMetrics.offsetValues || [];\n        const barHeightOffsets = barHeightMetrics.offsetValues || [];\n        this._plotSpan = {\n            x: barWidthMetrics.groupWidth || 0,\n            y: barHeightMetrics.groupWidth || 0\n        };\n        this._plotPadding = {\n            x: barWidthMetrics.padding || 0,\n            y: barHeightMetrics.padding || 0\n        };\n\n        this._pointMap = {};\n        return normalizedData.map((data, i) => this.translatePoints(data,\n            {\n                barWidth: barWidthMetrics.width,\n                barWidthOffset: barWidthOffsets[i] || 0,\n                barHeight: barHeightMetrics.width,\n                barHeightOffset: barHeightOffsets[i] || 0\n            }));\n    }\n\n    getPlotPadding () {\n        return this._plotPadding;\n    }\n    /**\n     * Gets the nearest point of the position passed.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point.\n     */\n    getNearestPoint (x, y) {\n        if (!this.data()) {\n            return null;\n        }\n        let axis;\n        let value;\n        let index;\n        let points;\n        let uniqueFieldType;\n        let uniqueFieldIndex;\n        let filterData;\n        let identifiers;\n        let pointFound = null;\n        const dataModel = this.data();\n        const dataObj = dataModel.getData();\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const axes = this.axes();\n        const data = dataObj.data;\n        const pointMap = this._pointMap;\n        const {\n                xField,\n                yField,\n                xFieldSubType,\n                yFieldSubType\n            } = this.encodingFieldsInf();\n\n        if (xFieldSubType === FieldType.MEASURE) {\n            axis = axes.y;\n            value = axis.invert(y);\n            uniqueFieldIndex = fieldsConfig[yField].index;\n            uniqueFieldType = yFieldSubType;\n        } else {\n            axis = axes.x;\n            value = axis.invert(x);\n            uniqueFieldIndex = fieldsConfig[xField].index;\n            uniqueFieldType = xFieldSubType;\n        }\n\n        if (uniqueFieldType === DimensionSubtype.CATEGORICAL) {\n            points = pointMap[value];\n        }\n\n        if (uniqueFieldType === DimensionSubtype.TEMPORAL) {\n            filterData = [...new Set(data.map(d => d[uniqueFieldIndex]))];\n            index = getClosestIndexOf(filterData, value);\n            value = filterData[index];\n            points = pointMap[value];\n        }\n        const len = points && points.length;\n        points && points.sort((p1, p2) => p1.update.y - p2.update.y);\n        for (let i = 0; i < len; i++) {\n            const point = points[i];\n            const update = point.update;\n            if (x >= update.x && x <= (update.width + update.x) && y >= update.y && y <= (update.height + update.y)) {\n                pointFound = point;\n                break;\n            }\n            pointFound = null;\n        }\n\n        const values = pointFound && pointFound._data;\n        if (values) {\n            identifiers = this.getIdentifiersFromData(values, pointFound._id);\n        }\n        return pointFound ? {\n            dimensions: [pointFound.update],\n            id: identifiers,\n            layerId: this.id()\n        } : pointFound;\n    }\n\n    getPlotSpan () {\n        return this._plotSpan;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-tick',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, +20, -20, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, -0, +30, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, -30, +30, 0]\n        }]\n    },\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: { },\n        x: {},\n        y: {},\n        x0: {},\n        y0: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-tick-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-tick-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-tick-selected`\n        }\n    }\n};\n","import { selectElement } from 'muze-utils';\n\n/**\n * Draws ticks by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Ticks Selection\n */\nexport default /* istanbul ignore next */ (params) => {\n    const { points, container, keyFn, className } = params;\n    const mount = selectElement(container);\n    const ticks = mount.selectAll('path').data(points, keyFn);\n    const ticksEnter = ticks.enter().append('path');\n\n    mount.attr('class', className || '');\n    ticksEnter.each(function (d) {\n        const selection = selectElement(this);\n        const enter = d.enter || {};\n        Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n    });\n\n    ticks.exit().remove();\n    return ticks.merge(ticksEnter)\n                    .each(function (d) {\n                        const selection = selectElement(this);\n                        const update = d.update;\n                        const updateStyle = d.style || {};\n                        const x0 = update.x0 !== undefined ? update.x0 : update.x;\n                        const y0 = update.y0 !== undefined ? update.y0 : update.y;\n                        const path = `M ${update.x} ${update.y} L ${x0} ${y0}`;\n                        d.className && selection.classed(d.className, true);\n                        selection.attr('d', path);\n                        Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n                    });\n};\n\n","import { FieldType } from 'muze-utils';\nimport { PointLayer } from '../point';\nimport { defaultConfig } from './default-config';\nimport * as PROPS from '../../enums/props';\nimport { ENCODING } from '../../enums/constants';\nimport drawTicks from './renderer';\nimport './styles.scss';\nimport { getAxesScales, getLayerColor, positionPoints } from '../../helpers';\n\nexport default class TickLayer extends PointLayer {\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof TickLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof TickLayer\n     */\n    static formalName () {\n        return 'tick';\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof TickLayer\n     */\n    static drawFn () {\n        return drawTicks;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof TickLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes) {\n        let points = [];\n        const {\n                xAxis,\n                yAxis\n            } = getAxesScales(axes);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const individualClassName = this.config().individualClassName;\n        const {\n                xField,\n                yField,\n                x0Field,\n                y0Field,\n                xFieldType,\n                yFieldType\n            } = this.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding && colorEncoding.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n        const measurement = this._store.get(PROPS.MEASUREMENT);\n        const colorAxis = axes.color;\n        const xbandwidth = xAxis ? xAxis.getUnitWidth() : 0;\n        const ybandwidth = yAxis ? yAxis.getUnitWidth() : 0;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            let xPx;\n            let x0Px;\n            let y0Px;\n            let yPx;\n            const d = data[i];\n            const row = d._data;\n            if (xField) {\n                xPx = xAxis.getScaleValue(d.x);\n                x0Px = xPx + xbandwidth;\n            }\n\n            if (yField) {\n                yPx = yAxis.getScaleValue(d.y);\n                y0Px = yPx !== null ? yPx + ybandwidth : null;\n            }\n\n            if (!xField) {\n                xPx = 0;\n                x0Px = measurement.width;\n                if (!isNaN(yPx)) {\n                    yPx += ybandwidth / 2;\n                    y0Px = yPx;\n                }\n            }\n\n            if (!yField) {\n                yPx = 0;\n                y0Px = measurement.height;\n                x0Px = xPx += xbandwidth / 2;\n            }\n\n            if (x0Field) {\n                x0Px = xAxis.getScaleValue(d.x0) + xbandwidth;\n                yPx += ybandwidth / 2;\n                y0Px -= ybandwidth / 2;\n            }\n\n            if (y0Field) {\n                y0Px = yAxis.getScaleValue(d.y0) + ybandwidth;\n                xPx += xbandwidth / 2;\n                x0Px -= xbandwidth / 2;\n            }\n            const style = {};\n            const meta = {};\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            style.stroke = color;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {},\n                    update: {\n                        x: xPx,\n                        y: yPx,\n                        x0: x0Px,\n                        y0: y0Px\n                    },\n                    style,\n                    _data: row,\n                    _id: d._id,\n                    source: row,\n                    rowId: d._id,\n                    meta\n                };\n                if (individualClassName instanceof Function) {\n                    point.className = individualClassName(d, i);\n                }\n\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n}\n","import { isSimpleObject, mergeRecursive, getObjProp } from 'muze-utils';\n\nconst parseLayerDefinition = (sink, definition, layerDef, layerType) => {\n    for (const key in definition) {\n        if (Object.hasOwnProperty.call(definition, key)) {\n            let strs;\n            let propValue;\n            const def = definition[key];\n            if (isSimpleObject(def)) {\n                sink[key] = {};\n                parseLayerDefinition(sink[key], def, layerDef, layerType);\n            } else if (typeof def === 'string' && (strs = def.split('.')) && strs[0] === layerType) {\n                propValue = getObjProp(layerDef, ...strs.slice(1, strs.length));\n                if (propValue !== undefined) {\n                    sink[key] = propValue;\n                }\n            } else {\n                sink[key] = def;\n            }\n        }\n    }\n};\n\nconst sanitizeEncoding = (encoding) => {\n    // Create object for each encoding value if encoding value is a string\n    for (const key in encoding) {\n        if (typeof encoding[key] === 'string') {\n            encoding[key] = {\n                field: encoding[key]\n            };\n        }\n    }\n};\n\n/**\n * Layer Factory creates layers based on the layer type. All types of layers needs to register in\n * the layer factory. For getting a layer instance, getLayer method needs to invoked with the\n * layerType and other arguments.\n */\nconst layerFactory = (() => {\n    const compositeLayers = {};\n    const factoryObj = {\n        setLayerRegistry: (reg) => {\n            factoryObj._layerRegistry = reg;\n        },\n        getSerializedConf: (mark, layerDef) => {\n            let serializedDefs;\n            const defs = compositeLayers[mark];\n            const newConf = mergeRecursive({}, layerDef);\n\n                // If it is a composite layer then resolve all the definitions of each unit layer\n            if (defs) {\n                serializedDefs = defs.map((unitLayerDef) => {\n                    const sDef = {};\n                    parseLayerDefinition(sDef, unitLayerDef, newConf, mark);\n                    sanitizeEncoding(sDef.encoding);\n                    return sDef;\n                });\n            } else {\n                const encoding = newConf.encoding;\n                // Create object for each encoding value if encoding value is a string\n                sanitizeEncoding(encoding);\n                serializedDefs = newConf;\n            }\n\n            return serializedDefs;\n        },\n        getLayerInstance: (layerDef) => {\n            const layerRegistry = factoryObj._layerRegistry;\n            layerDef = !(layerDef instanceof Array) ? [layerDef] : layerDef;\n            const instances = layerDef.map((layerObj) => {\n                const layerConstructor = layerRegistry[layerObj.mark];\n                return layerConstructor.create();\n            });\n            return instances.length === 1 ? instances[0] : instances;\n        },\n        composeLayers: (layerType, layerDefs) => {\n            compositeLayers[layerType] = layerDefs;\n        }\n    };\n    return factoryObj;\n})();\n\nexport default layerFactory;\n","import { AreaLayer } from './layers/area';\nimport { ArcLayer } from './layers/arc';\nimport { LineLayer } from './layers/line';\nimport { TextLayer } from './layers/text';\nimport { PointLayer } from './layers/point';\nimport { BarLayer } from './layers/bar';\nimport { BaseLayer } from './base-layer';\nimport * as CONSTANTS from './enums/constants';\nimport { TickLayer } from './layers/tick';\n\nexport const DEFAULT_LAYERS = {\n    [CONSTANTS.AREA_LAYER]: AreaLayer,\n    [CONSTANTS.ARC_LAYER]: ArcLayer,\n    [CONSTANTS.LINE_LAYER]: LineLayer,\n    [CONSTANTS.TEXT_LAYER]: TextLayer,\n    [CONSTANTS.POINT_LAYER]: PointLayer,\n    [CONSTANTS.TICK_LAYER]: TickLayer,\n    [CONSTANTS.BAR_LAYER]: BarLayer,\n    [CONSTANTS.BASE_LAYER]: BaseLayer\n};\n","/**\n * This file exports constants that are used as enums in the\n *  crosstab group implementation.\n */\n/**\n * Width of the crosstab.\n */\nexport const X = 'x';\n/**\n * Width of the crosstab.\n */\nexport const Y = 'y';\n/**\n * Width of the crosstab.\n */\nexport const WIDTH = 'width';\n\n/**\n * Height of the crosstab.\n */\nexport const HEIGHT = 'height';\n\n/**\n * Field referring to object storing measurement configuration.\n */\nexport const MEASUREMENT = 'measurement';\n\n/**\n * Field referring to object storing configuration properties.\n */\nexport const CONFIG = 'config';\n\n/**\n * Width of visual unit in crosstab.\n */\nexport const MIN_UNIT_WIDTH = 'minUnitWidth';\n\n/**\n * Height of visual unit.\n */\nexport const MIN_UNIT_HEIGHT = 'minUnitHeight';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSIONS = 'dimensions';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURES = 'measures';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSION = 'dimension';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURE = 'measure';\n\n/**\n * Flag to specify if model should be pivoted.\n */\nexport const PIVOT = 'pivot';\n\n/**\n * Flag to specify format\n */\nexport const FORMAT = 'format';\n\n/**\n * Mount point where the variable will be hosted\n */\nexport const MOUNT = 'mount';\n\n/**\n * Data update flag\n */\nexport const HAS_DATA_UPDATED = 'hasDataUpdated';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROWS = 'rows';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMNS = 'columns';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COL = 'col';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROW = 'row';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMN = 'column';\n\n/**\n * Field referring to object storing color field\n */\nexport const COLOR = 'color';\n\n/**\n * Field referring to object storing shape field\n */\nexport const SHAPE = 'shape';\n\n/**\n * Field referring to object storing size field\n */\nexport const SIZE = 'size';\n\n/**\n * Field referring to object storing detail field\n */\nexport const DETAIL = 'detail';\n\n/**\n * Field referring to object storing set of layers\n */\nexport const LAYERS = 'layers';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const TRANSFORM = 'transform';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const ORDINAL = 'ordinal';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const LINEAR = 'linear';\n/**\n * Field referring to object storing the transforms\n */\nexport const LEFT = 'left';\n/**\n * Field referring to object storing the transforms\n */\nexport const RIGHT = 'right';\n/**\n * Field referring to object storing the transforms\n */\nexport const TOP = 'top';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTTOM = 'bottom';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const RETINAL = 'retinal';\n/**\n * Field referring to object storing the transforms\n */\nexport const CELL = 'cell';\n/**\n * Field referring to object storing the transforms\n */\nexport const X_AXES = 'xAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const Y_AXES = 'yAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const ENTRY_CELLS = 'entryCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const INITIALIZED = 'initialized';\n/**\n * Field referring to object storing the transforms\n */\nexport const EXIT_CELLS = 'exitCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const AXIS = 'axis';\n/**\n * Field referring to object storing the transforms\n */\nexport const UNIT = 'unit';\n/**\n * Field referring to object storing the transforms\n */\nexport const UPDATED = 'updated';\n/**\n * Field referring to object storing the transforms\n */\nexport const BEFORE_UPDATE = 'beforeupdate';\n/**\n * Field referring to object storing the transforms\n */\nexport const VALUE_MATRIX = 'valueMatrix';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET_HEADERS = 'facet-headers';\n/**\n * Field referring to object storing the transforms\n */\nexport const RADIUS = 'radius';\n/**\n * Field referring to object storing the transforms\n */\nexport const ANGLE = 'angle';\n/**\n * Field referring to object storing the transforms\n */\nexport const ARC = 'arc';\n/**\n * Field referring to object storing the transforms\n */\nexport const CARTESIAN = 'cartesian';\n/**\n * Field referring to object storing the transforms\n */\nexport const POLAR = 'polar';\n/**\n * Field referring to object storing the transforms\n */\nexport const CATEGORICAL = 'categorical';\n/**\n * Field referring to object storing the transforms\n */\nexport const TEMPORAL = 'temporal';\n/**\n * Field referring to object storing the transforms\n */\nexport const BAR = 'bar';\n/**\n * Field referring to object storing the transforms\n */\nexport const LINE = 'line';\n/**\n * Field referring to object storing the transforms\n */\nexport const POINT = 'point';\n/**\n * Field referring to object storing the transforms\n */\nexport const PRIMARY = 'Primary';\n/**\n * Field referring to object storing the transforms\n */\nexport const SECONDARY = 'Secondary';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTH = 'both';\n/**\n * Field referring to object storing the transforms\n */\nexport const INTERACTION = 'interaction';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_LINES = 'gridLines';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_BANDS = 'gridBands';\n/**\n * Field referring to object storing the transforms\n */\nexport const HEADER = 'header';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET = 'facet';\n\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\n/**\n * @module\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Artboard.\n * Artboard merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n */\n\nexport default {\n    [CONFIG]: {},\n    [ROWS]: [],\n    [COLUMNS]: [],\n    [COLOR]: '',\n    [SHAPE]: '',\n    [SIZE]: '',\n    [DETAIL]: '',\n    [LAYERS]: '',\n    [TRANSFORM]: []\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * Interfaces for VisualGroup. Any new VisualGroup has to implement this class.\n * @class  SimpleGroup\n */\nclass SimpleGroup {\n\n    /**\n     * This method is used to set or get the DataModel instance.\n     *\n     * @param {DataModel | undefined} dataModel Instance of datamodel.\n\n     * @memberof  SimpleGroup\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to set or get the group specific configuration\n     * properties\n     *\n     * @param {Object | undefined} configObj The input configuration.\n     *                                or instance of visual group.\n     * @memberof  SimpleGroup\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to return a serialized representation of the\n     * instance's properties.\n     *\n     * @memberof  SimpleGroup\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to get or set the measurement object which houses\n     * layout properties like width and height.\n     *\n     * @param {Object  | undefined} mObj The measurement properties.\n     * @memberof  SimpleGroup\n     */\n    measurement () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n\nexport default SimpleGroup;\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n *\n *\n * @export\n * @class Variable\n */\nexport default class Variable {\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    type () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    toString () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n","import Variable from './variable';\n\n/**\n *\n *\n * @class ComposeVars\n * @extends {Variable}\n */\nclass ComposedVars extends Variable {\n\n    /**\n     *Creates an instance of ComposeVars.\n     * @param {*} texts\n     * @memberof ComposeVars\n     */\n    constructor (...texts) {\n        super(...texts);\n        this.vars(texts);\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof ComposeVars\n     */\n    vars (...params) {\n        if (params.length) {\n            this._vars = params[0];\n            return this;\n        }\n        return this._vars;\n    }\n\n    /**\n     *\n     *\n     * @param {*} dm\n     * @returns\n     * @memberof ComposeVars\n     */\n    data (...dm) {\n        if (dm.length) {\n            this.vars().forEach(d => d.data(dm[0]));\n            return this;\n        }\n        return this._data;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof ComposeVars\n     */\n    getMembers () {\n        const vars = this.vars();\n        return vars.map(member => member.getMembers()[0]);\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof ComposeVars\n     */\n    type () {\n        return this.vars()[0].type();\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof ComposeVars\n     */\n    toString () {\n        return this.vars().map(d => d.toString()).join(',');\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof ComposeVars\n     */\n    numberFormat () {\n        return this.vars()[0].numberFormat();\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof ComposedVars\n     */\n    subtype () {\n        return this.vars()[0].subtype();\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof ComposedVars\n     */\n    getMinDiff () {\n        return this.vars()[0].getMinDiff();\n    }\n}\n\nexport default ComposedVars;\n","import Variable from './variable';\n\n/**\n *\n *\n * @export\n * @class Vars\n * @extends {Variable}\n */\nexport default class SimpleVariable extends Variable {\n\n    /**\n     *Creates an instance of Vars.\n     * @param {*} text\n     * @memberof Vars\n     */\n    constructor (text) {\n        super();\n        this.oneVar(text);\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof Vars\n     */\n    oneVar (...oneV) {\n        if (oneV.length) {\n            this._oneVar = oneV[0];\n            return this;\n        }\n        return this._oneVar;\n    }\n\n    /**\n     *\n     *\n     * @param {*} dm\n     * @returns\n     * @memberof Vars\n     */\n    data (...dm) {\n        if (dm.length) {\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof Vars\n     */\n    toString () {\n        return this.oneVar();\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleVariable\n     */\n    numberFormat () {\n        const uid = this.data().getFieldsConfig()[this.oneVar()].index;\n        const formatter = this.data().getFieldspace().fields[uid]._ref;\n\n        return this.type() === 'measure' ? formatter.numberFormat() : val => val;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof Vars\n     */\n    getMembers () {\n        return [this.oneVar()];\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof Vars\n     */\n    type () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.type;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof Vars\n     */\n    subtype () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.subtype || fieldDef.type;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleVariable\n     */\n    getMinDiff () {\n        const fieldSpace = this.data().getFieldspace();\n        return fieldSpace.fieldsObj()[this.oneVar()].getMinDiff();\n    }\n}\n","import { ComposedVars, SimpleVariable } from '../variable';\nimport { DIMENSION, COLUMNS, ROWS, TEMPORAL } from '../enums/constants';\n\n/**\n * Gets the list of fields in a sorted order by measurement and dimension\n *\n * @param {Array} fieldList List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields sorted by measurement and dimensions\n */\nconst orderFields = (fieldArray, type) => {\n    const dimensionArr = [[], []];\n    const measureArr = [[], []];\n    const temporalArr = [[], []];\n    const categoricalArr = [[], []];\n\n    fieldArray.forEach((fieldList, index) => {\n        fieldList.forEach((field) => {\n            if (field.type() === DIMENSION) {\n                dimensionArr[index].push(field);\n                field.subtype() === TEMPORAL ? temporalArr[index].push(field) : categoricalArr[index].push(field);\n            } else {\n                measureArr[index].push(field);\n            }\n        });\n    });\n\n    const numOfMeasures = measureArr[0].length + (measureArr[1] ? measureArr[1].length : 0);\n\n    // Single array of fields\n    if (!fieldArray[1]) {\n        // Push measures to bottom\n        measureArr[1] = type === COLUMNS ? measureArr[0] : [];\n        // Push measures to left\n        measureArr[0] = type !== COLUMNS ? measureArr[0] : [];\n        // Bottom and right dimensions empty\n        dimensionArr[1] = [];\n        // Left and top filled with dimensions\n        dimensionArr[0] = dimensionArr[0];\n        if (numOfMeasures === 0) {\n            const allDimensions = [...dimensionArr[0], ...dimensionArr[1]];\n            if (type === COLUMNS) {\n                dimensionArr[1] = allDimensions[allDimensions.length - 1] ? [allDimensions[allDimensions.length - 1]]\n                        : [];\n                allDimensions.splice(-1, 1);\n            } else {\n                dimensionArr[1] = [];\n            }\n            dimensionArr[0] = [...allDimensions];\n        }\n    }\n\n    if (dimensionArr[0].length && dimensionArr[1].length && numOfMeasures > 0) {\n        dimensionArr[0] = [...dimensionArr[0], ...dimensionArr[1]];\n        dimensionArr[1] = [];\n    }\n    return {\n        fields: dimensionArr.map((list, i) => (i === 1 ?\n            measureArr[i].concat(dimensionArr[i]) : dimensionArr[i].concat(measureArr[i]))),\n        dimensions: [...dimensionArr[0], ...dimensionArr[1]],\n        measures: [...measureArr[0], ...measureArr[1]],\n        temporal: [...temporalArr[0], ...temporalArr[1]],\n        categorical: [...categoricalArr[0], ...categoricalArr[1]]\n    };\n};\n\n/**\n * Gets the list of normalized fields\n *\n * @param {Array} fields List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields normalized by measurement and dimensions\n */\nconst normalizeFields = (config, type) => {\n    const fieldsArr = [];\n    const fields = config[type];\n\n    if (!(fields[0] instanceof Array)) {\n        fieldsArr[0] = fields;\n    } else {\n        fieldsArr[0] = fields[0] || [];\n        fieldsArr[1] = fields[1] || [];\n    }\n    return fieldsArr;\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} datamodel\n * @return\n */\nconst convertToVar = (datamodel, fields) => {\n    const vars = [];\n\n    fields && fields.forEach((field) => {\n        if (field instanceof ComposedVars) {\n            vars.push(field);\n            field.data(datamodel);\n        } else {\n            vars.push(new SimpleVariable(field).data(datamodel));\n        }\n    });\n    return vars;\n};\n\n/**\n *\n *\n * @param {*} rows\n * @param {*} columns\n * @param {*} datamodel\n * @return\n */\nexport const transformFields = (datamodel, config) => {\n    const [rowsInfo, columnsInfo] = [ROWS, COLUMNS].map((fields) => {\n        const normalizedFields = normalizeFields(config, fields);\n        const norFields = [convertToVar(datamodel, normalizedFields[0])];\n\n        if (normalizedFields[1]) {\n            norFields[1] = convertToVar(datamodel, normalizedFields[1]);\n        }\n        return orderFields(norFields, fields);\n    });\n    const {\n        fields: rows,\n        dimensions: rowDimensions,\n        measures: rowMeasures,\n        temporal: rowTemporalFields,\n        categorical: rowCategoricalFields\n    } = rowsInfo;\n    const {\n        fields: columns,\n        dimensions: columnDimensions,\n        measures: columnMeasures,\n        temporal: columnTemporalFields,\n        categorical: columnCategoricalFields\n    } = columnsInfo;\n    return {\n        rows,\n        rowDimensions,\n        rowMeasures,\n        rowTemporalFields,\n        rowCategoricalFields,\n        columns,\n        columnTemporalFields,\n        columnCategoricalFields,\n        columnDimensions,\n        columnMeasures\n    };\n};\n","import { ERROR_MSG, mergeRecursive } from 'muze-utils';\nimport { transformFields } from './field-sanitizer';\nimport { getHeaderAxisFrom } from '../group-helper/group-utils';\nimport { ROW, COLUMN } from '../enums/constants';\n\n/**\n *\n *\n * @export\n * @class VisualEncoder\n */\nexport default class VisualEncoder {\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    createAxis () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    setCommonDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    getLayerConfig () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    fieldInfo (...info) {\n        if (info.length) {\n            this._fieldInfo = mergeRecursive(this._fieldInfo || {}, info[0]);\n            return this;\n        }\n        return this._fieldInfo;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @return\n     * @memberof VisualEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        this.fieldInfo(transformFields(datamodel, config));\n        return this.fieldInfo();\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @return\n     * @memberof VisualEncoder\n     */\n    axisFrom (...params) {\n        if (params.length) {\n            this._axisFrom = params[0];\n            return this;\n        }\n        return this._axisFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @return\n     * @memberof VisualEncoder\n     */\n    headerFrom (...params) {\n        if (params.length) {\n            this._headerFrom = params[0];\n            return this;\n        }\n        return this.__headerFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisFrom\n     * @return\n     * @memberof CartesianEncoder\n     */\n    setAxisAndHeaders (axisFrom = {}, fields) {\n        const [rowHeader, rowAxis] = getHeaderAxisFrom(ROW, fields.rows, axisFrom);\n        const [colHeader, colAxis] = getHeaderAxisFrom(COLUMN, fields.columns, axisFrom);\n\n        this.axisFrom({\n            row: rowAxis,\n            column: colAxis\n        });\n        this.headerFrom({\n            row: rowHeader,\n            column: colHeader\n        });\n        return this;\n    }\n}\n","import { ContinousAxis, BandAxis, TimeAxis, ColorAxis, SizeAxis, ShapeAxis } from '@chartshq/muze-axis';\n\nexport const scaleMaps = {\n    linear: ContinousAxis,\n    band: BandAxis,\n    temporal: TimeAxis,\n    size: SizeAxis,\n    color: ColorAxis,\n    shape: ShapeAxis\n};\n","import { ScaleType } from '@chartshq/muze-axis';\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    dimension: ScaleType.BAND,\n    categorical: ScaleType.BAND,\n    measure: ScaleType.LINEAR,\n    temporal: ScaleType.TIME\n};\n\n","import { mergeRecursive } from 'muze-utils';\nimport { AxisOrientation } from '@chartshq/muze-axis';\nimport { scaleMaps } from '../enums/scale-maps';\nimport { getAxisType, getAxisKey } from '../group-helper';\nimport { dataTypeScaleMap } from '../data-type-scale-map';\nimport { CATEGORICAL, TEMPORAL, BAR, LINE, POINT, BOTH, Y } from '../enums/constants';\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n * @return\n */\nconst getAxisConfig = (axisInfo, field, axesCreators) => {\n    let axisOrientation;\n    const { index, axisIndex, axisType } = axisInfo;\n    const { config, position } = axesCreators;\n    const userAxisConfig = config.axes ? (config.axes[axisType] || {}) : {};\n    const {\n        LEFT,\n        RIGHT,\n        TOP,\n        BOTTOM\n    } = AxisOrientation;\n    const allOrientations = axisType === Y ? [LEFT, RIGHT] : [TOP, BOTTOM];\n\n    if (position === BOTH) {\n        axisOrientation = allOrientations[axisIndex];\n    } else {\n        axisOrientation = position;\n    }\n    const axisConfig = {\n        id: `${axisType}-${index}-${axisIndex}`,\n        name: field.toString(),\n        field: field.toString(),\n        labels: { rotation: 0 },\n        numberFormat: field.numberFormat(),\n        orientation: axisOrientation,\n        type: dataTypeScaleMap[field.subtype()]\n    };\n    return mergeRecursive(axisConfig, userAxisConfig);\n};\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n * @return\n */\nconst createSimpleAxis = (axisConfig, field, axesCreators) => {\n    const { labelManager } = axesCreators;\n    const Cls = scaleMaps[dataTypeScaleMap[field.subtype()]];\n    const simpleAxis = new Cls(axisConfig, { labelManager });\n    return simpleAxis;\n};\n\n/**\n *\n *\n * @param {*} axisType\n * @param {*} fieldInfo\n * @param {*} axesCreators\n * @param {*} groupAxes\n * @return\n */\nexport const generateAxisFromMap = (axisType, fieldInfo, axesCreators, groupAxes) => {\n    let axisKey;\n    const currentAxes = [];\n    const { fields, index } = fieldInfo;\n    const { cacheMaps } = axesCreators;\n    const map = cacheMaps[`${axisType}AxesMap`];\n\n    fields.forEach((field, axisIndex) => {\n        axisKey = getAxisKey(axisType, index, dataTypeScaleMap[field.subtype()]);\n        const axisConfig = getAxisConfig({ index, axisIndex, axisType }, field, axesCreators);\n\n        if (!map.has(axisKey)) {\n            const xAxis = createSimpleAxis(axisConfig, field, axesCreators);\n            currentAxes.push(xAxis);\n        } else {\n            const axes = map.get(axisKey);\n            axes[axisIndex] = axes[axisIndex] ? axes[axisIndex] : createSimpleAxis(axisConfig, field, axesCreators);\n            axes[axisIndex]._rotationLock = false;\n            axes[axisIndex] && axes[axisIndex].config(axisConfig).domain(axisConfig.domain || []);\n        }\n    });\n\n    if (currentAxes.length) {\n        map.set(axisKey, currentAxes);\n    }\n\n    for (const [key] of map.entries()) {\n        if (key === axisKey) {\n            groupAxes.add(axisKey);\n        }\n    }\n    return map.get(axisKey);\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n    const xAxes = [];\n    const yAxes = [];\n\n    xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes.push(xAxis);\n    });\n    yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes.push(yAxis);\n    });\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n * return a default mark based on predefined set of rules of type and subtype of the fields\n *\n * @param {string} colFieldType dimension/measure - temporal/ordinal/nominal\n * @param {string} rowFieldType dimension/measure - temporal/ordinal/nominal\n * @return {Object} return mark type\n */\nexport const getDefaultMark = (colFieldType, rowFieldType) => {\n    let mark;\n\n    if (colFieldType === CATEGORICAL || rowFieldType === CATEGORICAL) {\n        mark = BAR;\n    } else if (colFieldType === TEMPORAL || rowFieldType === TEMPORAL) {\n        mark = LINE;\n    } else {\n        mark = POINT;\n    }\n\n    return mark;\n};\n\n/**\n *\n *\n * @param {*} axesCreators\n * @param {*} [fieldInfo=[]]\n * @return\n */\nexport const createRetinalAxis = (axesCreators, fieldProps = {}) => {\n    const { axisType, fieldsConfig } = axesCreators;\n    const field = fieldProps.field;\n    const axis = [];\n    const Cls = scaleMaps[axisType];\n\n    fieldProps.type = fieldProps.type ? fieldProps.type : getAxisType(fieldsConfig, field || null);\n    axis.push(new Cls(fieldProps));\n    return axis;\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} val\n * @return\n */\nexport const getIndex = (arr, val) => {\n    let i = 0;\n    let arrIndex = -1;\n\n    while (arrIndex === -1 && i < arr.length) {\n        if (arr[i].toString() === val.toString()) {\n            arrIndex = i;\n        }\n        i++;\n    }\n    return arrIndex;\n};\n\n/**\n *\n *\n * @param {*} colFields\n * @param {*} rowFields\n * @param {*} userLayerConfig\n * @return\n * @memberof CartesianEncoder\n */\nexport const getLayerConfFromFields = (colFields, rowFields, userLayerConfig) => userLayerConfig.filter((conf) => {\n    const userConf = conf instanceof Array ? conf : [conf];\n    const encodingArr = [].concat(...userConf.map((d) => {\n        if (d.def instanceof Array) {\n            return d.def.map(def => (def.axis ? {\n                y: { field: def.axis.y },\n                x: { field: def.axis.x }\n            } : def.encoding));\n        }\n        return d.def.encoding;\n    })).filter(d => d !== undefined);\n\n    if (!encodingArr.length) {\n        return true;\n    }\n\n    const xFields = [].concat(...encodingArr.map(d => [d.x && d.x.field, d.x0 && d.x0.field]))\n                .filter(d => d !== undefined && d !== null);\n    const yFields = [].concat(...encodingArr.map(d => [d.y && d.y.field, d.y0 && d.y0.field]))\n                .filter(d => d !== undefined && d !== null);\n\n    if (!xFields.length && !yFields.length) {\n        return true;\n    }\n\n    const colFieldExist = xFields.length ? xFields.every(d => colFields.indexOf(d) !== -1) : false;\n    const rowFieldExist = yFields.length ? yFields.every(d => rowFields.indexOf(d) !== -1) : false;\n    if (xFields.length && yFields.length) {\n        return colFieldExist && rowFieldExist;\n    }\n    return colFieldExist || rowFieldExist;\n});\n","import { layerFactory } from '@chartshq/visual-layer';\nimport { mergeRecursive } from 'muze-utils';\nimport { generateAxisFromMap, getDefaultMark, getIndex, getLayerConfFromFields } from './encoder-helper';\nimport { retriveDomainFromData } from '../group-helper';\n\nimport { ROW, COLUMN, COL, LEFT, TOP, CARTESIAN, MEASURE, BOTH, X, Y } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class CartesianEncoder\n * @extends {VisualEncoder}\n */\nexport default class CartesianEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @return\n     * @memberof CartesianEncoder\n     */\n    static type () {\n        return CARTESIAN;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     * @return\n     * @memberof CartesianEncoder\n     */\n    createAxis (axesCreators, fieldInfo) {\n        const geomCellAxes = {};\n        const {\n            axes\n        } = axesCreators;\n        const {\n            projections,\n            indices\n        } = fieldInfo;\n        const {\n            rowFields,\n            columnFields\n        } = projections;\n        const {\n             rowIndex,\n             columnIndex\n        } = indices;\n        const axisFields = [{\n            fields: rowFields,\n            index: rowIndex\n        }, {\n            fields: columnFields,\n            index: columnIndex\n        }];\n        const xAxes = axes.x || [];\n        const yAxes = axes.y || [];\n\n        [rowFields, columnFields].forEach((fields, i) => {\n            const type = i === 0 ? ROW : COLUMN;\n            const axis = i === 0 ? Y : X;\n\n            if (fields.length > 1) {\n                axesCreators.position = BOTH;\n            } else {\n                axesCreators.position = this.axisFrom()[type];\n            }\n            geomCellAxes[axis] = generateAxisFromMap(axis, axisFields[i], axesCreators, axis === X ? xAxes : yAxes);\n        });\n        return geomCellAxes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @return\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields, type) {\n        let facets = [];\n        let projections = [];\n        let counter = 0;\n        const primaryFacets = [];\n        const secondaryFacets = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n        const axisFrom = this.axisFrom();\n\n        for (let i = 0; i < primaryLen; i++) {\n            let projArr = [primaryFields[i]];\n            const primaryField = primaryFields[i];\n\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter];\n                if (secondaryField && secondaryField.type() === MEASURE) {\n                    counter++;\n                    projArr = [primaryField, secondaryField];\n                }\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n                primaryFacets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                    secondaryFacets.push(secondaryField);\n                }\n            }\n        }\n        if ((primaryFacets.length || secondaryFacets.length) && !projections.length) {\n            type = type === COL ? COLUMN : type;\n            if ((axisFrom[type] === LEFT || axisFrom[type] === TOP) && primaryFacets.length) {\n                const axisFromIndex = primaryFacets.length - 1;\n                const facet = primaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(secondaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    secondaryFacets.splice(existIndex, 1);\n                }\n                primaryFacets.splice(axisFromIndex, 1);\n            } else {\n                const axisFromIndex = 0;\n                const facet = secondaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(primaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    primaryFacets.splice(existIndex, 1);\n                }\n                secondaryFacets.splice(axisFromIndex, 1);\n            }\n        }\n\n        facets = [...primaryFacets, ...secondaryFacets];\n        facets = facets.filter((el, index, self) => index === self.findIndex(t => (t.toString() === el.toString())));\n        return {\n            facets,\n            projections\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @return\n     * @memberof CartesianEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        return super.fieldSanitizer(datamodel, config);\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @return\n     * @memberof CartesianEncoder\n     */\n    getRetinalFieldsDomain (dataModels, encoding) {\n        const groupedModel = dataModels.groupedModel;\n        const domains = {};\n        for (const key in encoding) {\n            if ({}.hasOwnProperty.call(encoding, key)) {\n                const encodingObj = encoding[key];\n                const field = encodingObj.field;\n                if (!encodingObj.domain && field) {\n                    const domain = retriveDomainFromData(groupedModel, field);\n                    domains[field] = domain;\n                }\n            }\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     * @memberof CartesianEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n\n        layerArray.length && layerArray.forEach((layer) => {\n            const def = layerFactory.getSerializedConf(layer.mark, layer);\n            serializedLayers.push({\n                mark: layer.mark,\n                def\n            });\n        });\n        return serializedLayers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     * @return\n     * @memberof CartesianEncoder\n     */\n    getLayerConfig (fields, userLayerConfig) {\n        const layerConfig = [];\n        const {\n            columnFields,\n            rowFields\n        } = fields;\n\n        columnFields.forEach((colField) => {\n            const colFieldName = colField.toString();\n            rowFields.forEach((rowField) => {\n                let configs = [];\n                const rowFieldName = rowField.toString();\n                const encoding = {\n                    x: {\n                        field: colFieldName\n                    },\n                    y: {\n                        field: rowFieldName\n                    }\n                };\n                const rowFieldType = rowField.subtype();\n                const colFieldType = colField.subtype();\n                const mark = getDefaultMark(colFieldType, rowFieldType);\n\n                configs = [{\n                    mark,\n                    def: {\n                        mark,\n                        encoding\n                    }\n                }];\n\n                const layerConfigs = getLayerConfFromFields(colField.getMembers(),\n                    rowField.getMembers(), userLayerConfig || []);\n\n                if (layerConfigs.length) {\n                    configs = layerConfigs.map((layerConf) => {\n                        const def = layerConf.def;\n                        if (def instanceof Array) {\n                            configs[0].def.mark = mark;\n                            return {\n                                mark: layerConf.mark,\n                                def: def.map(conf => mergeRecursive(mergeRecursive({}, configs[0].def), conf))\n                            };\n                        }\n                        return mergeRecursive(mergeRecursive({}, configs[0]), layerConf);\n                    });\n                }\n\n                layerConfig.push(...configs);\n            });\n        });\n        return layerConfig;\n    }\n}\n\n","import { layerFactory } from '@chartshq/visual-layer';\nimport { mergeRecursive } from 'muze-utils';\nimport VisualEncoder from './visual-encoder';\nimport { RADIUS, ANGLE, SIZE, MEASURE, ARC, POLAR, COLOR } from '../enums/constants';\n/**\n *\n *\n * @export\n * @class PolarEncoder\n * @extends {VisualEncoder}\n */\nexport default class PolarEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     * @return\n     * @memberof PolarEncoder\n     */\n    createAxis (axesCreators, fieldInfo) {\n        const {\n            axes\n        } = axesCreators;\n        const geomCellAxes = axes;\n        const {\n            indices\n        } = fieldInfo;\n        const {\n            rowIndex,\n            columnIndex\n        } = indices;\n        // Dummy axes for polar, to create blank cells\n        const pieAxes = geomCellAxes.pie || [];\n\n        pieAxes[rowIndex] = pieAxes[rowIndex] || [];\n        pieAxes[rowIndex][columnIndex] = [];\n\n        geomCellAxes.pie = pieAxes;\n        geomCellAxes.x = null;\n        geomCellAxes.y = null;\n\n        return geomCellAxes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @return\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields) {\n        let counter = 0;\n        const facets = [];\n        const projections = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n\n        for (let i = 0; i < primaryLen; i++) {\n            const primaryField = primaryFields[i];\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter++];\n                const projArr = secondaryField ? [primaryField, secondaryField] : [primaryField];\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                }\n            }\n        }\n        return {\n            facets,\n            projections\n        };\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof PolarEncoder\n     */\n    setCommonDomain () {\n        // No domain to be set\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof PolarEncoder\n     */\n    static type () {\n        return POLAR;\n    }\n\n    layers (...layers) {\n        if (layers.length) {\n            this._layers = layers[0];\n            return this;\n        }\n        return this._layers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof PolarEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        let sanitizedRows = [[], []];\n        let sanitizedColumns = [[], []];\n        const fields = super.fieldSanitizer(datamodel, config);\n        const {\n            layers\n        } = config;\n        const {\n            rows,\n            columns\n        } = fields;\n        const layer = layers[0];\n        const encoding = layer.encoding;\n        const radius = encoding && encoding.radius ? encoding.radius.field : null;\n        const angle = encoding && encoding.angle ? encoding.angle.field : null;\n        const sanitizedFields = [sanitizedRows, sanitizedColumns];\n\n        [rows, columns].forEach((fieldType, typeIndex) => {\n            fieldType.forEach((fieldSet, i) => fieldSet.forEach((field) => {\n                if (field.toString() !== radius && field.toString() !== angle && field.type() !== MEASURE) {\n                    sanitizedFields[typeIndex][i].push(field);\n                }\n            }));\n        });\n        sanitizedColumns = [...new Set(sanitizedColumns)];\n        sanitizedRows = [...new Set(sanitizedRows)];\n        this.fieldInfo({ rows: sanitizedRows, columns: sanitizedColumns });\n        return this.fieldInfo();\n    }\n\n    getRetinalFieldsDomain (dataModels, encoding, facetFields, groupBy) {\n        let sizeField;\n        let colorField;\n        const fields = [];\n        const layers = this.layers();\n        const dataModel = dataModels.parentModel;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const domains = {};\n        if (layers && layers[0]) {\n            const layer = layers[0];\n            const layerEncoding = layer.def.encoding || {};\n\n            [RADIUS, ANGLE, SIZE, COLOR].forEach((encType) => {\n                const field = layerEncoding[encType] ? layerEncoding[encType].field : '';\n                const measureField = fieldsConfig[field] && fieldsConfig[field].def.type === MEASURE;\n                if (encType === SIZE && measureField) {\n                    sizeField = field;\n                }\n                if (encType === COLOR) {\n                    colorField = field;\n                }\n                fieldsConfig[field] && !measureField && fields.push(field);\n            });\n        }\n\n        if (sizeField) {\n            domains[sizeField] = dataModel.groupBy(facetFields, {\n                [sizeField]: 'sum'\n            }).getFieldspace().fieldsObj()[sizeField].domain();\n        }\n\n        if (colorField) {\n            const dm = dataModel.groupBy([...facetFields, ...fields], groupBy.measures);\n            domains[colorField] = dm.getFieldspace().fieldsObj()[colorField].domain();\n        }\n        return domains;\n    }\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     * @return\n     * @memberof PolarEncoder\n     */\n    getLayerConfig (fields, userLayerConfig) {\n        let layerConfig = [];\n        const {\n                columnFields,\n                rowFields\n            } = fields;\n        const allFields = [...columnFields, ...rowFields];\n\n        allFields.forEach(() => {\n            const encoding = {};\n            let config = {\n                mark: ARC,\n                def: {\n                    encoding\n                }\n            };\n            if (userLayerConfig && userLayerConfig.length > 0) {\n                config = mergeRecursive(config, userLayerConfig[0]);\n            }\n            layerConfig.push(config);\n        });\n        if (layerConfig.length === 0) {\n            layerConfig = userLayerConfig;\n        }\n\n        this.layers(layerConfig);\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     * @returns\n     * @memberof PolarEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n\n        layerArray.length && layerArray.forEach((layer) => {\n            const def = layerFactory.getSerializedConf(layer.mark, layer);\n            serializedLayers.push({\n                mark: layer.mark,\n                def\n            });\n        });\n        return serializedLayers;\n    }\n}\n","import { createRetinalAxis } from './encoder-helper';\nimport { COLOR, SHAPE, SIZE } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class RetinalEncoder\n * @extends {VisualEncoder}\n */\nexport default class RetinalEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @return\n     * @memberof RetinalEncoder\n     */\n    createAxis (axesCreators) {\n        const { fieldsConfig, config } = axesCreators;\n        const newAxes = {};\n\n        [COLOR, SHAPE, SIZE].forEach((axisType) => {\n            newAxes[`${axisType}`] = createRetinalAxis({ axisType, fieldsConfig }, config[axisType]);\n        });\n        return newAxes;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @return\n     * @memberof RetinalEncoder\n     */\n    static type () {\n        return 'retinal';\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     * @return\n     * @memberof RetinalEncoder\n     */\n    getLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n        userLayerConfig.forEach((e) => {\n            const config = e;\n            [COLOR, SHAPE, SIZE].forEach((axis) => {\n                if (encodingConfigs[axis] && encodingConfigs[axis].field) {\n                    const def = config.def;\n                    if (config.def instanceof Array) {\n                        def.forEach((conf) => {\n                            conf.encoding = conf.encoding || {};\n                            !conf.encoding[axis] && (conf.encoding[axis] = {});\n                            conf.encoding[axis].field = encodingConfigs[axis].field;\n                        });\n                    } else {\n                        def.encoding = def.encoding || {};\n                        !def.encoding[axis] && (def.encoding[axis] = {});\n                        def.encoding[axis].field = encodingConfigs[axis].field;\n                    }\n                }\n            });\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} context\n     * @return\n     * @memberof RetinalEncoder\n     */\n    setCommonDomain (context) {\n        const { domains, axes, encoding } = context;\n\n        Object.entries(encoding).forEach((enc) => {\n            if (enc[1] && enc[1].field) {\n                const encType = enc[0];\n                const field = enc[1].field;\n\n                if (field) {\n                    axes[encType].forEach((axis) => {\n                        const domain = domains[field];\n                        axis.updateDomain(domain);\n                    });\n                }\n            }\n        });\n        return axes;\n    }\n}\n","import { Store, dataSelect, FieldType } from 'muze-utils';\nimport { DATA_UPDATE_COUNTER } from '../enums/defaults';\nimport { Variable } from '../variable';\nimport { PolarEncoder, CartesianEncoder } from '../encoder';\nimport {\n    DIMENSION,\n    MEASURE,\n    ORDINAL,\n    LINEAR,\n    ROW,\n    COLUMN,\n    COL,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    COLOR,\n    SIZE,\n    TEMPORAL,\n    SHAPE,\n    INTERACTION,\n    GRID_LINES,\n    GRID_BANDS,\n    HEADER,\n    FACET,\n    X,\n    Y,\n    POLAR\n} from '../enums/constants';\n\n/**\n * Creates an instance of a store which contains the arguments to make the class reactive\n *\n * @return {Object} instance of store\n * @memberof VisualGroup\n */\nexport const initStore = () => new Store({\n    [DATA_UPDATE_COUNTER]: DATA_UPDATE_COUNTER\n});\n\n/**\n *\n *\n * @param {*} arr\n */\nexport const isDistributionEqual = arr => [...arr[0], ...arr[1]].reduce((isEqual, row) => {\n    const rowType = row.type();\n\n    if (rowType === MEASURE || rowType === TEMPORAL) {\n        isEqual = true;\n    }\n    return isEqual;\n}, false);\n\n/**\n *\n *\n */\nexport const initializeCacheMaps = () => ({\n    cellMap: new Map(),\n    xAxesMap: new Map(),\n    yAxesMap: new Map(),\n    entryCellMap: new Map(),\n    exitCellMap: new Map()\n});\n\n/**\n *\n *\n * @param {*} axisName\n * @param {*} id\n */\nexport const getAxisKey = (axisName, id, scaleType) => `${axisName}-axis-${id}-${scaleType}`;\n\n/**\n *\n *\n * @param {*} rowId\n * @param {*} columnId\n */\nexport const getCellKey = (rowId, columnId) => `cell-${rowId}-${columnId}`;\n\n/**\n *\n *\n * @param {*} config\n * @return\n */\nexport const extractUnitConfig = (config) => {\n    const unitConfig = {};\n    const attrNames = [INTERACTION, GRID_LINES, GRID_BANDS];\n\n    attrNames.forEach((attr) => {\n        if (config[attr] !== undefined) {\n            unitConfig[attr] = config[attr];\n        }\n    });\n    return unitConfig;\n};\n\n/**\n *\n *\n * @param {*} headers\n * @param {*} index\n * @param {*} rowLength\n * @return\n * @memberof MatrixResolver\n */\nexport const getHeaderText = (headers, index, rowLength) => {\n    let header = '';\n\n    if (index === rowLength - 1 && headers.length > rowLength) {\n        for (let i = index; i < headers.length - 1; i++) {\n            header += `${headers[i].toString()} / `;\n        }\n        header += headers[headers.length - 1].toString();\n        return header;\n    } else if (headers[index]) {\n        return headers[index].toString();\n    }\n    return '';\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} fieldHeaders\n * @param {*} TextCell\n * @param {*} labelManager\n * @return\n */\nexport const headerCreator = (fields, fieldHeaders, TextCell, labelManager) => {\n    const headers = fields.length > 0 ? fields[0].map((label, i) => new TextCell({ type: HEADER }, { labelManager })\n                    .source(getHeaderText(fieldHeaders, i, fields[0].length))) : [];\n    return headers;\n};\n\n/**\n *\n *\n * @param {*} variable\n * @param {*} allFields\n * @return\n */\nexport const findInGroup = (variable, allFields) => {\n    let channel = null;\n\n    [COLOR, SIZE, SHAPE].forEach((e) => {\n        if (this.store.get(e) && variable === this.store.get(e)[0]) {\n            channel = e;\n        }\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    [ROW, COL].forEach((facetType) => {\n        allFields[`${facetType}Facets`].forEach((e) => {\n            if (e.toString() === variable) {\n                channel = { channel: FACET, type: facetType === COL ? COLUMN : ROW };\n            }\n        });\n    });\n\n    if (channel) {\n        return channel;\n    }\n\n    [ROW, COL].forEach((projType) => {\n        allFields[`${projType}Projections`].forEach((e) => {\n            e.forEach((m) => {\n                if (m.toString() === variable) {\n                    channel = projType === COL ? X : Y;\n                }\n            });\n        });\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    return null;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} field\n */\nexport const getAxisType = (fieldsConfig, field) => {\n    let fieldType = ORDINAL;\n\n    if (field && fieldsConfig[field].def.type !== DIMENSION) {\n        fieldType = LINEAR;\n    }\n    return fieldType;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} fieldName\n * @return\n */\nexport const retriveDomainFromData = (datamodel, fieldName) => {\n    const field = datamodel.getFieldspace().fields.find(d => d._ref.name === fieldName.toString());\n    return field.domain();\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    let xAxes = null;\n    let yAxes = null;\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n\n    xAxisSet && xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes = xAxes || [];\n        xAxes.push(xAxis);\n    });\n\n    yAxisSet && yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes = yAxes || [];\n        yAxes.push(yAxis);\n    });\n\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n *\n *\n * @param {*} layers\n * @return\n */\nexport const getEncoder = (layers) => {\n    let encoder = new CartesianEncoder();\n\n    if (layers) {\n        // Figuring out the kind of layers the group will have\n        encoder = layers.every(e => e.mark === 'arc') ? new PolarEncoder() : encoder;\n    }\n    return encoder;\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} userAxisFromConfig\n * @return\n */\nexport const getHeaderAxisFrom = (type, fields, userAxisFromConfig) => {\n    let axisFrom = userAxisFromConfig[type];\n    let headerFrom = '';\n    const options = type === ROW ? [LEFT, RIGHT] : [BOTTOM, TOP];\n    const [firstField, secondField] = fields;\n    const firstFieldType = i => (firstField.length ? firstField[i].type() : null);\n    const secondFieldType = i => (secondField.length ? secondField[i].type() : null);\n\n    if (firstFieldType(firstField.length - 1) === DIMENSION && secondFieldType(0) === DIMENSION) {\n        headerFrom = axisFrom ? options[1 - options.indexOf(axisFrom)] : options[1];\n\n        if (type === COLUMN && (firstField[firstField.length - 1].toString() === secondField[0].toString())) {\n            axisFrom = TOP;\n        } else {\n            axisFrom = axisFrom || options[0];\n        }\n    } else if (secondFieldType(secondField.length - 1) === DIMENSION) {\n        headerFrom = type === ROW ? RIGHT : BOTTOM;\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else {\n        headerFrom = type === ROW ? LEFT : TOP;\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    if (firstFieldType(firstField.length - 1) === MEASURE && secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    } else if (secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else if (firstFieldType(firstField.length - 1) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    return [headerFrom, axisFrom];\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} layers\n * @return\n * @memberof MatrixResolver\n */\nexport const setFacetsAndProjections = (context, fieldInfo, encoder) => {\n    const {\n        fields,\n        type\n    } = fieldInfo;\n    const { facets, projections } = encoder.simpleEncoder.getFacetsAndProjections(fields, type);\n\n    context.facets({ [`${type}Facets`]: facets });\n    context.projections({ [`${type}Projections`]: projections });\n\n    return { facets, projections, fields };\n};\n\n/**\n * Creates a selection set from a data set with corresponding attributes\n *\n * @export\n * @param {Selection} sel contains previous selection\n * @param {Object} appendObj Object to be appended\n * @param {Array} data Data based on which the selection is entered/updated/removed\n * @param {Object} [attrs={}] Attributes to be set on the data\n * @return {Selection} Merged selection\n */\nexport const createSelection = (sel, appendObj, data, idFn) => {\n    let selection = sel || dataSelect([]);\n\n    selection = selection.data(data, idFn);\n\n    const enter = selection.enter().append(appendObj);\n    const mergedSelection = enter.merge(selection);\n\n    selection.exit() && selection.exit().remove();\n    return mergedSelection;\n};\n\nconst getRowBorders = (left, right) => {\n    const borders = {};\n    borders.top = false;\n    borders.bottom = false;\n    if (left.length > 1 || right.length > 1) {\n        borders.top = true;\n        borders.bottom = true;\n    }\n    return borders;\n};\n\nconst getColumnsBorders = (top, bottom) => {\n    const borders = {};\n    borders.left = false;\n    borders.right = false;\n    if (top.length || bottom.length) {\n        if ((top[0] && top[0].length > 1) || (bottom[0] && bottom[0].length > 1)) {\n            borders.left = true;\n            borders.right = true;\n        }\n    }\n    return borders;\n};\n\nconst getValueBorders = (rows, columns) => {\n    const borders = { top: true, left: true, bottom: true, right: true };\n    const borderTypeRow = [LEFT, RIGHT];\n    const borderTypeCol = [TOP, BOTTOM];\n    rows.forEach((e, i) => {\n        if (e[0] && e[0].length) {\n            borders[borderTypeRow[i]] = true;\n        } else {\n            borders[borderTypeRow[i]] = false;\n        }\n    });\n    columns.forEach((e, i) => {\n        if (e.length) {\n            borders[borderTypeCol[i]] = true;\n        } else {\n            borders[borderTypeCol[i]] = false;\n        }\n    });\n\n    return borders;\n};\n\nexport const getBorders = (matrices, encoder) => {\n    let showRowBorders = { top: false, bottom: false };\n    let showColBorders = { left: false, right: false };\n    let showValueBorders = { top: false, bottom: false, left: false, right: false };\n    const {\n        rows,\n        columns,\n        values: valueMatrix\n    } = matrices;\n    const [leftRows, rightRows] = rows;\n    const [topColumns, bottomColumns] = columns;\n    const {\n        rowDimensions,\n        columnDimensions,\n        rowTemporalFields,\n        columnTemporalFields,\n        columnMeasures,\n        rowMeasures\n    } = encoder.fieldInfo();\n    const allDimensionLength = rowDimensions.length + columnDimensions.length;\n    const allMeasuresLength = rowMeasures.length + columnMeasures.length;\n    const allTemporalFieldsLength = rowTemporalFields.length + columnTemporalFields.length;\n\n    if (encoder.constructor.type() === POLAR) {\n        if (!allDimensionLength) {\n            return { showRowBorders, showColBorders, showValueBorders };\n        }\n    } else if (!allMeasuresLength && !allTemporalFieldsLength && allDimensionLength <= 2) {\n        return { showRowBorders, showColBorders, showValueBorders };\n    }\n\n    showRowBorders = getRowBorders(leftRows, rightRows);\n    showColBorders = getColumnsBorders(topColumns, bottomColumns);\n    showValueBorders = getValueBorders([leftRows, rightRows], [topColumns, bottomColumns]);\n\n    if (valueMatrix.length > 1) {\n        showValueBorders.top = true;\n        showValueBorders.bottom = true;\n    }\n    if (valueMatrix.length && valueMatrix[0].length > 1) {\n        showValueBorders.left = true;\n        showValueBorders.right = true;\n    }\n    return { showRowBorders, showColBorders, showValueBorders };\n};\n\nexport const getFieldsFromSuppliedLayers = (suppliedLayerConfig, fieldsConfig) => {\n    let fields = [];\n    const encodingArr = suppliedLayerConfig.map((conf) => {\n        if (conf.def instanceof Array) {\n            return conf.def.map(def => def.encoding);\n        }\n        return conf.def.encoding || {};\n    });\n    fields = [...fields, [].concat(...encodingArr.map(enc => Object.values(enc).map(d => d.field)))];\n    fields = fields.filter(field => fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n    return fields;\n};\n\nexport const extractFields = (facetsAndProjections, layerFields) => {\n    const fields = Object.values(facetsAndProjections).map((arr) => {\n        const flattenArray = [].concat(...arr);\n        return [].concat(...flattenArray.map((field) => {\n            if (field instanceof Variable) {\n                return field.getMembers();\n            }\n            return field;\n        }));\n    });\n    return [].concat(...fields, ...layerFields);\n};\n","/**\n * This file exports variables that are used as defaults for the crosstab group.\n */\nexport const DATA_UPDATE_COUNTER = 0;\n\nexport const DEFAULT_LAYER_TYPE = 'cartesian';\n\n","import Selection from './selection';\n/**\n * This function applies a selection operation on a data array.\n *\n * @export\n * @param {Array} [data=[]] The data array to be observed.\n * @return {Selection} Instance of a selection.\n */\nexport default function dataSelect (data = []) {\n    return new Selection(data);\n}\n\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: false\n    },\n    [ACTIONS.HOVER]: {\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.LONGTOUCH]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: true\n    },\n    [ACTIONS.TOUCHDRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: true\n    },\n    [ACTIONS.CLICK]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: false\n    }\n};\n\n","export const CONFIG = 'config';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNT = 'mount';\nexport const primaryXAxisUpdated = 'primaryXAxisUpdated';\nexport const primaryYAxisUpdated = 'primaryYAxisUpdated';\nexport const secondaryXAxisUpdated = 'secondaryXAxisUpdated';\nexport const secondaryYAxisUpdated = 'secondaryYAxisUpdated';\nexport const TRANSFORM = 'transform';\nexport const DATADOMAIN = 'dataDomain';\nexport const LAYERSCREATED = 'layersCreated';\nexport const FIELDS = 'fields';\nexport const TIMEDIFFS = 'timeDiffs';\nexport const LAYERAXISINDEX = 'layerAxisIndex';\n\n","import { FieldType, getDependencyOrder, getObjProp,\n    defaultValue, objectIterator, unionDomain, makeElement,\n    DimensionSubtype, getClosestIndexOf, toArray } from 'muze-utils';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport { TIMEDIFFS } from '../enums/reactive-props';\n\nexport const getDimensionMeasureMap = (layers, fieldsConfig) => {\n    const retinalEncodingsAndMeasures = {};\n\n    layers.forEach((layer) => {\n        const {\n            colorField,\n            sizeField,\n            shapeField,\n            xField,\n            yField\n        } = layer.encodingFieldsInf();\n        const measures = [xField, yField].filter(field => fieldsConfig[field] && fieldsConfig[field].def.type ===\n            FieldType.MEASURE);\n        [colorField, sizeField, shapeField].forEach((field) => {\n            if (fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                !retinalEncodingsAndMeasures[field] && (retinalEncodingsAndMeasures[field] = []);\n                retinalEncodingsAndMeasures[field].push(...measures);\n            }\n        });\n    });\n\n    for (const key in retinalEncodingsAndMeasures) {\n        if ({}.hasOwnProperty.call(retinalEncodingsAndMeasures, key)) {\n            retinalEncodingsAndMeasures[key] = [...new Set(retinalEncodingsAndMeasures[key])];\n        }\n    }\n    return retinalEncodingsAndMeasures;\n};\n\nexport const transformDataModels = (transform, dataModel) => {\n    const dataModels = {};\n    for (const key in transform) {\n        if ({}.hasOwnProperty.call(transform, key)) {\n            const transformVal = transform[key];\n            dataModels[key] = transformVal(dataModel);\n        }\n    }\n\n    return dataModels;\n};\n\nexport const getLayerFromDef = (context, definition, existingLayer) => {\n    let instances = existingLayer;\n    const dependencies = context._layerDeps;\n    if (!existingLayer) {\n        instances = layerFactory.getLayerInstance(definition);\n    }\n    const layers = {};\n    const instanceArr = toArray(instances);\n    definition = toArray(definition);\n    definition.reduce((acc, def, idx) => {\n        const instance = instanceArr[idx];\n        instance.config(def);\n        instance.dependencies(dependencies);\n        if (def.name) {\n            instance.alias(def.name);\n        }\n        layers[instance.alias()] = instance;\n        return acc;\n    }, {});\n    return layers;\n};\n\nexport const createLayers = (context, layerDefinitions) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    const store = {\n        layers: {},\n        components: {\n            unit: context\n        }\n    };\n    let layers = layerDefinitions.reduce((layersArr, layerDef, i) => {\n        const mark = layerDef.mark;\n        const definition = layerDef.def;\n        const markId = `${mark}-${i}`;\n        const instances = getLayerFromDef(context, definition, layersMap[markId]);\n        store.layers = Object.assign(store.layers, instances);\n        const instanceValues = Object.values(instances);\n        layersArr = layersArr.concat(...instanceValues);\n        layersMap[markId] = instanceValues;\n        markSet[markId] = markId;\n        return layersArr;\n    }, []);\n    store.unit = context;\n    const layerdeps = {};\n    layers.forEach((layer) => {\n        const encodingTransform = layer.config().encodingTransform || {};\n        const resolvable = encodingTransform.resolvable;\n\n        layerdeps[layer.alias()] = [];\n        if (resolvable) {\n            const resolved = resolvable(store);\n            const depArr = resolved.depArr;\n            layerdeps[layer.alias()] = depArr;\n            layer.encodingTransform(resolved.fn);\n        } else if (encodingTransform instanceof Function) {\n            layer.encodingTransform(encodingTransform);\n        }\n    });\n\n    const order = getDependencyOrder(layerdeps);\n    layers = order.map(name => store.layers[name]);\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n    return layers;\n};\n\nexport const attachDataToLayers = (layers, dm, transformedDataModels) => {\n    layers.forEach((layer) => {\n        const dataSource = layer.config().source;\n        const dataModel = dataSource instanceof Function ? dataSource(dm) : (transformedDataModels[dataSource] || dm);\n        layer.data(dataModel);\n    });\n};\n\nexport const attachAxisToLayers = (axes, layers, layerAxisIndex) => {\n    layers.forEach((layer) => {\n        const layerId = layer.id();\n        const axesObj = {};\n\n        objectIterator(axes, (key) => {\n            const axisInf = layerAxisIndex[layerId];\n            if (axisInf) {\n                axes[key] && (axesObj[key] = axes[key][axisInf[key] || 0]);\n            }\n        });\n        Object.keys(axesObj).length && layer.axes(axesObj);\n    });\n};\n\nexport const getLayerAxisIndex = (layers, fields) => {\n    const layerAxisIndex = {};\n    layers.forEach((layer) => {\n        const { axis, encoding } = layer.config();\n        const id = layer.id();\n        ['x', 'y'].forEach((type) => {\n            let index;\n            const field = defaultValue(getObjProp(axis, type), encoding[type] && encoding[type].field);\n            if (fields[type]) {\n                index = fields[type].findIndex(fieldInst => fieldInst.getMembers().indexOf(field) !== -1);\n            } else {\n                index = 0;\n            }\n            !layerAxisIndex[id] && (layerAxisIndex[id] = {});\n            layerAxisIndex[id][type] = index;\n        });\n    });\n    return layerAxisIndex;\n};\n\nexport const unionDomainFromLayers = (layers, axisFields, layerAxisIndex, fieldsConfig) => {\n    let domains = {};\n    layers = layers.filter(layer => layer.getDataDomain() !== null);\n    layers.forEach((layer) => {\n        let domainValues = {};\n        const config = layer.config();\n        const encoding = config.encoding;\n        const layerDomain = layer.getDataDomain();\n        const layerId = layer.id();\n\n        if (layerDomain !== null && config.calculateDomain !== false) {\n            domainValues = Object.entries(layerDomain);\n            if (layerDomain.x || layerDomain.y) {\n                domains = domainValues.reduce((fieldDomain, domain) => {\n                    const encodingType = domain[0];\n                    const field = encoding[encodingType].field;\n                    const axisIndex = layerAxisIndex[layerId][encodingType];\n                    const fieldStr = `${axisFields[encodingType][axisIndex]}`;\n                    fieldDomain[fieldStr] = fieldDomain[fieldStr] || [];\n                    fieldDomain[fieldStr] = unionDomain(([fieldDomain[fieldStr], domain[1]]),\n                        fieldsConfig[field].def.subtype ? fieldsConfig[field].def.subtype :\n                                fieldsConfig[field].def.type);\n\n                    return fieldDomain;\n                }, domains);\n            } else { domains = domainValues; }\n        }\n    });\n    return domains;\n};\n\nexport const renderLayers = (context, container, layers, measurement) => {\n    context._lifeCycleManager.notify({ client: layers, action: 'beforedraw', formalName: 'layer' });\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const orderedLayers = context.layers().sort((a, b) => a.config().order - b.config().order);\n    const layerParentGroup = makeElement(container, 'g', [1], `${classPrefix}-layer-group`);\n    makeElement(layerParentGroup, 'g', orderedLayers, null, {\n        update: (group, layer) => {\n            layer.measurement(measurement);\n            layer.dataProps({\n                timeDiffs: context.store().get(TIMEDIFFS)\n            });\n            layer.config().render !== false && layer.mount(group.node());\n        }\n    });\n    return this;\n};\n\nexport const getNearestDimensionalValue = (context, position) => {\n    const fields = context.fields();\n    if (!fields.x.length || !fields.y.length) {\n        return null;\n    }\n    const data = context.data();\n    const axes = context.axes();\n    const fieldsConfig = data.getFieldsConfig();\n    const xField = getObjProp(fields, 'x', 0).getMembers()[0];\n    const yField = getObjProp(fields, 'y', 0).getMembers()[0];\n    const xFieldType = fieldsConfig[xField] && (fieldsConfig[xField].def.subtype ? fieldsConfig[xField].def.subtype :\n        fieldsConfig[xField].def.type);\n    const yFieldType = fieldsConfig[yField] && (fieldsConfig[yField].def.subtype ? fieldsConfig[yField].def.subtype :\n                fieldsConfig[yField].def.type);\n\n    const entryVal = [['x', xFieldType, xField], ['y', yFieldType, yField]].find(entry =>\n        entry[1] === DimensionSubtype.CATEGORICAL || entry[1] === DimensionSubtype.TEMPORAL);\n\n    if (!entryVal || (xFieldType !== FieldType.MEASURE && yFieldType !== FieldType.MEASURE)) {\n        return null;\n    }\n    const field = entryVal[2];\n    const index = fieldsConfig[field].index;\n    let key = axes[entryVal[0]][0].invert(position[entryVal[0]]);\n    if (entryVal[1] === DimensionSubtype.TEMPORAL) {\n        const filterData = [...new Set(data.getData().data.map(d => d[index]))];\n        key = filterData[getClosestIndexOf(filterData, key)];\n    }\n\n    return key !== undefined ? [[field], [key]] : null;\n};\n\nexport const getLayersBy = (layers, searchBy, value) => layers.filter((layer) => {\n    const name = searchBy === 'type' ? layer.constructor.formalName() : layer.alias();\n    return name === value;\n});\n\nexport const removeLayersBy = (layers, searchBy, value) => {\n    layers.filter((inst) => {\n        const name = searchBy === 'type' ? inst.config().mark : inst.alias();\n        if (name === value) {\n            inst.remove();\n            return false;\n        }\n        return true;\n    });\n};\n\nexport const createSideEffectGroup = (container, className) => makeElement(container, 'g', [1], className).node();\n\nexport const getAdjustedDomain = (max, min) => {\n    const y1ratio = max[0] / (max[0] - min[0]);\n    const y2ratio = max[1] / (max[1] - min[1]);\n\n    // adjust min/max values for positive negative values zero line etc\n    let allSameSign = false;\n\n    // if all numbers are positive set floor to zero\n    if (min[0] > 0 && min[1] > 0 && min[1] > 0 && max[1] > 0) {\n        allSameSign = true;\n        min[0] = 0;\n        min[1] = 0;\n    }\n\n    // if all numbers are negative set ceiling to zero\n    if (min[0] < 0 && min[1] < 0 && min[1] < 0 && max[1] < 0) {\n        allSameSign = true;\n        max[0] = 0;\n        max[1] = 0;\n    }\n\n    // align zero line if necessary\n    if (!allSameSign && y1ratio !== y2ratio) {\n        if (y1ratio < y2ratio) {\n                    // adjust min[1]\n            min[1] = min[0] / max[0] * max[1];\n        } else {\n                    // adjust min[0]\n            min[0] = min[1] / max[1] * max[0];\n        }\n    }\n    return {\n        max,\n        min\n    };\n};\n","import { getObjProp, defaultValue, makeElement, DimensionSubtype, DataModel } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport { GRIDLINEPARENTGROUPCLASS, GRIDBANDPARENTGROUPCLASS } from '../enums/constants';\nimport { TIMEDIFFS } from '../enums/reactive-props';\n\nconst LINEAR = ScaleType.LINEAR;\n\nconst getLayerDefinition = (context, axes, type, orientation) => {\n    let encoding;\n    const config = context.config();\n    const { classPrefix, gridLines, gridBands } = config;\n    const gridLineColor = gridLines.color;\n    const zeroLineColor = gridLines.zeroLineColor;\n    const defClassName = type === 'band' ? gridBands.defClassName : gridLines.defClassName;\n    const gridBandColor = gridBands[orientation].color;\n    const axis = axes[orientation][0];\n    const isLinearScale = axis.constructor.type() === LINEAR;\n\n    if (type === 'band' && isLinearScale) {\n        encoding = {\n            [orientation]: `${orientation}value`,\n            [`${orientation}0`]: `${orientation}value0`\n        };\n    } else {\n        encoding = {\n            [orientation]: isLinearScale ? `${orientation}value` : `${orientation}dim`\n        };\n    }\n    encoding.color = {\n        value: (data, i) => {\n            const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n            if (type === 'band') {\n                return gridBandColor[i % 2];\n            }\n            return isNegativeDomain && data[orientation] === 0 ? zeroLineColor : gridLineColor;\n        }\n    };\n\n    return {\n        definition: {\n            defClassName: `${defClassName}-${orientation}`,\n            className: config.className,\n            individualClassName: (data, i) => {\n                let className;\n                const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n                if (isNegativeDomain && data.y === 0 && type !== 'band') {\n                    className = `${classPrefix}-axis-zero-line`;\n                } else {\n                    className = `${classPrefix}-grid-${type}-${orientation}-${i % 2}`;\n                }\n                return className;\n            },\n            [`pad${orientation.toUpperCase()}`]: type === 'band' ? 0 : undefined,\n            encoding\n        },\n        axes: {\n            [orientation]: axis\n        },\n        interactive: false\n    };\n};\n\nconst getDefaultVisibilty = (show, axis) => {\n    if (axis.constructor.type() === LINEAR) {\n        return show;\n    }\n    return false;\n};\n\nexport const getGridLayerDefinitions = (context, config, type) => ['x', 'y'].map((axisType) => {\n    const show = defaultValue(config[axisType] && config[axisType].show,\n        getDefaultVisibilty(config.show, context.axes()[axisType][0]));\n\n    return show ? getLayerDefinition(context, context.axes(), type, axisType) : undefined;\n}).filter(d => d !== undefined);\n\nexport const getGridLayerData = (axes, fields, fieldsConfig) => {\n    const gridData = {};\n    ['x', 'y'].forEach((type) => {\n        let ticks = axes[type][0].getTickValues();\n        const subtype = getObjProp(fieldsConfig, getObjProp(fields, type, 0).getMembers()[0], 'def', 'subtype');\n        const jsonData = [];\n        const schema = [\n            {\n                name: 'yvalue',\n                type: 'measure'\n            }, {\n                name: 'xvalue',\n                type: 'measure'\n            },\n            {\n                name: 'yvalue0',\n                type: 'measure'\n            }, {\n                name: 'xvalue0',\n                type: 'measure'\n            }, {\n                name: 'xdim',\n                type: 'dimension',\n                subtype\n            }, {\n                name: 'ydim',\n                type: 'dimension',\n                subtype\n            }\n        ];\n        const len = Math.max(ticks.length);\n        ticks = subtype === DimensionSubtype.TEMPORAL ? ticks.map(d => d.getTime()) : ticks;\n        for (let i = 0; i < len; i += 1) {\n            jsonData.push({\n                [`${type}value`]: ticks[i],\n                [`${type}value0`]: ticks[i + 1],\n                [`${type}dim`]: ticks[i],\n                [`${type}dim`]: ticks[i]\n            });\n        }\n        gridData[type] = new DataModel(jsonData, schema);\n    });\n    return gridData;\n};\n\nexport const createGridLineLayer = (context, data) => {\n    const vuConf = context.config();\n    const dependencies = context._layerDeps;\n    const measurement = {\n        width: context.width(),\n        height: context.height()\n    };\n\n    ['band', 'line'].forEach((type) => {\n        let mark;\n        let config;\n        let instances;\n        if (type === 'band') {\n            mark = 'bar';\n            config = vuConf.gridBands;\n            instances = context._gridbands;\n        } else {\n            mark = 'tick';\n            config = vuConf.gridLines;\n            instances = context._gridlines;\n        }\n        const definitions = getGridLayerDefinitions(context, config, type);\n\n        definitions.forEach((atomicDef, i) => {\n            let layer;\n            const definition = atomicDef.definition;\n            const axesObj = atomicDef.axes;\n            const sConf = layerFactory.getSerializedConf(mark, definition);\n            sConf.mark = mark;\n            if (!instances[i]) {\n                layer = layerFactory.getLayerInstance(sConf);\n                layer.dependencies(dependencies);\n            } else {\n                layer = instances[i];\n            }\n\n            layer.config(sConf)\n                            .measurement(measurement)\n                            .data(axesObj.y ? data.y : data.x)\n                            .dataProps({\n                                timeDiffs: context.store().get(TIMEDIFFS)\n                            })\n                            .axes(axesObj);\n            instances[i] = layer;\n        });\n    });\n};\n\nexport const renderGridLineLayers = (context, container) => {\n    const axes = context.axes();\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n\n    if (axes && ((axes.x && axes.x.length) || (axes.y && axes.y.length))) {\n        const gridBandData = getGridLayerData(axes, context.fields(), context.data().getFieldsConfig());\n        createGridLineLayer(context, gridBandData);\n        [[context._gridlines, `${classPrefix}-${GRIDLINEPARENTGROUPCLASS}`],\n            [context._gridbands, `${classPrefix}-${GRIDBANDPARENTGROUPCLASS}`]].forEach((entry) => {\n                const [instances, parentGroupClass] = entry;\n                const mountPoint = makeElement(container, 'g', [1], `.${parentGroupClass}`);\n                const className = `${parentGroupClass}-group`;\n                makeElement(mountPoint, 'g', instances, `.${className}`, {\n                    update: (group, instance) => {\n                        instance.mount(group.node());\n                    }\n                });\n            });\n    }\n};\n","import { CLASSPREFIX, CONSOLIDATED } from './enums/constants';\n\n/**\n * Returns the default configuration of the visual unit\n * @return {Object} Default configuration of visual unit\n */\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'visual-unit',\n    className: '',\n    trackerClassName: 'visual-unit-tracker',\n    gridLines: {\n        defClassName: 'axis-grid-lines',\n        className: '',\n        show: true,\n        color: '#efefef',\n        zeroLineColor: '#b6b6b6'\n    },\n    gridBands: {\n        defClassName: 'axis-grid-bands',\n        className: '',\n        show: false,\n        y: {\n            color: ['#fff', '#fbfbfb']\n        },\n        x: {\n            color: ['#fff', '#f9f9f9']\n        }\n    },\n    arcLayerClassName: 'layer-arc',\n    interaction: {\n        tooltip: {\n            mode: CONSOLIDATED\n        }\n    },\n    sideEffectClassName: 'side-effect-container'\n};\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const GRIDBANDPARENTGROUPCLASS = 'grid-bands';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const RETINAL_FIELDS = 'retinalFields';\nexport const PARENT_ALIAS = 'parentAlias';\nexport const LAYERS = 'layers';\nexport const CACHED_DATA = 'cachedData';\nexport const STORE = 'store';\n\n","import { mergeRecursive } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { CONFIG, LAYERDEFS, AXES, WIDTH, HEIGHT, MOUNT, TRANSFORM, FIELDS, DATA } from './enums/reactive-props';\n\nexport default {\n    [CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig) => (\n                mergeRecursive(oldConfig || mergeRecursive({}, defaultConfig), config)\n            )\n        }\n    },\n    [LAYERDEFS]: {\n        value: null\n    },\n    [AXES]: {\n        value: null,\n        meta: {\n            sanitization: (axes, prevAxes) => Object.assign(prevAxes || {}, axes)\n        }\n    },\n    [WIDTH]: {\n        value: null\n    },\n    [HEIGHT]: {\n        value: null\n    },\n    [MOUNT]: {\n        value: null\n    },\n    [TRANSFORM]: {\n        value: null\n    },\n    [FIELDS]: {\n        value: null\n    },\n    [DATA]: {\n        value: null,\n        meta: {\n            preset: (data, context) => {\n                if (context._cache) {\n                    const cachedData = context.cachedData();\n                    context.cachedData([...cachedData, data]);\n                } else {\n                    const oldData = context.data();\n                    oldData && oldData.unsubscribe('propagation');\n                    context.cachedData([data]);\n                }\n            }\n        }\n    }\n};\n","import { DimensionSubtype } from 'muze-utils';\nimport * as PROPS from './enums/reactive-props';\nimport {\n    transformDataModels,\n    getDimensionMeasureMap,\n    createLayers,\n    attachDataToLayers,\n    attachAxisToLayers,\n    unionDomainFromLayers,\n    getLayerAxisIndex\n} from './helper';\n\nconst axisMap = {\n    0: 'primary',\n    1: 'secondary'\n};\nconst axisProps = [PROPS.primaryXAxisUpdated, PROPS.secondaryXAxisUpdated, PROPS.primaryYAxisUpdated,\n    PROPS.secondaryYAxisUpdated];\n\nexport const listenerMap = context => ([\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.AXES],\n        listener: ([, axes]) => {\n            ['x', 'y'].forEach((type) => {\n                const axesArr = axes[type] || [];\n                axesArr.forEach((axis, i) => {\n                    axis.on('update', () => {\n                        context.store().commit(PROPS[`${axisMap[i]}${axis.isReverse() ? 'Y' : 'X'}AxisUpdated`], true);\n                    });\n                });\n            });\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.CONFIG],\n        listener: ([, config]) => {\n            config && context.firebolt().config(config.interaction);\n        }\n    },\n    {\n        type: 'computed',\n        props: [PROPS.LAYERSCREATED],\n        listener: fetch => fetch(PROPS.LAYERDEFS, PROPS.FIELDS, (layerDefs, fields) => {\n            const layerDefsValue = layerDefs.value;\n            const fieldsVal = fields.value;\n            if (layerDefsValue && fieldsVal) {\n                const layers = createLayers(context, layerDefs.value);\n                context.layers(layers);\n                context._layerAxisIndex = getLayerAxisIndex(context.layers(), fieldsVal);\n                context._lifeCycleManager.notify({ client: layers, action: 'initialized', formalName: 'layer' });\n                return true;\n            }\n            return null;\n        })\n    },\n    {\n        type: 'computed',\n        props: [PROPS.TIMEDIFFS],\n        listener: fetch => fetch(PROPS.DATA, PROPS.FIELDS, PROPS.AXES, (data, fields, axes) => {\n            const dataModel = data.value;\n            const axisFields = fields.value;\n            const axesObj = axes.value;\n            if (dataModel && axisFields && axesObj) {\n                const timeDiffs = {};\n                ['x', 'y'].forEach((type) => {\n                    const field = axisFields[type][0];\n                    if (field && field.subtype() === DimensionSubtype.TEMPORAL) {\n                        timeDiffs[type] = field.getMinDiff();\n                        axesObj[type][0].minDiff(timeDiffs[type]);\n                    }\n                });\n                return timeDiffs;\n            }\n            return null;\n        })\n    },\n    {\n        type: 'computed',\n        props: [PROPS.DATADOMAIN],\n        listener: fetch => fetch(PROPS.DATA, PROPS.LAYERSCREATED, PROPS.AXES, PROPS.TRANSFORM,\n            (dataModel, layersCreated, axes, transform) => {\n                const dataModelVal = dataModel.value;\n                const layerAxisIndexVal = context._layerAxisIndex;\n                const axesVal = axes.value;\n                if (dataModelVal && layersCreated.value && axesVal && layerAxisIndexVal) {\n                    const layers = context.layers();\n                    const dataModels = transformDataModels(transform.value, dataModelVal);\n                    context._transformedDataModels = dataModels;\n                    context._lifeCycleManager.notify({ client: layers, action: 'beforeupdate', formalName: 'layer' });\n                    attachDataToLayers(layers, dataModelVal, context._transformedDataModels);\n                    context._dimensionMeasureMap = getDimensionMeasureMap(layers,\n                        dataModelVal.getFieldsConfig(), context.retinalFields());\n                    attachAxisToLayers(axesVal, layers, layerAxisIndexVal);\n                    context._lifeCycleManager.notify({ client: layers, action: 'updated', formalName: 'layer' });\n                    return unionDomainFromLayers(layers, context.fields(),\n                        layerAxisIndexVal, dataModelVal.getFieldsConfig());\n                }\n                return null;\n            })\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.DATADOMAIN],\n        listener: ([, dataDomain]) => {\n            dataDomain !== null && context.updateAxisDomain(dataDomain);\n        }\n    },\n    {\n        type: 'registerChangeListener',\n        props: [PROPS.MOUNT, PROPS.DATA, ...axisProps],\n        listener: (mount, data) => {\n            const container = mount[1];\n            if (container && data[1]) {\n                context.render(container);\n            }\n        }\n    }\n]);\n","import { FACET_BY_FIELDS, RETINAL_FIELDS, PARENT_ALIAS, LAYERS, STORE, CACHED_DATA } from './enums/constants';\n\nexport const PROPS = {\n    [FACET_BY_FIELDS]: {},\n    [RETINAL_FIELDS]: {},\n    [PARENT_ALIAS]: {},\n    [LAYERS]: {},\n    [STORE]: {},\n    [CACHED_DATA]: {}\n};\n","import { CommonProps } from 'muze-utils';\nimport { DATA, MOUNT } from '../enums/reactive-props';\n\nexport const clearActionHistory = (context) => {\n    const actionHistory = context._actionHistory;\n    for (const key in actionHistory) {\n        if (actionHistory[key].isMutableAction) {\n            delete context._actionHistory[key];\n        }\n    }\n};\n\nexport const dispatchQueuedSideEffects = (context) => {\n    const queuedSideEffects = context._queuedSideEffects;\n    queuedSideEffects.forEach((sideEffect) => {\n        context.dispatchSideEffect(sideEffect.name, ...sideEffect.params);\n    });\n    context._queuedSideEffects = [];\n};\n\nexport const registerListeners = (firebolt) => {\n    const context = firebolt.context;\n    const store = context.store();\n\n    store.registerImmediateListener([DATA, MOUNT], (dataModel, mount) => {\n        const dm = dataModel[1];\n\n        if (dm && mount[1]) {\n            const originalData = firebolt.context.cachedData()[0];\n            firebolt.createSelectionSet(firebolt.context.data().getData().uids);\n            firebolt.attachPropagationListener(originalData);\n        }\n    }, true);\n\n    context._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW],\n        ([, onlayerdraw]) => {\n            if (onlayerdraw) {\n                firebolt.initializeSideEffects();\n                firebolt.config(context.config().interaction);\n                firebolt.mapActionsAndBehaviour();\n                dispatchQueuedSideEffects(firebolt);\n                clearActionHistory(firebolt);\n            }\n        });\n};\n\n","import { DimensionSubtype } from 'muze-utils';\n\nconst getRangeFromData = (instance, selectionDataModel, propConfig) => {\n    let criteria;\n    const dataObj = selectionDataModel[0].getData();\n    const propCriteria = propConfig.payload.criteria;\n    const sourceIdentifiers = propConfig.sourceIdentifiers;\n    const schema = dataObj.schema;\n    const fieldMap = instance.data().getFieldsConfig();\n    const data = dataObj.data;\n    const isActionSourceSame = instance.id() === propConfig.sourceId;\n\n    if (isActionSourceSame) {\n        criteria = propCriteria;\n    } else {\n        criteria = (sourceIdentifiers !== null) ? schema.reduce((acc, obj, index) => {\n            let range;\n            const field = obj.name;\n            const fieldObj = fieldMap[field];\n            const type = fieldObj && (fieldObj.def.subtype ? fieldObj.def.subtype : fieldObj.def.type);\n            const isDimension = type === DimensionSubtype.CATEGORICAL;\n\n            if (!fieldObj) {\n                return acc;\n            }\n\n            if (!isDimension) {\n                range = [Math.min(...data.map(d => d[index])), Math.max(...data.map(d => d[index]))];\n            } else {\n                range = data.map(d => d[index]);\n            }\n            acc[field] = range;\n            return acc;\n        }, {}) : null;\n    }\n    return criteria;\n};\n\nexport const payloadGenerator = {\n    brush: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const criteria = getRangeFromData(instance, selectionDataModel, propConfig);\n        const payload = Object.assign({}, propPayload);\n        payload.criteria = criteria;\n        return payload;\n    },\n\n    __default: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const sourceIdentifiers = propConfig.sourceIdentifiers;\n        const dataObj = selectionDataModel[0].getData();\n        let schema = dataObj.schema;\n        const payload = Object.assign({}, propPayload);\n        schema = dataObj.schema;\n        const data = dataObj.data;\n        payload.criteria = !sourceIdentifiers ? null : [schema.map(d => d.name), ...data];\n        return payload;\n    }\n};\n\n","import { isSimpleObject } from 'muze-utils';\n\nexport const propagateValues = (instance, action, config = {}) => {\n    let propagationData;\n    const payload = config.payload;\n    const selectionSet = config.selectionSet;\n    const propagationFields = config.propagationFields[action] || [];\n    const criteria = payload.criteria;\n    const context = instance.context;\n    const dataModel = context.cachedData()[0];\n    const sourceId = context.id();\n    const sideEffects = config.sideEffects;\n    const mutableEffect = [].concat(...Object.values(sideEffects).map(d => d.effects)).find(sideEffect =>\n        instance._sideEffects[sideEffect.name || sideEffect].constructor.mutates(true));\n    const mergedModel = selectionSet.mergedEnter.model;\n\n    payload.sourceUnit = sourceId;\n    payload.action = action;\n    payload.sourceCanvas = context.parentAlias();\n\n    if (criteria === null) {\n        propagationData = null;\n    } else if (isSimpleObject(criteria)) {\n        const fields = Object.keys(criteria || {});\n        propagationData = mergedModel ? mergedModel.project(fields) : null;\n    } else {\n        const criteriaFields = criteria[0];\n        propagationData = mergedModel ? mergedModel.project(criteriaFields) : null;\n    }\n\n    propagationFields.length && propagationData && (propagationData = propagationData.project(propagationFields));\n    dataModel.addToPropNamespace(sourceId, {\n        payload,\n        criteria: propagationData,\n        isMutableAction: mutableEffect,\n        actionName: mutableEffect ? (mutableEffect.name || mutableEffect) : action\n    });\n    dataModel.propagate(propagationData, payload, {\n        isMutableAction: mutableEffect,\n        sourceId\n    });\n};\n","import { FieldType } from 'muze-utils';\nimport { Firebolt, SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { registerListeners } from './helper';\nimport { payloadGenerator } from './payload-generator';\nimport { propagateValues } from './data-propagator';\n\n/**\n * This class manages the interactions of visual unit. It associates physical actions with\n * behavioural actions. It also propagates the behavioural actions to other datamodels.\n */\nexport default class UnitFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        registerListeners(this);\n    }\n\n    propagate (behaviour, payload, selectionSet, sideEffects) {\n        propagateValues(this, behaviour, {\n            payload,\n            selectionSet,\n            sideEffects,\n            propagationFields: this._propagationFields\n        });\n    }\n\n    getApplicableSideEffects (sideEffects, payload, propagationInf) {\n        const context = this.context;\n        const unitId = context.id();\n        const aliasName = context.parentAlias();\n        const propagationSourceCanvas = propagationInf.propPayload && propagationInf.propPayload.sourceCanvas;\n        const sourceUnitId = propagationInf.propPayload && propagationInf.propPayload.sourceUnit;\n        const sourceSideEffects = this._sourceSideEffects;\n        const actionOnSource = sourceUnitId === unitId;\n\n        const applicableSideEffects = payload.sideEffects ? [{\n            effects: payload.sideEffects,\n            behaviours: [payload.action]\n        }] : sideEffects;\n        applicableSideEffects.forEach((d) => {\n            let mappedEffects = d.effects;\n            mappedEffects = mappedEffects.filter((se) => {\n                if (!actionOnSource && payload.criteria !== null) {\n                    return !sourceSideEffects[se.name || se];\n                }\n                if (propagationSourceCanvas === aliasName) {\n                    return d.applyOnSource !== false;\n                }\n                return true;\n            });\n            d.effects = mappedEffects;\n        });\n        return applicableSideEffects;\n    }\n\n    enableSideEffectOnPropagation (sideEffect) {\n        this._sourceSideEffects[sideEffect] = false;\n        return this;\n    }\n\n    disableSideEffectOnPropagation (sideEffect) {\n        this._sourceSideEffects[sideEffect] = true;\n        return this;\n    }\n\n    onDataModelPropagation () {\n        return (propValue) => {\n            let isSourceFieldPresent = true;\n            const data = propValue.data;\n            const propPayload = propValue.payload;\n            const sourceIdentifiers = propValue.sourceIdentifiers;\n            const action = propPayload.action;\n            const payloadFn = payloadGenerator[action] || payloadGenerator.__default;\n\n            if (sourceIdentifiers) {\n                const fieldsConfig = sourceIdentifiers.getFieldsConfig();\n                const sourceIdentifierFields = Object.keys(fieldsConfig);\n                const propFields = Object.keys(data[0].getFieldsConfig());\n                if (!Object.values(fieldsConfig).some(d => d.def.type === FieldType.MEASURE)) {\n                    isSourceFieldPresent = sourceIdentifierFields.some(d => propFields.indexOf(d) !== -1);\n                }\n            }\n            const payload = payloadFn(this.context, data, propValue);\n            const sideEffects = this._behaviourEffectMap[action];\n            const mutableEffect = sideEffects.find(sideEffect =>\n                this._sideEffects[sideEffect.name || sideEffect].constructor.mutates(true));\n            const propagationInf = {\n                propagate: false,\n                data,\n                propPayload,\n                sourceIdentifiers,\n                persistent: false,\n                isSourceFieldPresent,\n                sourceId: propValue.sourceId\n            };\n            this._actionHistory[action] = {\n                payload,\n                propagationInf,\n                isMutableAction: mutableEffect\n            };\n            this.dispatchBehaviour(action, payload, propagationInf);\n        };\n    }\n\n    initializeSideEffects () {\n        super.initializeSideEffects();\n        const sideEffects = this.sideEffects();\n        for (const key in sideEffects) {\n            if ({}.hasOwnProperty.call(sideEffects, key)) {\n                sideEffects[key] instanceof SpawnableSideEffect && sideEffects[key].drawingContext(() => {\n                    const context = this.context;\n                    return context.getDrawingContext();\n                });\n            }\n        }\n    }\n\n    prepareSelectionSets (behaviours) {\n        const data = this.context.data();\n        if (data) {\n            this.createSelectionSet(data.getData().uids, behaviours);\n        }\n        return this;\n    }\n\n    remove () {\n        this.context.cachedData()[0].unsubscribe('propagation');\n        return this;\n    }\n}\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    setAttrs,\n    CommonProps,\n    getUniqueId,\n    getQualifiedClassName,\n    selectElement,\n    transactor,\n    Store,\n    makeElement,\n    registerListeners,\n    generateGetterSetters,\n    getDataModelFromIdentifiers,\n    isSimpleObject,\n    transposeArray,\n    FieldType\n} from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { actionBehaviourMap } from './firebolt/action-behaviour-map';\nimport {\n    renderLayers,\n    getNearestDimensionalValue,\n    removeLayersBy,\n    getLayersBy,\n    getLayerFromDef,\n    attachAxisToLayers,\n    getLayerAxisIndex,\n    createSideEffectGroup,\n    getAdjustedDomain\n} from './helper';\nimport { renderGridLineLayers } from './helper/grid-lines';\nimport localOptions from './local-options';\nimport { listenerMap } from './listener-map';\nimport {\n    primaryYAxisUpdated,\n    primaryXAxisUpdated,\n    secondaryXAxisUpdated,\n    secondaryYAxisUpdated,\n    DATADOMAIN,\n    TIMEDIFFS\n} from './enums/reactive-props';\nimport { PROPS } from './props';\nimport UnitFireBolt from './firebolt';\nimport './styles.scss';\n\nconst FORMAL_NAME = 'unit';\n\n/**\n * @module VisualUnit\n * A hierarchical component of renderer which manages multiple layers. This logical\n * module is responsible for layouting layers, attach axis with them, resolving conflicts of layers.\n */\n\n/**\n * Basic unit implementaiton\n * @class VisualUnit\n */\nexport default class VisualUnit {\n\n    /**\n     * Creates instance of visualization unit\n     * @param registry {Object} Component registry\n     * @param dependencies {Object} Dependencies required by visual unit.\n     */\n    constructor (registry, dependencies) {\n        this._id = getUniqueId();\n        this._dependencies = dependencies;\n        this._layerDeps = {\n            throwback: new Store({\n                onlayerdraw: false\n            }),\n            smartLabel: dependencies.smartLabel\n        };\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        this._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW], () => {\n            this._renderedResolve();\n            this._lifeCycleManager.notify({ client: this.layers(), action: 'drawn', formalName: 'layer' });\n        });\n\n        this._lifeCycleManager = dependencies.lifeCycleManager;\n        this._layersMap = {};\n        this._gridlines = [];\n        this._gridbands = [];\n        this._layerAxisIndex = {};\n        this._transformedDataModels = {};\n\n        layerFactory.setLayerRegistry(registry.layerRegistry);\n        generateGetterSetters(this, PROPS);\n        this.cachedData([]);\n        this.store(new Store({\n            [primaryXAxisUpdated]: null,\n            [primaryYAxisUpdated]: null,\n            [secondaryXAxisUpdated]: null,\n            [secondaryYAxisUpdated]: null\n        }));\n        transactor(this, localOptions, this.store().model);\n        this.firebolt(new UnitFireBolt(this, {\n            physical: physicalActions,\n            behavioural: behaviouralActions,\n            physicalBehaviouralMap: actionBehaviourMap\n        }, sideEffects, behaviourEffectMap));\n        registerListeners(this, listenerMap);\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof VisualUnit\n     */\n    static formalName () {\n        return FORMAL_NAME;\n    }\n\n    /**\n     * Static helper for creates a unit instance\n     *\n     * @param {Object} [id] optional unique identifier for a unit; , id is calculated internally\n     * @param {DataModel} data instance of datamodel\n     * @param {Array.<Layer>} layers layer configuration\n     * @param {Object} config configurtion for the visual unit\n     * @return {VisualUnit} Instance of a unit\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof VisualUnit\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Gets the domain for all axes of this visual unit.\n     * @return {Object} Domains of each data field.\n     */\n    getDataDomain () {\n        return this.store().get(DATADOMAIN);\n    }\n\n    /**\n     * Retrieves the id created for this instance of visual unit\n     * @return {string} id associated with the instance\n     */\n    id () {\n        return this._id;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof VisualUnit\n     */\n    lockModel () {\n        this._store.model.lock();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof VisualUnit\n     */\n    unlockModel () {\n        this._store.model.unlock();\n        return this;\n    }\n\n    /**\n     * Renders the visual unit. It creates the layout and renders the axes and layers.\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    render (container) {\n        const config = this.config();\n        const { className, defClassName, sideEffectClassName, classPrefix } = config;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const width = this.width();\n        const height = this.height();\n        const containerSelection = selectElement(container).style('position', 'relative');\n\n        this._rootSvg = makeElement(containerSelection, 'svg', [null], className)\n                        .style('width', `${width}px`).style('height', `${height}px`);\n\n        const node = this._rootSvg.node();\n        setAttrs(node, {\n            width,\n            height,\n            class: qualifiedClassName.join(' ')\n        });\n        renderGridLineLayers(this, node);\n        renderLayers(this, node, this.layers(), {\n            width,\n            height\n        });\n        this._sideEffectGroup = createSideEffectGroup(node, `${classPrefix}-${sideEffectClassName}`);\n        return this;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n    /**\n     *\n     *\n     * @returns\n     * @memberof VisualUnit\n     */\n    enableCaching () {\n        this._cache = true;\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof VisualUnit\n     */\n    clearCaching () {\n        this._cache = false;\n        this.cachedData([this.cachedData()[0]]);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof VisualUnit\n     */\n    getDrawingContext () {\n        const rootSvg = this._rootSvg && this._rootSvg.node();\n        const width = this.width();\n        const height = this.height();\n        return {\n            htmlContainer: this.mount(),\n            svgContainer: rootSvg,\n            width,\n            height,\n            sideEffectGroup: this._sideEffectGroup,\n            parentContainer: this.parentContainer(),\n            xOffset: 0,\n            yOffset: 0\n        };\n    }\n\n    /**\n     * Returns the serialized configuration of visual unit.\n     * @return {Object} serialized configuration\n     */\n    serialize () {\n        return {\n            layers: this.layers().map(layer => layer.serialize()),\n            config: this.config(),\n            axes: this.store().get('axes').map(axis => axis.serialize())\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerDef\n     * @returns\n     * @memberof VisualUnit\n     */\n    addLayer (layerDef) {\n        const layerName = layerDef.name;\n        const layer = this.getLayerByName(layerName);\n        const measurement = {\n            width: this.width(),\n            height: this.height()\n        };\n\n        if (layer) {\n            return [layer];\n        }\n        const serializedDef = layerFactory.getSerializedConf(layerDef.mark, layerDef);\n        const instances = Object.values(getLayerFromDef(this, serializedDef));\n        this.layers().push(...instances);\n        const layerAxisIndex = getLayerAxisIndex(instances, this.fields());\n        this._layerAxisIndex = Object.assign(this._layerAxisIndex, layerAxisIndex);\n        attachAxisToLayers(this.axes(), instances, layerAxisIndex);\n        this.layers().forEach((lyr) => {\n            lyr.measurement(measurement);\n            lyr.dataProps({\n                timeDiffs: this.store().get(TIMEDIFFS)\n            });\n        });\n        return instances;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof VisualUnit\n     */\n    remove () {\n        const lifeCycleManager = this._dependencies.lifeCycleManager;\n        lifeCycleManager.notify({ client: this, action: 'beforeremove', formalName: 'unit' });\n        this.store().unsubscribeAll();\n        selectElement(this.mount()).remove();\n        this.firebolt().remove();\n        // Remove layers\n        lifeCycleManager.notify({ client: this.layers(), action: 'beforeremove', formalName: 'layer' });\n        this.layers().forEach(layer => layer.remove());\n        lifeCycleManager.notify({ client: this.layers(), action: 'removed', formalName: 'layer' });\n        lifeCycleManager.notify({ client: this, action: 'removed', formalName: 'unit' });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     * @returns\n     * @memberof VisualUnit\n     */\n    getDataModelFromIdentifiers (identifiers, mode, parentModel) {\n        if (identifiers === null) {\n            return null;\n        }\n        const dataModel = parentModel || this.data();\n        return getDataModelFromIdentifiers(dataModel, identifiers, mode);\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof VisualUnit\n     */\n    resetData () {\n        this.data(this.cachedData()[0]);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof VisualUnit\n     */\n    getSourceInfo () {\n        return {\n            dimensionMeasureMap: this._dimensionMeasureMap,\n            fields: this.fields(),\n            data: this.data(),\n            axes: this.axes()\n        };\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof VisualUnit\n     */\n    getDefaultTargetContainer () {\n        const { classPrefix, defClassName, arcLayerClassName } = this.config();\n        return [`.${classPrefix}-${defClassName}`, `.${classPrefix}-${arcLayerClassName} path`];\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     * @returns\n     * @memberof VisualUnit\n     */\n    getLayersByType (type) {\n        const layers = getLayersBy(this.layers(), 'type', type);\n        return layers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} name\n     * @returns\n     * @memberof VisualUnit\n     */\n    getLayerByName (name) {\n        const layers = getLayersBy(this.layers(), 'name', name);\n        return layers[0];\n    }\n\n    /**\n     *\n     *\n     * @param {*} domain\n     * @returns\n     * @memberof VisualUnit\n     */\n    updateAxisDomain (domain) {\n        ['x', 'y'].forEach((type) => {\n            const axes = this.axes()[type];\n            let min = [];\n            let max = [];\n            let dom;\n            axes && axes.forEach((axis, i) => {\n                const field = this.fields()[type][i];\n                dom = domain[`${this.fields()[type][i]}`];\n\n                if (field.type() !== FieldType.DIMENSION && dom) {\n                    min[i] = dom[0];\n                    max[i] = dom[1];\n                }\n            });\n            if (axes) {\n                if (axes.length > 1) {\n                    const axisConf = axes[0].config();\n                    if (axes[0].constructor.type() === 'linear') {\n                        if (axisConf.alignZeroLine) {\n                            axes.forEach(axis => axis.config({\n                                nice: false\n                            }));\n                            const adjustedDomain = getAdjustedDomain(max, min);\n                            min = adjustedDomain.min;\n                            max = adjustedDomain.max;\n                        }\n\n                        axes[0].updateDomainCache([min[0], max[0]]);\n                        axes[1].updateDomainCache([min[1], max[1]]);\n                    } else {\n                        axes[0].updateDomainCache(dom);\n                        axes[1].updateDomainCache(dom);\n                    }\n                } else {\n                    axes[0].updateDomainCache(dom);\n                }\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Finds the nearest point closest to the x and y position.\n     * @param {number} x x position.\n     * @param {number} y y position.\n     * @return {Object} Nearest point.\n     */\n    getNearestPoint (x, y, args) {\n        let pointObj = {\n            id: null\n        };\n        const dimValue = getNearestDimensionalValue(this, {\n            x,\n            y\n        });\n\n        if (dimValue !== null && args.getAllPoints) {\n            pointObj.id = dimValue;\n            const pointInf = this.getMarkInfFromLayers(x, y, args);\n            pointObj.target = pointInf && pointInf.id ? pointInf.id : pointObj.id;\n            return pointObj;\n        }\n\n        const markInf = this.getMarkInfFromLayers(x, y, args) || { id: null };\n        pointObj = Object.assign({}, markInf);\n\n        pointObj.target = markInf.id;\n        return pointObj;\n    }\n\n    getMarkInfFromLayers (x, y, args) {\n        const layers = this.layers();\n        const len = layers.length;\n        let point = null;\n        // Iterate through the layers array and fetch the nearest point from each layer. If a valid\n        // nearest point is found from any layer, then return that point.\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            const config = layer.config();\n            if (config.interactive !== false) {\n                point = layer.getNearestPoint(x, y, args);\n            }\n            if (point) {\n                return point;\n            }\n        }\n        return point;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     * @returns\n     * @memberof VisualUnit\n     */\n    getPlotPointsFromIdentifiers (identifiers, config = {}) {\n        let points = [];\n        let parsedIdentifiers = identifiers;\n        if (identifiers === null) {\n            return [];\n        }\n        const layers = this.layers();\n        const len = layers.length;\n        if (isSimpleObject(identifiers)) {\n            parsedIdentifiers = [Object.keys(identifiers)];\n            parsedIdentifiers = [...parsedIdentifiers, ...transposeArray(Object.values(identifiers))];\n        }\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            if (layer.config().interactive !== false) {\n                points = [...points, ...layer.getPointsFromIdentifiers(parsedIdentifiers, config)];\n            }\n        }\n        return points;\n    }\n\n    /**\n     *\n     *\n     * @param {*} name\n     * @returns\n     * @memberof VisualUnit\n     */\n    removeLayerByName (name) {\n        removeLayersBy('name', name);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     * @returns\n     * @memberof VisualUnit\n     */\n    removeLayersByType (type) {\n        removeLayersBy('type', type);\n        return this;\n    }\n\n    parentContainer (...container) {\n        if (container.length) {\n            this._parentContainer = container[0];\n\n            return this;\n        }\n        return this._parentContainer;\n    }\n}\n","import { retriveDomainFromData } from './group-utils';\n\n/**\n * Gets name of fields form the variables\n *\n * @param {*} fields1\n * @param {*} [fields2=[]]\n * @return\n */\nconst getFieldNames = (fields1, fields2 = []) => [fields1, fields2].map(fields => fields.reduce((acc, d) => {\n    acc = [...acc, ...d.getMembers()];\n    return acc;\n}, []));\n\n/**\n * Creates a selected datamodel from a parent datamodel and a set of field names\n *\n * @param {Object} datamodel provided as input\n * @param {Array} fieldNames schema  names\n * @param {Array} fieldValues values of those schema names to be selected\n * @return {Object} creates a new selected datamodel\n */\nconst createSelectedDataModel = (datamodel, fieldNames, fieldValues) =>\n    datamodel.select(fields => fieldNames.every((field, k) => fields[field].value === fieldValues[k]));\n\n/**\n *\n *\n * @param {*} facets\n * @param {*} keyArray\n * @return\n */\nconst uniqueKeyGenerator = (keyArray, context, depth = 0, val = []) => {\n    const {\n        facets,\n        dataModel,\n        uniqueValues\n    } = context;\n\n    // Get unique keys for the next depth recursively if required\n    if (facets[depth + 1]) {\n        const field = facets[depth];\n        uniqueValues.forEach((value) => {\n            const newDm = dataModel.select(fields => fields[field].value === value);\n            const nextDepthUniqueValues = retriveDomainFromData(newDm, facets[depth + 1]);\n            const newContext = {\n                facets,\n                dataModel: newDm,\n                uniqueValues: nextDepthUniqueValues\n            };\n\n            uniqueKeyGenerator(keyArray, newContext, depth + 1, [...val, value]);\n        });\n    } else {\n        uniqueValues.forEach((value) => {\n            keyArray.push([...val, value]);\n        });\n    }\n};\n\n/**\n * projects row model based on the set of row and/or column and other projection fields\n *\n * @param {Object} datamodel provided as input\n * @return {Object} Projected datamodel\n */\nconst projectRows = (datamodel, projections) => {\n    const {\n        allColumnProjections,\n        rowProjections,\n        optionalProjections\n    } = projections;\n\n    if (rowProjections.length > 0) {\n        return rowProjections.map((projectFields) => {\n            const [projFieldNames, colProjFieldNames] = getFieldNames(projectFields, allColumnProjections);\n            return datamodel.project([...projFieldNames, ...colProjFieldNames, ...optionalProjections]);\n        });\n    }\n    return [datamodel];\n};\n\n/**\n * Adds the datamodels to current row index based on column fields\n *\n * @param {Array} context current context\n * @param {Array} callback List of facets applied to the current datamodel\n */\nconst pushToMatrix = (context, callback) => {\n    let cells = [];\n    const {\n        matrix,\n        datamodel,\n        facetInfo,\n        fieldInfo\n    } = context;\n    // Get projected fields for current row\n    const {\n        rowProjections,\n        colProjections,\n        optionalProjections\n    } = fieldInfo;\n    const {\n        rowIndex,\n        columnIndex\n    } = facetInfo;\n    const rowProj = rowProjections[(rowIndex) % rowProjections.length] || [];\n\n    // Get the cells for the matrix from the return function of the callback on the datamodel.\n    // callback function -> (datamodel, {projections, indices}, facets)\n    if (colProjections.length > 0) {\n        cells = colProjections.map((projectFields, projIdx) => {\n            const [colProjFieldNames, rowProjFieldNames] = getFieldNames(projectFields, rowProj);\n            const projectedDm = datamodel.project([...colProjFieldNames, ...rowProjFieldNames, ...optionalProjections]);\n            const projections = { rowFields: rowProj, columnFields: projectFields };\n            const indices = { rowIndex, columnIndex: columnIndex * colProjections.length + projIdx };\n\n            return callback(projectedDm, { projections, indices }, facetInfo);\n        });\n    } else {\n        const projections = { rowFields: rowProj, columnFields: [] };\n        const indices = { rowIndex, columnIndex };\n\n        cells = [callback(datamodel, { projections, indices }, facetInfo)];\n    }\n\n    matrix[rowIndex] = matrix[rowIndex] || [];\n    matrix[rowIndex].push(...cells);\n};\n\n/**\n * Gets Matrixes for corresponding datamodel, facets and projections\n *\n * @param {Object} dataModel input datamodel\n * @param {Object} fieldMap corresponding fieldmap\n * @param {Array} facetsAndProjections contains the set of facets and projections for the matrices\n * @param {Function} callback Callback executed after datamodels are prepared after sel/proj\n * @return {Object} set of matrices with the corresponding row and column keys\n */\nexport const getMatrixModel = (dataModel, fieldInfo, callback) => {\n    let rowDataModels = [];\n    const rowKeys = [];\n    const columnKeys = [];\n    const allColumnProjections = [];\n    const matrix = [];\n    const facetInfo = [];\n    const {\n        rowFacets,\n        colFacets,\n        colProjections\n    } = fieldInfo;\n\n    colProjections.forEach((colProj) => {\n        allColumnProjections.push(...colProj);\n    });\n    fieldInfo.allColumnProjections = allColumnProjections;\n\n    // Performing row selection and projection\n    if (rowFacets.length > 0) {\n        // Get unique values for the root level of facet\n        const field = rowFacets[0].toString();\n        const firstLevelRowKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys in the form of an array of arrays for each row\n        uniqueKeyGenerator(rowKeys, { facets: rowFacets, dataModel, uniqueValues: firstLevelRowKeys });\n\n        // Apply selection -> projection -> row datamodels\n        rowKeys.forEach((val) => {\n            // Create faceted datamodel\n            const [rowFacetFieldNames] = getFieldNames(rowFacets);\n            const selectedDataModel = createSelectedDataModel(dataModel, rowFacetFieldNames, val);\n\n            // Project the datamodel based on the number of projections (based on last levels)\n            facetInfo.push([rowFacetFieldNames, val]);\n            rowDataModels.push(...projectRows(selectedDataModel, fieldInfo));\n        });\n    } else {\n        // No row facets, hence only row projection\n        rowDataModels.push(...projectRows(dataModel, fieldInfo));\n    }\n\n    // Maintaining set of row datamodels for column resolution\n    rowDataModels = rowDataModels.length > 0 ? rowDataModels : [[]];\n\n    // Performing column selection and projection\n    if (colFacets.length > 0) {\n        const colFacetNames = colFacets.map(d => `${d}`);\n        // Get unique values for the root level of facet\n        const field = colFacetNames[0];\n        const firstLevelColumnKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys to create faceted datamodels: this time for columns\n        uniqueKeyGenerator(columnKeys, {\n            facets: colFacetNames,\n            dataModel,\n            uniqueValues: firstLevelColumnKeys\n        });\n\n        // For each row in the datamodel, apply selection -> projection -> push the projection to matri\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            columnKeys.forEach((val, cIndex) => {\n                matrix[rIndex] = matrix[rIndex] || [];\n\n                // If datamodel is not present in current row, choose parent datamodel\n                const datamodel = (dme.constructor && dme.constructor.name === 'DataModel') ? dme : dataModel;\n\n                // Selection is made on the datamodel for the current row\n                const selectedDataModel = createSelectedDataModel(datamodel, colFacetNames, val);\n                const context = {\n                    matrix,\n                    datamodel: selectedDataModel,\n                    facetInfo: {\n                        rowFacets: facetInfo[rIndex],\n                        colFacets: [colFacets, val],\n                        rowIndex: rIndex,\n                        columnIndex: cIndex\n                    },\n                    fieldInfo\n                };\n                pushToMatrix(context, callback);\n            });\n        });\n    } else {\n        // No column facets, hence only row projection\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            const context = {\n                matrix,\n                datamodel: dme || dataModel,\n                facetInfo: {\n                    rowFacets: facetInfo[rIndex],\n                    colFacets: [[], []],\n                    rowIndex: rIndex,\n                    columnIndex: 0\n                },\n                fieldInfo\n            };\n\n            pushToMatrix(context, callback);\n        });\n    }\n\n    // Getting column keys\n    const transposedColKeys = columnKeys.length > 0 ? columnKeys[0].map((col, i) =>\n                    columnKeys.map(row => row[i])) : columnKeys;\n\n    return { matrix, rowKeys, columnKeys: transposedColKeys };\n};\n","import { AxisOrientation } from '@chartshq/muze-axis';\nimport { getObjProp, FieldType } from 'muze-utils';\nimport { getMatrixModel } from './matrix-model';\nimport {\n    getCellKey,\n    isDistributionEqual,\n    mutateAxesFromMap,\n    createSelection,\n    getFieldsFromSuppliedLayers,\n    extractFields\n} from './group-utils';\nimport { ROW, ROWS, COLUMNS, COL, LEFT, RIGHT, TOP, BOTTOM, PRIMARY, SECONDARY, X, Y } from '../enums/constants';\n\n/**\n * Updates row and column cells with the geom cell corresponding to the facet keys\n *\n * @param {*} resolver\n * @param {*} facets\n */\nconst updateCells = (resolver, facets, geomCell) => {\n    [ROW, COL].forEach((field) => {\n        const cells = resolver[`${field}Cells`]();\n        const facetKey = facets[`${field}Facets`][1].join();\n\n        !cells[facetKey] && (cells[facetKey] = []);\n        cells[facetKey].push(geomCell);\n        resolver[`${field}Cells`](cells);\n    });\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} datamodel\n * @param {*} fieldInfo\n * @param {*} facets\n * @return\n */\nexport const createValueCells = (context, datamodel, fieldInfo, facets) => {\n    const {\n        projections,\n        indices\n    } = fieldInfo;\n    const {\n        rowFields,\n        columnFields\n    } = projections;\n    const {\n         rowIndex,\n         columnIndex\n    } = indices;\n    const {\n        suppliedLayers,\n        cell: GeomCell,\n        resolver,\n        config,\n        encoder\n    } = context;\n    const axes = resolver.axes();\n    const cacheMaps = resolver.cacheMaps();\n    const matrixLayers = resolver.matrixLayers();\n    const labelManager = resolver.dependencies().smartlabel;\n    const horizontalAxis = resolver.horizontalAxis();\n    const verticalAxis = resolver.verticalAxis();\n    const datamodelTransform = resolver.datamodelTransform();\n    const {\n        entryCellMap,\n        exitCellMap\n    } = cacheMaps;\n    const layerConfigArr = encoder.getLayerConfig({ columnFields, rowFields }, suppliedLayers || []);\n    const axesCreators = { config, labelManager, axes, cacheMaps };\n\n    fieldInfo.normalizedColumns = verticalAxis.fields;\n    fieldInfo.normalizedRows = horizontalAxis.fields;\n\n    const groupAxes = encoder.createAxis(axesCreators, fieldInfo);\n\n    matrixLayers[rowIndex] = matrixLayers[rowIndex] ? matrixLayers[rowIndex] : [];\n    matrixLayers[rowIndex][columnIndex] = layerConfigArr;\n\n    // return from map if already there otherwise create and put in map\n    const geomCellKey = getCellKey(rowIndex, columnIndex);\n    const fields = {\n        y: rowFields,\n        x: columnFields\n    };\n    const allFacets = [\n        [...facets.rowFacets[0], ...facets.colFacets[0]],\n        [...facets.rowFacets[1], ...facets.colFacets[1]]\n    ];\n    const geomCell = !exitCellMap.has(geomCellKey) ? new GeomCell() : exitCellMap.get(geomCellKey);\n\n    geomCell.data(datamodel)\n                    .axes(groupAxes)\n                    .fields(fields)\n                    .transform(datamodelTransform)\n                    .facetByFields(allFacets);\n    entryCellMap.set(geomCellKey, geomCell);\n    exitCellMap.delete(geomCellKey);\n\n    updateCells(resolver, facets, geomCell);\n\n    return entryCellMap.get(geomCellKey);\n};\n\n/**\n * Creates axis cells based on the set of axes\n *\n * @param {Selection} selection Contains a selection of the axis units\n * @param {Array} axes Actual axis units\n * @param {number} axisIndex 0-> primary axis, 1-> secondary axis(when dual axis is made)\n * @param {Object} cells Contains a collection of the cells\n * @return {Object} return either set of axis/blank cells depending on the config\n */\n\nconst createAxisCells = (selection, axes, axisIndex, cells) =>\n    createSelection(selection, axis => axis, axes, (item, i) => i + item.reduce((e, n) => {\n        const id = n.id + axisIndex;\n        return e + id;\n    }, '')).map((axis) => {\n        if (axis && axis[axisIndex]) {\n            const axisInst = axis[axisIndex];\n            const { orientation } = axisInst.config();\n\n            return new cells.AxisCell().source(axisInst).config({\n                isOffset: orientation === AxisOrientation.LEFT || orientation === AxisOrientation.TOP\n            });\n        }\n        return new cells.BlankCell();\n    });\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @retur\n */\nconst axisPlaceholderGn = (context, selObj, cells) => {\n    const {\n        matrices\n    } = context;\n    const {\n        axesMatrix\n    } = matrices;\n\n    return (type, axisFrom) => {\n        const axes = axesMatrix[`${type}`];\n\n        if (axes && axes.length) {\n            if (type === X || type === Y) {\n                const fieldNames = type === Y ? ROWS : COLUMNS;\n\n                [PRIMARY, SECONDARY].forEach((fieldType, index) => {\n                    const selObjProp = `${fieldNames}${fieldType}`;\n                    let axisIndex = index;\n                    let axesForDraw = axes;\n                    if (axisFrom === RIGHT || axisFrom === BOTTOM) {\n                        axisIndex = 1 - axisIndex;\n                    }\n                    if (!getObjProp(axes, 0, axisIndex)) {\n                        axesForDraw = [];\n                    }\n                    selObj[selObjProp] = createAxisCells(selObj[selObjProp], axesForDraw, axisIndex, cells);\n                });\n            } else {\n                selObj.rowsPrimary = createAxisCells(selObj.rowPrime, axes.map(() => []), 0, cells);\n                selObj.columnsPrimary = createAxisCells(selObj.colPrime, axes[0], 0, cells);\n            }\n        }\n        return selObj;\n    };\n};\n\n/**\n * Creates header cells based on the set of headers\n *\n * @param {Object} selection Contains a selection of the header units\n * @param {string} headers Contains a list of the headers\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} return either set of header cells depending on the config\n */\nconst createTextCells = (selection, headers, cells, labelManager) => createSelection(selection,\n    label => new cells.TextCell({}, { labelManager }).source(label), headers, (key, i) => key + i);\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @param {*} labelManager\n * @return\n */\nconst headerPlaceholderGn = (context, selectionObj, cells, labelManager) => {\n    const {\n        axis,\n        keys,\n        type,\n        facetConfig\n    } = context;\n    const counter = axis.length / keys.length;\n    const selectionKeys = keys.length ? axis.map((d, i) => keys[Math.floor(i / counter)]) : [];\n    return createSelection(selectionObj[`${type}Headers`], keySet => keySet, selectionKeys, (keySet, i) =>\n        `${keySet.join(',')}-${i}`).map(keySet => createTextCells(null, keySet, cells, labelManager)\n                        .map((cell, k, i) => cell.source(keySet[i]).config(facetConfig || {})));\n};\n\n/**\n * Creates a set of placeholders as a part of selection object\n *\n * @param {Array} normalizedOptions contains normalized rows and columns\n * @param {Array} matrices contains axis and value matrices\n * @param {aArrayny} projections contains set of row and column projections\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} Creates a set of placeholders as a part of selections\n */\nconst generatePlaceholders = (context, cells, labelManager) => {\n    let selectionObj;\n    const {\n        matrices,\n        fields,\n        facetsAndProjections,\n        selection,\n        facetConfig,\n        encoders\n    } = context;\n    const {\n        rows,\n        columns\n    } = fields;\n    const {\n        valuesMatrix\n    } = matrices;\n    const {\n        rowProjections,\n        colProjections\n    } = facetsAndProjections;\n    const {\n        rowKeys,\n        columnKeys\n    } = valuesMatrix;\n    const takeAxisFrom = encoders.simpleEncoder._axisFrom;\n    const takeHeaderFrom = encoders.simpleEncoder._headerFrom;\n\n    selectionObj = selection || {};\n\n    ['pie', X, Y].forEach((axis) => {\n        const axisFrom = axis === X ? takeAxisFrom.column : takeAxisFrom.row;\n        selectionObj = axisPlaceholderGn(context, selectionObj, cells)(axis, axisFrom);\n    });\n\n    const {\n        rowsPrimary,\n        rowsSecondary,\n        columnsPrimary,\n        columnsSecondary\n    } = selectionObj;\n\n    const rowAxis = rowsPrimary && rowsPrimary.getObjects().length ? rowsPrimary.getObjects() :\n        (rowsSecondary && rowsSecondary.getObjects().length ? rowsSecondary.getObjects() : []);\n    const colAxis = columnsPrimary && columnsPrimary.getObjects().length ? columnsPrimary.getObjects() :\n        (columnsSecondary && columnsSecondary.getObjects().length ? columnsSecondary.getObjects() : []);\n\n    const headerConfig = [\n        { type: LEFT, section: rows[0], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: RIGHT, section: rows[1], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: TOP, section: columns[0], axis: colAxis, headerFrom: takeHeaderFrom.column },\n        { type: BOTTOM, section: columns[1], axis: colAxis, headerFrom: takeHeaderFrom.column }\n    ];\n\n    headerConfig.forEach((config, index) => {\n        let keys;\n        let length;\n        const {\n            type,\n            section,\n            axis,\n            headerFrom\n        } = config;\n\n        if (index < 2) {\n            keys = rowKeys;\n            length = rowProjections.length > 0 ? rowProjections.length : 1;\n        } else {\n            keys = columnKeys;\n            length = colProjections.length > 0 ? colProjections.length : 1;\n        }\n\n        if (section.length && headerFrom === type && axis && keys.length) {\n            const hContext = { axis, length, type };\n            let headers = [];\n            if (index < 2) {\n                hContext.keys = keys;\n                hContext.facetConfig = facetConfig.rows;\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            } else {\n                hContext.facetConfig = facetConfig.columns;\n                hContext.keys = keys[0].map((key, i) => keys.map(e => e[i]));\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            }\n            selectionObj[`${type}Headers`] = headers;\n        } else {\n            selectionObj[`${type}Headers`] = null;\n        }\n    });\n    return selectionObj;\n};\n\n/**\n * Generates matrices\n *\n * @param {Object} config Configuration to generate matrices\n * @param {Array} matrices Matrices containing the set of visual units and axes units\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} contains a collection of matrices\n */\nexport const generateMatrices = (context, matrices, cells, labelManager) => {\n    const {\n        unitHeight,\n        unitWidth,\n        facetsAndProjections,\n        normalizedRows,\n        normalizedColumns,\n        selection,\n        axisFrom,\n        facetConfig,\n        encoders\n     } = context;\n    const placeholderContext = {\n        fields: {\n            rows: normalizedRows,\n            columns: normalizedColumns\n        },\n        matrices,\n        facetsAndProjections,\n        selection,\n        axisFrom,\n        facetConfig,\n        encoders\n    };\n    // Generate placeholders for all matrices\n    const selectionObj = generatePlaceholders(placeholderContext, cells, labelManager);\n    const {\n        columnsPrimary,\n        columnsSecondary,\n        rowsPrimary,\n        rowsSecondary,\n        leftHeaders,\n        topHeaders,\n        bottomHeaders,\n        rightHeaders\n    } = selectionObj;\n    const [rowPrime, rowSec, colPrime, colSec] = [rowsPrimary, rowsSecondary, columnsPrimary, columnsSecondary]\n        .map(d => (d ? d.getObjects() : []));\n    const [leftFacets, rightFacets] = [leftHeaders, rightHeaders].map(e => (e ? e.getObjects()\n                    .map(f => f.getObjects()) : []));\n\n    // Compute left matrix using left headers and the axes on the rows\n    let leftMatrix = leftFacets.length ? leftFacets.map((d, i) => {\n        rowPrime[i] = rowPrime[i] ? [rowPrime[i]] : [];\n        return [...d, ...rowPrime[i]];\n    }) : (rowPrime ? rowPrime.map(d => [d]) : []);\n\n    // Compute right matrix using right headers and the axes on the rows\n    const rightMatrix = rowSec.length ? rowSec.map((d, i) => [d, ...(rightFacets[i] || [])]) : (rightFacets.length ?\n        rightFacets.map(d => [...d]) : []);\n\n    const topMatrix = [];\n    if (topHeaders) {\n        const headers = topHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                topMatrix[i] = topMatrix[i] || [];\n                topMatrix[i].push(x);\n            });\n        });\n    }\n    // Compute top matrix using the top headers and axes on the columns\n    if (colPrime.length) {\n        topMatrix.push(colPrime);\n    }\n\n    // Bottom and right matrices are prepared using the user config.\n    let bottomMatrix = [];\n    if (colSec.length) {\n        bottomMatrix.push(colSec);\n    }\n    const currentBottomLength = bottomMatrix.length;\n    if (bottomHeaders) {\n        const headers = bottomHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                bottomMatrix[i + currentBottomLength] = bottomMatrix[i + currentBottomLength] || [];\n                bottomMatrix[i + currentBottomLength].push(x);\n            });\n        });\n    }\n\n    if (!leftMatrix.length && !rightMatrix.length) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        leftMatrix = [[cell]];\n    }\n\n    if (!topMatrix.length && (!bottomMatrix.length || !bottomMatrix[0].length)) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        bottomMatrix = [[cell]];\n    }\n\n    return {\n        rows: [leftMatrix, rightMatrix],\n        columns: [topMatrix, bottomMatrix],\n        selectionObj\n    };\n};\n\n/**\n * Computes matrices for a group\n *\n * @param {Object} datamodel on which the matrices are to be computed\n * @param {Object} config configuration of the matrices\n * @param {Object} layerRegistry contains the registered layers\n * @return {Object} conputed matrices\n * @memberof MatrixResolver\n */\nexport const computeMatrices = (context, config) => {\n    const {\n        resolver,\n        datamodel,\n        componentRegistry,\n        encoders\n    } = context;\n    const {\n            globalConfig,\n            selection,\n            transform\n        } = config;\n    const groupBy = globalConfig.autoGroupBy;\n    const { smartlabel: labelManager } = resolver.dependencies();\n    const fieldMap = datamodel.getFieldsConfig();\n    const layerConfig = resolver.layerConfig();\n    const registry = resolver.registry();\n    const { fields: normalizedRows } = resolver.horizontalAxis();\n    const { fields: normalizedColumns } = resolver.verticalAxis();\n    const otherEncodings = resolver.optionalProjections(config, layerConfig);\n    const facetsAndProjections = resolver.getAllFields();\n    const matrixGnContext = {\n        // Configuration to be passed to generate the  different matrices.\n        // A common config is used for both value matrices and other matrices\n        normalizedColumns,\n        normalizedRows,\n        facetsAndProjections,\n        layers: layerConfig,\n        fieldMap,\n        otherEncodings,\n        encoders,\n        facetConfig: globalConfig.facetConfig || {},\n        axisFrom: globalConfig.axisFrom || {},\n        selection\n    };\n    const cells = {\n        GeomCell: resolver.getCellDef(registry.GeomCell),\n        AxisCell: resolver.getCellDef(registry.AxisCell),\n        BlankCell: resolver.getCellDef(registry.BlankCell),\n        TextCell: resolver.getCellDef(registry.TextCell)\n    };\n    const isRowSizeEqual = isDistributionEqual(normalizedRows);\n    const isColumnSizeEqual = isDistributionEqual(normalizedColumns);\n\n    resolver.colCells({});\n    resolver.rowCells({});\n    resolver.datamodelTransform(transform || {});\n\n    // Cell creation begins here\n    resolver.resetSimpleAxes();\n\n    const {\n            entryCellMap\n        } = resolver.cacheMaps();\n    const newCacheMap = {\n        exitCellMap: entryCellMap,\n        entryCellMap: new Map()\n    };\n\n    resolver.cacheMaps(newCacheMap);\n\n    const valueCellContext = {\n        config: globalConfig,\n        suppliedLayers: encoders.simpleEncoder.serializeLayerConfig(resolver.layerConfig()),\n        resolver,\n        cell: cells.GeomCell,\n        encoder: encoders.simpleEncoder,\n        newCacheMap\n    };\n    const fieldsConfig = datamodel.getFieldsConfig();\n    let groupedModel = datamodel;\n    if (!groupBy.disabled) {\n        const fields = getFieldsFromSuppliedLayers(valueCellContext.suppliedLayers, datamodel.getFieldsConfig());\n        const allFields = extractFields(facetsAndProjections, fields);\n\n        const dimensions = allFields.filter(field =>\n            fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n        const aggregationFns = groupBy.measures;\n\n        groupedModel = datamodel.groupBy(dimensions.length ? dimensions : [''], aggregationFns).project(allFields);\n    }\n\n    // return a callback function to create the cells from the matrix\n    const cellCreator = resolver.valueCellsCreator(valueCellContext);\n    // Creates value matrices from the datamodel and configs\n    const valueMatrixInfo = getMatrixModel(groupedModel, facetsAndProjections, cellCreator);\n\n    resolver.cacheMaps().exitCellMap.forEach((placeholder) => {\n        placeholder.remove();\n    });\n    resolver.cacheMaps().exitCellMap.clear();\n    resolver.valueMatrix(valueMatrixInfo.matrix);\n    resolver.createUnits(componentRegistry, config);\n\n    const { xAxes, yAxes } = mutateAxesFromMap(resolver.cacheMaps(), resolver.axes());\n\n    resolver.axes({\n        x: xAxes,\n        y: yAxes\n    });\n\n    const matrices = {\n        valuesMatrix: valueMatrixInfo,\n        axesMatrix: resolver.axes()\n    };\n    // Create all matrices\n    const { rows, columns, selectionObj } = generateMatrices(matrixGnContext, matrices, cells, labelManager);\n\n    resolver.rowMatrix(rows);\n    resolver.columnMatrix(columns);\n\n    return {\n        rows: resolver.rowMatrix(),\n        columns: resolver.columnMatrix(),\n        values: resolver.valueMatrix(),\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        selection: selectionObj,\n        dataModels: {\n            groupedModel,\n            parentModel: datamodel\n        }\n    };\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport {\n     initializeCacheMaps,\n     headerCreator,\n     extractUnitConfig,\n     setFacetsAndProjections\n} from './group-utils';\nimport {\n     ROW, COL, LEFT, RIGHT, COLOR, SIZE, SHAPE, DETAIL, CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS, INITIALIZED,\n     AXIS, UNIT, BEFORE_UPDATE, UPDATED, VALUE_MATRIX, FACET_HEADERS\n} from '../enums/constants';\nimport { createValueCells, computeMatrices } from './cell-creator';\n/**\n * Resolves the matrices from configuration provided\n *\n * @export\n * @class MatrixResolver\n */\nexport default class MatrixResolver {\n\n    /**\n     * Creates an instance of MatrixResolver.\n     * @param {Object} dependencies needed to run the resolver\n     * @memberof MatrixResolver\n     */\n    constructor (dependencies) {\n        this._registry = {};\n        this._layerConfig = [];\n        this._matrixLayers = [];\n        this._dependencies = dependencies;\n        this._rowMatrix = [];\n        this._columnMatrix = [];\n        this._valueMatrix = [];\n        this._facets = {};\n        this._projections = {};\n        this._datamodelTransform = {};\n        this._units = [];\n        this._cacheMaps = {};\n        this._axes = {\n            x: {},\n            y: {},\n            color: [],\n            size: [],\n            shape: []\n        };\n\n        this.cacheMaps(initializeCacheMaps());\n    }\n\n    /**\n     * Set:  Registers placeholders, Get: return {Object} those placeholders\n     *\n     * @param {Object} placeholders cells that will construct the group\n     * @return {Object} Either current instance or the set of placeholders\n     * @memberof MatrixResolver\n     */\n    registry (...placeholders) {\n        if (placeholders.length) {\n            Object.entries(placeholders[0]).forEach((val) => {\n                this._registry[val[0]] = val[1];\n            });\n            return this;\n        }\n        return this._registry;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    dependencies (...dep) {\n        if (dep.length) {\n            this._dependencies = dep[0];\n            return this;\n        }\n        return this._dependencies;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    units (...unitArr) {\n        if (unitArr.length) {\n            this._units = unitArr[0];\n            return this;\n        }\n        return this._units;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} layer configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    layerConfig (...config) {\n        if (config.length) {\n            this._layerConfig = config[0];\n            return this;\n        }\n        return this._layerConfig;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    matrixLayers (...layers) {\n        if (layers.length) {\n            this._matrixLayers = layers[0];\n            return this;\n        }\n        return this._matrixLayers;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    datamodelTransform (...transform) {\n        if (transform.length) {\n            this._datamodelTransform = transform[0];\n            return this;\n        }\n        return this._datamodelTransform;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    cacheMaps (...maps) {\n        if (maps.length) {\n            [CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS].forEach((e) => {\n                this._cacheMaps[`${e}Map`] = maps[0][`${e}Map`] || this._cacheMaps[`${e}Map`];\n            });\n            return this;\n        }\n        return this._cacheMaps;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    rowCells (...cells) {\n        if (cells.length) {\n            this._rowCells = cells[0];\n            return this;\n        }\n        return this._rowCells;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    colCells (...cells) {\n        if (cells.length) {\n            this._colCells = cells[0];\n            return this;\n        }\n        return this._colCells;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    axes (...axes) {\n        if (axes.length) {\n            this._axes = Object.assign({}, this._axes, axes[0]);\n            return this;\n        }\n        return this._axes;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    rowMatrix (...rowMat) {\n        if (rowMat.length) {\n            this._rowMatrix = rowMat[0];\n            return this;\n        }\n        return this._rowMatrix;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    columnMatrix (...colMat) {\n        if (colMat.length) {\n            this._columnMatrix = colMat[0];\n            return this;\n        }\n        return this._columnMatrix;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    valueMatrix (...valMat) {\n        if (valMat.length) {\n            this._valueMatrix = valMat[0];\n            return this;\n        }\n        return this._valueMatrix;\n    }\n\n    /**\n     *\n     *\n     * @param {*} facets\n     * @return\n     * @memberof MatrixResolver\n     */\n    facets (...facets) {\n        if (facets.length) {\n            Object.entries(facets[0]).forEach((e) => {\n                this._facets[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._facets;\n    }\n\n    /**\n     *\n     *\n     * @param {*} projections\n     * @return\n     * @memberof MatrixResolver\n     */\n    projections (...projections) {\n        if (projections.length) {\n            Object.entries(projections[0]).forEach((e) => {\n                this._projections[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._projections;\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @param {*} layerConfig\n     * @return\n     * @memberof MatrixResolver\n     */\n    optionalProjections (config, layerConfig) {\n        const otherEncodings = {};\n        const optionalProjections = [];\n        const otherEncodingTypes = [SIZE, COLOR, SHAPE];\n\n        otherEncodingTypes.forEach((type) => {\n            if (config[type] && config[type].field) {\n                const enc = config[type];\n                otherEncodings[type] = enc.field;\n                optionalProjections.push(enc.field);\n            }\n        });\n\n        if (config[DETAIL]) {\n            optionalProjections.push(...config.detail);\n        }\n\n        if (layerConfig.length) {\n            layerConfig.forEach((layer) => {\n                if (layer.encoding) {\n                    Object.values(layer.encoding).forEach((enc) => {\n                        if (enc && optionalProjections.indexOf(enc.field) === -1) {\n                            optionalProjections.push(enc.field ? enc.field : enc);\n                        }\n                    });\n                }\n            });\n        }\n        this.projections({ optionalProjections });\n        return otherEncodings;\n    }\n\n    /**\n     * return the normalized set of rows and facets and projections\n     *\n     * @param {Object} rows parameters needed to set horizontal axis consisiting of rows\n     * @return {Object} facets, projections and normalized rows\n     * @memberof MatrixResolver\n     */\n    horizontalAxis (rows, encoder) {\n        if (rows) {\n            this._horizontalAxis = setFacetsAndProjections(this, { type: ROW, fields: rows }, encoder);\n            return this;\n        }\n        return this._horizontalAxis;\n    }\n\n    /**\n     * return the normalized set of columns and facets and projections\n     *\n     * @param {Object} columns parameters needed to set vertical axis consisiting of columns\n     * @return {Object} facets, projections and normalized columns\n     * @memberof MatrixResolver\n     */\n    verticalAxis (columns, encoder) {\n        if (columns) {\n            this._verticalAxis = setFacetsAndProjections(this, { type: COL, fields: columns }, encoder);\n            return this;\n        }\n        return this._verticalAxis;\n    }\n\n    /**\n     * Gets the class definition of a particular cell type(if the particular type has been extended, that particular\n     * definition is returned)\n     *\n     * @param {Object} cell cell whose class definition is to be retrieved\n     * @return {Object} cell definition\n     * @memberof MatrixResolver\n     */\n    getCellDef (cell) {\n        const registry = this.registry();\n\n        Object.values(registry).forEach((e) => {\n            if (e.prototype instanceof cell) {\n                cell = e;\n            }\n        });\n        return cell;\n    }\n\n    /**\n     * return a visual cell creator along with its axis information to be injected to the datamodel creation\n     * function\n     *\n     * @param {Object} GeomCell Type of cell to be created\n     * @return {Object} Created cell\n     * @memberof MatrixResolver\n     */\n    valueCellsCreator (context) {\n        // reset matrix layers\n        this.matrixLayers([]);\n\n        return (datamodel, fieldInfo, facets) => createValueCells(context, datamodel, fieldInfo, facets);\n    }\n\n    /**\n     * Callback to be applied on each cell of a matrix of a particular type\n     *\n     * @param {string} matrixType type of matrix on which callback is to be applied\n     * @param {Function} callback function to be applied to each cell\n     * @memberof MatrixResolver\n     */\n    forEach (matrixType, callback) {\n        this[matrixType]().forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                callback(rIndex, cIndex, col);\n            });\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof MatrixResolver\n     */\n    getAllFields () {\n        const retObj = this.projections();\n\n        Object.entries(this.facets()).forEach((e) => {\n            retObj[e[0]] = e[1];\n        });\n        return retObj;\n    }\n\n    /**\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    resetSimpleAxes () {\n        return this.axes({\n            x: new Set(),\n            y: new Set()\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} componentRegistry\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createUnits (componentRegistry, config) {\n        const {\n            globalConfig,\n            alias\n        } = config;\n        const {\n            layerRegistry,\n            sideEffectRegistry\n        } = componentRegistry;\n        const {\n            smartlabel: smartLabel,\n            lifeCycleManager\n        } = this.dependencies();\n        // Provide the source for the matrix\n        const units = [];\n        // Setting unit configuration\n        const unitConfig = extractUnitConfig(globalConfig || {});\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            let unit = el.source();\n            if (!unit) {\n                unit = VisualUnit.create({\n                    layerRegistry,\n                    sideEffectRegistry\n                }, {\n                    smartLabel,\n                    lifeCycleManager\n                });\n                el.source(unit);\n                units.push(unit);\n            }\n            unit.parentAlias(alias);\n            el.config(unitConfig);\n        });\n\n        lifeCycleManager.notify({ client: units, action: INITIALIZED, formalName: UNIT });\n        return this.units(units);\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    setDomains (config, datamodel, encoders) {\n        const {\n            color,\n            shape,\n            size,\n            globalConfig\n        } = config;\n        const groupBy = globalConfig.autoGroupBy;\n        const {\n            rowFacets,\n            colFacets\n        } = this.getAllFields();\n        const encoding = {\n            color,\n            shape,\n            size\n        };\n        const facetFields = [...rowFacets.map(e => e.toString()), ...colFacets.map(e => e.toString())];\n        const retContext = {\n            domains: encoders.simpleEncoder.getRetinalFieldsDomain(datamodel, encoding, facetFields, groupBy),\n            axes: this.axes(),\n            encoding\n        };\n        encoders.retinalEncoder.setCommonDomain(retContext);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof MatrixResolver\n     */\n    getRetinalAxes () {\n        const {\n            color,\n            shape,\n            size\n        } = this.axes();\n\n        return {\n            color: [...color],\n            shape: [...shape],\n            size: [...size]\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     * @return\n     * @memberof MatrixResolver\n     */\n    getSimpleAxes (type) {\n        return this.axes()[`${type}`];\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createRetinalAxes (fieldsConfig, config, encoders) {\n        const layerConfig = this.layerConfig();\n        this.optionalProjections(config, layerConfig);\n        const retinalAxes = encoders.retinalEncoder.createAxis({\n            fieldsConfig,\n            config,\n            axes: this.axes()\n        });\n        const {\n            lifeCycleManager\n        } = this.dependencies();\n\n        [COLOR, SHAPE, SIZE].forEach((e) => {\n            this.axes()[e] = retinalAxes[e];\n        });\n\n        lifeCycleManager.notify({ client: this.axes(), action: INITIALIZED, formalName: AXIS });\n        lifeCycleManager.notify({ client: this.units(), action: BEFORE_UPDATE, formalName: UNIT });\n\n        const units = [];\n        const matrixLayers = this.matrixLayers();\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            el.axes(retinalAxes);\n            el.source() && el.source().retinalFields(config);\n            el.layerDef(encoders.retinalEncoder.getLayerConfig(config, matrixLayers[i][j]));\n            el.updateModel();\n\n            units.push(el.source());\n        });\n\n        lifeCycleManager.notify({ client: units, action: UPDATED, formalName: UNIT });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} placeholders\n     * @param {*} fieldNames\n     * @return\n     * @memberof MatrixResolver\n     */\n    createHeaders (placeholders, fieldNames) {\n        let bottomLeft = [];\n        let bottomRight = [];\n        const {\n            rows,\n            columns\n        } = placeholders;\n        const {\n            smartlabel: labelManager,\n            lifeCycleManager\n        } = this.dependencies();\n        const TextCell = this.getCellDef(this.registry().TextCell);\n        const BlankCell = this.getCellDef(this.registry().BlankCell);\n        const [leftRows, rightRows] = rows;\n        const [topCols, bottomCols] = columns;\n        const rowHeaders = fieldNames.rows;\n        // Headers and footers are created based on the rows. Thereafter, using the column information\n        // they are tabularized into the current structure\n        const headers = {\n            left: headerCreator(leftRows, rowHeaders[0], TextCell, labelManager),\n            right: headerCreator(rightRows, rowHeaders[1], TextCell, labelManager)\n        };\n        const footers = {\n            left: leftRows.length > 0 ? leftRows[0].map(() => new BlankCell()) : [],\n            right: rightRows.length > 0 ? rightRows[0].map(() => new BlankCell()) : []\n        };\n        const [topLeft, topRight] = [LEFT, RIGHT].map(type => topCols.map((col, i) => {\n            if (i === topCols.length - 1) {\n                return headers[type];\n            }\n            return footers[type];\n        }));\n\n        // Creating only bottom matrices if there is no information on the top\n        if (topCols.length === 0) {\n            [bottomLeft, bottomRight] = [LEFT, RIGHT].map(type => bottomCols.map((col, i) => {\n                if (i === 0) {\n                    return headers[type];\n                }\n                return footers[type];\n            }));\n        } else {\n            bottomLeft = bottomCols.map(() => (leftRows.length > 0 ? leftRows[0].map(() => new BlankCell()) : []));\n            bottomRight = bottomCols.map(() => (rightRows.length > 0 ? rightRows[0].map(() => new BlankCell()) : []));\n        }\n\n        lifeCycleManager.notify({\n            client: [topLeft, topRight, bottomLeft, bottomRight],\n            action: INITIALIZED,\n            formalName: FACET_HEADERS\n        });\n\n        return { topLeft, topRight, bottomLeft, bottomRight };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @param {*} componentRegistry\n     * @param {*} encoders\n     * @return\n     * @memberof MatrixResolver\n     */\n    getMatrices (datamodel, config, componentRegistry, encoders) {\n        const context = {\n            datamodel,\n            componentRegistry,\n            encoders,\n            resolver: this\n        };\n\n        return computeMatrices(context, config);\n    }\n}\n","/**\n *\n *\n * @export\n * @class ValueMatrix\n */\nclass ValueMatrix {\n\n    /**\n     *Creates an instance of ValueMatrix.\n     * @param {*} matrixArr\n     * @memberof ValueMatrix\n     */\n    constructor (matrixArr) {\n        const instancesById = {};\n\n        this.matrix(matrixArr);\n        this.filter(() => true);\n\n        this.each((el) => {\n            const cellValue = el.valueOf();\n            if (cellValue && cellValue.id) {\n                const id = cellValue.id();\n                instancesById[id] = cellValue;\n            }\n        });\n\n        this.instancesById(instancesById);\n    }\n\n    /**\n     *\n     *\n     * @param {*} id\n     * @return\n     * @memberof ValueMatrix\n     */\n    instancesById (...id) {\n        if (id.length) {\n            this._instancesById = id[0];\n            return this;\n        }\n        return this._instancesById;\n    }\n\n    /**\n     *\n     *\n     * @param {*} m\n     * @return\n     * @memberof ValueMatrix\n     */\n    matrix (...matrix) {\n        if (matrix.length) {\n            this._matrix = matrix[0];\n            return this;\n        }\n        return this._matrix;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fn\n     * @return\n     * @memberof ValueMatrix\n     */\n    filter (...fn) {\n        if (fn.length) {\n            this._filterFn = fn[0];\n            return this;\n        }\n        return this._filterFn;\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof ValueMatrix\n     */\n    width () {\n        let rowWidth = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowWidth = 0;\n            row.forEach((cell) => {\n                currentRowWidth += cell.getLogicalSpace().width;\n            });\n            rowWidth = Math.max(rowWidth, currentRowWidth);\n        });\n        return rowWidth;\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof ValueMatrix\n     */\n    height () {\n        let rowHeight = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowHeight = 0;\n            row.forEach((cell) => {\n                currentRowHeight = Math.max(currentRowHeight, cell.getLogicalSpace().height);\n            });\n            rowHeight += currentRowHeight;\n        });\n        return rowHeight;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fn\n     * @return\n     * @memberof ValueMatrix\n     */\n    each (fn) {\n        const matrix = this.matrix();\n        const filterFn = this.filter();\n\n        matrix.forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                if (filterFn(col)) {\n                    fn(col, rIndex, cIndex, matrix);\n                }\n            });\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} id\n     * @return\n     * @memberof ValueMatrix\n     */\n    findPlaceHolderById (id) {\n        return this.instancesById()[id];\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof ValueMatrix\n     */\n    getMatrixArray () {\n        return this.matrix();\n    }\n}\n\nexport default ValueMatrix;\n","import { RetinalEncoder } from '../encoder';\nimport { DATA_UPDATE_COUNTER } from '../enums/defaults';\nimport { getEncoder, getBorders } from '../group-helper';\nimport ValueMatrix from './value-matrix';\nimport localOptions from './local-options';\n\nconst sanitizeRetinalConfig = (retinalConf) => {\n    const conf = {};\n    for (const key in retinalConf) {\n        const confValue = retinalConf[key];\n        if (typeof confValue === 'string' || !confValue) {\n            conf[key] = {\n                field: retinalConf[key]\n            };\n        } else {\n            conf[key] = confValue;\n        }\n    }\n    return conf;\n};\n\n/**\n *\n *\n * @param {*} placeholder\n * @memberof VisualGroup\n */\nconst setMatrixInstances = (context, placeholder) => {\n    context._composition.matrices = {\n        value: new ValueMatrix(placeholder.values),\n        left: new ValueMatrix(placeholder.rows[0]),\n        right: new ValueMatrix(placeholder.rows[1]),\n        top: new ValueMatrix(placeholder.columns[0]),\n        bottom: new ValueMatrix(placeholder.columns[1])\n    };\n    return context;\n};\n\n/**\n *\n *\n * @param {*} context\n * @returns\n */\nexport const setupChangeListeners = (context) => {\n    context.store().registerImmediateListener([...Object.keys(localOptions), DATA_UPDATE_COUNTER], (...params) => {\n        const datamodel = context.data();\n        const [config, rows, columns, color, shape, size, detail, layers, transform] = params;\n\n        if (datamodel && rows[1] && columns[1]) {\n            // Get the resolver for the matrices\n            const resolver = context.resolver();\n            // Prepare configuration for matrix preparation\n            let matrixConfig = {\n                selection: context.selection(),\n                alias: context.alias(),\n                globalConfig: config[1] || {},\n                rows: rows[1],\n                columns: columns[1],\n                detail: detail[1],\n                layers: layers[1],\n                transform: transform[1]\n            };\n\n            const retinalConfig = sanitizeRetinalConfig({\n                color: color[1],\n                shape: shape[1],\n                size: size[1]\n            });\n\n            matrixConfig = Object.assign(matrixConfig, retinalConfig);\n            // Create the encoders for the group\n            const encoders = {};\n            encoders.retinalEncoder = new RetinalEncoder();\n            encoders.simpleEncoder = getEncoder(layers[1]);\n\n            // Set the group type\n            context.groupType(encoders.simpleEncoder.constructor.type());\n\n            // Get sanitized fields as instances of the Vars Class\n            const fields = encoders.simpleEncoder.fieldSanitizer(datamodel, matrixConfig);\n            encoders.simpleEncoder.setAxisAndHeaders(config[1] ? config[1].axisFrom : {}, fields);\n            // Setting layers for the code\n            layers[1] && resolver.layerConfig(layers[1]);\n            // Set the row and column axes\n            resolver.horizontalAxis(fields.rows, encoders).verticalAxis(fields.columns, encoders);\n            // Getting the placeholders\n            const placeholderInfo = resolver.getMatrices(datamodel, matrixConfig, context.registry(), encoders);\n            context._groupedDataModel = placeholderInfo.dataModels.groupedModel;\n            // Set the selection object\n            context.selection(placeholderInfo.selection);\n\n            // Create retinal axes\n            resolver.createRetinalAxes(placeholderInfo.dataModels.parentModel.getFieldsConfig(), retinalConfig,\n                encoders);\n\n            // Domains are evaluated for each of the axes for commonality\n            resolver.setDomains(matrixConfig, placeholderInfo.dataModels, encoders);\n\n            // Create matrix instances\n            setMatrixInstances(context, placeholderInfo);\n\n            // Prepare corner matrices\n            context.cornerMatrices(resolver.createHeaders(placeholderInfo, fields));\n\n             // Set placeholder information\n            context.placeholderInfo(placeholderInfo);\n\n            context._composition.axes = resolver.axes();\n            context.metaData({\n                border: getBorders(placeholderInfo, encoders.simpleEncoder)\n            });\n        }\n        return context;\n    });\n    return context;\n};\n","import { DATA_UPDATE_COUNTER } from '../enums/defaults';\n\nexport const PROPS = {\n    alias: {},\n    data: {\n        sanitization: (context, value) => {\n            if (context._data !== value) {\n                const store = context.store();\n                let hasDataUpdated = store.get(DATA_UPDATE_COUNTER);\n                store.commit(DATA_UPDATE_COUNTER, ++hasDataUpdated);\n            }\n            return value;\n        }\n    },\n    cornerMatrices: {},\n    groupType: {},\n    matrixInstance: {},\n    metaData: {},\n    placeholderInfo: {},\n    resolver: {},\n    registry: {\n        sanitization: (context, value) => {\n            if (context.resolver) {\n                context.resolver().registry(value.cellRegistry);\n            }\n            return value;\n        }\n    },\n    selection: {},\n    store: {}\n};\n","import { transactor, generateGetterSetters } from 'muze-utils';\nimport localOptions from './local-options';\nimport { SimpleGroup } from '../simple-group';\nimport {\n    MatrixResolver,\n    initStore,\n    findInGroup\n} from '../group-helper';\nimport { setupChangeListeners } from './change-listener';\nimport { PROPS } from './props';\nimport {\n    CONFIG,\n    MOUNT,\n    RETINAL,\n    Y\n} from '../enums/constants';\n\n/**\n * This class is used to create an instance of a visual group.\n * It extends the SimpleGroup (which is an interface). The visual group takes in a datamodel,\n * and a set of rows and columns, alongwith optional paramters (like color, size, shape).\n *\n * @class VisualGroup\n */\nclass VisualGroup extends SimpleGroup {\n\n    /**\n     * Creates an instance of VisualGroup. Requires dependencies and other registry options for placeholders\n     * and layers that create individual units\n     * @param {Object} registry Key value pair of compostions for the group\n     * @param {Object} dependencies Dependencies needed to run the group\n     * @memberof VisualGroup\n     */\n    constructor (registry, dependencies) {\n        super();\n\n        const {\n            componentSubRegistry\n        } = registry;\n\n        this._dependencies = dependencies;\n        // Generate getter/setter methods for all properties of the class\n        // One can get each property by calling the method and can set it\n        // by passing paramaters for the same. Thus, one can chain setter\n        // getter methods.\n        generateGetterSetters(this, PROPS);\n        // Populate the store with default values\n        this.store(initStore());\n\n        // initialize group compositions\n        this._composition = {};\n        // store reference to data\n        this._data = [];\n        // matrix instance store each of the matrices\n        this._matrixInstance = {};\n        // store reference to mountpoint\n        this._mount = null;\n        // selection object that takes care of updating of components\n        this._selection = {};\n        // stores info about the placeholders generated after creation of matrices\n        this._placeholderInfo = {};\n        // corner matrices are the headers/footers for the application\n        this._cornerMatrices = {};\n        // Create instance of matrix resolver\n        this.resolver(new MatrixResolver(this._dependencies));\n\n         // Getting indiviual registered items\n        this.registry({\n            layerRegistry: componentSubRegistry.layerRegistry.get(),\n            cellRegistry: componentSubRegistry.cellRegistry.get()\n        });\n        // Add local options to the store\n        transactor(this, localOptions, this.store().model);\n        // Register listeners\n        setupChangeListeners(this);\n    }\n\n    matrixInstance (...matrices) {\n        if (matrices.length) {\n            return this;\n        }\n        return this.composition().matrices;\n    }\n\n    /**\n     * Returns the composition of the Group\n     *\n     * @readonly\n     * @memberof VisualGroup\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    /**\n     * Locks the model to prevent change listeners to be triggered until unlocked\n     *\n     * @return {Object} Instance of class VisualGroup\n     * @memberof VisualGroup\n     */\n    lockModel () {\n        this.store().model.lock();\n        return this;\n    }\n\n    /**\n     * Unlocks the model so that all change listeners can be triggered\n     *\n     * @return {Object} Instance of class VisualGroup\n     * @memberof VisualGroup\n     */\n    unlockModel () {\n        this.store().model.unlock();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} variable\n     * @return\n     * @memberof VisualGroup\n     */\n    where (variable) {\n        return findInGroup(variable, this.resolver().getAllFields());\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     * @return\n     * @memberof VisualGroup\n     */\n    getAxes (type) {\n        if (type === RETINAL) {\n            return this.resolver().getRetinalAxes();\n        }\n        return this.resolver().getSimpleAxes(type);\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualGroup\n     */\n    getCells (type) {\n        return this.resolver()[`${type}Cells`]();\n    }\n\n    /**\n     *\n     *\n     * @param {*} channel\n     * @return\n     * @memberof VisualGroup\n     */\n    getFieldsFromChannel (channel) {\n        const {\n            rowProjections,\n            colProjections\n        } = this.resolver().getAllFields();\n\n        return channel === Y ? rowProjections : colProjections;\n    }\n\n    /**\n     *\n     *\n     * @param {*} facetKey\n     * @return\n     * @memberof VisualGroup\n     */\n    getCellsByFacetKey (facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey] || [];\n        return cells;\n    }\n\n    /**\n     *\n     *\n     * @param {*} facetKey\n     * @return\n     * @memberof VisualGroup\n     */\n    getAxesByFacetKey (axisType, facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey];\n        const axes = cells[0].valueOf().axes()[axisType] || [];\n\n        return axes;\n    }\n\n    /**\n     * This method is used to return a serialized representation of the instance's properties.\n     *\n     * @return {Object} Object with config proprties.\n     * @memberof VisualGroup\n     */\n    serialize () {\n        const store = this.store();\n\n        return {\n            [CONFIG]: store.get(CONFIG),\n            [MOUNT]: store.get(MOUNT)\n        };\n    }\n\n    getGroupByData () {\n        return this._groupedDataModel;\n    }\n}\n\nexport default VisualGroup;\n","import { PersistentBehaviour, SELECTION } from '@chartshq/muze-firebolt';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return 'select';\n    }\n\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            // new add set\n            const existingRemoveSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_OLD_EXIT\n                || selectionSet._set[d] === SELECTION.SELECTION_NEW_EXIT);\n                // existing add set\n            if (existingRemoveSet.length) {\n                selectionSet.updateEntry();\n                selectionSet.add(existingRemoveSet);\n            } else {\n                selectionSet.updateExit();\n                selectionSet.remove(addSet);\n            }\n            const { exitSet } = selectionSet.getSets();\n            const mergedExitSet = [...new Set(exitSet[1]), ...new Set(exitSet[0])];\n            const completeSetCount = selectionSet.getCompleteSet().length;\n            if (exitSet[1].length !== completeSetCount && mergedExitSet.length === completeSetCount) {\n                selectionSet.reset();\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nconst CLASSPREFIX = 'muze';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        target: `.${CLASSPREFIX}-gradient-rect`,\n        behaviours: [BEHAVIOURS.BRUSH]\n    },\n    [ACTIONS.HOVER]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.CLICK]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.SELECT]\n    }\n};\n\nexport const propagationBehaviourMap = {\n    [BEHAVIOURS.SELECT]: BEHAVIOURS.FILTER,\n    [BEHAVIOURS.BRUSH]: BEHAVIOURS.HIGHLIGHT\n};\n","import * as BEHAVIOURS from '../enums/behaviours';\nimport * as sideEffects from '../enums/side-effects';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: [sideEffects.SELECTIONBOX, {\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [sideEffects.Highlighter],\n    select: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }]\n};\n\nexport const propagationSideEffects = {\n    [BEHAVIOURS.BRUSH]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }]\n};\n\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n\n","export const SELECTIONBOX = 'selectionBox';\nexport const Highlighter = 'highlighter';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const CONFIG = 'config';\nexport const DATAMODEL = 'dataModel';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNTPOINT = 'mountPoint';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const TRANSFORM = 'transform';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const DEFAULTCOLOR = '#F44336';\nexport const DEFAULTSIZE = 50;\nexport const DEFAULTSHAPE = 'circle';\nexport const STEP = 'step';\nexport const GRADIENT = 'gradient';\nexport const ORDINAL = 'ordinal';\nexport const SCALE_FUNCTIONS = {\n    size: 'getSize',\n    shape: 'getShape',\n    color: 'getColor'\n};\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nexport const CENTER = 'center';\nexport const VALUE = 'value';\nexport const PATH = 'path';\nexport const SHAPE = 'shape';\nexport const ICON = 'icon';\nexport const RECT = 'rect';\nexport const START = 'start';\nexport const UPPER = 'upper';\nexport const LOWER = 'lower';\nexport const END = 'end';\nexport const SIZE = 'size';\nexport const DISCRETE = 'discrete';\nexport const MEASURE = 'measure';\n\n","import { assembleModelFromIdentifiers, getDataModelFromRange } from 'muze-utils';\nimport { propagationBehaviourMap } from './action-behaviour-map';\nimport { propagationSideEffects } from './behaviour-effect-map';\nimport { STEP, GRADIENT, DISCRETE, MEASURE } from '../enums/constants';\n\nexport const propagate = (firebolt, action, selectionSet, config = {}) => {\n    let propagationData;\n    const type = firebolt.context.constructor.type();\n    const payload = config.payload;\n    const data = firebolt.context.data();\n    const metaData = firebolt.context.metaData();\n    const fieldType = metaData.getData().schema[0].type;\n\n    const propPayload = {};\n    const sourceId = firebolt.context._id;\n    propPayload.action = propagationBehaviourMap[action] || action;\n    propPayload.sideEffects = propagationSideEffects[action];\n\n    const isMutableAction = firebolt._actions.behavioural[propPayload.action].constructor.mutates();\n    if (payload.criteria === null) {\n        propagationData = null;\n    } else {\n        const entrySet = selectionSet.mergedEnter;\n        let values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.value);\n        if (type === STEP || (type === DISCRETE && fieldType === MEASURE)) {\n            const field = Object.keys(payload.criteria || {})[0];\n            values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.range);\n            propagationData = values.length ? metaData.select((fields) => {\n                let check = false;\n                for (let i = 0; i < values.length; i++) {\n                    check = fields[field].value >= values[i][0] && fields[field].value <= values[i][1];\n                    if (check === true) {\n                        break;\n                    }\n                }\n                return check;\n            }, {\n                saveChild: false\n            }) : null;\n        } else if (type === GRADIENT) {\n            propagationData = getDataModelFromRange(metaData, payload.criteria);\n        } else if (values.length) {\n            propagationData = assembleModelFromIdentifiers(metaData, [payload.criteria[0], ...values.map(d => [d])]);\n        } else {\n            propPayload.criteria = null;\n            propagationData = metaData.select(() => true, {\n                saveChild: false\n            });\n        }\n    }\n\n    metaData.addToPropNamespace(`legend-${sourceId}`, {\n        payload: propPayload,\n        criteria: propPayload.criteria === null ? null : propagationData,\n        isMutableAction,\n        actionName: propPayload.action\n    });\n    metaData.propagate(propagationData, propPayload, {\n        isMutableAction,\n        sourceId\n    });\n};\n","import { Firebolt } from '@chartshq/muze-firebolt';\nimport { propagate } from './helper';\nimport { STEP, GRADIENT } from '../enums/constants';\n\n/**\n * This class manages the interactions of legend.\n * @export\n * @class LegendFireBolt\n * @extends {Firebolt}\n */\nexport class LegendFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this.initializeSideEffects();\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet[0];\n    }\n\n    propagate (behaviourName, payload, selectionSet) {\n        propagate(this, behaviourName, selectionSet, {\n            payload\n        });\n    }\n    getAddSetFromCriteria (criteria) {\n        let values;\n        let uniqueIds;\n        const type = this.context.constructor.type();\n\n        if (criteria === null) {\n            uniqueIds = null;\n        } else if (type === STEP) {\n            values = Object.values(criteria);\n            uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n        } else if (type === GRADIENT) {\n            uniqueIds = [];\n        } else {\n            values = criteria[1];\n            if (values) {\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.value) !== -1).map(d => d.id);\n            } else {\n                values = Object.values(criteria);\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n            }\n        }\n        return {\n            uids: uniqueIds,\n            model: null\n        };\n    }\n\n    getFullData () {\n        return null;\n    }\n}\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\n/**\n * Adds dragging action to the target element.\n * @param {firebolt} firebolt firebolt\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let endPos = {};\n    let payload;\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const boundingBox = context.measurement().gradientDimensions;\n    const axisType = context.config().align === 'horizontal' ? 'x' : 'y';\n    const axisScale = context.axis().source().scale();\n    const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n    }).on('drag', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter),\n                    axisScale.invert(endPos[axisType] + rangeShifter)].sort((a, b) => a - b)\n            }\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }).on('end', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n        if (startPos[axisType] === endPos[axisType]) {\n            payload = {\n                criteria: {}\n            };\n        } else {\n            payload = {\n                criteria: {\n                    [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter),\n                        axisScale.invert(endPos[axisType] + rangeShifter)].sort((a, b) => a - b)\n                }\n            };\n        }\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }));\n};\n\nexport default drag;\n","/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} Firebolt instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, {\n                            criteria: null\n                        }));\n                        event.stopPropagation();\n                    });\n};\n\nexport default hover;\n","/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nconst click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\n\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport click from './click';\nimport * as ACTIONNAMES from '../../enums/actions';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click\n};\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\n","import {\n    getMousePos,\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\nimport { HEIGHT, WIDTH, HORIZONTAL } from '../../enums/constants';\n\nconst getSelectionCriteria = (subject, axis, measures) => {\n    let criteria = [];\n    const {\n        axisScale,\n        axisType\n    } = axis;\n    const {\n        startPos,\n        endPos,\n        selectionBoxMeasure,\n        drawingInfMeasure,\n        offset\n    } = measures;\n    const subjectStartPoint = subject[axisType];\n\n    if (startPos[axisType] === endPos[axisType]) {\n        criteria = [];\n    } else if (subjectStartPoint + selectionBoxMeasure >= drawingInfMeasure + offset) {\n        criteria = [axisScale.invert(drawingInfMeasure + offset - selectionBoxMeasure),\n            axisScale.invert(drawingInfMeasure + offset)];\n    } else if (subjectStartPoint - offset < offset) {\n        criteria = [axisScale.invert(offset * 2), axisScale.invert(selectionBoxMeasure + offset * 2)];\n    } else {\n        criteria = [axisScale.invert(subjectStartPoint), axisScale.invert(subjectStartPoint + selectionBoxMeasure)];\n    }\n    axisType === 'x' ? criteria : criteria.reverse();\n    return criteria;\n};\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let payload;\n    const endPos = {};\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const axisScale = context.axis().source().scale();\n    const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n    const drawingInfMeasure = context.measurement().gradientDimensions[axisType === 'x' ?\n        WIDTH : HEIGHT];\n    const offset = axisScale.range()[axisType === 'x' ? 0 : 1];\n    const measures = {\n        drawingInfMeasure,\n        offset\n    };\n    let subject = {};\n\n    targetEl.call(d3Drag().on('start', function () {\n        const event = getEvent();\n        startPos = getMousePos(this, event.sourceEvent);\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n\n        subject.x += event.dx;\n        subject.y += event.dy;\n\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(subject, { axisScale, axisType }, measures);\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }).on('end', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(event, { axisScale, axisType }, measures);\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true,\n            config: {\n                transition: {\n                    duration: 200\n                }\n            }\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }));\n};\n\n","import { makeElement } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { CLASSPREFIX, HEIGHT, WIDTH, HORIZONTAL, RECT } from '../../../enums/constants';\nimport { SELECTIONBOX } from '../../../enums/side-effects';\nimport { selectionBoxDrag } from '../../physical/selection-box-drag';\nimport './styles.scss';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\n/* istanbul ignore next */ class SelectionBox extends SpawnableSideEffect {\n    static formalName () {\n        return SELECTIONBOX;\n    }\n\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            className: 'legend-selection-box',\n            classPrefix: CLASSPREFIX\n        };\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     */\n    /* istanbul ignore next */ apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const firebolt = this.firebolt;\n        const context = firebolt.context;\n        const config = this.config();\n        const axis = context.axis().source();\n        const className = `${config.classPrefix}-${config.className}`;\n\n        const domain = payload.criteria[firebolt.context.fieldName()];\n        const axisScale = axis.scale();\n        const range = domain ? [axis.getScaleValue(domain[0]), axis.getScaleValue(domain[1])] : [];\n\n        const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n\n        const gradientDimension = firebolt.context.measurement().gradientDimensions[axisType === 'x' ?\n            HEIGHT : WIDTH];\n\n        const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n        const legendGradContainer = context.getDrawingContext().svgContainer;\n        const legendSelGroup = makeElement(legendGradContainer, 'g', [1], `${config.classPrefix}-selection-box-group`);\n\n        if (firebolt.context.config().align === HORIZONTAL) {\n            x = range[0] - rangeShifter || 0;\n            y = 0;\n            width = range[1] - range[0] || 0;\n            height = gradientDimension;\n        } else {\n            x = 0;\n            y = range[1] - rangeShifter || 0;\n            height = range[0] - range[1] || 0;\n            width = gradientDimension;\n        }\n        const enterFn = function (el) {\n            selectionBoxDrag(firebolt)(el, ['brush']);\n        };\n        const selBox = makeElement(legendSelGroup, RECT, [{ domain, x, y, width, height }], className,\n            { enter: enterFn });\n        selBox.attr('y', y)\n                        .attr('x', x)\n                        .attr(WIDTH, width)\n                        .attr(HEIGHT, height);\n    }\n}\n\nexport default SelectionBox;\n\n","import { selectElement } from 'muze-utils';\n\nexport const strategies = (firebolt) => {\n    const context = firebolt.context;\n    const classed = (set, className, change) => {\n        const classPrefix = context.config().classPrefix;\n        selectElement(context.mount())\n                        .selectAll(`.${classPrefix}-legend-columns`)\n                        .filter(d => set.uids.indexOf(d.id) !== -1)\n                        .selectAll('div')\n                        .classed(className, change);\n    };\n\n    return {\n        fade: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-fadeout`, false);\n            } else {\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-fadeout`, true);\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-fadeout`, false);\n            }\n        },\n        brighten: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-brighten`, false);\n            } else {\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-brighten`, true);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n            }\n        }\n    };\n};\n","import { GenericSideEffect } from '@chartshq/muze-firebolt';\nimport { strategies } from './strategies';\nimport { Highlighter } from '../../../enums/side-effects';\n\nexport default class LegendHighlighter extends GenericSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategies = strategies(this.firebolt);\n        this._strategy = 'brighten';\n    }\n\n    static formalName () {\n        return Highlighter;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    data: {},\n    fieldName: {},\n    legendContainer: {},\n    measurement: {\n        sanitization: (context, value) => {\n            const measurement = mergeRecursive(context._measurement, value);\n            ['padding', 'border', 'margin'].forEach((space) => {\n                measurement[space] = Math.min(measurement[space] > 0 ? measurement[space] : 0,\n                     measurement.maxWidth * 0.1, measurement.maxHeight * 0.1);\n            });\n            return measurement;\n        }\n    },\n    logicalSpace: {},\n    metaData: {},\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.resetLogicalSpace();\n            context.store().commit('range', value);\n            return value;\n        }\n    },\n    scale: {},\n    smartTicks: {},\n    store: {},\n    title: {\n        sanitization: (context, value) => mergeRecursive(context._title || {}, value)\n    }\n};\n","import { getSymbol } from 'muze-utils';\nimport {\n    CENTER,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\nexport const ALIGN = {\n    HORIZONTAL: 'horizontal',\n    VERTICAL: 'vertical'\n};\n\nexport const DEFAULT_MEASUREMENT = {\n    height: 30,\n    width: 30,\n    maxWidth: Infinity,\n    maxHeight: Infinity,\n    padding: 2,\n    margin: 2,\n    border: 1\n};\n\nexport const LEGEND_TITLE = {\n    text: '',\n    orientation: (pos) => {\n        if (pos === LEFT || pos === RIGHT) {\n            return LEFT;\n        } return CENTER;\n    }\n};\n\nexport const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n\n    formatter: {\n        bounds: {\n            lower: 'less than',\n            upper: 'more than'\n        }\n    },\n    item: {\n        text: {\n            orientation: 'right',\n            width: 10\n        },\n        icon: {\n            className: 'legend-icon',\n            height: 20,\n            width: 20,\n            color: 'rgba(0,0,0,.5)',\n            type: 'square'\n        }\n    }\n};\n\n/**\n * Creates a map of pre defined icons\n *\n * @param {string} icon Accepts a icon name like 'square', 'cross', 'diamond' etc\n * @return {Object} icon object which can be used to draw the icons\n */\nexport const ICON_MAP = icon => icon && getSymbol(icon);\n","import { makeElement, numberInterpolator } from 'muze-utils';\n\nimport {\n    SCALE_FUNCTIONS,\n    WIDTH,\n    HEIGHT,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} scale\n * @returns\n */\nexport const getScaleInfo = (scale) => {\n    const scaleType = scale.constructor.type();\n    const domain = scale.uniqueValues();\n    const steps = scale.config().stops || 1;\n    const scaleFn = SCALE_FUNCTIONS[scaleType];\n\n    return { scaleType, domain, steps, scaleFn };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} steps\n * @returns\n */\nexport const getInterpolatedData = (domain, steps) => {\n    const domainForLegend = [];\n    const interpolatedFn = numberInterpolator()(domain[0], domain[1]);\n\n    for (let i = 0; i <= steps; i++) {\n        domainForLegend[i] = interpolatedFn(i / steps);\n    }\n    return domainForLegend;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} text\n * @param {*} measurement\n * @param {*} classPrefix\n */\nexport const titleCreator = (container, title, measurement, config) =>\n                makeElement(container, 'div', [1], `${config.classPrefix}-legend-title`)\n                                .style(WIDTH, '100%')\n                                .style(HEIGHT, `${measurement.height}px`)\n                                .style('padding-left', `${measurement.padding}px`)\n                                .style('padding-right', `${measurement.padding}px`)\n                                .style('border-bottom-width', `${measurement.border}px`)\n                                .style('text-align', title.orientation instanceof Function ?\n                                        title.orientation(config.position) : title.orientation)\n                                .text(title.text)\n                                .node();\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n * @return\n */\nexport const getMaxMeasures = (data, prop, labelManager) => {\n    let maxHeight = -Infinity;\n    let maxWidth = -Infinity;\n\n    data.forEach((item) => {\n        const value = prop ? item[prop] : item;\n        const space = labelManager.getOriSize(value);\n        maxHeight = Math.max(space.height + 2, maxHeight);\n        maxWidth = Math.max(space.width + 2, maxWidth);\n    });\n\n    return { height: maxHeight, width: maxWidth };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n * @return\n */\nexport const getItemMeasures = (data, prop, labelManager) => {\n    const space = [];\n\n    data.forEach((item, index) => {\n        const value = prop ? item[prop] : item;\n        const { height, width } = labelManager.getOriSize(value);\n        space[index] = { height: height + 1, width: width + 1 };\n    });\n    return space;\n};\n\n/**\n *\n *\n * @param {*} textOrientation\n * @param {*} effPadding\n * @param {*} titleSpace\n * @return\n * @memberof Legend\n */\nexport const computeItemSpaces = (config, measures, data) => {\n    let totalHeight = 0;\n    let totalWidth = 0;\n    let maxItemSpaces = {\n        width: 0, height: 0\n    };\n    const {\n        effPadding,\n        titleWidth,\n        labelSpaces,\n        titleHeight,\n        maxWidth\n    } = measures;\n    const {\n        item,\n        align\n    } = config;\n    const {\n        icon,\n        text\n    } = item;\n    const textOrientation = text.orientation;\n    const itemSpaces = [];\n    const iconSpaces = [];\n    let maxIconWidth = 0;\n    labelSpaces.forEach((labelSpace, i) => {\n        const itemSpace = { width: 0, height: 0 };\n        const iconSpace = { width: 0, height: 0 };\n        const datum = data[i] || {};\n            // Compute each legend item height/width\n        if (textOrientation === LEFT || textOrientation === RIGHT) {\n            // Get label, icon and item widths\n            labelSpace.width += effPadding;\n            iconSpace.width = (datum.size ? 2 * Math.sqrt(datum.size / Math.PI) : icon.width) + effPadding;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n            itemSpace.width = labelSpace.width + maxIconWidth;\n\n            // Get label, icon and item heights\n            labelSpace.height = Math.max(labelSpace.height, icon.height) + effPadding;\n            iconSpace.height = labelSpace.height;\n            itemSpace.height = labelSpace.height;\n        } else {\n            // Get label, icon and item widths\n            labelSpace.width = Math.max(labelSpace.width, datum.size ? 2 * Math.sqrt(datum.size / Math.PI)\n            : icon.width) + effPadding;\n            iconSpace.width = labelSpace.width;\n            itemSpace.width = labelSpace.width;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n\n            // Get label, icon and item heights\n            labelSpace.height += effPadding;\n            iconSpace.height = icon.height + effPadding;\n            itemSpace.height = labelSpace.height + iconSpace.height;\n        }\n        // Compute height and width of legend for each alignment\n        if (align === 'horizontal') {\n            totalHeight = Math.max(totalHeight, itemSpace.height);\n        } else {\n            totalHeight += itemSpace.height;\n            totalWidth = Math.max(totalWidth, itemSpace.width, titleWidth);\n        }\n        maxItemSpaces = {\n            width: Math.max(itemSpace.width, maxItemSpaces.width),\n            height: Math.max(itemSpace.height, maxItemSpaces.height)\n        };\n        itemSpaces.push(itemSpace);\n        iconSpaces.push(iconSpace);\n    });\n\n    itemSpaces.forEach((itemSpace, i) => {\n        if (align === 'horizontal') {\n            itemSpace.height = totalHeight;\n            iconSpaces[i].width = maxIconWidth;\n            if (textOrientation === LEFT || textOrientation === RIGHT) {\n                labelSpaces[i].height = totalHeight;\n                iconSpaces[i].height = totalHeight;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n            } else {\n                labelSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = maxIconWidth;\n                labelSpaces[i].width = maxIconWidth;\n            }\n            totalWidth = Math.max(totalWidth + itemSpaces[i].width, titleWidth);\n        } else {\n            itemSpace.width = Math.max(totalWidth, maxWidth);\n            if (textOrientation === TOP || textOrientation === BOTTOM) {\n                labelSpaces[i].width = totalWidth;\n                iconSpaces[i].width = totalWidth;\n                maxIconWidth = totalWidth;\n            } else {\n                iconSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n                labelSpaces[i].width = maxItemSpaces.width - maxIconWidth;\n                totalWidth = Math.max(totalWidth, itemSpace.width, titleWidth);\n            }\n        }\n    });\n    totalHeight += titleHeight + effPadding;\n\n    return { totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth };\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} scaleInfo\n * @param {*} domainInfo\n * @returns\n */\nexport const getDomainBounds = (type, scaleInfo, domainInfo) => {\n    const {\n        scaleFn,\n        scaleType,\n        scale\n    } = scaleInfo;\n    const {\n        domain,\n        domainBounds,\n        domainLeg,\n        steps\n    } = domainInfo;\n    const ele = domain[type === 'lower' ? 0 : domain.length - 1];\n    const step = steps[type === 'lower' ? 0 : steps.length - 1];\n\n    return {\n        [scaleType]: scaleType === 'size' ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n        value: domainBounds[type],\n        id: type === 'lower' ? 0 : domainLeg.length + 2,\n        range: [ele, step]\n    };\n};\n","import {\n    makeElement,\n    selectElement,\n    getUniqueId,\n    getSmartComputedStyle,\n    generateGetterSetters,\n    mergeRecursive\n} from 'muze-utils';\nimport { behaviouralActions } from '@chartshq/muze-firebolt';\nimport * as legendBehaviours from '../firebolt/behavioural';\n\nimport { LegendFireBolt } from '../firebolt/legend-firebolt';\nimport { actionBehaviourMap } from '../firebolt/action-behaviour-map';\nimport { physicalActions } from '../firebolt/physical';\nimport * as sideEffects from '../firebolt/side-effects';\nimport { behaviourEffectMap } from '../firebolt/behaviour-effect-map';\nimport { VALUE, PATH } from '../enums/constants';\nimport { PROPS } from './props';\nimport { DEFAULT_MEASUREMENT, DEFAULT_CONFIG, LEGEND_TITLE } from './defaults';\nimport { getItemMeasures, titleCreator, computeItemSpaces } from './legend-helper';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class SimpleLegend\n */\nexport default class SimpleLegend {\n\n    /**\n     * Creates an instance of Legend.\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @memberof Legend\n     */\n    constructor (dependencies) {\n        this._data = [];\n        this._metaData = [];\n        this._mount = null;\n        this._fieldName = null;\n        this._title = Object.assign({}, LEGEND_TITLE);\n        this._metaData = null;\n        this._labelManager = dependencies.labelManager;\n        this._cells = dependencies.cells;\n        this._id = getUniqueId();\n        this._measurement = Object.assign({}, this.constructor.defaultMeasurement());\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n\n        generateGetterSetters(this, PROPS);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'),\n            `${this.config().classPrefix}-legend-item-info`);\n\n        this._firebolt = new LegendFireBolt(this, {\n            behavioural: Object.assign({}, behaviouralActions, legendBehaviours),\n            physical: physicalActions,\n            physicalBehaviouralMap: actionBehaviourMap\n        }, sideEffects, behaviourEffectMap);\n    }\n\n    id () {\n        return this._id;\n    }\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new SimpleLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof SimpleLegend\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof SimpleLegend\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENT;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleLegend\n     */\n    firebolt (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof Legend\n     */\n    elemType () {\n        return PATH;\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof Legend\n     */\n    mount (...params) {\n        if (params.length) {\n            this._mount = params[0];\n            this.render();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     * @return\n     * @memberof Legend\n     */\n    getLabelSpaces () {\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n            `${this.config().classPrefix}-legend-item-info`));\n        return getItemMeasures(this.data(), VALUE, this._labelManager);\n    }\n\n    /**\n     * Sets the height and width of a legend based on provided max\n     * height and width and based on its contents\n     *\n     * @return {Instance} Current instance\n     * @memberof Legend\n     */\n    setLegendMeasures () {\n        const {\n           width,\n           height,\n           maxWidth,\n           maxHeight,\n           padding,\n           margin,\n           border\n       } = this.measurement();\n        const {\n            align\n        } = this.config();\n\n        // Effective padding, margin and padding\n        const effPadding = padding * 2;\n        const effBorder = border * 2;\n        const effMargin = margin * 2;\n\n        this.data(this.dataFromScale(this.scale()));\n        // Get space occupied by title\n        const titleSpace = this.getTitleSpace();\n        const titleHeight = titleSpace.height > 0 ? titleSpace.height * 1.25 : 0;\n        const titleWidth = titleSpace.width;\n\n        // Get space occupied by labels\n        const labelSpaces = this.getLabelSpaces(effPadding, align);\n\n        const {\n            totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth\n        } = computeItemSpaces(this.config(),\n        { effPadding, titleWidth, labelSpaces, titleHeight, maxWidth, maxHeight }, this.data());\n\n        this.measurement({\n            width: Math.max(totalWidth, width) + effMargin + effBorder,\n            height: Math.max(totalHeight, height) + effMargin + effBorder,\n            labelSpaces,\n            iconSpaces,\n            itemSpaces,\n            maxItemSpaces,\n            maxIconWidth,\n            titleSpaces: {\n                width: Math.min(maxWidth, this.measurement().width) - effMargin - effBorder,\n                height: titleHeight\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Returns the space occupied by the legend title\n     *\n     * @return {Object} Space occupied by title\n     * @memberof Legend\n     */\n    getTitleSpace () {\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n                                                 `${this.config().classPrefix}-legend-title`));\n        return this._labelManager.getOriSize(this.title().text ? this.title().text : '');\n    }\n\n    /**\n     * Creates the title for the legend\n     *\n     * @param {DOM} container Container made for the title\n     * @return {Selection} Title and it's node\n     * @memberof Legend\n     */\n    renderTitle (container) {\n        const { titleSpaces, border, padding } = this.measurement();\n        return titleCreator(container, this.title(), {\n            height: titleSpaces.height,\n            border,\n            padding\n        }, this.config());\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const {\n            classPrefix\n        } = this.config();\n        const {\n           maxWidth,\n           maxHeight,\n           width,\n           height,\n           margin,\n           border\n       } = this.measurement();\n        const legendContainer = makeElement(selectElement(this.mount()), 'div', [1], `${classPrefix}-legend-box`);\n\n        legendContainer.classed(`${classPrefix}-legend-box-${this._id}`, true);\n        legendContainer.style('float', 'left');\n        // set height and width\n        legendContainer.style('width', `${Math.min(maxWidth, width) - margin * 2}px`)\n                        .style('height', `${Math.min(maxHeight, height) - margin * 2}px`)\n                        .style('margin', `${margin}px`)\n                        .style('border-width', `${border}px`);\n        this.legendContainer(legendContainer.node());\n\n        // create title\n        this.renderTitle(legendContainer);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n  /**\n     *\n     *\n     * @param {*} data\n     * @returns\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        const type = this.metaData().getData().schema[0].type;\n        if (type === 'measure') {\n            return {\n                [fieldName]: data.range\n            };\n        }\n        return [[fieldName], [data.value]];\n    }\n}\n","import {\n    LEFT,\n    RIGHT,\n    START,\n    END,\n    TOP,\n    BOTTOM,\n    HORIZONTAL,\n    VERTICAL,\n    CENTER,\n    SHAPE,\n    VALUE\n} from '../enums/constants';\n\nconst legendOrientation = {\n    [HORIZONTAL]: {\n        datasets: data => ({\n            row: [1],\n            column: data\n        }),\n        itemContainerMeasures: (measurement) => {\n            const {\n                itemSpaces,\n                width\n            } = measurement;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                },\n                column: {\n                    width: (d, i) => `${itemSpaces[i].width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, height } = measurement;\n            return {\n                iconHeight: height,\n                iconWidth: maxItemSpaces.width,\n                stepPadding: {\n                    horizontal: true,\n                    vertical: false\n                }\n            };\n        }\n    },\n    [VERTICAL]: {\n        datasets: data => ({\n            row: data,\n            column: d => [d]\n        }),\n        itemContainerMeasures: (measurement, config) => {\n            const {\n                maxItemSpaces,\n                width\n            } = measurement;\n            const { padding } = config;\n            return {\n                row: {\n                    width: `${maxItemSpaces.width}px`,\n                    padding: `${padding}px`\n                },\n                column: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, width } = measurement;\n            return {\n                iconHeight: maxItemSpaces.height,\n                iconWidth: width,\n                stepPadding: {\n                    horizontal: false,\n                    vertical: true\n                }\n            };\n        }\n    }\n};\n\nexport const positionConfig = {\n    [LEFT]: legendOrientation[VERTICAL],\n    [RIGHT]: legendOrientation[VERTICAL],\n    [TOP]: legendOrientation[HORIZONTAL],\n    [BOTTOM]: legendOrientation[HORIZONTAL]\n};\n\nexport const alignmentMap = {\n    [LEFT]: END,\n    [RIGHT]: START,\n    [TOP]: CENTER,\n    [BOTTOM]: CENTER\n};\n\n// Reverses data for step legend\nexport const stepData = data => ({\n    [LEFT]: data.reverse(),\n    [RIGHT]: data.reverse(),\n    [TOP]: data,\n    [BOTTOM]: data\n});\n\n// Changes the item layout based on the position of the text\nexport const itemStack = {\n    [LEFT]: [VALUE, SHAPE],\n    [RIGHT]: [SHAPE, VALUE],\n    [TOP]: [VALUE, SHAPE],\n    [BOTTOM]: [SHAPE, VALUE]\n};\n","import { makeElement, selectElement, applyStyle } from 'muze-utils';\nimport { ICON_MAP } from './defaults';\nimport { positionConfig, alignmentMap, itemStack } from './position-config';\nimport {\n    WIDTH,\n    HEIGHT,\n    CENTER,\n    VALUE,\n    RECT,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} measureType\n * @param {*} stepColorCheck\n */\nexport const applyItemStyle = (item, measureType, stepColorCheck, context) => {\n    const {\n        padding,\n        labelSpaces,\n        iconSpaces,\n        maxIconWidth\n    } = context.measurement();\n    const diff = stepColorCheck ? -padding * 2 : 0;\n\n    if (item[0] === VALUE) {\n        return `${labelSpaces[item[6]][measureType]}px`;\n    }\n    return `${measureType === 'width' && !stepColorCheck ? maxIconWidth : iconSpaces[item[6]][measureType] - diff}px`;\n};\n\n /**\n * Returns the icon of the legend item\n *\n * @param {Object} datum Data property attached to the item\n * @param {number} width width of the item\n * @param {number} height height of the item\n * @return {Object|string} returns the path string or the string name of the icon\n * @memberof Legend\n */\nexport const getLegendIcon = (datum, width, height, defaultIcon) => {\n    const icon = ICON_MAP(datum[1]);\n\n    if (icon) {\n        return icon.size(datum[3] || Math.min(width, height) * Math.PI);\n    }\n    return ICON_MAP(datum[3] ? 'circle' : defaultIcon).size(datum[3] || Math.min(width, height) * Math.PI);\n};\n\n/**\n *\n *\n */\nexport const renderIcon = (icon, container, datum, context) => {\n    const {\n        classPrefix,\n        iconHeight,\n        maxIconWidth,\n        padding,\n        color\n    } = context;\n    const svg = makeElement(container, 'svg', f => [f], `${classPrefix}-legend-icon-svg`)\n    .attr(WIDTH, maxIconWidth)\n    .attr(HEIGHT, iconHeight)\n    .style(WIDTH, `${maxIconWidth}px`)\n    .style(HEIGHT, `${iconHeight}px`);\n\n    if (icon !== RECT) {\n        makeElement(svg, 'path', [datum[1]], `${classPrefix}-legend-icon`)\n                        .attr('d', icon)\n                        .attr('transform', `translate(${maxIconWidth / 2 - padding} ${iconHeight / 2})`)\n                        .attr('fill', datum[2] || color);\n    } else {\n        makeElement(svg, RECT, [datum[1]], `${classPrefix}-legend-icon`)\n                        .attr('x', 0)\n                        .attr('y', 0)\n                        .attr(WIDTH, maxIconWidth)\n                        .attr(HEIGHT, iconHeight)\n                        .attr('fill', datum[2] || color);\n    }\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} legendInstance\n * @param {*} align\n * @return\n */\nexport const getItemContainers = (container, data, legendInstance) => {\n    const measurement = legendInstance.measurement();\n    const config = legendInstance.config();\n    const {\n        itemSpaces\n    } = measurement;\n    const {\n        classPrefix,\n        position\n    } = config;\n    const positionObj = positionConfig[position];\n    const datasets = positionObj.datasets(data);\n    const measures = positionObj.itemContainerMeasures(measurement, config);\n\n    const rows = makeElement(container, 'div', datasets.row, `${classPrefix}-legend-row`);\n    rows.style(HEIGHT, (d, i) => `${itemSpaces[i].height}px`);\n    rows.style(WIDTH, measures.row.width);\n    rows.style('padding', measures.row.padding);\n\n    const columns = makeElement(rows, 'div', datasets.column, `${classPrefix}-legend-columns`);\n    columns.style(WIDTH, measures.column.width);\n    columns.style('padding', measures.column.padding);\n\n    return columns;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} classPrefix\n * @param {*} data\n * @returns\n * @memberof DiscreteLegend\n */\nexport const createLegendSkeleton = (context, container, classPrefix, data) => {\n    let gradWidth = 0;\n    let gradHeight = 0;\n    let maxGradHeight = 0;\n    let maxGradWidth = 0;\n    const measurement = context.measurement();\n    const {\n            margin,\n            border,\n            titleSpaces,\n            width,\n            height,\n            maxWidth,\n            maxHeight\n        } = measurement;\n\n    gradHeight = height - (titleSpaces.height + 2 * margin + 2 * border);\n    gradWidth = width - (margin * 2 + border * 2);\n\n    maxGradHeight = maxHeight - (titleSpaces.height + margin * 2 + border * 2);\n    maxGradWidth = maxWidth - (margin * 2 + border * 2);\n\n    let legendBody = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    legendBody.select(`.${classPrefix}-legend-overflow`).remove();\n        // Create a div with scroll when overflow\n    if (maxGradWidth && maxGradWidth < gradWidth) {\n        legendBody = legendBody.style(WIDTH, `${maxGradWidth}px`).style('overflow-x', 'scroll');\n        legendBody = makeElement(legendBody, 'div', [1], `${classPrefix}-legend-overflow`);\n    }\n        // Create a div with scroll when overflow\n    if (maxGradHeight && maxGradHeight < gradHeight) {\n        legendBody.style(HEIGHT, `${maxGradHeight}px`).style('overflow-y', 'scroll');\n        legendBody = makeElement(legendBody, 'div', [1], `${classPrefix}-legend-overflow`);\n    }\n\n    legendBody.style(WIDTH, `${gradWidth}px`);\n    legendBody.style(HEIGHT, `${gradHeight}px`);\n\n    const legendItem = getItemContainers(legendBody, data, context);\n    return { legendItem };\n};\n\n/**\n * Creates legend item based on alignment and text orientation\n *\n * @param {Selection} container Point where items are to be mounted\n * @return {Instance} Current instance\n * @memberof Legend\n */\nexport const createItemSkeleton = (context, container) => {\n    const {\n        classPrefix,\n        item\n    } = context.config();\n    const textOrientation = item.text.orientation;\n\n    const stack = itemStack[textOrientation];\n    const itemSkeleton = makeElement(container, 'div', (d, i) => stack.map(e => [e, d[e], d.color, d.size,\n        d.value, context.fieldName(), i]), `${classPrefix}-legend-item-info`);\n\n    const alignClass = alignmentMap[textOrientation];\n\n    itemSkeleton.classed(alignClass, true);\n    return { itemSkeleton };\n};\n\n/**\n * Renders the items in the legend i.e, icon and text\n *\n * @param {DOM} container Point where item is to be mounted\n * @memberof Legend\n */\nexport const renderDiscreteItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n           item,\n           classPrefix\n    } = context.config();\n    const {\n        maxIconWidth,\n        padding\n    } = context.measurement();\n    const {\n            width: iconWidth,\n            height: iconHeight,\n            color,\n            type,\n            className\n        } = item.icon;\n\n    const textOrientation = item.text.orientation;\n\n    labelManager.useEllipsesOnOverflow(true);\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, false, context),\n        height: d => applyItemStyle(d, HEIGHT, false, context),\n        'text-align': CENTER,\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(d[1])\n                            .style(`padding-${textOrientation === RIGHT ? LEFT : RIGHT}`, '0px');\n        } else {\n            const icon = getLegendIcon(d, iconWidth, iconHeight, type);\n            selectElement(this).classed(`${classPrefix}-${className}`, true);\n            selectElement(this).classed(`${classPrefix}-${className}-${i}`, true);\n            renderIcon(icon, selectElement(this), d, {\n                classPrefix,\n                iconWidth: 2 * Math.sqrt(d[3] / Math.PI) || iconWidth,\n                iconHeight,\n                maxIconWidth,\n                padding,\n                color\n            });\n        }\n    });\n};\n\n/**\n* Renders the items in the legend i.e, icon and text\n*\n* @param {DOM} container Point where item is to be mounted\n* @memberof Legend\n*/\nexport const renderStepItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n      item,\n      position,\n      classPrefix\n   } = context.config();\n    const {\n      maxItemSpaces,\n      maxIconWidth,\n      padding\n   } = context.measurement();\n    const {\n       width,\n       height,\n       color\n   } = item.icon;\n\n    labelManager.useEllipsesOnOverflow(true);\n    const { iconHeight, iconWidth, stepPadding } = positionConfig[position].getStepSpacesInfo({\n        maxItemSpaces, height, width\n    });\n\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, stepPadding.horizontal, context),\n        height: d => applyItemStyle(d, HEIGHT, stepPadding.vertical, context),\n        'text-align': 'center',\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    container.each(function (d) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(d[1]);\n        } else {\n            renderIcon(RECT, selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                iconHeight,\n                maxIconWidth,\n                color\n            });\n        }\n    });\n};\n","import SimpleLegend from './simple-legend';\nimport { DISCRETE, LEFT, SIZE } from '../enums/constants';\nimport { getScaleInfo } from './legend-helper';\nimport { createLegendSkeleton, createItemSkeleton, renderDiscreteItem } from './renderer';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class DiscreteLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new DiscreteLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof DiscreteLegend\n     */\n    static type () {\n        return DISCRETE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     * @returns\n     * @memberof DiscreteLegend\n     */\n    dataFromScale (scale) {\n        const { scaleType, domain, scaleFn } = getScaleInfo(scale);\n        let domainForLegend = [...new Set(domain)];\n        const type = this.metaData().getData().schema[0].type;\n\n        domainForLegend = domainForLegend.map((ele, i) => {\n            let value = 0;\n            let range = 0;\n            if (type === 'measure') {\n                value = (+domainForLegend[i]).toFixed(0);\n                const nextVal = domainForLegend[i + 1] ? +domainForLegend[i + 1] : +value;\n                range = [value, nextVal.toFixed(0)];\n            } else {\n                value = domainForLegend[i];\n                range = [domainForLegend[i]];\n            }\n            return {\n                [scaleType]: scale[scaleFn](ele),\n                value,\n                id: i,\n                range\n            };\n        }).filter(d => d.value !== null);\n\n        domainForLegend = scaleType === SIZE ? domainForLegend.sort((a, b) => a[scaleType] - b[scaleType])\n            : domainForLegend;\n        return domainForLegend;\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const data = this.data();\n        const { classPrefix } = this.config();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n        renderDiscreteItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n}\n","import { makeElement, applyStyle } from 'muze-utils';\nimport { ContinousAxis } from '@chartshq/muze-axis';\nimport { BOTTOM, RIGHT } from '../enums/constants';\nimport { ALIGN } from './defaults';\nimport '../styles.scss';\n\n/**\n *\n *\n * @param {*} data\n * @returns\n */\nexport const getGradientDomain = (data) => {\n    if (typeof data[0].value === 'number') {\n        return data.reduce((accumulator, currentValue) =>\n            [Math.min(currentValue.value, accumulator[0]), Math.max(currentValue.value, accumulator[1])],\n                [Number.MAX_VALUE, Number.MIN_VALUE]);\n    }\n    return data.map(e => e.value);\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} domain\n * @returns\n */\nexport const makeLinearGradient = (container, data, domain) => {\n    const defs = makeElement(container, 'defs', [1]);\n    const linearGradient = makeElement(defs, 'linearGradient', [1])\n                .attr('id', 'linear-gradient')\n                .attr('x1', '0%')\n                .attr('y2', '0%');\n    makeElement(linearGradient, 'stop', data, 'stop-gradient')\n                    .attr('offset', d => `${(d.value - domain[0]) * 100 / (domain[1] - domain[0])}%`)\n                    .attr('stop-color', d => d.color);\n    return linearGradient;\n};\n\n/**\n * Creates an axis cell with a linear axis for computing space and\n * creating gradient legend\n *\n * @return {AxisCell} Instance of Axis Cell for the gradient axis\n * @memberof Legend\n */\nexport const createAxis = (context) => {\n    const data = context.data();\n    const { align } = context.config();\n    const AxisCell = context._cells.AxisCell;\n    const newAxis = new ContinousAxis({\n        id: `legend-${context._id}`,\n        orientation: align === ALIGN.VERTICAL ? RIGHT : BOTTOM,\n        style: context._computedStyle,\n        nice: false,\n        showAxisName: false,\n        tickValues: data.map(d => d.value),\n        fixedBaseline: false\n    }, { labelManager: context._labelManager });\n\n    newAxis.domain(getGradientDomain(data));\n    newAxis.range([1, 1]);\n    return new AxisCell().source(newAxis).config({\n        margin: { left: 0, bottom: 0, top: 0, right: 0 }\n    });\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} classPrefix\n * @returns\n * @memberof GradientLegend\n */\nconst createLegendSkeleton = (container, classPrefix, data) => {\n    const domain = getGradientDomain(data);\n    const legendContainer = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    const legendGradSvg = makeElement(legendContainer, 'svg', [1], `${classPrefix}-gradient`);\n    const legendGradCont = makeElement(legendGradSvg, 'g', [1], `${classPrefix}-gradient-group`);\n    const linearGradient = makeLinearGradient(legendGradSvg, data, domain);\n    const legendRect = makeElement(legendGradCont, 'rect', [1], `${classPrefix}-gradient-rect`);\n\n    return {\n        legendContainer,\n        legendGradCont,\n        legendGradSvg,\n        linearGradient,\n        legendRect\n    };\n};\n\n/**\n * Renders the axis for the gradient\n *\n * @param {Selection} container Point where axis is to be mounted\n * @param {number} height Height for axis\n * @param {number} width Width for axis\n * @memberof Legend\n */\nexport const renderAxis = (context, container, height, width) => {\n    const axis = context.axis();\n\n    axis.setAvailableSpace(width, height);\n    axis.render(container.node());\n};\n\n/**\n * Renders gradient legends\n *\n * @param {Selection} container Point where the legend is to be appended\n * @memberof GradientLegend\n */\nexport const renderGradient = (context, container) => {\n    let gradHeight = 0;\n    let gradWidth = 0;\n    const {\n        align,\n        classPrefix,\n        item\n    } = context.config();\n    const data = context.data();\n    // Create the skeleton for the legend\n    const {\n        legendContainer,\n        legendGradSvg,\n        legendGradCont,\n        linearGradient,\n        legendRect\n    } = createLegendSkeleton(container, classPrefix, data);\n    const labelDim = context.axis().source().getAxisDimensions().tickLabelDim;\n    const {\n        padding,\n        margin,\n        border,\n        titleSpaces,\n        maxHeight,\n        maxWidth,\n        height,\n        width\n    } = context.measurement();\n    const gradientDimensions = {};\n\n    gradHeight = Math.floor(height - (titleSpaces.height + 2 * margin + 2 * border));\n    gradWidth = Math.floor(width - (margin * 2 + border * 2));\n\n    if (align === ALIGN.HORIZONTAL) {\n        gradientDimensions.height = item.icon.height;\n        gradientDimensions.width = gradWidth - 2 * padding - labelDim.width / 2;\n        linearGradient.attr('x2', '100%').attr('y1', '0%');\n        legendGradCont.attr('transform', `translate( ${labelDim.width / 2} 0)`);\n        renderAxis(context, legendContainer, gradHeight - item.icon.height - padding, gradWidth - 2 * padding - 1);\n        legendContainer.classed(`${classPrefix}-overflow-x`, width > maxWidth);\n\n        applyStyle(legendContainer, {\n            height: `${height}px`,\n            width: `${Math.min(width, maxWidth)}px`,\n            padding: `${padding}px`\n        });\n    } else {\n        gradientDimensions.height = gradHeight - 2 * padding - labelDim.height / 2;\n        gradientDimensions.width = item.icon.width;\n        linearGradient.attr('x2', '0%').attr('y1', '100%');\n        legendGradCont.attr('transform', `translate(0 ${labelDim.height / 2})`);\n        renderAxis(context, legendContainer, gradHeight - 2 * padding - 1, gradWidth - item.icon.width - padding * 2);\n        legendContainer.classed(`${classPrefix}-overflow-y`, height > maxHeight);\n        applyStyle(legendContainer, {\n            height: `${Math.min(height, maxHeight)}px`,\n            width: `${width}px`,\n            padding: `${padding}px`\n        });\n    }\n\n    // Apply Styles to the legend plot area\n    applyStyle(legendGradSvg, {\n        height: `${gradientDimensions.height}px`,\n        width: `${gradientDimensions.width}px`\n    });\n\n        // Apply styles to the legend rect\n    applyStyle(legendRect, {\n        fill: 'url(#linear-gradient)'\n    });\n    legendRect.attr('height', gradientDimensions.height);\n    legendRect.attr('width', gradientDimensions.width);\n\n    context.measurement({\n        gradientDimensions\n    });\n    context._legendGradientSvg = legendGradSvg;\n    return context;\n};\n","import SimpleLegend from './simple-legend';\nimport { getScaleInfo, getInterpolatedData } from './legend-helper';\nimport { GRADIENT, LEFT, SIZE } from '../enums/constants';\nimport { renderGradient, createAxis } from './gradient-helper';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class GradientLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new GradientLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof GradientLegend\n     */\n    static type () {\n        return GRADIENT;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axis\n     * @returns\n     * @memberof GradientLegend\n     */\n    axis (...axis) {\n        if (axis.length) {\n            this._axis = axis[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     * @returns\n     * @memberof GradientLegend\n     */\n    dataFromScale (scale) {\n        let domainForLegend = [];\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainForLegend[0] = domain[0];\n            }\n            domainForLegend = [...domainForLegend, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainForLegend.push(domain[1]);\n            }\n        } else {\n            domainForLegend = getInterpolatedData(domain, steps);\n        }\n        domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n        return domainForLegend.map((ele, i) => {\n            const value = domainForLegend[i];\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor()\n                    : scale[scaleFn](Math.floor(ele)),\n                value: +value.toFixed(2),\n                id: i\n            };\n        }).filter(d => d.value !== null);\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     * @return\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        const axis = createAxis(this);\n        const axisSpace = axis.getLogicalSpace();\n        const space = { width: axisSpace.width - effPadding, height: axisSpace.height - effPadding };\n        const axisDomainLength = axis.source().domain().length;\n        const labelSpaces = new Array(axisDomainLength).fill(space);\n\n        this.axis(axis);\n        return labelSpaces;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GradientLegend\n     */\n    getDrawingContext () {\n        return {\n            svgContainer: this._legendGradientSvg\n        };\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        renderGradient(this, legendContainer);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n /**\n     *\n     *\n     * @param {*} data\n     * @returns\n     * @memberof SimpleLegend\n     */\n    getCriteriaFromData (data) {\n        return [[this.fieldName()], [data.value]];\n    }\n}\n","import SimpleLegend from './simple-legend';\nimport {\n    getScaleInfo,\n    getInterpolatedData,\n    getDomainBounds\n} from './legend-helper';\nimport {\n    createLegendSkeleton,\n    createItemSkeleton,\n    renderStepItem\n} from './renderer';\nimport { STEP, RECT, LEFT, SIZE, UPPER, LOWER } from '../enums/constants';\nimport { stepData } from './position-config';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class StepLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new StepLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof StepLegend\n     */\n    static type () {\n        return STEP;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     * @returns\n     * @memberof StepLegend\n     */\n    dataFromScale (scale) {\n        let domainLeg = [];\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        const { formatter } = this.config();\n        const domainBounds = {\n            lower: null, upper: null\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainBounds.lower = [`${formatter.bounds.lower} ${steps[0]}`];\n            }\n            domainLeg = [...domainLeg, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainBounds.upper = [`${formatter.bounds.upper} ${steps[steps.length - 1]}`];\n            }\n        } else {\n            domainLeg = getInterpolatedData(domain, steps);\n        }\n\n        domainLeg = [...new Set(domainLeg)].sort((a, b) => a - b);\n        domainLeg = domainLeg.map((ele, i) => {\n            let value = null;\n            if (i < domainLeg.length - 1) {\n                value = `${(ele.toFixed(1))} - ${(+domainLeg[i + 1].toFixed(1))}`;\n            }\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n                value,\n                id: i + 1,\n                range: [ele, domainLeg[i + 1]]\n            };\n        }).filter(d => d.value !== null);\n\n        if (domainBounds.lower) {\n            const lowerBounds = getDomainBounds(LOWER, { scale, scaleFn, scaleType },\n                { domain, steps, domainBounds });\n            domainLeg = [lowerBounds, ...domainLeg];\n        }\n        if (domainBounds.upper) {\n            const upperBounds = getDomainBounds(UPPER, { scale, scaleFn, scaleType },\n            { domain, steps, domainBounds, domainLeg });\n            domainLeg = [...domainLeg, upperBounds];\n        }\n        return domainLeg;\n    }\n\n     /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     * @return\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding, align) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        return super.getLabelSpaces(effPadding, align);\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof Legend\n     */\n    elemType () {\n        return RECT;\n    }\n\n     /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const { classPrefix, position } = this.config();\n        const data = stepData(this.data())[position];\n\n        const legendContainer = super.render(this.mount());\n\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n\n        renderStepItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @returns\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        return {\n            [fieldName]: data.range\n        };\n    }\n}\n","import { GradientLegend, DiscreteLegend, StepLegend } from '@chartshq/muze-legend';\n\n/**\n * Contants to be used as attr\n */\nexport const ROWS = 'rows';\nexport const COLUMNS = 'columns';\nexport const DATA = 'data';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\nexport const DETAIL = 'detail';\nexport const LAYERS = 'layers';\nexport const TRANSFORM = 'transform';\nexport const INITIALIZED = 'isInitialized';\nexport const SOURCE = 'source';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const PADDING = 'padding';\nexport const BORDER = 'border';\nexport const CONFIG = 'config';\nexport const MOUNT = 'mount';\nexport const CANVAS_UPDATED = 'canvasUpdated';\nexport const CLASSPREFIX = 'classPrefix';\nexport const POLICIES = '_policies';\nexport const LEGEND = 'legend';\nexport const TITLE = 'title';\nexport const SUB_TITLE = 'subtitle';\nexport const RESOLVE = 'resolve';\nexport const DISCRETE = 'discrete';\nexport const STEP_COLOR = 'step-color';\nexport const GRADIENT = 'gradient';\nexport const LINEAR = 'linear';\nexport const ORDINAL = 'ordinal';\n\nexport const TITLE_TEMPLATE_NOT_ALLOWED_TAGS = [\n    'script',\n    'style'\n];\n\nexport const LEGEND_TYPE_MAP = {\n    [`${ORDINAL}-${true}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${COLOR}`]: StepLegend,\n    [`${LINEAR}-${false}-${COLOR}`]: GradientLegend\n};\n\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const GROUP = 'group';\nexport const LAYOUT = 'layout';\nexport const RETINAL = 'retinal';\nexport const DIMENSION = 'dimension';\nexport const MEASURE = 'measure';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\n\n","import { ComposedVars, SimpleVariable } from '@chartshq/visual-group';\nimport { TITLE_TEMPLATE_NOT_ALLOWED_TAGS } from './constants';\n\n/**\n * This method creates a new composed variable instance from multiple variables.\n * @param {Array} vars Variable names\n * @return {ComposedVars} Instance of composed variable\n */\nexport const share = (...vars) => new ComposedVars(...vars.map(variable => new SimpleVariable(variable)));\n\n/**\n *\n *\n * @param {*} node\n * @returns\n */\nfunction treeShakeNode (node) {\n    if (node.nodeType !== Node.ELEMENT_NODE) { return; }\n\n    if (TITLE_TEMPLATE_NOT_ALLOWED_TAGS.indexOf(node.tagName.toLowerCase()) !== -1) {\n        node.parentNode.removeChild(node);\n    } else {\n        for (const childNode of node.childNodes) {\n            treeShakeNode(childNode);\n        }\n    }\n}\n\n/**\n * A string template tagged function which sanitizes input html formatted\n * string according to the allowed html tags.\n *\n * @param {Array.<string>} strings - The string parts of the template.\n * @param {Array} exps - The list of evaluated expression values.\n * @return {Function} Returns a function which returns the sanitized html string.\n */\nexport function html (strings, ...exps) {\n    let htmlCode = '';\n    const expLn = exps.length;\n    let i = 0;\n\n    for (; i < expLn; ++i) {\n        htmlCode += strings[i] + exps[i];\n    }\n    htmlCode += strings[i];\n\n    const frag = document.createDocumentFragment();\n    const wrapper = document.createElement('div');\n\n    frag.appendChild(wrapper);\n    wrapper.innerHTML = htmlCode;\n\n    treeShakeNode(wrapper);\n    const { innerHTML } = wrapper;\n\n    return () => innerHTML;\n}\n","class ActionModel {\n    constructor () {\n        this._registrableComponents = [];\n    }\n\n    registerPhysicalActions (action) {\n        const canvases = this._registrableComponents;\n\n        canvases.forEach((canvas) => {\n            canvas.once('canvas.updated').then((args) => {\n                const matrix = args.client.composition().visualGroup.matrixInstance().value;\n                matrix.each(cell => cell.valueOf().firebolt().registerPhysicalActions(action));\n            });\n        });\n        return this;\n    }\n\n    registerBehaviouralActions (...actions) {\n        const canvases = this._registrableComponents;\n\n        canvases.forEach((canvas) => {\n            canvas.once('canvas.updated').then(() => {\n                const matrix = canvas.composition().visualGroup.matrixInstance().value;\n                matrix.each(cell => cell.valueOf().firebolt().registerBehaviouralActions(...actions));\n            });\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} map\n     * @returns\n     * @memberof ActionModel\n     */\n    registerPhysicalBehaviouralMap (map) {\n        const canvases = this._registrableComponents;\n\n        canvases.forEach((canvas) => {\n            canvas.once('canvas.updated').then((args) => {\n                const matrix = args.client.composition().visualGroup.matrixInstance().value;\n                matrix.each(cell => cell.valueOf().firebolt().registerPhysicalBehaviouralMap(map));\n            });\n        });\n        return this;\n    }\n\n    mapSideEffects (map) {\n        const canvases = this._registrableComponents;\n\n        canvases.forEach((canvas) => {\n            canvas.once('canvas.updated').then(() => {\n                const matrix = canvas.composition().visualGroup.matrixInstance().value;\n                matrix.each(cell => cell.valueOf().firebolt().mapSideEffects(map));\n            });\n        });\n        return this;\n    }\n\n    for (...components) {\n        this._registrableComponents = components;\n        return this;\n    }\n\n    registerSideEffects (...sideEffects) {\n        const registrableComponents = this._registrableComponents;\n\n        registrableComponents.forEach((canvas) => {\n            canvas.once('canvas.updated').then((args) => {\n                const matrix = args.client.composition().visualGroup.matrixInstance().value;\n                matrix.each(cell => cell.valueOf().firebolt().registerSideEffects(sideEffects));\n            });\n        });\n\n        return this;\n    }\n\n    dissociateBehaviour (...maps) {\n        const registrableComponents = this._registrableComponents;\n\n        registrableComponents.forEach((canvas) => {\n            canvas.once('canvas.updated').then((args) => {\n                const matrix = args.client.composition().visualGroup.matrixInstance().value;\n                matrix.each((cell) => {\n                    maps.forEach(val => cell.valueOf().firebolt().dissociateBehaviour(val[0], val[1]));\n                });\n            });\n        });\n\n        return this;\n    }\n\n    dissociateSideEffect (...maps) {\n        const registrableComponents = this._registrableComponents;\n\n        registrableComponents.forEach((canvas) => {\n            canvas.once('canvas.updated').then((args) => {\n                const matrix = args.client.composition().visualGroup.matrixInstance().value;\n                matrix.each((cell) => {\n                    maps.forEach(val => cell.valueOf().firebolt().dissociateBehaviour(val[0], val[1]));\n                });\n            });\n        });\n\n        return this;\n    }\n}\n\nexport const actionModel = (() => new ActionModel())();\n","export const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    interaction: {\n        sideEffect: 'individual'\n    },\n    legend: {\n        position: 'right',\n        color: {\n            show: true,\n            padding: 2,\n            margin: 2,\n            border: 1,\n            height: 30,\n            width: 30\n        },\n        shape: {\n            show: true,\n            padding: 2,\n            margin: 2,\n            border: 1,\n            height: 30,\n            width: 30\n        },\n        size: {\n            show: true,\n            padding: 2,\n            margin: 2,\n            border: 1,\n            height: 30,\n            width: 30\n        }\n    },\n    showHeaders: false,\n    minWidth: 300,\n    minHeight: 200,\n    border: {\n        style: 'solid',\n        color: '#d6d6d6',\n        width: 2,\n        collapse: true,\n        spacing: 0\n    },\n    autoGroupBy: {\n        disabled: false\n    }\n};\n","/**\n * @module\n * This is the global options semantics based on which setters getters are created and reactivity is initiated.\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n */\n\nimport { intSanitizer, mergeRecursive } from 'muze-utils';\nimport { DEFAULT_CONFIG } from './defaults';\n\nexport default {\n    data: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'DataModel'\n        }\n    },\n    width: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    height: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitWidth: {\n        value: 150,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitHeight: {\n        value: 150,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    config: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config, oldConfig) => {\n                const oldConf = mergeRecursive({}, oldConfig);\n                const defConfig = mergeRecursive(oldConf, DEFAULT_CONFIG);\n                const newConf = mergeRecursive(defConfig, config);\n                return newConf;\n            }\n\n        }\n    }\n};\n","/**\n * This file exports constants that will be used to\n * create the state store of the table layout.\n */\n/**\n * The index of top, bottom and center in the matrix\n */\nexport const VIEW_INDEX = {\n    top: 0,\n    center: 1,\n    bottom: 2\n};\n\n/**\n * The width of the grid suppied by the user.\n */\nexport const GRID_WIDTH = 'width';\n\n/**\n * The height of the grid supplied by the user.\n */\nexport const GRID_HEIGHT = 'height';\n\n/**\n  * The border for the grid\n  */\nexport const BORDER = 'border';\n\n /**\n  *  The index of the first visible row in view matrix.\n  */\nexport const ROW_POINTER = 'rowPointer';\n\n/**\n * The index of the first visible column in the view matrix.\n */\nexport const COLUMN_POINTER = 'columnPointer';\n\n/**\n * Flag to specify whether row sizes should be equal.\n */\nexport const ROW_SIZE_IS_EQUAL = 'isRowSizeEqual';\n\n/**\n * Flag to specify whether column sizes are equal.\n */\nexport const COLUMN_SIZE_IS_EQUAL = 'isColumnSizeEqual';\n\n/**\n * Field to store an array an of the widths of visible columns.\n * @computed\n */\nexport const COLUMN_WIDTHS = 'visibleColumnWidths';\n\n/**\n * Field to store an array of heights of visible rows.\n * @computed\n */\nexport const ROW_HEIGHTS = 'visibleRowHeights';\n\n/**\n * Field to store the width of the left matrix.\n * @computed\n */\nexport const LEFT_MATRIX_WIDTH = 'leftMatrixWidth';\n\n/**\n * Field to store the width of the right matrix.\n * @computed\n */\nexport const RIGHT_MATRIX_WIDTH = 'rightMatrixWidth';\n\n/**\n * Field to store the height of the top matrix.\n * @computed\n */\nexport const TOP_MATRIX_HEIGHT = 'topMatrixHeight';\n\n/**\n * Field to store the height of the bottom matrix.\n * @computed\n */\nexport const BOTTOM_MATRIX_HEIGHT = 'bottomMatrixHeight';\n\n/**\n * The dom element to render the layout inside.\n */\nexport const MOUNT_POINT = 'mount';\n\n/**\n * The id attribute of the left table element.\n */\nexport const LEFT_TABLE_ID = 'grid-left';\n\n/**\n * The id attribute of the right table element.\n */\nexport const RIGHT_TABLE_ID = 'grid-right';\n\n/**\n * The id attribute of the top table.\n */\nexport const TOP_TABLE_ID = 'grid-top';\n\n/**\n * The id attribute of the bottom table.\n */\nexport const BOTTOM_TABLE_ID = 'grid-bottom';\n\n/**\n * The id attribute of the center table.\n */\nexport const CENTER_TABLE_ID = 'grid-center';\n\n/**\n * The id attribute of the top div.\n */\nexport const TOP_DIV_ID = 'muze-div-top';\n\n/**\n * The id attribute of the bottom div.\n */\nexport const BOTTOM_DIV_ID = 'muze-div-bottom';\n\n/**\n * The id attribute of the center div.\n */\nexport const CENTER_DIV_ID = 'muze-div-center';\n\n/**\n * Field that indicates if the row configuration has changed\n */\nexport const HAVE_ROWS_CHANGED = 'haveRowsChanged';\n\n/**\n * Field that indicates if the column configuration has changed\n */\nexport const HAVE_COLUMNS_CHANGED = 'haveColumnsChanged';\n\n/**\n * Field that indicates if the values configuration for the center matrix has changed\n */\nexport const HAVE_VALUES_CHANGED = 'haveValuesChanged';\n\n/**\n * Field that indicates the width of row matrix\n */\nexport const ROW_MATRIX_WIDTH = 'rowMatrixWidth';\n\n/**\n * Field that indicates the height of row matrix\n */\nexport const COLUMN_MATRIX_HEIGHT = 'columnMatrixHeight';\n\n/**\n * Field that indicates the unit width of layout\n */\nexport const UNIT_WIDTH = 'unitWidth';\n\n/**\n * Field that indicates the unit height of layout\n */\nexport const UNIT_HEIGHT = 'unitHeight';\n\n/**\n * Field that indicates the style object\n */\nexport const STYLE = 'style';\n\n/**\n * Field that indicates the color configuration\n */\nexport const COLOR = 'color';\n\n/**\n * Field that indicates width\n */\nexport const WIDTH = 'width';\n\n/**\n * Field that indicates collpase property for border\n */\nexport const COLLAPSE = 'collapse';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SPACING = 'spacing';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const DISTRIBUTION = 'distribution';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const GUTTERSPACE = 'gutterSpace';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const BREAK_PAGE = 'breakPage';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_ROW_BORDERS = 'showRowBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_COL_BORDERS = 'showColBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_VALUE_BORDERS = 'showValueBorders';\n\nexport const HEIGHT = 'height';\nexport const COLUMN = 'column';\nexport const ROW = 'row';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const CENTER = 'center';\nexport const CLICK = 'click';\nexport const ROW_LEFT = 'rowLeft';\nexport const ROW_RIGHT = 'rowRight';\nexport const COLUMN_BOTTOM = 'colBottom';\nexport const COLUMN_TOP = 'colTop';\nexport const AUTO = 'auto';\nexport const ROW_SPAN = 'rowSpan';\nexport const COL_SPAN = 'colSpan';\nexport const ROW_ROOT = 'rowRoot';\nexport const COLUMN_ROOT = 'columnRoot';\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary';\n","import { sanitizeIP, mergeRecursive } from 'muze-utils';\nimport { TOP, CENTER, BOTTOM } from '../enums/constants';\n\n/*\n * This is the abstract implementation of the root layout. This takes care of common work which all the layouts\n * has to handle. The common work includes sanitizaion of inputs, update, rerender, dispose etc. This class can't be\n * used directly (as ofcourse this is an abstract implementaiton), the class which is implementing it has to implement\n * the necessary methods and gives its on visual.\n */\n\n/**\n * This class is used to create a generic layout. It can be extended to create layouts\n * of different types\n * @class GenericLayout\n */\nexport default class GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config configuration to be given for the layout\n     * @param {Object} dependencies external dependencies.\n     * @memberof GenericLayout\n     *\n     * measurement : {\n     *      width : number => width of the container\n     *      height : number => height of the container\n     *      unitHeight : number => height of unit of the cells\n     *      unitWidth : number => width of unit of the cells\n     * }\n     *\n     */\n    constructor (mountPoint, measurement, config, dependencies) {\n        this._config = {};\n        this._measurement = {};\n        this._matrices = [];\n        // External dependencies to be included for the layout. This includes the ext global dependencies like\n        // smartlabel which has one single implementation of throughout the page or per isntance\n        this._dependencies = dependencies;\n\n        this.measurement(measurement);\n        this.mountPoint(mountPoint);\n        this.config(config);\n    }\n\n    /**\n     * Returns an object which is used to recreate the layout.\n     * @return {Object} the serialized components\n     */\n    serialize () {\n        return {\n            measurement: this.measurement(),\n            config: this.config(),\n            matrices: this.matrices()\n        };\n    }\n\n     /**\n     * Sets/Gets the config for the layout\n     * @param {Object} config configuration for the layout\n     * @return {Layout|Object} Gets the Config/ Returns this instance when set\n     */\n    config (config) {\n        if (config) {\n            this._config = mergeRecursive(this._config || {}, config);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Sets/Gets the measurement for the layout\n     * @param {Object} measurement measurement for the layout\n     * @return {Layout|Object} Gets the measurement/ Returns this instance when set\n     */\n    measurement (measurement) {\n        if (measurement) {\n            this._measurement = mergeRecursive(this._measurement || {}, measurement);\n\n            return this;\n        }\n        return this._measurement;\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     * @param {Object} matrices matrices for the layout\n     * @return {Layout|Object} Gets the matrices/ Returns this instance when set\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = sanitizeIP.typeObj([TOP, CENTER, BOTTOM], matrices);\n\n            return this;\n        }\n        return this._matrices;\n    }\n\n    /**\n     * Sets/Gets the matrix for row\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    rowMatrix (matrix) {\n        if (matrix) {\n            this._rowMatrix = matrix;\n            return this;\n        }\n        return this._rowMatrix;\n    }\n\n    /**\n     * Sets/Gets the matrix for columns\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    columnMatrix (matrix) {\n        if (matrix) {\n            this._columnMatrix = matrix;\n            return this;\n        }\n        return this._columnMatrix;\n    }\n\n   /**\n     * Sets/Gets the matrix for value\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    centerMatrix (matrix) {\n        if (matrix) {\n            this._centerMatrix = matrix;\n            return this;\n        }\n        return this._centerMatrix;\n    }\n\n    /**\n     * Sets/Gets the mountPoint for the layout\n     * @param {Object} mountPoint mountPoint for the layout\n     * @return {Layout|Object} Gets the mountPoint/ Returns this instance when set\n     */\n    mountPoint (mountPoint) {\n        if (mountPoint) {\n            this._mountPoint = mountPoint;\n\n            return this;\n        }\n        return this._mountPoint;\n    }\n}\n","import * as FieldNames from '../enums/constants';\n\n/**\n * Default configuration of the layout\n * @return {Object} returns the default configuration\n */\nexport const DEFAULT_CONFIGURATION = {\n    [FieldNames.BORDER]: {\n        [FieldNames.STYLE]: 'solid',\n        [FieldNames.COLOR]: '#d6d6d6',\n        [FieldNames.WIDTH]: 2,\n        [FieldNames.COLLAPSE]: true,\n        [FieldNames.SPACING]: 0\n    },\n    [FieldNames.GUTTERSPACE]: { rows: [], columns: [] },\n    [FieldNames.DISTRIBUTION]: { rows: [], columns: [] },\n    [FieldNames.BREAK_PAGE]: { rows: [], columns: [] },\n    [FieldNames.ROW_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_POINTER]: 0,\n    [FieldNames.ROW_POINTER]: 0\n};\n\n/**\n * Default measurements for the layout\n * @return {Object} returns the default measurements\n */\nexport const DEFAULT_MEASUREMENTS = {\n    [FieldNames.GRID_WIDTH]: 100,\n    [FieldNames.GRID_HEIGHT]: 100,\n    [FieldNames.UNIT_WIDTH]: 100,\n    [FieldNames.UNIT_HEIGHT]: 100\n};\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n","import { ROW_LEFT, ROW_RIGHT, COLUMN_BOTTOM, COLUMN_TOP, TOP, BOTTOM } from '../enums/constants';\n/**\n * This callback is used to filter the array of\n * placeholder cells and filter out cells which have\n * appeared in a previous row.\n *\n * @param {Placeholder} colData Instance of placeholder.\n * @param {number} colIdx The index of the placeholder in array.\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {number} rIdx The index of the row of the placeholder in array.\n * @param {string} type The type of matrix it is (rowLeft, rowRight, colTop, colBottom)\n * @return {boolean} flag to keep/remove element.\n */\nconst columnFilter = (colData, colIdx, matrix, rIdx, type) => {\n    const previousRow = matrix[rIdx - 1];\n    const currentRow = matrix[rIdx];\n\n    // Row Span for left\n    if (type === ROW_LEFT) {\n        if (!previousRow) {\n            return colData;\n        }\n        let i = 0;\n        for (;i <= colIdx; i += 1) {\n            if (currentRow[i].valueOf() !== previousRow[i].valueOf()) {\n                break;\n            }\n        }\n        return (i - 1 === colIdx) ? null : colData;\n    } else if (type === ROW_RIGHT) {\n        if (!previousRow || colIdx === 0) {\n            return colData;\n        }\n        let j = colIdx;\n        for (; j < currentRow.length; j += 1) {\n            if (previousRow[j].valueOf() !== currentRow[j].valueOf()) {\n                break;\n            }\n        }\n        return (j === currentRow.length) ? null : colData;\n    } else if (type === COLUMN_BOTTOM) {\n        if (rIdx === 0) {\n            return colData;\n        }\n        const prevCell = currentRow[colIdx - 1];\n        if (prevCell) {\n            if (prevCell.valueOf() === colData.valueOf()) {\n                const nextRow = matrix[rIdx + 1];\n                if (!nextRow) {\n                    return null;\n                }\n                if (nextRow[colIdx].valueOf() === nextRow[colIdx - 1].valueOf()) {\n                    return null;\n                }\n                return colData;\n            }\n            return colData;\n        }\n        return colData;\n    } else if (type === COLUMN_TOP) {\n        if (rIdx === matrix.length - 1 && matrix.length > 1) {\n            return colData;\n        }\n        const prevCell = currentRow[colIdx - 1];\n        if (prevCell && (prevCell.valueOf() === colData.valueOf())) {\n            const prevRow = matrix[rIdx - 1];\n            if (prevRow) {\n                if (prevRow[colIdx].valueOf() === prevRow[colIdx - 1].valueOf()) {\n                    return null;\n                }\n                return colData;\n            }\n            return null;\n        }\n        return colData;\n    }\n    return colData;\n};\n\n/**\n * This callback is used to calculate the rowspan\n * by checking for repeating entries in subsequent rows\n * at the specified column.\n *\n * @param {Placeholder} colData Instance of placeholder.\n * @param {number} colIdx The index of the placeholder in the array.\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {number} rIdx The index of the row of the placeholder in array.\n * @return {number} The row span.\n */\nconst calcRowSpan = (colData, colIdx, matrix, rIdx) => {\n    let count = 1;\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData || typeof colData.valueOf() !== 'string') {\n        return 1;\n    }\n    let isNull = false;\n    while (!isNull) {\n        if (matrix[rIdx + count] && matrix[rIdx + count][colIdx] === null) {\n            count += 1;\n        } else {\n            isNull = true;\n        }\n    }\n    return count;\n};\n/**\n * This callback is used to calculate the rowspan\n * by checking for repeating entries in subsequent rows\n * at the specified column.\n *\n * @param {Placeholder} colData Instance of placeholder.\n * @param {number} colIdx The index of the placeholder in the array.\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {number} rIdx The index of the row of the placeholder in array.\n * @return {number} The row span.\n */\nconst calcColSpan = (colData, colIdx, matrix, rIdx) => {\n    let count = 1;\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData || typeof colData.valueOf() !== 'string') {\n        return 1;\n    }\n    let isNull = false;\n    while (!isNull) {\n        if (matrix[rIdx][colIdx + count] === null) {\n            count += 1;\n        } else {\n            isNull = true;\n        }\n    }\n    return count;\n};\n\n// create a masking matrix to strip out repeating columns\n// and calculate rowspan.\nconst mask = function (matrix, type) {\n    return matrix.map((row, rIdx) => {\n        if (type === ROW_LEFT || type === ROW_RIGHT) {\n            const filteredRow = row.map((col, colIndex) => columnFilter(col, colIndex, matrix, rIdx, type));\n            const temp = [];\n            const diff = row.length - filteredRow.length;\n            for (let i = 0; i < diff; i += 1) {\n                temp.push(null);\n            }\n            if (type === ROW_RIGHT) {\n                temp.unshift(...filteredRow);\n                return temp;\n            }\n            temp.push(...filteredRow);\n            return temp;\n        }\n\n        const filteredRow = row.map((col, colIndex) => columnFilter(col, colIndex, matrix, rIdx, type));\n        const temp = [];\n        temp.push(...filteredRow);\n        return temp;\n    });\n};\n\n/**\n * This function is used to set the col and row spans\n * for the matrices based on repeated/hierarchichal data\n *\n * @export\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {string} type Type of array (center, top, bottom)\n * @param {number} index Index of array in the row\n * @return {Object} containing the view matrix and their spans\n */\nexport function cellSpanMaker (matrix, type, index) {\n    let span = '';\n    if (type === TOP || type === BOTTOM) {\n        span = type === TOP ? COLUMN_TOP : COLUMN_BOTTOM;\n        const viewMatrix = mask(matrix, span);\n        const spans = viewMatrix.map((row, ridx) => row.map((col, i) => calcColSpan(col, i, viewMatrix, ridx))\n                        .filter(col => col !== 1));\n        return { viewMatrix, spans };\n    } else if (index === 0 || index === 2) {\n        span = index === 0 ? ROW_LEFT : ROW_RIGHT;\n        const viewMatrix = mask(matrix, span);\n        const spans = [];\n        viewMatrix.forEach((row, ridx) => {\n            spans[ridx] = spans[ridx] || [];\n            row.forEach((col, i) => {\n                if (viewMatrix[ridx][i]) {\n                    const currSpan = calcRowSpan(col, i, viewMatrix, ridx);\n                    currSpan && spans[ridx].push(currSpan);\n                }\n            });\n        });\n        return { viewMatrix, spans };\n    }\n    return { viewMatrix: matrix };\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport { cellSpanMaker } from './span-maker';\nimport {\n    VIEW_INDEX, TOP, LEFT, RIGHT, BOTTOM, CENTER, HEIGHT, WIDTH, ROW_SPAN, COL_SPAN\n} from '../enums/constants';\nimport { BLANK_BORDERS } from './defaults';\n\n/**\n * Creates a table element of the layout\n *\n * @param {Object} mount Mount point for table elements\n * @param {string} className defines class name\n * @param {Array} rowData set of rows for the table\n * @return {Selection} set of selections for the table\n */\nfunction renderTable (mount, className, rowData) {\n    const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n    const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n    const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n    const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null).map(e =>\n                                ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n    return { table, body, rows, cells };\n}\n\nfunction applyRowBorders (cells, borderStyle, showBorders, color) {\n    [TOP, BOTTOM].forEach((borderType) => {\n        const style = `${borderStyle} ${showBorders[borderType] ? color : BLANK_BORDERS}`;\n        cells.style(`border-${borderType}`, style);\n    });\n}\n\nfunction applyColBorders (cells, borderStyle, showBorders, color) {\n    [LEFT, RIGHT].forEach((borderType) => {\n        const style = `${borderStyle} ${showBorders[borderType] ? color : BLANK_BORDERS}`;\n        cells.style(`border-${borderType}`, style);\n    });\n}\n\n/**\n * Applies borders to the cells in a matrix\n *\n * @param {Selection} cells Set of cells made from the matrix\n * @param {Object} border Border info for layout\n * @param {string} type Type of matrix(top/center/bottom)\n * @param {number} index Column index of matrix in the row\n */\nfunction applyBorders (cells, border, type, index) {\n    const {\n        width,\n        style,\n        color,\n        showRowBorders,\n        showColBorders,\n        showValueBorders\n    } = border;\n    const borderStyle = `${width}px ${style}`;\n\n    if (type === CENTER && index === 1) {\n        [TOP, BOTTOM, LEFT, RIGHT].forEach((borderType) => {\n            cells.style(`border-${borderType}`, `${borderStyle} ${showValueBorders[borderType] ?\n                color : BLANK_BORDERS}`);\n        });\n    } else if (type === CENTER) {\n        applyRowBorders(cells, borderStyle, showRowBorders, color);\n    } else if (index === 1) {\n        applyColBorders(cells, borderStyle, showColBorders, color);\n    }\n}\n\n/**\n * Renders a set of matrices in a row\n *\n * @param {Array} matrices Set of matrices in a row\n * @param {Selection} mountPoint Mount point for the row\n * @param {string} type top/center/bottom\n * @param {Object} dimensions dimensions of the matrix\n */\nfunction renderMatrix (matrices, mountPoint, type, dimensions, classPrefix) {\n    matrices.forEach((matrix, index) => {\n        // Creating containers for each matrix individually\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${type}-${index + 1}`)\n        .classed(`${classPrefix}-grid-${type}`, true)\n        .classed(`${classPrefix}-grid`, true);\n\n        const {\n            viewMatrix,\n            spans\n        } = cellSpanMaker(matrix, type, index);\n        if (type !== CENTER) {\n            containerForMatrix.style(WIDTH, `${dimensions.viewWidth[index]}px`);\n            containerForMatrix.style(HEIGHT, `${dimensions.viewHeight[VIEW_INDEX[type]]}px`);\n        }\n\n        // Rendering the table components\n        const { cells } = renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        if (type === CENTER && spans) {\n            cells.attr(ROW_SPAN, function (cell, colIndex) {\n                const placeholder = cell.placeholder;\n                selectElement(this).style('height', `${placeholder.availHeight() + dimensions.border.width}px`);\n                return spans[cell.rowIndex][colIndex];\n            });\n        } else if ((type === TOP || type === BOTTOM) && index === 1) {\n            cells.attr(COL_SPAN, function (cell, colIndex) {\n                const span = spans[cell.rowIndex][colIndex];\n                const placeholder = cell.placeholder;\n                if (span > 1) {\n                    placeholder.setAvailableSpace(0, placeholder.availHeight());\n                }\n                selectElement(this).style('height', `${placeholder.availHeight()}px`);\n                return span;\n            });\n        }\n        // Rendering content within placeholders\n        cells.each(function (cell) {\n            cell.placeholder && cell.placeholder.render(this);\n        }).exit().each((cell) => {\n            cell.placeholder && cell.placeholder.remove();\n        });\n\n        applyBorders(cells, dimensions.border, type, index);\n    });\n}\n\n/**\n *\n *\n * @param {*} matrix\n * @param {*} start\n * @param {*} end\n */\nconst splitMatrices = (matrix, start, end) => matrix.map(arr => arr.slice(start, end));\n\n/**\n * Renders all the matrices of the layout\n *\n * @export\n * @param {Array} matrices Set of matrices in the layout\n * @param {Array} mountPoints Mount points for each row of matrix\n * @param {Array} layoutDimensions Dimensions(height/width) of all the matrices\n */\nexport function renderMatrices (context, matrices, layoutDimensions) {\n    const {\n        top,\n        center,\n        bottom\n    } = matrices;\n    const {\n        breakPage,\n        gutterSpace,\n        classPrefix\n    } = context.config();\n    const {\n        width\n    } = context.measurement();\n    const mount = context.mountPoint();\n\n    let newCenter = [];\n    let newBottom = [];\n    let newTop = [];\n\n    const gutter = layoutDimensions.viewHeight[1] * gutterSpace.rows[breakPage.rows[0] - 1];\n    const breakLength = breakPage.rows.length;\n\n    if (breakPage.rows.length > 0 && Math.max(center[0].length, center[2].length) <= breakPage.rows[breakLength - 1]) {\n        let prev = 0;\n        const topBreak = top[1].length / breakLength;\n        const bottomBreak = bottom[1].length / breakLength;\n        breakPage.rows.forEach((e, i) => {\n            newTop[i] = splitMatrices(top, i * topBreak, (i + 1) * topBreak);\n            newCenter[i] = splitMatrices(center, prev, e);\n            newBottom[i] = splitMatrices(bottom, i * bottomBreak, (i + 1) * bottomBreak);\n            prev = e;\n        });\n    } else {\n        newTop = [top];\n        newCenter = [center];\n        newBottom = [bottom];\n    }\n    // makeElement(mount, 'div', newCenter, `${classPrefix}-grid-layout`)\n    mount.each(function (d, i) {\n        renderMatrix(newTop[i], selectElement(this), TOP, layoutDimensions, classPrefix);\n        renderMatrix(newCenter[i], selectElement(this), CENTER, layoutDimensions, classPrefix);\n        renderMatrix(newBottom[i], selectElement(this), BOTTOM, layoutDimensions, classPrefix);\n    })\n                    .style(WIDTH, `${Math.ceil(width)}px`)\n                    .style('margin-bottom', (d, i) => {\n                        if (i !== newBottom.length - 1) { return `${Math.floor(gutter)}px`; }\n                        return 0;\n                    });\n}\n","/**\n * This file exports utility functions that are used across the layout module\n */\nimport { Symbols } from 'muze-utils';\nimport { PRIMARY, SECONDARY, HEIGHT, WIDTH } from '../enums/constants';\n\nconst nest = Symbols.nest;\n/**\n *\n *\n * @param {*} isTransposed\n * @returns\n */\nconst getMeasureInfo = (isTransposed) => {\n    if (isTransposed) {\n        return {\n            firstMeasure: HEIGHT,\n            secondMeasure: WIDTH\n        };\n    }\n    return {\n        firstMeasure: WIDTH,\n        secondMeasure: HEIGHT\n    };\n};\n\n/**\n *\n *\n * @param {*} i\n * @param {*} page\n * @returns\n */\nconst findInPage = (i, page) => {\n    let count = 0;\n    for (const x in page) {\n        if (i < page[x]) {\n            count = x;\n            break;\n        }\n    }\n    return count;\n};\n\n/**\n * Creates a single matrix from two matrices\n *\n * @param {Array<Array>} matrix Input matrix\n * @return {Array<Array>} Joined matrix\n * @memberof VisualMatrix\n */\nexport const combineMatrices = (matrix, config) => {\n    const { isTransposed } = config;\n    let joinedMatrix = matrix[0].length > 0 ? matrix[0] : matrix[1];\n    if (isTransposed) {\n        joinedMatrix = matrix[0].length > 0 ? [...matrix[0]] : [];\n        joinedMatrix = matrix[1].length > 0 ? [...joinedMatrix, ...matrix[1]] : joinedMatrix;\n    } else {\n        joinedMatrix = joinedMatrix.map((row, rowIndex) => {\n            let rowData = [];\n            if (matrix[0].length > 0) {\n                rowData = [...matrix[0][rowIndex]];\n            }\n            if (matrix[1].length > 0) {\n                rowData = [...rowData, ...matrix[1][rowIndex]];\n            }\n            return rowData;\n        });\n    }\n    return joinedMatrix;\n};\n\n/**\n * Creates a hirachical tree from the context\n *\n * @param {Object} context context for creating tree\n * @return {Object} nested tree\n */\nexport const createTree = (context) => {\n    let matrixTree = {};\n    let lastLevelKey = 0;\n    let facet = PRIMARY;\n    const nestFn = nest();\n    const keys = [];\n    const layoutMatrix = context._layoutMatrix;\n    const primaryMatrix = context.primaryMatrix();\n    const secondaryMatrix = context.secondaryMatrix();\n    const { isTransposed, breakPage } = context.config();\n\n    if (!isTransposed) {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix[0].length - 1; i++) {\n                keys.push(i);\n            }\n            keys.push(primaryMatrix[0].length - 1);\n            if (facet === SECONDARY || secondaryMatrix.length === 0) {\n                lastLevelKey = primaryMatrix[0].length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const keyLength = primaryMatrix.length > 0 ? primaryMatrix[0].length : 0;\n            for (let i = secondaryMatrix[0].length - 1; i > 0; i--) {\n                keys.push(i + keyLength);\n            }\n            keys.push(keyLength);\n\n            if (facet === PRIMARY) {\n                lastLevelKey = keyLength;\n            }\n        } else {\n            lastLevelKey = primaryMatrix.length > 0 ? primaryMatrix[0].length - 1 : 0;\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        matrixTree = nestFn.entries(layoutMatrix);\n    } else {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix.length - 1; i++) {\n                keys.push(i);\n            }\n            // if (facet === PRIMARY) {\n            keys.push(primaryMatrix.length - 1);\n            // } else {\n            if (facet === SECONDARY) {\n                lastLevelKey = primaryMatrix.length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const primaryMatrixLength = primaryMatrix.length;\n            for (let i = secondaryMatrix.length - 1; i > 0; i--) {\n                keys.push(i + primaryMatrixLength);\n            }\n            // if (facet === SECONDARY) {\n            keys.push(primaryMatrixLength);\n            // }\n            if (facet === PRIMARY) {\n                lastLevelKey = primaryMatrixLength;\n            }\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        let newMatrix = [];\n        newMatrix = layoutMatrix[0].map((col, colIndex) => layoutMatrix.map(row => row[colIndex]));\n        matrixTree = nestFn.entries(newMatrix);\n    }\n    return { tree: matrixTree, lastLevelKey };\n};\n\n/**\n * Gives the min measues\n *\n * @param {boolean} isTransposed is column matrix\n * @param {Object} unitMeasures min measures to be given to cells\n * @return {Object} dimension min cell\n */\nexport const getMinMeasures = (isTransposed, unitMeasures) => {\n    if (!isTransposed) {\n        return {\n            height: unitMeasures.height,\n            width: 0\n        };\n    }\n    return {\n        height: 0,\n        width: unitMeasures.width\n    };\n};\n\n/**\n * Get the logical space from the tree\n *\n * @param {Node} item tree to be calculated\n * @param {number} measures width and height\n * @param {Array} minMeasures min measures for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} dimension\n */\nexport const getLogicalSpace = (item, measures, minMeasures, maxMeasure = []) => {\n    const { firstMeasure, secondMeasure } = measures;\n    let firstMeasureValue = 0;\n    let secondMeasureValue = 0;\n    item.values.forEach((valueArray) => {\n        let fMeasure = 0;\n        let sMeasure = 0;\n        valueArray.forEach((placeholder, colIndex) => {\n            placeholder.logicalSpace(null);\n            const space = placeholder.getLogicalSpace();\n            sMeasure = Math.max(sMeasure, +space[secondMeasure], minMeasures[secondMeasure]);\n            maxMeasure[colIndex] = Math.max(maxMeasure[colIndex] || 0, space[firstMeasure]);\n            fMeasure += +maxMeasure[colIndex];\n        });\n        secondMeasureValue += sMeasure;\n        firstMeasureValue = Math.max(firstMeasureValue, fMeasure);\n        item.space = {\n            [secondMeasure]: Math.ceil(secondMeasureValue),\n            [firstMeasure]: Math.ceil(firstMeasureValue)\n        };\n    });\n    return {\n        [secondMeasure]: secondMeasureValue,\n        [firstMeasure]: firstMeasureValue\n    };\n};\n\n/**\n * Computes the logical spcae taken by the matrix tree\n *\n * @param {*} [item={}] tree to be viewed\n * @param {boolean} [isTransposed=false] is column matrix\n * @param {*} unitMeasures min measues for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} logical space taken\n */\nexport const computeLogicalSpace = (item = {}, config, maxMeasures) => {\n    const { isTransposed = false, unitMeasures } = config;\n    const { firstMeasure, secondMeasure } = getMeasureInfo(isTransposed);\n    const { values } = item;\n    const minMeasures = getMinMeasures(isTransposed, unitMeasures);\n    if (values[0].key) {\n        const logicalSpace = { [firstMeasure]: 0, [secondMeasure]: 0 };\n\n        values.forEach((valueItem) => {\n            // Compute logical space for lowest level\n            const space = computeLogicalSpace(valueItem, config, maxMeasures);\n            // Set logical space for first measure\n            logicalSpace[firstMeasure] = Math.max(logicalSpace[firstMeasure], space[firstMeasure],\n                minMeasures[firstMeasure]);\n            // Set logical space for second measure\n            logicalSpace[secondMeasure] += +space[secondMeasure];\n        });\n        item.space = logicalSpace;\n        return logicalSpace;\n    }\n    return getLogicalSpace(item, { firstMeasure, secondMeasure }, minMeasures, maxMeasures);\n};\n\n/**\n * Gives the space taken by a row\n *\n * @param {Array} row matrix array of rows\n * @return {Object} dimension of the row\n */\nexport const spaceTakenByRow = (row) => {\n    let height = 0;\n    let width = 0;\n    row.forEach((col) => {\n        const spaces = col.getLogicalSpace();\n        height = Math.max(height, spaces.height);\n        width += spaces.width;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Gives the space taken by a column\n *\n * @param {Array<Array>} matrix column matrix\n * @param {number} colIndex column index\n * @return {Object} dimension of the column\n */\nexport const spaceTakenByColumn = (matrix, colIndex) => {\n    let height = 0;\n    let width = 0;\n    matrix.forEach((row) => {\n        const col = row[colIndex];\n        const spaces = col.getLogicalSpace();\n        width = Math.max(width, spaces.width);\n        height += spaces.height;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Creates different level matrices\n *\n * @param {Object} item matrix tree\n * @param {boolean} isTransposed is column matrix\n * @return {Object} matrix of each level\n */\nexport const createMatrixEachLevel = (item, isTransposed) => {\n    if (item.values[0].key) {\n        const arr = [];\n        item.values.forEach((child) => {\n            if (!isTransposed) {\n                arr.push(...createMatrixEachLevel(child, isTransposed));\n            } else {\n                const eachLevel = createMatrixEachLevel(child, isTransposed);\n                eachLevel.forEach((e, i) => {\n                    arr[i] = arr[i] || [];\n                    arr[i].push(...e);\n                });\n            }\n        });\n        item.matrix = arr;\n        return arr;\n    }\n    if (!isTransposed) {\n        item.matrix = item.values;\n    } else {\n        item.matrix = item.values[0].map((col, colIndex) => item.values.map(row => row[colIndex]));\n    }\n    return item.matrix;\n};\n\n/**\n * Breaks the matrix into two part\n *\n * @param {Array<Array>} matrix input matrix\n * @param {boolean} isTransposed is column matrix\n * @param {number} breakPointer point in matrix where it is to be broken\n * @return {Array} two broken matrix\n */\nexport const breakMatrix = (matrix, isTransposed, breakPointer) => {\n    const primaryMatrix = [];\n    const secondaryMatrix = [];\n    if (isTransposed) {\n        matrix.forEach((row, rowIndex) => {\n            if (rowIndex >= breakPointer) {\n                secondaryMatrix.push(row);\n            } else {\n                primaryMatrix.push(row);\n            }\n        });\n    } else {\n        matrix.forEach((row, rowIndex) => {\n            row.forEach((column, columnIndex) => {\n                if (columnIndex >= breakPointer) {\n                    secondaryMatrix[rowIndex] = secondaryMatrix[rowIndex] || [];\n                    secondaryMatrix[rowIndex].push(column);\n                } else {\n                    primaryMatrix[rowIndex] = primaryMatrix[rowIndex] || [];\n                    primaryMatrix[rowIndex].push(column);\n                }\n            });\n        });\n    }\n    return [primaryMatrix, secondaryMatrix];\n};\n\n/**\n * Distributed width returned\n *\n * @param {Object} context context for the width distibution\n * @return {number} distributed widths\n */\nexport const getDistributedWidth = (context, layoutConfig) => {\n    const {\n        availableWidth,\n        width,\n        row\n    } = context;\n    const {\n        isDistributionEqual,\n        isTransposed,\n        distribution\n    } = layoutConfig;\n    let distSum = 0;\n    if (distribution && distribution[0]) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    return row.map((col, colIndex) => {\n        const space = col.getLogicalSpace().width;\n        if (isTransposed) {\n            if (distribution.length > 0) {\n                return (availableWidth * distribution[colIndex] / distSum) - 2;\n            } else if (isDistributionEqual || width === 0) {\n                const rowLen = row.length;\n                return (availableWidth / rowLen) - 2;\n            }\n        }\n        return (space + (availableWidth - width) * (space / width)) - 2;\n    });\n};\n\n/**\n * Distributeed heights returned\n *\n * @param {Object} context input for the height distribution\n * @return {Object} distribured heights\n */\nexport const getDistributedHeight = (context) => {\n    let distSum = 0;\n    let gutterSum = 0;\n    let heightWithoutGutter = 0;\n    const {\n        isTransposed,\n        distribution,\n        availableHeight,\n        height,\n        isDistributionEqual,\n        gutter,\n        matrix,\n        cIdx\n    } = context;\n\n    if (distribution && distribution[0] !== undefined) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    if (gutter && gutter[0] !== undefined) {\n        gutterSum = gutter.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    heightWithoutGutter = availableHeight - Math.floor(availableHeight * gutterSum);\n\n    const colLen = matrix.length;\n    return matrix.map((row, rIdx) => {\n        const col = row[cIdx];\n        const space = col.getLogicalSpace().height;\n\n        if (!isTransposed) {\n            if (distribution.length > 0 && colLen === distribution.length) {\n                return (heightWithoutGutter * distribution[rIdx] / distSum) - 2;\n            } else if (isDistributionEqual || context.height === 0) {\n                return (heightWithoutGutter / colLen) - 2;\n            }\n        }\n        return (space + (heightWithoutGutter - height) * (space / height)) - 2;\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} beg\n * @param {*} end\n */\nexport const extraCellsRemover = (arr, beg, end) => arr.slice(beg, -end);\n\n/**\n * Creates matrix instancess\n *\n * @param {Array} [arr=[]] mutated arry\n * @param {number} depth depth of the tree\n * @param {Array} matrixInfo Details about the matrix(tree, etc) to be inserted\n * @param {boolean} layout Instance of layout\n */\nexport const createMatrixInstances = (arr = [], depth, matrixInfo, layout) => {\n    const breakPointer = layout._breakPointer;\n    const config = layout.config();\n    const {\n        isTransposed\n    } = config;\n    const {\n        tree,\n        layoutMatrix\n    } = matrixInfo;\n\n    if (depth === 0) {\n        const brokenMatrix = breakMatrix(tree.matrix, isTransposed, breakPointer);\n        arr.push({\n            matrix: tree.matrix,\n            primaryMatrix: brokenMatrix[0],\n            secondaryMatrix: brokenMatrix[1],\n            space: tree.space\n        });\n        return arr;\n    }\n    const nextLevel = depth - 1;\n    tree.values.forEach((e) => {\n        createMatrixInstances(arr, nextLevel, {\n            tree: e,\n            layoutMatrix\n        }, layout);\n    });\n    return arr;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    maxMeasures: {},\n    availableSpace: {},\n    logicalSpace: {}\n};\n","import { PRIMARY } from '../enums/constants';\n/**\n *\n *\n */\nexport const defaultConfig = {\n    distribution: [],\n    classPrefix: 'muze',\n    isDistributionEqual: true,\n    unitMeasures: {\n        height: 100,\n        width: 100,\n        border: 1\n    },\n    isTransposed: false,\n    facet: PRIMARY,\n    extraCellLengths: []\n};\n","import { mergeRecursive, generateGetterSetters } from 'muze-utils';\nimport {\n    createTree,\n    extraCellsRemover,\n    combineMatrices,\n    spaceTakenByColumn,\n    getDistributedHeight,\n    getDistributedWidth,\n    spaceTakenByRow,\n    computeLogicalSpace,\n    createMatrixEachLevel,\n    createMatrixInstances\n  } from '../utils';\nimport { PROPS } from './props';\nimport { COLUMN_ROOT, ROW_ROOT, HEIGHT, WIDTH } from '../enums/constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        // Prepare matrices\n        this._lastLevelKey = 0;\n        this._primaryMatrix = matrix[0] || [];\n        this._secondaryMatrix = matrix[1] || [];\n        this._maxMeasures = [];\n        this._availableSpace = {};\n\n        // Store the config\n        generateGetterSetters(this, PROPS);\n        const defCon = Object.assign({}, this.constructor.defaultConfig());\n        this.config(mergeRecursive(defCon, config));\n\n        this._breakPointer = this.config().isTransposed ? matrix[0].length :\n            (matrix[0].length > 0 ? matrix[0][0].length : 0);\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n\n        // Create Tree\n        this._tree = {\n            key: this.config().isTransposed ? COLUMN_ROOT : ROW_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.setLogicalSpace();\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    primaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._primaryMatrix;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    secondaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._secondaryMatrix;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    tree (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._tree;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @return\n     * @memberof VisualMatrix\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    createTree () {\n        const { tree, lastLevelKey } = createTree(this);\n        this._lastLevelKey = lastLevelKey;\n        return tree;\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    setLogicalSpace () {\n        const {\n            isTransposed\n        } = this.config();\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, isTransposed);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    /**\n     * Returns the space taken by visual matrix\n     *\n     * @return {Object} space taken by the matrix\n     * @memberof VisualMatrix\n     */\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    /**\n     * Sets the provied space to the visual matrix\n     *\n     * @param {number} width width provided\n     * @param {number} height height provided\n     * @memberof VisualMatrix\n     */\n    setAvailableSpace (width, height) {\n        this.availableSpace({ width, height });\n        const tree = this.tree();\n        const heightMeasures = this.populateMaxMeasures(HEIGHT, tree);\n        const widthMeasures = this.populateMaxMeasures(WIDTH, tree);\n        const depth = this.calculateDepth(widthMeasures, heightMeasures);\n\n        this.viewableMatrix = this.createViewPortMatrix(depth);\n        this.viewableMeasures = this.redistribute(this.viewableMatrix, width, height);\n        return this;\n    }\n\n    /**\n     * Populate the max measures in the array\n     *\n     * @param {Array} measures array to be filled with max measures\n     * @param {Object} matrixTree matrix tree of visual matrix\n     * @param {number} measure width or height\n     * @param {number} [depth=0] depth of the tree that to be calculated\n     * @memberof VisualMatrix\n     */\n    populateMaxMeasures (type, matrixTree, depth = 0, measures = []) {\n        measures[depth] = Math.max(measures[depth] || 0, matrixTree.space[type]);\n        if (matrixTree.values) {\n            const childDepth = depth + 1;\n            matrixTree.values.forEach((child) => {\n                if (child.space) {\n                    measures = this.populateMaxMeasures(type, child, childDepth, measures);\n                }\n            });\n        }\n        return measures;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures, heightMeasures) {\n        let i;\n        let j;\n        const { height, width } = this.availableSpace();\n\n        for (i = 0; i < heightMeasures.length; i++) {\n            if (heightMeasures[i] <= height) break;\n        }\n        for (j = 0; j < widthMeasures.length; j++) {\n            if (widthMeasures[j] <= width) break;\n        }\n        return Math.min(widthMeasures.length - 1, Math.max(i, j));\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistribute (viewableMatrix, width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n        const {\n            isTransposed\n        } = this.config();\n\n        viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths };\n            const maxMeasures = isTransposed ? this.redistributeColumnWise(options) : this.redistributeRowWise(options);\n            maxWidths = maxMeasures.maxWidths;\n            maxHeights = maxMeasures.maxHeights;\n        });\n\n        const measurements = viewableMatrix.map((matrixInst, i) => {\n            let heightMeasures;\n            let columnMeasures;\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i };\n            const { heights, widths, rowHeights, columnWidths } = this.getCellDimensions(cellDimOptions);\n\n            if (!isTransposed) {\n                heightMeasures = [height, height];\n                columnMeasures = widths;\n            } else {\n                heightMeasures = heights;\n                columnMeasures = [width, width];\n            }\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n\n        return measurements;\n    }\n\n    /**\n     * Gets the viewable measures for the current viewable matrix\n     *\n     * @return {Object} Set of viewable measures\n     * @memberof VisualMatrix\n     */\n    getViewableSpaces () {\n        return this.viewableMeasures;\n    }\n\n    /**\n     * Returns the matrix that can be viewed in the current viewport\n     *\n     * @return {Array} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    getViewableData () {\n        return this.viewableMatrix;\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n        if (!isTransposed) {\n            tree.matrix = extraCellsRemover(tree.matrix, begCellLen, endCellLen);\n        } else {\n            tree.matrix = tree.matrix.map(e => extraCellsRemover(e, begCellLen, endCellLen));\n        }\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    /**\n     * Creates the viewport that can be viewed together\n     *\n     * @param {number} depth maxDepth that can be viewed in the viewport\n     * @return {Array<Object>} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    createViewPortMatrix (depth) {\n        const arr = [];\n        createMatrixInstances(arr, depth, this.removeExtraCells(), this);\n        return arr;\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} options Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeRowWise (options) {\n        let cWidths = [];\n        let rHeights = [];\n        let mHeight = 0;\n        const maxMeasures = this.maxMeasures();\n        const {\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        } = this.config();\n        const { matrix, width, height, maxHeights, maxWidths } = options;\n\n        mHeight = spaceTakenByColumn(matrix, this._lastLevelKey).height;\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        if (maxWidth > 0) {\n            cWidths = maxMeasures.map(space => space + (width - maxWidth) * (space / maxWidth));\n        } else {\n            cWidths = maxMeasures.map(() => 0);\n        }\n        rHeights = getDistributedHeight({\n            matrix,\n            cIdx: this._lastLevelKey,\n            height: mHeight,\n            availableHeight: height,\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        });\n        maxWidths.push(cWidths);\n        maxHeights.push(rHeights);\n        return { maxWidths, maxHeights };\n    }\n\n    /**\n     * Distibutes the given space column wisely\n     *\n     * @param {Object} options Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeColumnWise (options) {\n        let rHeights = [];\n        const { matrix, width, maxHeights, maxWidths } = options;\n        const borderWidth = this.config().unitMeasures.border;\n        const mWidth = spaceTakenByRow(matrix[this._lastLevelKey]).width;\n        const cWidths = getDistributedWidth({\n            row: matrix[this._lastLevelKey],\n            width: mWidth,\n            availableWidth: width\n        }, this.config());\n\n        matrix.forEach((row, rIdx) => row.forEach((col, cIdx) => {\n            const oldLogicalSpace = col.getLogicalSpace().height;\n            col.setAvailableSpace(cWidths[cIdx] - borderWidth, oldLogicalSpace);\n            rHeights[rIdx] = Math.max(rHeights[rIdx] || 0, col.getLogicalSpace().height);\n        }));\n\n        if (maxHeights.length > 0) {\n            rHeights = rHeights.map((e, i) => Math.max(e, maxHeights[0][i]));\n        }\n\n        maxHeights.push(rHeights);\n\n        for (let x = 0; x < maxHeights.length; x++) {\n            maxHeights[x] = rHeights;\n        }\n        maxWidths.push(cWidths);\n        return { maxHeights, maxWidths };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} options cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (options) {\n        let indices = [];\n        let unitMeasures = [];\n        let mainMeasures = [];\n        let computedMeasures = [];\n        const {\n            isTransposed,\n            unitMeasures: measures\n        } = this.config();\n        const borderWidth = measures.border;\n        const { matrixInst, maxWidths, maxHeights, matrixIndex } = options;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = maxHeights[matrixIndex][rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                if (!isTransposed) {\n                    cell.setAvailableSpace(colWidth, colHeight - borderWidth);\n                    indices = [rIdx, cIdx];\n                    unitMeasures = [columnWidths, rowHeights];\n                    mainMeasures = [widths, heights];\n                    computedMeasures = [colWidth, colHeight];\n                } else {\n                    cell.setAvailableSpace(colWidth - borderWidth, colHeight);\n                    indices = [cIdx, rIdx];\n                    unitMeasures = [rowHeights, columnWidths];\n                    mainMeasures = [heights, widths];\n                    computedMeasures = [colHeight, colWidth];\n                }\n\n                if (indices[0] === 0 && indices[1] < breakPointer) {\n                    unitMeasures[0][0][indices[1]] = computedMeasures[0];\n                    mainMeasures[0][0] = (mainMeasures[0][0] || 0) + computedMeasures[0];\n                } else if (indices[0] === 0 && indices[1] >= breakPointer) {\n                    unitMeasures[0][1][indices[1] - breakPointer] = computedMeasures[0];\n                    mainMeasures[0][1] = (mainMeasures[0][1] || 0) + computedMeasures[0];\n                }\n                if (indices[1] === this._lastLevelKey) {\n                    unitMeasures[1][0][indices[0]] = computedMeasures[1];\n                    unitMeasures[1][1][indices[0]] = computedMeasures[1];\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { HEIGHT, WIDTH, COLUMN, ROW } from '../enums/constants';\n\n/**\n * Gets measurement for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @return {Object} Logical height/width of the matrix\n */\nexport function getMatrixMeasurement (matrix, type) {\n    if (matrix) {\n        return matrix.getLogicalSpace()[type];\n    }\n    return 0;\n}\n\n/**\n * Sets available space for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @param {number} value Value of measurement\n */\nexport function setMatrixMeasurement (matrix, type, value) {\n    if (matrix) {\n        const spaces = matrix.getLogicalSpace();\n        if (value && spaces[type] !== value) {\n            type === HEIGHT ? matrix.setAvailableSpace(spaces.width, value) :\n                matrix.setAvailableSpace(value, spaces.height);\n        }\n    }\n}\n\n/**\n *\n *\n * @param {*} matrix\n * @param {*} widths\n * @param {*} heights\n */\nconst setAvailableSpace = (matrix, widths, heights) => {\n    matrix.forEach((row, rIdx) => {\n        row.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(widths[cIdx], heights[rIdx]);\n        });\n    });\n};\n\n/**\n *\n *\n * @param {*} layout\n * @param {*} matrix\n * @param {*} pointer\n * @returns\n */\nconst setViewSpaces = (layout, pointerType, viewSpaces) => {\n    let pointer = layout.config()[`${pointerType}Pointer`];\n    if (viewSpaces.length - 1 < pointer) {\n        pointer = 0;\n        layout.config({ [`${pointerType}Pointer`]: pointer });\n    }\n    return pointer;\n};\n\n/**\n * Computes the measurements of space for all matrices in the\n * layout\n *\n * @param {Object} layout Instance of grid layout\n * @return {Object} set of measurements for the layout\n */\nexport const computeLayoutMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const {\n        width,\n        height\n    } = layout.measurement();\n    const {\n        border\n    } = layout.config();\n    const matrices = layout.matrices();\n    const {\n        top,\n        bottom\n    } = matrices;\n\n    // Get width of row matrix\n    const rowMatrixWidth = getMatrixMeasurement(rowMatrix, WIDTH);\n\n    // Set width for column matrix\n\n    const columnMatrixWidth = width - rowMatrixWidth;\n    setMatrixMeasurement(columnMatrix, WIDTH, columnMatrixWidth);\n    const columnViewPages = columnMatrix.getViewableSpaces();\n    setViewSpaces(layout, COLUMN, columnViewPages);\n\n    // Figuring out total space needed by current view space\n    const columnViewSpace = columnViewPages[layout.config().columnPointer];\n\n    // Getting height of column matrix\n    const columnMatrixHeight = columnViewSpace.height.primary + columnViewSpace.height.secondary;\n\n    // Set height for row matrix\n    const rowMatrixHeight = height - columnMatrixHeight;\n\n    setMatrixMeasurement(rowMatrix, HEIGHT, rowMatrixHeight);\n\n    // Get heights of each cell of row matrix\n    const rowViewableSpaces = rowMatrix.getViewableSpaces();\n    setViewSpaces(layout, ROW, rowViewableSpaces);\n    const rowHeights = [].concat(...rowViewableSpaces.map(e => e.rowHeights.primary));\n    const rowWidthsPrimary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.primary));\n    const rowWidthsSecondary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.secondary));\n    const columnViewableSpaces = columnMatrix.getViewableSpaces();\n    // Get widths of each cell of column matrix\n    const columnWidths = [].concat(...columnViewableSpaces.map(e => e.columnWidths.primary));\n    const columnHeightsPrimary = columnViewableSpaces[0].rowHeights.primary;\n\n    const columnHeightsSecondary = [].concat(...columnViewableSpaces.map(e => e.rowHeights.secondary));\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n    // Setting the available space for each cell in the centre matrix\n    centerMatrix.forEach((matrix, rIdx) => {\n        matrix.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(columnWidths[cIdx] - borderWidth, rowHeights[rIdx] - borderWidth);\n        });\n    });\n    setAvailableSpace(top[0], rowWidthsPrimary, columnHeightsPrimary);\n    setAvailableSpace(top[2], rowWidthsSecondary, columnHeightsPrimary);\n    setAvailableSpace(bottom[0], rowWidthsPrimary, columnHeightsSecondary);\n    setAvailableSpace(bottom[2], rowWidthsSecondary, columnHeightsSecondary);\n\n    return {\n        rowMatrixHeight,\n        rowMatrixWidth,\n        columnMatrixHeight,\n        columnMatrixWidth\n    };\n};\n\n/**\n * Gets view matrices based on current pointers for row and column\n *\n * @param {Object} layout instance of layout\n * @param {number} rowPointer current row pointer\n * @param {number} columnPointer current column pointer\n * @return {Object} returns the view matrix and its relevant information\n */\nexport const getViewMatrices = (layout, rowPointer, columnPointer) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const matrices = layout.matrices();\n    const rowMatrices = rowMatrix.getViewableData();\n    const columnMatrices = columnMatrix.getViewableData();\n    const centralMatrixPointer = {\n        row: 0,\n        column: 0\n    };\n\n    for (let i = rowPointer - 1; i >= 0; i--) {\n        const length = Math.max(rowMatrices[i].primaryMatrix.length,\n            rowMatrices[i].secondaryMatrix.length);\n        centralMatrixPointer.row += length;\n    }\n     /* istanbul ignore next */\n    for (let i = columnPointer - 1; i >= 0; i--) {\n        const matrix = columnMatrices[i];\n        const { primaryMatrix, secondaryMatrix } = matrix;\n        const length = Math.max(primaryMatrix[0] ? primaryMatrix[0].length : 0,\n            secondaryMatrix[0] ? secondaryMatrix[0].length : 0);\n        centralMatrixPointer.column += length;\n    }\n\n    matrices.top[1] = columnMatrices[columnPointer].primaryMatrix;\n    matrices.bottom[1] = columnMatrices[columnPointer].secondaryMatrix;\n\n    matrices.center[0] = rowMatrices[rowPointer].primaryMatrix;\n    matrices.center[2] = rowMatrices[rowPointer].secondaryMatrix;\n\n    const rowMatrixLen = Math.max(matrices.center[0].length, matrices.center[2].length);\n     /* istanbul ignore next */\n    const columnMatrixLen = Math.max(matrices.top[1][0] ? matrices.top[1][0].length : 0, matrices.bottom[1][0] ?\n            matrices.bottom[1][0].length : 0);\n    matrices.center[1] = centerMatrix.slice(centralMatrixPointer.row, centralMatrixPointer.row + rowMatrixLen)\n        .map(matrix => matrix.slice(centralMatrixPointer.column, centralMatrixPointer.column + columnMatrixLen));\n\n    return {\n        matrices,\n        rowPages: rowMatrices.length,\n        columnPages: columnMatrices.length\n    };\n};\n/**\n * Returns measurements of the cells of the current matrix\n *\n * @param {Object} layout instance of layout\n * @return {Object} returns the measurements for current view matrix\n */\nexport const getViewMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const {\n        width,\n        height\n    } = layout.measurement();\n    const {\n        columnPointer,\n        rowPointer\n    } = layout.config();\n\n    const rowMatrixWidth = rowMatrix.getViewableSpaces()[rowPointer].width;\n    const { primary: leftWidth, secondary: rightWidth } = rowMatrixWidth;\n\n    const columnMatrixHeight = columnMatrix.getViewableSpaces()[columnPointer].height;\n    const { primary: topHeight, secondary: bottomHeight } = columnMatrixHeight;\n\n    const centerHeight = height - (topHeight + bottomHeight);\n    const centerWidth = width - (leftWidth + rightWidth);\n\n    return {\n        viewWidth: [leftWidth, centerWidth, rightWidth],\n        viewHeight: [topHeight, centerHeight, bottomHeight]\n    };\n};\n","/**\n * This file declares a table that can be extended to create a Datagrid, crosstab\n * and man other visualzations that require a tabular structure.\n */\n\nimport { getUniqueId } from 'muze-utils';\nimport GenericLayout from '../generic-layout';\nimport { DEFAULT_CONFIGURATION, DEFAULT_MEASUREMENTS } from './defaults';\nimport {\n    renderMatrices\n} from './renderer';\nimport { generateVisualMatrices } from './layout-helper';\nimport { computeLayoutMeasurements, getViewMeasurements, getViewMatrices } from './computations';\n/**\n * This class is used to create a tabular structure that\n * can house charts and values.\n *\n * @class GridLayout\n */\nexport default class GridLayout extends GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} matrices Set of upto 9 matrices containing the cells to be rendered\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config external configurations.\n     * @memberof GenericLayout\n     *\n     * measurement : {\n     *      width : number => width of the container\n     *      height : number => height of the container\n     *      unitHeight : number => height of unit of the cells\n     *      unitWidth : number => width of unit of the cells\n     * }\n     *\n     */\n    constructor (matrices, mountPoint, measurement, config) {\n        super(mountPoint, measurement, config);\n        this.matrices(matrices);\n        this.config(this.constructor.defaultConfig());\n        this._layoutId = getUniqueId();\n    }\n\n    /**\n     * Returns initial set of measurements for the grid layout\n     *\n     * @static\n     * @return {Object} Returns initial set of measurements\n     * @memberof GridLayout\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENTS;\n    }\n\n    /**\n     * Returns initialconfiguration for grid layout\n     *\n     * @static\n     * @return {Object} Returns initial configuration for grid layout\n     * @memberof GridLayout\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIGURATION;\n    }\n\n    /**\n     * This function is used to return an instance of GridLayout\n     *\n     * @return {GridLayout} Instance of grid layout.\n     * @static\n     * @memberof GridLayout\n     */\n    static create () {\n        return new GridLayout(null, null, this.defaultMeasurement(), this.defaultConfig());\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     *\n     * @param {Array} matrices Set of matrices\n     * @return {Object} Getter/Setter\n     * @memberof GridLayout\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = generateVisualMatrices(this, matrices);\n            return this;\n        }\n        return super.matrices(matrices);\n    }\n\n    /**\n     * Triggers the computations for the layout based on the matrices available\n     * This causes a reflow in the entire layout system.\n     *\n     * @return {Object} Layout instance\n     * @memberof GridLayout\n     */\n    triggerReflow () {\n        computeLayoutMeasurements(this);\n        this.setViewInformation();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     * @param {*} pageNumber\n     * @returns\n     * @memberof GridLayout\n     */\n    gotoPage (type, pageNumber) {\n        const pageType = type.toLowerCase();\n        const { viewMatricesInfo } = this.getViewInformation();\n        const totalPages = viewMatricesInfo[`${pageType}Pages`];\n        const pointer = Math.min(Math.max(1, pageNumber), totalPages);\n        this.config({\n            [`${pageType}Pointer`]: pointer - 1\n        });\n        this.setViewInformation();\n        this.renderGrid();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     * @returns\n     * @memberof GridLayout\n     */\n    pages (type) {\n        const { viewMatricesInfo } = this.getViewInformation();\n        const pageType = type.toLowerCase();\n        return {\n            totalPages: viewMatricesInfo[`${pageType}Pages`],\n            currentPage: this.config()[`${pageType}Pointer`] + 1\n        };\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GridLayout\n     */\n    setViewInformation () {\n        const {\n            rowPointer,\n            columnPointer,\n            border\n        } = this.config();\n        const viewMatricesInfo = getViewMatrices(this, rowPointer, columnPointer);\n        const layoutDimensions = getViewMeasurements(this);\n        layoutDimensions.border = border;\n        this.viewInfo = {\n            viewMatricesInfo,\n            layoutDimensions\n        };\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GridLayout\n     */\n    getViewInformation () {\n        return this.viewInfo;\n    }\n\n    /**\n     * Renders the layout\n     *\n     * @return {Object} current instance\n     * @memberof GridLayout\n     */\n    renderGrid (mountPoint) {\n        this.mountPoint(mountPoint);\n        if (!this.mountPoint()) {\n            return this;\n        }\n        const {\n            viewMatricesInfo,\n            layoutDimensions\n        } = this.getViewInformation();\n        // Render matrices\n        renderMatrices(this, viewMatricesInfo.matrices, layoutDimensions);\n        return this;\n    }\n}\n","import VisualMatrix from '../visual-matrix/visual-matrix';\n\n/**\n * Generates the set of visual matrices for pagination and layouting algorithms\n *\n * @param {*} context\n * @param {*} matrices\n * @returns\n */\nexport const generateVisualMatrices = (context, matrices) => {\n    // Set of matrices for layout is generated starting with the left matrix\n    let leftMatrix = [];\n    let rightMatrix = [];\n    let topMatrix = [];\n    let bottomMatrix = [];\n    let begColCells;\n    let endColCells;\n    const {\n        isRowSizeEqual,\n        isColumnSizeEqual,\n        gutterSpace,\n        distribution,\n        border,\n        breakPage\n    } = context.config();\n    const {\n        minUnitHeight,\n        minUnitWidth\n    } = context.measurement();\n    const { top, center, bottom } = matrices;\n    const [topLeft, topColumns, topRight] = top;\n    const [leftRows, valueMatrix, rightRows] = center;\n    const [bottomLeft, bottomColumns, bottomRight] = bottom;\n\n    if (leftRows.length > 0) {\n        // If no left matrix is present, context will be empty\n        leftMatrix = [...topLeft, ...leftRows, ...bottomLeft];\n    }\n    if (rightRows.length > 0) {\n        // If no right matrix is present, context will be empty\n        rightMatrix = [...topRight, ...rightRows, ...bottomRight];\n    }\n    if (topColumns.length > 0 && topColumns[0].length > 0) {\n        // If no top matrix is present, context will be empty\n        topMatrix = topColumns.map((d, i) => [...topLeft[i], ...d, ...topRight[i]]);\n    }\n    if (bottomColumns.length > 0 && bottomColumns[0].length > 0) {\n        // If no bottom matrix is present, context will be empty\n        bottomMatrix = bottomColumns.map((d, i) => [...bottomLeft[i], ...d, ...bottomRight[i]]);\n    }\n    context.rowMatrix(new VisualMatrix([leftMatrix, rightMatrix], {\n        isDistributionEqual: isRowSizeEqual,\n        distribution: distribution.rows,\n        gutter: gutterSpace.rows,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        breakPage: breakPage.rows.map(e => e + Math.max(topLeft.length, topRight.length)),\n        extraCellLengths: [topLeft.length, bottomLeft.length]\n    }));\n\n    if (topLeft.length > 0) {\n        begColCells = topLeft[0].length;\n    } else {\n        begColCells = bottomLeft.length > 0 ? bottomLeft[0].length : 0;\n    }\n\n    if (topRight.length > 0) {\n        endColCells = topRight[0].length;\n    } else {\n        endColCells = bottomRight.length > 0 ? bottomRight[0].length : 0;\n    }\n\n    context.columnMatrix(new VisualMatrix([topMatrix, bottomMatrix], {\n        isDistributionEqual: isColumnSizeEqual,\n        distribution: distribution.columns,\n        gutter: gutterSpace.columns,\n        isTransposed: true,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        breakPage: breakPage.columns,\n        extraCellLengths: [begColCells, endColCells]\n    }));\n    context.centerMatrix(valueMatrix);\n\n    return matrices;\n};\n","import { ERROR_MSG } from 'muze-utils';\n/**\n * An Interface to be implemented if the transaction support is necessary. This class ensures reactivity to\n * global properties.\n */\nexport default class TransactionSupport {\n    /**\n     * Property accessor for data member of the class. Data is passed to the system by calling this method.\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for width of the class. Width is passed as an integer.\n     */\n    width () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for height of the class. Height is passed as an integer.\n     */\n    height () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for config of the class. Config is passed as an object.\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n}\n","/**\n * Flag to specify whether direction is vertical.\n */\nexport const MARGIN = 'margin';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const SPACE_FIXER = 'spaceFixer';\nexport const CLASSPREFIX = 'muze';\nexport const VERTICAL_ALIGN = 'verticalAlign';\nexport const TEXT_ALIGN = 'textAlign';\nexport const IS_OFFSET = 'isOffset';\nexport const MIDDLE = 'middle';\nexport const BASELINE = 'baseline';\nexport const SHOW = 'show';\nexport const CENTER = 'center';\nexport const TEXT = 'text';\nexport const HEADER = 'header';\nexport const HEIGHT = 'height';\nexport const WIDTH = 'width';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const FIELDS = 'fields';\nexport const TRANSFORM = 'transform';\nexport const LAYER_DEF = 'layerDef';\nexport const CONFIG = 'config';\n\nexport const TEXT_CELL = 'text-cell';\nexport const AXIS_CELL = 'axis-cell';\nexport const GEOM_CELL = 'geom-cell';\nexport const BLANK_CELL = 'blank-cell';\n","// eneum to refer to simple cell\nexport const SIMPLE = 'simple';\n// eneum to refer to header cell\nexport const TEXT = 'text';\n// enum to refer to axis cell\nexport const AXIS = 'axis';\n// enum to refer to visual cell\nexport const GEOM = 'geom';\n// enum to refer blank cell\nexport const BLANK = 'blank';\n","import {\n    ERROR_MSG,\n    getUniqueId,\n    mergeRecursive\n} from 'muze-utils';\nimport { SIMPLE } from './enums/cell-type';\n\n/**\n * This file declares a class that is used as an interface to create new\n * SimpleCell elements.\n * @module SimpleCell\n */\n/**\n * Base class for all table cells.\n *\n * @interface\n * @class SimpleCell\n */\nclass SimpleCell {\n\n    /**\n     * Creates an instance of SimpleCell.\n     *\n     * @param {*} config The input configuration.\n     * @memberof SimpleCell\n     */\n    constructor (config) {\n        this._id = getUniqueId();\n\n        const defConfig = mergeRecursive({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(defConfig, config || {});\n\n        this._mount = null;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     */\n    get type () {\n        return SIMPLE;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     * @return {Object} Default config for the placeholder\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the value contained by the SimpleCell.\n     *\n     * @memberof SimpleCell\n     */\n    valueOf () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a unique identifier for the instance used\n     * to control selective rendering.\n     *\n     * @memberof SimpleCell\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized representation of the instance.\n     *\n     * @memberof SimpleCell\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns an object with width and height fields\n     * specifying the space taken up by this metod.\n     *\n     * @memberof SimpleCell\n     */\n    getLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Method used to set the space available to render the SimpleCell\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @memberof SimpleCell\n     */\n    setAvailableSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    remove () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n\nexport default SimpleCell;\n","/**\n * This file exports variables that are used as defaults for\n * the placeholders\n */\nimport * as CONSTANTS from './constants';\n\n /**\n * Default Configuration for the cells\n * @return {Object} Default configuration\n */\nexport const DEFAULT_CONFIG = {\n    [CONSTANTS.MARGIN]: {\n        [CONSTANTS.LEFT]: 0,\n        [CONSTANTS.RIGHT]: 0,\n        [CONSTANTS.TOP]: 0,\n        [CONSTANTS.BOTTOM]: 0\n    },\n    [CONSTANTS.SPACE_FIXER]: 2,\n    [CONSTANTS.IS_OFFSET]: false,\n    [CONSTANTS.VERTICAL_ALIGN]: CONSTANTS.TOP,\n    [CONSTANTS.TEXT_ALIGN]: CONSTANTS.CENTER,\n    [CONSTANTS.SHOW]: true\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { GEOM, TEXT, AXIS, BLANK } from './enums/cell-type';\n\nconst DEFAULT_PROPS = {\n    mount: {},\n    availHeight: {},\n    availWidth: {},\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config, value)\n    },\n    logicalSpace: {},\n    source: {}\n};\n\nconst geomProps = {\n    data: {},\n    caption: {},\n    config: {},\n    axes: {\n        sanitization: (context, value) => Object.assign(context._axes, value)\n    },\n    facetByFields: {},\n    fields: {},\n    transform: {},\n    layerDef: {}\n};\n\nexport const PROPS = {\n    [TEXT]: DEFAULT_PROPS,\n    [GEOM]: mergeRecursive(geomProps, DEFAULT_PROPS),\n    [AXIS]: DEFAULT_PROPS,\n    [BLANK]: DEFAULT_PROPS\n};\n","/**\n * This file declares a class that represents a table cell\n * used to house an axis.\n * @module VisualCell\n */\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport { CLASSPREFIX, HEIGHT, WIDTH, AXIS_CELL } from './enums/constants';\nimport SimpleCell from './simple-cell';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { AXIS } from './enums/cell-type';\nimport { PROPS } from './props';\n\n/**\n * Computes the logical space of the an axis instance within an axis cell\n *\n * @param {Object} context Required to get the needed parameters to compute axis space\n * @return {Object} Returns the logical space for axis\n */\nconst computeAxisSpace = (context) => {\n    let logicalWidth;\n    let logicalHeight;\n    const axis = context.source();\n    const {\n        spaceFixer,\n        margin\n    } = context.config();\n    const {\n        width,\n        height\n    } = axis.getLogicalSpace();\n    const {\n            show\n        } = axis.config();\n    if (show === true) {\n        logicalHeight = Math.floor(height + margin.top + margin.bottom + spaceFixer);\n        logicalWidth = Math.floor(width + margin.left + margin.right + spaceFixer);\n    } else {\n        [logicalWidth, logicalHeight] = [width, height];\n    }\n    return {\n        width: logicalWidth,\n        height: logicalHeight\n    };\n};\n\n/**\n * Represents an axis cell.\n *\n * @class Axis\n */\nclass AxisCell extends SimpleCell {\n\n    /**\n     * Creates an instance of AxisCell.\n     *\n     * @param {Object} config The input config.\n     * @memberof AxisCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._axis = null;\n        this._availHeight = null;\n        this._availWidth = null;\n        this._logicalSpace = null;\n\n        generateGetterSetters(this, PROPS[AXIS]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof AxisCell\n     */\n    get type () {\n        return AXIS;\n    }\n\n    /**\n     * This method return the value conatined by this SimpleCell.\n     *\n     * @return {SimpleAxis | ColorAxis} Instance of SimpleAxis or ColorAxis.\n     * @memberof AxisCell\n     */\n    valueOf () {\n        return this.source().id;\n    }\n\n    /**\n     * This method return the unique identififer of the axis\n     *\n     * @return {string} Id of the axis.\n     * @memberof AxisCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Retrns the serialized representation of this cell.\n     *\n     * @return {Object}Object with serializable props.\n     * @memberof AxisCell\n     */\n    serialize () {\n        return {\n            type: AXIS,\n            axis: this.source().serialize()\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof AxisCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * return the space taken up by an axis element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof AxisCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeAxisSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @return {Instance} Returns current Instance\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        const {\n            margin,\n            isOffset\n        } = this.config();\n        this.source().setAvailableSpace(width, height, margin, isOffset);\n        this.logicalSpace(null);\n        this.source().logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the axis inside the axis cell.\n     *\n     * @param {HTMLElement} mount The mount point.\n     * @return {Selection} node where axis mounted\n     * @memberof AxisCell\n     */\n    /* istanbul ignore next */render (mount) {\n        if (!mount) {\n            return this;\n        }\n        const axis = this.source();\n        const availHeight = this.availHeight();\n        const availWidth = this.availWidth();\n        const {\n            margin\n        } = this.config();\n        const {\n            top,\n            bottom,\n            left,\n            right\n        } = margin;\n        const {\n            show\n        } = axis.config();\n        const wrapperDiv = makeElement(selectElement(mount), 'div', [this], `${CLASSPREFIX}-${AXIS_CELL}`);\n        const selection = makeElement(wrapperDiv, 'svg', [1], `${CLASSPREFIX}-axis-container`);\n\n        this.mount(mount);\n        if (availWidth === 0 || !availWidth) {\n            selection.attr(WIDTH, `${0}px`);\n        }\n        if (availHeight === 0 || !availHeight) {\n            selection.attr(HEIGHT, `${0}px`);\n        }\n        wrapperDiv.style(WIDTH, `${show ? availWidth : 0}px`)\n                        .style(HEIGHT, `${show ? availHeight : 0}px`)\n                        .style('margin-top', top)\n                        .style('margin-bottom', bottom)\n                        .style('margin-left', left)\n                        .style('margin-right', right);\n\n        axis.mount(selection.node());\n        return selection;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Current instance of AxisCell\n     * @memberof AxisCell\n     */\n    remove () {\n        this.source() && this.source().remove();\n        this.mount() && this.mount().remove();\n        return this;\n    }\n}\n\nexport default AxisCell;\n\n","/**\n * This file declares a class that represents a BLANK element in a  table.\n * @module VisualCell\n */\nimport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    generateGetterSetters\n    } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { CLASSPREFIX, BLANK_CELL } from './enums/constants';\nimport { BLANK } from './enums/cell-type';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { PROPS } from './props';\n\n/**\n * Represents a table haeder.\n *\n * @class BLANK\n */\nclass BlankCell extends SimpleCell {\n\n    /**\n     * Creates an instance of BLANK.\n     * @param {Object} config The input configuration.\n     * @memberof BLANK\n     */\n    constructor (config) {\n        super(config);\n\n        generateGetterSetters(this, PROPS[BLANK]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof BlankCell\n     */\n    get type () {\n        return BLANK;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof BlankCell\n     */\n    valueOf () {\n        return this.id;\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof BlankCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the BLANK cell.\n     *\n     * @return {string} The unique identifier for the BLANK.\n     * @memberof BlankCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof BLANK\n     */\n    serialize () {\n        return {\n            type: BLANK\n        };\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof BLANK\n     */\n    getLogicalSpace () {\n        const {\n            spaceFixer\n        } = this.config();\n        if (!this.logicalSpace()) {\n            return {\n                width: this.width || spaceFixer,\n                height: this.height || spaceFixer\n            };\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the BLANK cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof BLANK\n     */\n    /* istanbul ignore next */render (mount) {\n        if (mount) {\n            const { style } = this.config();\n            // append span element to mount point\n            this.mount(mount);\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id]);\n            elem.classed(`${CLASSPREFIX}-${BLANK_CELL}`, true);\n            elem.style('width', `${this.availWidth()}px`);\n            elem.style('height', `${this.availHeight()}px`);\n            elem.html('');\n            // apply style on the returned element\n            if (style) {\n                applyStyle(elem, style);\n            }\n        } return this;\n    }\n\n    /**\n     * Removes the cell(Disposal)\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\nexport default BlankCell;\n","/**\n * This file declares a class that represents a Text element in a  table.\n * @module VisualCell\n */\n\nimport {\n    selectElement,\n    makeElement,\n    getSmartComputedStyle,\n    generateGetterSetters\n} from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { TEXT } from './enums/cell-type';\nimport { PROPS } from './props';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { CLASSPREFIX, TOP, BOTTOM, LEFT, RIGHT, HEADER, WIDTH, TEXT_CELL } from './enums/constants';\nimport './text-cell.scss';\n\n/**\n* Computes the Logical Space for the text\n*\n* @param {Object} context Required to get the needed parameters to compute text space\n* @return {Object} Logical space taken up by text\n* @memberof TextCell\n*/\nconst computeTextSpace = (context) => {\n    const { labelManager } = context.dependencies();\n    const space = labelManager.getOriSize(context.source());\n    const {\n       margin,\n        show\n   } = context.config();\n\n    labelManager.setStyle(context._computedStyle);\n    if (show) {\n        return {\n            width: space.width + margin.left + margin.right + context._minTickDiff.width,\n            height: space.height + margin.top + margin.bottom + context._minTickDiff.height\n        };\n    } return {\n        width: 0,\n        height: 0\n    };\n};\n\n/**\n * Represents a table haeder.\n *\n * @class Text\n */\nclass TextCell extends SimpleCell {\n\n    /**\n     * Creates an instance of Text.\n     * @param {Object} config The input configuration.\n     * @param {string} dependencies Dependencies for the class(labelManager)\n     * @memberof Text\n     */\n    constructor (config, dependencies) {\n        super(config);\n\n        this._dependencies = dependencies;\n        this._className = this._config.className ||\n                    (this._config.type === HEADER ? `${CLASSPREFIX}-${HEADER}-cell` : `${CLASSPREFIX}-${TEXT}-cell`);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'), this._className);\n        this._dependencies.labelManager.setStyle(this._computedStyle);\n        this._minTickDiff = this._dependencies.labelManager.getOriSize('WW');\n\n        generateGetterSetters(this, PROPS[TEXT]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof TextCell\n     */\n    get type () {\n        return TEXT;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof TextCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the Text cell.\n     *\n     * @return {string} The unique identifier for the Text.\n     * @memberof TextCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the dependencies of the instance\n     *\n     * @return {Object} Dependencies needed by the class\n     * @memberof TextCell\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof TextCell\n     */\n    serialize () {\n        return {\n            text: this.source(),\n            type: TEXT\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof TextCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof Text\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeTextSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the Text cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof Text\n     */\n    render (mount) {\n        const availWidth = this.availWidth();\n        const {\n            margin,\n            show,\n            verticalAlign,\n            textAlign\n        } = this.config();\n\n        this.mount(mount);\n        if (show) {\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id], `${CLASSPREFIX}-${TEXT_CELL}`);\n\n            container.style('vertical-align', verticalAlign);\n            elem.classed(this._className, true);\n            // apply style on the returned element\n            elem.style(WIDTH, availWidth ? `${availWidth}px` : '100%');\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((type) => {\n                elem.style(`padding-${type}`, `${margin[type]}px`);\n            });\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            // set the text as the innerHTML\n            elem.html(this.source());\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\n\nexport default TextCell;\n","/**\n * This file declares a class that is used to represent a table cell\n * that houses a visual unit.\n * @module VisualCell\n */\n\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { GEOM } from './enums/cell-type';\nimport { PROPS } from './props';\nimport {\n    CLASSPREFIX, HEIGHT, WIDTH, DATA, AXES, FACET_BY_FIELDS, FIELDS, TRANSFORM, LAYER_DEF, CONFIG, GEOM_CELL\n} from './enums/constants';\nimport { DEFAULT_CONFIG } from './enums/defaults';\n\n/**\n * Calculates the logical space of the cell\n *\n * @param {Object} context Required to get the needed parameters to compute unit space\n * @return {Object} Logical space taken up by the unit\n * @memberof GeomCell\n */\nconst computeGeomSpace = (context) => {\n    const config = context.source().config();\n    const { width, height } = config;\n    return {\n        width: Math.ceil(width),\n        height: Math.ceil(height + context.getCaptionSpace().height)\n    };\n};\n\n /**\n * This class represents a SimpleCell for visual unit.\n *\n * @class GeomCell\n */\nclass GeomCell extends SimpleCell {\n\n    /**\n     * Creates an instance of GeomCell.\n     * @param {Object} config The input configuration.\n     * @memberof GeomCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._unit = null;\n        this._layers = null;\n        this._axes = {};\n        this._datamodel = {};\n        this._facetByFields = {};\n        this._fields = null;\n        this._transform = null;\n        this._caption = null;\n\n        generateGetterSetters(this, PROPS[GEOM]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof GeomCell\n     */\n    get type () {\n        return GEOM;\n    }\n\n    /**\n     * This method return the value contained by this cell.\n     *\n     * @return {VisualUnit} Instance of visual unit contained by visual unit.\n     * @memberof GeomCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return the id of the\n     * visual unit housed by this cell.\n     *\n     * @return {string} The unique id of the visual unit.\n     * @memberof GeomCell\n     */\n    get id () {\n        return this.source().id();\n    }\n\n    /**\n     * This method return a serialized representation of\n     * this instance.\n     *\n     * @return {Object} Object with serializable props.\n     * @memberof GeomCell\n     */\n    serialize () {\n        return {\n            type: GEOM,\n            unit: this.source().serialize(),\n            caption: this.caption()\n        };\n    }\n\n    /**\n     * return the default configuration for the geom cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof GeomCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * Updates the model based on the changed parameters\n     *\n     * @return {Instance} return instance\n     * @memberof GeomCell\n     */\n    updateModel () {\n        const unit = this.source();\n        unit.lockModel();\n        [DATA, AXES, FACET_BY_FIELDS, FIELDS, TRANSFORM, LAYER_DEF, CONFIG].forEach((prop) => {\n            this[prop]() && unit[prop](this[prop]());\n        });\n        unit.unlockModel();\n        return this;\n    }\n\n    /**\n     * It gives the space taken by the caption of the unit\n     *\n     * @return {Object} return the space taken by caption\n     * @memberof GeomCell\n     */\n    getCaptionSpace () {\n        const caption = this.caption();\n\n        let captionSpace = { width: 0, height: 0 };\n        if (caption) {\n            captionSpace = caption.getLogicalSpace();\n        }\n        return captionSpace;\n    }\n\n    /**\n     * return the space taken up by the element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof GeomCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeGeomSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space available to\n     * render the SimpleCell.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    setAvailableSpace (width, height) {\n        const unit = this.source();\n\n        this.availWidth(width);\n        this.availHeight(height);\n        unit.lockModel();\n        unit.width(width).height(height - this.getCaptionSpace().height);\n        unit.unlockModel();\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * his method is used to render the visual unit inside the provided cell.\n     *\n     * @param {HTMLElement} mount The mountpoint in the table.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    render (mount) {\n        if (mount) {\n            this.mount(mount);\n            const availHeight = this.availHeight();\n            const availWidth = this.availWidth();\n            const caption = this.caption();\n            const wrapperDiv = makeElement(selectElement(mount), 'div', [1], `${CLASSPREFIX}-${GEOM_CELL}`);\n\n            if (caption) {\n                const captionDom = makeElement(wrapperDiv, 'div', [caption], `${CLASSPREFIX}-unit-caption`).node();\n                caption.render(captionDom);\n            }\n            const selection = makeElement(wrapperDiv, 'div', [1], `${CLASSPREFIX}-unit`);\n            wrapperDiv.style(WIDTH, `${availWidth}px`).style(HEIGHT, `${availHeight}px`);\n            selection.style(WIDTH, `${availWidth}px`)\n                            .style(HEIGHT, `${availHeight - this.getCaptionSpace().height}px`);\n            this.source().mount(selection.node());\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Object} Current instance\n     * @memberof GeomCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        this.source().remove();\n        return this;\n    }\n}\n\nexport default GeomCell;\n","import AxisCell from './axis-cell';\nimport BlankCell from './blank-cell';\nimport TextCell from './text-cell';\nimport GeomCell from './geom-cell';\nimport SimpleCell from './simple-cell';\n\nimport * as CONSTANTS from './constants';\n\nexport const DEFAULT_PLACEHOLDERS = {\n    [CONSTANTS.SIMPLE_CELL]: SimpleCell,\n    [CONSTANTS.TEXT_CELL]: TextCell,\n    [CONSTANTS.AXIS_CELL]: AxisCell,\n    [CONSTANTS.GEOM_CELL]: GeomCell,\n    [CONSTANTS.BLANK_CELL]: BlankCell\n};\n\n","export const SIMPLE_CELL = 'SimpleCell';\nexport const TEXT_CELL = 'TextCell';\nexport const AXIS_CELL = 'AxisCell';\nexport const BLANK_CELL = 'BlankCell';\nexport const GEOM_CELL = 'GeomCell';\n\n","import { DEFAULT_PLACEHOLDERS } from './defaults';\n\n/**\n * Creates a registry for the cells, which can be used for\n * setting a new cell or getting the registered cells\n *\n * @return {Object} Setters and getters for registered cells\n */\nconst cellRegistry = () => {\n    const reg = DEFAULT_PLACEHOLDERS;\n    return {\n        set: (key, def) => {\n            if (key in reg) {\n                reg[key] = def;\n            }\n            return cellRegistry;\n        },\n        get: () => reg\n    };\n};\nexport default cellRegistry;\n","import { TOP, BOTTOM, LEFT, TITLE, SUB_TITLE, GROUP, LAYOUT, LEGEND } from '../constants';\n\n/**\n *\n *\n * @param {*} context\n * @returns\n */\nexport const arrangeComponents = (context) => {\n    const legendConfig = context.config().legend;\n    const titleConfig = context.title()[1];\n    const subtitleConfig = context.subtitle()[1];\n    const titleLayouts = {\n        [`${TOP}-${TOP}`]: [TITLE, SUB_TITLE, GROUP],\n        [`${BOTTOM}-${BOTTOM}`]: [GROUP, SUB_TITLE, TITLE],\n        [`${TOP}-${BOTTOM}`]: [TITLE, GROUP, SUB_TITLE],\n        [`${BOTTOM}-${TOP}`]: [SUB_TITLE, GROUP, TITLE]\n    };\n    const legendLayouts = [\n        [LEGEND, LAYOUT],\n        [LAYOUT, LEGEND]\n    ];\n    const titlePosition = titleConfig.position || TOP;\n    const subtitlePosition = subtitleConfig.position || TOP;\n\n    return {\n        headers: titleLayouts[`${titlePosition}-${subtitlePosition}`],\n        legends: legendConfig.position === LEFT || legendConfig.position === TOP ?\n        legendLayouts[0] : legendLayouts[1]\n    };\n};\n","import { TextCell } from '@chartshq/visual-cell';\nimport { escapeHTML } from 'muze-utils';\n\n/**\n *\n *\n * @param {*} rawContent\n * @returns\n */\nconst resolveTitleSubTitleContent = (rawContent) => {\n    if (typeof rawContent === 'function' && !rawContent._sanitize) {\n        return rawContent();\n    }\n    return escapeHTML(rawContent());\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} cellType\n * @param {*} labelManager\n * @param {*} prevCell\n * @returns\n */\nconst headerCreator = (config, cellType, labelManager, prevCell) => {\n    const {\n        content\n    } = config;\n    const cell = prevCell || new TextCell({ type: cellType }, { labelManager });\n\n    cell.source(content);\n\n    return {\n        height: cell.getLogicalSpace().height,\n        cell\n    };\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} type\n * @param {*} labelManager\n * @param {*} cell\n * @returns\n */\nconst createHeading = (config, type, labelManager, prevCell) => {\n    if (!config) { return ''; }\n\n    return headerCreator(\n        config,\n        type === 'title' ? 'header' : 'text',\n        labelManager,\n        prevCell\n    );\n};\n\n/**\n *\n *\n * @param {*} context\n */\nexport const createHeaders = (context, canvasHeight, canvasWidth) => {\n    let headerHeight = 0;\n    const headers = {};\n\n    canvasHeight > 200 && canvasWidth > 200 && ['title', 'subtitle'].forEach((type) => {\n        const headerOptions = context[type]();\n        const content = resolveTitleSubTitleContent(headerOptions[0]);\n        if (content.length) {\n            const config = headerOptions[1];\n\n            config.width = context.width();\n            config.content = content;\n\n            const { height, cell } = createHeading(config, type, context.dependencies().smartlabel,\n                context[`${type}Cell`]);\n\n            headers[`${type}Cell`] = cell;\n            context._composition[type] = cell;\n            headerHeight += height + config.padding;\n        }\n    });\n    return { headerHeight, headers };\n};\n\n","import { TextCell, AxisCell } from '@chartshq/visual-cell';\nimport {\n    VERTICAL, HORIZONTAL, LEFT, RIGHT, LEGEND_TYPE_MAP, PADDING, BORDER, CONFIG\n} from '../constants';\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n * @returns\n */\nexport const legendCreator = (canvas) => {\n    let LegendCls;\n    const dataset = [];\n    const axes = canvas.getRetinalAxes();\n\n    Object.entries(axes).forEach((axisInfo) => {\n        const scale = axisInfo[1][0];\n        const scaleType = axisInfo[0];\n        const scaleProps = canvas[scaleType]();\n\n        if (scaleProps.field) {\n            const {\n                type,\n                step\n            } = scale.config();\n\n            const stepMapper = typeof step === 'boolean' ? step : false;\n            LegendCls = LEGEND_TYPE_MAP[`${type}-${stepMapper}-${scaleType}`];\n            dataset.push({ scale, canvas, fieldName: scaleProps.field, LegendCls, scaleType });\n        }\n    });\n\n    return dataset;\n};\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n * @param {*} measurement\n * @param {*} prevLegends\n * @returns\n */\nexport const legendInitializer = (legendConfig, canvas, measurement, prevLegends) => {\n    const legends = [];\n    const {\n        height,\n        width,\n        headerHeight\n    } = measurement;\n    const {\n        position,\n        align\n    } = legendConfig;\n\n    const legendInfo = legendCreator(canvas);\n\n    legendInfo.forEach((dataInfo, index) => {\n        let legend = {};\n\n        const legendMeasures = {};\n        const {\n                LegendCls,\n                scale,\n                fieldName,\n                scaleType\n            } = dataInfo;\n        const config = legendConfig[scaleType] || {};\n        const title = config.title || {};\n        title.text = title.text || fieldName;\n        if (config.show) {\n            config.position = position;\n            config.align = align;\n\n            if (prevLegends[index]) {\n                legend = prevLegends[index].legend;\n            } else {\n                legend = LegendCls.create({\n                    labelManager: canvas._dependencies.smartlabel,\n                    cells: {\n                        AxisCell, TextCell\n                    }\n                });\n            }\n            legendMeasures.maxHeight = align === VERTICAL ? (height - headerHeight) : height * 0.2;\n            legendMeasures.maxWidth = align === HORIZONTAL ? width : width * 0.2;\n            legendMeasures.width = Math.min(legendMeasures.maxWidth, config.width);\n            legendMeasures.height = Math.min(legendMeasures.maxHeight, config.height);\n\n            [PADDING, BORDER, CONFIG].forEach((e) => {\n                legendMeasures[e] = config[e];\n            });\n            legend.scale(scale)\n                            .title(title)\n                            .fieldName(fieldName)\n                            .config(config)\n                            .metaData(canvas.composition().visualGroup.getGroupByData().project([fieldName]))\n                            .measurement(legendMeasures)\n                            .setLegendMeasures();\n\n            legends.push({ canvas, legend, scaleType });\n        }\n    });\n    return legends;\n};\n\n/**\n *\n *\n * @param {*} legends\n * @param {*} legendConfig\n * @param {*} availableHeight\n * @param {*} availableWidth\n * @returns\n */\nexport const getLegendSpace = (legends, legendConfig, availableHeight, availableWidth) => {\n    const legendMeasures = legends.map(legendInfo => legendInfo.legend.measurement());\n    const legendSpace = { width: 0, height: 0 };\n\n    legendMeasures.forEach((space) => {\n        let height = 0;\n        let width = 0;\n        width = Math.min(space.width, space.maxWidth);\n        height = Math.min(space.height, space.maxHeight);\n\n        if (legendConfig.align === HORIZONTAL) {\n            if (legendSpace.width + width > availableWidth) {\n                legendSpace.width = availableWidth;\n                legendSpace.height += height;\n            } else {\n                legendSpace.width += width;\n                legendSpace.height = Math.max(legendSpace.height, height);\n            }\n        } else if (legendSpace.height + height > availableHeight) {\n            legendSpace.height = height;\n            legendSpace.width += width;\n        } else {\n            legendSpace.height += height;\n            legendSpace.width = Math.max(legendSpace.width, width);\n        }\n    });\n    if (legendConfig.align === HORIZONTAL) {\n        legendSpace.width = availableWidth;\n    }\n    return legendSpace;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} headerHeight\n * @returns\n */\nexport const createLegend = (context, headerHeight, height, width) => {\n    const measurement = {\n        height,\n        width,\n        headerHeight\n    };\n    const { legend } = context.config();\n    const { show, position } = legend;\n\n    legend.classPrefix = context.config().classPrefix;\n    const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n\n    legend.show = show ? ((align === VERTICAL && width > 200) || (align === HORIZONTAL && height > 200)) : show;\n    legend.align = align;\n    return legendInitializer(legend, context, measurement, context.legends || []);\n};\n","import { cellRegistry } from '@chartshq/visual-cell';\nimport { mergeRecursive } from 'muze-utils';\nimport { arrangeComponents } from './component-resolver';\nimport { createHeaders } from './title-maker';\nimport { createLegend, getLegendSpace } from './legend-maker';\nimport { TOP, BOTTOM, LEFT, RIGHT } from '../constants';\n\nconst BlankCell = cellRegistry().get().BlankCell;\n\nconst createBlankCell = () => new BlankCell();\n\n/**\n *\n *\n * @param {*} canvases\n * @returns\n */\nconst getMaxRows = (rows) => {\n    const maxRows = [0, 0];\n\n    maxRows[0] = Math.max(maxRows[0], rows[0].length ? rows[0][0].length : 0);\n    maxRows[1] = Math.max(maxRows[1], rows[1].length ? rows[1][0].length : 0);\n    return maxRows;\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} value\n */\nconst fillArray = (arr, value) => arr.map(() => value());\n\n/**\n *\n *\n * @param {*} rows\n * @param {*} columns\n * @param {*} blankCellCreator\n * @returns\n */\nconst blankMatrixCreator = (rows, columns, blankCellCreator) => {\n    const arr = [];\n\n    for (let i = 0; i < rows; i++) {\n        let array = new Array(columns).fill([]);\n        array = fillArray(array, blankCellCreator);\n        arr.push(array);\n    }\n    return arr;\n};\n\n/**\n *\n *\n * @param {*} rowMatrices\n * @param {*} maxRows\n */\nconst blankCellCreator = (rowMatrices, maxRows) => rowMatrices.map((rowMatrix, rowMatrixIndex) => {\n    if (rowMatrix.length === 0 && maxRows[rowMatrixIndex] > 0) {\n        const numberOfRows = Math.max(rowMatrices[0].length, rowMatrices[1].length);\n        return blankMatrixCreator(numberOfRows, maxRows[rowMatrixIndex], createBlankCell);\n    }\n    if (rowMatrix.length > 0) {\n        if (rowMatrix[0] && rowMatrix[0].length <= maxRows[rowMatrixIndex]) {\n            return rowMatrix.map((row) => {\n                let arr = new Array(maxRows[rowMatrixIndex] - rowMatrix[0].length).fill(1);\n                arr = fillArray(arr, createBlankCell);\n                return [...arr, ...row];\n            });\n        }\n        return blankMatrixCreator(rowMatrix.length, maxRows[rowMatrixIndex], createBlankCell);\n    }\n    return rowMatrix;\n});\n\n/**\n *\n *\n * @param {*} context\n * @returns\n */\nexport const prepareLayout = (layout, components, config, measurement) => {\n    let topL;\n    let topR;\n    let bottomL;\n    let bottomR;\n    const {\n        rows,\n        columns,\n        values,\n        cornerMatrices\n    } = components;\n    const {\n        showHeaders\n    } = config;\n    const maxRows = getMaxRows(rows);\n    const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n    } = cornerMatrices;\n\n    if (!showHeaders) {\n        const colLengths = [columns[0].length, columns[1].length];\n        // Create blank cells for corener matrices\n        [topL, topR] = blankCellCreator([new Array(colLengths[0]), new Array(colLengths[0])], maxRows);\n        [bottomL, bottomR] = blankCellCreator([new Array(colLengths[1]), new Array(colLengths[1])], maxRows);\n    } else {\n        [topL, topR, bottomL, bottomR] = [topLeft, topRight, bottomLeft, bottomRight];\n    }\n\n    layout.measurement(measurement)\n                    .config(config)\n                    .matrices({\n                        top: [topL, columns[0], topR],\n                        center: [rows[0], values, rows[1]],\n                        bottom: [bottomL, columns[1], bottomR]\n                    })\n                    .triggerReflow();\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} mount\n * @returns\n */\nexport const getRenderDetails = (context, mount) => {\n    let layoutConfig = mergeRecursive({}, context.config());\n    const visGroup = context.composition().visualGroup;\n    const {\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        rows,\n        columns,\n        values\n    } = visGroup.placeholderInfo();\n    const {\n        minWidth,\n        minHeight,\n        classPrefix,\n        showHeaders,\n        legend\n    } = context.config();\n    // Get title configuration\n    const titleConfig = context.title()[1];\n     // Get subtitle configuration\n    const subtitleConfig = context.subtitle()[1];\n    // Get legend position\n    const legendPosition = legend.position;\n    // Arrange components according to config\n    const layoutArrangement = arrangeComponents(context);\n\n    // Get height width of the mount point\n    const { height, width } = mount.getBoundingClientRect();\n    const heightAttr = context.height();\n    const widthAttr = context.width();\n\n    const availableHeightForCanvas = heightAttr > minHeight ? heightAttr : (height || minHeight);\n    const availableWidthForCanvas = widthAttr > minWidth ? widthAttr : (width || minWidth);\n    // Create headers and determine header height\n    const { headers, headerHeight } = createHeaders(context, availableHeightForCanvas, availableWidthForCanvas);\n\n    // Create legends and determine legend space\n    const legends = createLegend(context, headerHeight, availableHeightForCanvas, availableWidthForCanvas);\n    context._composition.legend = {};\n    legends.forEach((e) => {\n        context._composition.legend[e.scaleType] = e.legend;\n    });\n\n    const legendSpace = getLegendSpace(legends, legend, availableHeightForCanvas, availableWidthForCanvas);\n    const legendWidth = (legendPosition === LEFT || legendPosition === RIGHT) ? legendSpace.width : 0;\n    const legendHeight = (legendPosition === TOP || legendPosition === BOTTOM) ? legendSpace.height : 0;\n\n    // Set components for layouting\n    const components = {\n        headers,\n        legends,\n        canvases: [context],\n        rows,\n        columns,\n        values,\n        cornerMatrices: visGroup.cornerMatrices()\n    };\n    const measurement = {\n        mountSpace: {\n            height,\n            width\n        },\n        headerHeight,\n        legendSpace,\n        canvasWidth: availableWidthForCanvas,\n        canvasHeight: availableHeightForCanvas,\n        width: availableWidthForCanvas - legendWidth,\n        height: availableHeightForCanvas - headerHeight - legendHeight,\n        minUnitHeight: context.minUnitHeight(),\n        minUnitWidth: context.minUnitWidth()\n    };\n    layoutConfig = mergeRecursive(layoutConfig, {\n        classPrefix,\n        showHeaders,\n        border: mergeRecursive(visGroup.metaData().border, context.config().border),\n        layoutArrangement,\n        legend,\n        title: titleConfig,\n        subtitle: subtitleConfig,\n        isColumnSizeEqual,\n        isRowSizeEqual\n    });\n    return {\n        layoutConfig,\n        components,\n        measurement\n    };\n};\n","export const TITLE_CONFIG = {\n    position: 'top',\n    align: 'center',\n    padding: 8\n};\n\nexport const SUB_TITLE_CONFIG = {\n    position: 'bottom',\n    align: 'center',\n    padding: 16\n};\n","import { mergeRecursive, selectElement } from 'muze-utils';\nimport {\n    ROWS,\n    COLUMNS,\n    COLOR,\n    SHAPE,\n    SIZE,\n    DETAIL,\n    LAYERS,\n    TRANSFORM,\n    MOUNT,\n    TITLE,\n    SUB_TITLE\n} from '../constants';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG } from './defaults';\n/**\n * @module\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Canvas.\n * Canvas merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n */\n\nexport const localOptions = {\n    [ROWS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLUMNS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLOR]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string') {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SHAPE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string') {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SIZE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string') {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [DETAIL]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n\n    [LAYERS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [TRANSFORM]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object'\n        }\n    },\n    [MOUNT]: {\n        value: null,\n        meta: {\n            sanitization: (value) => {\n                if (typeof value === 'string') {\n                    return selectElement(value).node();\n                }\n                return value;\n            }\n        }\n    }\n};\n\nexport const canvasOptions = {\n    [TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(title) => {\n                if (typeof title === 'string') {\n                    const t = () => title;\n                    t._sanitized = true;\n                    return t;\n                }\n                return title;\n            }, (titleConfig) => {\n                const defConfig = mergeRecursive({}, TITLE_CONFIG);\n                return mergeRecursive(defConfig, titleConfig);\n            }]\n        }\n    },\n    [SUB_TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(subtitle) => {\n                if (typeof subtitle === 'string') {\n                    const sub = () => subtitle;\n                    sub._sanitized = true;\n                    return sub;\n                }\n                return subtitle;\n            }, (subtitleConfig) => {\n                const defConfig = mergeRecursive({}, SUB_TITLE_CONFIG);\n                return mergeRecursive(defConfig, subtitleConfig);\n            }]\n        }\n    }\n};\n","import { makeElement, selectElement } from 'muze-utils';\nimport { VERTICAL, HORIZONTAL, TOP, LEFT, RIGHT, BOTTOM } from '../constants';\n\n/**\n * Sets the rotation for all x axes if any axis has the rotation config set in the\n * entire view\n *\n * @param {Array} columns Column cells that contain the axes cells\n */\nconst setLabelRotationForAxes = (context) => {\n    let rotation = 0;\n\n    const xAxes = context.xAxes() || [];\n\n    (() => {\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                if (xAxes[i][j].config().labels.rotation !== 0) {\n                    rotation = xAxes[i][j].config().labels.rotation;\n                    return;\n                }\n            }\n        }\n    })();\n\n    if (rotation) {\n        xAxes.forEach((axes) => {\n            axes.forEach((axis) => {\n                axis.config({ labels: { rotation, smartTicks: false } });\n            });\n        });\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} mount\n * @returns\n */\nconst getSkeletons = (mount, layoutConfig, measurement) => {\n    const {\n        layoutArrangement,\n        classPrefix\n    } = layoutConfig;\n    const {\n        headers,\n        legends\n    } = layoutArrangement;\n    const {\n        canvasWidth,\n        canvasHeight,\n        mountSpace\n    } = measurement;\n    const container = selectElement(mount);\n    const components = {};\n    if (mountSpace.height && mountSpace.height < canvasHeight) {\n        container.style('overflow-y', 'scroll');\n    }\n    if (mountSpace.width && mountSpace.width < canvasWidth) {\n        container.style('overflow-x', 'scroll');\n    }\n    const mountPoint = makeElement(container, 'div', [1], `${classPrefix}-viz`)\n        .style('width', `${canvasWidth}px`)\n        .style('height', `${canvasHeight}px`);\n    const containers = mountPoint\n        .selectAll(`.${classPrefix}-container`)\n        .data(headers);\n    containers.exit().remove();\n    const containersEnter = containers.enter().append('div');\n\n    const mergedContainer = containersEnter.merge(containers)\n                    .attr('class', `${classPrefix}-container`)\n                    .style('width', `${canvasWidth}px`)\n                    .style('padding', `${null}px`)\n                    .each(function (type) {\n                        components[type] = selectElement(this).classed(`${classPrefix}-${type}-container`, true);\n                    });\n    const innerContainer = mergedContainer\n                    .selectAll(`.${classPrefix}-inner-container`)\n                    .data((d) => {\n                        if (d === 'group') {\n                            return legends;\n                        } return [];\n                    });\n    innerContainer.exit().remove();\n    const innerContainerEnter = innerContainer.enter().append('div');\n\n    innerContainerEnter\n                    .merge(innerContainer)\n                    .attr('class', `${classPrefix}-inner-container`)\n                    .style('width', 'auto')\n                    .style('height', 'auto')\n                    .each(function (layoutType) {\n                        components[layoutType] = selectElement(this)\n                             .classed(`${classPrefix}-${layoutType}-container`, true);\n                    });\n    return components;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} container\n * @param {*} legendComponents\n */\nconst renderLegend = (legendConfig, container, legendComponents, measurement) => {\n    const sectionComponents = [];\n    const { legendSpace, headerHeight, height, width } = measurement;\n    const { legend, classPrefix } = legendConfig;\n    const { position } = legend;\n    const legendMount = makeElement(container, 'div', [legendComponents], `${classPrefix}-inner-content`, {}, d => d);\n    legendMount.classed(`${classPrefix}-legend`, true);\n    const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n    const legWidth = align === VERTICAL ? legendSpace.width : width;\n    const legHeight = align === VERTICAL ? height - headerHeight : legendSpace.height;\n\n    [container, legendMount].forEach((elem) => {\n        elem.style('width', `${Math.floor(legWidth)}px`)\n                        .style('height', `${legHeight}px`)\n                        .style('float', LEFT);\n    });\n\n    if (align === VERTICAL) {\n        let sections = -1;\n        let currHeight = legHeight;\n        let currWidth = 0;\n\n        legendComponents.forEach((legendInfo) => {\n            const leg = legendInfo.legend;\n            if (leg.measurement().height > currHeight) {\n                sections++;\n                currWidth = 0;\n                currHeight = legHeight;\n            } else {\n                sections < 0 && sections++;\n            }\n            sectionComponents[sections] = sectionComponents[sections] || [];\n            currHeight -= Math.min(leg.measurement().height, currHeight);\n            currWidth = Math.max(leg.measurement().width, currWidth);\n            sectionComponents[sections].push({\n                legend: leg,\n                legendHeight: legHeight,\n                legendWidth: currWidth\n            });\n        });\n\n        const mount = makeElement(legendMount, ['div'], sectionComponents, `${classPrefix}-legend-section`)\n            .each((d, i) => selectElement(this).classed(`${classPrefix}-legend-section-${i}`, true))\n            .classed(`${classPrefix}-legend-vertical-section`, true)\n            .style('width', d => `${d[0].legendWidth}px`);\n        makeElement(mount, ['div'], d => d, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                        .each(function (d) {\n                            d.legend.mount(this);\n                        })\n                        .style('width', d => `${d.legendWidth}px`);\n    } else {\n        const mount = makeElement(legendMount, 'div', [1], `${classPrefix}-legend-section`)\n            .classed(`${classPrefix}-legend-horizontal-section`, true)\n            .classed(`${classPrefix}-legend-section-${0}`, true)\n            .style('width', `${legWidth}px`);\n\n        makeElement(mount, 'div', legendComponents, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                        .each(function (d) { d.legend.mount(this); })\n                        .style('width', d => `${d.legend.measurement().width}px`);\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} container\n * @param {*} type\n * @param {*} headers\n */\nconst renderHeader = (layoutConfig, container, type, headers) => {\n    const headerCell = headers[`${type}Cell`];\n    const config = layoutConfig[`${type}`];\n    const { position, align, padding } = config;\n    const sel = container\n        .selectAll(`.${layoutConfig.classPrefix}-inner-container`)\n        .data([type]);\n    sel.exit().remove();\n    const selEnter = sel.enter().append('div');\n\n    const cont = selEnter.merge(sel);\n    cont.classed(`${layoutConfig.classPrefix}-inner-container`, true);\n\n    headerCell && headerCell.render(cont.node());\n\n    cont.selectAll('div').classed(`${layoutConfig.classPrefix}-inner-content`, true);\n    cont.style('width', `${100}%`);\n\n    if (config && headerCell) {\n        cont.style('float', LEFT)\n                        .style('text-align', align)\n                        .style(`padding-${position === TOP ? BOTTOM : TOP}`, `${padding}px`);\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} shifter\n */\nconst shiftHeaders = (config, shifter, measurement) => {\n    const { classPrefix, title, subtitle, legend } = config;\n    const { legendSpace } = measurement;\n    const { position } = legend;\n\n    shifter += position === LEFT ? legendSpace.width : 0;\n    title && selectElement(`.${classPrefix}-title-container`).select(`.${classPrefix}-inner-content`)\n                    .style('padding-left', title.align === LEFT ? `${shifter}px` : 0);\n    subtitle && selectElement(`.${classPrefix}-subtitle-container`).select(`.${classPrefix}-inner-content`)\n                    .style('padding-left', subtitle.align === LEFT ? `${shifter}px` : 0);\n    selectElement(`.${classPrefix}-legend-horizontal-section`)\n                    .style('padding-left', `${shifter}px`)\n                    .selectAll(`.${classPrefix}-legend-body, .${classPrefix}-legend-title`)\n                    .style('max-width', `${legendSpace.width - shifter}px`);\n    selectElement(`.${classPrefix}-legend-vertical-section`)\n                    .style('padding-left', null)\n                    .selectAll(`.${classPrefix}-legend-body, .${classPrefix}-legend-title`)\n                    .style('max-width', null);\n};\n\n/**\n *\n *\n * @param {*} mountPoint\n * @param {*} measurement\n * @param {*} classPrefix\n * @returns\n */\nconst prepareGridContainer = (mountPoint, measurement, classPrefix, alias) => {\n    if (!mountPoint) {\n        return this;\n    }\n\n    const {\n        height,\n        width\n    } = measurement;\n    // Create container for the layout\n\n    const sel = selectElement(mountPoint)\n         .selectAll(`.${classPrefix}-inner-content`)\n         .data(['layout']);\n    sel.exit().remove();\n    const selEnter = sel.enter().append('div');\n\n    const container = selEnter.merge(sel)\n    .attr('class', `${classPrefix}-inner-content`)\n                    .classed(`${classPrefix}-grid-layout`, true)\n                    .attr('id', `${classPrefix}-grid-layout-${alias}`)\n                    .style('height', `${height}px`)\n                    .style('padding', null)\n                    .text('')\n                    .style('width', `${Math.ceil(width)}px`);\n    // Mount for matrices\n    const innerSel = container.selectAll(`.${classPrefix}-layout-grid-container`)\n         .data(['layout2']);\n    innerSel.exit().remove();\n    const innerSelEnter = innerSel.enter().append('div');\n\n    const mount = innerSelEnter.merge(innerSel);\n    mount.classed(`${classPrefix}-layout-grid-container`, true)\n                    .attr('id', `${classPrefix}-layout-grid-container-${alias}`)\n                    .style('height', `${height}px`)\n                    .style('width', `${Math.ceil(width)}px`)\n                    .style('overflow-x', width > 300 ? 'none' : 'scroll')\n                    .style('overflow-y', height > 300 ? 'none' : 'scroll');\n\n    return {\n        mount,\n        container\n    };\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} components\n * @param {*} layoutConfig\n * @param {*} measurement\n */\nexport const renderComponents = (context, components, layoutConfig, measurement) => {\n    const {\n        headers,\n        legends\n    } = components;\n    const {\n        classPrefix\n    } = layoutConfig;\n    const {\n        title,\n        legend,\n        subtitle,\n        layout\n    } = getSkeletons(context.mount(), layoutConfig, measurement);\n    const {\n        mount\n    } = prepareGridContainer(layout.node(), measurement, classPrefix, context.alias());\n    const padding = context.layout().getViewInformation().layoutDimensions.viewWidth[0];\n    measurement.padding = padding;\n    setLabelRotationForAxes(context);\n\n    // Render layout\n    context.layout().renderGrid(mount);\n    context.once('layer.drawn').then(() => {\n        renderLegend(layoutConfig, legend, legends, measurement);\n    });\n\n    renderHeader(layoutConfig, title, 'title', headers);\n    renderHeader(layoutConfig, subtitle, 'subtitle', headers);\n\n    shiftHeaders(layoutConfig, padding, measurement);\n    context.composition().visualGroup.matrixInstance().value.each((el) => {\n        el.valueOf().parentContainer(layout.node());\n    });\n};\n","import {\n    getDataModelFromIdentifiers\n} from 'muze-utils';\n\nexport default class GroupFireBolt {\n    constructor (context) {\n        this.context = context;\n    }\n\n    dispatchBehaviour (behaviour, payload) {\n        const propPayload = Object.assign(payload);\n        const criteria = propPayload.criteria;\n        const data = this.context.data();\n\n        propPayload.action = behaviour;\n        const model = getDataModelFromIdentifiers(data, criteria);\n        data.propagate(model, propPayload, {\n            sourceId: this.context.alias()\n        });\n        return this;\n    }\n}\n","import { isEqual } from 'muze-utils';\nimport { ROWS, COLUMNS, COLOR, SHAPE, SIZE, MOUNT, DETAIL, DATA, CONFIG } from '../constants';\nimport { canvasOptions } from './local-options';\n\n/**\n * Instantiate high level components. Canvas knows what all high level component it has.\n * @nice-to-have dynamic high level components.\n *  - Is it even required ?\n *  - Reactive to source (canvas) streaming ?\n * @param {*} context Canvas instance\n * @return {Object.fArray>} Arrays of Title, visualGroup, Legend\n */\nexport const initCanvas = (context) => {\n    const reg = context._registry.components;\n\n    return [new reg.VisualGroup(context._registry, context.dependencies())];\n};\n\n/**\n *\n *\n * @memberof Canvas\n */\nexport const dispatchProps = (context) => {\n    const lifeCycleManager = context.dependencies().lifeCycleManager;\n    lifeCycleManager.notify({ client: context, action: 'beforeupdate' });\n    const visualGroup = context.composition().visualGroup;\n\n    visualGroup.lockModel();\n    const allOptions = context._allOptions;\n    for (const key in allOptions) {\n        const value = context[key]();\n        if (value !== null) {\n            visualGroup[key] && visualGroup[key](value);\n        }\n    }\n    visualGroup.unlockModel();\n\n    context._cachedProps = {};\n    lifeCycleManager.notify({ client: context, action: 'initialized' });\n    lifeCycleManager.notify({ client: context, action: 'updated' });\n};\n\n/**\n *\n *\n */\nexport const setupChangeListener = (context) => {\n    const store = context._store;\n\n    store.registerImmediateListener(MOUNT, () => {\n        const allOptions = Object.keys(context._allOptions);\n        const props = [...allOptions, ...Object.keys(canvasOptions)];\n        let equalityChecker = () => false;\n        store.registerChangeListener(props, (...params) => {\n            const updateProps = props.every((option, i) => {\n                switch (option) {\n                case ROWS:\n                case COLUMNS:\n                case DETAIL:\n                    equalityChecker = isEqual('Array');\n                    break;\n\n                case SHAPE:\n                case SIZE:\n                case COLOR:\n                case DATA:\n                case CONFIG:\n                    equalityChecker = isEqual('Object');\n                    break;\n                default:\n                    equalityChecker = () => true;\n                    break;\n                }\n                const oldVal = params[i][0];\n                const newVal = params[i][1];\n\n                return equalityChecker(oldVal, newVal);\n            });\n            // inform attached board to rerender\n            !updateProps && dispatchProps(context);\n            context.render();\n        }, true);\n    });\n};\n\n","import { GridLayout } from '@chartshq/layout';\nimport { transactor, Store, getUniqueId } from 'muze-utils';\nimport { RETINAL } from '../constants';\nimport TransactionSupport from '../transaction-support';\nimport { getRenderDetails, prepareLayout } from './layout-maker';\nimport { localOptions, canvasOptions } from './local-options';\nimport { renderComponents } from './renderer';\nimport GroupFireBolt from './firebolt';\nimport options from '../options';\nimport { initCanvas, setupChangeListener } from './helper';\n\n/**\n * This is the primary class which manages highlevel components like visualGroup, Titles, Legend, Extensions\n * (in future). Global level Muze functionality is subset this. Every time user works with an instance of\n * canvas in dom which provides instance level settings.\n *\n */\nexport default class Canvas extends TransactionSupport {\n\n    /**\n     * Creates reactive property accessors.\n     * - data\n     * - height\n     * - width\n     * - config\n     * This configs are retrieved from options.\n     */\n    constructor (globalDependencies) {\n        super();\n\n        this._allOptions = Object.assign({}, options, localOptions);\n        this._registry = {};\n        this._composition = {};\n        this._cachedProps = {};\n        this._alias = null;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        this._composition.layout = new GridLayout();\n        this._store = new Store({});\n\n        this.firebolt(new GroupFireBolt(this));\n\n        // Setters and getters will be mounted on this. The object will be mutated.\n        const [, store] = transactor(this, options, this._store.model);\n        transactor(this, localOptions, store);\n        transactor(this, canvasOptions, store);\n        this.dependencies(Object.assign({}, globalDependencies, this._dependencies));\n        this.alias(`canvas-${getUniqueId()}`);\n        this.title('', {});\n        this.subtitle('', {});\n        this.legend({});\n        this.color({});\n        this.shape({});\n        this.size({});\n        setupChangeListener(this);\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    layout (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().layout;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof Canvas\n     */\n    alias (...params) {\n        if (params.length) {\n            const visualGroup = this.composition().visualGroup;\n            this._alias = params[0];\n            visualGroup && visualGroup.alias(this.alias());\n            return this;\n        }\n        return this._alias;\n    }\n\n    /**\n     * Creates an instance initiated with given settings.\n     *\n     * @param {Object} initialSettings Initial settings to be populated in the model\n     * @param {Object} regEntry newly created instance with the initial settings\n     * @param {Object} globalDependencies dependencies which will be created only once in the page\n     *\n     * @return {Object} newly created instance with the initial settings\n     */\n    static withSettings (initialSettings, regEntry, globalDependencies) {\n        const instance = new Canvas(globalDependencies);\n\n        for (const key in initialSettings) {\n            instance[key](initialSettings[key]);\n        }\n        // set registry for instance\n        instance.registry(regEntry);\n        return instance;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @returns\n     * @memberof Canvas\n     */\n    static formalName () {\n        return 'canvas';\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Registry peoperty accessor\n     *\n     * @param {Object} reg plain old javascript object keyvalue pairs. Key containing module name and value contains\n     * module definition class. The reg object has to be flat object of level 1.\n     */\n    registry (...params) {\n        if (params.length) {\n            const components = Object.assign({}, params[0].components);\n            const componentSubRegistry = Object.assign({}, params[0].componentSubRegistry);\n\n            this._registry = { components, componentSubRegistry };\n            const initedComponents = initCanvas(this);\n            // @todo is it okay to continue this tight behaviour? If not use a resolver to resolve diff component type.\n            this._composition.visualGroup = initedComponents[0];\n\n            this.composition().visualGroup.alias(this.alias());\n            return this;\n        }\n        return this._registry;\n    }\n\n    /*\n     * Prepare dependencies for top level elements\n     */\n    dependencies (...param) {\n        if (param.length) {\n            this._dependencies = param[0];\n            return this;\n        }\n        // @todo prepare dependencies here.\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     * @param {*} lifeCycles\n     * @returns\n     * @memberof Canvas\n     */\n    lifeCycle (lifeCycles) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        if (lifeCycles) {\n            lifeCycleManager.register(lifeCycles);\n            return this;\n        }\n        return lifeCycleManager;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    legend (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().legend;\n    }\n\n    /**\n     *\n     *\n     * @param {*} eventName\n     * @returns\n     * @memberof Canvas\n     */\n    once (eventName) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        return lifeCycleManager.retrieve(eventName);\n    }\n\n    /**\n     * Internal function to trigger render, this method is cognizant of all the properties of the core modules and\n     * establish a passive reactivity. Passive reactivity is not always a bad thing :)\n     * @internal\n     */\n    render () {\n        const mount = this.mount();\n        const visGroup = this.composition().visualGroup;\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        // Get render details including arrangement and measurement\n        const { components, layoutConfig, measurement } = getRenderDetails(this, mount);\n\n        lifeCycleManager.notify({ client: this, action: 'beforedraw' });\n        // Prepare the layout by triggering the matrix calculation\n        prepareLayout(this.layout(), components, layoutConfig, measurement);\n        // Render each component\n        renderComponents(this, components, layoutConfig, measurement);\n        // Update life cycle\n        lifeCycleManager.notify({ client: this, action: 'drawn' });\n        const promises = [];\n        visGroup.matrixInstance().value.each((el) => {\n            promises.push(el.valueOf().done());\n        });\n        Promise.all(promises).then(() => {\n            this._renderedResolve();\n        });\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof Canvas\n     */\n    xAxes () {\n        return this.composition().visualGroup.getAxes('x');\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof Canvas\n     */\n    yAxes () {\n        return this.composition().visualGroup.getAxes('y');\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof Canvas\n     */\n    getRetinalAxes () {\n        const visualGroup = this.composition().visualGroup;\n        return visualGroup.getAxes(RETINAL);\n    }\n}\n","import { cellRegistry, SimpleCell } from '@chartshq/visual-cell';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { layerRegistry } from '@chartshq/visual-layer';\nimport { SimpleGroup, VisualGroup } from '@chartshq/visual-group';\n\nexport const COMPONENTS = {\n    VisualGroup,\n    VisualUnit\n};\nexport const SUBREGISTRIES = {\n    cellRegistry,\n    layerRegistry\n};\nexport const INTERFACES = {\n    SimpleGroup,\n    SimpleCell\n};\n\n","import { DEFAULT_LAYERS } from './defaults';\n\nexport default () => {\n    const reg = DEFAULT_LAYERS;\n    const regObj = {\n        set: (key, def) => {\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n    return regObj;\n};\n","import Smartlabel from 'fusioncharts-smartlabel';\nimport {\n    transactor,\n    enableChainedTransaction,\n    LifeCycleManager,\n    DataModel,\n    makeElement,\n    getClientPoint,\n    selectElement,\n    getEvent,\n    require,\n    DateTimeFormatter\n} from 'muze-utils';\nimport {\n    SurrogateSideEffect,\n    SpawnableSideEffect,\n    sideEffects,\n    PersistentBehaviour,\n    GenericBehaviour,\n    VolatileBehaviour,\n    behaviouralActions,\n    GenericSideEffect\n} from '@chartshq/muze-firebolt';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport pkg from '../package.json';\nimport * as operators from './operators';\nimport { actionModel as ActionModel } from './action-model';\nimport options from './options';\nimport { Canvas } from './canvas';\nimport { COMPONENTS, SUBREGISTRIES } from './default-registry';\nimport './muze.scss';\n\n// Cache singleton instances which should be included only once in a page\nconst globalCache = {};\nconst defaultRegistry = COMPONENTS;\n\nconst overrideRegistryDefinitions = (overrideRegistry, registry) => {\n    for (const prop in overrideRegistry) {\n        registry.set(prop, overrideRegistry[prop]);\n    }\n};\n\n/**\n * Entry point to renderer. Initializes an environment with settings and registries for canvas. This is a simple wrapper\n * over {@link Canvas} which enables common configuration passing to multiple such canvases.\n *\n * Everytime `muze()` is called it creates an environment. These environment supports subset of APIs of Canvas. If\n * common configuration is used to render multiple canvases then it can be set directly in the env. Like if data is\n * common across all the visulization then its better to set the data in env. When a canvas is created it receives all\n * those configuration from env.\n *\n * ```\n *  // Creates an environment\n *  const env = muze()\n *  // Set data property in environment, so that all the canvas created from the same environment gets this data\n *  // automatically\n *  env.data(dm);\n *  // Creates canvas, by default env pushes data to canvas instance\n *  const canvas = env.canvas();\n * ```\n *\n * If a property is set on both environment and canvas instance, property set on canvas instance gets more priority.\n *\n * @public\n * @module muze\n * @namespace Muze\n *\n * @return {Env} Instance of an environment\n */\nconst muze = () => {\n    // Setters and getters will be mounted on this. Object will be mutated.\n    const [env, globalStore] = transactor({}, options);\n    const components = Object.assign({}, COMPONENTS);\n    const componentSubRegistryDef = Object.assign(SUBREGISTRIES);\n    const componentSubRegistry = {};\n\n    for (const prop in componentSubRegistryDef) {\n        componentSubRegistry[prop] = componentSubRegistryDef[prop]();\n    }\n\n    // Apart form the setter getter, an instance method is injected to create real renderer instances\n    env.canvas = () => {\n        // Create a canvas instance with this settings\n        const settings = globalStore.serialize();\n        const canvas = Canvas.withSettings(settings, { /* registry */\n            components,\n            componentSubRegistry\n        }, env.globalDependencies());\n\n        // Whenever settings is changed canvas is updated\n        enableChainedTransaction(globalStore, canvas, Object.keys(settings));\n\n        return canvas;\n    };\n\n    // Global dependencies for for compositions. Only one copy of the same should be in the page\n    env.globalDependencies = () => {\n        if (!globalCache.smartlabel) {\n            globalCache.smartlabel = new Smartlabel(1, 'body');\n        }\n        return {\n            smartlabel: globalCache.smartlabel,\n            lifeCycleManager: new LifeCycleManager()\n        };\n    };\n\n    // Retrieves global settings. This getter is readonly so that user can't change this as change should happen\n    // only from setter to avoid unwanted sync issues.\n    env.settings = () => globalStore.serialize();\n\n    env.registry = (...overrideRegistry) => {\n        // Selectively copy the properties from COMPONENTS\n        if (overrideRegistry.length) {\n            for (const prop in overrideRegistry) {\n                if (prop in defaultRegistry) {\n                    components[prop] = overrideRegistry[prop];\n                }\n            }\n            return env;\n        }\n        return components;\n    };\n\n    env.cellRegistry = (...overrideRegistry) => {\n        const cellRegistry = componentSubRegistry.cellRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], cellRegistry);\n            return env;\n        }\n        return cellRegistry.get();\n    };\n\n    env.layerRegistry = (...overrideRegistry) => {\n        const layerRegistry = componentSubRegistry.layerRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], layerRegistry);\n            return env;\n        }\n        return layerRegistry.get();\n    };\n\n    return env;\n};\n\nconst SideEffects = {\n    sideEffects,\n    standards: {\n        SurrogateSideEffect,\n        SpawnableSideEffect,\n        GenericSideEffect\n    }\n};\n\nconst Behaviours = {\n    behaviouralActions,\n    standards: {\n        GenericBehaviour,\n        PersistentBehaviour,\n        VolatileBehaviour\n    }\n};\n\nmuze.DataModel = DataModel;\nmuze.pkg = pkg;\nmuze.SideEffects = SideEffects;\nmuze.ActionModel = ActionModel;\nmuze.layerFactory = layerFactory;\nmuze.Operators = operators;\nmuze.Behaviours = Behaviours;\nmuze.utils = {\n    getClientPoint,\n    getEvent,\n    makeElement,\n    selectElement,\n    DateTimeFormatter,\n    require\n};\n\nexport default muze;\n","/**\n * DataFormat Enum defines the format of the input data.\n * Based on the format of the data the respective adapter is loaded.\n *\n * @readonly\n * @enum {string}\n */\nconst DataFormat = {\n    FLAT_JSON: 'FlatJSON',\n    DSV_STR: 'DSVStr',\n    DSV_ARR: 'DSVArr',\n    AUTO: 'Auto'\n};\n\nexport default DataFormat;\n","/**\n * DimensionSubtype enum defines the sub types of the Dimensional Field.\n *\n * @readonly\n * @enum {string}\n */\nconst DimensionSubtype = {\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    GEO: 'geo'\n};\n\nexport default DimensionSubtype;\n","/**\n * MeasureSubtype enum defines the sub types of the Dimensional Field.\n *\n * @readonly\n * @enum {string}\n */\nconst MeasureSubtype = {\n    DISCRETE: 'discrete'\n};\n\nexport default MeasureSubtype;\n","/**\n * FieldType enum defines the high level field based on which visuals are controlled.\n * Measure in a high level is numeric field and Dimension in a high level is string field.\n *\n * @readonly\n * @enum {string}\n */\nconst FieldType = {\n    MEASURE: 'measure',\n    DIMENSION: 'dimension'\n};\n\nexport default FieldType;\n","/**\n * Filtering mode enum defines the filering modes of DataModel.\n *\n * @readonly\n * @enum {string}\n */\nconst FilteringMode = {\n    NORMAL: 'normal',\n    INVERSE: 'inverse',\n    ALL: 'all'\n};\n\nexport default FilteringMode;\n","/**\n * Iterates through the diffSet array and call the callback with the current\n * index.\n *\n * @param {string} rowDiffset - The row diffset string e.g. '0-4,6,10-13'.\n * @param {Function} callback - The callback function to be called with every index.\n */\nexport function rowDiffsetIterator (rowDiffset, callback) {\n    if (rowDiffset.length > 0) {\n        const rowDiffArr = rowDiffset.split(',');\n        rowDiffArr.forEach((diffStr) => {\n            const diffStsArr = diffStr.split('-');\n            const start = +(diffStsArr[0]);\n            const end = +(diffStsArr[1] || diffStsArr[0]);\n            if (end >= start) {\n                for (let i = start; i <= end; i += 1) {\n                    callback(i);\n                }\n            }\n        });\n    }\n}\n","import { DimensionSubtype } from '../enums';\nimport { rowDiffsetIterator } from '../operator/row-diffset-iterator';\n\n/**\n * In {@link DataModel}, every tabular data consists of column, a column is stored as field.\n * Field contains all the data for a given column in an array.\n *\n * Each record consists of several fields; the fields of all records form the columns.\n * Examples of fields: name, gender, sex etc.\n *\n * In DataModel, each field can have multiple attributes which describes its data and behaviour.\n * A field can have two types of data: Measure and Dimension.\n *\n * A Dimension Field is the context on which a data is categorized and the measure is the numerical values that\n * quantify the data set.\n * In short a dimension is the lens through which you are looking at your measure data.\n *\n * Refer to {@link Schema} to get info about possible field attributes.\n *\n * @public\n * @class\n */\nexport default class Field {\n    constructor(partialFeild, rowDiff) {\n        this._ref = partialFeild;\n        this._rowDiff = rowDiff;\n    }\n\n    sanitize () {\n        return this._ref.sanitize();\n    }\n\n    parsed (val) {\n        return this._ref.parsed(val);\n    }\n\n    domain() {\n        let data = [];\n        let domain = null;\n        data = this.getData();\n        if (this._ref.fieldType === 'dimension' && this._ref.subType() !== DimensionSubtype.TEMPORAL) {\n            domain = [...new Set(data)];\n        } else {\n            let minD = Math.min.apply(null, data);\n            let maxD = Math.max.apply(null, data);\n            domain = [minD, maxD];\n        }\n\n        return domain;\n    }\n\n    parse (val) {\n        return this._ref.parse(val);\n    }\n\n\n    clone(datas) {\n        return this._ref.clone(datas);\n    }\n\n    fieldName() {\n        return this._ref.fieldName();\n    }\n\n    type() {\n        return this._ref.type();\n    }\n\n    description() {\n        return this._ref.description();\n    }\n\n    get name() {\n        return this._ref.name;\n    }\n\n    // set name(name) {\n    //     this._ref.name = name;\n    // }\n\n    get schema() {\n        return this._ref.schema;\n    }\n\n    // set schema(schema) {\n    //     this._ref.schema = schema;\n    // }\n\n    get data() {\n        return this._ref.data;\n    }\n\n    // set data(schema) {\n    //     throw new Error('Not yet implemented!');\n    // }\n\n    subType() {\n        return this._ref.subType();\n    }\n\n    getMinDiff () {\n        return this._ref.getMinDiff();\n    }\n\n    /**\n     * Getter for unit value of the field.\n     *\n     * @return {string} Returns unit of the field.\n     */\n    unit() {\n        return this._ref.unit();\n    }\n\n    /**\n     * Getter for scale value of the field.\n     *\n     * @return {string} Returns scale of the field.\n     */\n    scale() {\n        return this._ref.scale();\n    }\n\n    /**\n     * Getter for aggregation function of the field.\n     *\n     * @return {Function} Returns aggregation function of the field.\n     */\n    defAggFn() {\n        return this._ref.defAggFn();\n    }\n\n    getData() {\n        let data = [];\n        rowDiffsetIterator(this._rowDiff, (i) => {\n            data.push(this._ref.data[i]);\n        });\n        return data;\n    }\n\n    bins() {\n        return this._ref.bins();\n    }\n}\n","/**\n * Creates a JS native date object from input\n *\n * @param {string | number | Date} date Input using which date object to be created\n * @return {Date} : JS native date object\n */\nfunction convertToNativeDate (date) {\n    if (date instanceof Date) {\n        return date;\n    }\n\n    return new Date(date);\n}\n/**\n * Apply padding before a number if its less than 1o. This is used when constant digit's number to be returned\n * between 0 - 99\n *\n * @param {number} n Input to be padded\n * @return {string} Padded number\n */\nfunction pad (n) {\n    return (n < 10) ? (`0${n}`) : n;\n}\n/*\n * DateFormatter utility to convert any date format to any other date format\n * DateFormatter parse a date time stamp specified by a user abiding by rules which are defined\n * by user in terms of token. It creates JS native date object from the user specified format.\n * That native date can also be displayed\n * in any specified format.\n * This utility class only takes care of format conversion only\n */\n\n/*\n * Escapes all the special character that are used in regular expression.\n * Like\n * RegExp.escape('sgfd-$') // Output: sgfd\\-\\$\n *\n * @param text {String} : text which is to be escaped\n */\nRegExp.escape = function (text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * DateTimeFormatter class to convert any user format of date time stamp to any other format\n * of date time stamp.\n *\n * @param {string} format Format of the date given. For the above date,\n * 'year: %Y, month: %b, day: %d'.\n * @class\n */\n/* istanbul ignore next */ function DateTimeFormatter (format) {\n    this.format = format;\n    this.dtParams = undefined;\n    this.nativeDate = undefined;\n}\n\n// The identifier of the tokens\nDateTimeFormatter.TOKEN_PREFIX = '%';\n\n// JS native Date constructor takes the date params (year, month, etc) in a certail sequence.\n// This defines the sequence of the date parameters in the constructor.\nDateTimeFormatter.DATETIME_PARAM_SEQUENCE = {\n    YEAR: 0,\n    MONTH: 1,\n    DAY: 2,\n    HOUR: 3,\n    MINUTE: 4,\n    SECOND: 5,\n    MILLISECOND: 6\n};\n\n/*\n * This is a default number parsing utility. It tries to parse a number in integer, if parsing is unsuccessful, it\n * gives back a default value.\n *\n * @param: defVal {Number} : Default no if the parsing to integer is not successful\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be parsed.\n */\nDateTimeFormatter.defaultNumberParser = function (defVal) {\n    return function (val) {\n        let parsedVal;\n        if (isFinite(parsedVal = parseInt(val, 10))) {\n            return parsedVal;\n        }\n\n        return defVal;\n    };\n};\n\n/*\n * This is a default number range utility. It tries to find an element in the range. If not found it returns a\n * default no as an index.\n *\n * @param: range {Array} : The list which is to be serached\n * @param: defVal {Number} : Default no if the serach and find does not return anything\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be found\n */\nDateTimeFormatter.defaultRangeParser = function (range, defVal) {\n    return (val) => {\n        let i;\n        let l;\n\n        if (!val) { return defVal; }\n\n        const nVal = val.toLowerCase();\n\n        for (i = 0, l = range.length; i < l; i++) {\n            if (range[i].toLowerCase() === nVal) {\n                return i;\n            }\n        }\n\n        if (i === undefined) {\n            return defVal;\n        }\n        return null;\n    };\n};\n\n/*\n * Defines the tokens which are supporter by the dateformatter. Using this definitation a value gets extracted from\n * the user specifed date string. This also formats the value for display purpose from native JS date.\n * The definition of each token contains the following named properties\n * {\n *     %token_name% : {\n *         name: name of the token, this is used in reverse lookup,\n *         extract: a function that returns the regular expression to extract that piece of information. All the\n *                  regex should be gouped by using ()\n *         parser: a function which receives value extracted by the above regex and parse it to get the date params\n *         formatter: a formatter function that takes milliseconds or JS Date object and format the param\n *                  represented by the token only.\n *     }\n * }\n *\n * @return {Object} : Definition of the all the supported tokens.\n */\nDateTimeFormatter.getTokenDefinitions = function () {\n    const daysDef = {\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ],\n        long: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ]\n    };\n    const monthsDef = {\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ],\n        long: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ]\n    };\n\n    const definitions = {\n        H: {\n            // 24 hours format\n            name: 'H',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n\n                return d.getHours().toString();\n            }\n        },\n        l: {\n            // 12 hours format\n            name: 'l',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours() % 12;\n\n                return (hours === 0 ? 12 : hours).toString();\n            }\n        },\n        p: {\n            // AM or PM\n            name: 'p',\n            index: 3,\n            extract () { return '(AM|PM)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'AM' : 'PM');\n            }\n        },\n        P: {\n            // am or pm\n            name: 'P',\n            index: 3,\n            extract () { return '(am|pm)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'am' : 'pm');\n            }\n        },\n        M: {\n            // Two digit minutes 00 - 59\n            name: 'M',\n            index: 4,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const mins = d.getMinutes();\n\n                return pad(mins);\n            }\n        },\n        S: {\n            // Two digit seconds 00 - 59\n            name: 'S',\n            index: 5,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const seconds = d.getSeconds();\n\n                return pad(seconds);\n            }\n        },\n        K: {\n            // Milliseconds\n            name: 'K',\n            index: 6,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const ms = d.getMilliseconds();\n\n                return ms.toString();\n            }\n        },\n        a: {\n            // Short name of day, like Mon\n            name: 'a',\n            index: 2,\n            extract () { return `(${daysDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.short[day]).toString();\n            }\n        },\n        A: {\n            // Long name of day, like Monday\n            name: 'A',\n            index: 2,\n            extract () { return `(${daysDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.long[day]).toString();\n            }\n        },\n        e: {\n            // 8 of March, 11 of November\n            name: 'e',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return day.toString();\n            }\n        },\n        d: {\n            // 08 of March, 11 of November\n            name: 'd',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return pad(day);\n            }\n        },\n        b: {\n            // Short month, like Jan\n            name: 'b',\n            index: 1,\n            extract () { return `(${monthsDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.short[month]).toString();\n            }\n        },\n        B: {\n            // Long month, like January\n            name: 'B',\n            index: 1,\n            extract () { return `(${monthsDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultNumberParser(monthsDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.long[month]).toString();\n            }\n        },\n        m: {\n            // Two digit month of year like 01 for January\n            name: 'm',\n            index: 1,\n            extract () { return '(\\\\d+)'; },\n            parser (val) { return DateTimeFormatter.defaultNumberParser()(val) - 1; },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return pad(month + 1);\n            }\n        },\n        y: {\n            // Short year like 90 for 1990\n            name: 'y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser (val) {\n                if (val) {\n                    const l = val.length;\n                    val = val.substring(l - 2, l);\n                }\n\n                return DateTimeFormatter.defaultNumberParser()(val);\n            },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                let year = d.getFullYear().toString();\n                let l;\n\n                if (year) {\n                    l = year.length;\n                    year = year.substring(l - 2, l);\n                }\n\n                return year;\n            }\n        },\n        Y: {\n            // Long year like 1990\n            name: 'Y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const year = d.getFullYear().toString();\n\n                return year;\n            }\n        }\n    };\n\n    return definitions;\n};\n\n/*\n * The tokens which works internally is not user friendly in terms of memorizing the names. This gives a formal\n * definition to the informal notations.\n *\n * @return {Object} : Formal definition of the tokens\n */\nDateTimeFormatter.getTokenFormalNames = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n\n    return {\n        HOUR: definitions.H,\n        HOUR_12: definitions.l,\n        AMPM_UPPERCASE: definitions.p,\n        AMPM_LOWERCASE: definitions.P,\n        MINUTE: definitions.M,\n        SECOND: definitions.S,\n        SHORT_DAY: definitions.a,\n        LONG_DAY: definitions.A,\n        DAY_OF_MONTH: definitions.e,\n        DAY_OF_MONTH_CONSTANT_WIDTH: definitions.d,\n        SHORT_MONTH: definitions.b,\n        LONG_MONTH: definitions.B,\n        MONTH_OF_YEAR: definitions.m,\n        SHORT_YEAR: definitions.y,\n        LONG_YEAR: definitions.Y\n    };\n};\n\n/*\n * This defines the rules and declares dependencies that resolves a date parameter (year, month etc) from\n * the date time parameter array.\n *\n * @return {Object} : An object that contains dependencies and a resolver function. The dependencies values are fed\n *                  to the resolver function in that particular sequence only.\n */\nDateTimeFormatter.tokenResolver = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const defaultResolver = (...args) => { // eslint-disable-line require-jsdoc\n        let i = 0;\n        let arg;\n        let targetParam;\n        const l = args.length;\n\n        for (; i < l; i++) {\n            arg = args[i];\n            if (args[i]) {\n                targetParam = arg;\n            }\n        }\n\n        if (!targetParam) { return null; }\n\n        return targetParam[0].parser(targetParam[1]);\n    };\n\n    return {\n        YEAR: [definitions.y, definitions.Y,\n            defaultResolver\n        ],\n        MONTH: [definitions.b, definitions.B, definitions.m,\n            defaultResolver\n        ],\n        DAY: [definitions.a, definitions.A, definitions.e, definitions.d,\n            defaultResolver\n        ],\n        HOUR: [definitions.H, definitions.l, definitions.p, definitions.P,\n            function (hourFormat24, hourFormat12, ampmLower, ampmUpper) {\n                let targetParam;\n                let amOrpm;\n                let isPM;\n                let val;\n\n                if (hourFormat12 && (amOrpm = (ampmLower || ampmUpper))) {\n                    if (amOrpm[0].parser(amOrpm[1]) === 'pm') {\n                        isPM = true;\n                    }\n\n                    targetParam = hourFormat12;\n                } else if (hourFormat12) {\n                    targetParam = hourFormat12;\n                } else {\n                    targetParam = hourFormat24;\n                }\n\n                if (!targetParam) { return null; }\n\n                val = targetParam[0].parser(targetParam[1]);\n                if (isPM) {\n                    val += 12;\n                }\n                return val;\n            }\n        ],\n        MINUTE: [definitions.M,\n            defaultResolver\n        ],\n        SECOND: [definitions.S,\n            defaultResolver\n        ]\n    };\n};\n\n/*\n * Finds token from the format rule specified by a user.\n * @param format {String} : The format of the input date specified by the user\n * @return {Array} : An array of objects which contains the available token and their occurence index in the format\n */\nDateTimeFormatter.findTokens = function (format) {\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenLiterals = Object.keys(definitions);\n    const occurrence = [];\n    let i;\n    let forwardChar;\n\n    while ((i = format.indexOf(tokenPrefix, i + 1)) >= 0) {\n        forwardChar = format[i + 1];\n        if (tokenLiterals.indexOf(forwardChar) === -1) { continue; }\n\n        occurrence.push({\n            index: i,\n            token: forwardChar\n        });\n    }\n\n    return occurrence;\n};\n\n/*\n * Format any JS date to a specified date given by user.\n *\n * @param date {Number | Date} : The date object which is to be formatted\n * @param format {String} : The format using which the date will be formatted for display\n */\nDateTimeFormatter.formatAs = function (date, format) {\n    const nDate = convertToNativeDate(date);\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    let formattedStr = String(format);\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    let token;\n    let formattedVal;\n    let i;\n    let l;\n\n    for (i = 0, l = occurrence.length; i < l; i++) {\n        token = occurrence[i].token;\n        formattedVal = definitions[token].formatter(nDate);\n        formattedStr = formattedStr.replace(new RegExp(tokenPrefix + token, 'g'), formattedVal);\n    }\n\n    return formattedStr;\n};\n\n/*\n * Parses the user specified date string to extract the date time params.\n *\n * @return {Array} : Value of date time params in an array [year, month, day, hour, minutes, seconds, milli]\n */\nDateTimeFormatter.prototype.parse = function (dateTimeStamp, options) {\n    const tokenResolver = DateTimeFormatter.tokenResolver();\n    const dtParams = this.extractTokenValue(dateTimeStamp);\n    const dtParamSeq = DateTimeFormatter.DATETIME_PARAM_SEQUENCE;\n    const noBreak = options && options.noBreak;\n    const dtParamArr = [];\n    const args = [];\n    let resolverKey;\n    let resolverParams;\n    let resolverFn;\n    let val;\n    let i;\n    let param;\n    let resolvedVal;\n    let l;\n\n    for (resolverKey in tokenResolver) {\n        if (!{}.hasOwnProperty.call(tokenResolver, resolverKey)) { continue; }\n\n        args.length = 0;\n        resolverParams = tokenResolver[resolverKey];\n        resolverFn = resolverParams.splice(resolverParams.length - 1, 1)[0];\n\n        for (i = 0, l = resolverParams.length; i < l; i++) {\n            param = resolverParams[i];\n            val = dtParams[param.name];\n\n            if (val === undefined) {\n                args.push(null);\n            } else {\n                args.push([param, val]);\n            }\n        }\n\n        resolvedVal = resolverFn.apply(this, args);\n\n        if ((resolvedVal === undefined || resolvedVal === null) && !noBreak) {\n            break;\n        }\n\n        dtParamArr[dtParamSeq[resolverKey]] = resolvedVal;\n    }\n\n    return dtParamArr;\n};\n\n/*\n * Extract the value of the token from user specified date time string.\n *\n * @return {Object} : An key value pair which contains the tokens as key and value as pair\n */\nDateTimeFormatter.prototype.extractTokenValue = function (dateTimeStamp) {\n    const format = this.format;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const tokenObj = {};\n\n    let lastOccurrenceIndex;\n    let occObj;\n    let occIndex;\n    let targetText;\n    let regexFormat;\n\n    let l;\n    let i;\n\n    regexFormat = String(format);\n\n    const tokenArr = occurrence.map(obj => obj.token);\n    const occurrenceLength = occurrence.length;\n    for (i = occurrenceLength - 1; i >= 0; i--) {\n        occIndex = occurrence[i].index;\n\n        if (occIndex + 1 === regexFormat.length - 1) {\n            lastOccurrenceIndex = occIndex;\n            continue;\n        }\n\n        if (lastOccurrenceIndex === undefined) {\n            lastOccurrenceIndex = regexFormat.length;\n        }\n\n        targetText = regexFormat.substring(occIndex + 2, lastOccurrenceIndex);\n        regexFormat = regexFormat.substring(0, occIndex + 2) +\n            RegExp.escape(targetText) +\n            regexFormat.substring(lastOccurrenceIndex, regexFormat.length);\n\n        lastOccurrenceIndex = occIndex;\n    }\n\n    for (i = 0; i < occurrenceLength; i++) {\n        occObj = occurrence[i];\n        regexFormat = regexFormat.replace(tokenPrefix + occObj.token, definitions[occObj.token].extract());\n    }\n\n    const extractValues = dateTimeStamp.match(new RegExp(regexFormat)) || [];\n    extractValues.shift();\n\n    for (i = 0, l = tokenArr.length; i < l; i++) {\n        tokenObj[tokenArr[i]] = extractValues[i];\n    }\n    return tokenObj;\n};\n\n/*\n * Give back the JS native date formed from  user specified date string\n *\n * @return {Date} : Native JS Date\n */\nDateTimeFormatter.prototype.getNativeDate = function (dateTimeStamp) {\n    if (dateTimeStamp instanceof Date) {\n        return dateTimeStamp;\n    } else if (isFinite(dateTimeStamp) && !!this.format) {\n        return new Date(dateTimeStamp);\n    }\n\n    const dtParams = this.dtParams = this.parse(dateTimeStamp);\n\n    dtParams.unshift(null);\n    this.nativeDate = new (Function.prototype.bind.apply(Date, dtParams))();\n    return this.nativeDate;\n};\n\n/*\n * Represents JS native date to a user specified format.\n *\n * @param format {String} : The format according to which the date is to be represented\n * @return {String} : The formatted date string\n */\nDateTimeFormatter.prototype.formatAs = function (format, dateTimeStamp) {\n    let nativeDate;\n\n    if (dateTimeStamp) {\n        nativeDate = this.nativeDate = this.getNativeDate(dateTimeStamp);\n    } else if (!(nativeDate = this.nativeDate)) {\n        nativeDate = this.getNativeDate(dateTimeStamp);\n    }\n\n    return DateTimeFormatter.formatAs(nativeDate, format);\n};\n\nexport { DateTimeFormatter as default };\n","/**\n * The utility function to calculate major column.\n *\n * @param {Object} store - The store object.\n * @return {Function} Returns the push function.\n */\nexport default (store) => {\n    let i = 0;\n    return (...fields) => {\n        fields.forEach((val, fieldIndex) => {\n            if (!(store[fieldIndex] instanceof Array)) {\n                store[fieldIndex] = Array.from({ length: i });\n            }\n            store[fieldIndex].push(val);\n        });\n        i++;\n    };\n};\n","/* eslint-disable */\nconst OBJECTSTRING = 'object';\nconst objectToStrFn = Object.prototype.toString;\nconst objectToStr = '[object Object]';\nconst arrayToStr = '[object Array]';\n\nfunction checkCyclicRef(obj, parentArr) {\n    let i = parentArr.length;\n    let bIndex = -1;\n\n    while (i) {\n        if (obj === parentArr[i]) {\n            bIndex = i;\n            return bIndex;\n        }\n        i -= 1;\n    }\n\n    return bIndex;\n}\n\nfunction merge(obj1, obj2, skipUndef, tgtArr, srcArr) {\n    var item,\n        srcVal,\n        tgtVal,\n        str,\n        cRef;\n    // check whether obj2 is an array\n    // if array then iterate through it's index\n    // **** MOOTOOLS precution\n\n    if (!srcArr) {\n        tgtArr = [obj1];\n        srcArr = [obj2];\n    }\n    else {\n        tgtArr.push(obj1);\n        srcArr.push(obj2);\n    }\n\n    if (obj2 instanceof Array) {\n        for (item = 0; item < obj2.length; item += 1) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (typeof tgtVal !== OBJECTSTRING) {\n                if (!(skipUndef && tgtVal === undefined)) {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                    srcVal = obj1[item] = tgtVal instanceof Array ? [] : {};\n                }\n                cRef = checkCyclicRef(tgtVal, srcArr);\n                if (cRef !== -1) {\n                    srcVal = obj1[item] = tgtArr[cRef];\n                }\n                else {\n                    merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                }\n            }\n        }\n    }\n    else {\n        for (item in obj2) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (tgtVal !== null && typeof tgtVal === OBJECTSTRING) {\n                // Fix for issue BUG: FWXT-602\n                // IE < 9 Object.prototype.toString.call(null) gives\n                // '[object Object]' instead of '[object Null]'\n                // that's why null value becomes Object in IE < 9\n                str = objectToStrFn.call(tgtVal);\n                if (str === objectToStr) {\n                    if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                        srcVal = obj1[item] = {};\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else if (str === arrayToStr) {\n                    if (srcVal === null || !(srcVal instanceof Array)) {\n                        srcVal = obj1[item] = [];\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (skipUndef && tgtVal === undefined) {\n                    continue;\n                }\n                obj1[item] = tgtVal;\n            }\n        }\n    }\n    return obj1;\n}\n\n\nfunction extend2 (obj1, obj2, skipUndef) {\n    //if none of the arguments are object then return back\n    if (typeof obj1 !== OBJECTSTRING && typeof obj2 !== OBJECTSTRING) {\n        return null;\n    }\n\n    if (typeof obj2 !== OBJECTSTRING || obj2 === null) {\n        return obj1;\n    }\n\n    if (typeof obj1 !== OBJECTSTRING) {\n        obj1 = obj2 instanceof Array ? [] : {};\n    }\n    merge(obj1, obj2, skipUndef);\n    return obj1;\n}\n\nexport { extend2 as default };\n","/**\n * Checks whether the value is an array.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an array otherwise returns false.\n */\nexport function isArray (val) {\n    return Array.isArray(val);\n}\n\n/**\n * Checks whether the value is an object.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an object otherwise returns false.\n */\nexport function isObject (val) {\n    return val === Object(val);\n}\n\n/**\n * Checks whether the value is a string value.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is a string value otherwise returns false.\n */\nexport function isString (val) {\n    return typeof val === 'string';\n}\n\n/**\n * Checks whether the value is callable.\n *\n * @param {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is callable otherwise returns false.\n */\nexport function isCallable (val) {\n    return typeof val === 'function';\n}\n\n/**\n * Returns the unique values from the input array.\n *\n * @param {Array} data - The input array.\n * @return {Array} Returns a new array of unique values.\n */\nexport function uniqueValues (data) {\n    return [...new Set(data)];\n}\n\nexport const getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\nexport const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function isArrEqual(arr1, arr2) {\n    if (!isArray(arr1) || !isArray(arr2)) {\n        return arr1 === arr2;\n    }\n\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function formatNumber(val) {\n    return val;\n}\n","import { FieldType } from './enums';\nimport { getUniqueId } from './utils';\n\nconst fieldStore = {\n    data: {},\n\n    createNamespace (fieldArr, name) {\n        const dataId = name || getUniqueId();\n        this.data[dataId] = {\n            name: dataId,\n            fields: fieldArr,\n            fieldsObj () {\n                const retObj = {};\n                this.fields.forEach((field) => {\n                    retObj[field.name] = field;\n                });\n                return retObj;\n            },\n            getMeasure () {\n                const retObj = {};\n                this.fields.forEach((field) => {\n                    if (field.schema.type === FieldType.MEASURE) {\n                        retObj[field.name] = field;\n                    }\n                });\n                return retObj;\n            },\n            getDimension () {\n                const retObj = {};\n                this.fields.forEach((field) => {\n                    if (field.schema.type === FieldType.DIMENSION) {\n                        retObj[field.name] = field;\n                    }\n                });\n                return retObj;\n            },\n        };\n        return this.data[dataId];\n    },\n};\n\nexport default fieldStore;\n","/**\n * The wrapper class on top of the primitive value of a field.\n *\n * @todo Need to have support for StringValue, NumberValue, DateTimeValue\n * and GeoValue. These types should expose predicate API mostly.\n */\nclass Value {\n\n  /**\n   * Creates new Value instance.\n   *\n   * @param {*} val - the primitive value from the field cell.\n   * @param {string | Field} field - The field from which the value belongs.\n   */\n    constructor (val, field) {\n        Object.defineProperty(this, '_value', {\n            enumerable: false,\n            configurable: false,\n            writable: false,\n            value: val\n        });\n\n        this.field = field;\n    }\n\n  /**\n   * Returns the field value.\n   *\n   * @return {*} Returns the current value.\n   */\n    get value () {\n        return this._value;\n    }\n\n  /**\n   * Converts to human readable string.\n   *\n   * @override\n   * @return {string} Returns a human readable string of the field value.\n   *\n   */\n    toString () {\n        return String(this.value);\n    }\n\n  /**\n   * Returns the value of the field.\n   *\n   * @override\n   * @return {*} Returns the field value.\n   */\n    valueOf () {\n        return this.value;\n    }\n}\n\nexport default Value;\n","import { rowDiffsetIterator } from './row-diffset-iterator';\n\n/**\n * Creates bin f from the data and the supplied config.\n *\n * @param {Array} data - The input data.\n * @param {Object} config - The config object.\n * @param {number} config.binSize - The size of the bin.\n * @param {number} config.numOfBins - The number of bins to be created.\n * @return {Array} Returns an array of created bins.\n */\nexport function createBinnedFieldData (field, rowDiffset, config) {\n    let { buckets, binCount, binSize, start } = config;\n    let dataStore = [];\n    let binnedData = [];\n    let [min, max] = field.domain();\n    let oriMax = max;\n    let stops = [];\n    let binEnd;\n    let prevEndpoint;\n    let mid;\n    let range;\n\n    // create dataStore with index according to rowDiffSet\n    rowDiffsetIterator(rowDiffset, (i) => {\n        dataStore.push({\n            data: field.data[i],\n            index: i\n        });\n    });\n\n    // create buckets if buckets not given\n    if (!buckets) {\n        max += 1;\n        binSize = binSize || (max - min) / binCount;\n\n        const extraBinELm = (max - min) % binSize;\n        if (!binCount && extraBinELm !== 0) {\n            max = max + binSize - extraBinELm;\n        }\n        binEnd = min + binSize;\n        while (binEnd <= max) {\n            stops.push(binEnd);\n            binEnd += binSize;\n        }\n        start = start || min;\n        buckets = { start, stops };\n    }\n\n    // initialize intial bucket start\n    prevEndpoint = buckets.start === 0 ? 0 : buckets.start || min;\n\n    // mark each data in dataStore to respective buckets\n    buckets.stops.forEach((endPoint) => {\n        let tempStore = dataStore.filter(datum => datum.data >= prevEndpoint && datum.data < endPoint);\n        tempStore.forEach((datum) => { binnedData[datum.index] = `${prevEndpoint}-${endPoint}`; });\n        prevEndpoint = endPoint;\n    });\n\n    // create a bin for values less than start\n    dataStore.filter(datum => datum.data < buckets.start)\n                    .forEach((datum) => { binnedData[datum.index] = `${min}-${buckets.start}`; });\n\n    // create a bin for values more than end\n    dataStore.filter(datum => datum.data >= buckets.stops[buckets.stops.length - 1])\n                    .forEach((datum) =>\n                    { binnedData[datum.index] = `${buckets.stops[buckets.stops.length - 1]}-${oriMax}`; });\n\n    // create range and mid\n    // append start to bucket marks\n    buckets.stops.unshift(buckets.start);\n    range = new Set(buckets.stops);\n\n    // Add endpoints to buckets marks if not added\n    if (min < buckets.start) { range.add(min); }\n    if (oriMax > buckets.stops[buckets.stops.length - 1]) { range.add(oriMax); }\n\n    range = [...range].sort((a, b) => a - b);\n    mid = [];\n\n    for (let i = 1; i < range.length; i++) {\n        mid.push((range[i - 1] + range[i]) / 2);\n    }\n    return { data: binnedData, mid, range };\n}\n","export { DataFormat, FilteringMode } from '../enums';\n/**\n * The event name for data propagation.\n */\nexport const PROPAGATION = 'propagation';\n\n/**\n * The name of the unique row id column in DataModel.\n */\nexport const ROW_ID = '__id__';\n\n/**\n * The enums for operation names performed on DataModel.\n */\nexport const DM_DERIVATIVES = {\n    SELECT: 'select',\n    PROJECT: 'project',\n    GROUPBY: 'group',\n    COMPOSE: 'compose',\n    CAL_VAR: 'calculatedVariable',\n    BIN: 'bin'\n};\n\nexport const JOINS = {\n    CROSS: 'cross',\n    LEFTOUTER: 'leftOuter',\n    RIGHTOUTER: 'rightOuter',\n    NATURAL: 'natural',\n    FULLOUTER: 'fullOuter'\n};\n\nexport const LOGICAL_OPERATORS = {\n    AND: 'and',\n    OR: 'or'\n};\n","/* eslint-disable default-case */\nimport { DM_DERIVATIVES } from '../constants';\n\n/**\n * iterate the children and call the callback for each\n *\n * @param {DataModel} datamodel\n * @param {function} callback\n * @param {DM_DERIVATIVES} operation\n */\nfunction childIterator (datamodel, callback, operation) {\n    const children = datamodel._children;\n    children.forEach((child) => {\n        if (child._derivation\n            && child._derivation.length === 1) {\n            switch (operation) {\n            case DM_DERIVATIVES.SELECT:\n                if (child._derivation[0].op === DM_DERIVATIVES.SELECT) {\n                    callback(child, child._derivation[0].criteria);\n                }\n                break;\n            case DM_DERIVATIVES.PROJECT:\n                if (child._derivation[0].op === DM_DERIVATIVES.PROJECT) {\n                    callback(child, child._derivation[0].meta.actualProjField);\n                }\n                break;\n            case DM_DERIVATIVES.GROUPBY:\n                if (child._derivation[0].op === DM_DERIVATIVES.GROUPBY) {\n                    callback(child,\n                        { groupByString: child._derivation[0].meta.groupByString,\n                            reducer: child._derivation[0].criteria });\n                }\n                break;\n            case DM_DERIVATIVES.CAL_VAR:\n                if (child._derivation[0].op === DM_DERIVATIVES.CAL_VAR) {\n                    let params = [child._derivation[0].meta.config, [child._derivation[0].meta.fields,\n                        child._derivation[0].criteria]];\n                    callback(child, ...params);\n                }\n                break;\n            }\n        }\n    });\n}\n\n/**\n * Invokes a callback for every child created by a selection operation on a DataModel.\n *\n * @param {DataModel} datamodel - The input DataModel instance.\n * @param {Function} callback - The callback to be invoked on each child. The parameters\n * provided to the callback are the child DataModel instance and the selection\n * function used to create it.\n */\nexport function selectIterator (datamodel, callback) {\n    childIterator(datamodel, callback, DM_DERIVATIVES.SELECT);\n}\n\n/**\n * Invokes a callback for every measure child of a DataModel.\n *\n * @param {DataModel} datamodel - The input DataModel instance.\n * @param {Function} callback - The callback to be invoked on each measure child. The parameters\n * provided to the callback are the child DataModel instance and the child params.\n */\nexport function calculatedVariableIterator (datamodel, callback) {\n    childIterator(datamodel, callback, DM_DERIVATIVES.CAL_VAR);\n}\n\n/**\n * Invokes a callback for every projected child of a DataModel.\n *\n * @param {DataModel} datamodel - The input DataModel instance.\n * @param {Function} callback - The callback to be invoked on each projected child. The parameters\n * provided to the callback are the child DataModel instance and the\n * projection string.\n */\nexport function projectIterator (datamodel, callback) {\n    childIterator(datamodel, callback, DM_DERIVATIVES.PROJECT);\n}\n\n/**\n * Invokes a callback over the children created by a groupBy\n * operation on a DataModel.\n *\n * @param {DataModel} datamodel - The input DataModel instance.\n * @param {Function} callback - The callback to be invoked. The parameters\n * provided to the callback are the child DataModel instance and the groupBy string used to create it.\n */\nexport function groupByIterator (datamodel, callback) {\n    childIterator(datamodel, callback, DM_DERIVATIVES.GROUPBY);\n}\n\n","/**\n * The helper function that returns an array of common schema\n * from two fieldStore instances.\n *\n * @param {FieldStore} fs1 - The first FieldStore instance.\n * @param {FieldStore} fs2 - The second FieldStore instance.\n * @return {Array} An array containing the common schema.\n */\nexport function getCommonSchema (fs1, fs2) {\n    const retArr = [];\n    const fs1Arr = [];\n    fs1.fields.forEach((field) => {\n        fs1Arr.push(field.schema.name);\n    });\n    fs2.fields.forEach((field) => {\n        if (fs1Arr.indexOf(field.schema.name) !== -1) {\n            retArr.push(field.schema.name);\n        }\n    });\n    return retArr;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { getCommonSchema } from './get-common-schema';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { JOINS } from '../constants';\nimport { prepareJoinData } from '../helper';\n/**\n * Default filter function for crossProduct.\n *\n * @return {boolean} Always returns true.\n */\nfunction defaultFilterFn() { return true; }\n\n/**\n * Implementation of cross product operation between two DataModel instances.\n * It internally creates the data and schema for the new DataModel.\n *\n * @param {DataModel} dataModel1 - The left DataModel instance.\n * @param {DataModel} dataModel2 - The right DataModel instance.\n * @param {Function} filterFn - The filter function which is used to filter the tuples.\n * @param {boolean} [replaceCommonSchema=false] - The flag if the common name schema should be there.\n * @return {DataModel} Returns The newly created DataModel instance from the crossProduct operation.\n */\nexport function crossProduct (dm1, dm2, filterFn, replaceCommonSchema = false, jointype = JOINS.CROSS) {\n    const schema = [];\n    const data = [];\n    const applicableFilterFn = filterFn || defaultFilterFn;\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreName = dm1FieldStore.name;\n    const dm2FieldStoreName = dm2FieldStore.name;\n    const name = `${dm1FieldStore.name}.${dm2FieldStore.name}`;\n    const commonSchemaList = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    if (dm1FieldStoreName === dm2FieldStoreName) {\n        throw new Error('DataModels must have different alias names');\n    }\n    // Here prepare the schema\n    dm1FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema);\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1 && !replaceCommonSchema) {\n            tmpSchema.name = `${dm1FieldStore.name}.${tmpSchema.name}`;\n        }\n        schema.push(tmpSchema);\n    });\n    dm2FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema);\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1) {\n            if (!replaceCommonSchema) {\n                tmpSchema.name = `${dm2FieldStore.name}.${tmpSchema.name}`;\n                schema.push(tmpSchema);\n            }\n        } else {\n            schema.push(tmpSchema);\n        }\n    });\n\n    // Here prepare Data\n    rowDiffsetIterator(dm1._rowDiffset, (i) => {\n        let rowAdded = false;\n        let rowPosition;\n        rowDiffsetIterator(dm2._rowDiffset, (ii) => {\n            const tuple = [];\n            const userArg = {};\n            userArg[dm1FieldStoreName] = {};\n            userArg[dm2FieldStoreName] = {};\n            dm1FieldStore.fields.forEach((field) => {\n                tuple.push(field.data[i]);\n                userArg[dm1FieldStoreName][field.name] = field.data[i];\n            });\n            dm2FieldStore.fields.forEach((field) => {\n                if (!(commonSchemaList.indexOf(field.schema.name) !== -1 && replaceCommonSchema)) {\n                    tuple.push(field.data[ii]);\n                }\n                userArg[dm2FieldStoreName][field.name] = field.data[ii];\n            });\n            const dm1Fields = prepareJoinData(userArg[dm1FieldStoreName]);\n            const dm2Fields = prepareJoinData(userArg[dm2FieldStoreName]);\n            if (applicableFilterFn(dm1Fields, dm2Fields)) {\n                const tupleObj = {};\n                tuple.forEach((cellVal, iii) => {\n                    tupleObj[schema[iii].name] = cellVal;\n                });\n                if (rowAdded && JOINS.CROSS !== jointype) {\n                    data[rowPosition] = tupleObj;\n                }\n                else {\n                    data.push(tupleObj);\n                    rowAdded = true;\n                    rowPosition = i;\n                }\n            }\n            else if ((jointype === JOINS.LEFTOUTER || jointype === JOINS.RIGHTOUTER) && !rowAdded) {\n                const tupleObj = {};\n                let len = dm1FieldStore.fields.length - 1;\n                tuple.forEach((cellVal, iii) => {\n                    if (iii <= len) {\n                        tupleObj[schema[iii].name] = cellVal;\n                    }\n                    else {\n                        tupleObj[schema[iii].name] = null;\n                    }\n                });\n                rowAdded = true;\n                rowPosition = i;\n                data.push(tupleObj);\n            }\n        });\n    });\n\n    return new DataModel(data, schema, { name });\n}\n","/**\n * The default sort function.\n *\n * @param {*} a - The first value.\n * @param {*} b - The second value.\n * @return {number} Returns the comparison result e.g. 1 or 0 or -1.\n */\nfunction defSortFn (a, b) {\n    const a1 = `${a}`;\n    const b1 = `${b}`;\n    if (a1 < b1) {\n        return -1;\n    }\n    if (a1 > b1) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * The helper function for merge sort which creates the sorted array\n * from the two halves of the input array.\n *\n * @param {Array} arr - The target array which needs to be merged.\n * @param {number} lo - The starting index of the first array half.\n * @param {number} mid - The ending index of the first array half.\n * @param {number} hi - The ending index of the second array half.\n * @param {Function} sortFn - The sort function.\n */\nfunction merge (arr, lo, mid, hi, sortFn) {\n    const mainArr = arr;\n    const auxArr = [];\n    for (let i = lo; i <= hi; i += 1) {\n        auxArr[i] = mainArr[i];\n    }\n    let a = lo;\n    let b = mid + 1;\n\n    for (let i = lo; i <= hi; i += 1) {\n        if (a > mid) {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        } else if (b > hi) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else if (sortFn(auxArr[a], auxArr[b]) <= 0) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        }\n    }\n}\n\n/**\n * The helper function for merge sort which would be called\n * recursively for sorting the array halves.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {number} lo - The starting index of the array half.\n * @param {number} hi - The ending index of the array half.\n * @param {Function} sortFn - The sort function.\n * @return {Array} Returns the target array itself.\n */\nfunction sort (arr, lo, hi, sortFn) {\n    if (hi === lo) { return arr; }\n\n    const mid = lo + Math.floor((hi - lo) / 2);\n    sort(arr, lo, mid, sortFn);\n    sort(arr, mid + 1, hi, sortFn);\n    merge(arr, lo, mid, hi, sortFn);\n\n    return arr;\n}\n\n/**\n * The implementation of merge sort.\n * It is used in DataModel for stable sorting as it is not sure\n * what the sorting algorithm used by browsers is stable or not.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {Function} [sortFn=defSortFn] - The sort function.\n * @return {Array} Returns the input array itself in sorted order.\n */\nexport function mergeSort (arr, sortFn = defSortFn) {\n    if (arr.length > 1) {\n        sort(arr, 0, arr.length - 1, sortFn);\n    }\n    return arr;\n}\n","import { FieldType, DimensionSubtype } from '../enums';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { mergeSort } from './merge-sort';\nimport { fieldInSchema } from '../helper';\nimport { isCallable, isArray, } from '../utils';\n/**\n * Generates the sorting functions to sort the data of a DataModel instance\n * according to the input data type.\n *\n * @param {string} dataType - The data type e.g. 'measure', 'datetime' etc.\n * @param {string} sortType - The sorting order i.e. 'asc' or 'desc'.\n * @param {integer} index - The index of the data which will be sorted.\n * @return {Function} Returns the the sorting function.\n */\nfunction getSortFn (dataType, sortType, index) {\n    let retFunc;\n    switch (dataType) {\n    case FieldType.MEASURE:\n    case DimensionSubtype.TEMPORAL:\n        if (sortType === 'desc') {\n            retFunc = (a, b) => b[index] - a[index];\n        } else {\n            retFunc = (a, b) => a[index] - b[index];\n        }\n        break;\n    default:\n        retFunc = (a, b) => {\n            const a1 = `${a[index]}`;\n            const b1 = `${b[index]}`;\n            if (a1 < b1) {\n                return sortType === 'desc' ? 1 : -1;\n            }\n            if (a1 > b1) {\n                return sortType === 'desc' ? -1 : 1;\n            }\n            return 0;\n        };\n    }\n    return retFunc;\n}\n\n/**\n * Groups the data according to the specified target field.\n *\n * @param {Array} data - The input data array.\n * @param {number} fieldIndex - The target field index within schema array.\n * @return {Array} Returns an array containing the grouped data.\n */\nfunction groupData(data, fieldIndex) {\n    const hashMap = new Map();\n    const groupedData = [];\n\n    data.forEach((datum) => {\n        const fieldVal = datum[fieldIndex];\n        if (hashMap.has(fieldVal)) {\n            groupedData[hashMap.get(fieldVal)][1].push(datum);\n        } else {\n            groupedData.push([fieldVal, [datum]]);\n            hashMap.set(fieldVal, groupedData.length - 1);\n        }\n    });\n\n    return groupedData;\n}\n\n/**\n * Creates the argument value used for sorting function when sort is done\n * with another fields.\n *\n * @param {Array} groupedDatum - The grouped datum for a single dimension field value.\n * @param {Array} targetFields - An array of the sorting fields.\n * @param {Array} targetFieldDetails - An array of the sorting field details in schema.\n * @return {Object} Returns an object containing the value of sorting fields and the target field name.\n */\nfunction createSortingFnArg(groupedDatum, targetFields, targetFieldDetails) {\n    const arg = {\n        label: groupedDatum[0]\n    };\n\n    targetFields.reduce((acc, next, idx) => {\n        acc[next] = groupedDatum[1].map(datum => datum[targetFieldDetails[idx].index]);\n        return acc;\n    }, arg);\n\n    return arg;\n}\n\n/**\n * Sorts the data before return in dataBuilder.\n *\n * @param {Object} dataObj - An object containing the data and schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nfunction sortData(dataObj, sortingDetails) {\n    const { data, schema } = dataObj;\n    let fieldName;\n    let sortMeta;\n    let fDetails;\n    let i = sortingDetails.length - 1;\n\n    for (; i >= 0; i--) {\n        fieldName = sortingDetails[i][0];\n        sortMeta = sortingDetails[i][1];\n        fDetails = fieldInSchema(schema, fieldName);\n\n        if (!fDetails) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        if (isCallable(sortMeta)) {\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortMeta(a[fDetails.index], b[fDetails.index]));\n        } else if (isArray(sortMeta)) {\n            const groupedData = groupData(data, fDetails.index);\n            const sortingFn = sortMeta[sortMeta.length - 1];\n            const targetFields = sortMeta.slice(0, sortMeta.length - 1);\n            const targetFieldDetails = targetFields.map(f => fieldInSchema(schema, f));\n\n            groupedData.forEach((groupedDatum) => {\n                groupedDatum.push(createSortingFnArg(groupedDatum, targetFields, targetFieldDetails));\n            });\n\n            mergeSort(groupedData, (a, b) => {\n                const m = a[2];\n                const n = b[2];\n                return sortingFn(m, n);\n            });\n\n            // Empty the array\n            data.length = 0;\n            groupedData.forEach((datum) => {\n                data.push(...datum[1]);\n            });\n        } else {\n            sortMeta = String(sortMeta).toLowerCase() === 'desc' ? 'desc' : 'asc';\n            mergeSort(data, getSortFn(fDetails.type, sortMeta, fDetails.index));\n        }\n    }\n\n    dataObj.uids = [];\n    data.forEach((value) => {\n        dataObj.uids.push(value.pop());\n    });\n}\n\n\n/**\n * Builds the actual data array.\n *\n * @param {Array} fieldStore - An array of field.\n * @param {string} rowDiffset - A string consisting of which rows to be included eg. '0-2,4,6';\n * @param {string} colIdentifier - A string consisting of the details of which column\n * to be included eg 'date,sales,profit';\n * @param {Object} sortingDetails - An object containing the sorting details of the DataModel instance.\n * @param {Object} options - The options required to create the type of the data.\n * @return {Object} Returns an object containing the multidimensional array and the relative schema.\n */\nexport function dataBuilder (fieldStore, rowDiffset, colIdentifier, sortingDetails, options) {\n    const defOptions = {\n        addUid: false,\n        columnWise: false\n    };\n    options = Object.assign({}, defOptions, options);\n\n    const retObj = {\n        schema: [],\n        data: [],\n        uids: []\n    };\n    const addUid = options.addUid;\n    const reqSorting = sortingDetails && sortingDetails.length > 0;\n    // It stores the fields according to the colIdentifier argument\n    const tmpDataArr = [];\n    // Stores the fields according to the colIdentifier argument\n    const colIArr = colIdentifier.split(',');\n\n    colIArr.forEach((colName) => {\n        for (let i = 0; i < fieldStore.length; i += 1) {\n            if (fieldStore[i].name === colName) {\n                tmpDataArr.push(fieldStore[i]);\n                break;\n            }\n        }\n    });\n\n    // Inserts the schema to the schema object\n    tmpDataArr.forEach((field) => {\n        /** @todo Need to use extend2 here otherwise user can overwrite the schema. */\n        retObj.schema.push(field.schema);\n    });\n\n    if (addUid) {\n        retObj.schema.push({\n            name: 'uid',\n            type: 'identifier'\n        });\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        retObj.data.push([]);\n        const insertInd = retObj.data.length - 1;\n        let start = 0;\n        tmpDataArr.forEach((field, ii) => {\n            retObj.data[insertInd][ii + start] = field.data[i];\n        });\n        if (addUid) {\n            retObj.data[insertInd][tmpDataArr.length] = i;\n        }\n        // Creates an array of unique identifiers for each row\n        retObj.uids.push(i);\n\n        // If sorting needed then there is the need to expose the index\n        // mapping from the old index to its new index\n        if (reqSorting) { retObj.data[insertInd].push(i); }\n    });\n\n    // Handles the sort functionality\n    if (reqSorting) {\n        sortData(retObj, sortingDetails);\n    }\n\n    if (options.columnWise) {\n        const tmpData = Array(...Array(retObj.schema.length)).map(() => []);\n        retObj.data.forEach((tuple) => {\n            tuple.forEach((data, i) => {\n                tmpData[i].push(data);\n            });\n        });\n        retObj.data = tmpData;\n    }\n\n    return retObj;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n\n/**\n * Performs the union operation between two dm instances.\n *\n * @todo Fix the conflicts between union and difference terminology here.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function difference (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n   // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema));\n        schemaNameArr.push(field.schema.name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     * @param {boolean} addData - If true only tuple will be added to the data.\n     */\n    function prepareDataHelper(dm, fieldsObj, addData) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                if (addData) { data.push(tuple); }\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj, false);\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj, true);\n\n    return new DataModel(data, schema, { name });\n}\n\n","/**\n * Reducer function that takes care about the sum aggregation\n * @param  {Array} arr array of values\n * @return {number}     sum of the array\n */\nfunction sum (arr) {\n    let allNulls = true;\n    const isNestedArray = arr[0] instanceof Array;\n    const sumVal = arr.reduce((carry, a) => {\n        if (isNestedArray) {\n            return carry.map((x, i) => x + a[i]);\n        }\n        allNulls = allNulls && (a === null);\n        return carry + a;\n    }, isNestedArray ? Array(...Array(arr[0].length)).map(() => 0) : 0);\n    return allNulls ? null : sumVal;\n}\n\n/**\n * reducer function that takes care about the mean aggregation\n * @param  {Array} arr array of values\n * @return {number}     mean of the array\n */\nfunction avg (arr) {\n    const isNestedArray = arr[0] instanceof Array;\n    const len = arr.length || 1;\n    const arrSum = sum(arr);\n    if (isNestedArray) {\n        return arrSum.map(x => x / len);\n    }\n    return arrSum === null ? null : arrSum / len;\n}\n\n/**\n * reducer function that gives the min value\n * @param  {Array} arr array of values\n * @return {number}     min of the array\n */\nfunction min (arr) {\n    const isNestedArray = arr[0] instanceof Array;\n    if (isNestedArray) {\n        return arr.reduce((carry, a) => carry.map((x, i) => Math.min(x, a[i])),\n        Array(...Array(arr[0].length)).map(() => Infinity));\n    }\n    return arr.every(d => d === null) ? null : Math.min(...arr);\n}\n\n/**\n * reducer function that gives the max value\n * @param  {Array} arr array of values\n * @return {number}     max of the array\n */\nfunction max (arr) {\n    const isNestedArray = arr[0] instanceof Array;\n    if (isNestedArray) {\n        return arr.reduce((carry, a) => carry.map((x, i) => Math.max(x, a[i])),\n        Array(...Array(arr[0].length)).map(() => -Infinity));\n    }\n    return arr.every(d => d === null) ? null : Math.max(...arr);\n}\n\n/**\n * reducer function that gives the first value\n * @param  {Array} arr array of values\n * @return {number}     first value of the array\n */\nfunction first (arr) {\n    return arr[0];\n}\n\n/**\n * reducer function that gives the last value\n * @param  {Array} arr array of values\n * @return {number}     last value of the array\n */\nfunction last (arr) {\n    return arr[arr.length - 1];\n}\n\n/**\n * reducer function that gives the count value\n * @param  {Array} arr array of values\n * @return {number}     count of the array\n */\nfunction count (arr) {\n    const isNestedArray = arr[0] instanceof Array;\n    const len = arr.length;\n    if (isNestedArray) {\n        return Array(...Array(arr[0].length)).map(() => len);\n    }\n    return len;\n}\n\n/**\n * Calculates the variance of the input array.\n *\n * @param {Array.<number>} arr - The input array.\n * @return {number} Returns the variance of the input array.\n */\nfunction variance (arr) {\n    let mean = avg(arr);\n    return avg(arr.map(num => (num - mean) ** 2));\n}\n\n/**\n * Calculates the square root of the variance of the input array.\n *\n * @param {Array.<number>} arr - The input array.\n * @return {number} Returns the square root of the variance.\n */\nfunction std (arr) {\n    return Math.sqrt(variance(arr));\n}\n\n\nconst fnList = {\n    sum,\n    avg,\n    min,\n    max,\n    first,\n    last,\n    count,\n    std\n};\n\nconst defaultReducerName = 'sum';\n\nexport {\n    defaultReducerName,\n    sum as defReducer,\n    fnList,\n};\n","import { defReducer, fnList } from '../operator';\n\n/**\n * A page level storage which stores, registers, unregisters reducers for all the datamodel instances. There is only one\n * reducer store available in a page. All the datamodel instances receive same instance of reducer store. DataModel\n * out of the box provides handful of {@link reducer | reducers} which can be used as reducer funciton.\n *\n * @public\n * @namespace DataModel\n */\nclass ReducerStore {\n    constructor () {\n        this.store = new Map();\n        this.store.set('defReducer', defReducer);\n\n        Object.entries(fnList).forEach((key) => {\n            this.store.set(key[0], key[1]);\n        });\n    }\n\n    /**\n     * Changes the `defaultReducer` globally. For all the fields which does not have `defAggFn` mentioned in schema, the\n     * value of `defaultReducer` is used for aggregation.\n     *\n     * @public\n     *\n     * @param {string} [reducer='sum'] name of the default reducer. It picks up the definition from store by doing name\n     *      lookup. If no name is found then it takes `sum` as the default reducer.\n     *\n     * @return {ReducerStore} instance of the singleton store in page.\n     */\n    defaultReducer (...params) {\n        if (params.length) {\n            let reducer = params[0];\n            if (typeof reducer === 'function') {\n                this.store.set('defReducer', reducer);\n            } else if (typeof reducer === 'string') {\n                if (Object.keys(fnList).indexOf(reducer) !== -1) {\n                    this.store.set('defReducer', fnList[reducer]);\n                }\n            }\n            return this;\n        }\n\n        return this.store.get('defReducer');\n    }\n\n    /**\n     *\n     * Registers a {@link reducer | reducer}.\n     * A {@link reducer | reducer} has to be registered before it is used.\n     *\n     * @example\n     *  // find the mean squared value of a given set\n     *  const reducerStore = DataModel.Reducers();\n     *\n     *  reducers.register('meanSquared', (arr) => {\n     *      const squaredVal = arr.map(item => item * item);\n     *      let sum = 0;\n     *      for (let i = 0, l = squaredVal.length; i < l; i++) {\n     *          sum += squaredVal[i++];\n     *      }\n     *\n     *      return sum;\n     *  })\n     *\n     *  // datamodel (dm) is already prepared with cars.json\n     *  const dm1 = dm.groupBy(['origin'], {\n     *      accleration: 'meanSquared'\n     *  });\n     *\n     * @public\n     *\n     * @param {string} name formal name for a reducer. If the given name already exists in store it is overridden by new\n     *      definition.\n     * @param {Function} reducer definition of {@link reducer} function.\n     *\n     * @return {Function} function for unregistering the reducer.\n     */\n    register (name, reducer) {\n        if (typeof name === 'string' && typeof reducer === 'function') {\n            this.store.set(name, reducer);\n        }\n\n        return () => { this.__unregister(name); };\n    }\n\n    __unregister (name) {\n        if (this.store.has(name)) {\n            this.store.delete(name);\n        }\n    }\n\n    resolve (name) {\n        if (name instanceof Function) {\n            return name;\n        }\n        return this.store.get(name);\n    }\n}\n\nconst reducerStore = (function () {\n    let store = null;\n\n    function getStore () {\n        if (store === null) {\n            store = new ReducerStore();\n        }\n        return store;\n    }\n    return getStore();\n}());\n\nexport default reducerStore;\n","import { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport DataModel from '../export';\nimport reducerStore from '../utils/reducer-store';\n\n/**\n * This function sanitize the user given field and return a common Array structure field\n * list\n * @param  {DataModel} dataModel the dataModel operating on\n * @param  {Array} fieldArr  user input of field Array\n * @return {Array}           arrays of field name\n */\nfunction getFieldArr (dataModel, fieldArr) {\n    const retArr = [];\n    const fieldStore = dataModel.getPartialFieldspace();\n    const dimensions = fieldStore.getDimension();\n    const measures = fieldStore.getMeasure();\n\n    Object.entries(dimensions).forEach(([key]) => {\n        if (fieldArr && fieldArr.length) {\n            if (fieldArr.indexOf(key) !== -1) {\n                retArr.push(key);\n            }\n        } else {\n            retArr.push(key);\n        }\n    });\n\n    Object.entries(measures).forEach(([key]) => {\n        if (measures[key].subType() === 'discrete') {\n            if (fieldArr && fieldArr.length) {\n                if (fieldArr.indexOf(key) !== -1) {\n                    retArr.push(key);\n                }\n            } else {\n                retArr.push(key);\n            }\n        }\n    });\n    return retArr;\n}\n\n/**\n * This sanitize the reducer provide by the user and create a common type of object.\n * user can give function Also\n * @param  {DataModel} dataModel     dataModel to worked on\n * @param  {Object|function} [reducers={}] reducer provided by the users\n * @return {Object}               object containing reducer function for every measure\n */\nfunction getReducerObj (dataModel, reducers = {}) {\n    const retObj = {};\n    const pReducers = reducers;\n    const fieldStore = dataModel.getPartialFieldspace();\n    const measures = fieldStore.getMeasure();\n    let reducer = reducerStore.defaultReducer();\n    if (typeof reducers === 'function') {\n        reducer = reducers;\n    }\n    Object.entries(measures).forEach(([key]) => {\n        if (typeof reducers[key] === 'string') {\n            pReducers[key] = reducerStore.resolve(pReducers[key]) ? reducerStore.resolve(pReducers[key]) : reducer;\n        }\n        if (typeof reducers[key] !== 'function') {\n            pReducers[key] = undefined;\n        }\n        retObj[key] = pReducers[key] || reducerStore.resolve(measures[key].defAggFn()) || reducer;\n    });\n    return retObj;\n}\n\n/**\n * main function which perform the group-by operations which reduce the measures value is the\n * fields are common according to the reducer function provided\n * @param  {DataModel} dataModel the dataModel to worked\n * @param  {Array} fieldArr  fields according to which the groupby should be worked\n * @param  {Object|Function} reducers  reducers function\n * @param {DataModel} existingDataModel Existing datamodel instance\n * @return {DataModel} new dataModel with the group by\n */\nfunction groupBy (dataModel, fieldArr, reducers, existingDataModel) {\n    const sFieldArr = getFieldArr(dataModel, fieldArr);\n    const reducerObj = getReducerObj(dataModel, reducers);\n    const fieldStore = dataModel.getPartialFieldspace();\n    const fieldStoreObj = fieldStore.fieldsObj();\n    const dbName = fieldStore.name;\n    const dimensionArr = [];\n    const measureArr = [];\n    const schema = [];\n    const hashMap = {};\n    const data = [];\n    let newDataModel;\n    // Prepare the schema\n    Object.entries(fieldStoreObj).forEach(([key, value]) => {\n        if (sFieldArr.indexOf(key) !== -1 || reducerObj[key]) {\n            schema.push(extend2({}, value.schema));\n            if (value.schema.type === 'measure' && value.schema.subtype !== 'discrete') {\n                measureArr.push(key);\n            } else if (value.schema.type === 'dimension' || value.schema.subtype === 'discrete') {\n                dimensionArr.push(key);\n            }\n        }\n    });\n    // Prepare the data\n    let rowCount = 0;\n    rowDiffsetIterator(dataModel._rowDiffset, (i) => {\n        let hash = '';\n        dimensionArr.forEach((_) => {\n            hash = `${hash}-${fieldStoreObj[_].data[i]}`;\n        });\n        if (hashMap[hash] === undefined) {\n            hashMap[hash] = rowCount;\n            data.push({});\n            dimensionArr.forEach((_) => {\n                data[rowCount][_] = fieldStoreObj[_].data[i];\n            });\n            measureArr.forEach((_) => {\n                data[rowCount][_] = [fieldStoreObj[_].data[i]];\n            });\n            rowCount += 1;\n        } else {\n            measureArr.forEach((_) => {\n                data[hashMap[hash]][_].push(fieldStoreObj[_].data[i]);\n            });\n        }\n    });\n    // reduction\n    data.forEach((row) => {\n        const tuple = row;\n        measureArr.forEach((_) => {\n            tuple[_] = reducerObj[_](row[_]);\n        });\n    });\n    if (existingDataModel) {\n        existingDataModel.__calculateFieldspace();\n        newDataModel = existingDataModel;\n    }\n    else {\n        newDataModel = new DataModel(data, schema, { name: dbName });\n    }\n    return newDataModel;\n}\n\nexport { groupBy, getFieldArr, getReducerObj };\n","import { getCommonSchema } from './get-common-schema';\n\n/**\n * The filter function used in natural join.\n * It generates a function that will have the logic to join two\n * DataModel instances by the process of natural join.\n *\n * @param {DataModel} dm1 - The left DataModel instance.\n * @param {DataModel} dm2 - The right DataModel instance.\n * @return {Function} Returns a function that is used in cross-product operation.\n */\nexport function naturalJoinFilter (dm1, dm2) {\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    // const dm1FieldStoreName = dm1FieldStore.name;\n    // const dm2FieldStoreName = dm2FieldStore.name;\n    const commonSchemaArr = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    return (dm1Fields, dm2Fields) => {\n        let retainTuple = true;\n        commonSchemaArr.forEach((fieldName) => {\n            if (dm1Fields[fieldName].value ===\n                dm2Fields[fieldName].value && retainTuple) {\n                retainTuple = true;\n            } else {\n                retainTuple = false;\n            }\n        });\n        return retainTuple;\n    };\n}\n","import DataModel from '../export';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n/**\n * Performs the union operation between two dm instances.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function union (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n    // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema));\n        schemaNameArr.push(field.schema.name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     */\n    function prepareDataHelper (dm, fieldsObj) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                data.push(tuple);\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj);\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj);\n\n    return new DataModel(data, schema, { name });\n}\n","import { crossProduct } from './cross-product';\nimport { JOINS } from '../constants';\nimport { union } from './union';\n\n\nexport function leftOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel1, dataModel2, filterFn, false, JOINS.LEFTOUTER);\n}\n\nexport function rightOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel2, dataModel1, filterFn, false, JOINS.RIGHTOUTER);\n}\n\nexport function fullOuterJoin (dataModel1, dataModel2, filterFn) {\n    return union(leftOuterJoin(dataModel1, dataModel2, filterFn), rightOuterJoin(dataModel1, dataModel2, filterFn));\n}\n","import { extend2 } from '../utils';\n\n /**\n  * The base class for every field type.\n  * It provides some common functionalities.\n  */\nclass PartialField {\n\n    /**\n     * Sets basic setups to each Field instance.\n     *\n     * @param {string} name - The name or identifier of the field.\n     * @param {Array} data - The data array.\n     * @param {Object} schema - The schema of the data type.\n     */\n    constructor(name, data, schema) {\n        this.name = name;\n        this.data = data || [];\n        this.schema = schema;\n        this.fieldDescription = schema.description;\n        this.fieldType = schema.type;\n        this.sanitize();\n    }\n\n    /**\n     * Sanitizes the field data.\n     *\n     * @return {PartialField} - Returns the instance of the current context for chaining.\n     */\n    sanitize () {\n        this.data = this.data.map(d => this.parsed(this.parse(d)));\n        return this;\n    }\n\n    /**\n     * The post parsing hook for field instance.\n     *\n     * @param {*} val - The value to be parsed.\n     * @return {*} Returns the parsed value.\n     */\n    parsed (val) {\n        return val;\n    }\n\n    /**\n     * Generates and returns the domain for the field.\n     *\n     * @abstract\n     */\n    domain() {\n        throw new Error('Not yet implemented!');\n    }\n\n    subType() {\n        return null;\n    }\n\n\n    /**\n     * Parse the input value before using.\n     *\n     * @abstract\n     */\n    parse () {\n        throw new Error('Not yet implemented!');\n    }\n\n    /**\n     * Creates brand new copy of current field instance. To avoid optimization issue\n     * pass the required data otherwise current data would be copied which might\n     * be expensive.\n     *\n     * @param {Array} data - The input data, if provided current data will not be cloned.\n     * @return {PartialField} Returns the cloned field instance.\n     */\n    clone(data) {\n        data = data || extend2([], this.data);\n        const schema = extend2({}, this.schema);\n        // Here call the constructor to create an instance of\n        // the current field class type e.g. Measure, Dimension etc.\n        return new this.constructor(this.name, data, schema);\n    }\n\n    /**\n     * @return {string} Name of the field\n     */\n    fieldName() {\n        return this.name;\n    }\n\n     /**\n     * @return {string} Type of the field\n     */\n    type() {\n        return this.fieldType;\n    }\n\n    /**\n     * @return {description} Name of the field\n     */\n    description() {\n        return this.fieldDescription;\n    }\n}\n\nexport default PartialField;\n","import PartialField from './partial-field';\nimport { generateMeasureDomain, formatNumber } from '../utils';\nimport { defaultReducerName } from '../operator/group-by-function';\n\n/**\n * Represents measure field type.\n *\n * @extends PartialField\n */\nclass Measure extends PartialField {\n\n    /**\n     * Creates new Measure field instance.\n     *\n     * @param {string} name - The name of the field.\n     * @param {Array} data - An array containing the field data.\n     * @param {Object} schema - The schema for the field.\n     */\n    constructor(name, data, schema) {\n        super(name, data, schema);\n        this.fieldUnit = schema.unit;\n        this.fieldScale = schema.scale;\n        this.fieldDefAggFn = schema.defAggFn || defaultReducerName;\n        this.fieldNumberformat = schema.numberFormat instanceof Function ? schema.numberFormat : formatNumber;\n    }\n\n    /**\n     * Returns the domain for the measure field.\n     *\n     * @override\n     * @return {Array} Returns min and max values from measure values.\n     */\n    domain() {\n        return generateMeasureDomain(this.data);\n    }\n\n    /**\n     * A hook which is called for every entry(cell) of the column.\n     *\n     * @todo Fix the null data e.g. NaN value.\n     *\n     * @param {*} val - The current entry present in the column while iteration.\n     * @return {number | null} Returns the parsed number value of content of cell or null.\n     */\n    parse (val) {\n        val = parseFloat(val, 10);\n        return Number.isNaN(val) ? null : val;\n    }\n\n    /**\n     * Getter for unit value of the field.\n     *\n     * @return {string} Returns unit of the field.\n     */\n    unit() {\n        return this.fieldUnit;\n    }\n\n    /**\n     * Getter for scale value of the field.\n     *\n     * @return {string} Returns scale of the field.\n     */\n    scale() {\n        return this.fieldScale;\n    }\n\n    /**\n     * Getter for number format value of the field.\n     *\n     * @return {string} Returns number format of the field.\n     */\n    numberFormat() {\n        const formatter = this.fieldNumberformat;\n        return val => formatter(val);\n    }\n\n    /**\n     * Getter for aggregation function of the field.\n     *\n     * @return {Function} Returns aggregation function of the field.\n     */\n    defAggFn() {\n        return this.fieldDefAggFn;\n    }\n}\n\nexport default Measure;\n","/**\n * Generates domain for measure field.\n *\n * @param {Array} data - The array of data.\n * @return {Array} Returns the measure domain.\n */\nexport default (data) => {\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    data.forEach((d) => {\n        if (d < min) {\n            min = d;\n        }\n        if (d > max) {\n            max = d;\n        }\n    });\n\n    return [min, max];\n};\n","import PartialField from './partial-field';\nimport { uniqueValues } from '../utils';\n\n/**\n * Represents dimension field type.\n *\n * @extends PartialField\n */\nclass Dimension extends PartialField {\n\n    /**\n     * Returns the domain for the dimension field.\n     *\n     * @override\n     * @return {Array} Returns the unique values from dimension values.\n     */\n    domain() {\n        return uniqueValues(this.data);\n    }\n\n    /**\n     * A hook which is called for every entry(cell) of the column.\n     *\n     * @todo Fix the null data e.g. undefined or null etc.\n     *\n     * @param {*} val - The current entry present in the column while iteration.\n     * @return {string} Returns the string representation of the value.\n     */\n    parse (val) {\n        val = (val === undefined || val === null) ? '' : val.toString();\n        return val.trim();\n    }\n\n    /**\n     * Saves the cardinality of the dimensional values after parsing the data.\n     *\n     * @param {string} val - The parsed value.\n     * @return {string} Returns the input val.\n     */\n    parsed (val) {\n        this._unique = this._unique || {};\n        const unique = this._unique;\n        if (val in unique) {\n            unique[val]++;\n        } else {\n            unique[val] = 1;\n        }\n        return val;\n    }\n}\n\nexport default Dimension;\n","import { DimensionSubtype } from '../enums';\nimport Dimension from './dimension';\n\n/**\n * Represents categorical field subtype.\n *\n * @extends Dimension\n */\nclass Categorical extends Dimension {\n\n    /**\n     * Creates new Categorical field instance.\n     *\n     * @param {string} name - The name of the field.\n     * @param {Array} data - An array containing the field data.\n     * @param {Object} schema - The schema for the field.\n     */\n    constructor(name, data, schema) {\n        super(name, data, schema);\n        this.subtype = DimensionSubtype.CATEGORICAL;\n    }\n\n    /**\n     * Getter for subType value of the field.\n     *\n    * @return {string} Returns subType of the field.\n    */\n    subType() {\n        return this.subtype;\n    }\n}\n\nexport default Categorical;\n","import { DimensionSubtype } from '../enums';\nimport Dimension from './dimension';\nimport { DateTimeFormatter, getMinDiff } from '../utils';\n\n\n/**\n * Represents datetime field subtype.\n *\n * @extends Dimension\n */\nclass DateTime extends Dimension {\n\n    /**\n     * Creates new DateTime field instance.\n     *\n     * @param {string} name - The name of the field.\n     * @param {Array} data - An array containing the field data.\n     * @param {Object} schema - The schema for the field.\n     */\n    constructor(name, data, schema) {\n        super(name, data, schema);\n        this.subtype = DimensionSubtype.TEMPORAL;\n        this.minDiff = getMinDiff(this.data);\n    }\n\n    /**\n     * Getter for subType value of the field.\n     *\n    * @return {string} Returns subType of the field.\n    */\n    subType() {\n        return this.subtype;\n    }\n\n    getMinDiff () {\n        return this.minDiff;\n    }\n    /**\n    * A hook which is called for every entry(cell) of the column.\n    *\n    * @param {*} val - The current entry present in the column while iteration.\n    * @return {number} Returns the total timestamps in millisecond.\n    */\n    parse(val) {\n        if (this.schema.format) {\n            this._dtf = this._dtf || new DateTimeFormatter(this.schema.format);\n            return this._dtf.getNativeDate(val).getTime();\n        }\n\n        // If format is not present then it means the value is such that the it could be directly passed to date\n        // constructor\n        return +new Date(val);\n    }\n}\n\nexport default DateTime;\n","import Measure from './measure';\n\n/**\n * Represents categorical field subtype.\n *\n * @extends Measure\n */\nclass DiscreteMeasure extends Measure {\n    constructor(name, data, schema, bin) {\n        super(name, data, schema);\n        this.bin = bin;\n        this.subtype = 'discrete';\n    }\n\n    /**\n     * A hook which is called for every entry(cell) of the column.\n     *\n     * @todo Fix the null data e.g. undefined or null etc.\n     *\n     * @param {*} val - The current entry present in the column while iteration.\n     * @return {string} Returns the string representation of the value.\n     */\n    parse (val) {\n        val = (val === undefined || val === null) ? '' : val.toString();\n        return val.trim();\n    }\n\n    bins() {\n        return this.bin;\n    }\n    subType() {\n        return this.subtype;\n    }\n}\n\nexport default DiscreteMeasure;\n","import { FieldType, DimensionSubtype } from './enums';\nimport { Measure, Categorical, DateTime, DiscreteMeasure } from './fields';\n\n/**\n * Creates a field instance according to the provided data and schema.\n *\n * @todo Add logic for GEO dimension subtype.\n *\n * @param {Array} data - The field data array.\n * @param {Object} schema - The field schema object.\n * @return {Field} Returns the newly created field instance.\n */\nfunction createUnitField (data, schema) {\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case 'discrete':\n            return new DiscreteMeasure(schema.name, data, schema, schema.bins);\n        default:\n            return new Measure(schema.name, data, schema);\n        }\n    case FieldType.DIMENSION:\n    default:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            return new Categorical(schema.name, data, schema);\n        case DimensionSubtype.TEMPORAL:\n            return new DateTime(schema.name, data, schema);\n        case DimensionSubtype.GEO:\n            return new Categorical(schema.name, data, schema);\n        default:\n            return new Categorical(schema.name, data, schema);\n        }\n    }\n}\n\n/**\n * Creates the field instances with input data and schema.\n *\n * @param {Array} dataColumn - The data array for fields.\n * @param {Array} schema - The schema array for fields.\n * @param {Array} headers - The array of header names.\n * @return {Array.<Field>} Returns an array of newly created field instances.\n */\nfunction createFields (dataColumn, schema, headers) {\n    const headersObj = {};\n\n    if (!(headers && headers.length)) {\n        headers = schema.map(item => item.name);\n    }\n\n    headers.forEach((header, i) => {\n        headersObj[header] = i;\n    });\n\n    return schema.map(item => createUnitField(dataColumn[headersObj[item.name]], item));\n}\n\nexport default createFields;\n","import { DataFormat } from './enums';\n\nexport default {\n    dataFormat: DataFormat.AUTO\n};\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in DSV array to a manageable internal format.\n *\n * @param {Array.<Array>} arr - A 2D array containing of the DSV data.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv data is header or not.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    [\"a\", \"b\", \"c\"],\n *    [1, 2, 3],\n *    [4, 5, 6],\n *    [7, 8, 9]\n * ];\n */\nfunction DSVArr (arr, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    let header;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    if (options.firstRowHeader) {\n        // If header present then mutate the array.\n        // Do in-place mutation to save space.\n        header = arr.splice(0, 1)[0];\n    } else {\n        header = [];\n    }\n\n    arr.forEach(field => push(...field));\n\n    return [header, columns];\n}\n\nexport default DSVArr;\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","import { dsvFormat as d3Dsv } from 'd3-dsv';\nimport DSVArr from './dsv-arr';\n\n/**\n * Parses and converts data formatted in DSV string to a manageable internal format.\n *\n * @todo Support to be given for https://tools.ietf.org/html/rfc4180.\n * @todo Sample implementation https://github.com/knrz/CSV.js/.\n *\n * @param {string} str - The input DSV string.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv string data is header or not.\n * @param {string} [options.fieldSeparator=\",\"] - The separator of two consecutive field.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = `\n * a,b,c\n * 1,2,3\n * 4,5,6\n * 7,8,9\n * `\n */\nfunction DSVStr (str, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n        fieldSeparator: ','\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    const dsv = d3Dsv(options.fieldSeparator);\n    return DSVArr(dsv.parseRows(str), options);\n}\n\nexport default DSVStr;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in JSON to a manageable internal format.\n *\n * @param {Array.<Object>} arr - The input data formatted in JSON.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    {\n *      \"a\": 1,\n *      \"b\": 2,\n *      \"c\": 3\n *    },\n *    {\n *      \"a\": 4,\n *      \"b\": 5,\n *      \"c\": 6\n *    },\n *    {\n *      \"a\": 7,\n *      \"b\": 8,\n *      \"c\": 9\n *    }\n * ];\n */\nfunction FlatJSON (arr) {\n    const header = {};\n    let i = 0;\n    let insertionIndex;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    arr.forEach((item) => {\n        const fields = [];\n        for (let key in item) {\n            if (key in header) {\n                insertionIndex = header[key];\n            } else {\n                header[key] = i++;\n                insertionIndex = i - 1;\n            }\n            fields[insertionIndex] = item[key];\n        }\n        push(...fields);\n    });\n\n    return [Object.keys(header), columns];\n}\n\nexport default FlatJSON;\n","import FlatJSON from './flat-json';\nimport DSVArr from './dsv-arr';\nimport DSVStr from './dsv-str';\nimport { isArray, isObject, isString } from '../utils';\n\n/**\n * Parses the input data and detect the format automatically.\n *\n * @param {string|Array} data - The input data.\n * @param {Object} options - An optional config specific to data format.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n */\nfunction Auto (data, options) {\n    let converter;\n\n    if (isString(data)) {\n        converter = DSVStr;\n    } else if (isArray(data) && isArray(data[0])) {\n        converter = DSVArr;\n    } else if (isArray(data) && (data.length === 0 || isObject(data[0]))) {\n        converter = FlatJSON;\n    } else {\n        throw new Error('Couldn\\'t detect the data format');\n    }\n\n    return converter(data, options);\n}\n\nexport default Auto;\n","import { FieldType, FilteringMode } from './enums';\nimport Field from './fields/field';\nimport fieldStore from './field-store';\nimport Value from './value';\nimport {\n    rowDiffsetIterator,\n    groupByIterator,\n    projectIterator,\n    selectIterator,\n    calculatedVariableIterator\n} from './operator';\nimport { DM_DERIVATIVES, LOGICAL_OPERATORS } from './constants';\nimport createFields from './field-creator';\nimport defaultConfig from './default-config';\nimport * as converter from './converter';\n\n/**\n * Prepares the selection data.\n */\nfunction prepareSelectionData (fields, i) {\n    const resp = {};\n    for (let field of fields) {\n        resp[field.name] = new Value(field.data[i], field);\n    }\n    return resp;\n}\n\nexport function prepareJoinData (fields) {\n    const resp = {};\n    Object.keys(fields).forEach((key) => { resp[key] = new Value(fields[key], key); });\n    return resp;\n}\n\nexport const updateFields = ([rowDiffset, colIdentifier], partialFieldspace, fieldStoreName) => {\n    let collID = colIdentifier.length ? colIdentifier.split(',') : [];\n    let partialFieldMap = partialFieldspace.fieldsObj();\n    let newFields = collID.map(coll => new Field(partialFieldMap[coll], rowDiffset));\n    return fieldStore.createNamespace(newFields, fieldStoreName);\n};\n\nexport const persistDerivation = (model, operation, config = {}, criteriaFn) => {\n    let derivative;\n    if (operation !== DM_DERIVATIVES.COMPOSE) {\n        derivative = {\n            op: operation,\n            meta: config,\n            criteria: criteriaFn\n        };\n        model._derivation.push(derivative);\n    }\n    else {\n        derivative = [...criteriaFn];\n        model._derivation.length = 0;\n        model._derivation.push(...derivative);\n    }\n};\n\nexport const selectHelper = (rowDiffset, fields, selectFn, config) => {\n    const newRowDiffSet = [];\n    let lastInsertedValue = -1;\n    let { mode } = config;\n    let li;\n    let checker = index => selectFn(prepareSelectionData(fields, index), index);\n    if (mode === FilteringMode.INVERSE) {\n        checker = index => !selectFn(prepareSelectionData(fields, index));\n    }\n    rowDiffsetIterator(rowDiffset, (i) => {\n        if (checker(i)) {\n            if (lastInsertedValue !== -1 && i === (lastInsertedValue + 1)) {\n                li = newRowDiffSet.length - 1;\n                newRowDiffSet[li] = `${newRowDiffSet[li].split('-')[0]}-${i}`;\n            } else {\n                newRowDiffSet.push(`${i}`);\n            }\n            lastInsertedValue = i;\n        }\n    });\n    return newRowDiffSet.join(',');\n};\n\nexport const filterPropagationModel = (model, propModels, config = {}) => {\n    const operation = config.operation || LOGICAL_OPERATORS.AND;\n    const filterByMeasure = config.filterByMeasure || false;\n    let fns = [];\n    if (propModels === null) {\n        fns = [() => false];\n    } else {\n        fns = propModels.map(propModel => ((dataModel) => {\n            const dataObj = dataModel.getData();\n            const schema = dataObj.schema;\n            const fieldsConfig = dataModel.getFieldsConfig();\n            const fieldsSpace = dataModel.getFieldspace().fieldsObj();\n            const data = dataObj.data;\n            const domain = Object.values(fieldsConfig).reduce((acc, v) => {\n                acc[v.def.name] = fieldsSpace[v.def.name].domain();\n                return acc;\n            }, {});\n\n            return (fields) => {\n                const include = !data.length ? false : data.some(row => schema.every((propField) => {\n                    if (!(propField.name in fields)) {\n                        return true;\n                    }\n                    const value = fields[propField.name].valueOf();\n                    if (filterByMeasure && propField.type === FieldType.MEASURE) {\n                        return value >= domain[propField.name][0] && value <= domain[propField.name][1];\n                    }\n\n                    if (propField.type !== FieldType.DIMENSION) {\n                        return true;\n                    }\n                    const idx = fieldsConfig[propField.name].index;\n                    return row[idx] === fields[propField.name].valueOf();\n                }));\n                return include;\n            };\n        })(propModel));\n    }\n\n    let filteredModel;\n    if (operation === LOGICAL_OPERATORS.AND) {\n        const clonedModel = model.clone(false, false);\n        filteredModel = clonedModel.select(fields => fns.every(fn => fn(fields)), {\n            saveChild: false,\n            mode: FilteringMode.ALL\n        });\n    } else {\n        filteredModel = model.clone(false, false).select(fields => fns.some(fn => fn(fields)), {\n            mode: FilteringMode.ALL,\n            saveChild: false\n        });\n    }\n\n    return filteredModel;\n};\n\nexport const cloneWithSelect = (sourceDm, selectFn, selectConfig, cloneConfig) => {\n    const cloned = sourceDm.clone(cloneConfig.saveChild);\n    const rowDiffset = selectHelper(\n        cloned._rowDiffset,\n        cloned.getPartialFieldspace().fields,\n        selectFn,\n        selectConfig\n    );\n    cloned._rowDiffset = rowDiffset;\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n    // Store reference to child model and selector function\n    if (cloneConfig.saveChild) {\n        persistDerivation(cloned, DM_DERIVATIVES.SELECT, { config: selectConfig }, selectFn);\n    }\n\n    return cloned;\n};\n\nexport const cloneWithProject = (sourceDm, projField, config, allFields) => {\n    const cloned = sourceDm.clone(config.saveChild);\n    let projectionSet = projField;\n    if (config.mode === FilteringMode.INVERSE) {\n        projectionSet = allFields.filter(fieldName => projField.indexOf(fieldName) === -1);\n    }\n    // cloned._colIdentifier = sourceDm._colIdentifier.split(',')\n    //                         .filter(coll => projectionSet.indexOf(coll) !== -1).join();\n    cloned._colIdentifier = projectionSet.join(',');\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n    // Store reference to child model and projection fields\n    if (config.saveChild) {\n        persistDerivation(\n            cloned,\n            DM_DERIVATIVES.PROJECT,\n            { projField, config, actualProjField: projectionSet },\n            null\n        );\n    }\n\n    return cloned;\n};\n\nexport const updateData = (relation, data, schema, options) => {\n    options = Object.assign(Object.assign({}, defaultConfig), options);\n    const converterFn = converter[options.dataFormat];\n\n    if (!(converterFn && typeof converterFn === 'function')) {\n        throw new Error(`No converter function found for ${options.dataFormat} format`);\n    }\n\n    const [header, formattedData] = converterFn(data, options);\n    const fieldArr = createFields(formattedData, schema, header);\n\n    // This will create a new fieldStore with the fields\n    const nameSpace = fieldStore.createNamespace(fieldArr, options.name);\n    relation._partialFieldspace = nameSpace;\n    // If data is provided create the default colIdentifier and rowDiffset\n    relation._rowDiffset = formattedData.length && formattedData[0].length ? `0-${formattedData[0].length - 1}` : '';\n    relation._colIdentifier = (schema.map(_ => _.name)).join();\n    return relation;\n};\n\nexport const fieldInSchema = (schema, field) => {\n    let i = 0;\n\n    for (; i < schema.length; ++i) {\n        if (field === schema[i].name) {\n            return {\n                type: schema[i].subtype || schema[i].type,\n                index: i\n            };\n        }\n    }\n    return null;\n};\n\nexport const propagateIdentifiers = (dataModel, propModel, config = {}, nonTraversingModel, grouped) => {\n    // function to propagate to target the DataModel instance.\n    const forwardPropagation = (targetDM, propagationData, hasGrouped) => {\n        propagateIdentifiers(targetDM, propagationData, config, nonTraversingModel, hasGrouped);\n    };\n\n    dataModel !== nonTraversingModel && dataModel.handlePropagation({\n        payload: config.payload,\n        data: propModel,\n        sourceIdentifiers: config.sourceIdentifiers,\n        sourceId: config.propagationSourceId,\n        groupedPropModel: !!grouped\n    });\n\n    // propagate to children created by SELECT operation\n    selectIterator(dataModel, (targetDM, criteria) => {\n        if (targetDM !== nonTraversingModel) {\n            const selectionModel = propModel[0].select(criteria, {\n                saveChild: false\n            });\n            const rejectionModel = propModel[1].select(criteria, {\n                saveChild: false\n            });\n\n            forwardPropagation(targetDM, [selectionModel, rejectionModel], grouped);\n        }\n    });\n    // propagate to children created by PROJECT operation\n    projectIterator(dataModel, (targetDM, projField) => {\n        if (targetDM !== nonTraversingModel) {\n            const projModel = propModel[0].project(projField, {\n                saveChild: false\n            });\n            const rejectionProjModel = propModel[1].project(projField, {\n                saveChild: false\n            });\n\n            forwardPropagation(targetDM, [projModel, rejectionProjModel], grouped);\n        }\n    });\n\n    // propagate to children created by groupBy operation\n    groupByIterator(dataModel, (targetDM, conf) => {\n        if (targetDM !== nonTraversingModel) {\n            const {\n                    reducer,\n                    groupByString\n                } = conf;\n                // group the filtered model based on groupBy string of target\n            const selectionGroupedModel = propModel[0].groupBy(groupByString.split(','), reducer, {\n                saveChild: false\n            });\n            const rejectionGroupedModel = propModel[1].groupBy(groupByString.split(','), reducer, {\n                saveChild: false\n            });\n            forwardPropagation(targetDM, [selectionGroupedModel, rejectionGroupedModel], true);\n        }\n    });\n\n    calculatedVariableIterator(dataModel, (targetDM, ...params) => {\n        if (targetDM !== nonTraversingModel) {\n            const entryModel = propModel[0].clone(false, false).calculateVariable(...params, {\n                saveChild: false,\n                replaceVar: true\n            });\n            const exitModel = propModel[1].clone(false, false).calculateVariable(...params, {\n                saveChild: false,\n                replaceVar: true\n            });\n            forwardPropagation(targetDM, [entryModel, exitModel], grouped);\n        }\n    });\n};\n\nexport const getRootGroupByModel = (model) => {\n    if (model._parent && model._derivation.find(d => d.op !== 'group')) {\n        return getRootGroupByModel(model._parent);\n    }\n    return model;\n};\n\nexport const getRootDataModel = (model) => {\n    if (model._parent) {\n        return getRootDataModel(model._parent);\n    }\n    return model;\n};\n\nexport const propagateToAllDataModels = (identifiers, rootModels, config) => {\n    let criteria;\n    let propModel;\n    const propagationNameSpace = config.propagationNameSpace;\n    const payload = config.payload;\n    const propagationSourceId = config.propagationSourceId;\n\n    if (identifiers === null) {\n        criteria = null;\n    } else {\n        const filteredCriteria = Object.entries(propagationNameSpace.mutableActions)\n            .filter(d => d[0] !== propagationSourceId)\n            .map(d => Object.values(d[1]).map(action => action.criteria));\n        criteria = [].concat(...[...filteredCriteria, identifiers]);\n    }\n\n    const rootGroupByModel = rootModels.groupByModel;\n    const rootModel = rootModels.model;\n    const propConfig = {\n        payload,\n        propagationSourceId,\n        sourceIdentifiers: identifiers\n    };\n\n    if (rootGroupByModel) {\n        propModel = filterPropagationModel(rootGroupByModel, criteria, {\n            filterByMeasure: true\n        });\n        propagateIdentifiers(rootGroupByModel, propModel, propConfig);\n    }\n\n    propModel = filterPropagationModel(rootModel, criteria, {\n        filterByMeasure: !rootGroupByModel\n    });\n    propagateIdentifiers(rootModel, propModel, propConfig, rootGroupByModel);\n};\n\nexport const propagateImmutableActions = (propagationNameSpace, rootModels, propagationSourceId) => {\n    const rootGroupByModel = rootModels.groupByModel;\n    const rootModel = rootModels.model;\n    const immutableActions = propagationNameSpace.immutableActions;\n    for (const sourceId in immutableActions) {\n        const actions = immutableActions[sourceId];\n        for (const action in actions) {\n            const criteriaModel = actions[action].criteria;\n            propagateToAllDataModels(criteriaModel, {\n                groupByModel: rootGroupByModel,\n                model: rootModel\n            }, {\n                propagationNameSpace,\n                payload: actions[action].payload,\n                propagationSourceId\n            });\n        }\n    }\n};\n","import { FilteringMode } from './enums';\nimport { getUniqueId } from './utils';\nimport { persistDerivation, updateFields, cloneWithSelect, cloneWithProject, updateData } from './helper';\nimport { crossProduct, difference, naturalJoinFilter, union } from './operator';\nimport { DM_DERIVATIVES } from './constants';\n\n/**\n * Relation provides the definitions of basic operators of relational algebra like *selection*, *projection*, *union*,\n * *difference* etc.\n *\n * It is extended by {@link DataModel} to inherit the functionalities of relational algebra concept.\n *\n * @class\n * @public\n * @module Relation\n * @namespace DataModel\n */\nclass Relation {\n\n    /**\n     * Creates a new Relation instance by providing underlying data and schema.\n     *\n     * @private\n     *\n     * @param {Object | string | Relation} data - The input tabular data in dsv or json format or\n     * an existing Relation instance object.\n     * @param {Array} schema - An array of data schema.\n     * @param {Object} [options] - The optional options.\n     */\n    constructor (...params) {\n        let source;\n\n        this._parent = null;\n        this._derivation = [];\n        this._children = [];\n\n        if (params.length === 1 && ((source = params[0]) instanceof Relation)) {\n            // parent datamodel was passed as part of source\n            this._colIdentifier = source._colIdentifier;\n            this._rowDiffset = source._rowDiffset;\n            this._parent = source;\n            this._partialFieldspace = this._parent._partialFieldspace;\n            this._fieldStoreName = getUniqueId();\n            this.__calculateFieldspace().calculateFieldsConfig();\n        } else {\n            updateData(this, ...params);\n            this._fieldStoreName = this._partialFieldspace.name;\n            this.__calculateFieldspace().calculateFieldsConfig();\n            this._propagationNameSpace = {\n                mutableActions: {},\n                immutableActions: {}\n            };\n        }\n    }\n\n    /**\n     * Retrieves the {@link Schema | schema} details for every {@link Field | field} as an array.\n     *\n     * @public\n     *\n     * @return {Array.<Schema>} Array of fields schema.\n     *      ```\n     *      [\n     *          { name: 'Name', type: 'dimension' },\n     *          { name: 'Miles_per_Gallon', type: 'measure', numberFormat: (val) => `${val} miles / gallon` },\n     *          { name: 'Cylinder', type: 'dimension' },\n     *          { name: 'Displacement', type: 'measure', defAggFn: 'max' },\n     *          { name: 'HorsePower', type: 'measure', defAggFn: 'max' },\n     *          { name: 'Weight_in_lbs', type: 'measure', defAggFn: 'avg',  },\n     *          { name: 'Acceleration', type: 'measure', defAggFn: 'avg' },\n     *          { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *          { name: 'Origin' }\n     *      ]\n     *      ```\n     */\n    getSchema () {\n        return this.getFieldspace().fields.map(d => d.schema);\n    }\n\n    /**\n     * Returns the name of the {@link DataModel} instance. If no name was specified during {@link DataModel}\n     * initialization, then it returns a auto-generated name.\n     *\n     * @public\n     *\n     * @return {string} Name of the DataModel instance.\n     */\n    getName() {\n        return this._fieldStoreName;\n    }\n\n    getFieldspace () {\n        return this._fieldspace;\n    }\n\n    __calculateFieldspace () {\n        this._fieldspace = updateFields([this._rowDiffset, this._colIdentifier],\n             this.getPartialFieldspace(), this._fieldStoreName);\n        return this;\n    }\n\n    getPartialFieldspace () {\n        return this._partialFieldspace;\n    }\n\n    /**\n     * Performs {@link link_of_cross_product | cross-product} between two {@link DataModel} instances and returns a\n     * new {@link DataModel} instance containing the results. This operation is also called theta join.\n     *\n     * Cross product takes two set and create one set where each value of one set is paired with each value of another\n     * set.\n     *\n     * This method takes an optional predicate which filters the generated result rows. If the predicate returns true\n     * the combined row is included in the resulatant table.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.join(originDM)));\n     *\n     *  console.log(carsDM.join(originDM,\n     *      obj => obj.[originDM.getName()].Origin === obj.[carsDM.getName()].Origin));\n     *\n     * @text\n     * This is chained version of `join` operator. `join` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel to be joined with the current instance DataModel.\n     * @param {SelectionPredicate} filterFn - The predicate function that will filter the result of the crossProduct.\n     *\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    join (joinWith, filterFn) {\n        return crossProduct(this, joinWith, filterFn);\n    }\n\n    /**\n     * {@link natural_join | Natural join} is a special kind of cross-product join where filtering of rows are performed\n     * internally by resolving common fields are from both table and the rows with common value are included.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.naturalJoin(originDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel with which the current instance of DataModel on which the method is\n     *      called will be joined.\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    naturalJoin (joinWith) {\n        return crossProduct(this, joinWith, naturalJoinFilter(this, joinWith), true);\n    }\n\n    /**\n     * {@link link_to_union | Union} operation can be termed as vertical stacking of all rows from both the DataModel\n     * instances, provided that both of the {@link DataModel} instances should have same column names.\n     *\n     * @example\n     * console.log(EuropeanMakerDM.union(USAMakerDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} unionWith - DataModel instance for which union has to be applied with the instance on which\n     *      the method is called\n     *\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    union (unionWith) {\n        return union(this, unionWith);\n    }\n\n    /**\n     * {@link link_to_difference | Difference } operation only include rows which are present in the datamodel on which\n     * it was called but not on the one passed as argument.\n     *\n     * @example\n     * console.log(highPowerDM.difference(highExpensiveDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} differenceWith - DataModel instance for which difference has to be applied with the instance\n     *      on which the method is called\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    difference (differenceWith) {\n        return difference(this, differenceWith);\n    }\n\n    /**\n     * {@link link_to_selection | Selection} is a row filtering operation. It expects an predicate and an optional mode\n     * which control which all rows should be included in the resultant DataModel instance.\n     *\n     * {@link SelectionPredicate} is a function which returns a boolean value. For selection opearation the selection\n     * function is called for each row of DataModel instance with the current row passed as argument.\n     *\n     * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n     * of rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resulatant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  // with selection mode NORMAL:\n     *  const normDt = dt.select(fields => fields.Origin.value === \"USA\")\n     *  console.log(normDt));\n     *\n     * // with selection mode INVERSE:\n     * const inverDt = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.INVERSE })\n     * console.log(inverDt);\n     *\n     * // with selection mode ALL:\n     * const dtArr = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.ALL })\n     * // print the selected parts\n     * console.log(dtArr[0]);\n     * // print the inverted parts\n     * console.log(dtArr[1]);\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {SelectionPredicate} selectFn - Predicate funciton which is called for each row with the current row\n     *      ```\n     *          function (row, i)  { ... }\n     *      ```\n     * @param {Object} [config] - The configuration object to control the inclusion exclusion of a row in resultant\n     *      DataModel instance\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection\n     *\n     * @return {DataModel} Returns the new DataModel instance(s) after operation.\n     */\n    select (selectFn, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n\n        const cloneConfig = { saveChild: config.saveChild };\n        let oDm;\n\n        if (config.mode === FilteringMode.ALL) {\n            const selectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.NORMAL },\n                cloneConfig\n            );\n            const rejectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.INVERSE },\n                cloneConfig\n            );\n            oDm = [selectDm, rejectDm];\n        } else {\n            oDm = cloneWithSelect(\n                this,\n                selectFn,\n                config,\n                cloneConfig\n            );\n        }\n\n        return oDm;\n    }\n\n    /**\n     * Retrieves a boolean value if the current {@link DataModel} instance has data.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'CarName', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     * const data = [];\n     *\n     * const dt = new DataModel(schema, data);\n     * console.log(dt.isEmpty());\n     *\n     * @public\n     *\n     * @return {Boolean} True if the datamodel has no data, otherwise false.\n     */\n    isEmpty () {\n        return !this._rowDiffset.length || !this._colIdentifier.length;\n    }\n\n    /**\n     * Creates a clone from the current DataModel instance with child parent relationship.\n     *\n     * @private\n     * @param {boolean} [saveChild=true] - Whether the cloned instance would be recorded in the parent instance.\n     * @return {DataModel} - Returns the newly cloned DataModel instance.\n     */\n    clone (saveChild = true, linkParent = true) {\n        let retDataModel;\n        if (linkParent === false) {\n            const dataObj = this.getData({\n                getAllFields: true\n            });\n            const data = dataObj.data;\n            const schema = dataObj.schema;\n            const jsonData = data.map((row) => {\n                const rowObj = {};\n                schema.forEach((field, i) => {\n                    rowObj[field.name] = row[i];\n                });\n                return rowObj;\n            });\n            retDataModel = new this.constructor(jsonData, schema);\n        }\n        else {\n            retDataModel = new this.constructor(this);\n        }\n\n        if (saveChild) {\n            this._children.push(retDataModel);\n        }\n        return retDataModel;\n    }\n\n    /**\n     * {@link Projection} is filter column (field) operation. It expects list of fields' name and either include those\n     * or exclude those based on {@link FilteringMode} on the resultant variable.\n     *\n     * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n     * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resulatant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  const dm = new DataModel(schema, data);\n     *\n     *  // with projection mode NORMAL:\n     *  const normDt = dt.project([\"Name\", \"HorsePower\"]);\n     *  console.log(normDt.getData());\n     *\n     *  // with projection mode INVERSE:\n     *  const inverDt = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.INVERSE })\n     *  console.log(inverDt.getData());\n     *\n     *  // with selection mode ALL:\n     *  const dtArr = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.ALL })\n     *  // print the normal parts\n     *  console.log(dtArr[0].getData());\n     *  // print the inverted parts\n     *  console.log(dtArr[1].getData());\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n     * @param {Object} [config] - An optional config to control the creation of new DataModel\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n     *\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    project (projField, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const { mode } = config;\n\n        let normalizedProjField = projField.reduce((acc, field) => {\n            if (field.constructor.name === 'RegExp') {\n                acc.push(...allFields.filter(fieldName => fieldName.search(field) !== -1));\n            } else if (field in fieldConfig) {\n                acc.push(field);\n            }\n            return acc;\n        }, []);\n\n        normalizedProjField = Array.from(new Set(normalizedProjField)).map(field => field.trim());\n        let dataModel;\n\n        if (mode === FilteringMode.ALL) {\n            let projectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.NORMAL,\n                saveChild: config.saveChild\n            }, allFields);\n            let rejectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.INVERSE,\n                saveChild: config.saveChild\n            }, allFields);\n            dataModel = [projectionClone, rejectionClone];\n        } else {\n            let projectionClone = cloneWithProject(this, normalizedProjField, config, allFields);\n            dataModel = projectionClone;\n        }\n\n        return dataModel;\n    }\n\n    getFieldsConfig () {\n        return this._fieldConfig;\n    }\n\n    calculateFieldsConfig () {\n        this._fieldConfig = this._fieldspace.fields.reduce((acc, fieldDef, i) => {\n            acc[fieldDef.name] = {\n                index: i,\n                def: { name: fieldDef._ref.name, type: fieldDef._ref.fieldType, subtype: fieldDef._ref.subType() }\n            };\n            return acc;\n        }, {});\n        return this;\n    }\n\n\n    /**\n     * Frees up the resources associated with the current DataModel instance and breaks all the links instance has in\n     * the DAG.\n     *\n     * @public\n     */\n    dispose () {\n        this._parent.removeChild(this);\n        this._parent = null;\n    }\n\n    /**\n     * Removes the specified child {@link DataModel} from the child list of the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(schema, data);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\")\n     * dt.removeChild(dt2);\n     *\n     * @private\n     *\n     * @param {DataModel} child - Delegates the parent to remove this child.\n     */\n    removeChild (child) {\n        let idx = this._children.findIndex(sibling => sibling === child);\n        idx !== -1 ? this._children.splice(idx, 1) : true;\n    }\n\n    /**\n     * Adds the specified {@link DataModel} as a parent for the current {@link DataModel} instance.\n     *\n     * The optional criteriaQueue is an array containing the history of transaction performed on parent\n     *  {@link DataModel} to get the current one.\n     *\n     * @param {DataModel} parent - The datamodel instance which will act as parent.\n     * @param {Array} criteriaQueue - Queue contains in-between operation meta-data.\n     */\n    addParent (parent, criteriaQueue = []) {\n        persistDerivation(this, DM_DERIVATIVES.COMPOSE, null, criteriaQueue);\n        this._parent = parent;\n        parent._children.push(this);\n    }\n}\n\nexport default Relation;\n","/* eslint-disable default-case */\n\nimport { FieldType } from './enums';\nimport {\n    persistDerivation,\n    getRootGroupByModel,\n    propagateToAllDataModels,\n    getRootDataModel,\n    propagateImmutableActions\n} from './helper';\nimport { DM_DERIVATIVES, PROPAGATION } from './constants';\nimport {\n    dataBuilder,\n    rowDiffsetIterator,\n    groupBy\n} from './operator';\nimport { createBinnedFieldData } from './operator/bucket-creator';\nimport Relation from './relation';\nimport reducerStore from './utils/reducer-store';\nimport createFields from './field-creator';\n\n/**\n * DataModel is an in-browser representation of tabular data. It supports\n * {@link https://en.wikipedia.org/wiki/Relational_algebra | relational algebra} operators as well as generic data\n * processing opearators.\n * DataModel extends {@link Relation} class which defines all the relational algebra opreators. DataModel gives\n * definition of generic data processing operators which are not relational algebra complient.\n *\n * @public\n * @class\n * @extends Relation\n * @memberof Datamodel\n */\nclass DataModel extends Relation {\n    /**\n     * Creates a new DataModel instance by providing data and schema. Data could be in the form of\n     * - Flat JSON\n     * - DSV String\n     * - 2D Array\n     *\n     * By default DataModel finds suitable adapter to serialize the data. DataModel also expects a\n     * {@link Schema | schema} for identifying the variables present in data.\n     *\n     * @constructor\n     * @example\n     * const data = loadData('cars.csv');\n     * const schema = [\n     *      { name: 'Name', type: 'dimension' },\n     *      { name: 'Miles_per_Gallon', type: 'measure', unit : 'cm', scale: '1000', numberformat: val => `${val}G`},\n     *      { name: 'Cylinders', type: 'dimension' },\n     *      { name: 'Displacement', type: 'measure' },\n     *      { name: 'Horsepower', type: 'measure' },\n     *      { name: 'Weight_in_lbs', type: 'measure' },\n     *      { name: 'Acceleration', type: 'measure' },\n     *      { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *      { name: 'Origin', type: 'dimension' }\n     * ];\n     * const dm = new DataModel(data, schema, { name: 'Cars' });\n     * table(dm);\n     *\n     * @public\n     *\n     * @param {Array.<Object> | string | Array.<Array>} data Input data in any of the mentioned formats\n     * @param {Array.<Schema>} schema Defination of the variables. Order of the variables in data and order of the\n     *      variables in schema has to be same.\n     * @param {object} [options] Optional arguments to specify more settings regarding the creation part\n     * @param {string} [options.name] Name of the datamodel instance. If no name is given an auto generated name is\n     *      assigned to the instance.\n     * @param {string} [options.fieldSeparator=','] specify field separator type if the data is of type dsv string.\n     */\n    constructor (...args) {\n        super(...args);\n\n        this._onPropagation = [];\n        this._sortingDetails = [];\n    }\n\n    /**\n     * Reducers are simple functions which reduces an array of numbers to a representative number of the set.\n     * Like an array of numbers `[10, 20, 5, 15]` can be reduced to `12.5` if average / mean reducer function is\n     * applied. All the measure fields in datamodel (variables in data) needs a reducer to handle aggregation.\n     *\n     * @public\n     *\n     * @return {ReducerStore} Singleton instance of {@link ReducerStore}.\n     */\n    static get Reducers () {\n        return reducerStore;\n    }\n\n    /**\n     * Retrieve the data attached to an instance in JSON format.\n     *\n     * @example\n     * // DataModel instance is already prepared and assigned to dm variable\n     *  const data = dm.getData({\n     *      order: 'column',\n     *      formatter: {\n     *          origin: (val) => val === 'European Union' ? 'EU' : val;\n     *      }\n     *  });\n     *  console.log(data);\n     *\n     * @public\n     *\n     * @param {Object} [options] Options to control how the raw data is to be returned.\n     * @param {string} [options.order='row'] Defines if data is retieved in row order or column order. Possible values\n     *      are `'rows'` and `'columns'`\n     * @param {Function} [options.formatter=null] Formats the output data. This expects an object, where the keys are\n     *      the name of the variable needs to be formatted. The formatter function is called for each row passing the\n     *      value of the cell for a particular row as arguments. The formatter is a function in the form of\n     *      `function (value, rowId, schema) => { ... }`\n     *      Know more about {@link Fomatter}.\n     *\n     * @return {Array} Returns a multidimensional array of the data with schema. The return format looks like\n     *      ```\n     *          {\n     *              data,\n     *              schema\n     *          }\n     *      ```\n     */\n    getData (options) {\n        const defOptions = {\n            order: 'row',\n            formatter: null,\n            withUid: false,\n            getAllFields: false,\n            sort: []\n        };\n        options = Object.assign({}, defOptions, options);\n        const fields = this.getPartialFieldspace().fields;\n\n        const dataGenerated = dataBuilder.call(\n            this,\n            this.getPartialFieldspace().fields,\n            this._rowDiffset,\n            options.getAllFields ? fields.map(d => d.name).join() : this._colIdentifier,\n            options.sort,\n            {\n                columnWise: options.order === 'column',\n                addUid: !!options.withUid\n            }\n        );\n\n        if (!options.formatter) {\n            return dataGenerated;\n        }\n\n        const { formatter } = options;\n        const { data, schema, uids } = dataGenerated;\n        const fieldNames = schema.map((e => e.name));\n        const fmtFieldNames = Object.keys(formatter);\n        const fmtFieldIdx = fmtFieldNames.reduce((acc, next) => {\n            const idx = fieldNames.indexOf(next);\n            if (idx !== -1) {\n                acc.push([idx, formatter[next]]);\n            }\n            return acc;\n        }, []);\n\n        if (options.order === 'column') {\n            fmtFieldIdx.forEach((elem) => {\n                const fIdx = elem[0];\n                const fmtFn = elem[1];\n\n                data[fIdx].forEach((datum, datumIdx) => {\n                    data[fIdx][datumIdx] = fmtFn.call(\n                        undefined,\n                        datum,\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        } else {\n            data.forEach((datum, datumIdx) => {\n                fmtFieldIdx.forEach((elem) => {\n                    const fIdx = elem[0];\n                    const fmtFn = elem[1];\n\n                    datum[fIdx] = fmtFn.call(\n                        undefined,\n                        datum[fIdx],\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        }\n\n        return dataGenerated;\n    }\n\n    /**\n     * Groups the data using particular dimensions and by reducing measures. It expects a list of dimensions using which\n     * it projects the datamodel and perform aggregations to reduce the duplicate tuples. Refer this\n     * {@link link_to_one_example_with_group_by | document} to know the intuition behind groupBy.\n     *\n     * DataModel by default provides definition of few {@link reducer | Reducers}.\n     * {@link ReducerStore | User defined reducers} can also be registered.\n     *\n     * This is the chained implementation of `groupBy`.\n     * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n     *\n     * @example\n     * const groupedDM = dm.groupBy(['Year'], { horsepower: 'max' } );\n     * console.log(groupedDm);\n     *\n     * @public\n     *\n     * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n     * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n     *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n     *      schema of the variable.\n     *\n     * @return {DataModel} Returns a new DataModel instance after performing the groupby.\n     */\n    groupBy (fieldsArr, reducers = {}, config = { saveChild: true }) {\n        const groupByString = `${fieldsArr.join()}`;\n        let params = [this, fieldsArr, reducers];\n        const newDataModel = groupBy(...params);\n\n        if (config.saveChild) {\n            this._children.push(newDataModel);\n            persistDerivation(\n                newDataModel,\n                DM_DERIVATIVES.GROUPBY,\n                { fieldsArr, groupByString, defaultReducer: reducerStore.defaultReducer() },\n                reducers\n            );\n        }\n\n        newDataModel._parent = this;\n        return newDataModel;\n    }\n\n    /**\n     * Performs sorting operation on the current {@link DataModel} instance according to the specified sorting details.\n     * Like every other operator it doesn't mutate the current DataModel instance on which it was called, instead\n     * returns a new DataModel instance containing the sorted data.\n     *\n     * DataModel support multi level sorting by listing the variables using which sorting needs to be performed and\n     * the type of sorting `ASC` or `DESC`.\n     *\n     * In the following example, data is sorted by `Origin` field in `DESC` order in first level followed by another\n     * level of sorting by `Acceleration` in `ASC` order.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * let sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\"] // Default value is ASC\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * // Sort with a custom sorting function\n     * sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\", (a, b) => a - b] // Custom sorting function\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @text\n     * DataModel also provides another sorting mechanism out of the box where sort is applied to a variable using\n     * another variable which determines the order.\n     * Like the above DataModel contains three fields `Origin`, `Name` and `Acceleration`. Now, the data in this\n     * model can be sorted by `Origin` field according to the average value of all `Acceleration` for a\n     * particular `Origin` value.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * const sortedDm = dm.sort([\n     *     ['Origin', ['Acceleration', (a, b) => avg(...a.Acceleration) - avg(...b.Acceleration)]]\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @public\n     *\n     * @param {Array.<Array>} sortingDetails - Sorting details based on which the sorting will be performed.\n     * @return {DataModel} Returns a new instance of DataModel with sorted data.\n     */\n    sort (sortingDetails) {\n        const rawData = this.getData({\n            order: 'row',\n            sort: sortingDetails\n        });\n        const header = rawData.schema.map(field => field.name);\n        const dataInCSVArr = [header].concat(rawData.data);\n\n        const sortedDm = new this.constructor(dataInCSVArr, rawData.schema, { dataFormat: 'DSVArr' });\n        sortedDm._sortingDetails = sortingDetails;\n        return sortedDm;\n    }\n\n    addField (field) {\n        const fieldName = field.fieldName();\n        this._colIdentifier += `,${fieldName}`;\n        const partialFieldspace = this._partialFieldspace;\n\n        if (!partialFieldspace.fieldsObj()[field.fieldName()]) {\n            partialFieldspace.fields.push(field);\n        } else {\n            const fieldIndex = partialFieldspace.fields.findIndex(fieldinst => fieldinst.name === fieldName);\n            fieldIndex >= 0 && (partialFieldspace.fields[fieldIndex] = field);\n        }\n\n        this.__calculateFieldspace().calculateFieldsConfig();\n        return this;\n    }\n\n     /**\n     * Creates a new variable calculated from existing variable. This method expects the defination of the newly created\n     * variable and a function which resolves the value of the new variable from existing variables.\n     *\n     * Can create a new measure based on existing variables\n     * @example\n     *  // DataModel already prepared and assigned to dm vairable;\n     *  const newDm = dataModel.calculateVariable({\n     *      name: 'powerToWeight',\n     *      type: 'measure'\n     *  }, ['horsepower', 'weight_in_lbs', (hp, weight) => hp / weight ]);\n     *\n     *\n     * Can create a new dimension based on existing variables\n     * @example\n     *  // DataModel already prepared and assigned to dm vairable;\n     *  const child = dataModel.calculateVariable(\n     *     {\n     *       name: 'Efficiency',\n     *       type: 'dimension'\n     *     }, ['horsepower', (hp) => {\n     *      if (hp < 80) { return 'low'; },\n     *      else if (hp < 120) { return 'moderate'; }\n     *      else { return 'high' }\n     *  }]);\n     *\n     * @public\n     *\n     * @param {Schema} schema: Schema of newly defined variable\n     * @param {VariableResolver} resolver: Resolver format to resolve the current variable\n     *\n     * @return {DataModel} Instance of DataModel with the new field\n     */\n    calculateVariable (schema, dependency, config = { saveChild: true, replaceVar: false }) {\n        const fieldsConfig = this.getFieldsConfig();\n        const depVars = dependency.slice(0, dependency.length - 1);\n        const retrieveFn = dependency[dependency.length - 1];\n\n        if (fieldsConfig[schema.name] && !config.replaceVar) {\n            throw new Error(`${schema.name} field already exists in model.`);\n        }\n        const depFieldIndices = depVars.map((field) => {\n            const fieldSpec = fieldsConfig[field];\n            if (!fieldSpec) {\n                // @todo dont throw error here, use warning in production mode\n                throw new Error(`${field} is not a valid column name.`);\n            }\n            return fieldSpec.index;\n        });\n\n        let clone = this.clone();\n\n        const fs = clone.getFieldspace().fields;\n        const suppliedFields = depFieldIndices.map(idx => fs[idx]);\n\n        const computedValues = [];\n        rowDiffsetIterator(clone._rowDiffset, (i) => {\n            const fieldsData = suppliedFields.map(field => field.data[i]);\n            computedValues[i] = retrieveFn(...fieldsData, i, fs);\n        });\n        const [field] = createFields([computedValues], [schema], [schema.name]);\n        clone.addField(field);\n\n        if (config.saveChild) {\n            persistDerivation(clone, DM_DERIVATIVES.CAL_VAR, { config: schema, fields: depVars }, retrieveFn);\n        }\n\n        return clone;\n    }\n\n    /**\n     * Propagates changes across all the connected DataModel instances.\n     *\n     * @param {Array} identifiers - A list of identifiers that were interacted with.\n     * @param {Object} payload - The interaction specific details.\n     *\n     * @return {DataModel} DataModel instance.\n     */\n    propagate (identifiers, payload, config = {}) {\n        const isMutableAction = config.isMutableAction;\n        const propagationSourceId = config.sourceId;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const rootGroupByModel = getRootGroupByModel(this);\n        const rootModels = {\n            groupByModel: rootGroupByModel,\n            model: rootModel\n        };\n\n        propagateToAllDataModels(identifiers, rootModels, {\n            propagationNameSpace,\n            payload,\n            propagationSourceId\n        });\n\n        if (isMutableAction) {\n            propagateImmutableActions(propagationNameSpace, rootModels, propagationSourceId);\n        }\n        return this;\n    }\n\n    addToPropNamespace (sourceId, config = {}) {\n        let sourceNamespace;\n        const actionName = config.actionName;\n        const payload = config.payload;\n        const isMutableAction = config.isMutableAction;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const criteria = config.criteria;\n\n        if (isMutableAction) {\n            !propagationNameSpace.mutableActions[sourceId] && (propagationNameSpace.mutableActions[sourceId] = {});\n            sourceNamespace = propagationNameSpace.mutableActions[sourceId];\n        } else {\n            !propagationNameSpace.immutableActions[sourceId] && (propagationNameSpace.immutableActions[sourceId] = {});\n            sourceNamespace = propagationNameSpace.immutableActions[sourceId];\n        }\n\n        if (criteria === null) {\n            delete sourceNamespace[actionName];\n        } else {\n            sourceNamespace[actionName] = {\n                criteria,\n                payload\n            };\n        }\n\n        return this;\n    }\n\n    /**\n     * Associates a callback with an event name.\n     *\n     * @param {string} eventName - The name of the event.\n     * @param {Function} callback - The callback to invoke.\n     * @return {DataModel} Returns this current DataModel instance itself.\n     */\n    on (eventName, callback) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation.push(callback);\n            break;\n        }\n        return this;\n    }\n\n    /**\n     * Unsubscribes the callbacks for the provided event name.\n     *\n     * @param {string} eventName - The name of the event to unsubscribe.\n     * @return {DataModel} Returns the current DataModel instance itself.\n     */\n    unsubscribe (eventName) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation = [];\n            break;\n\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to invoke the method associated with propagation.\n     *\n     * @param {Object} payload The interaction payload.\n     * @param {DataModel} identifiers The propagated DataModel.\n     * @memberof DataModel\n     */\n    handlePropagation (payload) {\n        let propListeners = this._onPropagation;\n        propListeners.forEach(fn => fn.call(this, payload));\n    }\n\n    /**\n     * Perfoms binning on a measure field based on a binning configuration. This method does not aggregate the number of\n     * rows present in DataModel instance after binning, it just adds a new field with the binned value. Refer binning\n     * {@link example_of_binning | example} to have a intuition of what binning is and the use case.\n     *\n     * Binning can be configured by\n     * - providing custom bin configuration with non uniform buckets\n     * - providing bin count\n     * - providing each bin size\n     *\n     * When custom buckets are provided as part of binning configuration\n     * @example\n     *  // DataModel already prepared and assigned to dm vairable\n     *  const buckets = {\n     *      start: 30\n     *      stops: [80, 100, 110]\n     *  };\n     *  const config = { buckets, name: 'binnedHP' }\n     *  const binDM = dataModel.bin('horsepower', config);\\\n     *\n     * @text\n     * When `binCount` is defined as part of binning configuration\n     * @example\n     *  // DataModel already prepared and assigned to dm vairable\n     *  const config = { binCount: 5, name: 'binnedHP' }\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binSize` is defined as part of binning configuration\n     * @example\n     *  // DataModel already prepared and assigned to dm vairable\n     *  const config = { binSize: 200, name: 'binnedHorsepower' }\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @public\n     *\n     * @param {String} name Name of measure which will be used to create bin\n     * @param {Object} config Config required for bin creation\n     * @param {Array.<Number>} config.bucketObj.stops Defination of bucket ranges. Two subsequent number from arrays\n     *      are picked and a range is created. The first number from range is inclusive and the second number from range\n     *      is exclusive.\n     * @param {Number} [config.bucketObj.startAt] Force the start of the bin from a particular number.\n     *      If not mentioned, the start of the bin or the lower domain of the data if stops is not mentioned, else its\n     *      the first value of the stop.\n     * @param {Number} config.binSize Bucket size for each bin\n     * @param {Number} config.binCount Number of bins which will be created\n     * @param {String} config.name Name of the new binned field to be created\n     *\n     * @returns {DataModel} Instance of new DataModel with the newly created bin.\n     */\n    bin (measureName, config = { }) {\n        const clone = this.clone();\n        const binFieldName = config.name || `${measureName}_binned`;\n        if (this.getFieldsConfig()[binFieldName] || !this.getFieldsConfig()[measureName]) {\n            throw new Error(`Field ${measureName} already exists.`);\n        }\n        const field = this._partialFieldspace.fields.find(currfield => currfield.name === measureName);\n        const dataSet = createBinnedFieldData(field, this._rowDiffset, config);\n        const binField = createFields([dataSet.data], [\n            {\n                name: binFieldName,\n                type: FieldType.MEASURE,\n                subtype: 'discrete', // @todo : DimensionSubtype\n                bins: {\n                    range: dataSet.range,\n                    mid: dataSet.mid\n                }\n            }], [binFieldName])[0];\n        clone.addField(binField);\n        persistDerivation(clone, DM_DERIVATIVES.BIN, { measureName, config, binFieldName }, null);\n        return clone;\n    }\n}\n\nexport default DataModel;\n","import { fnList } from '../operator/group-by-function';\n\nexport const { sum, avg, min, max, first, last, count, std: sd } = fnList;\n","import DataModel from './datamodel';\nimport {\n  compose,\n  bin,\n  select,\n  project,\n  groupby as groupBy,\n  calculateVariable,\n  sort,\n  crossProduct,\n  difference,\n  naturalJoin,\n  leftOuterJoin,\n  rightOuterJoin,\n  fullOuterJoin,\n  union\n} from './operator';\nimport * as Stats from './stats';\nimport * as enums from './enums';\nimport { DateTimeFormatter } from './utils';\nimport { DataFormat, FilteringMode } from './constants';\nimport pkg from '../package.json';\n\nDataModel.Operators = {\n    compose,\n    bin,\n    select,\n    project,\n    groupBy,\n    calculateVariable,\n    sort,\n    crossProduct,\n    difference,\n    naturalJoin,\n    leftOuterJoin,\n    rightOuterJoin,\n    fullOuterJoin,\n    union\n};\nDataModel.Stats = Stats;\nObject.assign(DataModel, enums);\nDataModel.DateTimeFormatter = DateTimeFormatter;\nDataModel.DataFormat = DataFormat;\nDataModel.FilteringMode = FilteringMode;\nDataModel.version = pkg.version;\n\nexport default DataModel;\n","\n/**\n * DataModel's opearators are exposed as composable functional operators as well as chainable operators. Chainable\n * operators are called on the instances of {@link Datamodel} and {@link Relation} class.\n *\n * Those same operators can be used as composable operators from `DataModel.Operators` namespace.\n *\n * All these operators have similar behaviour. All these operators when called with the argument returns a function\n * which expects a DataModel instance.\n *\n * @public\n * @module Operators\n * @namespace DataModel\n */\n\n/**\n * This is functional version of selection operator. {@link link_to_selection | Selection} is a row filtering operation.\n * It takes {@link SelectionPredicate | predicate} for filtering criteria and returns a function.\n * The returned function is called with the DataModel instance on which the action needs to be performed.\n *\n * {@link SelectionPredicate} is a function which returns a boolean value. For selection opearation the selection\n * function is called for each row of DataModel instance with the current row passed as argument.\n *\n * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n * of rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * [Warn] Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * [Error] `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @example\n * const select = DataModel.Operators.select;\n * usaCarsFn = select(fields => fields.Origin.value === 'USA');\n * usaCarsDm = usaCarsFn(dm);\n * console.log(usaCarsDm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {SelectionPredicate} selectFn - Predicate funciton which is called for each row with the current row\n *      ```\n *          function (row, i)  { ... }\n *      ```\n * @param {Object} [config] - The configuration object to control the inclusion exclusion of a row in resultant\n *      DataModel instance\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const select = (...args) => dm => dm.select(...args);\n\n/**\n * This is functional version of projection operator. {@link link_to_projection | Projection} is a column filtering\n * operation.It expects list of fields name and either include those or exclude those based on {@link FilteringMode} on\n * the  resultant variable.It returns a function which is called with the DataModel instance on which the action needs\n * to be performed.\n *\n * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n * @param {Object} [config] - An optional config to control the creation of new DataModel\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const project = (...args) => dm => dm.project(...args);\n\n/**\n * This is functional version of binnig operator. Binning happens on a measure field based on a binning configuration.\n * Binning in DataModel does not aggregate the number of rows present in DataModel instance after binning, it just adds\n * a new field with the binned value. Refer binning {@link example_of_binning | example} to have a intuition of what\n * binning is and the use case.\n *\n * Binning can be configured by\n * - providing custom bin configuration with non uniform buckets\n * - providing bin count\n * - providing each bin size\n *\n * When custom buckets are provided as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const buckets = {\n *      start: 30\n *      stops: [80, 100, 110]\n *  };\n *  const config = { buckets, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(dm);\n *\n * @text\n * When `binCount` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binCount: 5, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @text\n * When `binSize` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binSize: 200, name: 'binnedHorsepower' }\n *  const binnedDm = dataModel.bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {String} name Name of measure which will be used to create bin\n * @param {Object} config Config required for bin creation\n * @param {Array.<Number>} config.bucketObj.stops Defination of bucket ranges. Two subsequent number from arrays\n *      are picked and a range is created. The first number from range is inclusive and the second number from range\n *      is exclusive.\n * @param {Number} [config.bucketObj.startAt] Force the start of the bin from a particular number.\n *      If not mentioned, the start of the bin or the lower domain of the data if stops is not mentioned, else its\n *      the first value of the stop.\n * @param {Number} config.binSize Bucket size for each bin\n * @param {Number} config.binCount Number of bins which will be created\n * @param {String} config.name Name of the new binned field to be created\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const bin = (...args) => dm => dm.bin(...args);\n\n/**\n * This is functional version of `groupBy` operator.Groups the data using particular dimensions and by reducing\n * measures. It expects a list of dimensions using which it projects the datamodel and perform aggregations to reduce\n * the duplicate tuples. Refer this {@link link_to_one_example_with_group_by | document} to know the intuition behind\n * groupBy.\n *\n * DataModel by default provides definition of few {@link reducer | Reducers}.\n * {@link ReducerStore | User defined reducers} can also be registered.\n *\n * This is the chained implementation of `groupBy`.\n * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n *\n * @example\n * const groupBy = DataModel.Operators.groupBy;\n * const groupedFn = groupBy(['Year'], { horsepower: 'max' } );\n * groupedDM = groupByFn(dm);\n *\n * @public\n *\n * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n *      schema of the variable.\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const groupBy = (...args) => dm => dm.groupBy(...args);\n\n/**\n * Enables composing operators to run multiple operations and save group of operataion as named opration on a DataModel.\n * The resulting DataModel will be the result of all the operation provided. The operations provided will be executed in\n * a serial manner ie. result of one operation will be the input for the next operations (like pipe operator in unix).\n *\n * Suported operations in compose are\n * - `select`\n * - `project`\n * - `groupBy`\n * - `bin`\n * - `compose`\n *\n * @example\n * const compose = DataModel.Operators.compose;\n * const select = DataModel.Operators.select;\n * const project = DataModel.Operators.project;\n *\n * let composedFn = compose(\n *    select(fields => fields.netprofit.value <= 15),\n *    project(['netprofit', 'netsales']));\n *\n * const dataModel = new DataModel(data1, schema1);\n *\n * let composedDm = composedFn(dataModel);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<Operators>} operators: An array of operation that will be applied on the\n * datatable.\n *\n * @returns {DataModel} Instance of resultant DataModel\n */\nexport const compose = (...operations) =>\n    (dm, config = { saveChild: true }) => {\n        let currentDM = dm;\n        let frstChild;\n        const derivations = [];\n        const saveChild = config.saveChild;\n\n        operations.forEach((operation) => {\n            currentDM = operation(currentDM);\n            derivations.push(...currentDM._derivation);\n            if (!frstChild) {\n                frstChild = currentDM;\n            }\n        });\n\n        saveChild && currentDM.addParent(dm, derivations);\n        if (derivations.length > 1) {\n            frstChild.dispose();\n        }\n\n        return currentDM;\n    };\n","/**\n * Wrapper on calculateVariable() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const calculateVariable = (...args) => dm => dm.calculateVariable(...args);\n\n/**\n * Wrapper on sort() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const sort = (...args) => dm => dm.sort(...args);\n","import { crossProduct } from './cross-product';\nimport { naturalJoinFilter } from './natural-join-filter-function';\n\nexport function naturalJoin (dataModel1, dataModel2) {\n    return crossProduct(dataModel1, dataModel2, naturalJoinFilter(dataModel1, dataModel2), true);\n}\n"],"sourceRoot":""}