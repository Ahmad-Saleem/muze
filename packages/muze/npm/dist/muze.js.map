{"version":3,"sources":["webpack://muze/webpack/universalModuleDefinition","webpack://muze/webpack/bootstrap","webpack://muze/webpack://DataModel/webpack/universalModuleDefinition","webpack://muze/webpack://DataModel/webpack/bootstrap","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/csv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/dsv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/index.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/tsv.js","webpack://muze/webpack://DataModel/src/constants/index.js","webpack://muze/webpack://DataModel/src/converter/auto-resolver.js","webpack://muze/webpack://DataModel/src/converter/dsv-arr.js","webpack://muze/webpack://DataModel/src/converter/dsv-str.js","webpack://muze/webpack://DataModel/src/converter/flat-json.js","webpack://muze/webpack://DataModel/src/converter/index.js","webpack://muze/webpack://DataModel/src/datamodel.js","webpack://muze/webpack://DataModel/src/default-config.js","webpack://muze/webpack://DataModel/src/enums/data-format.js","webpack://muze/webpack://DataModel/src/enums/dimension-subtype.js","webpack://muze/webpack://DataModel/src/enums/field-type.js","webpack://muze/webpack://DataModel/src/enums/filtering-mode.js","webpack://muze/webpack://DataModel/src/enums/index.js","webpack://muze/webpack://DataModel/src/enums/measure-subtype.js","webpack://muze/webpack://DataModel/src/export.js","webpack://muze/webpack://DataModel/src/field-creator.js","webpack://muze/webpack://DataModel/src/field-store.js","webpack://muze/webpack://DataModel/src/fields/binned/index.js","webpack://muze/webpack://DataModel/src/fields/categorical/index.js","webpack://muze/webpack://DataModel/src/fields/continuous/index.js","webpack://muze/webpack://DataModel/src/fields/dimension/index.js","webpack://muze/webpack://DataModel/src/fields/field/index.js","webpack://muze/webpack://DataModel/src/fields/index.js","webpack://muze/webpack://DataModel/src/fields/measure/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/binned-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/categorical-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/continuous-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/field-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/temporal-parser/index.js","webpack://muze/webpack://DataModel/src/fields/partial-field/index.js","webpack://muze/webpack://DataModel/src/fields/temporal/index.js","webpack://muze/webpack://DataModel/src/helper.js","webpack://muze/webpack://DataModel/src/index.js","webpack://muze/webpack://DataModel/src/invalid-aware-types.js","webpack://muze/webpack://DataModel/src/operator/bucket-creator.js","webpack://muze/webpack://DataModel/src/operator/compose.js","webpack://muze/webpack://DataModel/src/operator/cross-product.js","webpack://muze/webpack://DataModel/src/operator/data-builder.js","webpack://muze/webpack://DataModel/src/operator/difference.js","webpack://muze/webpack://DataModel/src/operator/get-common-schema.js","webpack://muze/webpack://DataModel/src/operator/group-by-function.js","webpack://muze/webpack://DataModel/src/operator/group-by.js","webpack://muze/webpack://DataModel/src/operator/index.js","webpack://muze/webpack://DataModel/src/operator/merge-sort.js","webpack://muze/webpack://DataModel/src/operator/natural-join-filter-function.js","webpack://muze/webpack://DataModel/src/operator/natural-join.js","webpack://muze/webpack://DataModel/src/operator/outer-join.js","webpack://muze/webpack://DataModel/src/operator/pure-operators.js","webpack://muze/webpack://DataModel/src/operator/row-diffset-iterator.js","webpack://muze/webpack://DataModel/src/operator/union.js","webpack://muze/webpack://DataModel/src/relation.js","webpack://muze/webpack://DataModel/src/stats/index.js","webpack://muze/webpack://DataModel/src/utils/column-major.js","webpack://muze/webpack://DataModel/src/utils/date-time-formatter.js","webpack://muze/webpack://DataModel/src/utils/domain-generator.js","webpack://muze/webpack://DataModel/src/utils/extend2.js","webpack://muze/webpack://DataModel/src/utils/helper.js","webpack://muze/webpack://DataModel/src/utils/index.js","webpack://muze/webpack://DataModel/src/utils/reducer-store.js","webpack://muze/webpack://DataModel/src/value.js","webpack://muze/webpack://hyperdis/webpack/universalModuleDefinition","webpack://muze/webpack://hyperdis/webpack/bootstrap","webpack://muze/webpack://hyperdis/src/electric-node.js","webpack://muze/webpack://hyperdis/src/graph-node.js","webpack://muze/webpack://hyperdis/src/graph.js","webpack://muze/webpack://hyperdis/src/index.js","webpack://muze/webpack://hyperdis/src/model.js","webpack://muze/webpack://hyperdis/src/utils/index.js","webpack://muze/webpack://hyperdis/src/utils/set.js","webpack://muze/(webpack)/buildin/module.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/SmartlabelManager.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/lib.js","webpack://muze/./packages/muze/src/index.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/container-manager.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisector.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisect.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/range.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ticks.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/threshold/sturges.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/map.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/nest.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/set.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/ordinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/band.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/define.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/lab.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/rgb.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/object.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/string.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/value.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/parse.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/date.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/round.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/decompose.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/zoom.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hsl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hcl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/piecewise.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/continuous.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatDecimal.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/exponent.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatSpecifier.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTrim.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatPrefixAuto.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatRounded.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTypes.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatGroup.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatNumerals.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionFixed.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/tickFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionPrefix.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionRound.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/nice.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/log.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/pow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/threshold.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/interval.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/millisecond.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/second.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/minute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/hour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/day.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/week.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/month.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/year.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMinute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcHour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcDay.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcWeek.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMonth.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcYear.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoParse.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/time.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20b.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20c.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/viridis.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/sequential.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/ramp.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://muze/./packages/muze-utils/src/enums/namespace.js","webpack://muze/./packages/muze-utils/src/enums/reserved-fields.js","webpack://muze/./packages/muze-utils/src/enums/common-props.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/axis.js","webpack://muze/./packages/muze-utils/node_modules/d3-path/src/path.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/arc.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/line.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/area.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/radial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/lineRadial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/diamond.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/star.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/square.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/triangle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/wye.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/noop.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/bundle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRom.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linearClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/monotone.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/natural.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/step.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/stack.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/cubic.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/poly.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/sin.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/bounce.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/back.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/elastic.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/RedBlackTree.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Edge.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Cell.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Beach.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Diagram.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/voronoi.js","webpack://muze/./packages/muze-utils/src/DataSystem/selection.js","webpack://muze/./packages/muze-utils/src/common-utils.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/circle.js","webpack://muze/./packages/muze-utils/src/DataSystem/dataSelect.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol.js","webpack://muze/./packages/muze-utils/src/enums/stack-config.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/diverging.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/expand.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/wiggle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/pie.js","webpack://muze/./packages/muze-utils/src/enums/constants.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespaces.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespace.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/creator.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selector.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selectorAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/matcher.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sparse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/enter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/data.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sort.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/window.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/classed.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/html.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/raise.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/lower.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/insert.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/clone.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/exit.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/order.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/call.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/nodes.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/node.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/size.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/empty.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/each.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/property.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/append.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/datum.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/local.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/sourceEvent.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/mouse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/touch.js","webpack://muze/./packages/muze-utils/node_modules/d3-dispatch/src/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/noevent.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/nodrag.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/event.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/drag.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timer.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timeout.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/schedule.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/tween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/interpolate.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selection.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attrTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/styleTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/delay.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/ease.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/interrupt.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/interrupt.js","webpack://muze/./packages/muze-utils/src/renderer-utils.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/event-list.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/lifecycle-manager.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/index.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/helper.js","webpack://muze/./packages/muze-utils/src/index.js","webpack://muze/./packages/muze-firebolt/src/enums/actions.js","webpack://muze/./packages/muze-firebolt/src/enums/selection.js","webpack://muze/./packages/muze-firebolt/src/selection-set/index.js","webpack://muze/./packages/muze-firebolt/src/selection-set/selection-set.js","webpack://muze/./packages/muze-firebolt/src/helper/index.js","webpack://muze/./packages/muze-firebolt/src/firebolt.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/generic.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/volatile.js","webpack://muze/./packages/muze-firebolt/src/enums/behaviours.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/highlight.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/brush.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/filter.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/persistent.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/select.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-action-config.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-event.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/hover.js","webpack://muze/./packages/muze-firebolt/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/click.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/drag.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/longtouch.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/touch-drag.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/props.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/generic-sideeffect.js","webpack://muze/./packages/muze-firebolt/src/side-effects/surrogate.js","webpack://muze/./packages/muze-firebolt/src/side-effects/spawnable.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/helper.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/selection-box-drag.js","webpack://muze/./packages/muze-tooltip/src/constants.js","webpack://muze/./packages/muze-tooltip/src/default-config.js","webpack://muze/./packages/muze-tooltip/src/helper.js","webpack://muze/./packages/muze-tooltip/src/strategy.js","webpack://muze/./packages/muze-tooltip/src/content.js","webpack://muze/./packages/muze-tooltip/src/tooltip.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/helper/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/crossline/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/strategy.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/filter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/anchors/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/persistent-anchors.js","webpack://muze/./packages/muze-firebolt/src/side-effects/brush-anchors.js","webpack://muze/./packages/muze-firebolt/src/behaviour-effect-map.js","webpack://muze/./packages/visual-layer/src/enums/constants.js","webpack://muze/./packages/visual-layer/src/layers/area/default-config.js","webpack://muze/./packages/visual-layer/src/simple-layer/simple-layer.js","webpack://muze/./packages/visual-layer/src/base-layer/props.js","webpack://muze/./packages/muze-axis/src/enums/axis-orientation.js","webpack://muze/./packages/muze-axis/src/enums/scale-type.js","webpack://muze/./packages/muze-axis/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/scale-creator.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/default-config.js","webpack://muze/./packages/muze-axis/src/axis-renderer.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/space-setter.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/helper.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/props.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/simple-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/linear.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/log.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/pow.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/continous-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/band-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/time-axis.js","webpack://muze/./packages/muze-axis/src/color-axis/color-maps.js","webpack://muze/./packages/muze-axis/src/color-axis/defaults.js","webpack://muze/./packages/muze-axis/src/color-axis/props.js","webpack://muze/./packages/muze-axis/src/color-axis/color-strategy.js","webpack://muze/./packages/muze-axis/src/color-axis/color-axis.js","webpack://muze/./packages/muze-axis/src/size-axis/defaults.js","webpack://muze/./packages/muze-axis/src/size-axis/size-strategy.js","webpack://muze/./packages/muze-axis/src/size-axis/props.js","webpack://muze/./packages/muze-axis/src/size-axis/size-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/defaults.js","webpack://muze/./packages/muze-axis/src/shape-axis/props.js","webpack://muze/./packages/muze-axis/src/shape-axis/shape-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/helper.js","webpack://muze/./packages/muze-axis/src/data-type-scale-map.js","webpack://muze/./packages/transform/src/group-transform/index.js","webpack://muze/./packages/transform/src/identity-transform/index.js","webpack://muze/./packages/transform/src/transform-factory/index.js","webpack://muze/./packages/transform/src/enums/transform-type.js","webpack://muze/./packages/transform/src/stack-transform/index.js","webpack://muze/./packages/visual-layer/src/helpers/index.js","webpack://muze/./packages/visual-layer/src/base-layer/listener-map.js","webpack://muze/./packages/visual-layer/src/enums/props.js","webpack://muze/./packages/visual-layer/src/base-layer/default-options.js","webpack://muze/./packages/visual-layer/src/base-layer/base-layer.js","webpack://muze/./packages/visual-layer/src/layers/line/renderer.js","webpack://muze/./packages/visual-layer/src/layers/line/default-config.js","webpack://muze/./packages/visual-layer/src/layers/line/line.js","webpack://muze/./packages/visual-layer/src/layers/area/renderer.js","webpack://muze/./packages/visual-layer/src/layers/area/area.js","webpack://muze/./packages/visual-layer/src/layers/arc/default-config.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-helper.js","webpack://muze/./packages/visual-layer/src/layers/text/renderer.js","webpack://muze/./packages/visual-layer/src/layers/text/default-config.js","webpack://muze/./packages/visual-layer/src/layers/text/text.js","webpack://muze/./packages/visual-layer/src/layers/point/renderer.js","webpack://muze/./packages/visual-layer/src/layers/point/default-config.js","webpack://muze/./packages/visual-layer/src/layers/point/point.js","webpack://muze/./packages/visual-layer/src/layers/bar/renderer.js","webpack://muze/./packages/visual-layer/src/layers/bar/default-config.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-helper.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar.js","webpack://muze/./packages/visual-layer/src/layers/tick/default-config.js","webpack://muze/./packages/visual-layer/src/layers/tick/renderer.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick.js","webpack://muze/./packages/visual-layer/src/enums/layer-types.js","webpack://muze/./packages/visual-layer/src/layer-factory/layer-factory.js","webpack://muze/./packages/visual-layer/src/layer-factory/index.js","webpack://muze/./packages/visual-layer/src/defaults.js","webpack://muze/./packages/visual-group/src/enums/constants.js","webpack://muze/./packages/visual-group/src/visual-group/local-options.js","webpack://muze/./packages/visual-group/src/simple-group/simple-group.js","webpack://muze/./packages/visual-group/src/variable/variable.js","webpack://muze/./packages/visual-group/src/variable/composed-vars.js","webpack://muze/./packages/visual-group/src/variable/simple-var.js","webpack://muze/./packages/visual-group/src/encoder/field-sanitizer.js","webpack://muze/./packages/visual-group/src/encoder/visual-encoder.js","webpack://muze/./packages/visual-group/src/enums/scale-maps.js","webpack://muze/./packages/visual-group/src/data-type-scale-map.js","webpack://muze/./packages/visual-group/src/encoder/encoder-helper.js","webpack://muze/./packages/visual-group/src/encoder/cartesian-encoder.js","webpack://muze/./packages/visual-group/src/encoder/polar-encoder.js","webpack://muze/./packages/visual-group/src/encoder/retinal-encoder.js","webpack://muze/./packages/visual-group/src/group-helper/group-utils.js","webpack://muze/./packages/visual-unit/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/visual-unit/src/helper/index.js","webpack://muze/./packages/visual-unit/src/enums/constants.js","webpack://muze/./packages/visual-unit/src/helper/grid-lines.js","webpack://muze/./packages/visual-unit/src/default-config.js","webpack://muze/./packages/visual-unit/src/local-options.js","webpack://muze/./packages/visual-unit/src/enums/reactive-props.js","webpack://muze/./packages/visual-unit/src/listener-map.js","webpack://muze/./packages/visual-unit/src/props.js","webpack://muze/./packages/visual-unit/src/firebolt/helper.js","webpack://muze/./packages/visual-unit/src/firebolt/payload-generator.js","webpack://muze/./packages/visual-unit/src/firebolt/data-propagator.js","webpack://muze/./packages/visual-unit/src/firebolt/index.js","webpack://muze/./packages/visual-unit/src/visual-unit.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-model.js","webpack://muze/./packages/visual-group/src/group-helper/cell-creator.js","webpack://muze/./packages/visual-group/src/group-helper/resolver-props.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-resolver.js","webpack://muze/./packages/visual-group/src/visual-group/value-matrix.js","webpack://muze/./packages/visual-group/src/visual-group/helper.js","webpack://muze/./packages/visual-group/src/visual-group/change-listener.js","webpack://muze/./packages/visual-group/src/visual-group/props.js","webpack://muze/./packages/visual-group/src/visual-group/visual-group.js","webpack://muze/./packages/muze-legend/src/firebolt/behavioural/select.js","webpack://muze/./packages/muze-legend/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/muze-legend/src/firebolt/behaviour-effect-map.js","webpack://muze/./packages/muze-legend/src/enums/behaviours.js","webpack://muze/./packages/muze-legend/src/enums/side-effects.js","webpack://muze/./packages/muze-legend/src/enums/constants.js","webpack://muze/./packages/muze-legend/src/firebolt/helper.js","webpack://muze/./packages/muze-legend/src/firebolt/legend-firebolt.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/drag.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/hover.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/click.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/index.js","webpack://muze/./packages/muze-legend/src/enums/actions.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/selection-box-drag.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/selection-box/index.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/strategies.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/index.js","webpack://muze/./packages/muze-legend/src/legend/props.js","webpack://muze/./packages/muze-legend/src/legend/defaults.js","webpack://muze/./packages/muze-legend/src/legend/legend-helper.js","webpack://muze/./packages/muze-legend/src/legend/simple-legend.js","webpack://muze/./packages/muze-legend/src/legend/position-config.js","webpack://muze/./packages/muze-legend/src/legend/renderer.js","webpack://muze/./packages/muze-legend/src/legend/discrete-legend.js","webpack://muze/./packages/muze-legend/src/legend/gradient-helper.js","webpack://muze/./packages/muze-legend/src/legend/gradient-legend.js","webpack://muze/./packages/muze-legend/src/legend/step-legend.js","webpack://muze/./packages/muze/src/constants.js","webpack://muze/./packages/muze/src/operators.js","webpack://muze/./packages/muze/src/action-model.js","webpack://muze/./packages/muze/src/canvas/defaults.js","webpack://muze/./packages/muze/src/canvas/local-options.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/layoutComponent.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/dummy-component.js","webpack://muze/./packages/muze/src/defaults.js","webpack://muze/./packages/layout/src/tree-layout/constants/defaults.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/definitionModel.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/helper/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/tree/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/layout-model/index.js","webpack://muze/./packages/layout/src/tree-layout/utils/index.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-point.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-parser.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/helper.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/html-data.js","webpack://muze/./packages/layout/src/tree-layout/renderers/renderer.js","webpack://muze/./packages/layout/src/tree-layout/renderers/html-renderer.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/layout-def.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/index.js","webpack://muze/./packages/muze/src/canvas/helper.js","webpack://muze/./packages/muze/src/options.js","webpack://muze/./packages/layout/src/enums/constants.js","webpack://muze/./packages/layout/src/generic-layout/index.js","webpack://muze/./packages/layout/src/grid-layout/defaults.js","webpack://muze/./packages/layout/src/utils/index.js","webpack://muze/./packages/layout/src/visual-matrix/props.js","webpack://muze/./packages/layout/src/visual-matrix/default-config.js","webpack://muze/./packages/layout/src/visual-matrix/visual-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/row-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/column-matrix.js","webpack://muze/./packages/layout/src/grid-layout/computations.js","webpack://muze/./packages/layout/src/grid-layout/view-info-getter.js","webpack://muze/./packages/layout/src/grid-layout/layout.js","webpack://muze/./packages/layout/src/grid-layout/layout-helper.js","webpack://muze/./packages/layout/src/grid-layout/border-helper.js","webpack://muze/./packages/layout/src/grid-layout/span-maker.js","webpack://muze/./packages/muze/src/transaction-support.js","webpack://muze/./packages/muze/src/canvas/component-resolver.js","webpack://muze/./packages/visual-cell/src/enums/constants.js","webpack://muze/./packages/visual-cell/src/enums/cell-type.js","webpack://muze/./packages/visual-cell/src/simple-cell.js","webpack://muze/./packages/visual-cell/src/enums/defaults.js","webpack://muze/./packages/visual-cell/src/props.js","webpack://muze/./packages/visual-cell/src/axis-cell.js","webpack://muze/./packages/visual-cell/src/blank-cell.js","webpack://muze/./packages/visual-cell/src/text-cell.js","webpack://muze/./packages/visual-cell/src/geom-cell.js","webpack://muze/./packages/visual-cell/src/defaults.js","webpack://muze/./packages/visual-cell/src/constants.js","webpack://muze/./packages/visual-cell/src/cell-registry.js","webpack://muze/./packages/muze/src/canvas/title-maker.js","webpack://muze/./packages/muze/src/canvas/legend-maker.js","webpack://muze/./packages/muze/src/canvas/components/muze-chart-component.js","webpack://muze/./packages/muze/src/canvas/components/headerComponent.js","webpack://muze/./packages/muze/src/canvas/components/legendComponent.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/helper.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/props.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-component.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/horizontal-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/vertical-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/matrix-component.js","webpack://muze/./packages/muze/src/canvas/components/grid-component.js","webpack://muze/./packages/muze/src/canvas/component-wrapper-maker.js","webpack://muze/./packages/muze/src/canvas/scroll-manager.js","webpack://muze/./packages/muze/src/canvas/layout-maker.js","webpack://muze/./packages/muze/src/canvas/firebolt/group-firebolt.js","webpack://muze/./packages/muze/src/canvas/firebolt/index.js","webpack://muze/./packages/muze/src/canvas/app-state.js","webpack://muze/./packages/muze/src/canvas/canvas.js","webpack://muze/./packages/muze/src/default-registry.js","webpack://muze/./packages/visual-layer/src/layer-registry.js","webpack://muze/./packages/muze/src/muze.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","_typeof2","__WEBPACK_AMD_DEFINE_ARRAY__","undefined","__WEBPACK_AMD_DEFINE_RESULT__","__WEBPACK_AMD_DEFINE_FACTORY__","apply","__webpack_exports__","csvParse","csvParseRows","csvFormat","csvFormatRows","_dsv__WEBPACK_IMPORTED_MODULE_0__","csv","parse","parseRows","format","formatRows","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","map","JSON","join","delimiter","reFormat","RegExp","DELIMITER","text","f","rows","N","length","I","eof","eol","token","j","row","formatRow","formatValue","convert","customConverter","inferColumns","columnSet","column","concat","_csv__WEBPACK_IMPORTED_MODULE_1__","_tsv__WEBPACK_IMPORTED_MODULE_2__","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","tsv","PROPAGATION","ROW_ID","DM_DERIVATIVES","JOINS","LOGICAL_OPERATORS","_enums__WEBPACK_IMPORTED_MODULE_0__","SELECT","PROJECT","GROUPBY","COMPOSE","CAL_VAR","BIN","CROSS","LEFTOUTER","RIGHTOUTER","NATURAL","FULLOUTER","AND","OR","_flat_json__WEBPACK_IMPORTED_MODULE_0__","_dsv_arr__WEBPACK_IMPORTED_MODULE_1__","_dsv_str__WEBPACK_IMPORTED_MODULE_2__","_utils__WEBPACK_IMPORTED_MODULE_3__","Auto","data","options","converters","FlatJSON","DSVStr","DSVArr","dataFormat","Error","arr","firstRowHeader","header","push","_utils__WEBPACK_IMPORTED_MODULE_0__","field","d3_dsv__WEBPACK_IMPORTED_MODULE_0__","str","fieldSeparator","dsv","insertionIndex","item","fields","_dsv_arr__WEBPACK_IMPORTED_MODULE_0__","_dsv_str__WEBPACK_IMPORTED_MODULE_1__","_flat_json__WEBPACK_IMPORTED_MODULE_2__","_auto_resolver__WEBPACK_IMPORTED_MODULE_3__","DataModel","_ref","_classCallCheck","this","_len","arguments","args","Array","_key","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","_onPropagation","_sortingDetails","_relation__WEBPACK_IMPORTED_MODULE_5__","order","formatter","withUid","getAllFields","sort","getPartialFieldspace","dataGenerated","_operator__WEBPACK_IMPORTED_MODULE_3__","_rowDiffset","_colIdentifier","columnWise","addUid","schema","uids","fieldNames","e","fmtFieldIdx","reduce","acc","next","idx","elem","fIdx","fmtFn","datum","datumIdx","fieldsArr","reducers","config","saveChild","groupByString","params","newDataModel","_children","persistDerivation","_constants__WEBPACK_IMPORTED_MODULE_2__","defaultReducer","_utils_reducer_store__WEBPACK_IMPORTED_MODULE_6__","sortingDetails","rawData","getData","dataInCSVArr","sortedDm","constructor","type","getFieldspace","colData","formattedData","rowsCount","serializedData","rowIdx","colIdx","FLAT_JSON","DSV_STR","DSV_ARR","fieldName","partialFieldspace","_partialFieldspace","fieldIndex","findIndex","fieldinst","__calculateFieldspace","calculateFieldsConfig","dependency","_this2","_helper__WEBPACK_IMPORTED_MODULE_1__","replaceVar","fieldsConfig","getFieldsConfig","depVars","retrieveFn","depFieldIndices","fieldSpec","index","clone","fs","suppliedFields","cachedStore","cloneProvider","detachedRoot","computedValues","rowDiffsetIterator","fieldsData","_createFields","_field_creator__WEBPACK_IMPORTED_MODULE_7__","_slicedToArray","identifiers","addToNameSpace","propConfig","isMutableAction","propagationSourceId","sourceId","payload","rootModel","propagationNameSpace","_propagationNameSpace","rootModels","groupByModel","model","propagateToAllDataModels","assign","propagateImmutableActions","eventName","callback","propModel","_this3","propListeners","fn","measureFieldName","binFieldName","measureField","fieldsObj","_createBinnedFieldDat","_operator_bucket_creator__WEBPACK_IMPORTED_MODULE_4__","binnedData","bins","binField","DIMENSION","subtype","BINNED","serialize","getSchema","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_8__","invalidAwareVals","AUTO","CATEGORICAL","TEMPORAL","GEO","MEASURE","NORMAL","INVERSE","ALL","_data_format__WEBPACK_IMPORTED_MODULE_0__","_dimension_subtype__WEBPACK_IMPORTED_MODULE_1__","_measure_subtype__WEBPACK_IMPORTED_MODULE_2__","_field_type__WEBPACK_IMPORTED_MODULE_3__","_filtering_mode__WEBPACK_IMPORTED_MODULE_4__","CONTINUOUS","_datamodel__WEBPACK_IMPORTED_MODULE_0__","_operator__WEBPACK_IMPORTED_MODULE_1__","_stats__WEBPACK_IMPORTED_MODULE_2__","_enums__WEBPACK_IMPORTED_MODULE_3__","_utils__WEBPACK_IMPORTED_MODULE_4__","_constants__WEBPACK_IMPORTED_MODULE_5__","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_6__","_package_json__WEBPACK_IMPORTED_MODULE_7__","Operators","compose","bin","select","project","groupBy","calculateVariable","crossProduct","difference","naturalJoin","leftOuterJoin","rightOuterJoin","fullOuterJoin","union","Stats","DateTimeFormatter","DataFormat","FilteringMode","InvalidAwareTypes","version","createUnitFieldFromPartial","createFields","_fields__WEBPACK_IMPORTED_MODULE_1__","partialField","rowDiffset","dataColumn","headers","headersObj","createUnitField","_utils__WEBPACK_IMPORTED_MODULE_1__","fieldStore","createNamespace","fieldArr","dataId","_cachedFieldsObj","forEach","getMeasure","measureFields","_cachedMeasure","getDimension","dimensionFields","_cachedDimension","Binned","_dimension__WEBPACK_IMPORTED_MODULE_0__","binsArr","Categorical","_dimension__WEBPACK_IMPORTED_MODULE_2__","_enums__WEBPACK_IMPORTED_MODULE_1__","hash","Set","domain","Continuous","_measure__WEBPACK_IMPORTED_MODULE_2__","min","Number","POSITIVE_INFINITY","max","NEGATIVE_INFINITY","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_3__","Dimension","_field__WEBPACK_IMPORTED_MODULE_0__","_cachedDomain","calculateDataDomain","Field","description","displayName","_dimension__WEBPACK_IMPORTED_MODULE_1__","_categorical__WEBPACK_IMPORTED_MODULE_2__","_temporal__WEBPACK_IMPORTED_MODULE_3__","_binned__WEBPACK_IMPORTED_MODULE_4__","_measure__WEBPACK_IMPORTED_MODULE_5__","_continuous__WEBPACK_IMPORTED_MODULE_6__","_parsers_field_parser__WEBPACK_IMPORTED_MODULE_7__","_parsers_categorical_parser__WEBPACK_IMPORTED_MODULE_8__","_parsers_temporal_parser__WEBPACK_IMPORTED_MODULE_9__","_parsers_binned_parser__WEBPACK_IMPORTED_MODULE_10__","_parsers_continuous_parser__WEBPACK_IMPORTED_MODULE_11__","_partial_field__WEBPACK_IMPORTED_MODULE_12__","Measure","_field__WEBPACK_IMPORTED_MODULE_2__","unit","defAggFn","_operator_group_by_function__WEBPACK_IMPORTED_MODULE_1__","numberFormat","BinnedParser","_field_parser__WEBPACK_IMPORTED_MODULE_0__","val","String","result","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_1__","isInvalid","getInvalidType","matched","CategoricalParser","ContinuousParser","parsedVal","parseFloat","FieldParser","TemporalParser","_dtf","_field_parser__WEBPACK_IMPORTED_MODULE_1__","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_2__","nativeDate","getNativeDate","PartialField","parser","_sanitize","Temporal","_cachedMinDiff","sortedData","filter","a","b","arrLn","minDiff","prevDatum","nextDatum","processedCount","Math","_utils__WEBPACK_IMPORTED_MODULE_2__","formatAs","prepareJoinData","resp","_value__WEBPACK_IMPORTED_MODULE_2__","updateFields","fieldStoreName","_ref2","colIdentifier","collID","partialFieldMap","newFields","coll","_field_creator__WEBPACK_IMPORTED_MODULE_5__","_field_store__WEBPACK_IMPORTED_MODULE_1__","operation","_model$_derivation","criteriaFn","derivative","_constants__WEBPACK_IMPORTED_MODULE_4__","op","meta","criteria","_derivation","_toConsumableArray","selectHelper","selectFn","sourceDm","newRowDiffSet","lastInsertedValue","li","selectorHelperFn","prepareSelectionData","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","done","err","return","checker","filterPropagationModel","propModels","filterByMeasure","fns","dataModel","dataObj","fieldsSpace","values","v","some","every","propField","valueOf","filteredModel","cloneWithSelect","selectConfig","cloneConfig","cloned","cloneWithProject","projField","allFields","projectionSet","actualProjField","sanitizeUnitSchema","unitSchema","_utils__WEBPACK_IMPORTED_MODULE_8__","sanitizeSchema","updateData","relation","_default_config__WEBPACK_IMPORTED_MODULE_6__","converterFn","_converter__WEBPACK_IMPORTED_MODULE_7__","_converterFn","_converterFn2","nameSpace","_","fieldInSchema","getOperationArguments","child","derivation","applyExistingOperationOnModel","_propModel$","_propModel$2","_getOperationArgument","selectionModel","rejectionModel","propagateIdentifiers","propModelInf","nonTraversingModel","excludeModels","propagate","children","_applyExistingOperati","_applyExistingOperati2","getRootGroupByModel","find","_parent","getRootDataModel","getPathToRootModel","path","propagationInf","propagateToSource","propagateInterpolatedValues","criterias","_ref3","actionCriterias","mutableActions","filteredCriteria","filterFn","entry","action","sourceActionCriterias","actionInf","actionConf","models","sourceIdentifiers","rootGroupByModel","inf","propagationModel","getFilteredModel","len","reverse","immutableActions","filterImmutableAction","criteriaModel","addToPropNamespace","sourceNamespace","_value","_invalidAwareValsMap","invalid","NA","nil","NIL","null","NULL","generateBuckets","binSize","start","end","buckets","findBucketRange","bucketRanges","leftIdx","rightIdx","midIdx","range","createBinnedFieldData","binsCount","_measureField$domain","_measureField$domain2","dMin","dMax","dm","_len2","_key2","_len3","_key3","_len4","_key4","_len5","operations","_key5","currentDM","frstChild","derivations","_get_common_schema__WEBPACK_IMPORTED_MODULE_2__","_row_diffset_iterator__WEBPACK_IMPORTED_MODULE_3__","_helper__WEBPACK_IMPORTED_MODULE_5__","defaultFilterFn","dm1","dm2","replaceCommonSchema","jointype","applicableFilterFn","dm1FieldStore","dm2FieldStore","dm1FieldStoreName","dm2FieldStoreName","commonSchemaList","tmpSchema","rowAdded","rowPosition","ii","tuple","userArg","dm1Fields","dm2Fields","cloneProvider1","cloneProvider2","tupleObj","cellVal","iii","getSortFn","dataType","sortType","retFunc","a1","b1","groupData","hashMap","Map","groupedData","fieldVal","createSortingFnArg","groupedDatum","targetFields","targetFieldDetails","arg","label","dataBuilder","retObj","reqSorting","tmpDataArr","colIArr","colName","insertInd","sortData","sortMeta","fDetails","_helper__WEBPACK_IMPORTED_MODULE_3__","mergeSort","sortingFn","tmpData","_row_diffset_iterator__WEBPACK_IMPORTED_MODULE_2__","_utils_helper__WEBPACK_IMPORTED_MODULE_3__","hashTable","schemaNameArr","dm1FieldStoreFieldObj","dm2FieldStoreFieldObj","prepareDataHelper","addData","hashData","schemaName","getCommonSchema","fs1","fs2","retArr","fs1Arr","getFilteredValues","sum","filteredNumber","curr","avg","totalSum","fnList","filteredValues","first","last","count","std","variance","mean","num","pow","defaultReducerName","getFieldArr","dimensions","getReducerObj","measures","defReducer","_utils_reducer_store__WEBPACK_IMPORTED_MODULE_3__","measureName","reducerFn","resolve","_group_by_function__WEBPACK_IMPORTED_MODULE_4__","existingDataModel","sFieldArr","reducerObj","fieldStoreObj","dbName","dimensionArr","measureArr","_ref4","_enums__WEBPACK_IMPORTED_MODULE_5__","rowCount","_export__WEBPACK_IMPORTED_MODULE_2__","_bucket_creator__WEBPACK_IMPORTED_MODULE_0__","_compose__WEBPACK_IMPORTED_MODULE_1__","_pure_operators__WEBPACK_IMPORTED_MODULE_2__","_cross_product__WEBPACK_IMPORTED_MODULE_3__","_data_builder__WEBPACK_IMPORTED_MODULE_4__","_difference__WEBPACK_IMPORTED_MODULE_5__","_get_common_schema__WEBPACK_IMPORTED_MODULE_6__","_group_by_function__WEBPACK_IMPORTED_MODULE_7__","_group_by__WEBPACK_IMPORTED_MODULE_8__","_merge_sort__WEBPACK_IMPORTED_MODULE_9__","_natural_join_filter_function__WEBPACK_IMPORTED_MODULE_10__","_natural_join__WEBPACK_IMPORTED_MODULE_11__","_outer_join__WEBPACK_IMPORTED_MODULE_12__","_row_diffset_iterator__WEBPACK_IMPORTED_MODULE_13__","_union__WEBPACK_IMPORTED_MODULE_14__","defSortFn","sortFn","lo","hi","mid","merge","mainArr","auxArr","naturalJoinFilter","_get_common_schema__WEBPACK_IMPORTED_MODULE_0__","commonSchemaArr","retainTuple","_cross_product__WEBPACK_IMPORTED_MODULE_0__","_natural_join_filter_function__WEBPACK_IMPORTED_MODULE_1__","dataModel1","dataModel2","_constants__WEBPACK_IMPORTED_MODULE_1__","_union__WEBPACK_IMPORTED_MODULE_2__","rowDiffArr","diffStr","diffStsArr","_export__WEBPACK_IMPORTED_MODULE_0__","Relation","source","_dataFormat","_fieldStoreName","_fieldspace","_helper__WEBPACK_IMPORTED_MODULE_2__","joinWith","unionWith","differenceWith","defConfig","oDm","retDataModel","jsonData","rowObj","fieldConfig","normalizedProjField","from","trim","_fieldConfig","fieldDef","def","removeChild","sibling","splice","parent","criteriaQueue","sd","_operator_group_by_function__WEBPACK_IMPORTED_MODULE_0__","store","convertToNativeDate","date","Date","pad","dtParams","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","defVal","isFinite","parseInt","nVal","toLowerCase","daysDef","short","long","monthsDef","H","extract","defaultNumberParser","toString","hours","getHours","P","M","getMinutes","S","getSeconds","K","getMilliseconds","day","getDay","A","getDate","month","getMonth","B","y","presentYear","getFullYear","year","Y","definitions","getTokenDefinitions","HOUR_12","AMPM_UPPERCASE","AMPM_LOWERCASE","SHORT_DAY","LONG_DAY","DAY_OF_MONTH","DAY_OF_MONTH_CONSTANT_WIDTH","SHORT_MONTH","LONG_MONTH","MONTH_OF_YEAR","SHORT_YEAR","LONG_YEAR","defaultResolver","targetParam","hourFormat24","hourFormat12","ampmLower","ampmUpper","amOrpm","isPM","tokenPrefix","TOKEN_PREFIX","tokenLiterals","occurrence","forwardChar","nDate","formattedStr","formattedVal","dateTimeStamp","tokenResolver","extractTokenValue","dtParamSeq","DATETIME_PARAM_SEQUENCE","noBreak","dtParamArr","resolverKey","resolverParams","resolverFn","param","resolvedVal","tokenObj","lastOccurrenceIndex","occObj","occIndex","targetText","regexFormat","tokenArr","obj","occurrenceLength","extractValues","OBJECTSTRING","objectToStrFn","objectToStr","arrayToStr","checkCyclicRef","parentArr","bIndex","extend2","obj1","obj2","skipUndef","_typeof","tgtArr","srcArr","srcVal","tgtVal","cRef","isArray","isObject","isString","isCallable","uniqueValues","getUniqueId","getTime","isArrEqual","arr1","arr2","formatNumber","detectDataFormat","_date_time_formatter__WEBPACK_IMPORTED_MODULE_0__","_column_major__WEBPACK_IMPORTED_MODULE_1__","_domain_generator__WEBPACK_IMPORTED_MODULE_2__","_extend2__WEBPACK_IMPORTED_MODULE_3__","_helper__WEBPACK_IMPORTED_MODULE_4__","ReducerStore","set","_operator__WEBPACK_IMPORTED_MODULE_0__","reducer","__unregister","has","delete","reducerStore","getStore","Value","configurable","writable","ElectricNode","edges","listeners","nextFrame","currentFrame","_edges","lstnrs","GraphNode","qualifiedName","outgoingEdges","_seed","requireResolve","retriever","history","resolver","electricEdges","dep","node","seed","retrieveDetails","edge","head","hist","Graph","qualifiedNodeMap","_graph_node__WEBPACK_IMPORTED_MODULE_1__","accumulate","_wholeSet","_propagate","propagationOverride","currentFrameListeners","nextFrameListeners","_schedule","qname","flushTarget","flush","mount","resolveReqList","rec","objn","perv","_node","addDependencies","getDependencies","getResolvedList","getUpstreamNodes","prop","props","fnSpec","nodes","eNode","_electric_node__WEBPACK_IMPORTED_MODULE_2__","addEdges","changedSet","upstreamNodes","upstreamNode","__execUniqueElectricEdges","cfLstnrs","nfLstnrs","toArray","entries","repeatHead","resetPropagationOverride","_this4","qnames","update","resolved","resolveDependencyOrder","_model__WEBPACK_IMPORTED_MODULE_0__","Model","_graph","_graph__WEBPACK_IMPORTED_MODULE_0__","_lockFlag","_reqQ","mountPoint","_addPropInModel","_customResolver","calculationConfig","customResolver","varName","fetchFn","dependencies","_defineProperty","createNodesFrom","instantCall","_graph$stopPropagatio","propsArr","unsub","createElectricNodeOf","stopPropagation","setPropagationOverride","resetNodeValue","_graph$stopPropagatio2","setProp","getNodeValue","getNodeFromQualifiedName","isSimpleObject","win","reqAnimFrame","setTimeout","getTimeBasedId","__lastTime","__id","pullableRecent","nFn","pullableEnd","unique","flat","res","identityMap","arrays","splitPathProp","pathArr","scheduler","onFinishCallback","queue","animationFrame","tempQ","fetch","namedNode","fetchAggregator","list","placedIndex","preArr","postArr","nodeDetails","identity","resolveMap","neighbour","CustomResolver","_dep","makeEntry","sCon","ForeignSet","_set","set1","set2","filteredKeys","s1","s2","webpackPolyfill","deprecate","paths","_interopRequireDefault","default","_lib2","require","_containerManager2","slLib","init","doc","document","round","htmlSplCharSpace"," ","documentSupport","getDocumentSupport","SVG_BBOX_CORRECTION","isWebKit","SmartLabelManager","id","container","useEllipses","wrapper","prevInstance","isBrowserLess","dispose","maxCacheLimit","maxDefaultCacheLimit","getElementById","createContainer","innerHTML","testStrAvg","isHeadLess","isIE","offsetHeight","offsetWidth","parentContainerStyle","style","parentContainer","_containerManager","_showNoEllipses","_init","setStyle","textToLines","smartlabel","lines","split","_calCharDimWithCache","calculateDifference","size","csArr","tw","twi","cachedStyle","asymmetricDifference","maxAdvancedCacheLimit","_container","cache","_advancedCache","advancedCacheKey","_advancedCacheKey","cacheName","fontSize","fontFamily","fontWeight","fontStyle","cacheInitName","repeat","shift","width","height","_getWidthFn","contObj","_containerObj","svgText","bbox","textContent","getBBox","_styleNotSet","setLineHeight","sCont","_context","context","_cache","charCache","_lineHeight","lineHeight","useEllipsesOnOverflow","getSmartText","maxWidth","maxHeight","noWrap","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriWidth","oriHeight","newCharIndex","nearestChar","tempChar","getWidth","initialLeft","initialTop","getOriSizeImproveObj","spanArr","x","minWidth","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","ellipsesWidth","dotWidth","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","replace","test","charAt","slice","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","xmlTagRegEx","ltgtRegex","match","getOriSize","substr","getNearestBreakIndex","detailObj","tooltext","lastIndexOf","spanAdditionRegx","spanAdditionReplacer","classNameWithTag","classNameWithTagBR","childRetriverFn","childRetriverString","noClassTesting","classNameReg","className","spaceIdx","dashIdx","offsetLeft","offsetTop","parentNode","insertBefore","createElement","classNameBrReg","spanRemovalRegx","error","detailedCalculationFlag","textArr","letter","lSize","cumulativeSize","indiSizeStore","lib","userAgent","navigator","ceil","floor","clsNameSpace","containerClass","brReplaceRegex","position","top","whiteSpace","padding","overflow","supportedStyle","font","font-family","font-weight","font-size","line-height","font-style","getElementsByClassName","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","containerParent","body","appendChild","setAttribute","getElementsByTagName","sl","charLen","increment","avgWidth","styleObj","fSize","Muze","ContainerManager","maxContainers","svg","containers","rootNode","createElementNS","setAttributeNS","svgRoot","diff","containerObj","keyStr","prev","removeContainer","addContainer","avgCharWidth","display","cObj","ascending","NaN","bisector","compare","ascendingComparator","left","right","ascendingBisect","bisectRight","number","array","src_range","stop","step","e10","sqrt","e5","e2","src_ticks","ticks","tickIncrement","power","log","LN10","tickStep","step0","abs","step1","quantile","valueof","i0","value0","each","remove","clear","keys","empty","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","createObject","setObject","createMap","setMap","sortKey","k","proto","add","implicit","ordinal","unknown","scale","copy","band","bandwidth","ordinalRange","paddingInner","paddingOuter","align","rescale","sequence","rangeRound","invertExtent","r0","r1","hiIndex","getClosestIndexOf","invert","side","highVal","d1","low","high","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","exec","Rgb","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","hex","h","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","isNaN","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","C","D","E","ED","EB","BC_DA","cubehelix","cubehelixConvert","Cubehelix","bl","basis","v0","v1","v2","v3","cosh","sinh","src_constant","linear","hue","constant","gamma","nogamma","exponential","src_rgb","rgbGamma","colorRgb","rgbSpline","spline","colors","rgbBasis","src_number","reA","reB","src_string","am","bm","bs","bi","lastIndex","q","one","zero","cssNode","cssRoot","cssView","svgNode","src_value","value_typeof","string","setTime","nb","na","src_round","degrees","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","interpolateTransformCss","parseCss","documentElement","defaultView","transform","getComputedStyle","getPropertyValue","interpolateTransformSvg","parseSvg","baseVal","consolidate","matrix","SQRT2","colorHsl","hslLong","colorHcl","cubehelixGamma","colorCubehelix","cubehelixLong","piecewise","interpolate","d3_scale_src_constant","d3_scale_src_number","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","bisect","target","clamp","continuous","output","input","interpolateValue","deinterpolateClamp","reinterpolateClamp","interpolateRound","formatDecimal","toExponential","indexOf","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","fill","sign","symbol","comma","precision","prefixExponent","locale","formatPrefix","formatTrim","out","i1","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","src_identity","prefixes","src_locale","group","grouping","thousands","substring","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","charCodeAt","Infinity","defaultLocale","formatLocale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","interval","x0","x1","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","u","raise","thresholds","threshold","quantiles","quantize","newInterval","floori","offseti","offset","previous","millisecond","durationMinute","durationWeek","second","getUTCSeconds","minute","hour","getTimezoneOffset","setHours","setDate","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","setMonth","setFullYear","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","localDate","L","utcDate","UTC","newYear","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","timeDay","timeYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","timeSunday","formatWeekNumberISO","timeThursday","formatWeekdayNumberSunday","formatWeekNumberMonday","timeMonday","formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatPeriod","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parsePeriod","parseLocaleDate","parseLocaleTime","newParse","newDate","week","toISOString","durationSecond","durationHour","durationDay","durationMonth","durationYear","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickIntervals","tickInterval","src_time","timeMonth","timeWeek","timeHour","timeMinute","timeSecond","timeMillisecond","src_colors","interpolateCubehelixLong","ramp","sequential","interpolator","d3_scale_chromatic_src_colors","src_ramp","scheme","interpolateRgbBasis","warm","cool","sequential_multi_rainbow","ts","magma","inferno","plasma","UNIT_GLOBAL_NAMESPACE","UNIT_LOCAL_NAMESPACE","LAYER_LOCAL_NAMESPACE","LAYER_GLOBAL_NAMESPACE","GROUP_GLOBAL_NAMESPACE","GROUP_LOCAL_NAMESPACE","CANVAS_LOCAL_NAMESPACE","CANVAS_GLOBAL_NAMESPACE","ReservedFields","CommonProps","ACTION_INF","ON_LAYER_DRAW","MATRIX_CREATED","d3_axis_src_identity","bottom","epsilon","entering","__axis","axis","orient","tickArguments","tickValues","tickTransform","tickSizeInner","tickSizeOuter","tickPadding","spacing","range0","range1","center","selection","selectAll","tick","tickExit","exit","tickEnter","enter","append","attr","line","insert","transition","getAttribute","tickSize","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","ccw","dx","dy","cw","da","rect","d3_shape_src_constant","halfPi","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","d2","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","point","curve_linear","src_line","pointX","pointY","defined","curve","curveLinear","buffer","defined0","src_area","area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","curveRadial","Radial","_curve","radial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye","noop","that","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","beta","_basis","_beta","_x","_y","custom","bundle","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","s0","slope2","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","_t","curve_step","stepBefore","stepAfter","none","series","order_none","stackValue","order_ascending","sums","cubicInOut","polyIn","polyOut","polyInOut","b2","b3","b4","b5","b6","b7","b8","b9","b0","bounceOut","backIn","overshoot","backOut","backInOut","elasticOut","elasticIn","amplitude","period","d3_voronoi_src_constant","elasticInOut","RedBlackTree","RedBlackNode","R","RedBlackRotateLeft","tree","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","createEdge","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","epsilon2","ha","hc","circle","Circle","before","circles","detachCircle","beachPool","createBeach","beach","Beach","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","sortCellHalfedges","clipEdges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","cover","dc","v00","v01","v11","v10","polygons","polygon","triangles","e1","links","radius","_found","vx","vy","src_voronoi","voronoi","Selection","_data","_idMap","_dataMap","_mode","_enterdata","_exitdata","newData","idGetter","_idGetter","tempMap","purgedIds","purged","temp","_this5","HTMLElement","common_utils_typeof","random","sanitizeIP","typeObj","nonExistentKeys","checkExistence","getMax","getMin","getDomainFromData","fieldType","domArr","DimensionSubtype","_loop","_fields","field0","field1","arr0","firstMin","secondMin","firstMax","secondMax","unionDomain","domains","dom","symbolFns","symbolCircle","cross","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolWye","symbolTriangle","easeFns","cubic","easeCubic","bounce","easeBounce","elastic","easeElastic","back","easeBack","poly","easePoly","circleInOut","getNearestValue","filterData","getWindow","getQualifiedClassName","requestAnimationFrame","cancelAnimationFrame","cls","defaultValue","getDependencyOrder","graph","dependencyOrder","visited","visit","objectIterator","Voronoi","common_utils_classCallCheck","_voronoi","_voronoiFn","addListenerToNamespace","namespaceInf","namespace","_listeners","getObjProp","Store","propName","propNames","callBack","on","calculatedProp","intSanitizer","transactor","holder","conf","stateProps","addAsMethod","nameSpaceProp","nsProp","compareTo","paramsLen","prevVal","spreadParams","sanitization","typeCheck","typeExpected","preset","oldValues","generateGetterSetters","propInfo","typeChecker","isEqual","oldVal","newVal","arraysEqual","is","ERROR_MSG","INTERFACE_IMPL","mergeRecursive","sink","createSelection","sel","appendObj","idFn","dataSelect","mergedSelection","numberInterpolator","interpolateNumber","piecewiseInterpolator","rgbToHsv","detectColor","col","getDataModelFromRange","selFields","selFn","getDataModelFromIdentifiers","filteredDataModel","dataArr","filteredSchema","include","registerListeners","listenerMap","propListenerMap","local","mapObj","propType","listenerFn","listener","isValidValue","getSymbol","stackOrders","_stackOrders","stackOrderNone","stackOrderAscending","stackOffsets","_stackOffsets","yp","yn","stackOffsetNone","si","sij0","s3","sk","stack","orderNone","offsetNone","oz","kz","sz","sij","ki","d3Stack","pathInterpolators","curveStepAfter","curveStepBefore","curveStep","curveCatmullRom","Symbols","axisLeft","axisRight","axisTop","axisBottom","pie","descending","arcs","pa","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","intersect","x3","y3","x32","y32","kc","lc","centroid","Scales","scaleBand","getSmallestDiff","points","timeFormats","timeDurations","formatTemporal","nearestInterval","getNearestInterval","getValueParser","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","retrieveNearestGroupByReducers","nearestReducers","getDerivations","groupDerivation","getParent","filteredReducers","measureFieldNames","xhtml","src_namespaces","xlink","xml","xmlns","src_namespace","namespaces","space","creator","fullname","creatorFixed","ownerDocument","creatorInherit","uri","namespaceURI","src_selector","selector","querySelector","selectorAll","querySelectorAll","matcher","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","sparse","EnterNode","_next","__data__","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","src_window","styleValue","classArray","classList","ClassList","_names","classedAdd","classedRemove","contains","textRemove","htmlRemove","nextSibling","lower","previousSibling","firstChild","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","event","mouseenter","mouseleave","filterContextListener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","groups","parents","_groups","_parents","subgroups","subnode","subgroup","enterGroup","updateGroup","_enter","_exit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","attrRemoveNS","removeAttributeNS","attrRemove","removeAttribute","attrFunctionNS","attrFunction","attrConstantNS","attrConstant","priority","styleRemove","removeProperty","styleFunction","setProperty","styleConstant","propertyRemove","propertyFunction","propertyConstant","classed","classedFunction","classedTrue","classedFalse","textFunction","textConstant","html","htmlFunction","htmlConstant","deep","typenames","parseTypenames","dispatch","dispatchFunction","dispatchConstant","src_select","nextId","Local","current","src_point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","Dispatch","T","types","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","d3_drag_src_constant","DragEvent","subject","active","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","touchable","gestures","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","yesdrag","noclick","clearTimeout","sublisteners","clickDistance","taskHead","taskTail","frame","timeout","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","timer_typeof","now","setFrame","clearNow","Timer","_call","_time","timer","delay","restart","wake","timerFlush","nap","sleep","poke","clearInterval","setInterval","TypeError","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","duration","ease","schedule","tweenValue","_id","transition_interpolate","interpolateRgb","interpolateString","Transition","_name","newId","selection_prototype","inherit","id0","id1","onFunction","on0","on1","sit","attrTween","value00","value10","interpolate0","value1","attrTweenNS","styleTween","styleRemoveEnd","removeFunction","tweenRemove","tween0","tween1","tweenFunction","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","defaultTiming","easeCubicInOut","interrupt","selectElement","makeElement","elemType","callbacks","keyFn","SVGElement","selectorVal","selectorType","actualSelector","enterSel","mergeSel","exitSel","applyStyle","setElementAttrs","attrs","setAttrs","setStyles","styles","createElements","getClientPoint","pos","clientPoint","getEvent","d3event","getD3Drag","d3drag","getSmartComputedStyle","css","textEl","mandatoryStyle","fill-opacity","renderer_utils_typeof","computedStyle","styleForSmartLabel","hasTouch","events","EVENT_LIST","composition","resolveFn","notification","hasOwn","LifeCycleManager","lifecycle_manager_classCallCheck","_eventList","_promises","_notifiers","_lifeCycles","_unreleasedLifeCycles","_boot","_preparePromises","Promise","promise","_makeNotifierPromise","createPromise","then","prm","formalName","client","_releasePromisesFromCache","_notify","stage","_resolvePromise","retrieve","_callLifeCycleCallback","_cachePromise","_resetTargetPromise","lifeCycles","DRAG","HOVER","SELECTIONDRAG","CLICK","LONGTOUCH","TOUCHDRAG","ALL_ACTIONS","SELECTION_NEW_ENTRY","SELECTION_NEW_EXIT","SELECTION_NULL","SELECTION_OLD_ENTRY","SELECTION_OLD_EXIT","SelectionSet","completeSet","_volatile","selection_set_classCallCheck","_completeSetCount","_lockedSelection","_resetted","ids","entrySet","exitSet","lockedSel","addSet","removeSet","updateSet","changeSideEffectAvailability","toEnable","sideEffects","change","enable","disable","getMergedSet","helper_toConsumableArray","conditionsMap","newEntry","SELECTION","oldEntry","mergedEnter","newExit","oldExit","mergedExit","complete","getSetInfo","selectionSet","propagationData","resetted","getModelFromSet","condition","Firebolt","actions","behaviourEffectMap","firebolt_classCallCheck","_sideEffectDefinitions","_sideEffects","_propagationInf","_actions","behavioural","physical","_selectionSet","_volatileSelectionSet","_propagationFields","_sourceSideEffects","selectionBox","_propagationBehaviourMap","_sourceBehaviours","_actionBehaviourMap","_config","_behaviourEffectMap","_entryExitSet","_actionHistory","_queuedSideEffects","mapSideEffects","registerBehaviouralActions","registerSideEffects","registerPhysicalBehaviouralMap","physicalBehaviouralMap","registerPhysicalActions","behEffectMap","preventDefaultActions","effectNames","effects","firebolt_toConsumableArray","behaviours","initializeBehaviouralActions","dispatchableBehaviours","Action","prepareSelectionSets","initializeSideEffects","sideEffectStore","actionHistory","queuedSideEffects","sideEffect","combinedSet","unionSets","behaviour","entryExitSet","existingModel","effect","firebolt_typeof","sideEffectInstance","isEnabled","mutates","dispatchSideEffect","propagationInfo","getSideEffects","propagationSelectionSet","getPropagationSelectionSet","shouldApplySideEffects","sourceSelectionSet","applicableSideEffects","getApplicableSideEffects","applySideEffects","physicalAction","actionBehaviourMap","behaviourMap","mapActionsAndBehaviour","unsubscribe","onDataModelPropagation","propValue","dispatchBehaviour","uniqueIds","behaviouralActions","volatileSelectionSet","sideEffectDefinitions","sideEffectsMap","SideEffect","sideEffectConf","initedActions","initializePhysicalActions","physicalActions","phyAction","initedPhysicalActions","getDefaultTargetContainer","bindActionWithBehaviour","targets","behaviourList","xFields","yFields","xMeasures","FieldType","yMeasures","_propModel$getData","fieldMap","getFullData","propagationSource","applicableSelectionSets","GenericBehaviour","firebolt","generic_classCallCheck","_enabled","selectionSets","getSelectionSets","_this$firebolt$getAdd","getAddSetFromCriteria","getPropagationInf","setSelectionSet","getEntryExitSet","_selectionSet$getSets","getSets","setConfig","isSourceFieldPresent","getSourceFields","VolatileBehaviour","reset","existingAddSet","updateExit","getCompleteSet","BRUSH","HIGHLIGHT","TOOLTIP","FILTER","HighlightBehaviour","BrushBehaviour","BEHAVIOURNAMES","FilterBehaviour","PersistentBehaviour","updateEntry","mergedExitSet","completeSetCount","SelectBehaviour","getDragActionConfig","sourceInfo","axes","xAxis","yAxis","axisFields","xField","getMembers","yField","xFieldType","yFieldType","stPos","startPos","endPos","dragDim","MeasureSubtype","isXDimension","isYDimension","xRange","yRange","selectedDomains","rangeObj","xdom","ydom","snap","getNearestRange","attachDragEvent","targetEl","drawingInf","touchStart","d3Drag","getDrawingContext","getSourceInfo","beh","dragEnd","hover","interaction","tooltip","svgContainer","nearestPoint","getNearestPoint","getAllPoints","showInPosition","generatePayloadFromEvent","click","physical_defineProperty","_physicalActions","ACTIONNAMES","longtouch","touchEnd","touchdrag","PROPS","valueParser","GenericSideEffect","generic_sideeffect_classCallCheck","_strategy","_strategies","defaultConfig","SurrogateSideEffect","interactionType","layers","layer","interactive","applyInteractionStyle","SpawnableSideEffect","_drawingContext","changeVisibility","sideEffectGroup","visible","defClassName","classPrefix","SelectionBox","boxConf","box","drawingContext","unitWidth","unitHeight","selectionGroupClassName","hide","sourceInf","_getBoxDimensionsFrom","getBoxDimensionsFromPayload","direction","xDim","yDim","xLinear","yLinear","xCriteria","yCriteria","x1Val","x2Val","bandScale","x1DomainIndex","x2DomainIndex","_sort2","helper_slicedToArray","getScaleValue","getUnitWidth","y1Val","y2Val","y1DomainIndex","y2DomainIndex","_sort4","_xDim","_yDim","dimension","show","selectionBoxDrag","onDrag","boxClassName","INITIAL_STYLE","connectorClassName","margin","content","iconContainerSize","iconScale","iconShape","iconColor","rowMargin","separator","parentClassName","arrow","disabled","getArrowPos","dim","measurement","arrowPos","boxHeight","boxWidth","arrowWidth","plotBottom","boxBottom","plotRight","boxRight","placeArrow","tooltipArrow","_tooltipArrow","tooltipBackground","_tooltipBackground","arrowConf","_arrowOrientation","formatters","strategy_defineProperty","getDefaultTooltipFormatterFn","buildTooltipData","fieldValues","fieldspace","detailFields","containsDetailField","dataLen","dimensionMeasureMap","timeDiffs","getRowContent","formattedValue","measureIndex","formatterFn","uniqueVals","strategy_toConsumableArray","colorAxis","shapeAxis","shape","sizeAxis","isRetinalField","associatedMeasures","icon","getColor","getShape","getSize","formattedKey","measure","measureFormatter","margin-left","displayFormat","getTabularData","fieldObj","allMeasures","_construct","strategy","DEFAULT_STRATEGY","Content","content_classCallCheck","_model","_formatter","ctx","_mount","table","tbody","margin-right","el","Tooltip","htmlContainer","tooltip_classCallCheck","connectorContainer","tooltipConf","contentClass","_tooltipContainer","_contentContainer","_contents","_tooltipConnectorContainer","qualifiedClassName","addClass","defConf","contentConfig","reorderContainers","contentConf","render","_target","repositionArrow","arrowDisabled","arrowOrient","outsidePlot","connector","_offset","orientation","_extent","arrowSize","topSpace","dimX","rightSpace","leftSpace","positionTop","positionRight","positionLeft","positionHorizontal","positionVertical","_position","_arrowPos","strategies","showSelectedItems","aggregatedModel","fieldsConf","measureNames","strategies_toConsumableArray","_getPrototypeOf2","side_effects_tooltip_classCallCheck","tooltip_possibleConstructorReturn","tooltip_getPrototypeOf","_tooltips","totalHeight","totalWidth","isEmpty","tooltips","boundBox","dataModels","fragmented","showVertically","tooltipPos","boxes","tooltip_toConsumableArray","sourceFields","indices","plotDimensions","getPlotPointsFromIdentifiers","plotDim","dt","dataTransform","layoutContainer","parentContainerDimensions","layoutBoundBox","unitBoundBox","tooltipInst","TooltipRenderer","timeDiffsByField","positionRelativeTo","tooltipBoundBox","getContents","spaceOutBoxes","spaceOutIfOverlap","firstBox","secondBox","opposite","Crossline","bandWidth","_this$config","bandClass","lineClass","elemData","axisIndex","fieldInst","xOffset","plotWidth","crossline_toConsumableArray","getPlotSpan","getPlotPadding","startPx","endPx","dataPoint","parentGroup","fade","fadeFn","focus","highlight","PlotHighlighter","plot_highlighter_classCallCheck","plot_highlighter_possibleConstructorReturn","plot_highlighter_getPrototypeOf","FilterEffect","entryModel","clearCaching","resetData","enableCaching","addLayer","layerDefs","layerRegistry","layerDef","mark","layerCls","shouldDrawAnchors","depLayerEncoding","encoding","defaultSizeValue","layerObj","instances","getTransitionConfig","calculateDomain","linkedLayer","AnchorEffect","anchors_classCallCheck","anchors_possibleConstructorReturn","anchors_getPrototypeOf","_layersMap","addAnchorLayers","metaInf","registry","layerDefsVal","registerImmediateListener","STATE_NAMESPACES","anchors_slicedToArray","_layers","elems","_linkedLayer$getTrans2","getLayerByName","getTransformedDataFromIdentifiers","transformedData","transformedDataModel","PersistentAnchors","BrushAnchors","behaviour_effect_map_defineProperty","BEHAVIOURS","STACK","ANGLE","RADIUS","SIZE","COLOR","SHAPE","ENCODING","X0","Y0","nearestPointThreshold","strokeOpacity","connectNullData","SimpleLayer","BOTTOM","TOP","LEFT","RIGHT","axisOrientationMap","axis_orientation_defineProperty","_axisOrientationMap","AxisOrientation","LINEAR","BAND","TIME","ORDINAL","QUANTIZE","QUANTILE","LOG","POW","IDENTITY","SEQUENTIAL","THRESHOLD","CONTINOUS","DISCRETE","HIDDEN","scaleLinear","scales","scaleThreshold","scaleLog","scalePow","scaleIdentity","scaleOrdinal","scaleSequential","scaleQuantize","scaleQuantile","scaleTime","scaleMap","scale_creator_defineProperty","_scaleMap","ScaleType","createScale","scaleFactory","axisName","axisNamePadding","fixedBaseline","labels","rotation","smartTicks","numberOfTicks","showAxisName","showInnerTicks","showOuterTicks","yOffset","rotateAxis","instance","tickText","labelManager","renderConfig","getTickSize","yShift","xShift","tickFormatter","tickLabelDim","quadrant","rotationNormalizer","angleToRadian","angle","changeTickOrientation","selectContainer","axisInstance","_smartTicks","isSmartTicks","registerAnimationDoneHook","setFixedBaseline","setAxisNamePos","textNode","axisNameHeight","labelOffset","availableSpace","setAxisRange","rangeBounds","space_setter_defineProperty","adjustRange","getAxisOffset","timeDiff","avWidth","bars","spaceSetter","spaceConfig","heightForTicks","_context$availableSpa","availWidth","availHeight","isOffset","_context$renderConfig","_context$config2","_context$getAxisDimen","getAxisDimensions","tickDimensions","allTickDimensions","axisNameDimensions","tickDimHeight","tickDimWidth","namePadding","labelConfig","minTickDistance","_minTickDistance","minTickSpace","_minTickSpace","_minDiff","tickShifter","getTickValues","maxTickSpaces","widthForTicks","continous","totalTickWidth","getRotatedSpaces","rotatedHeight","rotatedWidth","setOffset","logicalSpace","getAxisComponentDimensions","axisTicks","largestTick","largestTickDimensions","smartTick","_context$config","labelFunc","_tickLabelStyle","originalLabel","getFormattedText","_axisNameStyle","getHorizontalAxisSpace","axisDimensions","axisDimHeight","minTickDiff","getMinTickDifference","cartesian_axis_helper_toConsumableArray","getVerticalAxisSpace","_context$config3","calculateBandSpace","largestDimHeight","minTickWidth","_getHorizontalAxisSpa","_getVerticalAxisSpace","getValidDomain","userDom","setContinousAxisDomain","_domain","axisComponentDimensions","oldConfig","mockedOldConfig","shouldAxesScaleUpdate","hasAxesConfigChanged","properties","sanitizeTickFormatter","_scale","_axis","createAxis","_tickFormatter","_renderConfig","SimpleAxis","simple_axis_classCallCheck","_dependencies","_range","_domainLock","_axisDimensions","defCon","simpleConfig","bodyElem","dist","_animationDonePromises","domainValue","setAxisComponentDimensions","axisClass","setTickConfig","domainVal","computeAxisDimensions","_getAxisComponentDime","labelHeight","labelWidth","calculateContinousSpace","_context$renderConfig6","axisNameWidth","_getHorizontalAxisSpa2","_getVerticalAxisSpace2","renderAxis","axisNameStyle","tickLabelStyle","axisTickFormatter","labelProps","axisNameSpace","all","LinearInterpolator","LogInterpolator","PowInterpolator","interpolatorMap","continous_axis_defineProperty","_interpolatorMap","ContinousAxis","continous_axis_classCallCheck","continous_axis_possibleConstructorReturn","continous_axis_getPrototypeOf","InterpolatorCls","_interpolator","_this$renderConfig","sanitizeDomain","_this$config3","getNumberOfTicks","labelDim","tickLength","numberOfValues","_this$axisComponentDi","BandAxis","_get","band_axis_getPrototypeOf","_this$config2","_this$maxTickSpaces","_getRotatedSpaces","_this$renderConfig2","TimeAxis","time_axis_classCallCheck","time_axis_possibleConstructorReturn","time_axis_getPrototypeOf","time_axis_get","rawTicks","x11Colors","Pink","LightPink","HotPink","DeepPink","PaleVioletRed","MediumVioletRed","LightSalmon","Salmon","DarkSalmon","LightCoral","IndianRed","Crimson","FireBrick","DarkRed","Red","OrangeRed","Tomato","Coral","DarkOrange","Orange","Gold","Yellow","LightYellow","LemonChiffon","LightGoldenrodYellow","PapayaWhip","Moccasin","PeachPuff","PaleGoldenrod","Khaki","DarkKhaki","Cornsilk","BlanchedAlmond","Bisque","NavajoWhite","Wheat","BurlyWood","Tan","RosyBrown","SandyBrown","Goldenrod","DarkGoldenrod","Peru","Chocolate","SaddleBrown","Sienna","Brown","Maroon","DarkOliveGreen","Olive","OliveDrab","YellowGreen","LimeGreen","Lime","LawnGreen","Chartreuse","GreenYellow","SpringGreen","MediumSpringGreen","LightGreen","PaleGreen","DarkSeaGreen","MediumSeaGreen","SeaGreen","ForestGreen","Green","DarkGreen","MediumAquamarine","Aqua","Cyan","LightCyan","PaleTurquoise","Aquamarine","Turquoise","MediumTurquoise","DarkTurquoise","LightSeaGreen","CadetBlue","DarkCyan","Teal","LightSteelBlue","PowderBlue","LightBlue","SkyBlue","LightSkyBlue","DeepSkyBlue","DodgerBlue","CornflowerBlue","SteelBlue","RoyalBlue","Blue","MediumBlue","DarkBlue","Navy","MidnightBlue","Lavender","Thistle","Plum","Violet","Orchid","Fuchsia","Magenta","MediumOrchid","MediumPurple","BlueViolet","DarkViolet","DarkOrchid","DarkMagenta","Purple","Indigo","DarkSlateBlue","SlateBlue","MediumSlateBlue","White","Snow","Honeydew","MintCream","Azure","AliceBlue","GhostWhite","WhiteSmoke","Seashell","Beige","OldLace","FloralWhite","Ivory","AntiqueWhite","Linen","LavenderBlush","MistyRose","Gainsboro","LightGray","Silver","DarkGrey","Grey","DimGrey","LightSlateGrey","SlateGrey","DarkSlateGrey","Black","palette","DEFAULT_GRADIENT_COLOR","DEFAULT_CONFIG","stops","getHslString","hslArr","convertToXllString","baseString","getActualHslColor","paletteColor","hexToHsv","props_toConsumableArray","newConfig","getStops","newStops","color_strategy_toConsumableArray","rangeStops","newStopsLength","newRange","hslInterpolator","interpolateHslLong","indexedDomain","scaleDomain","indexedDomainMeasure","normalDomain","steppedDomain","_getStops","continousSteppedDomain","_getStops2","uniqueRange","indexedRange","normalRange","strategyGetter","domainType","rangeType","schemeType","color_strategy_defineProperty","domainRange","ColorAxis","color_axis_classCallCheck","_domainType","_rangeType","_schemeType","getSchemeType","_colorStrategy","setColorStrategy","updateDomain","colorStrategy","getScheme","colorSchemes","hslColorArray","getRawColor","color_axis_toConsumableArray","scaleInfo","domainRangeFn","transformationArr","newH","newS","newL","newA","treatNullMeasures","sizeVal","size_strategy_defineProperty","pieceWiseRange","numVal","size_strategy_toConsumableArray","intervals","newIntervals","discreteRange","SizeAxis","size_axis_classCallCheck","_sizeStrategy","setStrategy","domainInfo","domainFn","generator","ShapeAxis","shape_axis_classCallCheck","_generatedShapes","shapeType","shapeGenerator","generatorFn","generatedShapes","DATA_TYPES","group_transform","data_type_scale_map_defineProperty","_dataTypeScaleMap","groupByIndices","nestCollection","nestFn","identityTransform","transformMap","transform_factory_defineProperty","_transformMap","uniqueField","valueField","normalizedData","normalizeData","uniqueFieldIndex","valueFieldIndex","seriesKeyIndex","seriesKeys","tuples","_tuple","seriesKey","newArr","orderBy","orderIndex","groupByIndex","localeCompare","stackData","seriesData","transformFactory","getLayerColor","colorEncoding","colorFieldIndex","rawColor","transfromColor","styleType","intensity","stateColor","originalColor","fillColorInfo","transformColor","interactionStyles","elements","getPlotElementsFromSet","_d$meta","colorTransform","helpers_slicedToArray","getAxesScales","_map2","_map4","xScale","yScale","getIndividualClassName","individualClassName","classNameStr","attachDataToVoronoi","_ref5","helpers_toConsumableArray","updateStyle","positionPoints","positioner","encodingTransform","getPlotMeasurement","dimensionalValues","fieldInfo","encodingFieldsInf","transformType","_bandScale","span","groupSpan","offsetValues","actualGroupWidth","dataProps","innerPadding","getGroupSpan","isAxisBandScale","axisPadding","groupPadding","resolveInvalidTransformType","_context$encodingFiel","groupByField","groupByFieldMeasure","getValidTransformForAggFn","resolvedInvalidTransformType","_context$encodingFiel2","isCustomTransformTypeProvided","_customConfig","listener_map_slicedToArray","encodingValue","getEncodingFieldInf","_map6","x0Field","y0Field","colorField","shapeField","sizeField","_map8","_map10","xFieldSubType","yFieldSubType","_map12","xFieldIndex","yFieldIndex","x0FieldIndex","y0FieldIndex","resolveTransformType","_transformedData","getTransformedData","_normalizedData","getNormalizedData","calculateDomainFromData","_updateLock","getRenderProps","registerChangeListener","renderLayer","throwback","commit","defaultOptions","default_options_defineProperty","_defaultOptions","newConf","defaultPolicy","_cacheEnabled","_cachedData","BaseLayer","base_layer_classCallCheck","base_layer_possibleConstructorReturn","base_layer_getPrototypeOf","base_layer_assertThisInitialized","alias","_points","_measurement","_store","localNs","initializeGlobalState","globalState","getState","helpers_defineProperty","base_layer_defineProperty","global","unitRowIndex","unitColIndex","_encodingFieldsInf","_encodingTransform","_alias","transformData","encodingFieldInf","yEnc","xEnc","encodingType","transformedDataArr","fieldsLen","pointObj","_transformType","getValidTransform","pointMap","_pointMap","_dataProps","_this$encodingFieldsI","base_layer_slicedToArray","xMeasure","yMeasure","_identifiers$","_identifiers$2","xMeasureIndex","yMeasureIndex","getAllAttrs","filteredPoints","base_layer_toConsumableArray","enc","_identifiers$getData","identifierData","identifierSchema","_this$encodingFieldsI2","tupleArr","transformedVal","base_layer_construct","userConf","drawLine","curveInterpolatorFn","linepath","LineLayer","line_classCallCheck","line_possibleConstructorReturn","line_getPrototypeOf","isXDim","isYDim","xPx","yPx","_getLayerColor","stroke","rowId","cachePoint","seriesClassName","containerSelection","animateGroup","groupTransition","groupAnimateStyle","stroke-opacity","getPathStyle","translatePoints","colorValFn","colorVal","getDrawFn","searchRadius","_point$data$data","getIdentifiersFromData","layerId","drawArea","easeEffect","renderer_slicedToArray","enterAreaPath","updateAreaPath","selectionEnter","AreaLayer","area_get","area_getPrototypeOf","_getAxesScales","classNameFn","y0Px","invalidY","invalidY0","minOuterRadius","stroke-width","stroke-linejoin","innerRadiusFixer","states","fadeout","selected","ArcLayer","arc_classCallCheck","arc_possibleConstructorReturn","arc_getPrototypeOf","_prevPieData","pieData","pieIndex","prevData","_getFieldIndices","getFieldIndices","arc_helper_slicedToArray","angleField","radiusField","angleIndex","sizeIndex","radiusIndex","colorIndex","dataVal","uid","outerRadiusValue","angleVal","_previousInfo","getPreviousPoint","currIndex","prevArc","nextArc","_dataPoint$datum","_this$measurement","chartHeight","chartWidth","qualClassName","getRadiusRange","defaultRadius","radiusDomain","rangeValueGetter","getRangeValue","domainMultiplier","sizeAxisDomain","sizeMultiplier","_chartWidth","_chartHeight","consecutiveExits","exitCounter","arcFn","tweenPie","individualClass","tweenExit","exitArr","oldExitCounter","tweenExitPie","consecutiveExitArr","gElem","pieSlices","pieSliceInf","tData","drawText","selectionMerge","backgroundVal","textanchor","textStyle","background","backgroundPadding","_smartLabel$getOriSiz","backgroundEl","TextLayer","textEncoding","textField","textFormatter","backgroundEncoding","backgroundValue","textFieldIndex","textValue","text_slicedToArray","text-anchor","drawSymbols","mergedGroups","symbolGroups","symbolEnter","createShape","groupElement","Element","newShape","nodeName","src","href","shapeElement","pathStr","checkPath","exitGroups","defColorStyle","fillOpacity","shapes","sizes","PointLayer","point_classCallCheck","point_possibleConstructorReturn","point_getPrototypeOf","sizeEncoding","shapeEncoding","sizeValue","shapeFieldIndex","sizeFieldIndex","_config$offset","offsetX","offsetY","point_slicedToArray","maxSize","generateDataPoints","point_toConsumableArray","drawFn","_maxSize","_getPlotMeasurement2","widthMetrics","heightMetrics","offsetXValues","offsetYValues","measurementConf","getMeasurementConfig","widthSpan","heightSpan","distanceLimit","drawRects","barEnterFn","transitionBars","selTransition","resolveDimByField","axesInfo","spaceType","sizeConfig","enterSpace","minVal","maxVal","diffPx","zeroPos","axisType","axisType0","resolveDimensions","_resolveDimByField","enterWidth","enterX","xPos","_resolveDimByField2","enterHeight","BarLayer","bar_classCallCheck","bar_possibleConstructorReturn","bar_getPrototypeOf","_plotPadding","_plotSpan","bar_get","getTranslatedPoints","normalizedDataArr","clipElement","clipPathElement","bar_slicedToArray","barWidthMetrics","barHeightMetrics","barWidthOffsets","barHeightOffsets","barWidth","barWidthOffset","barHeight","barHeightOffset","uniqueFieldType","pointFound","bar_toConsumableArray","p2","tick_renderer","ticksEnter","TickLayer","_config$span","xSpan","ySpan","x0Px","drawTicks","AREA_LAYER","ARC_LAYER","LINE_LAYER","TEXT_LAYER","POINT_LAYER","BAR_LAYER","TICK_LAYER","SIMPLE_LAYER","BASE_LAYER","sanitizeEncoding","layerFactory","compositeLayers","factoryObj","setLayerRegistry","reg","_layerRegistry","getSerializedConf","serializedDefs","defs","unitLayerDef","sDef","parseLayerDefinition","layerType","strs","layer_factory_toConsumableArray","getLayerInstance","layerConstructor","getLayerClass","composeLayers","sanitizeLayerConfig","DEFAULT_LAYERS","defaults_defineProperty","_DEFAULT_LAYERS","LAYER_TYPES","ROWS","COLUMNS","COL","ROW","CELL","X_AXES","Y_AXES","ENTRY_CELLS","EXIT_CELLS","PRIMARY","SECONDARY","local_options","local_options_defineProperty","_CONFIG$ROWS$COLUMNS$","SimpleGroup","Variable","ComposedVars","composed_vars_classCallCheck","texts","composed_vars_possibleConstructorReturn","composed_vars_getPrototypeOf","vars","_vars","member","getMinDiff","SimpleVariable","simple_var_classCallCheck","simple_var_possibleConstructorReturn","simple_var_getPrototypeOf","oneVar","_oneVar","dtFormat","minimumConsecutiveDifference","varInst","convertToVar","datamodel","transformFields","field_sanitizer_slicedToArray","normalizedFields","normalizeFields","norFields","orderFields","fieldArray","temporalArr","categoricalArr","fieldList","numOfMeasures","allDimensions","field_sanitizer_toConsumableArray","temporal","categorical","rowsInfo","columnsInfo","rowDimensions","rowMeasures","rowTemporalFields","rowCategoricalFields","columnDimensions","columnMeasures","columnTemporalFields","columnCategoricalFields","VisualEncoder","_fieldInfo","_axisFrom","_headerFrom","__headerFrom","axisFrom","_getHeaderAxisFrom2","visual_encoder_slicedToArray","getHeaderAxisFrom","rowHeader","rowAxis","_getHeaderAxisFrom4","colHeader","colAxis","headerFrom","scaleMaps","dataTypeScaleMap","generateAxisFromMap","axesCreators","axisKey","groupAxes","currentAxes","cacheMaps","commonAxisKey","getAxisKey","axisConfig","getAxisConfig","axisInfo","axisOrientation","userAxisConfig","_rotationLock","resetDomain","createSimpleAxis","Cls","getIndex","arrIndex","CartesianEncoder","geomCellAxes","projections","rowFields","columnFields","rowIndex","columnIndex","xAxes","yAxes","lock","unlock","unitDomains","units","1","rIdx","unitsArr","_loop2","cIdx","len2","_resolver$axes","axesArr","adjustedDomain","alignZeroLine","getAdjustedDomain","y1ratio","y2ratio","allSameSign","facets","counter","primaryFacets","secondaryFacets","primaryFields","secondaryFields","primaryLen","secondaryLen","projArr","primaryField","secondaryField","facet","existIndex","axisFromIndex","cartesian_encoder_get","cartesian_encoder_getPrototypeOf","groupedModel","encodingObj","retriveDomainFromData","layerArray","serializedLayers","userLayerConfig","layerConfig","colField","colFieldName","rowField","configs","rowFieldName","rowFieldType","getDefaultMark","colFieldType","defConfigs","layerConfigs","getLayerConfFromFields","colFields","encodingArr","encoder_helper_toConsumableArray","colFieldExist","rowFieldExist","layerConf","mergedLayerConf","serializedLayerConfig","cartesian_encoder_toConsumableArray","PolarEncoder","pieAxes","domainProps","sanitizedRows","sanitizedColumns","polar_encoder_get","polar_encoder_getPrototypeOf","sanitizedFields","typeIndex","fieldSet","polar_encoder_toConsumableArray","facetFields","layerEncoding","encType","polar_encoder_defineProperty","RetinalEncoder","newAxes","createRetinalAxis","fieldProps","getAxisType","encodingConfigs","isDistributionEqual","group_utils_toConsumableArray","rowType","initializeCacheMaps","cellMap","xAxesMap","yAxesMap","entryCellMap","exitCellMap","headerCreator","fieldHeaders","TextCell","getHeaderText","rowLength","userAxisFromConfig","group_utils_slicedToArray","firstField","secondField","firstFieldType","secondFieldType","setFacetsAndProjections","encoder","_encoder$simpleEncode","simpleEncoder","getFacetsAndProjections","group_utils_defineProperty","getBorders","matrices","showRowBorders","showColBorders","showValueBorders","valueMatrix","_rows","leftRows","rightRows","_columns","topColumns","bottomColumns","_encoder$fieldInfo","allDimensionLength","allMeasuresLength","allTemporalFieldsLength","getRowBorders","borders","getColumnsBorders","getValueBorders","borderTypeRow","borderTypeCol","action_behaviour_map_defineProperty","ACTIONS","getLayerFromDef","existingLayer","_layerDeps","inst","colIndex","instanceArr","_timeDiffs","resolveEncodingTransform","layerInst","resolvable","depArr","sanitizeLayerDef","sanitizedDefs","sConf","getLayersBy","searchBy","removeLayersBy","createRenderPromise","_renderedPromise","_renderedResolve","GRID_BAND","GRID_LINE","getGridLayerDefinitions","getDefaultVisibilty","getLayerDefinition","_definition","_encoding","gridLines","gridBands","gridLineColor","zeroLineColor","gridBandColor","isLinearScale","grid_lines_defineProperty","isNegativeDomain","attachDataToGridLineLayers","_gridLines","_gridBands","gridLayerData","getGridLayerData","gridData","_jsonData$push","grid_lines_toConsumableArray","trackerClassName","arcLayerClassName","sideEffectClassName","src_local_options","src_local_options_defineProperty","_CONFIG$LAYERDEFS$TRA","cachedData","local_options_toConsumableArray","oldData","calculateDomainListener","unionDomainFromLayers","layerAxisIndex","getDataDomain","domainValues","layerDomain","fieldDomain","fieldStr","_layerAxisIndex","src_listener_map_slicedToArray","fieldsVal","removeExitLayers","layersMap","markSet","listenerInf","_lifeCycleManager","notify","axesObj","temporalFields","filteredFields","_ref6","_ref7","_ref8","_ref9","_ref10","_timeDiffsByField","createGridLineLayer","vuConf","createGridLines","createFn","iteratorFn","atomicDef","_ref11","_ref12","transformDataModels","transformVal","_ref15","_ref16","layerAxisIndexVal","axesVal","lyr","disableUpdate","attachDataToLayers","transformedDataModels","dataSource","enableUpdate","_dimensionMeasureMap","getDimensionMeasureMap","retinalEncodingsAndMeasures","_layer$encodingFields","_retinalEncodingsAndM","src_helper_toConsumableArray","retinalFields","attachAxisToLayers","axisInf","props_defineProperty","_PROPS","createSelectionSet","originalData","attachPropagationListener","firebolt_helper_slicedToArray","dispatchQueuedSideEffects","firebolt_helper_toConsumableArray","clearActionHistory","payloadGenerator","brush","selectionDataModel","propPayload","getRangeFromData","propCriteria","isDimension","payload_generator_toConsumableArray","__default","propagateValues","propagationFieldInf","propagationFields","sideEfffects","mergedModel","sourceUnit","sourceCanvas","parentAlias","propagationBehaviour","propFields","facetByFields","getModelWithFacetData","schema1","data1","schema2","data2","data_propagator_toConsumableArray","groupId","behaviourInstance","propagationConf","sourceBehaviour","enabled","propConf","applyOnSource","propInf","UnitFireBolt","src_firebolt_classCallCheck","firebolt_possibleConstructorReturn","firebolt_getPrototypeOf","firebolt_assertThisInitialized","unitId","aliasName","propagationSourceCanvas","sourceUnitId","sourceSideEffects","sideEffectInstances","actionOnSource","mappedEffects","se","sideEffectChecker","enabledFn","payloadFn","sourceIdentifierFields","sourceBehaviours","persistent","firebolt_get","VisualUnit","visual_unit_classCallCheck","visual_unit_defineProperty","lifeCycleManager","_gridLinesSelection","_gridBandsSelection","_layerNamespaces","_transformedDataModels","localOptions","_firebolt","_rootSvg","class","renderGridLineLayers","gridLineParentGroup","_entry","grid_lines_slicedToArray","parentGroupClass","renderLayers","orderedLayers","layerParentGroup","layerDepOrder","_layerDepOrder","_sideEffectGroup","createSideEffectGroup","initSideEffects","rootSvg","_this$parentContainer","parentContainerInf","layerDefinition","layerDefinitions","components","layerIndex","startIndex","visual_unit_toConsumableArray","layersArr","_layersArr","markId","defArr","instanceValues","layerdeps","getLayerAxisIndex","_layer$config","stateStore","parentModel","dimValue","getNearestDimensionalValue","entryVal","pointInf","getMarkInfFromLayers","markInf","parsedIdentifiers","transposeArray","getPointsFromIdentifiers","visual_unit_construct","getFieldNames","fields1","matrix_model_toConsumableArray","createSelectedDataModel","uniqueKeyGenerator","keyArray","newDm","nextDepthUniqueValues","projectRows","allColumnProjections","rowProjections","optionalProjections","projectFields","_getFieldNames2","matrix_model_slicedToArray","projFieldNames","colProjFieldNames","pushToMatrix","valueCellCreator","_matrix$rowIndex","facetInfo","colProjections","rowProj","projIdx","_getFieldNames4","rowProjFieldNames","projectedDm","createValueCells","suppliedLayers","GeomCell","matrixLayers","horizontalAxis","verticalAxis","datamodelTransform","layerConfigArr","getLayerConfig","normalizedColumns","normalizedRows","geomCellKey","getCellKey","columnId","allFacets","cell_creator_toConsumableArray","rowFacets","colFacets","geomCell","updateCells","facetKey","createAxisCells","axisInst","_axisInst$config","AxisCell","BlankCell","headerPlaceholderGn","selectionObj","selectionKeys","keySet","createTextCells","generatePlaceholders","facetsAndProjections","encoders","valuesMatrix","rowKeys","columnKeys","takeAxisFrom","takeHeaderFrom","axisPlaceholderGn","selObj","axesMatrix","selObjProp","axesForDraw","rowsPrimary","rowPrime","columnsPrimary","colPrime","_selectionObj","rowsSecondary","columnsSecondary","getObjects","section","hContext","computeMatrices","componentRegistry","globalConfig","autoGroupBy","otherEncodings","matrixGnContext","getCellDef","isRowSizeEqual","isColumnSizeEqual","colCells","rowCells","resetSimpleAxes","newCacheMap","valueCellContext","serializeLayerConfig","extractFields","layerFields","flattenArray","getFieldsFromSuppliedLayers","suppliedLayerConfig","aggregationFns","nearestAggFns","resolvedAggFns","valueMatrixInfo","getMatrixModel","rowDataModels","colProj","firstLevelRowKeys","_rowDataModels","rowFacetFieldNames","selectedDataModel","newProjectedDataModels","_rowDataModels2","colFacetNames","firstLevelColumnKeys","dme","rIndex","cIndex","transposedColKeys","valueCellsCreator","placeholder","_mutateAxesFromMap","mutateAxesFromMap","xAxisSet","yAxisSet","axisId","createUnits","_generateMatrices","generateMatrices","leftHeaders","topHeaders","bottomHeaders","rightHeaders","cell_creator_slicedToArray","rowSec","colSec","leftFacets","rightFacets","rowPriority","colPriority","leftMatrix","rightMatrix","topMatrix","bottomMatrix","currentBottomLength","setAvailableSpace","rowMatrix","columnMatrix","RESOLVER_PROPS","MatrixResolver","matrix_resolver_classCallCheck","_registry","_layerConfig","_matrixLayers","_rowMatrix","_columnMatrix","_valueMatrix","_facets","_projections","_datamodelTransform","_units","_cacheMaps","_axes","maps","matrix_resolver_toConsumableArray","_horizontalAxis","_verticalAxis","matrixType","sideEffectRegistry","_this$dependencies","unitConfig","extractUnitConfig","globalStates","_this$getAllFields","retContext","getRetinalFieldsDomain","retinalEncoder","setCommonDomain","_this$axes","_this6","retinalAxes","updateModel","placeholders","bottomLeft","bottomRight","_this$dependencies3","showHeaders","matrix_resolver_slicedToArray","topCols","bottomCols","rowHeaders","blankCellCreator","footers","topLeft","topRight","ValueMatrix","matrixArr","value_matrix_classCallCheck","instancesById","cellValue","_instancesById","_matrix","_filterFn","rowWidth","currentRowWidth","getLogicalSpace","rowHeight","currentRowHeight","setMatrixInstances","_composition","createMatrices","matrixConfig","unsubscribeChangeListeners","retinalConfig","sanitizeRetinalConfig","retinalConf","confValue","getEncoder","groupType","fieldSanitizer","setAxisAndHeaders","placeholderInfo","getMatrices","_groupedDataModel","createRetinalAxes","setDomains","cornerMatrices","createHeaders","metaData","border","unionUnitDomains","registerDomainChangeListener","visual_group_props_defineProperty","visual_group_props_PROPS","cellRegistry","VisualGroup","visual_group_classCallCheck","visual_group_possibleConstructorReturn","visual_group_getPrototypeOf","componentSubRegistry","visual_group_assertThisInitialized","_selection","createUnitState","visual_group_helper_slicedToArray","createLayerState","setupChangeListeners","variable","findInGroup","channel","group_utils_this","facetType","projType","getRetinalAxes","getSimpleAxes","_this$resolver$getAll","visual_group_defineProperty","existingRemoveSet","select_toConsumableArray","firebolt_action_behaviour_map_defineProperty","action_behaviour_map_actionBehaviourMap","propagationBehaviourMap","_propagationBehaviour","firebolt_behaviour_effect_map_defineProperty","firebolt_behaviour_effect_map_behaviourEffectMap","propagationSideEffects","_propagationSideEffec","SCALE_FUNCTIONS","VALUE","canvasAlias","check","assembleModelFromIdentifiers","src_firebolt_helper_toConsumableArray","LegendFireBolt","_Firebolt","legend_firebolt_classCallCheck","legend_firebolt_possibleConstructorReturn","legend_firebolt_getPrototypeOf","legend_firebolt_inherits","legend_firebolt_createClass","behaviourName","getCriteriaFromData","firebolt_physical_defineProperty","physical_physicalActions","boundingBox","gradientDimensions","axisScale","rangeShifter","drag_defineProperty","getSelectionCriteria","selectionBoxMeasure","drawingInfMeasure","subjectStartPoint","gradientDimension","legendGradContainer","legendSelGroup","enterFn","getMousePos","boundingClientRect","selection_box_drag_defineProperty","fadeOut","brighten","LegendHighlighter","legend_highlighter_classCallCheck","legend_highlighter_possibleConstructorReturn","legend_highlighter_getPrototypeOf","legendContainer","resetLogicalSpace","title","_title","ALIGN","DEFAULT_MEASUREMENT","LEGEND_TITLE","borderStyle","borderColor","bounds","upper","ICON_MAP","getScaleInfo","scaleType","steps","scaleFn","getInterpolatedData","domainForLegend","interpolatedFn","getDomainBounds","domainBounds","domainLeg","ele","legend_helper_defineProperty","getScaleFactor","SimpleLegend","simple_legend_classCallCheck","_metaData","_fieldName","_labelManager","_cells","defaultMeasurement","_computedStyle","legendBehaviours","_canvasAlias","getItemMeasures","_labelManager$getOriS","effPadding","effBorder","effMargin","dataFromScale","titleSpace","getTitleSpace","titleHeight","titleWidth","labelSpaces","getLabelSpaces","_computeItemSpaces","computeItemSpaces","maxItemSpaces","textOrientation","itemSpaces","iconSpaces","maxIconWidth","labelSpace","itemSpace","iconSpace","newLabelWidth","titleSpaces","_this$measurement2","titleCreator","titleContainer","marginPosition","_this$config4","_this$measurement3","renderTitle","simple_legend_defineProperty","legendOrientation","position_config_defineProperty","_legendOrientation","datasets","itemContainerMeasures","getStepSpacesInfo","iconHeight","iconWidth","stepPadding","horizontal","vertical","positionConfig","_positionConfig","alignmentMap","_alignmentMap","itemStack","_itemStack","createLegendSkeleton","gradWidth","gradHeight","maxGradHeight","maxGradWidth","legendBody","legendItem","getItemContainers","legendInstance","positionObj","createItemSkeleton","itemSkeleton","alignClass","applyItemStyle","measureType","stepColorCheck","_context$measurement","renderIcon","defaultIcon","DiscreteLegend","_getScaleInfo","discrete_legend_toConsumableArray","_field$schema","discrete_legend_defineProperty","discrete_legend_get","discrete_legend_getPrototypeOf","renderDiscreteItem","_context$measurement2","_item$icon","text-align","getGradientDomain","accumulator","currentValue","MAX_VALUE","MIN_VALUE","legendGradSvg","legendGradCont","linearGradient","makeLinearGradient","legendRect","GradientLegend","gradient_legend_toConsumableArray","gradient_legend_defineProperty","newAxis","axisSpace","axisDomainLength","_legendGradientSvg","gradient_legend_get","gradient_legend_getPrototypeOf","renderGradient","_createLegendSkeleton","StepLegend","step_legend_toConsumableArray","step_legend_defineProperty","lowerBounds","upperBounds","step_legend_get","step_legend_getPrototypeOf","stepData","renderStepItem","_context$measurement3","_item$icon2","_positionConfig$posit","PADDING","BORDER","MARGIN","TITLE_TEMPLATE_NOT_ALLOWED_TAGS","LEGEND_TYPE_MAP","constants_defineProperty","_LEGEND_TYPE_MAP","HORIZONTAL_CENTER","VERTICAL_CENTER","share","operators_construct","operators_toConsumableArray","strings","htmlCode","expLn","frag","createDocumentFragment","treeShakeNode","nodeType","Node","ELEMENT_NODE","tagName","childNodes","canvasIterator","canvases","cFn","canvas","visualGroup","matrixInstance","_throwback","actionModel","ActionModel","action_model_classCallCheck","_registrableComponents","registerPropagationBehaviourMap","dissociateBehaviour","dissociateSideEffect","policy","registrableComponents","mergedPolicy","aliases","comp","*","propagationPayload","propagationCanvas","crossInteractionPolicy","TITLE_CONFIG","SUB_TITLE_CONFIG","maxLines","LAYOUT_ALIGN","canvas_local_options_defineProperty","_localOptions","canvasOptions","_canvasOptions","_sanitized","titleConfig","subtitle","sub","subtitleConfig","LayoutComponent","layoutComponent_classCallCheck","_boundBox","_renderAt","_alignWith","_alignment","_componentName","_className","DummyComponent","newDimensions","renderAt","component","componentName","pagination","scrollBar","thickness","speed","legend","minHeight","minCharacters","verticalAlign","collapse","invalidValues","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_CLASS_NAME","NODE_PREFIX","DefinitionModel","definitionModel_classCallCheck","_host","host","_cut","cut","_ratioWeight","ratioWeight","_preferred","preferred","_lanes","lanes","_remainingHeight","_remainingWidth","remainingHeight","remainingWidth","getNodeId","_uid","yExtraSpace","smallestHeight","getCutType","smallestExtraHeightHorizontally","MAX_SAFE_INTEGER","containerHeight","hostHeight","xExtraSpace","smallestWidth","smallestExtraWidthVertically","containerWidth","hostWidth","createPlaceHolderComponent","placeComponent","definitionModel","leftOvercomponentRationWidth","isPreferred","isGridComponent","componentRatioWidth","leftHeight","leftWidth","_component$getLogical","componentHeight","componentWidth","firstLaneConfig","firstLane","secondLane","tree_classCallCheck","_parentCut","_this$_children","tree_toConsumableArray","parentCut","bound","nodeconfig","searchNode","childNode","nodeId","deleteSearchNode","LayoutModel","measurements","layout_model_classCallCheck","_measurements","_root","createTree","setBoundBox","addChildren","lane","allocateBoundingBox","totalWeight","carry","lastSibling","ratio","setHostSpatialConfig","setHostPosition","negotiateDimension","alteredDim","nonAlteredDim","cumultiveExtraSpaceAmt","childrenLength","extraSpaceAmt","computePosition","determineBoundBox","bb","_lastSibling$boundBox","_top","_left","_height","_width","_instance$parent$boun","setSpatialConfig","Utils","utils_classCallCheck","utils_createClass","isDOMElement","getID","getElement","findContainer","coordinate","removeDiv","divId","DataPoint","data_point_classCallCheck","DataParser","data_parser_classCallCheck","data_parser_createClass","defaultDataPointLogic","nodepoints","getnodePoints","datapoint","HTMLDataAdapter","_DataParser","html_data_classCallCheck","html_data_possibleConstructorReturn","html_data_getPrototypeOf","html_data_inherits","html_data_createClass","getCoordinates","html_data_get","Renderer","renderer_classCallCheck","renderer_createClass","initRenderer","__logicalTree","HTMLRenderer","_Renderer","html_renderer_classCallCheck","html_renderer_possibleConstructorReturn","html_renderer_getPrototypeOf","_coordinates","html_renderer_inherits","html_renderer_createClass","createhtml","mainDiv","html_renderer_get","parentDiv","createAndCustomiseParent","hasHost","createAndPositionDiv","_objectSpread","div","coordinates","findNode","nodeID","renderer","renderHTML","DrawingManager","drawing_manager_classCallCheck","_componentMap","componentMap","_layoutClassName","layoutClassName","_renderer","drawing_manager_createClass","drawLayout","resolveAligment","componentData","alignWith","newNodeConfig","refNode","alignment","drawComponent","DefinitionManager","definition_manager_classCallCheck","_prioritySequence","_totalHeight","_totalWidth","_targetComponentMap","prepareTargetComponentMap","targetComponentMap","canvasComponent","tempDefModel","componentRef","getComponent","placeGridComponent","gridComponents","iscolumnPreffered","_placeComponent","rowpreffred","LayoutDef","layout_def_classCallCheck","_layoutDefinition","layout_def_createClass","addComponent","layoutDefinition","addMultipleComponent","componentArray","sanitizedDefinition","sanitizeConfig","hostObj","hostID","childHost","resetComponentMap","LayoutManager","layout_manager_classCallCheck","_dimension","_skeletonType","skeletonType","_layoutDef","_drawingManager","_rootNodeID","con","resetNode","updateNode","compute","_layout","calLayOutDef","_context$dimension","layoutDef","prioritySequence","generateConfigModel","negotiate","broadcast","layoutComponents","componentArr","compo","setupChangeListener","allOptions","_allOptions","canvas_helper_toConsumableArray","nameSpaceProps","equalityChecker","option","updateChecker","dispatchProps","_cachedProps","notifyAnimationEnd","centerMatrix","layout","viewInfo","viewMatricesInfo","promises","cellArr","lifeCycle","animDonePromises","animationDone","axisArr","applyInteractionPolicy","interactionPolicy","_interactionPolicy","_crossInteractionPolicy","unitFireBolt","changeBehaviourStateOnPropagation","changeSideEffectStateOnPropagation","createLayoutManager","src_options","isInteger","minUnitWidth","minUnitHeight","oldConf","fixScrollBarConfig","VIEW_INDEX","ROW_MATRIX_INDEX","2","COLUMN_MATRIX_INDEX","HEIGHT","ROW_ROOT","COLUMN_ROOT","VERTICAL","HORIZONTAL","GenericLayout","generic_layout_classCallCheck","_matrices","_centerMatrix","_mountPoint","DEFAULT_CONFIGURATION","grid_layout_defaults_defineProperty","_DEFAULT_CONFIGURATIO","_FieldNames$BORDER","DEFAULT_MEASUREMENTS","_DEFAULT_MEASUREMENTS","findInPage","page","combineMatrices","isTransposed","joinedMatrix","utils_toConsumableArray","rowData","computeLogicalSpace","maxMeasures","_config$isTransposed","unitMeasures","_getMeasureInfo","getMeasureInfo","firstMeasure","secondMeasure","minMeasures","getMinMeasures","_logicalSpace","utils_defineProperty","valueItem","maxMeasure","firstMeasureValue","secondMeasureValue","valueArray","_item$space","fMeasure","sMeasure","createMatrixEachLevel","_arr$i","extraCellsRemover","beg","distribution","extraCellLengths","VisualMatrix","visual_matrix_classCallCheck","_lastLevelKey","_primaryMatrix","_secondaryMatrix","_maxMeasures","_availableSpace","_layoutMatrix","_tree","_createTree2","matrixTree","lastLevelKey","layoutMatrix","primaryMatrix","secondaryMatrix","breakPage","primaryMatrixLength","newMatrix","keyLength","heightMeasures","populateMaxMeasures","widthMeasures","calculateDepth","viewableMatrix","createViewPortMatrix","viewableMeasures","redistributeSpaces","childDepth","createMatrixInstances","matrixInfo","breakPointer","_breakPointer","brokenMatrix","breakMatrix","nextLevel","removeExtraCells","RowVisualMatrix","row_matrix_classCallCheck","row_matrix_possibleConstructorReturn","row_matrix_getPrototypeOf","maxHeights","maxWidths","matrixInst","cellDimOptions","matrixIndex","_this2$getCellDimensi","getCellDimensions","widths","rowHeights","columnWidths","primary","secondary","begCellLen","endCellLen","remainaingAvailWidth","remainaingWidth","cWidths","conditions","maxPrioritySpace","availableWidth","currentWidth","prioritySpace","logicalWidths","getPriorityDistribution","mWidth","mHeight","redistributeViewSpaces","computeViewableSpaces","rHeights","gutter","spaceTakenByColumn","spaces","getDistributedHeight","heightWithoutGutter","distSum","gutterSum","availableHeight","colLen","distHeight","borderWidth","colHeight","colWidth","heights","ColumnVisualMatrix","column_matrix_classCallCheck","column_matrix_possibleConstructorReturn","column_matrix_getPrototypeOf","remainaingHeight","heightDist","divider","spaceTakenByRow","getDistributedWidth","layoutConfig","distWidth","rowLen","oldLogicalSpace","heightDistribution","getMatrixMeasurement","setViewSpaces","pointerType","viewSpaces","pointer","computations_defineProperty","paginationDetailsMap","scrollType","paginationMeasureGetter","relatedMaxMeasure","getMatrixMeasureForPagination","measureDetails","actualMeasure","scrollInfo","getMatrixHeightDetails","columnMatrixWidth","_getHeightRequiredByC","getHeightRequiredByColMatrix","maxColumnMatrixHeight","columnViewSpace","getViewableSpaces","columnPointer","columnMatrixHeight","maxHeightAvailableForRowMatrix","rowMatrixHeight","bufferCondition","isScroll","getActualBufferFromConfig","computations_slicedToArray","getBufferFromCondition","currentBufferType","horizontalBuffer","verticalBuffer","computeLayoutMeasurements","_getMatrixWidthDetail","getMatrixWidthDetails","_layout$config3","rowMatrixWidth","maxRowMatrixWidth","maxWidthAvailableForColumnMatrix","_getMatrixHeightDetai","_getActualBufferFromC","rowViewableSpaces","columnViewableSpaces","setValueMatrixMeasurements","computations_toConsumableArray","rowWidthsPrimary","rowWidthsSecondary","columnHeightsPrimary","columnHeightsSecondary","measureSum","total","GridLayout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","_layoutId","_viewInfo","defaultViewInfo","_scrollInfo","generateVisualMatrices","begColCells","endColCells","gutterSpace","layout_helper_slicedToArray","_center","_bottom","layout_helper_toConsumableArray","RowMatrix","ColumnMatrix","layout_get","_computeLayoutMeasure","setViewInformation","pageNumber","pageType","totalPages","layout_defineProperty","renderGrid","currentPage","maxRowHeight","maxColWidth","rowPointer","getViewMatrices","rowMatrices","getViewableMatrices","columnMatrices","centralMatrixPointer","rowMatrixLen","columnMatrixLen","rowPages","columnPages","layoutDimensions","getViewMeasurements","_layout$config","rowSpaces","colSpaces","rightWidth","topHeight","bottomHeight","centerHeight","centerWidth","viewWidth","viewHeight","actualCenterMeasures","totalMeasures","unitHeights","unitWidths","borderMap","border_helper_defineProperty","_borderMap","specificBorderApplier","borderTypes","showBorders","borderInfo","borderType","applySpecificBorder","applyBorders","borderApplierFn","borderApplier","borderMapVal","orderMaker","nestByStack","updateArr","optionalParams","currStack","prevStack","arrVal","stackVal","currElemIndex","newElem","arrElem","returnArr","spanCalculator","isNull","maskCreator","_nestByStack","viewMatrix","hierarchy","_nestByStack2","spanGenerator","spans","ridx","currSpan","getOrder","isReverse","matrixSpanGeneratorMap","span_maker_defineProperty","_matrixSpanGeneratorM","orderGetter","viewMatrixMaker","spanMaker","matrixSpanGenerator","spanApplier","spaceAllocationDueToSpan","spanApplierMap","_spanApplierMap","TransactionSupport","INTERFACE_IMPl","CLASSPREFIX","HEADER","DATA","AXES","FACET_BY_FIELDS","FIELDS","TRANSFORM","LAYER_DEF","CONFIG","DETAIL_FIELDS","TEXT","AXIS","GEOM","BLANK","SimpleCell","simple_cell_classCallCheck","enums_defaults_defineProperty","_DEFAULT_CONFIG","_CONSTANTS$MARGIN","CONSTANTS","DEFAULT_PROPS","minSpacing","src_props_defineProperty","visual_cell_src_props_PROPS","caption","smartText","axis_cell_classCallCheck","axis_cell_possibleConstructorReturn","axis_cell_getPrototypeOf","_availHeight","_availWidth","axis_cell_assertThisInitialized","computeAxisSpace","logicalWidth","logicalHeight","spaceFixer","_axis$getLogicalSpace","_axis$config2","wrapperDiv","blank_cell_classCallCheck","blank_cell_possibleConstructorReturn","blank_cell_getPrototypeOf","blank_cell_assertThisInitialized","setSmartText","_context$minSpacing","minHeightSpace","minWidthSpace","paddedHeight","paddedWidth","text_cell_classCallCheck","text_cell_possibleConstructorReturn","text_cell_getPrototypeOf","text_cell_assertThisInitialized","computeTextSpace","_context$minSpacing2","minText","_minTextSpace","smartSpace","textAlign","vAlign","_this$smartText","translation","middle","geom_cell_classCallCheck","geom_cell_possibleConstructorReturn","geom_cell_getPrototypeOf","_unit","_datamodel","_facetByFields","_transform","_caption","geom_cell_assertThisInitialized","lockModel","unlockModel","captionSpace","computeGeomSpace","getCaptionSpace","captionDom","DEFAULT_PLACEHOLDERS","src_defaults_defineProperty","_DEFAULT_PLACEHOLDERS","resolveTitleSubTitleContent","rawContent","escapeHTML","htmlEscapes","&","<",">","\"","'","/","createHeading","prevCell","cellType","_minTickDiff","legendInitializer","legendConfig","prevLegends","legends","headerHeight","legendInfo","legendCreator","LegendCls","dataset","scaleProps","_scale$config","stepMapper","dataInfo","legendMeasures","getGroupByData","setLegendMeasures","MuzeComponent","_this$boundBox","HeaderComponent","headerComponent_classCallCheck","headerComponent_possibleConstructorReturn","headerComponent_getPrototypeOf","setParams","cont","renderHeader","LegendComponent","legendComponent_classCallCheck","legendComponent_possibleConstructorReturn","legendComponent_getPrototypeOf","legendSpace","sectionComponents","_this$params$config","legendMount","legWidth","legHeight","sections","currHeight","currWidth","leg","legendHeight","legendWidth","renderLegend","_defaultAlignmentHelp","defaultAlignmentHelper","arrowSizeMap","getUnitPositions","totalLength","viewLength","currentLen","unitPosition","createScrollBarArrow","createScrollBarRect","mover","applyScrollMouseDownAction","moverRect","scrollMaker","_mover$node$getBoundi","_rect$node$getBoundin","rectX","rectY","changeMoverPosition","registerListenerOnArrow","arrowType","_components","isTouchDevice","applyMoverDrag","moverStartPos","rectStartPos","distanceMoved","actualPosition","pageXOffset","pageYOffset","applyRectClick","emptyScrollAreaClick","manager","unitPositions","ScrollMaker","scroll_maker_classCallCheck","_attachedScrollAction","_unitPositions","scroll_maker_createClass","scrollTo","scrollDeltaTo","createScroll","scrollBarContainer","scrollContainerHelper","attachScrollAction","externalScrollAction","detachScrollAction","scrollMakerMap","_ScrollMaker","HorizontalScrollMaker","horizontal_scroll_maker_classCallCheck","horizontal_scroll_maker_possibleConstructorReturn","horizontal_scroll_maker_getPrototypeOf","horizontal_scroll_maker_inherits","horizontal_scroll_maker_createClass","horizontal_scroll_maker_get","prevArrow","nextArrow","_this$logicalSpace","scrollBarWithouArrowLength","_scrollBarWithouArrowLength","_this$_components$mov","positionAdjuster","newPosition","currentPos","_this$_components$mov2","moverPos","movedViewLength","performAttachedScrollFunction","delta","_this$_components$mov3","scrollPercentage","movement","VerticalScrollMaker","vertical_scroll_maker_classCallCheck","vertical_scroll_maker_possibleConstructorReturn","vertical_scroll_maker_getPrototypeOf","vertical_scroll_maker_inherits","vertical_scroll_maker_createClass","vertical_scroll_maker_get","ScrollComponent","scroll_component_classCallCheck","scrollBarComponentConfig","scroll_component_possibleConstructorReturn","scroll_component_getPrototypeOf","unitIndex","sanitizedUnitIndex","externalAction","MatrixComponent","matrix_component_classCallCheck","matrix_component_possibleConstructorReturn","matrix_component_getPrototypeOf","_this$params$config$s","containerForMatrix","applyScroll","_cellSpanMaker","cellSpanMaker","_matrixSpanGenerator","renderTable","applySpans","applier","renderPlaceholders","renderMatrix","applyScrollAction","scollDistance","GridComponent","grid_component_classCallCheck","grid_component_possibleConstructorReturn","grid_component_getPrototypeOf","_this$component$viewI","matrixDim","matrixName","updateWrapper","matrixWrapper","allComponents","_scrollBarManager","wheelDeltaX","wheelDeltaY","scrollBarManager","triggerScrollBarAction","movedView","scrollActionApplier","_this$component$0$0$b","sanitizeGrid","headerMap","headerCell","configType","createHeaderWrapper","headerType","layoutManager","renderDetails","_headerMap$headerType","headerConfig","wrapperParams","component_wrapper_maker_objectSpread","createScrollBarWrapper","scrollBarType","grid","scrollBarWrapper","_scrollBarMap$scrollB","scrollBarMap","layoutBasedMeasure","viewMeasure","rowAlign","colAlign","componentWrapperMaker","createLegendWrapper","legendWrapper","gridLayoutWrapper","verticalScrollBar","horizontalScrollBar","ScrollManager","scroll_manager_classCallCheck","_scrollBarComponents","_attachedComponents","scroll_manager_createClass","scrollBarComponents","attachedComponents","performScrollAction","getRenderDetails","_mount$getBoundingCli","heightAttr","widthAttr","visGroup","_visGroup$placeholder","legendPosition","layoutArrangement","arrangeComponents","_titleLayouts","titleLayouts","component_resolver_defineProperty","legendLayouts","titlePosition","subtitlePosition","availableHeightForCanvas","availableWidthForCanvas","_createHeaders","canvasHeight","canvasWidth","isSubtitle","headerOptions","_createHeading","createLegend","getLegendSpace","mountSpace","componentIndexes","renderLayout","_layoutManager","gridLayout","compWrappers","componentWrappers","gridWrapper","createScrollManager","horizontalScrollWrapper","verticalScrollWrapper","hScrollBar","vScrollBar","registerComponents","attachScrollListener","defaultInteractionPolicy","isMeasure","group_firebolt_toConsumableArray","getFieldsFromChannel","colDim","fieldInf","unitColFacets","equals","unitRowFacets","propagateWith","defaultCrossInteractionPolicy","propagationCanvasAlias","propagationUnit","GroupFireBolt","group_firebolt_classCallCheck","group_firebolt_possibleConstructorReturn","group_firebolt_getPrototypeOf","behaviouralAction","validFields","APP_INITIAL_STATE","app","Canvas","globalDependencies","canvas_classCallCheck","canvas_possibleConstructorReturn","canvas_getPrototypeOf","canvas_defineProperty","canvas_slicedToArray","canvas_assertThisInitialized","initedComponents","initCanvas","createGroupState","_VisualGroup$getState2","canvas_helper_slicedToArray","localState","register","prepareLayout","triggerReflow","setLayoutInfForUnits","getBoundBox","getRootNodeId","setLabelRotationForAxes","rotationVal","getAxes","initialSettings","regEntry","COMPONENTS","SUBREGISTRIES","regObj","globalCache","defaultRegistry","overrideRegistryDefinitions","overrideRegistry","muze","_transactor2","muze_slicedToArray","env","globalStore","componentSubRegistryDef","settings","withSettings","enableChainedTransaction","transactionModel","transactionEndpoint","transactionItems","Smartlabel","SideEffects","standards","Behaviours","pkg","operators","utils","lookupWhat","lookupDetails","lookupTarget","deps"],"mappings":"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","file":"muze.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"muze\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"muze\"] = factory();\n\telse\n\t\troot[\"muze\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DataModel\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DataModel\"] = factory();\n\telse\n\t\troot[\"DataModel\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","export {default as dsvFormat} from \"./dsv\";\nexport {csvParse, csvParseRows, csvFormat, csvFormatRows} from \"./csv\";\nexport {tsvParse, tsvParseRows, tsvFormat, tsvFormatRows} from \"./tsv\";\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","export { DataFormat, FilteringMode } from '../enums';\n/**\n * The event name for data propagation.\n */\nexport const PROPAGATION = 'propagation';\n\n/**\n * The name of the unique row id column in DataModel.\n */\nexport const ROW_ID = '__id__';\n\n/**\n * The enums for operation names performed on DataModel.\n */\nexport const DM_DERIVATIVES = {\n    SELECT: 'select',\n    PROJECT: 'project',\n    GROUPBY: 'group',\n    COMPOSE: 'compose',\n    CAL_VAR: 'calculatedVariable',\n    BIN: 'bin'\n};\n\nexport const JOINS = {\n    CROSS: 'cross',\n    LEFTOUTER: 'leftOuter',\n    RIGHTOUTER: 'rightOuter',\n    NATURAL: 'natural',\n    FULLOUTER: 'fullOuter'\n};\n\nexport const LOGICAL_OPERATORS = {\n    AND: 'and',\n    OR: 'or'\n};\n","import FlatJSON from './flat-json';\nimport DSVArr from './dsv-arr';\nimport DSVStr from './dsv-str';\nimport { detectDataFormat } from '../utils';\n\n/**\n * Parses the input data and detect the format automatically.\n *\n * @param {string|Array} data - The input data.\n * @param {Object} options - An optional config specific to data format.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n */\nfunction Auto (data, options) {\n    const converters = { FlatJSON, DSVStr, DSVArr };\n    const dataFormat = detectDataFormat(data);\n\n    if (!dataFormat) {\n        throw new Error('Couldn\\'t detect the data format');\n    }\n\n    return converters[dataFormat](data, options);\n}\n\nexport default Auto;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in DSV array to a manageable internal format.\n *\n * @param {Array.<Array>} arr - A 2D array containing of the DSV data.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv data is header or not.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    [\"a\", \"b\", \"c\"],\n *    [1, 2, 3],\n *    [4, 5, 6],\n *    [7, 8, 9]\n * ];\n */\nfunction DSVArr (arr, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    let header;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    if (options.firstRowHeader) {\n        // If header present then mutate the array.\n        // Do in-place mutation to save space.\n        header = arr.splice(0, 1)[0];\n    } else {\n        header = [];\n    }\n\n    arr.forEach(field => push(...field));\n\n    return [header, columns];\n}\n\nexport default DSVArr;\n","import { dsvFormat as d3Dsv } from 'd3-dsv';\nimport DSVArr from './dsv-arr';\n\n/**\n * Parses and converts data formatted in DSV string to a manageable internal format.\n *\n * @todo Support to be given for https://tools.ietf.org/html/rfc4180.\n * @todo Sample implementation https://github.com/knrz/CSV.js/.\n *\n * @param {string} str - The input DSV string.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv string data is header or not.\n * @param {string} [options.fieldSeparator=\",\"] - The separator of two consecutive field.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = `\n * a,b,c\n * 1,2,3\n * 4,5,6\n * 7,8,9\n * `\n */\nfunction DSVStr (str, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n        fieldSeparator: ','\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    const dsv = d3Dsv(options.fieldSeparator);\n    return DSVArr(dsv.parseRows(str), options);\n}\n\nexport default DSVStr;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in JSON to a manageable internal format.\n *\n * @param {Array.<Object>} arr - The input data formatted in JSON.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    {\n *      \"a\": 1,\n *      \"b\": 2,\n *      \"c\": 3\n *    },\n *    {\n *      \"a\": 4,\n *      \"b\": 5,\n *      \"c\": 6\n *    },\n *    {\n *      \"a\": 7,\n *      \"b\": 8,\n *      \"c\": 9\n *    }\n * ];\n */\nfunction FlatJSON (arr) {\n    const header = {};\n    let i = 0;\n    let insertionIndex;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    arr.forEach((item) => {\n        const fields = [];\n        for (let key in item) {\n            if (key in header) {\n                insertionIndex = header[key];\n            } else {\n                header[key] = i++;\n                insertionIndex = i - 1;\n            }\n            fields[insertionIndex] = item[key];\n        }\n        push(...fields);\n    });\n\n    return [Object.keys(header), columns];\n}\n\nexport default FlatJSON;\n","export { default as DSVArr } from './dsv-arr';\nexport { default as DSVStr } from './dsv-str';\nexport { default as FlatJSON } from './flat-json';\nexport { default as Auto } from './auto-resolver';\n","/* eslint-disable default-case */\n\nimport { FieldType, DimensionSubtype, DataFormat } from './enums';\nimport {\n    persistDerivation,\n    getRootGroupByModel,\n    propagateToAllDataModels,\n    getRootDataModel,\n    propagateImmutableActions,\n    addToPropNamespace,\n    sanitizeUnitSchema\n} from './helper';\nimport { DM_DERIVATIVES, PROPAGATION } from './constants';\nimport {\n    dataBuilder,\n    rowDiffsetIterator,\n    groupBy\n} from './operator';\nimport { createBinnedFieldData } from './operator/bucket-creator';\nimport Relation from './relation';\nimport reducerStore from './utils/reducer-store';\nimport { createFields } from './field-creator';\nimport InvalidAwareTypes from './invalid-aware-types';\n\n/**\n * DataModel is an in-browser representation of tabular data. It supports\n * {@link https://en.wikipedia.org/wiki/Relational_algebra | relational algebra} operators as well as generic data\n * processing opearators.\n * DataModel extends {@link Relation} class which defines all the relational algebra opreators. DataModel gives\n * definition of generic data processing operators which are not relational algebra complient.\n *\n * @public\n * @class\n * @extends Relation\n * @memberof Datamodel\n */\nclass DataModel extends Relation {\n    /**\n     * Creates a new DataModel instance by providing data and schema. Data could be in the form of\n     * - Flat JSON\n     * - DSV String\n     * - 2D Array\n     *\n     * By default DataModel finds suitable adapter to serialize the data. DataModel also expects a\n     * {@link Schema | schema} for identifying the variables present in data.\n     *\n     * @constructor\n     * @example\n     * const data = loadData('cars.csv');\n     * const schema = [\n     *      { name: 'Name', type: 'dimension' },\n     *      { name: 'Miles_per_Gallon', type: 'measure', unit : 'cm', scale: '1000', numberformat: val => `${val}G`},\n     *      { name: 'Cylinders', type: 'dimension' },\n     *      { name: 'Displacement', type: 'measure' },\n     *      { name: 'Horsepower', type: 'measure' },\n     *      { name: 'Weight_in_lbs', type: 'measure' },\n     *      { name: 'Acceleration', type: 'measure' },\n     *      { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *      { name: 'Origin', type: 'dimension' }\n     * ];\n     * const dm = new DataModel(data, schema, { name: 'Cars' });\n     * table(dm);\n     *\n     * @public\n     *\n     * @param {Array.<Object> | string | Array.<Array>} data Input data in any of the mentioned formats\n     * @param {Array.<Schema>} schema Defination of the variables. Order of the variables in data and order of the\n     *      variables in schema has to be same.\n     * @param {object} [options] Optional arguments to specify more settings regarding the creation part\n     * @param {string} [options.name] Name of the datamodel instance. If no name is given an auto generated name is\n     *      assigned to the instance.\n     * @param {string} [options.fieldSeparator=','] specify field separator type if the data is of type dsv string.\n     */\n    constructor (...args) {\n        super(...args);\n\n        this._onPropagation = [];\n        this._sortingDetails = [];\n    }\n\n    /**\n     * Reducers are simple functions which reduces an array of numbers to a representative number of the set.\n     * Like an array of numbers `[10, 20, 5, 15]` can be reduced to `12.5` if average / mean reducer function is\n     * applied. All the measure fields in datamodel (variables in data) needs a reducer to handle aggregation.\n     *\n     * @public\n     *\n     * @return {ReducerStore} Singleton instance of {@link ReducerStore}.\n     */\n    static get Reducers () {\n        return reducerStore;\n    }\n\n    /**\n     * Configure null, undefined, invalid values in the source data\n     *\n     * @public\n     *\n     * @param {Object} [config] - Configuration to control how null, undefined and non-parsable values are\n     * represented in DataModel.\n     * @param {string} [config.undefined] - Define how an undefined value will be represented.\n     * @param {string} [config.null] - Define how a null value will be represented.\n     * @param {string} [config.invalid] - Define how a non-parsable value will be represented.\n     */\n    static configureInvalidAwareTypes (config) {\n        return InvalidAwareTypes.invalidAwareVals(config);\n    }\n\n    /**\n     * Retrieve the data attached to an instance in JSON format.\n     *\n     * @example\n     * // DataModel instance is already prepared and assigned to dm variable\n     *  const data = dm.getData({\n     *      order: 'column',\n     *      formatter: {\n     *          origin: (val) => val === 'European Union' ? 'EU' : val;\n     *      }\n     *  });\n     *  console.log(data);\n     *\n     * @public\n     *\n     * @param {Object} [options] Options to control how the raw data is to be returned.\n     * @param {string} [options.order='row'] Defines if data is retieved in row order or column order. Possible values\n     *      are `'rows'` and `'columns'`\n     * @param {Function} [options.formatter=null] Formats the output data. This expects an object, where the keys are\n     *      the name of the variable needs to be formatted. The formatter function is called for each row passing the\n     *      value of the cell for a particular row as arguments. The formatter is a function in the form of\n     *      `function (value, rowId, schema) => { ... }`\n     *      Know more about {@link Fomatter}.\n     *\n     * @return {Array} Returns a multidimensional array of the data with schema. The return format looks like\n     *      ```\n     *          {\n     *              data,\n     *              schema\n     *          }\n     *      ```\n     */\n    getData (options) {\n        const defOptions = {\n            order: 'row',\n            formatter: null,\n            withUid: false,\n            getAllFields: false,\n            sort: []\n        };\n        options = Object.assign({}, defOptions, options);\n        const fields = this.getPartialFieldspace().fields;\n\n        const dataGenerated = dataBuilder.call(\n            this,\n            this.getPartialFieldspace().fields,\n            this._rowDiffset,\n            options.getAllFields ? fields.map(d => d.name()).join() : this._colIdentifier,\n            options.sort,\n            {\n                columnWise: options.order === 'column',\n                addUid: !!options.withUid\n            }\n        );\n\n        if (!options.formatter) {\n            return dataGenerated;\n        }\n\n        const { formatter } = options;\n        const { data, schema, uids } = dataGenerated;\n        const fieldNames = schema.map((e => e.name));\n        const fmtFieldNames = Object.keys(formatter);\n        const fmtFieldIdx = fmtFieldNames.reduce((acc, next) => {\n            const idx = fieldNames.indexOf(next);\n            if (idx !== -1) {\n                acc.push([idx, formatter[next]]);\n            }\n            return acc;\n        }, []);\n\n        if (options.order === 'column') {\n            fmtFieldIdx.forEach((elem) => {\n                const fIdx = elem[0];\n                const fmtFn = elem[1];\n\n                data[fIdx].forEach((datum, datumIdx) => {\n                    data[fIdx][datumIdx] = fmtFn.call(\n                        undefined,\n                        datum,\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        } else {\n            data.forEach((datum, datumIdx) => {\n                fmtFieldIdx.forEach((elem) => {\n                    const fIdx = elem[0];\n                    const fmtFn = elem[1];\n\n                    datum[fIdx] = fmtFn.call(\n                        undefined,\n                        datum[fIdx],\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        }\n\n        return dataGenerated;\n    }\n\n    /**\n     * Groups the data using particular dimensions and by reducing measures. It expects a list of dimensions using which\n     * it projects the datamodel and perform aggregations to reduce the duplicate tuples. Refer this\n     * {@link link_to_one_example_with_group_by | document} to know the intuition behind groupBy.\n     *\n     * DataModel by default provides definition of few {@link reducer | Reducers}.\n     * {@link ReducerStore | User defined reducers} can also be registered.\n     *\n     * This is the chained implementation of `groupBy`.\n     * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n     *\n     * @example\n     * const groupedDM = dm.groupBy(['Year'], { horsepower: 'max' } );\n     * console.log(groupedDm);\n     *\n     * @public\n     *\n     * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n     * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n     *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n     *      schema of the variable.\n     *\n     * @return {DataModel} Returns a new DataModel instance after performing the groupby.\n     */\n    groupBy (fieldsArr, reducers = {}, config = { saveChild: true }) {\n        const groupByString = `${fieldsArr.join()}`;\n        let params = [this, fieldsArr, reducers];\n        const newDataModel = groupBy(...params);\n\n        if (config.saveChild) {\n            this._children.push(newDataModel);\n            persistDerivation(\n                newDataModel,\n                DM_DERIVATIVES.GROUPBY,\n                { fieldsArr, groupByString, defaultReducer: reducerStore.defaultReducer() },\n                reducers\n            );\n        }\n\n        newDataModel._parent = this;\n        return newDataModel;\n    }\n\n    /**\n     * Performs sorting operation on the current {@link DataModel} instance according to the specified sorting details.\n     * Like every other operator it doesn't mutate the current DataModel instance on which it was called, instead\n     * returns a new DataModel instance containing the sorted data.\n     *\n     * DataModel support multi level sorting by listing the variables using which sorting needs to be performed and\n     * the type of sorting `ASC` or `DESC`.\n     *\n     * In the following example, data is sorted by `Origin` field in `DESC` order in first level followed by another\n     * level of sorting by `Acceleration` in `ASC` order.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * let sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\"] // Default value is ASC\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * // Sort with a custom sorting function\n     * sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\", (a, b) => a - b] // Custom sorting function\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @text\n     * DataModel also provides another sorting mechanism out of the box where sort is applied to a variable using\n     * another variable which determines the order.\n     * Like the above DataModel contains three fields `Origin`, `Name` and `Acceleration`. Now, the data in this\n     * model can be sorted by `Origin` field according to the average value of all `Acceleration` for a\n     * particular `Origin` value.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * const sortedDm = dm.sort([\n     *     ['Origin', ['Acceleration', (a, b) => avg(...a.Acceleration) - avg(...b.Acceleration)]]\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @public\n     *\n     * @param {Array.<Array>} sortingDetails - Sorting details based on which the sorting will be performed.\n     * @return {DataModel} Returns a new instance of DataModel with sorted data.\n     */\n    sort (sortingDetails) {\n        const rawData = this.getData({\n            order: 'row',\n            sort: sortingDetails\n        });\n        const header = rawData.schema.map(field => field.name);\n        const dataInCSVArr = [header].concat(rawData.data);\n\n        const sortedDm = new this.constructor(dataInCSVArr, rawData.schema, { dataFormat: 'DSVArr' });\n        sortedDm._sortingDetails = sortingDetails;\n        return sortedDm;\n    }\n\n    /**\n     * Performs the serialization operation on the current {@link DataModel} instance according to the specified data\n     * type. When an {@link DataModel} instance is created, it de-serializes the input data into its internal format,\n     * and during its serialization process, it converts its internal data format to the specified data type and returns\n     * that data regardless what type of data is used during the {@link DataModel} initialization.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance.\n     * const csvData = dm.serialize(DataModel.DataFormat.DSV_STR, { fieldSeparator: \",\" });\n     * console.log(csvData); // The csv formatted data.\n     *\n     * const jsonData = dm.serialize(DataModel.DataFormat.FLAT_JSON);\n     * console.log(jsonData); // The json data.\n     *\n     * @public\n     *\n     * @param {string} type - The data type name for serialization.\n     * @param {Object} options - The optional option object.\n     * @param {string} options.fieldSeparator - The field separator character for DSV data type.\n     * @return {Array|string} Returns the serialized data.\n     */\n    serialize (type, options) {\n        type = type || this._dataFormat;\n        options = Object.assign({}, { fieldSeparator: ',' }, options);\n\n        const fields = this.getFieldspace().fields;\n        const colData = fields.map(f => f.formattedData());\n        const rowsCount = colData[0].length;\n        let serializedData;\n        let rowIdx;\n        let colIdx;\n\n        if (type === DataFormat.FLAT_JSON) {\n            serializedData = [];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = {};\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row[fields[colIdx].name()] = colData[colIdx][rowIdx];\n                }\n                serializedData.push(row);\n            }\n        } else if (type === DataFormat.DSV_STR) {\n            serializedData = [fields.map(f => f.name()).join(options.fieldSeparator)];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row.join(options.fieldSeparator));\n            }\n            serializedData = serializedData.join('\\n');\n        } else if (type === DataFormat.DSV_ARR) {\n            serializedData = [fields.map(f => f.name())];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row);\n            }\n        } else {\n            throw new Error(`Data type ${type} is not supported`);\n        }\n\n        return serializedData;\n    }\n\n    addField (field) {\n        const fieldName = field.name();\n        this._colIdentifier += `,${fieldName}`;\n        const partialFieldspace = this._partialFieldspace;\n\n        if (!partialFieldspace.fieldsObj()[field.name()]) {\n            partialFieldspace.fields.push(field);\n        } else {\n            const fieldIndex = partialFieldspace.fields.findIndex(fieldinst => fieldinst.name() === fieldName);\n            fieldIndex >= 0 && (partialFieldspace.fields[fieldIndex] = field);\n        }\n\n        // flush out cached namespace values on addition of new fields\n        partialFieldspace._cachedFieldsObj = null;\n        partialFieldspace._cachedDimension = null;\n        partialFieldspace._cachedMeasure = null;\n\n        this.__calculateFieldspace().calculateFieldsConfig();\n        return this;\n    }\n\n    /**\n    * Creates a new variable calculated from existing variables. This method expects the definition of the newly created\n    * variable and a function which resolves the value of the new variable from existing variables.\n    *\n    * Can create a new measure based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const newDm = dataModel.calculateVariable({\n    *      name: 'powerToWeight',\n    *      type: 'measure'\n    *  }, ['horsepower', 'weight_in_lbs', (hp, weight) => hp / weight ]);\n    *\n    *\n    * Can create a new dimension based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const child = dataModel.calculateVariable(\n    *     {\n    *       name: 'Efficiency',\n    *       type: 'dimension'\n    *     }, ['horsepower', (hp) => {\n    *      if (hp < 80) { return 'low'; },\n    *      else if (hp < 120) { return 'moderate'; }\n    *      else { return 'high' }\n    *  }]);\n    *\n    * @public\n    *\n    * @param {Object} schema - The schema of newly defined variable.\n    * @param {Array.<string|function>} dependency - An array containing the dependency variable names and a resolver\n    * function as the last element.\n    * @param {Object} config - An optional config object.\n    * @param {boolean} [config.saveChild] - Whether the newly created DataModel will be a child.\n    * @param {boolean} [config.replaceVar] - Whether the newly created variable will replace the existing variable.\n    * @return {DataModel} Returns an instance of DataModel with the new field.\n    */\n    calculateVariable (schema, dependency, config) {\n        schema = sanitizeUnitSchema(schema);\n        config = Object.assign({}, { saveChild: true, replaceVar: false }, config);\n\n        const fieldsConfig = this.getFieldsConfig();\n        const depVars = dependency.slice(0, dependency.length - 1);\n        const retrieveFn = dependency[dependency.length - 1];\n\n        if (fieldsConfig[schema.name] && !config.replaceVar) {\n            throw new Error(`${schema.name} field already exists in datamodel`);\n        }\n\n        const depFieldIndices = depVars.map((field) => {\n            const fieldSpec = fieldsConfig[field];\n            if (!fieldSpec) {\n                // @todo dont throw error here, use warning in production mode\n                throw new Error(`${field} is not a valid column name.`);\n            }\n            return fieldSpec.index;\n        });\n\n        const clone = this.clone();\n\n        const fs = clone.getFieldspace().fields;\n        const suppliedFields = depFieldIndices.map(idx => fs[idx]);\n\n        let cachedStore = {};\n        let cloneProvider = () => this.detachedRoot();\n\n        const computedValues = [];\n        rowDiffsetIterator(clone._rowDiffset, (i) => {\n            const fieldsData = suppliedFields.map(field => field.partialField.data[i]);\n            computedValues[i] = retrieveFn(...fieldsData, i, cloneProvider, cachedStore);\n        });\n        const [field] = createFields([computedValues], [schema], [schema.name]);\n        clone.addField(field);\n\n        if (config.saveChild) {\n            persistDerivation(clone, DM_DERIVATIVES.CAL_VAR, { config: schema, fields: depVars }, retrieveFn);\n        }\n\n        return clone;\n    }\n\n    /**\n     * Propagates changes across all the connected DataModel instances.\n     *\n     * @param {Array} identifiers - A list of identifiers that were interacted with.\n     * @param {Object} payload - The interaction specific details.\n     *\n     * @return {DataModel} DataModel instance.\n     */\n    propagate (identifiers, config = {}, addToNameSpace, propConfig = {}) {\n        const isMutableAction = config.isMutableAction;\n        const propagationSourceId = config.sourceId;\n        const payload = config.payload;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const rootGroupByModel = getRootGroupByModel(this);\n        const rootModels = {\n            groupByModel: rootGroupByModel,\n            model: rootModel\n        };\n\n        addToNameSpace && addToPropNamespace(propagationNameSpace, config, this);\n        propagateToAllDataModels(identifiers, rootModels, { propagationNameSpace, sourceId: propagationSourceId },\n            Object.assign({\n                payload\n            }, config));\n\n        if (isMutableAction) {\n            propagateImmutableActions(propagationNameSpace, rootModels, {\n                config,\n                propConfig\n            }, this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Associates a callback with an event name.\n     *\n     * @param {string} eventName - The name of the event.\n     * @param {Function} callback - The callback to invoke.\n     * @return {DataModel} Returns this current DataModel instance itself.\n     */\n    on (eventName, callback) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation.push(callback);\n            break;\n        }\n        return this;\n    }\n\n    /**\n     * Unsubscribes the callbacks for the provided event name.\n     *\n     * @param {string} eventName - The name of the event to unsubscribe.\n     * @return {DataModel} Returns the current DataModel instance itself.\n     */\n    unsubscribe (eventName) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation = [];\n            break;\n\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to invoke the method associated with propagation.\n     *\n     * @param {Object} payload The interaction payload.\n     * @param {DataModel} identifiers The propagated DataModel.\n     * @memberof DataModel\n     */\n    handlePropagation (propModel, payload) {\n        let propListeners = this._onPropagation;\n        propListeners.forEach(fn => fn.call(this, propModel, payload));\n    }\n\n    /**\n     * Performs the binning operation on a measure field based on the binning configuration. Binning means discretizing\n     * values of a measure. Binning configuration contains an array; subsequent values from the array marks the boundary\n     * of buckets in [inclusive, exclusive) range format. This operation does not mutate the subject measure field,\n     * instead, it creates a new field (variable) of type dimension and subtype binned.\n     *\n     * Binning can be configured by\n     * - providing custom bin configuration with non-uniform buckets,\n     * - providing bins count,\n     * - providing each bin size,\n     *\n     * When custom `buckets` are provided as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', buckets: [30, 80, 100, 110] }\n     *  const binnedDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binsCount` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', binsCount: 5, start: 0, end: 100 }\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binSize` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHorsepower', binSize: 20, start: 5}\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @public\n     *\n     * @param {string} measureFieldName - The name of the target measure field.\n     * @param {Object} config - The config object.\n     * @param {string} [config.name] - The name of the new field which will be created.\n     * @param {string} [config.buckets] - An array containing the bucket ranges.\n     * @param {string} [config.binSize] - The size of each bin. It is ignored when buckets are given.\n     * @param {string} [config.binsCount] - The total number of bins to generate. It is ignored when buckets are given.\n     * @param {string} [config.start] - The start value of the bucket ranges. It is ignored when buckets are given.\n     * @param {string} [config.end] - The end value of the bucket ranges. It is ignored when buckets are given.\n     * @return {DataModel} Returns a new {@link DataModel} instance with the new field.\n     */\n    bin (measureFieldName, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        if (!fieldsConfig[measureFieldName]) {\n            throw new Error(`Field ${measureFieldName} doesn't exist`);\n        }\n\n        const binFieldName = config.name || `${measureFieldName}_binned`;\n\n        if (fieldsConfig[binFieldName]) {\n            throw new Error(`Field ${binFieldName} already exists`);\n        }\n\n        const measureField = this.getFieldspace().fieldsObj()[measureFieldName];\n        const { binnedData, bins } = createBinnedFieldData(measureField, this._rowDiffset, config);\n\n        const binField = createFields([binnedData], [\n            {\n                name: binFieldName,\n                type: FieldType.DIMENSION,\n                subtype: DimensionSubtype.BINNED,\n                bins\n            }], [binFieldName])[0];\n\n        const clone = this.clone();\n        clone.addField(binField);\n\n        persistDerivation(clone, DM_DERIVATIVES.BIN, { measureFieldName, config, binFieldName }, null);\n\n        return clone;\n    }\n\n    /**\n     * Creates a new {@link DataModel} instance with completely detached root from current {@link DataModel} instance,\n     * the new {@link DataModel} instance has no parent-children relationship with the current one, but has same data as\n     * the current one.\n     * This API is useful when a completely different {@link DataModel} but with same data as the current instance is\n     * needed.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *  const detachedDm = dm.detachedRoot();\n     *\n     * // has different namespace\n     * console.log(dm.getPartialFieldspace().name);\n     * console.log(detachedDm.getPartialFieldspace().name);\n     *\n     * // has same data\n     * console.log(dm.getData());\n     * console.log(detachedDm.getData());\n     *\n     * @public\n     *\n     * @return {DataModel} Returns a detached {@link DataModel} instance.\n     */\n    detachedRoot () {\n        const data = this.serialize(DataFormat.FLAT_JSON);\n        const schema = this.getSchema();\n\n        return new DataModel(data, schema);\n    }\n}\n\nexport default DataModel;\n","import { DataFormat } from './enums';\n\nexport default {\n    dataFormat: DataFormat.AUTO\n};\n","/**\n * DataFormat Enum defines the format of the input data.\n * Based on the format of the data the respective adapter is loaded.\n *\n * @readonly\n * @enum {string}\n */\nconst DataFormat = {\n    FLAT_JSON: 'FlatJSON',\n    DSV_STR: 'DSVStr',\n    DSV_ARR: 'DSVArr',\n    AUTO: 'Auto'\n};\n\nexport default DataFormat;\n","/**\n * DimensionSubtype enum defines the sub types of the Dimensional Field.\n *\n * @readonly\n * @enum {string}\n */\nconst DimensionSubtype = {\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    GEO: 'geo',\n    BINNED: 'binned'\n};\n\nexport default DimensionSubtype;\n","/**\n * FieldType enum defines the high level field based on which visuals are controlled.\n * Measure in a high level is numeric field and Dimension in a high level is string field.\n *\n * @readonly\n * @enum {string}\n */\nconst FieldType = {\n    MEASURE: 'measure',\n    DIMENSION: 'dimension'\n};\n\nexport default FieldType;\n","/**\n * Filtering mode enum defines the filering modes of DataModel.\n *\n * @readonly\n * @enum {string}\n */\nconst FilteringMode = {\n    NORMAL: 'normal',\n    INVERSE: 'inverse',\n    ALL: 'all'\n};\n\nexport default FilteringMode;\n","/**\n * FilteringMode determines if resultant DataModel should be created from selection set or rejection set.\n *\n * The following modes are available\n * - `NORMAL`: Only entries from selection set are included in the resulatant DataModel instance\n * - `INVERSE`: Only entries from rejection set are included in the resulatant DataModel instance\n * - ALL: Both the entries from selection and rejection set are returned in two different DataModel instance\n */\n\nexport { default as DataFormat } from './data-format';\nexport { default as DimensionSubtype } from './dimension-subtype';\nexport { default as MeasureSubtype } from './measure-subtype';\nexport { default as FieldType } from './field-type';\nexport { default as FilteringMode } from './filtering-mode';\n","/**\n * MeasureSubtype enum defines the sub types of the Measure Field.\n *\n * @readonly\n * @enum {string}\n */\nconst MeasureSubtype = {\n    CONTINUOUS: 'continuous'\n};\n\nexport default MeasureSubtype;\n","import DataModel from './datamodel';\nimport {\n  compose,\n  bin,\n  select,\n  project,\n  groupby as groupBy,\n  calculateVariable,\n  sort,\n  crossProduct,\n  difference,\n  naturalJoin,\n  leftOuterJoin,\n  rightOuterJoin,\n  fullOuterJoin,\n  union\n} from './operator';\nimport * as Stats from './stats';\nimport * as enums from './enums';\nimport { DateTimeFormatter } from './utils';\nimport { DataFormat, FilteringMode } from './constants';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport pkg from '../package.json';\n\nDataModel.Operators = {\n    compose,\n    bin,\n    select,\n    project,\n    groupBy,\n    calculateVariable,\n    sort,\n    crossProduct,\n    difference,\n    naturalJoin,\n    leftOuterJoin,\n    rightOuterJoin,\n    fullOuterJoin,\n    union\n};\nDataModel.Stats = Stats;\nObject.assign(DataModel, enums);\nDataModel.DateTimeFormatter = DateTimeFormatter;\nDataModel.DataFormat = DataFormat;\nDataModel.FilteringMode = FilteringMode;\nDataModel.InvalidAwareTypes = InvalidAwareTypes;\nDataModel.version = pkg.version;\n\nexport default DataModel;\n","import { FieldType, DimensionSubtype, MeasureSubtype } from './enums';\nimport {\n    Categorical,\n    Temporal,\n    Binned,\n    Continuous,\n    CategoricalParser,\n    TemporalParser,\n    BinnedParser,\n    ContinuousParser,\n    PartialField\n} from './fields';\n\n/**\n * Creates a field instance according to the provided data and schema.\n *\n * @param {Array} data - The field data array.\n * @param {Object} schema - The field schema object.\n * @return {Field} Returns the newly created field instance.\n */\nfunction createUnitField(data, schema) {\n    data = data || [];\n    let partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.TEMPORAL:\n            partialField = new PartialField(schema.name, data, schema, new TemporalParser(schema));\n            return new Temporal(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.BINNED:\n            partialField = new PartialField(schema.name, data, schema, new BinnedParser());\n            return new Binned(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        }\n    default:\n        partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n        return new Categorical(partialField, `0-${data.length - 1}`);\n    }\n}\n\n\n/**\n * Creates a field instance from partialField and rowDiffset.\n *\n * @param {PartialField} partialField - The corresponding partial field.\n * @param {string} rowDiffset - The data subset config.\n * @return {Field} Returns the newly created field instance.\n */\nexport function createUnitFieldFromPartial(partialField, rowDiffset) {\n    const { schema } = partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            return new Continuous(partialField, rowDiffset);\n        default:\n            return new Continuous(partialField, rowDiffset);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            return new Categorical(partialField, rowDiffset);\n        case DimensionSubtype.TEMPORAL:\n            return new Temporal(partialField, rowDiffset);\n        case DimensionSubtype.BINNED:\n            return new Binned(partialField, rowDiffset);\n        default:\n            return new Categorical(partialField, rowDiffset);\n        }\n    default:\n        return new Categorical(partialField, rowDiffset);\n    }\n}\n\n/**\n * Creates the field instances with input data and schema.\n *\n * @param {Array} dataColumn - The data array for fields.\n * @param {Array} schema - The schema array for fields.\n * @param {Array} headers - The array of header names.\n * @return {Array.<Field>} Returns an array of newly created field instances.\n */\nexport function createFields(dataColumn, schema, headers) {\n    const headersObj = {};\n\n    if (!(headers && headers.length)) {\n        headers = schema.map(item => item.name);\n    }\n\n    headers.forEach((header, i) => {\n        headersObj[header] = i;\n    });\n\n    return schema.map(item => createUnitField(dataColumn[headersObj[item.name]], item));\n}\n","import { FieldType } from './enums';\nimport { getUniqueId } from './utils';\n\nconst fieldStore = {\n    data: {},\n\n    createNamespace (fieldArr, name) {\n        const dataId = name || getUniqueId();\n\n        this.data[dataId] = {\n            name: dataId,\n            fields: fieldArr,\n\n            fieldsObj () {\n                let fieldsObj = this._cachedFieldsObj;\n\n                if (!fieldsObj) {\n                    fieldsObj = this._cachedFieldsObj = {};\n                    this.fields.forEach((field) => {\n                        fieldsObj[field.name()] = field;\n                    });\n                }\n                return fieldsObj;\n            },\n            getMeasure () {\n                let measureFields = this._cachedMeasure;\n\n                if (!measureFields) {\n                    measureFields = this._cachedMeasure = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.MEASURE) {\n                            measureFields[field.name()] = field;\n                        }\n                    });\n                }\n                return measureFields;\n            },\n            getDimension () {\n                let dimensionFields = this._cachedDimension;\n\n                if (!this._cachedDimension) {\n                    dimensionFields = this._cachedDimension = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.DIMENSION) {\n                            dimensionFields[field.name()] = field;\n                        }\n                    });\n                }\n                return dimensionFields;\n            },\n        };\n        return this.data[dataId];\n    },\n};\n\nexport default fieldStore;\n","import Dimension from '../dimension';\n\n/**\n * Represents binned field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Binned extends Dimension {\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the last and first values of bins config array.\n     */\n    calculateDataDomain () {\n        const binsArr = this.partialField.schema.bins;\n        return [binsArr[0], binsArr[binsArr.length - 1]];\n    }\n\n    /**\n     * Returns the bins config provided while creating the field instance.\n     *\n     * @public\n     * @return {Array} Returns the bins array config.\n     */\n    bins () {\n        return this.partialField.schema.bins;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { DimensionSubtype } from '../../enums';\nimport Dimension from '../dimension';\n/**\n * Represents categorical field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Categorical extends Dimension {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return DimensionSubtype.CATEGORICAL;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n        return domain;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { MeasureSubtype } from '../../enums';\nimport Measure from '../measure';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents continuous field subtype.\n *\n * @public\n * @class\n * @extends Measure\n */\nexport default class Continuous extends Measure {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return MeasureSubtype.CONTINUOUS;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the min and max values.\n     */\n    calculateDataDomain () {\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                return;\n            }\n\n            if (datum < min) {\n                min = datum;\n            }\n            if (datum > max) {\n                max = datum;\n            }\n        });\n\n        return [min, max];\n    }\n}\n","import Field from '../field';\n\n/**\n * Represents dimension field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Dimension extends Field {\n    /**\n     * Returns the domain for the dimension field.\n     *\n     * @override\n     * @public\n     * @return {any} Returns the calculated domain.\n     */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @abstract\n     */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n     /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\n\n/**\n * In {@link DataModel}, every tabular data consists of column, a column is stored as field.\n * Field contains all the data for a given column in an array.\n *\n * Each record consists of several fields; the fields of all records form the columns.\n * Examples of fields: name, gender, sex etc.\n *\n * In DataModel, each field can have multiple attributes which describes its data and behaviour.\n * A field can have two types of data: Measure and Dimension.\n *\n * A Dimension Field is the context on which a data is categorized and the measure is the numerical values that\n * quantify the data set.\n * In short a dimension is the lens through which you are looking at your measure data.\n *\n * Refer to {@link Schema} to get info about possible field attributes.\n *\n * @public\n * @class\n */\nexport default class Field {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        this.partialField = partialField;\n        this.rowDiffset = rowDiffset;\n    }\n\n    /**\n     * Generates the field type specific domain.\n     *\n     * @public\n     * @abstract\n     */\n    domain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the the field schema.\n     *\n     * @public\n     * @return {string} Returns the field schema.\n     */\n    schema () {\n        return this.partialField.schema;\n    }\n\n    /**\n     * Returns the name of the field.\n     *\n     * @public\n     * @return {string} Returns the name of the field.\n     */\n    name () {\n        return this.partialField.name;\n    }\n\n    /**\n     * Returns the type of the field.\n     *\n     * @public\n     * @return {string} Returns the type of the field.\n     */\n    type () {\n        return this.partialField.schema.type;\n    }\n\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return this.partialField.schema.subtype;\n    }\n\n    /**\n     * Returns the description of the field.\n     *\n     * @public\n     * @return {string} Returns the description of the field.\n     */\n    description () {\n        return this.partialField.schema.description;\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @public\n     * @return {string} Returns the display name of the field.\n     */\n    displayName () {\n        return this.partialField.schema.displayName || this.partialField.schema.name;\n    }\n\n    /**\n     * Returns the data associated with the field.\n     *\n     * @public\n     * @return {Array} Returns the data.\n     */\n    data () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            data.push(this.partialField.data[i]);\n        });\n        return data;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @abstract\n     */\n    formattedData () {\n        throw new Error('Not yet implemented');\n    }\n}\n","export { default as Field } from './field';\nexport { default as Dimension } from './dimension';\nexport { default as Categorical } from './categorical';\nexport { default as Temporal } from './temporal';\nexport { default as Binned } from './binned';\nexport { default as Measure } from './measure';\nexport { default as Continuous } from './continuous';\nexport { default as FieldParser } from './parsers/field-parser';\nexport { default as CategoricalParser } from './parsers/categorical-parser';\nexport { default as TemporalParser } from './parsers/temporal-parser';\nexport { default as BinnedParser } from './parsers/binned-parser';\nexport { default as ContinuousParser } from './parsers/continuous-parser';\nexport { default as PartialField } from './partial-field';\n","import { formatNumber } from '../../utils';\nimport { defaultReducerName } from '../../operator/group-by-function';\nimport Field from '../field';\n\n/**\n * Represents measure field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Measure extends Field {\n  /**\n   * Returns the domain for the measure field.\n   *\n   * @override\n   * @public\n   * @return {any} Returns the calculated domain.\n   */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n  /**\n   * Returns the unit of the measure field.\n   *\n   * @public\n   * @return {string} Returns unit of the field.\n   */\n    unit () {\n        return this.partialField.schema.unit;\n    }\n\n  /**\n   * Returns the aggregation function name of the measure field.\n   *\n   * @public\n   * @return {string} Returns aggregation function name of the field.\n   */\n    defAggFn () {\n        return this.partialField.schema.defAggFn || defaultReducerName;\n    }\n\n  /**\n   * Returns the number format of the measure field.\n   *\n   * @public\n   * @return {Function} Returns number format of the field.\n   */\n    numberFormat () {\n        const { numberFormat } = this.partialField.schema;\n        return numberFormat instanceof Function ? numberFormat : formatNumber;\n    }\n\n  /**\n   * Calculates the corresponding field domain.\n   *\n   * @public\n   * @abstract\n   */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the binned values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class BinnedParser extends FieldParser {\n  /**\n   * Parses a single binned value of a field and returns the sanitized value.\n   *\n   * @public\n   * @param {string} val - The value of the field.\n   * @return {string} Returns the sanitized value.\n   */\n    parse (val) {\n        const regex = /^\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*-\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*$/;\n        val = String(val);\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let matched = val.match(regex);\n            result = matched ? `${Number.parseFloat(matched[1])}-${Number.parseFloat(matched[2])}`\n                             : InvalidAwareTypes.getInvalidType((val.toLowerCase() === 'nil'\n                                ? val.toLowerCase() : 'invalid'));\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the categorical values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class CategoricalParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the stringified form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the stringified value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            result = String(val).trim();\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the continuous values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class ContinuousParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the number form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the number value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let parsedVal = parseFloat(val, 10);\n            result = Number.isNaN(parsedVal) ? InvalidAwareTypes.NA : parsedVal;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","/**\n * A interface to represent a parser which is responsible to parse the field.\n *\n * @public\n * @interface\n */\nexport default class FieldParser {\n    /**\n     * Parses a single value of a field and return the sanitized form.\n     *\n     * @public\n     * @abstract\n     */\n    parse () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import { DateTimeFormatter } from '../../../utils';\nimport FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the temporal values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class TemporalParser extends FieldParser {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {Object} schema - The schema object for the corresponding field.\n     */\n    constructor (schema) {\n        super();\n        this.schema = schema;\n        this._dtf = new DateTimeFormatter(this.schema.format);\n    }\n\n    /**\n     * Parses a single value of a field and returns the millisecond value.\n     *\n     * @public\n     * @param {string|number} val - The value of the field.\n     * @return {number} Returns the millisecond value.\n     */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let nativeDate = this._dtf.getNativeDate(val);\n            result = nativeDate ? nativeDate.getTime() : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","/**\n * Stores the full data and the metadata of a field. It provides\n * a single source of data from which the future Field\n * instance can get a subset of it with a rowDiffset config.\n *\n * @class\n * @public\n */\nexport default class PartialField {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} name - The name of the field.\n     * @param {Array} data - The data array.\n     * @param {Object} schema - The schema object of the corresponding field.\n     * @param {FieldParser} parser - The parser instance corresponding to that field.\n     */\n    constructor (name, data, schema, parser) {\n        this.name = name;\n        this.schema = schema;\n        this.parser = parser;\n        this.data = this._sanitize(data);\n    }\n\n    /**\n     * Sanitizes the field data.\n     *\n     * @private\n     * @param {Array} data - The actual input data.\n     * @return {Array} Returns the sanitized data.\n     */\n    _sanitize (data) {\n        return data.map(datum => this.parser.parse(datum));\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport Dimension from '../dimension';\nimport { DateTimeFormatter } from '../../utils';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents temporal field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Temporal extends Dimension {\n     /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        super(partialField, rowDiffset);\n\n        this._cachedMinDiff = null;\n    }\n\n     /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be\n        // occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n\n        return domain;\n    }\n\n\n    /**\n     * Calculates the minimum consecutive difference from the associated field data.\n     *\n     * @public\n     * @return {number} Returns the minimum consecutive diff in milliseconds.\n     */\n    minimumConsecutiveDifference () {\n        if (this._cachedMinDiff) {\n            return this._cachedMinDiff;\n        }\n\n        const sortedData = this.data().filter(item => !(item instanceof InvalidAwareTypes)).sort((a, b) => a - b);\n        const arrLn = sortedData.length;\n        let minDiff = Number.POSITIVE_INFINITY;\n        let prevDatum;\n        let nextDatum;\n        let processedCount = 0;\n\n        for (let i = 1; i < arrLn; i++) {\n            prevDatum = sortedData[i - 1];\n            nextDatum = sortedData[i];\n\n            if (nextDatum === prevDatum) {\n                continue;\n            }\n\n            minDiff = Math.min(minDiff, nextDatum - sortedData[i - 1]);\n            processedCount++;\n        }\n\n        if (!processedCount) {\n            minDiff = null;\n        }\n        this._cachedMinDiff = minDiff;\n\n        return this._cachedMinDiff;\n    }\n\n    /**\n     * Returns the format specified in the input schema while creating field.\n     *\n     * @public\n     * @return {string} Returns the datetime format.\n     */\n    format () {\n        return this.partialField.schema.format;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                data.push(datum);\n            } else {\n                data.push(DateTimeFormatter.formatAs(datum, this.format()));\n            }\n        });\n        return data;\n    }\n}\n\n","import { FieldType, FilteringMode, DimensionSubtype, MeasureSubtype, DataFormat } from './enums';\nimport fieldStore from './field-store';\nimport Value from './value';\nimport {\n    rowDiffsetIterator\n} from './operator';\nimport { DM_DERIVATIVES, LOGICAL_OPERATORS } from './constants';\nimport { createFields, createUnitFieldFromPartial } from './field-creator';\nimport defaultConfig from './default-config';\nimport * as converter from './converter';\nimport { extend2, detectDataFormat } from './utils';\n\n/**\n * Prepares the selection data.\n */\nfunction prepareSelectionData (fields, i) {\n    const resp = {};\n    for (let field of fields) {\n        resp[field.name()] = new Value(field.partialField.data[i], field);\n    }\n    return resp;\n}\n\nexport function prepareJoinData (fields) {\n    const resp = {};\n    Object.keys(fields).forEach((key) => { resp[key] = new Value(fields[key], key); });\n    return resp;\n}\n\nexport const updateFields = ([rowDiffset, colIdentifier], partialFieldspace, fieldStoreName) => {\n    let collID = colIdentifier.length ? colIdentifier.split(',') : [];\n    let partialFieldMap = partialFieldspace.fieldsObj();\n    let newFields = collID.map(coll => createUnitFieldFromPartial(partialFieldMap[coll].partialField, rowDiffset));\n    return fieldStore.createNamespace(newFields, fieldStoreName);\n};\n\nexport const persistDerivation = (model, operation, config = {}, criteriaFn) => {\n    let derivative;\n    if (operation !== DM_DERIVATIVES.COMPOSE) {\n        derivative = {\n            op: operation,\n            meta: config,\n            criteria: criteriaFn\n        };\n        model._derivation.push(derivative);\n    }\n    else {\n        derivative = [...criteriaFn];\n        model._derivation.length = 0;\n        model._derivation.push(...derivative);\n    }\n};\n\nexport const selectHelper = (rowDiffset, fields, selectFn, config, sourceDm) => {\n    const newRowDiffSet = [];\n    let lastInsertedValue = -1;\n    let { mode } = config;\n    let li;\n    let cachedStore = {};\n    let cloneProvider = () => sourceDm.detachedRoot();\n    const selectorHelperFn = index => selectFn(\n        prepareSelectionData(fields, index),\n        index,\n        cloneProvider,\n        cachedStore\n    );\n\n    let checker;\n    if (mode === FilteringMode.INVERSE) {\n        checker = index => !selectorHelperFn(index);\n    } else {\n        checker = index => selectorHelperFn(index);\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        if (checker(i)) {\n            if (lastInsertedValue !== -1 && i === (lastInsertedValue + 1)) {\n                li = newRowDiffSet.length - 1;\n                newRowDiffSet[li] = `${newRowDiffSet[li].split('-')[0]}-${i}`;\n            } else {\n                newRowDiffSet.push(`${i}`);\n            }\n            lastInsertedValue = i;\n        }\n    });\n    return newRowDiffSet.join(',');\n};\n\nexport const filterPropagationModel = (model, propModels, config = {}) => {\n    const operation = config.operation || LOGICAL_OPERATORS.AND;\n    const filterByMeasure = config.filterByMeasure || false;\n    let fns = [];\n    if (!propModels.length) {\n        fns = [() => false];\n    } else {\n        fns = propModels.map(propModel => ((dataModel) => {\n            const dataObj = dataModel.getData();\n            const schema = dataObj.schema;\n            const fieldsConfig = dataModel.getFieldsConfig();\n            const fieldsSpace = dataModel.getFieldspace().fieldsObj();\n            const data = dataObj.data;\n            const domain = Object.values(fieldsConfig).reduce((acc, v) => {\n                acc[v.def.name] = fieldsSpace[v.def.name].domain();\n                return acc;\n            }, {});\n\n            return (fields) => {\n                const include = !data.length ? false : data.some(row => schema.every((propField) => {\n                    if (!(propField.name in fields)) {\n                        return true;\n                    }\n                    const value = fields[propField.name].valueOf();\n                    if (filterByMeasure && propField.type === FieldType.MEASURE) {\n                        return value >= domain[propField.name][0] && value <= domain[propField.name][1];\n                    }\n\n                    if (propField.type !== FieldType.DIMENSION) {\n                        return true;\n                    }\n                    const idx = fieldsConfig[propField.name].index;\n                    return row[idx] === fields[propField.name].valueOf();\n                }));\n                return include;\n            };\n        })(propModel));\n    }\n\n    let filteredModel;\n    if (operation === LOGICAL_OPERATORS.AND) {\n        const clonedModel = model.clone(false, false);\n        filteredModel = clonedModel.select(fields => fns.every(fn => fn(fields)), {\n            saveChild: false,\n            mode: FilteringMode.ALL\n        });\n    } else {\n        filteredModel = model.clone(false, false).select(fields => fns.some(fn => fn(fields)), {\n            mode: FilteringMode.ALL,\n            saveChild: false\n        });\n    }\n\n    return filteredModel;\n};\n\nexport const cloneWithSelect = (sourceDm, selectFn, selectConfig, cloneConfig) => {\n    const cloned = sourceDm.clone(cloneConfig.saveChild);\n    const rowDiffset = selectHelper(\n        cloned._rowDiffset,\n        cloned.getPartialFieldspace().fields,\n        selectFn,\n        selectConfig,\n        sourceDm\n    );\n    cloned._rowDiffset = rowDiffset;\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n    // Store reference to child model and selector function\n    if (cloneConfig.saveChild) {\n        persistDerivation(cloned, DM_DERIVATIVES.SELECT, { config: selectConfig }, selectFn);\n    }\n\n    return cloned;\n};\n\nexport const cloneWithProject = (sourceDm, projField, config, allFields) => {\n    const cloned = sourceDm.clone(config.saveChild);\n    let projectionSet = projField;\n    if (config.mode === FilteringMode.INVERSE) {\n        projectionSet = allFields.filter(fieldName => projField.indexOf(fieldName) === -1);\n    }\n    // cloned._colIdentifier = sourceDm._colIdentifier.split(',')\n    //                         .filter(coll => projectionSet.indexOf(coll) !== -1).join();\n    cloned._colIdentifier = projectionSet.join(',');\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n    // Store reference to child model and projection fields\n    if (config.saveChild) {\n        persistDerivation(\n            cloned,\n            DM_DERIVATIVES.PROJECT,\n            { projField, config, actualProjField: projectionSet },\n            null\n        );\n    }\n\n    return cloned;\n};\n\nexport const sanitizeUnitSchema = (unitSchema) => {\n    // Do deep clone of the unit schema as the user might change it later.\n    unitSchema = extend2({}, unitSchema);\n    if (!unitSchema.type) {\n        unitSchema.type = FieldType.DIMENSION;\n    }\n\n    if (!unitSchema.subtype) {\n        switch (unitSchema.type) {\n        case FieldType.MEASURE:\n            unitSchema.subtype = MeasureSubtype.CONTINUOUS;\n            break;\n        default:\n        case FieldType.DIMENSION:\n            unitSchema.subtype = DimensionSubtype.CATEGORICAL;\n            break;\n        }\n    }\n\n    return unitSchema;\n};\n\nexport const sanitizeSchema = schema => schema.map(unitSchema => sanitizeUnitSchema(unitSchema));\n\nexport const updateData = (relation, data, schema, options) => {\n    schema = sanitizeSchema(schema);\n    options = Object.assign(Object.assign({}, defaultConfig), options);\n    const converterFn = converter[options.dataFormat];\n\n    if (!(converterFn && typeof converterFn === 'function')) {\n        throw new Error(`No converter function found for ${options.dataFormat} format`);\n    }\n\n    const [header, formattedData] = converterFn(data, options);\n    const fieldArr = createFields(formattedData, schema, header);\n\n    // This will create a new fieldStore with the fields\n    const nameSpace = fieldStore.createNamespace(fieldArr, options.name);\n    relation._partialFieldspace = nameSpace;\n    // If data is provided create the default colIdentifier and rowDiffset\n    relation._rowDiffset = formattedData.length && formattedData[0].length ? `0-${formattedData[0].length - 1}` : '';\n    relation._colIdentifier = (schema.map(_ => _.name)).join();\n    relation._dataFormat = options.dataFormat === DataFormat.AUTO ? detectDataFormat(data) : options.dataFormat;\n    return relation;\n};\n\nexport const fieldInSchema = (schema, field) => {\n    let i = 0;\n\n    for (; i < schema.length; ++i) {\n        if (field === schema[i].name) {\n            return {\n                type: schema[i].subtype || schema[i].type,\n                index: i\n            };\n        }\n    }\n    return null;\n};\n\n\nexport const getOperationArguments = (child) => {\n    const derivation = child._derivation;\n    let params = [];\n    let operation;\n    if (derivation && derivation.length === 1) {\n        operation = derivation[0].op;\n        switch (operation) {\n        case DM_DERIVATIVES.SELECT:\n            params = [derivation[0].criteria];\n            break;\n        case DM_DERIVATIVES.PROJECT:\n            params = [derivation[0].meta.actualProjField];\n            break;\n        case DM_DERIVATIVES.GROUPBY:\n            operation = 'groupBy';\n            params = [derivation[0].meta.groupByString.split(','), derivation[0].criteria];\n            break;\n        default:\n            break;\n        }\n    }\n\n    return {\n        operation,\n        params\n    };\n};\n\nconst applyExistingOperationOnModel = (propModel, dataModel) => {\n    const { operation, params } = getOperationArguments(dataModel);\n    let selectionModel = propModel[0];\n    let rejectionModel = propModel[1];\n    if (operation && params.length) {\n        selectionModel = propModel[0][operation](...params, {\n            saveChild: false\n        });\n        rejectionModel = propModel[1][operation](...params, {\n            saveChild: false\n        });\n    }\n    return [selectionModel, rejectionModel];\n};\n\nconst getFilteredModel = (propModel, path) => {\n    for (let i = 0, len = path.length; i < len; i++) {\n        const model = path[i];\n        propModel = applyExistingOperationOnModel(propModel, model);\n    }\n    return propModel;\n};\n\nconst propagateIdentifiers = (dataModel, propModel, config = {}, propModelInf = {}) => {\n    const nonTraversingModel = propModelInf.nonTraversingModel;\n    const excludeModels = propModelInf.excludeModels || [];\n\n    if (dataModel === nonTraversingModel) {\n        return;\n    }\n\n    const propagate = excludeModels.length ? excludeModels.indexOf(dataModel) === -1 : true;\n\n    propagate && dataModel.handlePropagation(propModel, config);\n\n    const children = dataModel._children;\n    children.forEach((child) => {\n        let [selectionModel, rejectionModel] = applyExistingOperationOnModel(propModel, child);\n        propagateIdentifiers(child, [selectionModel, rejectionModel], config, propModelInf);\n    });\n};\n\nexport const getRootGroupByModel = (model) => {\n    if (model._parent && model._derivation.find(d => d.op !== 'group')) {\n        return getRootGroupByModel(model._parent);\n    }\n    return model;\n};\n\nexport const getRootDataModel = (model) => {\n    if (model._parent) {\n        return getRootDataModel(model._parent);\n    }\n    return model;\n};\n\nexport const getPathToRootModel = (model, path = []) => {\n    if (model._parent !== null) {\n        path.push(model);\n        getPathToRootModel(model._parent, path);\n    }\n    return path;\n};\n\nexport const propagateToAllDataModels = (identifiers, rootModels, propagationInf, config) => {\n    let criteria;\n    let propModel;\n    const { propagationNameSpace, propagateToSource } = propagationInf;\n    const propagationSourceId = propagationInf.sourceId;\n    const propagateInterpolatedValues = config.propagateInterpolatedValues;\n    const filterFn = (entry) => {\n        const filter = config.filterFn || (() => true);\n        return filter(entry, config);\n    };\n\n    let criterias = [];\n\n    if (identifiers === null && config.persistent !== true) {\n        criterias = [{\n            criteria: []\n        }];\n    } else {\n        let actionCriterias = Object.values(propagationNameSpace.mutableActions);\n        if (propagateToSource !== false) {\n            actionCriterias = actionCriterias.filter(d => d.config.sourceId !== propagationSourceId);\n        }\n\n        const filteredCriteria = actionCriterias.filter(filterFn).map(action => action.config.criteria);\n\n        const excludeModels = [];\n\n        if (propagateToSource !== false) {\n            const sourceActionCriterias = Object.values(propagationNameSpace.mutableActions);\n\n            sourceActionCriterias.forEach((actionInf) => {\n                const actionConf = actionInf.config;\n                if (actionConf.applyOnSource === false && actionConf.action === config.action &&\n                        actionConf.sourceId !== propagationSourceId) {\n                    excludeModels.push(actionInf.model);\n                    criteria = sourceActionCriterias.filter(d => d !== actionInf).map(d => d.config.criteria);\n                    criteria.length && criterias.push({\n                        criteria,\n                        models: actionInf.model,\n                        path: getPathToRootModel(actionInf.model)\n                    });\n                }\n            });\n        }\n\n\n        criteria = [].concat(...[...filteredCriteria, identifiers]).filter(d => d !== null);\n        criterias.push({\n            criteria,\n            excludeModels: [...excludeModels, ...config.excludeModels || []]\n        });\n    }\n\n    const rootModel = rootModels.model;\n\n    const propConfig = Object.assign({\n        sourceIdentifiers: identifiers,\n        propagationSourceId\n    }, config);\n\n    const rootGroupByModel = rootModels.groupByModel;\n    if (propagateInterpolatedValues && rootGroupByModel) {\n        propModel = filterPropagationModel(rootGroupByModel, criteria, {\n            filterByMeasure: propagateInterpolatedValues\n        });\n        propagateIdentifiers(rootGroupByModel, propModel, propConfig);\n    }\n\n    criterias.forEach((inf) => {\n        const propagationModel = filterPropagationModel(rootModel, inf.criteria);\n        const path = inf.path;\n\n        if (path) {\n            const filteredModel = getFilteredModel(propagationModel, path.reverse());\n            inf.models.handlePropagation(filteredModel, propConfig);\n        } else {\n            propagateIdentifiers(rootModel, propagationModel, propConfig, {\n                excludeModels: inf.excludeModels,\n                nonTraversingModel: propagateInterpolatedValues && rootGroupByModel\n            });\n        }\n    });\n};\n\nexport const propagateImmutableActions = (propagationNameSpace, rootModels, propagationInf) => {\n    const immutableActions = propagationNameSpace.immutableActions;\n\n    for (const action in immutableActions) {\n        const actionInf = immutableActions[action];\n        const actionConf = actionInf.config;\n        const propagationSourceId = propagationInf.config.sourceId;\n        const filterImmutableAction = propagationInf.propConfig.filterImmutableAction ?\n            propagationInf.propConfig.filterImmutableAction(actionConf, propagationInf.config) : true;\n        if (actionConf.sourceId !== propagationSourceId && filterImmutableAction) {\n            const criteriaModel = actionConf.criteria;\n            propagateToAllDataModels(criteriaModel, rootModels, {\n                propagationNameSpace,\n                propagateToSource: false,\n                sourceId: propagationSourceId\n            }, actionConf);\n        }\n    }\n};\n\nexport const addToPropNamespace = (propagationNameSpace, config = {}, model) => {\n    let sourceNamespace;\n    const isMutableAction = config.isMutableAction;\n    const criteria = config.criteria;\n    const key = `${config.action}-${config.sourceId}`;\n\n    if (isMutableAction) {\n        sourceNamespace = propagationNameSpace.mutableActions;\n    } else {\n        sourceNamespace = propagationNameSpace.immutableActions;\n    }\n\n    if (criteria === null) {\n        delete sourceNamespace[key];\n    } else {\n        sourceNamespace[key] = {\n            model,\n            config\n        };\n    }\n\n    return this;\n};\n","const DataModel = require('./export');\n\nmodule.exports = DataModel.default ? DataModel.default : DataModel;\n","/**\n * A parser to parser null, undefined, invalid and NIL values.\n *\n * @public\n * @class\n */\nclass InvalidAwareTypes {\n    /**\n     * Static method which gets/sets the invalid value registry.\n     *\n     * @public\n     * @param {Object} config - The custom configuration supplied by user.\n     * @return {Object} Returns the invalid values registry.\n     */\n    static invalidAwareVals (config) {\n        if (!config) {\n            return InvalidAwareTypes._invalidAwareValsMap;\n        }\n        return Object.assign(InvalidAwareTypes._invalidAwareValsMap, config);\n    }\n\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} value - The value of the invalid data type.\n     */\n    constructor (value) {\n        this._value = value;\n    }\n\n    /**\n     * Returns the current value of the instance.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    value () {\n        return this._value;\n    }\n\n    /**\n     * Returns the current value of the instance in string format.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    toString () {\n        return String(this._value);\n    }\n\n    static isInvalid(val) {\n        return (val instanceof InvalidAwareTypes) || !!InvalidAwareTypes.invalidAwareVals()[val];\n    }\n\n    static getInvalidType(val) {\n        return val instanceof InvalidAwareTypes ? val : InvalidAwareTypes.invalidAwareVals()[val];\n    }\n}\n\n/**\n * Enums for Invalid types.\n */\nInvalidAwareTypes.NULL = new InvalidAwareTypes('null');\nInvalidAwareTypes.NA = new InvalidAwareTypes('na');\nInvalidAwareTypes.NIL = new InvalidAwareTypes('nil');\n\n/**\n * Default Registry for mapping the invalid values.\n *\n * @private\n */\nInvalidAwareTypes._invalidAwareValsMap = {\n    invalid: InvalidAwareTypes.NA,\n    nil: InvalidAwareTypes.NIL,\n    null: InvalidAwareTypes.NULL,\n    undefined: InvalidAwareTypes.NA\n};\n\nexport default InvalidAwareTypes;\n","import { rowDiffsetIterator } from './row-diffset-iterator';\nimport InvalidAwareTypes from '../invalid-aware-types';\n\nconst generateBuckets = (binSize, start, end) => {\n    const buckets = [];\n    let next = start;\n\n    while (next < end) {\n        buckets.push(next);\n        next += binSize;\n    }\n    buckets.push(next);\n\n    return buckets;\n};\n\nconst findBucketRange = (bucketRanges, value) => {\n    let leftIdx = 0;\n    let rightIdx = bucketRanges.length - 1;\n    let midIdx;\n    let range;\n\n    // Here use binary search as the bucketRanges is a sorted array\n    while (leftIdx <= rightIdx) {\n        midIdx = leftIdx + Math.floor((rightIdx - leftIdx) / 2);\n        range = bucketRanges[midIdx];\n\n        if (value >= range.start && value < range.end) {\n            return range;\n        } else if (value >= range.end) {\n            leftIdx = midIdx + 1;\n        } else if (value < range.start) {\n            rightIdx = midIdx - 1;\n        }\n    }\n\n    return null;\n};\n\n /**\n  * Creates the bin data from input measure field and supplied configs.\n  *\n  * @param {Measure} measureField - The Measure field instance.\n  * @param {string} rowDiffset - The datamodel rowDiffset values.\n  * @param {Object} config - The config object.\n  * @return {Object} Returns the binned data and the corresponding bins.\n  */\nexport function createBinnedFieldData (measureField, rowDiffset, config) {\n    let { buckets, binsCount, binSize, start, end } = config;\n    const [dMin, dMax] = measureField.domain();\n\n    if (!buckets) {\n        start = (start !== 0 && (!start || start > dMin)) ? dMin : start;\n        end = (end !== 0 && (!end || end < dMax)) ? (dMax + 1) : end;\n\n        if (binsCount) {\n            binSize = Math.ceil(Math.abs(end - start) / binsCount);\n        }\n\n        buckets = generateBuckets(binSize, start, end);\n    }\n\n    if (buckets[0] > dMin) {\n        buckets.unshift(dMin);\n    }\n    if (buckets[buckets.length - 1] <= dMax) {\n        buckets.push(dMax + 1);\n    }\n\n    const bucketRanges = [];\n    for (let i = 0; i < buckets.length - 1; i++) {\n        bucketRanges.push({\n            start: buckets[i],\n            end: buckets[i + 1]\n        });\n    }\n\n    const binnedData = [];\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const datum = measureField.partialField.data[i];\n        if (datum instanceof InvalidAwareTypes) {\n            binnedData.push(datum);\n            return;\n        }\n\n        const range = findBucketRange(bucketRanges, datum);\n        binnedData.push(`${range.start}-${range.end}`);\n    });\n\n    return { binnedData, bins: buckets };\n}\n","\n/**\n * DataModel's opearators are exposed as composable functional operators as well as chainable operators. Chainable\n * operators are called on the instances of {@link Datamodel} and {@link Relation} class.\n *\n * Those same operators can be used as composable operators from `DataModel.Operators` namespace.\n *\n * All these operators have similar behaviour. All these operators when called with the argument returns a function\n * which expects a DataModel instance.\n *\n * @public\n * @module Operators\n * @namespace DataModel\n */\n\n/**\n * This is functional version of selection operator. {@link link_to_selection | Selection} is a row filtering operation.\n * It takes {@link SelectionPredicate | predicate} for filtering criteria and returns a function.\n * The returned function is called with the DataModel instance on which the action needs to be performed.\n *\n * {@link SelectionPredicate} is a function which returns a boolean value. For selection opearation the selection\n * function is called for each row of DataModel instance with the current row passed as argument.\n *\n * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n * of rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * [Warn] Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * [Error] `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @example\n * const select = DataModel.Operators.select;\n * usaCarsFn = select(fields => fields.Origin.value === 'USA');\n * usaCarsDm = usaCarsFn(dm);\n * console.log(usaCarsDm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {SelectionPredicate} selectFn - Predicate funciton which is called for each row with the current row\n *      ```\n *          function (row, i)  { ... }\n *      ```\n * @param {Object} [config] - The configuration object to control the inclusion exclusion of a row in resultant\n *      DataModel instance\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const select = (...args) => dm => dm.select(...args);\n\n/**\n * This is functional version of projection operator. {@link link_to_projection | Projection} is a column filtering\n * operation.It expects list of fields name and either include those or exclude those based on {@link FilteringMode} on\n * the  resultant variable.It returns a function which is called with the DataModel instance on which the action needs\n * to be performed.\n *\n * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n * @param {Object} [config] - An optional config to control the creation of new DataModel\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const project = (...args) => dm => dm.project(...args);\n\n/**\n * This is functional version of binnig operator. Binning happens on a measure field based on a binning configuration.\n * Binning in DataModel does not aggregate the number of rows present in DataModel instance after binning, it just adds\n * a new field with the binned value. Refer binning {@link example_of_binning | example} to have a intuition of what\n * binning is and the use case.\n *\n * Binning can be configured by\n * - providing custom bin configuration with non uniform buckets\n * - providing bin count\n * - providing each bin size\n *\n * When custom buckets are provided as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const buckets = {\n *      start: 30\n *      stops: [80, 100, 110]\n *  };\n *  const config = { buckets, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(dm);\n *\n * @text\n * When `binCount` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binCount: 5, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @text\n * When `binSize` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binSize: 200, name: 'binnedHorsepower' }\n *  const binnedDm = dataModel.bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {String} name Name of measure which will be used to create bin\n * @param {Object} config Config required for bin creation\n * @param {Array.<Number>} config.bucketObj.stops Defination of bucket ranges. Two subsequent number from arrays\n *      are picked and a range is created. The first number from range is inclusive and the second number from range\n *      is exclusive.\n * @param {Number} [config.bucketObj.startAt] Force the start of the bin from a particular number.\n *      If not mentioned, the start of the bin or the lower domain of the data if stops is not mentioned, else its\n *      the first value of the stop.\n * @param {Number} config.binSize Bucket size for each bin\n * @param {Number} config.binCount Number of bins which will be created\n * @param {String} config.name Name of the new binned field to be created\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const bin = (...args) => dm => dm.bin(...args);\n\n/**\n * This is functional version of `groupBy` operator.Groups the data using particular dimensions and by reducing\n * measures. It expects a list of dimensions using which it projects the datamodel and perform aggregations to reduce\n * the duplicate tuples. Refer this {@link link_to_one_example_with_group_by | document} to know the intuition behind\n * groupBy.\n *\n * DataModel by default provides definition of few {@link reducer | Reducers}.\n * {@link ReducerStore | User defined reducers} can also be registered.\n *\n * This is the chained implementation of `groupBy`.\n * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n *\n * @example\n * const groupBy = DataModel.Operators.groupBy;\n * const groupedFn = groupBy(['Year'], { horsepower: 'max' } );\n * groupedDM = groupByFn(dm);\n *\n * @public\n *\n * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n *      schema of the variable.\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const groupBy = (...args) => dm => dm.groupBy(...args);\n\n/**\n * Enables composing operators to run multiple operations and save group of operataion as named opration on a DataModel.\n * The resulting DataModel will be the result of all the operation provided. The operations provided will be executed in\n * a serial manner ie. result of one operation will be the input for the next operations (like pipe operator in unix).\n *\n * Suported operations in compose are\n * - `select`\n * - `project`\n * - `groupBy`\n * - `bin`\n * - `compose`\n *\n * @example\n * const compose = DataModel.Operators.compose;\n * const select = DataModel.Operators.select;\n * const project = DataModel.Operators.project;\n *\n * let composedFn = compose(\n *    select(fields => fields.netprofit.value <= 15),\n *    project(['netprofit', 'netsales']));\n *\n * const dataModel = new DataModel(data1, schema1);\n *\n * let composedDm = composedFn(dataModel);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<Operators>} operators: An array of operation that will be applied on the\n * datatable.\n *\n * @returns {DataModel} Instance of resultant DataModel\n */\nexport const compose = (...operations) =>\n    (dm, config = { saveChild: true }) => {\n        let currentDM = dm;\n        let frstChild;\n        const derivations = [];\n        const saveChild = config.saveChild;\n\n        operations.forEach((operation) => {\n            currentDM = operation(currentDM);\n            derivations.push(...currentDM._derivation);\n            if (!frstChild) {\n                frstChild = currentDM;\n            }\n        });\n\n        saveChild && currentDM.addParent(dm, derivations);\n        if (derivations.length > 1) {\n            frstChild.dispose();\n        }\n\n        return currentDM;\n    };\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { getCommonSchema } from './get-common-schema';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { JOINS } from '../constants';\nimport { prepareJoinData } from '../helper';\n/**\n * Default filter function for crossProduct.\n *\n * @return {boolean} Always returns true.\n */\nfunction defaultFilterFn() { return true; }\n\n/**\n * Implementation of cross product operation between two DataModel instances.\n * It internally creates the data and schema for the new DataModel.\n *\n * @param {DataModel} dataModel1 - The left DataModel instance.\n * @param {DataModel} dataModel2 - The right DataModel instance.\n * @param {Function} filterFn - The filter function which is used to filter the tuples.\n * @param {boolean} [replaceCommonSchema=false] - The flag if the common name schema should be there.\n * @return {DataModel} Returns The newly created DataModel instance from the crossProduct operation.\n */\nexport function crossProduct (dm1, dm2, filterFn, replaceCommonSchema = false, jointype = JOINS.CROSS) {\n    const schema = [];\n    const data = [];\n    const applicableFilterFn = filterFn || defaultFilterFn;\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreName = dm1FieldStore.name;\n    const dm2FieldStoreName = dm2FieldStore.name;\n    const name = `${dm1FieldStore.name}.${dm2FieldStore.name}`;\n    const commonSchemaList = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    if (dm1FieldStoreName === dm2FieldStoreName) {\n        throw new Error('DataModels must have different alias names');\n    }\n    // Here prepare the schema\n    dm1FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1 && !replaceCommonSchema) {\n            tmpSchema.name = `${dm1FieldStore.name}.${tmpSchema.name}`;\n        }\n        schema.push(tmpSchema);\n    });\n    dm2FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1) {\n            if (!replaceCommonSchema) {\n                tmpSchema.name = `${dm2FieldStore.name}.${tmpSchema.name}`;\n                schema.push(tmpSchema);\n            }\n        } else {\n            schema.push(tmpSchema);\n        }\n    });\n\n    // Here prepare Data\n    rowDiffsetIterator(dm1._rowDiffset, (i) => {\n        let rowAdded = false;\n        let rowPosition;\n        rowDiffsetIterator(dm2._rowDiffset, (ii) => {\n            const tuple = [];\n            const userArg = {};\n            userArg[dm1FieldStoreName] = {};\n            userArg[dm2FieldStoreName] = {};\n            dm1FieldStore.fields.forEach((field) => {\n                tuple.push(field.partialField.data[i]);\n                userArg[dm1FieldStoreName][field.name()] = field.partialField.data[i];\n            });\n            dm2FieldStore.fields.forEach((field) => {\n                if (!(commonSchemaList.indexOf(field.schema().name) !== -1 && replaceCommonSchema)) {\n                    tuple.push(field.partialField.data[ii]);\n                }\n                userArg[dm2FieldStoreName][field.name()] = field.partialField.data[ii];\n            });\n\n            let cachedStore = {};\n            let cloneProvider1 = () => dm1.detachedRoot();\n            let cloneProvider2 = () => dm2.detachedRoot();\n\n            const dm1Fields = prepareJoinData(userArg[dm1FieldStoreName]);\n            const dm2Fields = prepareJoinData(userArg[dm2FieldStoreName]);\n            if (applicableFilterFn(dm1Fields, dm2Fields, cloneProvider1, cloneProvider2, cachedStore)) {\n                const tupleObj = {};\n                tuple.forEach((cellVal, iii) => {\n                    tupleObj[schema[iii].name] = cellVal;\n                });\n                if (rowAdded && JOINS.CROSS !== jointype) {\n                    data[rowPosition] = tupleObj;\n                }\n                else {\n                    data.push(tupleObj);\n                    rowAdded = true;\n                    rowPosition = i;\n                }\n            } else if ((jointype === JOINS.LEFTOUTER || jointype === JOINS.RIGHTOUTER) && !rowAdded) {\n                const tupleObj = {};\n                let len = dm1FieldStore.fields.length - 1;\n                tuple.forEach((cellVal, iii) => {\n                    if (iii <= len) {\n                        tupleObj[schema[iii].name] = cellVal;\n                    }\n                    else {\n                        tupleObj[schema[iii].name] = null;\n                    }\n                });\n                rowAdded = true;\n                rowPosition = i;\n                data.push(tupleObj);\n            }\n        });\n    });\n\n    return new DataModel(data, schema, { name });\n}\n","import { DimensionSubtype, MeasureSubtype } from '../enums';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { mergeSort } from './merge-sort';\nimport { fieldInSchema } from '../helper';\nimport { isCallable, isArray, } from '../utils';\n/**\n * Generates the sorting functions to sort the data of a DataModel instance\n * according to the input data type.\n *\n * @param {string} dataType - The data type e.g. 'measure', 'datetime' etc.\n * @param {string} sortType - The sorting order i.e. 'asc' or 'desc'.\n * @param {integer} index - The index of the data which will be sorted.\n * @return {Function} Returns the the sorting function.\n */\nfunction getSortFn (dataType, sortType, index) {\n    let retFunc;\n    switch (dataType) {\n    case MeasureSubtype.CONTINUOUS:\n    case DimensionSubtype.TEMPORAL:\n        if (sortType === 'desc') {\n            retFunc = (a, b) => b[index] - a[index];\n        } else {\n            retFunc = (a, b) => a[index] - b[index];\n        }\n        break;\n    default:\n        retFunc = (a, b) => {\n            const a1 = `${a[index]}`;\n            const b1 = `${b[index]}`;\n            if (a1 < b1) {\n                return sortType === 'desc' ? 1 : -1;\n            }\n            if (a1 > b1) {\n                return sortType === 'desc' ? -1 : 1;\n            }\n            return 0;\n        };\n    }\n    return retFunc;\n}\n\n/**\n * Groups the data according to the specified target field.\n *\n * @param {Array} data - The input data array.\n * @param {number} fieldIndex - The target field index within schema array.\n * @return {Array} Returns an array containing the grouped data.\n */\nfunction groupData(data, fieldIndex) {\n    const hashMap = new Map();\n    const groupedData = [];\n\n    data.forEach((datum) => {\n        const fieldVal = datum[fieldIndex];\n        if (hashMap.has(fieldVal)) {\n            groupedData[hashMap.get(fieldVal)][1].push(datum);\n        } else {\n            groupedData.push([fieldVal, [datum]]);\n            hashMap.set(fieldVal, groupedData.length - 1);\n        }\n    });\n\n    return groupedData;\n}\n\n/**\n * Creates the argument value used for sorting function when sort is done\n * with another fields.\n *\n * @param {Array} groupedDatum - The grouped datum for a single dimension field value.\n * @param {Array} targetFields - An array of the sorting fields.\n * @param {Array} targetFieldDetails - An array of the sorting field details in schema.\n * @return {Object} Returns an object containing the value of sorting fields and the target field name.\n */\nfunction createSortingFnArg(groupedDatum, targetFields, targetFieldDetails) {\n    const arg = {\n        label: groupedDatum[0]\n    };\n\n    targetFields.reduce((acc, next, idx) => {\n        acc[next] = groupedDatum[1].map(datum => datum[targetFieldDetails[idx].index]);\n        return acc;\n    }, arg);\n\n    return arg;\n}\n\n/**\n * Sorts the data before return in dataBuilder.\n *\n * @param {Object} dataObj - An object containing the data and schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nfunction sortData(dataObj, sortingDetails) {\n    const { data, schema } = dataObj;\n    let fieldName;\n    let sortMeta;\n    let fDetails;\n    let i = sortingDetails.length - 1;\n\n    for (; i >= 0; i--) {\n        fieldName = sortingDetails[i][0];\n        sortMeta = sortingDetails[i][1];\n        fDetails = fieldInSchema(schema, fieldName);\n\n        if (!fDetails) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        if (isCallable(sortMeta)) {\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortMeta(a[fDetails.index], b[fDetails.index]));\n        } else if (isArray(sortMeta)) {\n            const groupedData = groupData(data, fDetails.index);\n            const sortingFn = sortMeta[sortMeta.length - 1];\n            const targetFields = sortMeta.slice(0, sortMeta.length - 1);\n            const targetFieldDetails = targetFields.map(f => fieldInSchema(schema, f));\n\n            groupedData.forEach((groupedDatum) => {\n                groupedDatum.push(createSortingFnArg(groupedDatum, targetFields, targetFieldDetails));\n            });\n\n            mergeSort(groupedData, (a, b) => {\n                const m = a[2];\n                const n = b[2];\n                return sortingFn(m, n);\n            });\n\n            // Empty the array\n            data.length = 0;\n            groupedData.forEach((datum) => {\n                data.push(...datum[1]);\n            });\n        } else {\n            sortMeta = String(sortMeta).toLowerCase() === 'desc' ? 'desc' : 'asc';\n            mergeSort(data, getSortFn(fDetails.type, sortMeta, fDetails.index));\n        }\n    }\n\n    dataObj.uids = [];\n    data.forEach((value) => {\n        dataObj.uids.push(value.pop());\n    });\n}\n\n\n/**\n * Builds the actual data array.\n *\n * @param {Array} fieldStore - An array of field.\n * @param {string} rowDiffset - A string consisting of which rows to be included eg. '0-2,4,6';\n * @param {string} colIdentifier - A string consisting of the details of which column\n * to be included eg 'date,sales,profit';\n * @param {Object} sortingDetails - An object containing the sorting details of the DataModel instance.\n * @param {Object} options - The options required to create the type of the data.\n * @return {Object} Returns an object containing the multidimensional array and the relative schema.\n */\nexport function dataBuilder (fieldStore, rowDiffset, colIdentifier, sortingDetails, options) {\n    const defOptions = {\n        addUid: false,\n        columnWise: false\n    };\n    options = Object.assign({}, defOptions, options);\n\n    const retObj = {\n        schema: [],\n        data: [],\n        uids: []\n    };\n    const addUid = options.addUid;\n    const reqSorting = sortingDetails && sortingDetails.length > 0;\n    // It stores the fields according to the colIdentifier argument\n    const tmpDataArr = [];\n    // Stores the fields according to the colIdentifier argument\n    const colIArr = colIdentifier.split(',');\n\n    colIArr.forEach((colName) => {\n        for (let i = 0; i < fieldStore.length; i += 1) {\n            if (fieldStore[i].name() === colName) {\n                tmpDataArr.push(fieldStore[i]);\n                break;\n            }\n        }\n    });\n\n    // Inserts the schema to the schema object\n    tmpDataArr.forEach((field) => {\n        /** @todo Need to use extend2 here otherwise user can overwrite the schema. */\n        retObj.schema.push(field.schema());\n    });\n\n    if (addUid) {\n        retObj.schema.push({\n            name: 'uid',\n            type: 'identifier'\n        });\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        retObj.data.push([]);\n        const insertInd = retObj.data.length - 1;\n        let start = 0;\n        tmpDataArr.forEach((field, ii) => {\n            retObj.data[insertInd][ii + start] = field.partialField.data[i];\n        });\n        if (addUid) {\n            retObj.data[insertInd][tmpDataArr.length] = i;\n        }\n        // Creates an array of unique identifiers for each row\n        retObj.uids.push(i);\n\n        // If sorting needed then there is the need to expose the index\n        // mapping from the old index to its new index\n        if (reqSorting) { retObj.data[insertInd].push(i); }\n    });\n\n    // Handles the sort functionality\n    if (reqSorting) {\n        sortData(retObj, sortingDetails);\n    }\n\n    if (options.columnWise) {\n        const tmpData = Array(...Array(retObj.schema.length)).map(() => []);\n        retObj.data.forEach((tuple) => {\n            tuple.forEach((data, i) => {\n                tmpData[i].push(data);\n            });\n        });\n        retObj.data = tmpData;\n    }\n\n    return retObj;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n\n/**\n * Performs the union operation between two dm instances.\n *\n * @todo Fix the conflicts between union and difference terminology here.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function difference (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n   // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     * @param {boolean} addData - If true only tuple will be added to the data.\n     */\n    function prepareDataHelper(dm, fieldsObj, addData) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                if (addData) { data.push(tuple); }\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj, false);\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj, true);\n\n    return new DataModel(data, schema, { name });\n}\n\n","/**\n * The helper function that returns an array of common schema\n * from two fieldStore instances.\n *\n * @param {FieldStore} fs1 - The first FieldStore instance.\n * @param {FieldStore} fs2 - The second FieldStore instance.\n * @return {Array} An array containing the common schema.\n */\nexport function getCommonSchema (fs1, fs2) {\n    const retArr = [];\n    const fs1Arr = [];\n    fs1.fields.forEach((field) => {\n        fs1Arr.push(field.schema().name);\n    });\n    fs2.fields.forEach((field) => {\n        if (fs1Arr.indexOf(field.schema().name) !== -1) {\n            retArr.push(field.schema().name);\n        }\n    });\n    return retArr;\n}\n","import { isArray } from '../utils';\nimport InvalidAwareTypes from '../invalid-aware-types';\n\n\nfunction getFilteredValues(arr) {\n    return arr.filter(item => !(item instanceof InvalidAwareTypes));\n}\n/**\n * Reducer function that returns the sum of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the sum of the array.\n */\nfunction sum (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const filteredNumber = getFilteredValues(arr);\n        const totalSum = filteredNumber.length ?\n                            filteredNumber.reduce((acc, curr) => acc + curr, 0)\n                            : InvalidAwareTypes.NULL;\n        return totalSum;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that returns the average of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the mean value of the array.\n */\nfunction avg (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const totalSum = sum(arr);\n        const len = arr.length || 1;\n        return (Number.isNaN(totalSum) || totalSum instanceof InvalidAwareTypes) ?\n                 InvalidAwareTypes.NULL : totalSum / len;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the min value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the minimum value of the array.\n */\nfunction min (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.min(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the max value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the maximum value of the array.\n */\nfunction max (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.max(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the first value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the first value of the array.\n */\nfunction first (arr) {\n    return arr[0];\n}\n\n/**\n * Reducer function that gives the last value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the last value of the array.\n */\nfunction last (arr) {\n    return arr[arr.length - 1];\n}\n\n/**\n * Reducer function that gives the count value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the length of the array.\n */\nfunction count (arr) {\n    if (isArray(arr)) {\n        return arr.length;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Calculates the variance of the input array.\n *\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the variance of the input array.\n */\nfunction variance (arr) {\n    let mean = avg(arr);\n    return avg(arr.map(num => (num - mean) ** 2));\n}\n\n/**\n * Calculates the square root of the variance of the input array.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the square root of the variance.\n */\nfunction std (arr) {\n    return Math.sqrt(variance(arr));\n}\n\n\nconst fnList = {\n    sum,\n    avg,\n    min,\n    max,\n    first,\n    last,\n    count,\n    std\n};\n\nconst defaultReducerName = 'sum';\n\nexport {\n    defaultReducerName,\n    sum as defReducer,\n    fnList,\n};\n","import { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport DataModel from '../export';\nimport reducerStore from '../utils/reducer-store';\nimport { defaultReducerName } from './group-by-function';\nimport { FieldType } from '../enums';\n\n/**\n * This function sanitize the user given field and return a common Array structure field\n * list\n * @param  {DataModel} dataModel the dataModel operating on\n * @param  {Array} fieldArr  user input of field Array\n * @return {Array}           arrays of field name\n */\nfunction getFieldArr (dataModel, fieldArr) {\n    const retArr = [];\n    const fieldStore = dataModel.getFieldspace();\n    const dimensions = fieldStore.getDimension();\n\n    Object.entries(dimensions).forEach(([key]) => {\n        if (fieldArr && fieldArr.length) {\n            if (fieldArr.indexOf(key) !== -1) {\n                retArr.push(key);\n            }\n        } else {\n            retArr.push(key);\n        }\n    });\n\n    return retArr;\n}\n\n/**\n * This sanitize the reducer provide by the user and create a common type of object.\n * user can give function Also\n * @param  {DataModel} dataModel     dataModel to worked on\n * @param  {Object|function} [reducers={}] reducer provided by the users\n * @return {Object}               object containing reducer function for every measure\n */\nfunction getReducerObj (dataModel, reducers = {}) {\n    const retObj = {};\n    const fieldStore = dataModel.getFieldspace();\n    const measures = fieldStore.getMeasure();\n    const defReducer = reducerStore.defaultReducer();\n\n    Object.keys(measures).forEach((measureName) => {\n        if (typeof reducers[measureName] !== 'string') {\n            reducers[measureName] = measures[measureName].defAggFn();\n        }\n        const reducerFn = reducerStore.resolve(reducers[measureName]);\n        if (reducerFn) {\n            retObj[measureName] = reducerFn;\n        } else {\n            retObj[measureName] = defReducer;\n            reducers[measureName] = defaultReducerName;\n        }\n    });\n    return retObj;\n}\n\n/**\n * main function which perform the group-by operations which reduce the measures value is the\n * fields are common according to the reducer function provided\n * @param  {DataModel} dataModel the dataModel to worked\n * @param  {Array} fieldArr  fields according to which the groupby should be worked\n * @param  {Object|Function} reducers  reducers function\n * @param {DataModel} existingDataModel Existing datamodel instance\n * @return {DataModel} new dataModel with the group by\n */\nfunction groupBy (dataModel, fieldArr, reducers, existingDataModel) {\n    const sFieldArr = getFieldArr(dataModel, fieldArr);\n    const reducerObj = getReducerObj(dataModel, reducers);\n    const fieldStore = dataModel.getFieldspace();\n    const fieldStoreObj = fieldStore.fieldsObj();\n    const dbName = fieldStore.name;\n    const dimensionArr = [];\n    const measureArr = [];\n    const schema = [];\n    const hashMap = {};\n    const data = [];\n    let newDataModel;\n\n    // Prepare the schema\n    Object.entries(fieldStoreObj).forEach(([key, value]) => {\n        if (sFieldArr.indexOf(key) !== -1 || reducerObj[key]) {\n            schema.push(extend2({}, value.schema()));\n\n            switch (value.schema().type) {\n            case FieldType.MEASURE:\n                measureArr.push(key);\n                break;\n            default:\n            case FieldType.DIMENSION:\n                dimensionArr.push(key);\n            }\n        }\n    });\n    // Prepare the data\n    let rowCount = 0;\n    rowDiffsetIterator(dataModel._rowDiffset, (i) => {\n        let hash = '';\n        dimensionArr.forEach((_) => {\n            hash = `${hash}-${fieldStoreObj[_].partialField.data[i]}`;\n        });\n        if (hashMap[hash] === undefined) {\n            hashMap[hash] = rowCount;\n            data.push({});\n            dimensionArr.forEach((_) => {\n                data[rowCount][_] = fieldStoreObj[_].partialField.data[i];\n            });\n            measureArr.forEach((_) => {\n                data[rowCount][_] = [fieldStoreObj[_].partialField.data[i]];\n            });\n            rowCount += 1;\n        } else {\n            measureArr.forEach((_) => {\n                data[hashMap[hash]][_].push(fieldStoreObj[_].partialField.data[i]);\n            });\n        }\n    });\n\n    // reduction\n    let cachedStore = {};\n    let cloneProvider = () => dataModel.detachedRoot();\n    data.forEach((row) => {\n        const tuple = row;\n        measureArr.forEach((_) => {\n            tuple[_] = reducerObj[_](row[_], cloneProvider, cachedStore);\n        });\n    });\n    if (existingDataModel) {\n        existingDataModel.__calculateFieldspace();\n        newDataModel = existingDataModel;\n    }\n    else {\n        newDataModel = new DataModel(data, schema, { name: dbName });\n    }\n    return newDataModel;\n}\n\nexport { groupBy, getFieldArr, getReducerObj };\n","export { createBinnedFieldData } from './bucket-creator';\nexport { compose, bin, select, project, groupBy as groupby } from './compose';\nexport { calculateVariable, sort } from './pure-operators';\nexport { crossProduct } from './cross-product';\nexport { dataBuilder } from './data-builder';\nexport { difference } from './difference';\nexport { getCommonSchema } from './get-common-schema';\nexport { defReducer, fnList } from './group-by-function';\nexport { groupBy, getFieldArr, getReducerObj } from './group-by';\nexport { mergeSort } from './merge-sort';\nexport { naturalJoinFilter } from './natural-join-filter-function';\nexport { naturalJoin } from './natural-join';\nexport { leftOuterJoin, rightOuterJoin, fullOuterJoin } from './outer-join';\nexport { rowDiffsetIterator } from './row-diffset-iterator';\nexport { union } from './union';\n","/**\n * The default sort function.\n *\n * @param {*} a - The first value.\n * @param {*} b - The second value.\n * @return {number} Returns the comparison result e.g. 1 or 0 or -1.\n */\nfunction defSortFn (a, b) {\n    const a1 = `${a}`;\n    const b1 = `${b}`;\n    if (a1 < b1) {\n        return -1;\n    }\n    if (a1 > b1) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * The helper function for merge sort which creates the sorted array\n * from the two halves of the input array.\n *\n * @param {Array} arr - The target array which needs to be merged.\n * @param {number} lo - The starting index of the first array half.\n * @param {number} mid - The ending index of the first array half.\n * @param {number} hi - The ending index of the second array half.\n * @param {Function} sortFn - The sort function.\n */\nfunction merge (arr, lo, mid, hi, sortFn) {\n    const mainArr = arr;\n    const auxArr = [];\n    for (let i = lo; i <= hi; i += 1) {\n        auxArr[i] = mainArr[i];\n    }\n    let a = lo;\n    let b = mid + 1;\n\n    for (let i = lo; i <= hi; i += 1) {\n        if (a > mid) {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        } else if (b > hi) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else if (sortFn(auxArr[a], auxArr[b]) <= 0) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        }\n    }\n}\n\n/**\n * The helper function for merge sort which would be called\n * recursively for sorting the array halves.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {number} lo - The starting index of the array half.\n * @param {number} hi - The ending index of the array half.\n * @param {Function} sortFn - The sort function.\n * @return {Array} Returns the target array itself.\n */\nfunction sort (arr, lo, hi, sortFn) {\n    if (hi === lo) { return arr; }\n\n    const mid = lo + Math.floor((hi - lo) / 2);\n    sort(arr, lo, mid, sortFn);\n    sort(arr, mid + 1, hi, sortFn);\n    merge(arr, lo, mid, hi, sortFn);\n\n    return arr;\n}\n\n/**\n * The implementation of merge sort.\n * It is used in DataModel for stable sorting as it is not sure\n * what the sorting algorithm used by browsers is stable or not.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {Function} [sortFn=defSortFn] - The sort function.\n * @return {Array} Returns the input array itself in sorted order.\n */\nexport function mergeSort (arr, sortFn = defSortFn) {\n    if (arr.length > 1) {\n        sort(arr, 0, arr.length - 1, sortFn);\n    }\n    return arr;\n}\n","import { getCommonSchema } from './get-common-schema';\n\n/**\n * The filter function used in natural join.\n * It generates a function that will have the logic to join two\n * DataModel instances by the process of natural join.\n *\n * @param {DataModel} dm1 - The left DataModel instance.\n * @param {DataModel} dm2 - The right DataModel instance.\n * @return {Function} Returns a function that is used in cross-product operation.\n */\nexport function naturalJoinFilter (dm1, dm2) {\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    // const dm1FieldStoreName = dm1FieldStore.name;\n    // const dm2FieldStoreName = dm2FieldStore.name;\n    const commonSchemaArr = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    return (dm1Fields, dm2Fields) => {\n        let retainTuple = true;\n        commonSchemaArr.forEach((fieldName) => {\n            if (dm1Fields[fieldName].value ===\n                dm2Fields[fieldName].value && retainTuple) {\n                retainTuple = true;\n            } else {\n                retainTuple = false;\n            }\n        });\n        return retainTuple;\n    };\n}\n","import { crossProduct } from './cross-product';\nimport { naturalJoinFilter } from './natural-join-filter-function';\n\nexport function naturalJoin (dataModel1, dataModel2) {\n    return crossProduct(dataModel1, dataModel2, naturalJoinFilter(dataModel1, dataModel2), true);\n}\n","import { crossProduct } from './cross-product';\nimport { JOINS } from '../constants';\nimport { union } from './union';\n\n\nexport function leftOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel1, dataModel2, filterFn, false, JOINS.LEFTOUTER);\n}\n\nexport function rightOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel2, dataModel1, filterFn, false, JOINS.RIGHTOUTER);\n}\n\nexport function fullOuterJoin (dataModel1, dataModel2, filterFn) {\n    return union(leftOuterJoin(dataModel1, dataModel2, filterFn), rightOuterJoin(dataModel1, dataModel2, filterFn));\n}\n","/**\n * Wrapper on calculateVariable() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const calculateVariable = (...args) => dm => dm.calculateVariable(...args);\n\n/**\n * Wrapper on sort() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const sort = (...args) => dm => dm.sort(...args);\n","/**\n * Iterates through the diffSet array and call the callback with the current\n * index.\n *\n * @param {string} rowDiffset - The row diffset string e.g. '0-4,6,10-13'.\n * @param {Function} callback - The callback function to be called with every index.\n */\nexport function rowDiffsetIterator (rowDiffset, callback) {\n    if (rowDiffset.length > 0) {\n        const rowDiffArr = rowDiffset.split(',');\n        rowDiffArr.forEach((diffStr) => {\n            const diffStsArr = diffStr.split('-');\n            const start = +(diffStsArr[0]);\n            const end = +(diffStsArr[1] || diffStsArr[0]);\n            if (end >= start) {\n                for (let i = start; i <= end; i += 1) {\n                    callback(i);\n                }\n            }\n        });\n    }\n}\n","import DataModel from '../export';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n/**\n * Performs the union operation between two dm instances.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function union (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n    // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     */\n    function prepareDataHelper (dm, fieldsObj) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                data.push(tuple);\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj);\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj);\n\n    return new DataModel(data, schema, { name });\n}\n","import { FilteringMode } from './enums';\nimport { getUniqueId } from './utils';\nimport { persistDerivation, updateFields, cloneWithSelect, cloneWithProject, updateData } from './helper';\nimport { crossProduct, difference, naturalJoinFilter, union } from './operator';\nimport { DM_DERIVATIVES } from './constants';\n\n/**\n * Relation provides the definitions of basic operators of relational algebra like *selection*, *projection*, *union*,\n * *difference* etc.\n *\n * It is extended by {@link DataModel} to inherit the functionalities of relational algebra concept.\n *\n * @class\n * @public\n * @module Relation\n * @namespace DataModel\n */\nclass Relation {\n\n    /**\n     * Creates a new Relation instance by providing underlying data and schema.\n     *\n     * @private\n     *\n     * @param {Object | string | Relation} data - The input tabular data in dsv or json format or\n     * an existing Relation instance object.\n     * @param {Array} schema - An array of data schema.\n     * @param {Object} [options] - The optional options.\n     */\n    constructor (...params) {\n        let source;\n\n        this._parent = null;\n        this._derivation = [];\n        this._children = [];\n\n        if (params.length === 1 && ((source = params[0]) instanceof Relation)) {\n            // parent datamodel was passed as part of source\n            this._colIdentifier = source._colIdentifier;\n            this._rowDiffset = source._rowDiffset;\n            this._dataFormat = source._dataFormat;\n            this._parent = source;\n            this._partialFieldspace = this._parent._partialFieldspace;\n            this._fieldStoreName = getUniqueId();\n            this.__calculateFieldspace().calculateFieldsConfig();\n        } else {\n            updateData(this, ...params);\n            this._fieldStoreName = this._partialFieldspace.name;\n            this.__calculateFieldspace().calculateFieldsConfig();\n            this._propagationNameSpace = {\n                mutableActions: {},\n                immutableActions: {}\n            };\n        }\n    }\n\n    /**\n     * Retrieves the {@link Schema | schema} details for every {@link Field | field} as an array.\n     *\n     * @public\n     *\n     * @return {Array.<Schema>} Array of fields schema.\n     *      ```\n     *      [\n     *          { name: 'Name', type: 'dimension' },\n     *          { name: 'Miles_per_Gallon', type: 'measure', numberFormat: (val) => `${val} miles / gallon` },\n     *          { name: 'Cylinder', type: 'dimension' },\n     *          { name: 'Displacement', type: 'measure', defAggFn: 'max' },\n     *          { name: 'HorsePower', type: 'measure', defAggFn: 'max' },\n     *          { name: 'Weight_in_lbs', type: 'measure', defAggFn: 'avg',  },\n     *          { name: 'Acceleration', type: 'measure', defAggFn: 'avg' },\n     *          { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *          { name: 'Origin' }\n     *      ]\n     *      ```\n     */\n    getSchema () {\n        return this.getFieldspace().fields.map(d => d.schema());\n    }\n\n    /**\n     * Returns the name of the {@link DataModel} instance. If no name was specified during {@link DataModel}\n     * initialization, then it returns a auto-generated name.\n     *\n     * @public\n     *\n     * @return {string} Name of the DataModel instance.\n     */\n    getName() {\n        return this._fieldStoreName;\n    }\n\n    getFieldspace () {\n        return this._fieldspace;\n    }\n\n    __calculateFieldspace () {\n        this._fieldspace = updateFields([this._rowDiffset, this._colIdentifier],\n             this.getPartialFieldspace(), this._fieldStoreName);\n        return this;\n    }\n\n    getPartialFieldspace () {\n        return this._partialFieldspace;\n    }\n\n    /**\n     * Performs {@link link_of_cross_product | cross-product} between two {@link DataModel} instances and returns a\n     * new {@link DataModel} instance containing the results. This operation is also called theta join.\n     *\n     * Cross product takes two set and create one set where each value of one set is paired with each value of another\n     * set.\n     *\n     * This method takes an optional predicate which filters the generated result rows. If the predicate returns true\n     * the combined row is included in the resulatant table.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.join(originDM)));\n     *\n     *  console.log(carsDM.join(originDM,\n     *      obj => obj.[originDM.getName()].Origin === obj.[carsDM.getName()].Origin));\n     *\n     * @text\n     * This is chained version of `join` operator. `join` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel to be joined with the current instance DataModel.\n     * @param {SelectionPredicate} filterFn - The predicate function that will filter the result of the crossProduct.\n     *\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    join (joinWith, filterFn) {\n        return crossProduct(this, joinWith, filterFn);\n    }\n\n    /**\n     * {@link natural_join | Natural join} is a special kind of cross-product join where filtering of rows are performed\n     * internally by resolving common fields are from both table and the rows with common value are included.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.naturalJoin(originDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel with which the current instance of DataModel on which the method is\n     *      called will be joined.\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    naturalJoin (joinWith) {\n        return crossProduct(this, joinWith, naturalJoinFilter(this, joinWith), true);\n    }\n\n    /**\n     * {@link link_to_union | Union} operation can be termed as vertical stacking of all rows from both the DataModel\n     * instances, provided that both of the {@link DataModel} instances should have same column names.\n     *\n     * @example\n     * console.log(EuropeanMakerDM.union(USAMakerDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} unionWith - DataModel instance for which union has to be applied with the instance on which\n     *      the method is called\n     *\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    union (unionWith) {\n        return union(this, unionWith);\n    }\n\n    /**\n     * {@link link_to_difference | Difference } operation only include rows which are present in the datamodel on which\n     * it was called but not on the one passed as argument.\n     *\n     * @example\n     * console.log(highPowerDM.difference(highExpensiveDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} differenceWith - DataModel instance for which difference has to be applied with the instance\n     *      on which the method is called\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    difference (differenceWith) {\n        return difference(this, differenceWith);\n    }\n\n    /**\n     * {@link link_to_selection | Selection} is a row filtering operation. It expects a predicate and an optional mode\n     * which control which all rows should be included in the resultant DataModel instance.\n     *\n     * {@link SelectionPredicate} is a function which returns a boolean value. For selection operation the selection\n     * function is called for each row of DataModel instance with the current row passed as argument.\n     *\n     * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n     * of rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resultant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  // with selection mode NORMAL:\n     *  const normDt = dt.select(fields => fields.Origin.value === \"USA\")\n     *  console.log(normDt));\n     *\n     * // with selection mode INVERSE:\n     * const inverDt = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.INVERSE })\n     * console.log(inverDt);\n     *\n     * // with selection mode ALL:\n     * const dtArr = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.ALL })\n     * // print the selected parts\n     * console.log(dtArr[0]);\n     * // print the inverted parts\n     * console.log(dtArr[1]);\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Function} selectFn - The predicate function which is called for each row with the current row.\n     * ```\n     *  function (row, i, cloneProvider, store)  { ... }\n     * ```\n     * @param {Object} config - The configuration object to control the inclusion exclusion of a row in resultant\n     * DataModel instance.\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection.\n     * @return {DataModel} Returns the new DataModel instance(s) after operation.\n     */\n    select (selectFn, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n\n        const cloneConfig = { saveChild: config.saveChild };\n        let oDm;\n\n        if (config.mode === FilteringMode.ALL) {\n            const selectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.NORMAL },\n                cloneConfig\n            );\n            const rejectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.INVERSE },\n                cloneConfig\n            );\n            oDm = [selectDm, rejectDm];\n        } else {\n            oDm = cloneWithSelect(\n                this,\n                selectFn,\n                config,\n                cloneConfig\n            );\n        }\n\n        return oDm;\n    }\n\n    /**\n     * Retrieves a boolean value if the current {@link DataModel} instance has data.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'CarName', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     * const data = [];\n     *\n     * const dt = new DataModel(data, schema);\n     * console.log(dt.isEmpty());\n     *\n     * @public\n     *\n     * @return {Boolean} True if the datamodel has no data, otherwise false.\n     */\n    isEmpty () {\n        return !this._rowDiffset.length || !this._colIdentifier.length;\n    }\n\n    /**\n     * Creates a clone from the current DataModel instance with child parent relationship.\n     *\n     * @private\n     * @param {boolean} [saveChild=true] - Whether the cloned instance would be recorded in the parent instance.\n     * @return {DataModel} - Returns the newly cloned DataModel instance.\n     */\n    clone (saveChild = true, linkParent = true) {\n        let retDataModel;\n        if (linkParent === false) {\n            const dataObj = this.getData({\n                getAllFields: true\n            });\n            const data = dataObj.data;\n            const schema = dataObj.schema;\n            const jsonData = data.map((row) => {\n                const rowObj = {};\n                schema.forEach((field, i) => {\n                    rowObj[field.name] = row[i];\n                });\n                return rowObj;\n            });\n            retDataModel = new this.constructor(jsonData, schema);\n        }\n        else {\n            retDataModel = new this.constructor(this);\n        }\n\n        if (saveChild) {\n            this._children.push(retDataModel);\n        }\n        return retDataModel;\n    }\n\n    /**\n     * {@link Projection} is filter column (field) operation. It expects list of fields' name and either include those\n     * or exclude those based on {@link FilteringMode} on the resultant variable.\n     *\n     * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n     * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resulatant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *\n     *  // with projection mode NORMAL:\n     *  const normDt = dt.project([\"Name\", \"HorsePower\"]);\n     *  console.log(normDt.getData());\n     *\n     *  // with projection mode INVERSE:\n     *  const inverDt = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.INVERSE })\n     *  console.log(inverDt.getData());\n     *\n     *  // with selection mode ALL:\n     *  const dtArr = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.ALL })\n     *  // print the normal parts\n     *  console.log(dtArr[0].getData());\n     *  // print the inverted parts\n     *  console.log(dtArr[1].getData());\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n     * @param {Object} [config] - An optional config to control the creation of new DataModel\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n     *\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    project (projField, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const { mode } = config;\n\n        let normalizedProjField = projField.reduce((acc, field) => {\n            if (field.constructor.name === 'RegExp') {\n                acc.push(...allFields.filter(fieldName => fieldName.search(field) !== -1));\n            } else if (field in fieldConfig) {\n                acc.push(field);\n            }\n            return acc;\n        }, []);\n\n        normalizedProjField = Array.from(new Set(normalizedProjField)).map(field => field.trim());\n        let dataModel;\n\n        if (mode === FilteringMode.ALL) {\n            let projectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.NORMAL,\n                saveChild: config.saveChild\n            }, allFields);\n            let rejectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.INVERSE,\n                saveChild: config.saveChild\n            }, allFields);\n            dataModel = [projectionClone, rejectionClone];\n        } else {\n            let projectionClone = cloneWithProject(this, normalizedProjField, config, allFields);\n            dataModel = projectionClone;\n        }\n\n        return dataModel;\n    }\n\n    getFieldsConfig () {\n        return this._fieldConfig;\n    }\n\n    calculateFieldsConfig () {\n        this._fieldConfig = this._fieldspace.fields.reduce((acc, fieldDef, i) => {\n            acc[fieldDef.name()] = {\n                index: i,\n                def: { name: fieldDef.name(), type: fieldDef.type(), subtype: fieldDef.subtype() }\n            };\n            return acc;\n        }, {});\n        return this;\n    }\n\n\n    /**\n     * Frees up the resources associated with the current DataModel instance and breaks all the links instance has in\n     * the DAG.\n     *\n     * @public\n     */\n    dispose () {\n        this._parent.removeChild(this);\n        this._parent = null;\n    }\n\n    /**\n     * Removes the specified child {@link DataModel} from the child list of the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\")\n     * dt.removeChild(dt2);\n     *\n     * @private\n     *\n     * @param {DataModel} child - Delegates the parent to remove this child.\n     */\n    removeChild (child) {\n        let idx = this._children.findIndex(sibling => sibling === child);\n        idx !== -1 ? this._children.splice(idx, 1) : true;\n    }\n\n    /**\n     * Adds the specified {@link DataModel} as a parent for the current {@link DataModel} instance.\n     *\n     * The optional criteriaQueue is an array containing the history of transaction performed on parent\n     *  {@link DataModel} to get the current one.\n     *\n     * @param {DataModel} parent - The datamodel instance which will act as parent.\n     * @param {Array} criteriaQueue - Queue contains in-between operation meta-data.\n     */\n    addParent (parent, criteriaQueue = []) {\n        persistDerivation(this, DM_DERIVATIVES.COMPOSE, null, criteriaQueue);\n        this._parent = parent;\n        parent._children.push(this);\n    }\n\n    /**\n     * Returns the parent {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const parentDm = dt2.getParent();\n     *\n     * @return {DataModel} Returns the parent DataModel instance.\n     */\n    getParent () {\n        return this._parent;\n    }\n\n    /**\n     * Returns the immediate child {@link DataModel} instances.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const childDm1 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const childDm2 = dt.select(fields => fields.Origin.value === \"Japan\");\n     * const childDm3 = dt.groupBy([\"Origin\"]);\n     *\n     * @return {DataModel[]} Returns the immediate child DataModel instances.\n     */\n    getChildren() {\n        return this._children;\n    }\n\n    /**\n     * Returns the in-between operation meta data while creating the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const derivations = dt3.getDerivations();\n     *\n     * @return {Any[]} Returns the derivation meta data.\n     */\n    getDerivations() {\n        return this._derivation;\n    }\n}\n\nexport default Relation;\n","import { fnList } from '../operator/group-by-function';\n\nexport const { sum, avg, min, max, first, last, count, std: sd } = fnList;\n","/**\n * The utility function to calculate major column.\n *\n * @param {Object} store - The store object.\n * @return {Function} Returns the push function.\n */\nexport default (store) => {\n    let i = 0;\n    return (...fields) => {\n        fields.forEach((val, fieldIndex) => {\n            if (!(store[fieldIndex] instanceof Array)) {\n                store[fieldIndex] = Array.from({ length: i });\n            }\n            store[fieldIndex].push(val);\n        });\n        i++;\n    };\n};\n","/**\n * Creates a JS native date object from input\n *\n * @param {string | number | Date} date Input using which date object to be created\n * @return {Date} : JS native date object\n */\nfunction convertToNativeDate (date) {\n    if (date instanceof Date) {\n        return date;\n    }\n\n    return new Date(date);\n}\n/**\n * Apply padding before a number if its less than 1o. This is used when constant digit's number to be returned\n * between 0 - 99\n *\n * @param {number} n Input to be padded\n * @return {string} Padded number\n */\nfunction pad (n) {\n    return (n < 10) ? (`0${n}`) : n;\n}\n/*\n * DateFormatter utility to convert any date format to any other date format\n * DateFormatter parse a date time stamp specified by a user abiding by rules which are defined\n * by user in terms of token. It creates JS native date object from the user specified format.\n * That native date can also be displayed\n * in any specified format.\n * This utility class only takes care of format conversion only\n */\n\n/*\n * Escapes all the special character that are used in regular expression.\n * Like\n * RegExp.escape('sgfd-$') // Output: sgfd\\-\\$\n *\n * @param text {String} : text which is to be escaped\n */\nRegExp.escape = function (text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * DateTimeFormatter class to convert any user format of date time stamp to any other format\n * of date time stamp.\n *\n * @param {string} format Format of the date given. For the above date,\n * 'year: %Y, month: %b, day: %d'.\n * @class\n */\n/* istanbul ignore next */ function DateTimeFormatter (format) {\n    this.format = format;\n    this.dtParams = undefined;\n    this.nativeDate = undefined;\n}\n\n// The identifier of the tokens\nDateTimeFormatter.TOKEN_PREFIX = '%';\n\n// JS native Date constructor takes the date params (year, month, etc) in a certail sequence.\n// This defines the sequence of the date parameters in the constructor.\nDateTimeFormatter.DATETIME_PARAM_SEQUENCE = {\n    YEAR: 0,\n    MONTH: 1,\n    DAY: 2,\n    HOUR: 3,\n    MINUTE: 4,\n    SECOND: 5,\n    MILLISECOND: 6\n};\n\n/*\n * This is a default number parsing utility. It tries to parse a number in integer, if parsing is unsuccessful, it\n * gives back a default value.\n *\n * @param: defVal {Number} : Default no if the parsing to integer is not successful\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be parsed.\n */\nDateTimeFormatter.defaultNumberParser = function (defVal) {\n    return function (val) {\n        let parsedVal;\n        if (isFinite(parsedVal = parseInt(val, 10))) {\n            return parsedVal;\n        }\n\n        return defVal;\n    };\n};\n\n/*\n * This is a default number range utility. It tries to find an element in the range. If not found it returns a\n * default no as an index.\n *\n * @param: range {Array} : The list which is to be serached\n * @param: defVal {Number} : Default no if the serach and find does not return anything\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be found\n */\nDateTimeFormatter.defaultRangeParser = function (range, defVal) {\n    return (val) => {\n        let i;\n        let l;\n\n        if (!val) { return defVal; }\n\n        const nVal = val.toLowerCase();\n\n        for (i = 0, l = range.length; i < l; i++) {\n            if (range[i].toLowerCase() === nVal) {\n                return i;\n            }\n        }\n\n        if (i === undefined) {\n            return defVal;\n        }\n        return null;\n    };\n};\n\n/*\n * Defines the tokens which are supporter by the dateformatter. Using this definitation a value gets extracted from\n * the user specifed date string. This also formats the value for display purpose from native JS date.\n * The definition of each token contains the following named properties\n * {\n *     %token_name% : {\n *         name: name of the token, this is used in reverse lookup,\n *         extract: a function that returns the regular expression to extract that piece of information. All the\n *                  regex should be gouped by using ()\n *         parser: a function which receives value extracted by the above regex and parse it to get the date params\n *         formatter: a formatter function that takes milliseconds or JS Date object and format the param\n *                  represented by the token only.\n *     }\n * }\n *\n * @return {Object} : Definition of the all the supported tokens.\n */\nDateTimeFormatter.getTokenDefinitions = function () {\n    const daysDef = {\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ],\n        long: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ]\n    };\n    const monthsDef = {\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ],\n        long: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ]\n    };\n\n    const definitions = {\n        H: {\n            // 24 hours format\n            name: 'H',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n\n                return d.getHours().toString();\n            }\n        },\n        l: {\n            // 12 hours format\n            name: 'l',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours() % 12;\n\n                return (hours === 0 ? 12 : hours).toString();\n            }\n        },\n        p: {\n            // AM or PM\n            name: 'p',\n            index: 3,\n            extract () { return '(AM|PM)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'AM' : 'PM');\n            }\n        },\n        P: {\n            // am or pm\n            name: 'P',\n            index: 3,\n            extract () { return '(am|pm)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'am' : 'pm');\n            }\n        },\n        M: {\n            // Two digit minutes 00 - 59\n            name: 'M',\n            index: 4,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const mins = d.getMinutes();\n\n                return pad(mins);\n            }\n        },\n        S: {\n            // Two digit seconds 00 - 59\n            name: 'S',\n            index: 5,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const seconds = d.getSeconds();\n\n                return pad(seconds);\n            }\n        },\n        K: {\n            // Milliseconds\n            name: 'K',\n            index: 6,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const ms = d.getMilliseconds();\n\n                return ms.toString();\n            }\n        },\n        a: {\n            // Short name of day, like Mon\n            name: 'a',\n            index: 2,\n            extract () { return `(${daysDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.short[day]).toString();\n            }\n        },\n        A: {\n            // Long name of day, like Monday\n            name: 'A',\n            index: 2,\n            extract () { return `(${daysDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.long[day]).toString();\n            }\n        },\n        e: {\n            // 8 of March, 11 of November\n            name: 'e',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return day.toString();\n            }\n        },\n        d: {\n            // 08 of March, 11 of November\n            name: 'd',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return pad(day);\n            }\n        },\n        b: {\n            // Short month, like Jan\n            name: 'b',\n            index: 1,\n            extract () { return `(${monthsDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.short[month]).toString();\n            }\n        },\n        B: {\n            // Long month, like January\n            name: 'B',\n            index: 1,\n            extract () { return `(${monthsDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.long[month]).toString();\n            }\n        },\n        m: {\n            // Two digit month of year like 01 for January\n            name: 'm',\n            index: 1,\n            extract () { return '(\\\\d+)'; },\n            parser (val) { return DateTimeFormatter.defaultNumberParser()(val) - 1; },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return pad(month + 1);\n            }\n        },\n        y: {\n            // Short year like 90 for 1990\n            name: 'y',\n            index: 0,\n            extract () { return '(\\\\d{2})'; },\n            parser (val) {\n                if (val) {\n                    const l = val.length;\n                    val = val.substring(l - 2, l);\n                }\n                let parsedVal = DateTimeFormatter.defaultNumberParser()(val);\n                let presentYear = Math.trunc(((new Date()).getFullYear()) / 100);\n                if (parsedVal instanceof Number) {\n                    parsedVal = (presentYear * 100) + parsedVal;\n                } else {\n                    parsedVal = `${presentYear}${parsedVal}`;\n                }\n                return parsedVal;\n            },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                let year = d.getFullYear().toString();\n                let l;\n\n                if (year) {\n                    l = year.length;\n                    year = year.substring(l - 2, l);\n                }\n\n                return year;\n            }\n        },\n        Y: {\n            // Long year like 1990\n            name: 'Y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const year = d.getFullYear().toString();\n\n                return year;\n            }\n        }\n    };\n\n    return definitions;\n};\n\n/*\n * The tokens which works internally is not user friendly in terms of memorizing the names. This gives a formal\n * definition to the informal notations.\n *\n * @return {Object} : Formal definition of the tokens\n */\nDateTimeFormatter.getTokenFormalNames = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n\n    return {\n        HOUR: definitions.H,\n        HOUR_12: definitions.l,\n        AMPM_UPPERCASE: definitions.p,\n        AMPM_LOWERCASE: definitions.P,\n        MINUTE: definitions.M,\n        SECOND: definitions.S,\n        SHORT_DAY: definitions.a,\n        LONG_DAY: definitions.A,\n        DAY_OF_MONTH: definitions.e,\n        DAY_OF_MONTH_CONSTANT_WIDTH: definitions.d,\n        SHORT_MONTH: definitions.b,\n        LONG_MONTH: definitions.B,\n        MONTH_OF_YEAR: definitions.m,\n        SHORT_YEAR: definitions.y,\n        LONG_YEAR: definitions.Y\n    };\n};\n\n/*\n * This defines the rules and declares dependencies that resolves a date parameter (year, month etc) from\n * the date time parameter array.\n *\n * @return {Object} : An object that contains dependencies and a resolver function. The dependencies values are fed\n *                  to the resolver function in that particular sequence only.\n */\nDateTimeFormatter.tokenResolver = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const defaultResolver = (...args) => { // eslint-disable-line require-jsdoc\n        let i = 0;\n        let arg;\n        let targetParam;\n        const l = args.length;\n\n        for (; i < l; i++) {\n            arg = args[i];\n            if (args[i]) {\n                targetParam = arg;\n            }\n        }\n\n        if (!targetParam) { return null; }\n\n        return targetParam[0].parser(targetParam[1]);\n    };\n\n    return {\n        YEAR: [definitions.y, definitions.Y,\n            defaultResolver\n        ],\n        MONTH: [definitions.b, definitions.B, definitions.m,\n            defaultResolver\n        ],\n        DAY: [definitions.a, definitions.A, definitions.e, definitions.d,\n            defaultResolver\n        ],\n        HOUR: [definitions.H, definitions.l, definitions.p, definitions.P,\n            function (hourFormat24, hourFormat12, ampmLower, ampmUpper) {\n                let targetParam;\n                let amOrpm;\n                let isPM;\n                let val;\n\n                if (hourFormat12 && (amOrpm = (ampmLower || ampmUpper))) {\n                    if (amOrpm[0].parser(amOrpm[1]) === 'pm') {\n                        isPM = true;\n                    }\n\n                    targetParam = hourFormat12;\n                } else if (hourFormat12) {\n                    targetParam = hourFormat12;\n                } else {\n                    targetParam = hourFormat24;\n                }\n\n                if (!targetParam) { return null; }\n\n                val = targetParam[0].parser(targetParam[1]);\n                if (isPM) {\n                    val += 12;\n                }\n                return val;\n            }\n        ],\n        MINUTE: [definitions.M,\n            defaultResolver\n        ],\n        SECOND: [definitions.S,\n            defaultResolver\n        ]\n    };\n};\n\n/*\n * Finds token from the format rule specified by a user.\n * @param format {String} : The format of the input date specified by the user\n * @return {Array} : An array of objects which contains the available token and their occurence index in the format\n */\nDateTimeFormatter.findTokens = function (format) {\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenLiterals = Object.keys(definitions);\n    const occurrence = [];\n    let i;\n    let forwardChar;\n\n    while ((i = format.indexOf(tokenPrefix, i + 1)) >= 0) {\n        forwardChar = format[i + 1];\n        if (tokenLiterals.indexOf(forwardChar) === -1) { continue; }\n\n        occurrence.push({\n            index: i,\n            token: forwardChar\n        });\n    }\n\n    return occurrence;\n};\n\n/*\n * Format any JS date to a specified date given by user.\n *\n * @param date {Number | Date} : The date object which is to be formatted\n * @param format {String} : The format using which the date will be formatted for display\n */\nDateTimeFormatter.formatAs = function (date, format) {\n    const nDate = convertToNativeDate(date);\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    let formattedStr = String(format);\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    let token;\n    let formattedVal;\n    let i;\n    let l;\n\n    for (i = 0, l = occurrence.length; i < l; i++) {\n        token = occurrence[i].token;\n        formattedVal = definitions[token].formatter(nDate);\n        formattedStr = formattedStr.replace(new RegExp(tokenPrefix + token, 'g'), formattedVal);\n    }\n\n    return formattedStr;\n};\n\n/*\n * Parses the user specified date string to extract the date time params.\n *\n * @return {Array} : Value of date time params in an array [year, month, day, hour, minutes, seconds, milli]\n */\nDateTimeFormatter.prototype.parse = function (dateTimeStamp, options) {\n    const tokenResolver = DateTimeFormatter.tokenResolver();\n    const dtParams = this.extractTokenValue(dateTimeStamp);\n    const dtParamSeq = DateTimeFormatter.DATETIME_PARAM_SEQUENCE;\n    const noBreak = options && options.noBreak;\n    const dtParamArr = [];\n    const args = [];\n    let resolverKey;\n    let resolverParams;\n    let resolverFn;\n    let val;\n    let i;\n    let param;\n    let resolvedVal;\n    let l;\n\n    for (resolverKey in tokenResolver) {\n        if (!{}.hasOwnProperty.call(tokenResolver, resolverKey)) { continue; }\n\n        args.length = 0;\n        resolverParams = tokenResolver[resolverKey];\n        resolverFn = resolverParams.splice(resolverParams.length - 1, 1)[0];\n\n        for (i = 0, l = resolverParams.length; i < l; i++) {\n            param = resolverParams[i];\n            val = dtParams[param.name];\n\n            if (val === undefined) {\n                args.push(null);\n            } else {\n                args.push([param, val]);\n            }\n        }\n\n        resolvedVal = resolverFn.apply(this, args);\n\n        if ((resolvedVal === undefined || resolvedVal === null) && !noBreak) {\n            break;\n        }\n\n        dtParamArr[dtParamSeq[resolverKey]] = resolvedVal;\n    }\n\n    return dtParamArr;\n};\n\n/*\n * Extract the value of the token from user specified date time string.\n *\n * @return {Object} : An key value pair which contains the tokens as key and value as pair\n */\nDateTimeFormatter.prototype.extractTokenValue = function (dateTimeStamp) {\n    const format = this.format;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const tokenObj = {};\n\n    let lastOccurrenceIndex;\n    let occObj;\n    let occIndex;\n    let targetText;\n    let regexFormat;\n\n    let l;\n    let i;\n\n    regexFormat = String(format);\n\n    const tokenArr = occurrence.map(obj => obj.token);\n    const occurrenceLength = occurrence.length;\n    for (i = occurrenceLength - 1; i >= 0; i--) {\n        occIndex = occurrence[i].index;\n\n        if (occIndex + 1 === regexFormat.length - 1) {\n            lastOccurrenceIndex = occIndex;\n            continue;\n        }\n\n        if (lastOccurrenceIndex === undefined) {\n            lastOccurrenceIndex = regexFormat.length;\n        }\n\n        targetText = regexFormat.substring(occIndex + 2, lastOccurrenceIndex);\n        regexFormat = regexFormat.substring(0, occIndex + 2) +\n            RegExp.escape(targetText) +\n            regexFormat.substring(lastOccurrenceIndex, regexFormat.length);\n\n        lastOccurrenceIndex = occIndex;\n    }\n\n    for (i = 0; i < occurrenceLength; i++) {\n        occObj = occurrence[i];\n        regexFormat = regexFormat.replace(tokenPrefix + occObj.token, definitions[occObj.token].extract());\n    }\n\n    const extractValues = dateTimeStamp.match(new RegExp(regexFormat)) || [];\n    extractValues.shift();\n\n    for (i = 0, l = tokenArr.length; i < l; i++) {\n        tokenObj[tokenArr[i]] = extractValues[i];\n    }\n    return tokenObj;\n};\n\n/*\n * Give back the JS native date formed from  user specified date string\n *\n * @return {Date} : Native JS Date\n */\nDateTimeFormatter.prototype.getNativeDate = function (dateTimeStamp) {\n    let date = null;\n    if (Number.isFinite(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    } else if (!this.format && Date.parse(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    }\n    else {\n        const dtParams = this.dtParams = this.parse(dateTimeStamp);\n        if (dtParams.length) {\n            dtParams.unshift(null);\n            this.nativeDate = new (Function.prototype.bind.apply(Date, dtParams))();\n            date = this.nativeDate;\n        }\n    }\n    return date;\n};\n\n/*\n * Represents JS native date to a user specified format.\n *\n * @param format {String} : The format according to which the date is to be represented\n * @return {String} : The formatted date string\n */\nDateTimeFormatter.prototype.formatAs = function (format, dateTimeStamp) {\n    let nativeDate;\n\n    if (dateTimeStamp) {\n        nativeDate = this.nativeDate = this.getNativeDate(dateTimeStamp);\n    } else if (!(nativeDate = this.nativeDate)) {\n        nativeDate = this.getNativeDate(dateTimeStamp);\n    }\n\n    return DateTimeFormatter.formatAs(nativeDate, format);\n};\n\nexport { DateTimeFormatter as default };\n","/**\n * Generates domain for measure field.\n *\n * @param {Array} data - The array of data.\n * @return {Array} Returns the measure domain.\n */\nexport default (data) => {\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    data.forEach((d) => {\n        if (d < min) {\n            min = d;\n        }\n        if (d > max) {\n            max = d;\n        }\n    });\n\n    return [min, max];\n};\n","/* eslint-disable */\nconst OBJECTSTRING = 'object';\nconst objectToStrFn = Object.prototype.toString;\nconst objectToStr = '[object Object]';\nconst arrayToStr = '[object Array]';\n\nfunction checkCyclicRef(obj, parentArr) {\n    let i = parentArr.length;\n    let bIndex = -1;\n\n    while (i) {\n        if (obj === parentArr[i]) {\n            bIndex = i;\n            return bIndex;\n        }\n        i -= 1;\n    }\n\n    return bIndex;\n}\n\nfunction merge(obj1, obj2, skipUndef, tgtArr, srcArr) {\n    var item,\n        srcVal,\n        tgtVal,\n        str,\n        cRef;\n    // check whether obj2 is an array\n    // if array then iterate through it's index\n    // **** MOOTOOLS precution\n\n    if (!srcArr) {\n        tgtArr = [obj1];\n        srcArr = [obj2];\n    }\n    else {\n        tgtArr.push(obj1);\n        srcArr.push(obj2);\n    }\n\n    if (obj2 instanceof Array) {\n        for (item = 0; item < obj2.length; item += 1) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (typeof tgtVal !== OBJECTSTRING) {\n                if (!(skipUndef && tgtVal === undefined)) {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                    srcVal = obj1[item] = tgtVal instanceof Array ? [] : {};\n                }\n                cRef = checkCyclicRef(tgtVal, srcArr);\n                if (cRef !== -1) {\n                    srcVal = obj1[item] = tgtArr[cRef];\n                }\n                else {\n                    merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                }\n            }\n        }\n    }\n    else {\n        for (item in obj2) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (tgtVal !== null && typeof tgtVal === OBJECTSTRING) {\n                // Fix for issue BUG: FWXT-602\n                // IE < 9 Object.prototype.toString.call(null) gives\n                // '[object Object]' instead of '[object Null]'\n                // that's why null value becomes Object in IE < 9\n                str = objectToStrFn.call(tgtVal);\n                if (str === objectToStr) {\n                    if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                        srcVal = obj1[item] = {};\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else if (str === arrayToStr) {\n                    if (srcVal === null || !(srcVal instanceof Array)) {\n                        srcVal = obj1[item] = [];\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (skipUndef && tgtVal === undefined) {\n                    continue;\n                }\n                obj1[item] = tgtVal;\n            }\n        }\n    }\n    return obj1;\n}\n\n\nfunction extend2 (obj1, obj2, skipUndef) {\n    //if none of the arguments are object then return back\n    if (typeof obj1 !== OBJECTSTRING && typeof obj2 !== OBJECTSTRING) {\n        return null;\n    }\n\n    if (typeof obj2 !== OBJECTSTRING || obj2 === null) {\n        return obj1;\n    }\n\n    if (typeof obj1 !== OBJECTSTRING) {\n        obj1 = obj2 instanceof Array ? [] : {};\n    }\n    merge(obj1, obj2, skipUndef);\n    return obj1;\n}\n\nexport { extend2 as default };\n","import { DataFormat } from '../enums';\n\n/**\n * Checks whether the value is an array.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an array otherwise returns false.\n */\nexport function isArray (val) {\n    return Array.isArray(val);\n}\n\n/**\n * Checks whether the value is an object.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an object otherwise returns false.\n */\nexport function isObject (val) {\n    return val === Object(val);\n}\n\n/**\n * Checks whether the value is a string value.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is a string value otherwise returns false.\n */\nexport function isString (val) {\n    return typeof val === 'string';\n}\n\n/**\n * Checks whether the value is callable.\n *\n * @param {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is callable otherwise returns false.\n */\nexport function isCallable (val) {\n    return typeof val === 'function';\n}\n\n/**\n * Returns the unique values from the input array.\n *\n * @param {Array} data - The input array.\n * @return {Array} Returns a new array of unique values.\n */\nexport function uniqueValues (data) {\n    return [...new Set(data)];\n}\n\nexport const getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function isArrEqual(arr1, arr2) {\n    if (!isArray(arr1) || !isArray(arr2)) {\n        return arr1 === arr2;\n    }\n\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * It is the default number format function for the measure field type.\n *\n * @param {any} val - The input value.\n * @return {number} Returns a number value.\n */\nexport function formatNumber(val) {\n    return val;\n}\n\n/**\n * Returns the detected data format.\n *\n * @param {any} data - The input data to be tested.\n * @return {string} Returns the data format name.\n */\nexport const detectDataFormat = (data) => {\n    if (isString(data)) {\n        return DataFormat.DSV_STR;\n    } else if (isArray(data) && isArray(data[0])) {\n        return DataFormat.DSV_ARR;\n    } else if (isArray(data) && (data.length === 0 || isObject(data[0]))) {\n        return DataFormat.FLAT_JSON;\n    }\n    return null;\n};\n","export { default as DateTimeFormatter } from './date-time-formatter';\nexport { default as columnMajor } from './column-major';\nexport { default as generateMeasureDomain } from './domain-generator';\nexport { default as extend2 } from './extend2';\nexport * from './helper';\n","import { defReducer, fnList } from '../operator';\n\n/**\n * A page level storage which stores, registers, unregisters reducers for all the datamodel instances. There is only one\n * reducer store available in a page. All the datamodel instances receive same instance of reducer store. DataModel\n * out of the box provides handful of {@link reducer | reducers} which can be used as reducer funciton.\n *\n * @public\n * @namespace DataModel\n */\nclass ReducerStore {\n    constructor () {\n        this.store = new Map();\n        this.store.set('defReducer', defReducer);\n\n        Object.entries(fnList).forEach((key) => {\n            this.store.set(key[0], key[1]);\n        });\n    }\n\n    /**\n     * Changes the `defaultReducer` globally. For all the fields which does not have `defAggFn` mentioned in schema, the\n     * value of `defaultReducer` is used for aggregation.\n     *\n     * @public\n     * @param {string} [reducer='sum'] - The name of the default reducer. It picks up the definition from store by doing\n     * name lookup. If no name is found then it takes `sum` as the default reducer.\n     * @return {ReducerStore} Returns instance of the singleton store in page.\n     */\n    defaultReducer (...params) {\n        if (!params.length) {\n            return this.store.get('defReducer');\n        }\n\n        let reducer = params[0];\n\n        if (typeof reducer === 'function') {\n            this.store.set('defReducer', reducer);\n        } else {\n            reducer = String(reducer);\n            if (Object.keys(fnList).indexOf(reducer) !== -1) {\n                this.store.set('defReducer', fnList[reducer]);\n            } else {\n                throw new Error(`Reducer ${reducer} not found in registry`);\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     * Registers a {@link reducer | reducer}.\n     * A {@link reducer | reducer} has to be registered before it is used.\n     *\n     * @example\n     *  // find the mean squared value of a given set\n     *  const reducerStore = DataModel.Reducers();\n     *\n     *  reducers.register('meanSquared', (arr) => {\n     *      const squaredVal = arr.map(item => item * item);\n     *      let sum = 0;\n     *      for (let i = 0, l = squaredVal.length; i < l; i++) {\n     *          sum += squaredVal[i++];\n     *      }\n     *\n     *      return sum;\n     *  })\n     *\n     *  // datamodel (dm) is already prepared with cars.json\n     *  const dm1 = dm.groupBy(['origin'], {\n     *      accleration: 'meanSquared'\n     *  });\n     *\n     * @public\n     *\n     * @param {string} name formal name for a reducer. If the given name already exists in store it is overridden by new\n     *      definition.\n     * @param {Function} reducer definition of {@link reducer} function.\n     *\n     * @return {Function} function for unregistering the reducer.\n     */\n    register (name, reducer) {\n        if (typeof reducer !== 'function') {\n            throw new Error('Reducer should be a function');\n        }\n\n        name = String(name);\n        this.store.set(name, reducer);\n\n        return () => { this.__unregister(name); };\n    }\n\n    __unregister (name) {\n        if (this.store.has(name)) {\n            this.store.delete(name);\n        }\n    }\n\n    resolve (name) {\n        if (name instanceof Function) {\n            return name;\n        }\n        return this.store.get(name);\n    }\n}\n\nconst reducerStore = (function () {\n    let store = null;\n\n    function getStore () {\n        if (store === null) {\n            store = new ReducerStore();\n        }\n        return store;\n    }\n    return getStore();\n}());\n\nexport default reducerStore;\n","/**\n * The wrapper class on top of the primitive value of a field.\n *\n * @todo Need to have support for StringValue, NumberValue, DateTimeValue\n * and GeoValue. These types should expose predicate API mostly.\n */\nclass Value {\n\n  /**\n   * Creates new Value instance.\n   *\n   * @param {*} val - the primitive value from the field cell.\n   * @param {string | Field} field - The field from which the value belongs.\n   */\n    constructor (val, field) {\n        Object.defineProperty(this, '_value', {\n            enumerable: false,\n            configurable: false,\n            writable: false,\n            value: val\n        });\n\n        this.field = field;\n    }\n\n  /**\n   * Returns the field value.\n   *\n   * @return {*} Returns the current value.\n   */\n    get value () {\n        return this._value;\n    }\n\n  /**\n   * Converts to human readable string.\n   *\n   * @override\n   * @return {string} Returns a human readable string of the field value.\n   *\n   */\n    toString () {\n        return String(this.value);\n    }\n\n  /**\n   * Returns the value of the field.\n   *\n   * @override\n   * @return {*} Returns the field value.\n   */\n    valueOf () {\n        return this.value;\n    }\n}\n\nexport default Value;\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hyperdis\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hyperdis\"] = factory();\n\telse\n\t\troot[\"hyperdis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import {\n    pullableRecent,\n    pullableEnd\n} from './utils';\n\nexport default class ElectricNode {\n    constructor () {\n        this.edges = [];\n        this.listeners = {\n            nextFrame: [],\n            currentFrame: []\n        };\n    }\n\n    addEdges (...nodes) {\n        this.edges.push(...nodes);\n        return this;\n    }\n\n    regListenerForCurrFrame (fn) {\n        const lstnrs = this.listeners.currentFrame;\n        let index = lstnrs.push(pullableRecent(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.currentFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    regListenerForNextFrame (fn) {\n        const lstnrs = this.listeners.nextFrame;\n        let index = lstnrs.push(pullableEnd(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.nextFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    hasNextFrameListener () {\n        return !!this.listeners.nextFrame.length;\n    }\n}\n","export default class GraphNode {\n    constructor (name, qualifiedName, options) {\n        /* istanbul ignore next */options = options || {};\n        this.name = name;\n        this.qualifiedName = qualifiedName;\n        this.edges = [];\n        this.outgoingEdges = [];\n        this._seed = null;\n        this.requireResolve = true;\n        this.retriever = options.retriever;\n        this.history = [];\n        this.resolver = null;\n        this.electricEdges = [];\n    }\n\n    addDependencies (...dep) {\n        this.edges.push(...dep);\n        dep.forEach(entry => entry.outgoingEdges.push(this));\n        return this;\n    }\n\n    addElectricNode (node) {\n        this.electricEdges.push(node);\n        return this;\n    }\n\n    get seed () {\n        return this._seed;\n    }\n\n    set seed (value) {\n        this._seed = value;\n        this.requireResolve = true;\n        return this;\n    }\n\n    resolve () {\n        this.seed = this.resolver(...this.retrieveDetails());\n        this.history.push(this.seed);\n        this.requireResolve = false;\n        return this;\n    }\n\n    retrieveDetails () {\n        if (this.edges.length === 0) {\n            return [{\n                name: this.name,\n                qualifiedName: this.qualifiedName,\n                value: this.seed\n            }];\n        }\n        return this.retriever(...this.edges.map(edge => edge.qualifiedName));\n    }\n\n    repeatHead () {\n        const\n            history = this.history,\n            head = history[history.length - 1];\n        // @todo- Akash, write test case if history.length === 0 to pass code coverage\n        if (history.length === 0) {\n            return this;\n        }\n        history.push(head);\n        return this;\n    }\n\n    flush () {\n        const hist = this.history,\n            head = hist[hist.length - 1];\n        hist.length = 0;\n        hist.push(head);\n        return this;\n    }\n\n    isRoot () {\n        return this.name === null;\n    }\n}\n","import {\n    isSimpleObject,\n    resolver,\n    // upstreamNodes,\n    flat,\n    resolveDependencyOrder,\n    getUpstreamNodes,\n    ForeignSet,\n    fetch,\n    CustomResolver,\n    scheduler\n} from './utils';\nimport Node from './graph-node';\nimport ElectricNode from './electric-node';\n\nexport default class Graph {\n    constructor () {\n        this.qualifiedNodeMap = {};\n        this.retriever = fetch(this.qualifiedNodeMap);\n        this.root = new Node(null, null, { retriever: this.retriever });\n        this.root.resolver = resolver.accumulate;\n\n        this._wholeSet = null;\n        this._propagate = true;\n        this.propagationOverride = {\n            currentFrameListeners: false,\n            nextFrameListeners: false\n        };\n\n        this._schedule = scheduler((payload) => {\n            let qname;\n            for (qname in payload.flushTarget) {\n                if (!({}).hasOwnProperty.call(this.qualifiedNodeMap, qname)) {\n                    return;\n                }\n                this.qualifiedNodeMap[qname].flush();\n            }\n        });\n    }\n\n    createNodesFrom (obj, mount) {\n        let val,\n            resolveReqList;\n        const qualifiedNodeMap = this.qualifiedNodeMap,\n            root = this.root,\n            retriever = this.retriever;\n\n        (function rec (objn, qualifiedName, history) {\n            let key,\n                qname,\n                perv,\n                node;\n\n            for (key in objn) {\n                if (!({}).hasOwnProperty.call(objn, key)) {\n                    continue;\n                }\n                qname = `${qualifiedName}${key}`;\n                node = new Node(key, qname, { retriever });\n                qualifiedNodeMap[qname] = node;\n\n                if ((perv = history.perv) !== undefined) {\n                    perv.addDependencies(node);\n                } else {\n                    // top most level entries\n                    root.addDependencies(node);\n                }\n\n                if (isSimpleObject(val = objn[key])) {\n                    rec(val, `${qualifiedName}${key}.`, { perv: node });\n                    node.resolver = resolver.accumulate;\n                } else if (val instanceof CustomResolver) {\n                    node.resolver = val.get();\n                    node.addDependencies(...val.getDependencies().map(qname => qualifiedNodeMap[qname]));\n                } else {\n                    node.resolver = resolver.identity;\n                    node.seed = val;\n                    // node.resolve();\n                }\n            }\n        }(obj, mount === null ? '' : `${mount}.`, {\n            perv: qualifiedNodeMap[mount]\n        }));\n\n        this._wholeSet = new ForeignSet(Object.keys(this.qualifiedNodeMap));\n\n        // Recalculate the model without firing the listeners\n        // @todo selective branch resolve. Currently resolve gets called even for a branch which was updated\n        resolveReqList = this.constructor.getResolvedList(root).concat(root).filter(node => node.requireResolve);\n        resolveReqList.forEach(node => node.resolve());\n        getUpstreamNodes(resolveReqList).forEach(node => node.resolve());\n        return this;\n    }\n\n    getNodeValue (prop) {\n        if (prop in this.qualifiedNodeMap) {\n            return this.qualifiedNodeMap[prop].seed;\n        }\n        return undefined;\n    }\n\n    createElectricNodeOf (props, fnSpec) {\n        const nodes = props.map(prop => this.qualifiedNodeMap[prop]),\n            eNode = new ElectricNode().addEdges(...nodes);\n\n        nodes.forEach(node => node.addElectricNode(eNode));\n        return eNode[`regListenerFor${fnSpec.type}`](fnSpec.fn);\n    }\n\n    update (...params) {\n        let changedSet,\n            upstreamNodes;\n        const\n            electricEdges = [],\n            nodes = params.map((entry) => {\n                entry[0].seed = entry[1];\n                return entry[0];\n            });\n        nodes.forEach(node => node.resolve());\n        electricEdges.push(...flat(...nodes.map(node => node.electricEdges)));\n        changedSet = new ForeignSet(nodes.map(node => node.qualifiedName));\n\n        if (!this._propagate) {\n            this.__execUniqueElectricEdges(electricEdges);\n            this._propagate = true;\n            return this;\n        }\n\n        upstreamNodes = getUpstreamNodes(nodes);\n        upstreamNodes.forEach(upstreamNode => upstreamNode.resolve());\n        changedSet.append(upstreamNodes.map(node => node.qualifiedName));\n        electricEdges.push(...flat(...upstreamNodes.map(node => node.electricEdges)));\n\n        this.__execUniqueElectricEdges(Array.from(new Set(electricEdges)), changedSet);\n        return this;\n    }\n\n    __execUniqueElectricEdges (electricEdges, changedSet) {\n        const\n            cfLstnrs = [], // current frame listeners\n            nfLstnrs = []; // next frame listeners\n        if (changedSet) {\n            const\n                differenceSet = ForeignSet.difference(this._wholeSet, changedSet),\n                entries = differenceSet.toArray();\n\n            entries.forEach(entry => this.qualifiedNodeMap[entry].repeatHead());\n        }\n\n        electricEdges.forEach((e) => {\n            cfLstnrs.push(...e.listeners.currentFrame);\n        });\n        electricEdges.forEach((e) => {\n            nfLstnrs.push(...e.listeners.nextFrame);\n        });\n\n        !this.propagationOverride.currentFrameListeners && cfLstnrs.forEach(fn => fn());\n        !this.propagationOverride.nextFrameListeners && this._schedule(nfLstnrs, { flushTarget: changedSet });\n        this.resetPropagationOverride();\n        return this;\n    }\n\n    resetNodeValue (...qnames) {\n        const nodes = qnames.map(qname => this.qualifiedNodeMap[qname]),\n            args = nodes.map(node => [node, node.seed]);\n        this.update(...args);\n        return this;\n    }\n\n    static getResolvedList (node) {\n        const resolved = [];\n        resolveDependencyOrder(node, resolved, {});\n        return resolved;\n    }\n\n    stopPropagation () {\n        this._propagate = false;\n        return this;\n    }\n\n    resetPropagationOverride () {\n        this.propagationOverride.currentFrameListeners = false;\n        this.propagationOverride.nextFrameListeners = false;\n        return this;\n    }\n\n    setPropagationOverride (key) {\n        this.propagationOverride[`${key}Listeners`] = true;\n        return this;\n    }\n\n    getNodeFromQualifiedName (qname) {\n        return this.qualifiedNodeMap[qname];\n    }\n}\n","import Model from './model';\n\nexport default Model;\n","import Graph from './graph';\nimport { CustomResolver, fetchAggregator } from './utils';\n\n/**\n * The container class for Hyperdis. Hyperdis is an enabler for observable object with few interesting features like,\n * calculated property, next frame and same frame listeners, multiple listeners etc with a dependency resolving system.\n * It internally uses a graph to hold the hierarchial relationship of a object. Model is merely a container which\n * ties all the components together.\n *\n * @todo Circular dependency detection is not present\n *\n * @example check src/index.spec.js\n * @class\n */\nclass Model {\n    constructor () {\n        this._graph = new Graph();\n        this._lockFlag = false;\n        this._reqQ = [];\n    }\n\n    /**\n     * Static method to create and init the model with an observable seed\n     *\n     * @param {Object} obj The target object which is required to be made observable\n     * @return {Model} instance of the observable object model\n     */\n    static create (obj) {\n        return new Model()._addPropInModel(null, obj);\n    }\n\n    /**\n     * Appends more observable property on the already observable instance. This mutates the original model.\n     *\n     * This function works in two mode. One being\n     * @param {String} mountPoint the property on which the new set of properties will be mounted. If its a nested\n     *                          property then the mountPoint has to be written such a way so it feels like you are\n     *                          accessing the object. If the mount point is not found then he obeservables are added in\n     *                          the root.\n     * @param {Object} The target object which is required to be made observable\n     *\n     * Another being\n     * @param {Object} The target object which is required to be made observable\n     *\n     * @return {Model} instance of the observable object model\n     */\n    append (...params) {\n        let mountPoint,\n            obj;\n\n        if (params.length === 1) {\n            mountPoint = null;\n            obj = params[0];\n        } else {\n            mountPoint = params[0];\n            obj = params[1];\n        }\n\n        this._addPropInModel(mountPoint, obj);\n        return this;\n    }\n\n    /**\n     * Creates a calculated variable from existing variable. This variable can't be updated from outside.\n     * @param {string} mountpoint property path on which the new variable will be placed\n     * @param {string} name name of the variable. If the variable could have hierarchy like `limits.start`\n     * @param {Function} fn funtion where the dependent variables are injected based on the dependency requirement\n     */\n    calculatedProp (...params) {\n        let calculationConfig,\n            customResolver,\n            varName,\n            mount,\n            fetchFn;\n\n        if (params.length > 2) {\n            mount = params[0];\n            varName = params[1];\n            fetchFn = params[2];\n        } else {\n            mount = null;\n            varName = params[0];\n            fetchFn = params[1];\n        }\n\n        calculationConfig = fetchFn(fetchAggregator);\n        customResolver = new CustomResolver(calculationConfig.fn);\n        customResolver.addDependencies(...calculationConfig.dependencies);\n\n        this._addPropInModel(mount, { [varName]: customResolver });\n        return this;\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    _addPropInModel (mountPoint, obj) {\n        this._graph.createNodesFrom(obj, mountPoint);\n        return this;\n    }\n\n    /**\n     * Register a listener in the current frame when a property or group of properties is changed.\n     *\n     * @example\n     * This function takes a single or group of property and handler which is called when any of the properties are\n     * changed.\n     * When a single property is changed the handler is called with two parameter, what was the old value of the state\n     * property and what is the new value.\n     * myState.on('range.start', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 9);\n     * // Output\n     * Value before prop change 1\n     * Value after prop change 9\n     *\n     * If a handler is registered on change of a property which has another state property as value, then the handler\n     * gets called whenever any state property connected to it gets changed\n     *\n     * myState.on('range', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 10);\n     * myState.prop('range.type.absolute', false);\n     *\n     * // Output\n     * Value before prop change\n     * range {\n     *      start: 9,\n     *      end: 5,\n     *      type: {\n     *          absolute: true\n     *      }\n     * }\n     * Value after prop change\n     * range: {\n     *      start: 10,\n     *      end: 5,\n     *      type: {\n     *          absolute: false\n     *      }\n     * }\n     * If a handler is registered with more than one property change then, the handler is called when any of the\n     * properties gets changed. In this cast the handler is called with more than one parameter: each for one state\n     * property which is registered for listening. Each parameter is of type array containing [oldValue, newValue]\n     *\n     * myState.on('range.start', 'range.end', (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * myState.prop('range.start', 12);\n     *\n     * // Output\n     * Start [10, 12]\n     * End [5, 5]\n     *\n     * myState.prop('range.end', 7);\n     *\n     * // Output\n     * Start [12, 12]\n     * End [5, 7]\n     *\n     * The on returns a function which is when called the listener registered gets unregistered\n     *\n     * let unsub = myState.on(['range.start', 'range.end'], (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * // Unsubscribe\n     * unsub()\n     *\n     * On takes an optional boolean value as the last parameter, which if passed as a true value the handler gets called\n     * during registration itself.\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    on (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed in the current stack frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'CurrFrame',\n                fn\n            });\n\n        if (instantCall) {\n            // Bar current next frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('nextFrame').resetNodeValue(...props);\n        }\n        return unsub;\n    }\n\n    /**\n     * Register a listener for the next frame when a property or group of properties is changed.\n     *\n     * @example\n     * See the examples for the on listener\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties. Here the oldvalue is last value of the last frame\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    next (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed at the tick of next animation frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'NextFrame',\n                fn\n            });\n\n        // @todo check support for this from the graph side\n        if (instantCall) {\n            // Bar current frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('currentFrame').resetNodeValue(...props);\n        }\n\n        return unsub;\n    }\n\n    /**\n     * Lock queues the request of property change and releases the change when unlock is called. This is helpful when\n     * multiple property is getting called and the model listeners are to be fired once at the end of update.\n     *\n     * @return {Model} instance of the model\n     */\n    lock () {\n        this._lockFlag = true;\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * Unlock unleashes the change done after the lock was called.\n\n     * @return {Model} instance of the model\n     */\n    unlock () {\n        this._lockFlag = false;\n        this.setProp(...this._reqQ);\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * This acts as getter and setter. If the function is called by passing only one argument, it retrieve the value\n     * associated with the property. If the same function is called using two parameters, first one being the property\n     * and second one being the value, then the value is set for the property and the handlers are called (if any)\n     * which got registered using the on function\n     *\n     * Getter\n     * @param {string} prop property path whose value to be retrieved\n     * @return {Object} value of the property at the time of call\n     *\n     * Setter\n     * @param {string} property property path whose value to be ser\n     * @return {Model} instance of the model\n     */\n    prop (...params) {\n        let prop,\n            val,\n            len;\n\n        switch (len = params.length) {\n        case 1:\n            prop = params[0];\n            break;\n\n        case 2:\n            prop = params[0];\n            val = params[1];\n            break;\n\n        default:\n            return this;\n        }\n\n        if (len === 2) {\n            this._lockFlag ? this._reqQ.push([prop, val]) : this.setProp([prop, val]);\n            return this;\n        }\n\n        return this._graph.getNodeValue(prop);\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    setProp (...props) {\n        // Filter out the calculated variables, so that it cant be changed from outside\n        // @todo if a node is not leafValue, and change is called, ignore it too\n        // props = props.filter(prop => !(VirtualObj.walkTill(prop[0].split('.'), this._vObj).leafValue()\n        //     instanceof CalculatedVar));\n\n        if (props.length === 0) {\n            return this;\n        }\n\n        this._graph.update(...props.map(prop => [this._graph.getNodeFromQualifiedName(prop[0]), prop[1]]));\n        return this;\n    }\n\n    /**\n     * Retrieves the graph representation of the object\n     * @return {Graph} instance of the graph associated to the model\n     */\n    graph () {\n        return this._graph;\n    }\n\n    /**\n     * Get serialized data from the model\n     *\n     * @return {Object} Serialized data\n     */\n    serialize () {\n        return this._graph.root.seed;\n    }\n}\n\nexport default Model;\n","/* global window */\n\nimport ForeignSet from './set';\n\nconst\n    isSimpleObject = (obj) => {\n        let token;\n        if (typeof obj === 'object') {\n            if (obj === null) { return false; }\n            token = Object.prototype.toString.call(obj);\n            if (token === '[object Object]') {\n                return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n            }\n        }\n        return false;\n    },\n    minMsThreshold = 16,\n    /* istanbul ignore next */win = typeof window === 'undefined' ? (this || {}) : window,\n    /* istanbul ignore next */ reqAnimFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame ||\n        win.mozRequestAnimationFrame || win.oRequestAnimationFrame ||\n        win.msRequestAnimationFrame ||\n        function (callback) {\n            setTimeout(callback, minMsThreshold);\n        },\n\n    getTimeBasedId = () => {\n        if (getTimeBasedId.__lastTime === new Date().getTime()) {\n            return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n        }\n\n        getTimeBasedId.__id = 0;\n        getTimeBasedId.__lastTime = new Date().getTime();\n        return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n    },\n    pullableRecent = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const\n                    hist = node.history,\n                    l = hist.length - 1;\n                return [hist[l - 1 < 0 ? 0 : l - 1], hist[l]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    pullableEnd = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const hist = node.history;\n                return [hist[0], hist[hist.length - 1]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    unique = fns => fns\n                    .reduce((store, fn) => {\n                // @warn function with side effect, it mutates the store passed during initialization\n                        if (fn.__id in store.map) {\n                            return store;\n                        }\n\n                        store.map[fn.__id] = 1;\n                        store.unique.push(fn);\n\n                        return store;\n                    }, { map: {}, unique: [] })\n                    .unique,\n    compose = fns => () => {\n        fns.forEach(fn => fn());\n    },\n    flat = (...params) => {\n        const res = [];\n        params.forEach(param => res.push(...param));\n        return res;\n    },\n    identityMap = arrays => arrays,\n    splitPathProp = (path) => {\n        const pathArr = path.split('.'),\n            len = pathArr.length;\n        return [pathArr.slice(0, len - 1), pathArr[len - 1]];\n    },\n    scheduler = (onFinishCallback) => {\n        let queue = [],\n            animationFrame = null;\n\n        onFinishCallback = onFinishCallback &&\n            typeof onFinishCallback === 'function' && onFinishCallback || (() => { });\n\n        return (listeners, payload) => {\n            [].push.apply(queue, listeners);\n            if (animationFrame === null) {\n                animationFrame = reqAnimFrame(() => {\n                    const tempQ = queue.slice(0);\n                    queue.length = 0;\n                    animationFrame = null;\n\n                    unique(tempQ).forEach(fn => fn());\n                    onFinishCallback(payload);\n                });\n            }\n        };\n    },\n    fetch = namedNode => (...params) => params.map((param) => {\n        const node = namedNode[param];\n        return {\n            name: node.name,\n            qualifiedName: node.qualifiedName,\n            value: node.seed\n        };\n    }),\n    fetchAggregator = (...params) => ({\n        dependencies: params.slice(0, params.length - 1),\n        fn: params[params.length - 1]\n    }),\n    getUpstreamNodes = (list) => {\n        let res = [];\n        const map = {};\n        list.forEach(node => map[node.qualifiedName] = -1);\n        function rec (arr) {\n            arr.forEach((node) => {\n                let qname,\n                    placedIndex,\n                    preArr,\n                    postArr;\n                if (!((qname = node.qualifiedName) in map)) {\n                    map[qname] = res.push(node) - 1;\n                } else {\n                    placedIndex = map[qname];\n                    if (placedIndex !== -1 && placedIndex !== res.length - 1) {\n                        // If not the last element, readjust the array so that the later dependency position is saved\n                        preArr = res.slice(0, placedIndex);\n                        postArr = res.slice(placedIndex + 1);\n                        res = preArr.concat(postArr);\n\n                        // reset the index in map\n                        postArr.forEach((elem, i) => map[elem.qualifiedName] = i + preArr.length);\n                        map[qname] = res.push(node) - 1;\n                    }\n                }\n                rec(node.outgoingEdges);\n            });\n        }\n        rec(list);\n        return res;\n    },\n    resolver = {\n        accumulate: (...params) => {\n            const resp = {};\n            params.forEach((nodeDetails) => {\n                Object.assign(resp, { [nodeDetails.name]: nodeDetails.value });\n            });\n            return resp;\n        },\n        identity: nodeDetails => nodeDetails.value\n    };\n\nfunction resolveDependencyOrder (node, resolved, resolveMap) {\n    let qname;\n    node.edges.forEach((neighbour) => {\n        resolveDependencyOrder(neighbour, resolved, resolveMap);\n    });\n\n    if (node.isRoot() || (qname = node.qualifiedName) in resolveMap) {\n        return;\n    }\n    resolved.push(node);\n    resolveMap[qname] = 1;\n}\n\nclass CustomResolver {\n    constructor (resolver) {\n        this.fn = resolver;\n        this.dep = [];\n    }\n\n    addDependencies(...dep) {\n        this.dep.push(...dep);\n        return this;\n    }\n\n    getDependencies () {\n        return this.dep;\n    }\n\n    get () {\n        return this.fn;\n    }\n}\n\nexport {\n    isSimpleObject,\n    scheduler,\n    compose,\n    flat,\n    identityMap,\n    pullableEnd,\n    pullableRecent,\n    unique,\n    splitPathProp,\n    resolver,\n    ForeignSet,\n    resolveDependencyOrder,\n    fetch,\n    fetchAggregator,\n    CustomResolver,\n    getUpstreamNodes\n};\n","const makeEntry = (arr, sCon) => {\n    arr.forEach((elem) => {\n        if (elem === undefined || elem === null) {\n            return;\n        }\n        sCon[elem] = 1;\n    });\n};\n\nexport default class ForeignSet {\n    constructor (arr) {\n        this._set = {};\n        makeEntry(arr, this._set);\n    }\n\n    append (arr) {\n        makeEntry(arr, this._set);\n        return this;\n    }\n\n    toArray () {\n        return Object.keys(this._set);\n    }\n\n    static difference (set1, set2) {\n        let key;\n        const filteredKeys = [],\n            s1 = set1._set,\n            s2 = set2._set;\n        for (key in s1) {\n            if (!({}).hasOwnProperty.call(s1, key)) {\n                continue;\n            }\n            if (key in s2) {\n                continue;\n            }\n            filteredKeys.push(key);\n        }\n        return new ForeignSet(filteredKeys);\n    }\n}\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar _containerManager = require('./container-manager');\n\nvar _containerManager2 = _interopRequireDefault(_containerManager);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    BLANK = '',\n    htmlSplCharSpace = { ' ': '&nbsp;' },\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\n/*\n * Create new instance of SmartLabelManager.\n *\n * SmartLabelManager controls the lifetime of the execution space where the text's metrics will be calculated.\n * This takes a string for a given style and returns the height, width.\n * If a bound box is defined it wraps the text and returns the wrapped height and width.\n * It allows to append ellipsis at the end if the text is truncated.\n *\n * @param {String | Number} id - Id of the instance. If the same id is passed, it disposes the old instance and\n *                              save the new one;\n * @param {String | HTMLElement} container - The id or the instance of the container where the intermediate dom\n *                              elements are to be attached. If not passed, it appends in div\n *\n * @param {Boolean} useEllipses - This decides if a ellipses to be appended if the text is truncated.\n * @param {Object} options - Control options\n *                          {\n *                              maxCacheLimit: No of letter to be cached. Default: 500.\n *                          }\n * @constructor\n */\nfunction SmartLabelManager(id, container, useEllipses, options) {\n    var wrapper,\n        prop,\n        max,\n        prevInstance,\n        isBrowserLess = false,\n        store = SmartLabelManager.store;\n\n    if (typeof id === 'undefined' || typeof id === 'object') {\n        return;\n    }\n\n    if (prevInstance = store[id]) {\n        prevInstance.dispose();\n    }\n\n    store[id] = this;\n    options = options || {};\n    options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n    if (typeof container === 'string') {\n        container = doc.getElementById(container);\n    }\n\n    wrapper = slLib.createContainer(container);\n    wrapper.innerHTML = slLib.testStrAvg;\n\n    if (documentSupport.isHeadLess || !documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth) {\n        isBrowserLess = true;\n    }\n\n    wrapper.innerHTML = '';\n    for (prop in slLib.parentContainerStyle) {\n        wrapper.style[prop] = slLib.parentContainerStyle[prop];\n    }\n\n    this.id = id;\n    this.parentContainer = wrapper;\n\n    this._containerManager = new _containerManager2['default'](wrapper, isBrowserLess, 10);\n    this._showNoEllipses = !useEllipses;\n    this._init = true;\n    this.style = {};\n    this.options = options;\n\n    this.setStyle();\n}\n\n/*\n * getSmartText returns the text separated by <br/> whenever a break is necessary. This is to recgonize one\n * generalized format independent of the implementation (canvas based solution, svg based solution). This method\n * converts the output of getSmartText().text to array of lines if the text is wrapped. It sets a named property\n * `lines` on the object passed as parameter.\n *\n * @param {Object} smartlabel - the object returned by getSmartText based on which line arr which to be formed.\n *\n * @return {Object} - The same object which was passed in the arguments. Also a named property `lines` is set.\n */\nSmartLabelManager.textToLines = function (smartlabel) {\n    smartlabel = smartlabel || {};\n\n    if (!smartlabel.text) {\n        smartlabel.text = '';\n    } else if (typeof smartlabel.text !== 'string') {\n        smartlabel.text = smartlabel.text.toString();\n    }\n\n    smartlabel.lines = smartlabel.text.split(/\\n|<br\\s*?\\/?>/ig);\n    return smartlabel;\n};\n\n// Saves all the instance created so far\nSmartLabelManager.store = {};\n\n// Calculates space taken by a character with an approximation value which is calculated by repeating the\n// character by string length times.\nSmartLabelManager.prototype._calCharDimWithCache = function (text, calculateDifference, length) {\n    if (!this._init) {\n        return false;\n    }\n\n    var size,\n        csArr,\n        tw,\n        twi,\n        cachedStyle,\n        asymmetricDifference,\n        maxAdvancedCacheLimit = this.options.maxCacheLimit,\n        container = this._container,\n        style = this.style || {},\n        cache = this._advancedCache || (this._advancedCache = {}),\n        advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []),\n        cacheName = text + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK),\n        cacheInitName = text + 'init' + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK);\n\n    htmlSplCharSpace[text] && (text = htmlSplCharSpace[text]);\n\n    if (!calculateDifference) {\n        asymmetricDifference = 0;\n    } else {\n        if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n            container.innerHTML = text.repeat ? text.repeat(length) : Array(length + 1).join(text); // jshint ignore:line\n            tw = container.offsetWidth;\n\n            container.innerHTML = text;\n            twi = container.offsetWidth;\n\n            asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n            advancedCacheKey.push(cacheInitName);\n            if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n                delete cache[advancedCacheKey.shift()];\n            }\n        }\n    }\n\n    if (cachedStyle = cache[cacheName]) {\n        csArr = cachedStyle.split(',');\n        return {\n            width: parseFloat(csArr[0], 10),\n            height: parseFloat(csArr[1], 10)\n        };\n    }\n\n    container.innerHTML = text;\n\n    size = {\n        height: container.offsetHeight,\n        width: container.offsetWidth + asymmetricDifference\n    };\n\n    cache[cacheName] = size.width + ',' + size.height;\n    advancedCacheKey.push(cacheName);\n    if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n    }\n\n    return size;\n};\n\n// Provide function to calculate the height and width based on the environment and available support from dom.\nSmartLabelManager.prototype._getWidthFn = function () {\n    var contObj = this._containerObj,\n        container = this._container,\n        svgText = contObj.svgText;\n\n    if (svgText) {\n        return function (str) {\n            var bbox, width;\n\n            svgText.textContent = str;\n            bbox = svgText.getBBox();\n            width = bbox.width - SVG_BBOX_CORRECTION;\n            if (width < 1) {\n                width = bbox.width;\n            }\n\n            return width;\n        };\n    } else {\n        return function (str) {\n            container.innerHTML = str;\n            return container.offsetWidth;\n        };\n    }\n};\n\n/*\n * Sets the style based on which the text's metrics to be calculated.\n *\n * @param {Object} style - The style object which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                      }\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.setStyle = function (style) {\n    if (!this._init) {\n        return this;\n    }\n\n    var sCont;\n\n    if (style === this.style && !this._styleNotSet) {\n        return;\n    }\n\n    if (!style) {\n        style = this.style;\n    }\n\n    slLib.setLineHeight(style);\n    this.style = style;\n\n    this._containerObj = sCont = this._containerManager.get(style);\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n\n    return this;\n};\n\n/*\n * Decides whether ellipses to be shown if the node is truncated\n *\n * @param {Boolean} useEllipses - decides if a ellipses to be appended if the text is truncated. Default: false\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n    if (!this._init) {\n        return this;\n    }\n    this._showNoEllipses = !useEllipses;\n    return this;\n};\n\n/*\n * Get wrapped or truncated text if a bound box is defined around it. The result text would be separated by <br/>\n * if wrapped\n *\n * @param {String} text - the subject text\n * @param {Number} maxWidth - width in px of the the bound box\n * @param {Number} maxHeight - height in px of the the bound box\n * @param {Boolean} noWrap - whether the text to be wrapped. Default false.\n *\n * @return {Object} - The metrics of the text bounded by the box\n *                  {\n *                      height : height of the wrapped text\n *                      width : width of the wrapped text\n *                      isTruncated : whether the text is truncated\n *                      maxHeight : Maximum height given\n *                      maxWidth : Maximum width given\n *                      oriText : Original text sent\n *                      oriTextHeight : Original text height\n *                      oriTextWidth : Original text width\n *                      text : SMART TEXT\n *                  }\n */\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var len,\n        trimStr,\n        tempArr,\n        tmpText,\n        maxWidthWithEll,\n        toolText,\n        oriWidth,\n        oriHeight,\n        newCharIndex,\n        nearestChar,\n        tempChar,\n        getWidth,\n        initialLeft,\n        initialTop,\n        getOriSizeImproveObj,\n        spanArr,\n        x,\n        y,\n        minWidth,\n        elem,\n        chr,\n        elemRightMostPoint,\n        elemLowestPoint,\n        lastBR,\n        removeFromIndex,\n        removeFromIndexForEllipses,\n        hasHTMLTag = false,\n        maxStrWidth = 0,\n        lastDash = -1,\n        lastSpace = -1,\n        lastIndexBroken = -1,\n        strWidth = 0,\n        strHeight = 0,\n        oriTextArr = [],\n        i = 0,\n        ellipsesStr = this._showNoEllipses ? '' : '...',\n        lineHeight = this._lineHeight,\n        context = this._context,\n        container = this._container,\n        sCont = this._containerObj,\n        ellipsesWidth = sCont.ellipsesWidth,\n        dotWidth = sCont.dotWidth,\n        characterArr = [],\n        dashIndex = -1,\n        spaceIndex = -1,\n        lastLineBreak = -1,\n        fastTrim = function fastTrim(str) {\n        str = str.replace(/^\\s\\s*/, '');\n        var ws = /\\s/,\n            i = str.length;\n        while (ws.test(str.charAt(i -= 1))) {/* jshint noempty:false */}\n        return str.slice(0, i + 1);\n    },\n        smartLabel = {\n        text: text,\n        maxWidth: maxWidth,\n        maxHeight: maxHeight,\n        width: null,\n        height: null,\n        oriTextWidth: null,\n        oriTextHeight: null,\n        oriText: text,\n        isTruncated: false\n    };\n\n    getWidth = this._getWidthFn();\n\n    // In some browsers, offsetheight of a single-line text is getting little (1 px) heigher value of the\n    // lineheight. As a result, smartLabel is unable to return single-line text.\n    // To fix this, increase the maxHeight a little amount. Hence maxHeight =  lineHeight * 1.2\n    if (maxHeight === lineHeight) {\n        maxHeight *= 1.2;\n    }\n\n    if (container) {\n        if (!documentSupport.isBrowserLess) {\n            hasHTMLTag = slLib.xmlTagRegEx.test(text);\n            if (!hasHTMLTag) {\n                // Due to support of <,> for xml we convert &lt;, &gt; to <,> respectively so to get the correct\n                // width it is required to convert the same before calculation for the new improve version of the\n                // get text width.\n                tmpText = text.replace(slLib.ltgtRegex, function (match) {\n                    return match === '&lt;' ? '<' : '>';\n                });\n                getOriSizeImproveObj = this.getOriSize(tmpText, true);\n\n                smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n                smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n            } else {\n                container.innerHTML = text;\n                smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n                smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n            }\n\n            if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n                smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n                smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n                return smartLabel;\n            }\n\n            if (lineHeight > maxHeight) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = 0;\n                smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n        }\n\n        // Calculate width with ellipses\n        text = fastTrim(text).replace(/(\\s+)/g, ' ');\n        maxWidthWithEll = this._showNoEllipses ? maxWidth : maxWidth - ellipsesWidth;\n\n        if (!hasHTMLTag) {\n            oriTextArr = text.split('');\n            len = oriTextArr.length;\n            trimStr = '', tempArr = [];\n            tempChar = oriTextArr[0];\n\n            if (this._cache[tempChar]) {\n                minWidth = this._cache[tempChar].width;\n            } else {\n                minWidth = getWidth(tempChar);\n                this._cache[tempChar] = { width: minWidth };\n            }\n\n            if (maxWidthWithEll > minWidth) {\n                tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split('');\n                i = tempArr.length;\n            } else if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            } else if (ellipsesStr) {\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            strWidth = getWidth(tempArr.join(''));\n            strHeight = this._lineHeight;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = smartLabel.oriText;\n                            smartLabel.width = getWidth(smartLabel.text);\n                            smartLabel.height = this._lineHeight;\n                            return smartLabel;\n                        }\n                    }\n                }\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = strWidth;\n                smartLabel.height = this._lineHeight;\n                return smartLabel;\n            } else {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (tempChar === ' ' && !context) {\n                        tempChar = '&nbsp;';\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            /** @todo use regular expressions for better performance. */\n                            lastSpace = text.substr(0, tempArr.length).lastIndexOf(' ');\n                            lastDash = text.substr(0, tempArr.length).lastIndexOf('-');\n                            if (lastSpace > lastIndexBroken) {\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                tempArr.splice(lastSpace, 1, '<br/>');\n                                lastIndexBroken = lastSpace;\n                                newCharIndex = lastSpace + 1;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === tempArr.length - 1) {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '<br/>-');\n                                } else {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '-<br/>');\n                                }\n                                lastIndexBroken = lastDash;\n                                newCharIndex = lastDash + 1;\n                            } else {\n                                tempArr.splice(tempArr.length - 1, 1, '<br/>' + oriTextArr[i]);\n                                lastLineBreak = tempArr.length - 2;\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastLineBreak + 1).join(''));\n                                lastIndexBroken = lastLineBreak;\n                                newCharIndex = i;\n                            }\n                            strHeight += this._lineHeight;\n                            if (strHeight > maxHeight) {\n                                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                                smartLabel.tooltext = smartLabel.oriText;\n                                // The max width among all the lines will be the width of the string.\n                                smartLabel.width = maxWidth;\n                                smartLabel.height = strHeight - this._lineHeight;\n                                return smartLabel;\n                            } else {\n                                maxStrWidth = max(maxStrWidth, strWidth);\n                                trimStr = null;\n                                nearestChar = slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                                strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n                                if (tempArr.length < newCharIndex + nearestChar) {\n                                    tempArr = tempArr.concat(text.substr(tempArr.length, newCharIndex + nearestChar - tempArr.length).split(''));\n                                    i = tempArr.length - 1;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                maxStrWidth = max(maxStrWidth, strWidth);\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = maxStrWidth;\n                smartLabel.height = strHeight;\n                return smartLabel;\n            }\n        } else {\n            toolText = text.replace(slLib.spanAdditionRegx, '$2');\n            text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n            text = text.replace(/(<br\\s*\\/*\\>)/g, '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>');\n\n            container.innerHTML = text;\n\n            spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n            for (x = 0, y = spanArr.length; x < y; x += 1) {\n                elem = spanArr[x];\n                //chech whether this span is temporary inserted span from it's class\n                if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n                    chr = elem.innerHTML;\n                    if (chr !== '') {\n                        if (chr === ' ') {\n                            spaceIndex = characterArr.length;\n                        } else if (chr === '-') {\n                            dashIndex = characterArr.length;\n                        }\n\n                        characterArr.push({\n                            spaceIdx: spaceIndex,\n                            dashIdx: dashIndex,\n                            elem: elem\n                        });\n                        oriTextArr.push(chr);\n                    }\n                }\n            }\n\n            i = 0;\n            len = characterArr.length;\n            minWidth = characterArr[0].elem.offsetWidth;\n\n            if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n\n                return smartLabel;\n            } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            initialLeft = characterArr[0].elem.offsetLeft;\n            initialTop = characterArr[0].elem.offsetTop;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n                        if (container.offsetWidth > maxWidth) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            } else {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    lastBR = null;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n\n                        if (elemRightMostPoint > maxWidth) {\n                            lastSpace = characterArr[i].spaceIdx;\n                            lastDash = characterArr[i].dashIdx;\n                            if (lastSpace > lastIndexBroken) {\n                                characterArr[lastSpace].elem.innerHTML = '<br/>';\n                                lastIndexBroken = lastSpace;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === i) {\n                                    // in case the overflowing character itself is the '-'\n                                    characterArr[lastDash].elem.innerHTML = '<br/>-';\n                                } else {\n                                    characterArr[lastDash].elem.innerHTML = '-<br/>';\n                                }\n                                lastIndexBroken = lastDash;\n                            } else {\n                                elem.parentNode.insertBefore(lastBR = doc.createElement('br'), elem);\n                            }\n\n                            //check whether this break made current element outside the area height\n                            if (elem.offsetHeight + elem.offsetTop > maxHeight) {\n                                //remove the lastly inserted line break\n                                if (lastBR) {\n                                    lastBR.parentNode.removeChild(lastBR);\n                                } else if (lastIndexBroken === lastDash) {\n                                    characterArr[lastDash].elem.innerHTML = '-';\n                                } else {\n                                    characterArr[lastSpace].elem.innerHTML = ' ';\n                                }\n                                removeFromIndex = i;\n                                //break the looping condition\n                                i = len;\n                            } else {\n                                removeFromIndexForEllipses = null;\n                            }\n                        }\n                    } else {\n                        //check whether this break made current element outside the area height\n                        if (elemLowestPoint > maxHeight) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            }\n\n            if (removeFromIndex < len) {\n                //set the trancated property of the smartlabel\n                smartLabel.isTruncated = true;\n\n                /** @todo is this really needed? */\n                removeFromIndexForEllipses = removeFromIndexForEllipses ? removeFromIndexForEllipses : removeFromIndex;\n\n                for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n                    elem = characterArr[i].elem;\n                    //chech whether this span is temporary inserted span from it's class\n                    elem.parentNode.removeChild(elem);\n                }\n\n                for (; i >= 0; i -= 1) {\n                    elem = characterArr[i].elem;\n                    if (slLib.classNameBrReg.test(elem.className)) {\n                        //chech whether this span is temporary inserted span from it's class\n                        elem.parentNode.removeChild(elem);\n                    } else {\n                        i = 0;\n                    }\n                }\n            }\n\n            //get the smart text\n            smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&');\n            if (smartLabel.isTruncated) {\n                smartLabel.text += ellipsesStr;\n                smartLabel.tooltext = toolText;\n            }\n        }\n\n        smartLabel.height = container.offsetHeight;\n        smartLabel.width = container.offsetWidth;\n\n        return smartLabel;\n    } else {\n        smartLabel.error = new Error('Body Tag Missing!');\n        return smartLabel;\n    }\n};\n\n/*\n * Get the height and width of a text.\n *\n * @param {String} text - Text whose metrics to be measured\n * @param {Boolean} Optional detailedCalculationFlag - this flag if set it calculates per letter position\n *                          information and returns it. Ideally you dont need it unless you want to post process the\n *                          string. And its an EXPENSIVE OPERATION.\n *\n * @return {Object} - If detailedCalculationFlag is set to true the returned object would be\n *                  {\n *                      height: height of the text\n *                      width: width of the text\n *                      detailObj: detail calculation of letters in the format {lettername: width}\n *                  }\n *                  If detailedCalculationFlag is set to false the returned object wont have the detailObj prop.\n */\nSmartLabelManager.prototype.getOriSize = function (text, detailedCalculationFlag) {\n    if (!this._init) {\n        return false;\n    }\n\n    var textArr,\n        letter,\n        lSize,\n        i,\n        l,\n        cumulativeSize = 0,\n        height = 0,\n        indiSizeStore = {};\n\n    if (!detailedCalculationFlag) {\n        return this._calCharDimWithCache(text);\n    }\n\n    // Calculate the width of every letter with an approximation\n    textArr = text.split('');\n    for (i = 0, l = textArr.length; i < l; i++) {\n        letter = textArr[i];\n        lSize = this._calCharDimWithCache(letter, true, textArr.length);\n        height = max(height, lSize.height);\n        cumulativeSize += lSize.width;\n        indiSizeStore[letter] = lSize.width;\n    }\n\n    return {\n        width: round(cumulativeSize),\n        height: height,\n        detailObj: indiSizeStore\n    };\n};\n\n/*\n * Dispose the container and object allocated by the smartlabel\n */\nSmartLabelManager.prototype.dispose = function () {\n    if (!this._init) {\n        return this;\n    }\n\n    this._containerManager && this._containerManager.dispose && this._containerManager.dispose();\n\n    delete this._container;\n    delete this._context;\n    delete this._cache;\n    delete this._containerManager;\n    delete this._containerObj;\n    delete this.id;\n    delete this.style;\n    delete this.parentContainer;\n    delete this._showNoEllipses;\n\n    return this;\n};\n\nexports['default'] = SmartLabelManager;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nvar lib = {\n\tinit: function init(win) {\n\t\tvar doc = win.document,\n\t\t    nav = win.navigator,\n\t\t    userAgent = nav.userAgent,\n\t\t    DIV = 'DIV',\n\t\t    ceil = Math.ceil,\n\t\t    floor = Math.floor,\n\t\t    containerInstanceCount = 0,\n\t\t    clsNameSpace = 'fusioncharts-smartlabel-',\n\t\t    containerClass = clsNameSpace + 'container',\n\t\t    classNameWithTag = clsNameSpace + 'tag',\n\t\t    classNameWithTagBR = clsNameSpace + 'br';\n\n\t\tlib = {\n\t\t\twin: win,\n\n\t\t\tcontainerClass: containerClass,\n\n\t\t\tclassNameWithTag: classNameWithTag,\n\n\t\t\tclassNameWithTagBR: classNameWithTagBR,\n\n\t\t\tmaxDefaultCacheLimit: 500,\n\n\t\t\tclassNameReg: new RegExp('\\b' + classNameWithTag + '\\b'),\n\n\t\t\tclassNameBrReg: new RegExp('\\b' + classNameWithTagBR + '\\b'),\n\n\t\t\tspanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n\n\t\t\tspanAdditionReplacer: '$1<span class=\"' + classNameWithTag + '\">$2</span>',\n\n\t\t\tspanRemovalRegx: new RegExp('\\\\<span[^\\\\>]+?' + classNameWithTag + '[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>', 'ig'),\n\n\t\t\txmlTagRegEx: new RegExp('<[^>][^<]*[^>]+>', 'i'),\n\n\t\t\tltgtRegex: /&lt;|&gt;/g,\n\n\t\t\tbrReplaceRegex: /<br\\/>/ig,\n\n\t\t\ttestStrAvg: 'WgI',\n\n\t\t\t// This style is applied over the parent smartlabel container. The container is kept hidden from the viewport\n\t\t\tparentContainerStyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '-9999em',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\tpadding: '0px',\n\t\t\t\twidth: '1px',\n\t\t\t\theight: '1px',\n\t\t\t\toverflow: 'hidden'\n\t\t\t},\n\n\t\t\t// All the style which might affect the text metrics\n\t\t\tsupportedStyle: {\n\t\t\t\tfont: 'font',\n\t\t\t\tfontFamily: 'font-family',\n\t\t\t\t'font-family': 'font-family',\n\t\t\t\tfontWeight: 'font-weight',\n\t\t\t\t'font-weight': 'font-weight',\n\t\t\t\tfontSize: 'font-size',\n\t\t\t\t'font-size': 'font-size',\n\t\t\t\tlineHeight: 'line-height',\n\t\t\t\t'line-height': 'line-height',\n\t\t\t\tfontStyle: 'font-style',\n\t\t\t\t'font-style': 'font-style'\n\t\t\t},\n\n\t\t\t// Get the support list for html the document where the text calcution is to be done.\n\t\t\tgetDocumentSupport: function getDocumentSupport() {\n\t\t\t\tvar childRetriverFn, childRetriverString, noClassTesting;\n\n\t\t\t\tif (doc.getElementsByClassName) {\n\t\t\t\t\tchildRetriverFn = 'getElementsByClassName';\n\t\t\t\t\tchildRetriverString = classNameWithTag;\n\t\t\t\t\tnoClassTesting = true;\n\t\t\t\t} else {\n\t\t\t\t\tchildRetriverFn = 'getElementsByTagName';\n\t\t\t\t\tchildRetriverString = 'span';\n\t\t\t\t\tnoClassTesting = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisIE: /msie/i.test(userAgent) && !win.opera,\n\t\t\t\t\thasSVG: Boolean(win.SVGAngle || doc.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n\t\t\t\t\tisHeadLess: new RegExp(' HtmlUnit').test(userAgent),\n\t\t\t\t\tisWebKit: new RegExp(' AppleWebKit/').test(userAgent),\n\t\t\t\t\tchildRetriverFn: childRetriverFn,\n\t\t\t\t\tchildRetriverString: childRetriverString,\n\t\t\t\t\tnoClassTesting: noClassTesting\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n    * Create a html div element and attach it with a parent. All the subsequent operations are performed\n    * by upding this dom tree only.\n    *\n    * @param {HTMLElement} - The html element where the newly created div is to be attached. If not passed,\n    *                      the new div is appended on the body.\n    */\n\t\t\tcreateContainer: function createContainer(containerParent) {\n\t\t\t\tvar body, container;\n\n\t\t\t\tif (containerParent && (containerParent.offsetWidth || containerParent.offsetHeight)) {\n\t\t\t\t\tif (containerParent.appendChild) {\n\t\t\t\t\t\tcontainerParent.appendChild(container = doc.createElement(DIV));\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbody = doc.getElementsByTagName('body')[0];\n\n\t\t\t\t\tif (body && body.appendChild) {\n\t\t\t\t\t\tcontainer = doc.createElement(DIV);\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\tcontainerInstanceCount += 1;\n\t\t\t\t\t\tbody.appendChild(container);\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Finds a approximate position where the text is to be broken\n\t\t\tgetNearestBreakIndex: function getNearestBreakIndex(text, maxWidth, sl) {\n\t\t\t\tif (!text || !text.length) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar difference,\n\t\t\t\t    getWidth = sl._getWidthFn(),\n\t\t\t\t    charLen = 0,\n\t\t\t\t    increment = 0,\n\t\t\t\t    oriWidth = getWidth(text),\n\t\t\t\t    avgWidth = oriWidth / text.length;\n\n\t\t\t\tdifference = maxWidth;\n\t\t\t\tcharLen = ceil(maxWidth / avgWidth);\n\n\t\t\t\tif (oriWidth < maxWidth) {\n\t\t\t\t\treturn text.length - 1;\n\t\t\t\t}\n\n\t\t\t\tif (charLen > text.length) {\n\t\t\t\t\tdifference = maxWidth - oriWidth;\n\t\t\t\t\tcharLen = text.length;\n\t\t\t\t}\n\n\t\t\t\twhile (difference > 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (difference < 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn charLen;\n\t\t\t},\n\n\t\t\t/*\n    * Determine lineheight of a text for a given style. It adds propery lineHeight to the style passed\n    *\n    * @param {Object} - The style based on which the text's metric needs to be calculated. The calculation happens\n    *                  based on fontSize property, if its not present a default font size is assumed.\n    *\n    * @return {Object} - The style that was passed with lineHeight as a named propery set on the object.\n    */\n\t\t\tsetLineHeight: function setLineHeight(styleObj) {\n\t\t\t\tvar fSize = styleObj.fontSize = styleObj.fontSize || '12px';\n\t\t\t\tstyleObj.lineHeight = styleObj.lineHeight || styleObj['line-height'] || parseInt(fSize, 10) * 1.2 + 'px';\n\t\t\t\treturn styleObj;\n\t\t\t}\n\t\t};\n\n\t\treturn lib;\n\t}\n};\n\nexports['default'] = lib;\nmodule.exports = exports['default'];","const Muze = require('./muze');\n\nmodule.exports = Muze.default ? Muze.default : Muze;\n","'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction ContainerManager(parentContainer, isBrowserLess, maxContainers) {\n    var svg;\n\n    maxContainers = maxContainers > 5 ? maxContainers : 5;\n    maxContainers = maxContainers < 20 ? maxContainers : 20;\n\n    this.maxContainers = maxContainers;\n    this.first = null;\n    this.last = null;\n    this.containers = {};\n    this.length = 0;\n    this.rootNode = parentContainer;\n\n    if (isBrowserLess) {\n        svg = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'height', '0');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'width', '0');\n        this.svgRoot = svg;\n        this.rootNode.appendChild(svg);\n    }\n}\n\nContainerManager.prototype.get = function (style) {\n    var diff,\n        key,\n        containerObj,\n        containers = this.containers,\n        len = this.length,\n        max = this.maxContainers,\n        keyStr = '';\n\n    for (key in slLib.supportedStyle) {\n        if (style[key] !== undefined) {\n            keyStr += slLib.supportedStyle[key] + ':' + style[key] + ';';\n        }\n    }\n\n    if (!keyStr) {\n        return false;\n    }\n\n    if (containerObj = containers[keyStr]) {\n        if (this.first !== containerObj) {\n            containerObj.prev && (containerObj.prev.next = containerObj.next);\n            containerObj.next && (containerObj.next.prev = containerObj.prev);\n            containerObj.next = this.first;\n            containerObj.next.prev = containerObj;\n            this.last === containerObj && (this.last = containerObj.prev);\n            containerObj.prev = null;\n            this.first = containerObj;\n        }\n    } else {\n        if (len >= max) {\n            diff = len - max + 1;\n            // +1 is to remove an extra entry to make space for the new container to be added.\n            while (diff--) {\n                this.removeContainer(this.last);\n            }\n        }\n        containerObj = this.addContainer(keyStr);\n    }\n\n    return containerObj;\n};\n\nContainerManager.prototype.addContainer = function (keyStr) {\n    var node, container;\n\n    this.containers[keyStr] = container = {\n        next: null,\n        prev: null,\n        node: null,\n        ellipsesWidth: 0,\n        lineHeight: 0,\n        dotWidth: 0,\n        avgCharWidth: 4,\n        keyStr: keyStr,\n        charCache: {}\n    };\n\n    // Since the container objects are arranged from most recent to least recent order, we need to add the new\n    // object at the beginning of the list.\n    container.next = this.first;\n    container.next && (container.next.prev = container);\n    this.first = container;\n    if (!this.last) {\n        this.last = container;\n    }\n    this.length += 1;\n\n    node = container.node = doc.createElement('div');\n    this.rootNode.appendChild(node);\n\n    if (documentSupport.isIE && !documentSupport.hasSVG) {\n        node.style.setAttribute('cssText', keyStr);\n    } else {\n        node.setAttribute('style', keyStr);\n    }\n\n    node.setAttribute('aria-hidden', 'true');\n    node.setAttribute('role', 'presentation');\n    node.style.display = 'inline-block';\n\n    node.innerHTML = slLib.testStrAvg; // A test string.\n    container.lineHeight = node.offsetHeight;\n    container.avgCharWidth = node.offsetWidth / 3;\n\n    if (documentSupport.isBrowserLess) {\n        node = container.svgText = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n        node.setAttribute('style', keyStr);\n        this.svgRoot.appendChild(node);\n\n        node.textContent = slLib.testStrAvg; // A test string.\n        container.lineHeight = node.getBBox().height;\n        container.avgCharWidth = (node.getBBox().width - SVG_BBOX_CORRECTION) / 3;\n\n        node.textContent = '...';\n        container.ellipsesWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n        node.textContent = '.';\n        container.dotWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n    } else {\n        node.innerHTML = '...';\n        container.ellipsesWidth = node.offsetWidth;\n        node.innerHTML = '.';\n        container.dotWidth = node.offsetWidth;\n        node.innerHTML = '';\n    }\n\n    return container;\n};\n\nContainerManager.prototype.removeContainer = function (cObj) {\n    var keyStr = cObj.keyStr;\n\n    if (!keyStr || !this.length || !cObj) {\n        return;\n    }\n    this.length -= 1;\n\n    cObj.prev && (cObj.prev.next = cObj.next);\n    cObj.next && (cObj.next.prev = cObj.prev);\n    this.first === cObj && (this.first = cObj.next);\n    this.last === cObj && (this.last = cObj.prev);\n\n    cObj.node.parentNode.removeChild(cObj.node);\n\n    delete this.containers[keyStr];\n};\n\nContainerManager.prototype.dispose = function () {\n    var key,\n        containers = this.containers;\n\n    this.maxContainers = null;\n    for (key in containers) {\n        this.removeContainer(containers[key]);\n    }\n\n    this.rootNode.parentNode.removeChild(this.rootNode);\n\n    this.rootNode = null;\n    this.first = null;\n    this.last = null;\n};\n\nmodule.exports = ContainerManager;","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  scale.invertExtent = function(r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1, a, b, t,\n        hiIndex;\n    values.push(values[n] + this.step());\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo));\n    hiIndex = getClosestIndexOf(values, hi);\n    b = lo===hi ? a : Math.max(a, hiIndex - 1);\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) t = a, a = n - b, b = n - t; // map + swap\n    return (a > b) ? undefined : domain().slice(a, b+1);\n  };\n\n  scale.invert = function (r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1,\n        a,\n        t;\n\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo, 'left'));\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    return domain()[reverse ? n - a : a];\n  }\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction getClosestIndexOf (arr, value, side) {\n  var low = 0,\n      arrLen = arr.length,\n      high = arrLen - 1,\n      highVal,\n      mid,\n      d1,\n      d2;\n\n  while (low < high) {\n      mid = Math.floor((low + high) / 2);\n      d1 = Math.abs(arr[mid] - value);\n      d2 = Math.abs(arr[mid + 1] - value);\n\n      if (d2 <= d1) {\n          low = mid + 1;\n      }\n      else {\n          high = mid;\n      }\n  }\n\n  if (!side) {\n      return high;\n  }\n\n  highVal = arr[high];\n  if (highVal === value) {\n      return high;\n  } else if (highVal > value) {\n      if (high === 0) { return high; }\n      return side === 'left'? high - 1 : high;\n  } else {\n      if (high === arr.length - 1) { return high; }\n      return side === 'left'? high : high + 1;\n  }\n}","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute} from \"./duration\";\n\nvar hour = interval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export const UNIT_GLOBAL_NAMESPACE = 'app.units';\nexport const UNIT_LOCAL_NAMESPACE = 'local.units';\nexport const LAYER_LOCAL_NAMESPACE = 'local.layers';\nexport const LAYER_GLOBAL_NAMESPACE = 'app.layers';\nexport const GROUP_GLOBAL_NAMESPACE = 'app.group';\nexport const GROUP_LOCAL_NAMESPACE = 'local.group';\nexport const CANVAS_LOCAL_NAMESPACE = 'local.canvas';\nexport const CANVAS_GLOBAL_NAMESPACE = 'app.canvas';\n\n","const ReservedFields = {\n    ROW_ID: '__id__'\n};\n\nexport default ReservedFields;\n","const CommonProps = {\n    ACTION_INF: 'actionInf',\n    ON_LAYER_DRAW: 'onLayerDraw',\n    MATRIX_CREATED: 'matrixCreated'\n};\n\nexport default CommonProps;\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickTransform = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"))\n        .style('transform', tickTransform);\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.tickTransform = function(_) {\n    return arguments.length ? (tickTransform = _, axis) : tickTransform;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","export var slice = Array.prototype.slice;\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","/**\n * This class represents a selection applied on a data array.\n *\n * @class Selection\n */\nclass Selection {\n    /**\n     * Creates an instance of Selection.\n     * @param {Array<DataObject>} data Array of DataObjects.\n     * @memberof Selection\n     */\n    constructor () {\n        this._data = [];\n        // // map of id to data\n        this._idMap = {};\n        this._dataMap = {};\n        this._mode = '';\n        // data.forEach((item, idx) => {\n        //     const index = item.id || idx;\n        //     this._idMap[index] = item;\n        // });\n        // // array to store data in enter phase\n        this._enterdata = [];\n        // // array to store data in exit phase\n        this._exitdata = [];\n    }\n    /**\n     *  Gets the object bound to a class\n     *\n     * @return {Object} current data set bound to the class\n     * @memberof Selection\n     */\n    getObjects () {\n        return Object.values(this._idMap);\n    }\n\n    /**\n     * This method is used to supply seed data to a selection.\n     *\n     * @param {Array} newData Seed data to create the enter selection.\n     * @param {Functon | undefined } idGetter This function is used to uniqely identify a data entry.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    data (newData, idGetter) {\n        if (idGetter) {\n            this._data = [];\n            this._idGetter = idGetter;\n            const tempMap = {};\n\n            newData.forEach((...params) => {\n                const index = idGetter(...params);\n                tempMap[index] = params[0];\n            });\n            // check if any data items have been removed\n            const purgedIds = [];\n\n            Object.keys(this._idMap).forEach((id) => {\n                if (!tempMap[id]) {\n                    purgedIds.push(id);\n                }\n            });\n\n            Object.keys(tempMap).forEach((id) => {\n                if (!this._idMap[id]) {\n                    this._enterdata.push(tempMap[id]);\n                } else {\n                    this._idMap[id] = tempMap[id];\n                    this._data.push(tempMap[id]);\n                }\n            });\n            // move the purged items to exit selection\n            purgedIds.forEach((id) => {\n                const purged = this._idMap[id];\n                this._exitdata.push(purged);\n                // this._data = this._data.slice(id, 1);\n                delete this._idMap[id];\n            });\n            // this._data = this._data.slice(temp, this._data.length);\n\n            return this;\n        }\n        // no id getter supplied so use indices\n        if (newData.length > this._data.length) {\n            const startIdx = this._data.length;\n            for (let i = startIdx; i < newData.length; i += 1) {\n                this._enterdata.push(newData[i]);\n            }\n        } else {\n            // push to exit selection\n            const temp = newData.length;\n            for (let i = temp; i < this._data.length; i += 1) {\n                const purged = this._data[i];\n                delete this._idMap[purged.id];\n                this._exitdata.push(purged);\n            }\n            this._data = this._data.slice(temp, this._data.length);\n        }\n        return this;\n    }\n\n    /**\n     * Applies the supplied callback to each data element\n     * and returns a new selection.\n     *\n     * @param {Function} callback Callback to execute on each item.\n     * @return {Selection} New selection with data created using callback.\n     * @memberof EnterSelection\n     */\n    append (callback) {\n        this[`_${this._mode}data`].forEach((...params) => {\n            const data = params[0];\n            const id = this._idGetter ? this._idGetter(...params) : (data.id || params[1]);\n            this._idMap[id] = callback(...params);\n            this._dataMap[id] = data;\n        });\n        this._mode = '';\n        return this;\n    }\n\n    /**\n     * This method returns an enter selection that\n     * allows or update operations.\n     *\n     * @return {EnterSelection} Instance of enter selection.\n     * @memberof Selection\n     */\n    enter () {\n        this._mode = 'enter';\n        return this;\n        // return new EnterSelection(this._enterdata, this._idMap, this._idGetter);\n    }\n\n    /**\n     * This method is used to set key value pairs\n     * on data objects.\n     *\n     * @param {string} key Name of property.\n     * @param {any} value Value of property.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    attr (key, value) {\n        this._data.forEach(item => item.attr(key, value));\n        return this;\n    }\n\n    /**\n     * This method merges the data of one selection with another.\n     *\n     * @param {Selection} selection Instance of selection.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    merge (selection) {\n        selection._data.forEach((...params) => {\n            const id = this._idGetter ? this._idGetter(...params) : (params[0].id || params[1]);\n            this._idMap[id] = params[0];\n            this._data.push(params[0]);\n        });\n        // reset enter selection\n        this._enterdata = [];\n        return this;\n    }\n\n    /**\n     * Returns a selection with exit data.\n     *\n     * @return {Selection} Instance of selection.\n     * @memberof Selection\n     */\n    exit () {\n        this._mode = 'exit';\n        // const exitdata = this._exitdata;\n        // const exitSelection = new Selection(exitdata);\n        // this._exitdata = [];\n        return this;\n    }\n\n    each (fn) {\n        Object.keys(this._idMap).forEach((e, i) => {\n            fn(this._idMap[e], this._dataMap[e], i);\n        });\n        return this;\n    }\n\n    map (fn) {\n        Object.keys(this._idMap).forEach((...params) => {\n            const key = params[0];\n            this._idMap[key] = fn(this._idMap[key], ...params, this._dataMap[key]);\n        });\n        return this;\n    }\n\n    /**\n     * Executes the cleanup operation associated with data objets.\n     *\n     * @memberof Selection\n     */\n    remove () {\n        // do cleanup on DDO's\n        const data = this[`_${this._mode}data`];\n\n        data.forEach(item => item.remove());\n        if (this._mode === '') {\n            this.each(e => e.remove());\n        }\n        this[`_${this._mode}data`] = [];\n        this._mode = '';\n    }\n}\n\nexport default Selection;\n","/* global window, requestAnimationFrame, cancelAnimationFrame */\nimport { FieldType, DimensionSubtype, DateTimeFormatter, default as DataModel } from 'datamodel';\nimport {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom\n} from 'd3-axis';\nimport {\n    symbolCircle,\n    symbolCross,\n    symbolDiamond,\n    symbolSquare,\n    symbolStar,\n    symbolWye,\n    symbolTriangle,\n    symbol,\n    stack as d3Stack,\n    stackOffsetDiverging,\n    stackOrderNone,\n    stackOrderAscending,\n    stackOrderDescending,\n    stackOffsetNone,\n    stackOffsetExpand,\n    stackOffsetWiggle,\n    pie,\n    arc,\n    line,\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    area\n} from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport {\n    interpolate,\n    interpolateRgb,\n    piecewise,\n    interpolateNumber,\n    interpolateHslLong\n} from 'd3-interpolate';\nimport {\n    easeCubic,\n    easeBounce,\n    easePoly,\n    easeBack,\n    easeCircle,\n    easeLinear,\n    easeElastic\n} from 'd3-ease';\nimport {\n   color,\n   rgb,\n   hsl\n} from 'd3-color';\nimport { voronoi } from 'd3-voronoi';\nimport Model from 'hyperdis';\nimport { dataSelect } from './DataSystem';\nimport * as STACK_CONFIG from './enums/stack-config';\nimport { DM_OPERATION_GROUP } from './enums';\n\nconst { InvalidAwareTypes } = DataModel;\nconst HTMLElement = window.HTMLElement;\n\nconst isSimpleObject = (obj) => {\n    let token;\n    if (typeof obj === 'object') {\n        if (obj === null) { return false; }\n        token = Object.prototype.toString.call(obj);\n        if (token === '[object Object]') {\n            return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n        }\n    }\n    return false;\n};\n\n/**\n * Returns unique id\n * @return {string} Unique id string\n */\nconst\n    getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Deep copies an object and returns a new object.\n * @param {Object} o Object to clone\n * @return {Object} New Object.\n */\nconst clone = (o) => {\n    const output = {};\n    let v;\n    for (const key in o) {\n        if ({}.hasOwnProperty.call(o, key)) {\n            v = o[key];\n            output[key] = isSimpleObject(v) ? clone(v) : v;\n        }\n    }\n    return output;\n};\n\n/**\n* Checks the existence of keys in an object\n* @param {Array} keys Set of keys which are to be checked\n* @param {Object} obj whose keys are checked from the set of keys provided\n* @return {Object} Error if the keys are absent, or the object itself\n*/\nconst checkExistence = (keys, obj) => {\n    const nonExistentKeys = [];\n    keys.forEach((key) => {\n        if (key in obj) {\n            return;\n        }\n        nonExistentKeys.push(key);\n    });\n    return nonExistentKeys;\n};\n\nconst sanitizeIP = {\n    typeObj: (keys, obj) => {\n        if (typeof obj !== 'object') {\n            return Error('Argument type object expected');\n        }\n\n        const nonExistentKeys = checkExistence(keys, obj);\n        if (nonExistentKeys.length) {\n            return Error(`Missing keys from parameter ${nonExistentKeys.join(', ')}`);\n        }\n        return obj;\n    },\n\n    /* istanbul ignore next */ htmlElem: (elem) => {\n        if (!(elem instanceof HTMLElement)) {\n            return Error('HTMLElement required');\n        }\n        return elem;\n    }\n};\n\n/**\n * Gets the maximum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Maximum value\n */\nconst getMax = (data, field) => Math.max(...data.map(d => d[field]));\n\n/**\n * Gets the minimum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Minimum value\n */\nconst getMin = (data, field) => Math.min(...data.map(d => d[field]));\n\n/**\n * Gets the domain from the data based on the field name and type of field\n * @param  {Array.<Object> | Array.<Array>} data       Data Array\n * @param  {Array.<string>} fields    Array of fields from where the domain will be calculated\n * @param {string} fieldType Type of field - nominal, quantitiative, temporal.\n * @return {Array} Usually contains a min and max value if field is quantitative or\n * an array of values if field type is nominal or ordinal\n */\nconst getDomainFromData = (data, fields, fieldType) => {\n    let domain;\n    const domArr = [];\n    data = data[0] instanceof Array ? data : [data];\n    switch (fieldType) {\n    case DimensionSubtype.CATEGORICAL:\n        domain = [].concat(...data.map(arr => arr.map(d => d[fields[0]]).filter(d => d !== undefined)));\n        break;\n    default:\n        for (let i = 0, len = data.length; i < len; i++) {\n            const arr = data[i];\n            const [field0, field1] = fields;\n            const arr0 = arr.filter(d => !isNaN(d[field0]));\n            const arr1 = arr.filter(d => !isNaN(d[field1]));\n            if (arr0.length || arr1.length) {\n                const firstMin = getMin(arr0, field0);\n                const secondMin = getMin(arr1, field1);\n                const firstMax = getMax(arr0, field0);\n                const secondMax = getMax(arr1, field1);\n                domArr.push([Math.min(firstMin, secondMin), Math.max(firstMax, secondMax)]);\n            }\n        }\n        domain = domArr.length ? [Math.min(...domArr.map(d => d[0])), Math.max(...domArr.map(d => d[1]))] : [];\n        break;\n    }\n    return domain;\n};\n\n/**\n * Union Domain values\n * @param {Array.<Array>} domains Array of domain values\n * @param {string} fieldType type of field - dimension,measure or datetime.\n * @return {Array} Unioned domain of all domain values.\n */\nconst unionDomain = (domains, fieldType) => {\n    let domain = [];\n    domains = domains.filter(dom => dom && dom.length);\n    if (domains.length) {\n        if (fieldType === DimensionSubtype.CATEGORICAL) {\n            domain = [].concat(...domains);\n        } else {\n            domain = [Math.min(...domains.map(d => d[0])), Math.max(...domains.map(d => d[1]))];\n        }\n    }\n\n    return domain;\n};\n\nconst symbolFns = {\n    circle: symbolCircle,\n    cross: symbolCross,\n    diamond: symbolDiamond,\n    square: symbolSquare,\n    star: symbolStar,\n    wye: symbolWye,\n    triangle: symbolTriangle\n};\n\nconst easeFns = {\n    cubic: easeCubic,\n    bounce: easeBounce,\n    linear: easeLinear,\n    elastic: easeElastic,\n    back: easeBack,\n    poly: easePoly,\n    circle: easeCircle\n};\n\n/**\n * Returns the maximum or minimum points of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @param {string} minOrMax minimum or maximum.\n * @return {Object} Minimum or maximum point.\n */\nconst getExtremePoint = (points, compareValue, minOrMax) => {\n    let extremePoint;\n    let point;\n    const len = points.length;\n    let minOrMaxVal = minOrMax === 'max' ? -Infinity : Infinity;\n    let val;\n\n    for (let i = 0; i < len; i++) {\n        point = points[i];\n        val = point[compareValue];\n        if (minOrMax === 'min' ? val < minOrMaxVal : val > minOrMaxVal) {\n            minOrMaxVal = val;\n            extremePoint = point;\n        }\n    }\n\n    return extremePoint;\n};\n\n/**\n * Returns the minimum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Minimum point.\n */\nconst getMinPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'min');\n\n/**\n * Returns the maximum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Maximum point.\n */\nconst getMaxPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'max');\n\n/**\n * Gets the index of the closest value of the given value from the array.\n * @param {Array} arr Array of values\n * @param {number} value Value from which the nearest value will be calculated.\n * @param {string} side side property.\n * @return {number} index of the closest value\n */\n/* istanbul ignore next */const getClosestIndexOf = (arr, value, side) => {\n    let low = 0;\n    const arrLen = arr.length;\n    let high = arrLen - 1;\n\n    let mid;\n    let d1;\n    let d2;\n\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        d1 = Math.abs(arr[mid] - value);\n        d2 = Math.abs(arr[mid + 1] - value);\n\n        if (d2 <= d1) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n\n    if (!side) {\n        return high;\n    }\n\n    const highVal = arr[high];\n    if (highVal === value) {\n        return high;\n    } else if (highVal > value) {\n        if (high === 0) { return high; }\n        return side === 'left' ? high - 1 : high;\n    }\n    if (high === arr.length - 1) { return high; }\n    return side === 'left' ? high : high + 1;\n};\n\nconst getNearestValue = (data, key) => {\n    const filterData = data.filter(d => typeof d === 'number');\n    return filterData[getClosestIndexOf(filterData, key)];\n};\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst getWindow = () => window;\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst reqAnimFrame = (() => requestAnimationFrame)();\n\nconst cancelAnimFrame = (() => cancelAnimationFrame)();\n\n/**\n * Capitalizes the first letter of the word\n * @param {string} text word\n * @return {string} Capitalized word\n */\nconst capitalizeFirst = (text) => {\n    text = text.toLowerCase();\n\n    return text.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1));\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\n/* istanbul ignore next */ const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Returns the class name appended with a given id.\n * @param {string} cls class name\n * @param {string} id unique identifier\n * @param {string} prefix string needed to add before the classname\n * @return {string} qualified class name\n */\n/* istanbul ignore next */const getQualifiedClassName = (cls, id, prefix) => {\n    cls = cls.replace(/^\\.*/, '');\n    return [`${prefix}-${cls}`, `${prefix}-${cls}-${id}`];\n};\n\n/**\n * This method is used to set the default value for variables\n * without sullying the code with conditional statements.\n *\n * @export\n * @param {any} param The parameter to test.\n * @param {any} value The default value to assign.\n * @return {any} The value.\n */\n/* istanbul ignore next */ const defaultValue = (param, value) => {\n    if (typeof param === 'undefined' || (typeof param === 'object' && !param)) {\n        return value;\n    }\n    return param;\n};\n\n/**\n * DESCRIPTION TODO\n *\n * @export\n * @param {Object} graph graph whose dependency order has to be generated\n * @return {Object}\n */\nconst getDependencyOrder = (graph) => {\n    const dependencyOrder = [];\n    const visited = {};\n    const keys = Object.keys(graph);\n    /**\n     * DESCRIPTION TODO\n     *\n     * @export\n     * @param {Object} name\n     * @return {Object}\n     */\n    const visit = (name) => {\n        if (dependencyOrder.length === keys.length) {\n            return true;\n        }\n        visited[name] = true;\n        const edges = graph[name];\n        for (let e = 0; e < edges.length; e++) {\n            const dep = edges[e];\n            if (!visited[dep]) {\n                visit(dep);\n            }\n        }\n\n        dependencyOrder.push(name);\n        return false;\n    };\n\n    for (let i = 0; i < keys.length; i++) {\n        if (visit(keys[i], i)) break;\n    }\n\n    return dependencyOrder;\n};\n\n/**\n * Iterates over the properties of an object and applies the function\n *\n * @param {any} obj object to be iterated upon\n * @param {any} fn  function to be applied on it\n */\nconst objectIterator = (obj, fn) => {\n    for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            fn(key, obj);\n        }\n    }\n};\n\n/**\n * This class creates a d3 voronoi for retrieving the nearest neighbour of any point from a set of two\n * dimensional points\n * @class Voronoi\n */\n/* istanbul ignore next */ class Voronoi {\n    /**\n     * Initialize the voronoi with the data given.\n     * @param {Array.<Object>} data Array of points.\n     */\n    constructor (data) {\n        this._voronoi = voronoi().x(d => d.x).y(d => d.y);\n        this.data(data);\n    }\n\n    /**\n     * Sets the data to voronoi\n     * @param {Array.<Object>} data Array of objects.\n     * @return {Voronoi} Instance of voronoi.\n     */\n    data (data) {\n        if (data) {\n            this._voronoiFn = this._voronoi(data);\n        }\n        return this;\n    }\n\n    /**\n     * Finds the closest point to the x and y position given.\n     * @param {number} x x value\n     * @param {number} y y value\n     * @param {number} radius search radius.\n     * @return {Object} Details of the nearest point.\n     */\n    find (x, y, radius) {\n        return this._voronoiFn.find(x, y, radius);\n    }\n}\n\nconst addListenerToNamespace = (namespaceInf, fn, context) => {\n    let key = namespaceInf.key;\n    const namespace = namespaceInf.namespace;\n    if (namespace) {\n        !context._listeners[namespace] && (context._listeners[namespace] = []);\n        if (!key) {\n            key = Object.keys(context._listeners[namespace]).length;\n        }\n        context._listeners[namespace][key] = fn;\n    } else {\n        key = Object.keys(context._listeners).length;\n        context._listeners[key] = fn;\n    }\n};\n\n/**\n *\n *\n * @param {*} obj\n * @param {*} fields\n *\n */\nconst getObjProp = (obj, ...fields) => {\n    if (obj === undefined || obj === null) {\n        return obj;\n    }\n    let retObj = obj;\n    for (let i = 0, len = fields.length; i < len; i++) {\n        retObj = retObj[fields[i]];\n        if (retObj === undefined || retObj === null) {\n            break;\n        }\n    }\n    return retObj;\n};\n\n/**\n * Methods to handle changes to table configuration and reactivity are handled by this\n * class.\n */\n/**\n *  Common store class\n *\n * @class Store\n */\nclass Store {\n    /**\n     * Creates an instance of Store.\n     * @param {Object} config The object to create the state store with.\n     * @memberof Store\n     */\n    constructor (config) {\n        // create reactive model\n        this.model = Model.create(config);\n        this._listeners = {};\n    }\n\n    /**\n     * This method returns a plain JSON object\n     * with all the fields in the state store.\n     *\n     * @return {Object} Serialized representation of state store.\n     * @memberof Store\n     */\n    serialize () {\n        return this.model.serialize();\n    }\n\n    /**\n     * This method is used to update the value of a property in the state store.\n     *\n     * @param {string} propName The name of the property.\n     * @param {number} value The new value of the property.\n     * @memberof Store\n     */\n    commit (propName, value) {\n        // check if appropriate enum has been used\n        this.model.prop(propName, value);\n    }\n\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */registerChangeListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.next(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */ registerImmediateListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.on(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to get the name of the property\n     * from the state store.\n     *\n     * @param {string} propName The name of the field in state store.\n     * @return {any} The value of the field.\n     * @memberof Store\n     */\n    get (propName) {\n        return this.model.prop(propName);\n    }\n\n    /**\n     * This method is used to register a computed property that is computed every time\n     * the store value changes.\n     *\n     * @param {string} propName The name of the property to create.\n     * @param {Function} callBack The function to execute when depemdent props change.\n     * @memberof Store\n     */\n    computed (propName, callBack) {\n        return this.model.calculatedProp(propName, callBack);\n    }\n\n    append (propName, value) {\n        this.model.append(propName, value);\n        return this;\n    }\n\n    unsubscribeAll () {\n        Object.values(this._listeners).forEach(fn => fn());\n        return this;\n    }\n\n    unsubscribe (namespaceInf = {}) {\n        const { namespace, key } = namespaceInf;\n        const listeners = this._listeners[namespace];\n        if (key) {\n            const fn = getObjProp(listeners, key);\n            fn && fn();\n        } else {\n            Object.values(listeners).forEach(fn => fn());\n            this._listeners[namespace] = [];\n        }\n        return this;\n    }\n}\n\n/**\n * Sanitize an input number / string mixed number. Currently dot in the no is not supported.\n *\n * @param {number | string} val pure number or string mixed number\n * @return {number | null}  Number if it can be extracted. Otherwise null\n */\nconst intSanitizer = (val) => {\n    const arr = val.toString().match(/(\\d+)(px)*/g);\n    if (!arr) {\n        // If only characters are passed\n        return null;\n    }\n\n    return parseInt(arr[0], 10);\n};\n\n/**\n * Setter getter creator from config\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args. (Optional)\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @param {Object} holder an empty object on which the getters and setters will be mounted\n * @param {Object} options options config based on which the getters and setters are determined.\n * @param {Hyperdis} model optional model to attach the property. If not sent new moel is created.\n * @return {Array}\n */\nconst transactor = (holder, options, model, namespaceInf = {}) => {\n    let conf;\n    const store = model && model instanceof Model ? model : Model.create({});\n    const stateProps = {};\n    for (const prop in options) {\n        if ({}.hasOwnProperty.call(options, prop)) {\n            conf = options[prop];\n            const addAsMethod = conf.meta ? conf.meta.addAsMethod : true;\n            let nameSpaceProp;\n            const namespace = namespaceInf.namespace;\n            if (namespace) {\n                nameSpaceProp = `${namespace}.${prop}`;\n            } else {\n                nameSpaceProp = prop;\n            }\n            if (!store.prop(`${nameSpaceProp}`)) {\n                stateProps[prop] = conf.value;\n            }\n            if (addAsMethod !== false) {\n                holder[prop] = ((context, meta, nsProp) => (...params) => {\n                    let val;\n                    let compareTo;\n                    const paramsLen = params.length;\n                    const prevVal = store.prop(nsProp);\n                    if (paramsLen) {\n                        // If parameters are passed then it's a setter\n                        const spreadParams = meta && meta.spreadParams;\n                        val = params;\n                        const values = [];\n                        if (meta) {\n                            for (let i = 0; i < paramsLen; i++) {\n                                val = params[i];\n                                const sanitization = meta.sanitization && (spreadParams ? meta.sanitization[i] :\n                                    meta.sanitization);\n                                const typeCheck = meta.typeCheck && (spreadParams ? meta.typeCheck[i] : meta.typeCheck);\n                                if (sanitization && typeof sanitization === 'function') {\n                                    // Sanitize if required\n                                    val = sanitization(val, prevVal, holder);\n                                }\n\n                                if (typeCheck) {\n                                    // Checking if a setter is valid\n                                    if (typeof typeCheck === 'function') {\n                                        let typeExpected = meta.typeExpected;\n                                        if (typeExpected && spreadParams) {\n                                            typeExpected = typeExpected[i];\n                                        }\n                                        if (typeExpected) {\n                                            compareTo = typeExpected;\n                                        } else {\n                                            compareTo = true;\n                                        }\n\n                                        if (typeCheck(val) === compareTo) {\n                                            values.push(val);\n                                        }\n                                    } else if (typeof typeCheck === 'string') {\n                                        if (typeCheck === 'constructor') {\n                                            const typeExpected = spreadParams ? meta.typeExpected[i] :\n                                                meta.typeExpected;\n                                            if (val && (val.constructor.name === typeExpected)) {\n                                                values.push(val);\n                                            }\n                                        }\n                                    } else {\n                                        // context.prop(key, val);\n                                        values.push(val);\n                                    }\n                                } else {\n                                    values.push(val);\n                                }\n                            }\n                            const preset = meta.preset;\n                            const oldValues = context.prop(nsProp);\n                            preset && preset(values[0], holder);\n                            if (spreadParams) {\n                                oldValues.forEach((value, i) => {\n                                    if (values[i] === undefined) {\n                                        values[i] = value;\n                                    }\n                                });\n                            }\n                            values.length && context.prop(nsProp, spreadParams ? values : values[0]);\n                        } else {\n                            context.prop(nsProp, spreadParams ? val : val[0]);\n                        }\n                        return holder;\n                    }\n                // No parameters are passed hence its a getter\n                    return context.prop(nsProp);\n                })(store, conf.meta, nameSpaceProp);\n            }\n        }\n    }\n\n    if (namespaceInf.namespace === undefined) {\n        store.append(stateProps);\n    } else {\n        const namespace = namespaceInf.namespace;\n        store.append(namespace, stateProps);\n    }\n\n    return [holder, store];\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} props\n */\nconst generateGetterSetters = (context, props) => {\n    Object.entries(props).forEach((propInfo) => {\n        const prop = propInfo[0];\n        const typeChecker = propInfo[1].typeChecker;\n        const defVal = propInfo[1].defaultValue;\n        const sanitization = propInfo[1].sanitization;\n        const prototype = context.constructor.prototype;\n        if (!(Object.hasOwnProperty.call(prototype, prop))) {\n            if (defVal) {\n                context[`_${prop}`] = defVal;\n            }\n            context[prop] = (...params) => {\n                if (params.length) {\n                    let value = params[0];\n                    if (sanitization) {\n                        value = sanitization(context, params[0]);\n                    }\n                    if (typeChecker && !typeChecker(value)) {\n                        return context[`_${prop}`];\n                    }\n                    context[`_${prop}`] = value;\n                    return context;\n                } return context[`_${prop}`];\n            };\n        }\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} prop\n */\nconst getArraySum = (arr, prop) => arr.reduce((total, elem) => {\n    total += prop ? elem[prop] : elem;\n    return total;\n}, 0);\n\n/**\n *\n *\n * @param {*} arr1\n * @param {*} arr2\n *\n */\nconst arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) { return false; }\n    for (let i = arr1.length; i >= 0; i--) {\n        if (arr1[i] !== arr2[i]) { return false; }\n    }\n\n    return true;\n};\n\n/* eslint valid-typeof:0 */\n/**\n * Returns a validation function which can be used to validate variables against a type and value\n *\n * @param {any} type type of value that the object should have\n * @return {Object} validation function\n */\nconst isEqual = type => (oldVal, newVal) => {\n    if (type === 'Array') {\n        if (!oldVal) {\n            return false;\n        }\n        return arraysEqual(oldVal, newVal);\n    } else if (type === 'Object') {\n        return Object.is(oldVal, newVal);\n    } return oldVal === newVal;\n};\n\n/**\n * Description @todo\n *\n * @param {any} transactionModel @todo\n * @param {any} transactionEndpoint @todo\n * @param {any} transactionItems @todo\n * @return {any} @todo\n */\nconst enableChainedTransaction = (transactionModel, transactionEndpoint, transactionItems) =>\n    transactionItems.forEach(item => transactionModel.on(item, ([, newVal]) => transactionEndpoint[item](newVal)));\n\n/**\n * Chceks if the element is istanceof HTMLElement\n *\n * @param {Object} elem any JS Object\n */\nconst isHTMLElem = elem => elem instanceof HTMLElement;\n\nconst ERROR_MSG = {\n    INTERFACE_IMPL: 'Method not implemented'\n};\n\n/**\n * Merges the sink object in the source by recursively iterating through the object properties\n * @param {Object} source Source Object\n * @param {Object} sink Sink Object\n * @return {Object} Merged object\n */\nconst mergeRecursive = (source, sink) => {\n    for (const prop in sink) {\n        if (isSimpleObject(source[prop]) && isSimpleObject(sink[prop])) {\n            mergeRecursive(source[prop], sink[prop]);\n        } else if (sink[prop] instanceof Object && sink[prop].constructor === Object) {\n            source[prop] = {};\n            mergeRecursive(source[prop], sink[prop]);\n        } else {\n            source[prop] = sink[prop];\n        }\n    }\n    return source;\n};\n\n/**\n * Creates a selection set from a data set with corresponding attributes\n *\n * @export\n * @param {Selection} sel contains previous selection\n * @param {Object} appendObj Object to be appended\n * @param {Array} data Data based on which the selection is entered/updated/removed\n * @param {Object} [attrs={}] Attributes to be set on the data\n * @return {Selection} Merged selection\n */\nconst createSelection = (sel, appendObj, data, idFn) => {\n    let selection = sel || dataSelect([]);\n\n    selection = selection.data(data, idFn);\n\n    const enter = selection.enter().append(appendObj);\n    const mergedSelection = enter.merge(selection);\n\n    selection.exit() && selection.exit().remove();\n    return mergedSelection;\n};\n\nconst interpolateArray = (data, fitCount) => {\n    const linearInterpolate = function (before, after, atPoint) {\n        return before + (after - before) * atPoint;\n    };\n    const newData = [];\n    const springFactor = ((data.length - 1) / (fitCount - 1));\n    newData[0] = data[0]; // for new allocation\n    for (let i = 1; i < fitCount - 1; i++) {\n        const tmp = i * springFactor;\n        const before = (Math.floor(tmp)).toFixed();\n        const after = (Math.ceil(tmp)).toFixed();\n        const atPoint = tmp - before;\n        newData[i] = linearInterpolate(data[before], data[after], atPoint);\n    }\n    newData[fitCount - 1] = data[data.length - 1]; // for new allocation\n    return newData;\n};\n\n/**\n *\n *\n * @param {*} fn\n */\nconst nextFrame = (fn) => {\n    setTimeout(() => {\n        fn();\n    }, 0);\n};\n\n/**\n *\n *\n * @param {*} angle\n */\nconst angleToRadian = angle => angle * Math.PI / 180;\n\n/**\n *\n *\n * @param {*} newName\n * @param {*} oldName\n */\nconst replaceCSSPrefix = () => {\n    // @todo\n};\n\n/**\n * Gets the  interpolator function from d3 color\n *\n */\nconst interpolator = () => interpolate;\n\n/**\n * Gets the number interpolator from d3 color\n *\n */\nconst numberInterpolator = () => interpolateNumber;\n\n/**\n * Gets the rgb interpolator from d3 color\n *\n */\nconst colorInterpolator = () => interpolateRgb;\n\n/**\n * Gets the hsl interpolator from d3 color\n *\n */\nconst hslInterpolator = () => interpolateHslLong;\n\nconst transformColors = () => ({\n    color,\n    rgb,\n    hsl\n});\n\n/**\n * Gets the piecewise interpolator from d3 color\n *\n */\nconst piecewiseInterpolator = () => piecewise;\n\nfunction hue2rgb (p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n\n  /**\n   * Converts an HSL color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n   * Assumes h, s, and l are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  l       The lightness\n   * @return  Array           The RGB representation\n   */\nconst hslToRgb = (h, s, l, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\n  /**\n   * Converts an RGB color value to HSV. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes r, g, and b are contained in the set [0, 255] and\n   * returns h, s, and v in the set [0, 1].\n   *\n   * @param   Number  r       The red color value\n   * @param   Number  g       The green color value\n   * @param   Number  b       The blue color value\n   * @return  Array           The HSV representation\n   */\nconst rgbToHsv = (r, g, b, a = 1) => {\n    r = +r; g = +g; b = +b; a = +a;\n    r /= 255; g /= 255; b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h;\n    let s;\n    const l = (max + min) / 2;\n\n    if (max === min) {\n        h = s = 0; // achromatic\n    } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n        default: break;\n        }\n        h /= 6;\n    }\n    return [h, s, l, a];\n};\n\n  /**\n   * Converts an HSV color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes h, s, and v are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  v       The value\n   * @return  Array           The RGB representation\n   */\nconst hsvToRgb = (h, s, v, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n    default: break;\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\nconst hexToHsv = (hex) => {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n    const r = parseInt(result[1], 16);\n    const g = parseInt(result[2], 16);\n    const b = parseInt(result[3], 16);\n    const a = result[4] ? parseInt(result[4], 16) : 1;\n    return rgbToHsv(r, g, b, a);\n};\n\nconst detectColor = (col) => {\n    const matchRgb = /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/;\n    const matchHsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g;\n\n    // Source :  https://gist.github.com/sethlopezme/d072b945969a3cc2cc11\n     // eslint-disable-next-line\n    const matchRgba = /rgba?\\(((25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,\\s*?){2}(25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,?\\s*([01]\\.?\\d*?)?\\)/;\n     // eslint-disable-next-line\n    const matchHsla = /^hsla\\((0|360|35\\d|3[0-4]\\d|[12]\\d\\d|0?\\d?\\d),(0|100|\\d{1,2})%,(0|100|\\d{1,2})%,(0?\\.\\d|1(\\.0)?)\\)$/;\n    const matchHex = /^#([0-9a-f]{3}){1,2}$/i;\n\n    if (matchRgb.test(col) || matchRgba.test(col)) {\n        return 'rgb';\n    } else if (matchHsl.test(col) || matchHsla.test(col)) {\n        return 'hsl';\n    } else if (matchHex.test(col)) {\n        return 'hex';\n    } return col;\n};\n\n/**\n *\n *\n * @param {*} model\n * @param {*} propModel\n *\n */\nconst filterPropagationModel = (model, propModel, measures) => {\n    const { data, schema } = propModel.getData();\n    let filteredModel;\n    if (schema.length) {\n        const fieldMap = model.getFieldsConfig();\n        filteredModel = model.select((fields) => {\n            const include = data.some(row => schema.every((propField, idx) => {\n                if (!measures && (!(propField.name in fieldMap) ||\n                        fieldMap[propField.name].def.type === FieldType.MEASURE)) {\n                    return true;\n                }\n                return row[idx] === fields[propField.name].valueOf();\n            }));\n            return include;\n        }, {\n            saveChild: false\n        });\n    } else {\n        filteredModel = propModel;\n    }\n\n    return filteredModel;\n};\n\nconst assembleModelFromIdentifiers = (model, identifiers) => {\n    let schema = [];\n    let data;\n    const fieldMap = model.getFieldsConfig();\n    if (identifiers.length) {\n        const fields = identifiers[0];\n        const len = fields.length;\n        for (let i = 0; i < len; i++) {\n            const field = fields[i];\n            const fieldObj = fieldMap[field] && Object.assign({}, fieldMap[field].def);\n            if (fieldObj) {\n                schema.push(Object.assign(fieldObj));\n            }\n        }\n\n        data = [];\n        const header = identifiers[0];\n        for (let i = 1; i < identifiers.length; i += 1) {\n            const vals = identifiers[i];\n            const temp = {};\n            vals.forEach((fieldVal, cIdx) => {\n                temp[header[cIdx]] = fieldVal;\n            });\n            data.push(temp);\n        }\n    } else {\n        data = [];\n        schema = [];\n    }\n\n    return new model.constructor(data, schema);\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} criteria\n *\n */\nconst getDataModelFromRange = (dataModel, criteria, mode) => {\n    if (criteria === null) {\n        return null;\n    }\n    const selFields = Object.keys(criteria);\n    const selFn = fields => selFields.every((field) => {\n        const val = fields[field].value;\n        const range = criteria[field][0] instanceof Array ? criteria[field][0] : criteria[field];\n        if (typeof range[0] === 'string') {\n            return range.find(d => d === val) !== undefined;\n        }\n        return range ? val >= range[0] && val <= range[1] : true;\n    });\n\n    return dataModel.select(selFn, {\n        saveChild: false,\n        mode\n    });\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} identifiers\n *\n */\nconst getDataModelFromIdentifiers = (dataModel, identifiers, mode) => {\n    let filteredDataModel;\n    if (identifiers instanceof Array) {\n        const fieldsConfig = dataModel.getFieldsConfig();\n\n        const dataArr = identifiers.slice(1, identifiers.length);\n        if (identifiers instanceof Function) {\n            filteredDataModel = identifiers(dataModel, {}, false);\n        } else if (identifiers instanceof Array && identifiers[0].length) {\n            const filteredSchema = identifiers[0].filter(d => d in fieldsConfig);\n            filteredDataModel = dataModel.select((fields) => {\n                let include = true;\n                filteredSchema.forEach((propField, idx) => {\n                    const value = fields[propField].valueOf();\n                    const index = dataArr.findIndex(d => d[idx] === value);\n                    include = include && index !== -1;\n                });\n                return include;\n            }, {\n                saveChild: false,\n                mode\n            });\n        }\n    } else {\n        filteredDataModel = getDataModelFromRange(dataModel, identifiers, mode);\n    }\n    return filteredDataModel;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} listenerMap\n */\nconst registerListeners = (context, listenerMap, ...params) => {\n    const propListenerMap = listenerMap(context, ...params);\n    for (const key in propListenerMap) {\n        if ({}.hasOwnProperty.call(propListenerMap, key)) {\n            const namespace = params[0];\n            let ns = null;\n            if (namespace) {\n                ns = namespace.local;\n            }\n            const mapObj = propListenerMap[key];\n            const propType = mapObj.type;\n            const props = mapObj.props;\n            const listenerFn = mapObj.listener;\n            context.store()[propType](props, listenerFn, false, {\n                namespace: ns\n            });\n        }\n    }\n};\n\nconst isValidValue = value => !isNaN(value) && value !== -Infinity && value !== Infinity;\n/**\n *\n *\n * @param {*} str\n *\n */\nconst escapeHTML = (str) => {\n    const htmlEscapes = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '/': '&#x2F;'\n    };\n    const htmlEscaper = /[&<>\"'/]/g;\n    return (`${str}`).replace(htmlEscaper, match => htmlEscapes[match]);\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst transposeArray = arr => arr[0].map((col, i) => arr.map(row => row[i]));\nconst toArray = arr => (arr instanceof Array ? arr : [arr]);\nconst extendsClass = (cls, extendsFrom, found) => {\n    if (!cls) {\n        return false;\n    }\n    const prototype = cls.prototype;\n    if (prototype instanceof extendsFrom) {\n        found = true;\n    } else {\n        found = extendsClass(prototype, extendsFrom, found);\n    }\n    return found;\n};\n\n/**\n *\n * @param {*} dm1\n * @param {*} dm2\n */\nconst concatModels = (dm1, dm2) => {\n    const dataObj1 = dm1.getData();\n    const dataObj2 = dm2.getData();\n    const data1 = dataObj1.data;\n    const data2 = dataObj2.data;\n    const schema1 = dataObj1.schema;\n    const schema2 = dataObj2.schema;\n    const tuples1 = {};\n    const tuples2 = {};\n    const commonTuples = {};\n    for (let i = 0; i < data1.length; i++) {\n        for (let ii = 0; ii < data2.length; ii++) {\n            const row1 = data1[i];\n            const row2 = data2[ii];\n            const dim1Values = row1.filter((d, idx) => schema1[idx].type === FieldType.DIMENSION);\n            const dim2Values = row2.filter((d, idx) => schema2[idx].type === FieldType.DIMENSION);\n            const allDimSame = dim1Values.every(value => dim2Values.indexOf(value) !== -1);\n            if (allDimSame) {\n                const key = dim1Values.join();\n                !commonTuples[key] && (commonTuples[key] = {});\n                row1.forEach((value, idx) => {\n                    commonTuples[key][schema1[idx].name] = value;\n                });\n                row2.forEach((value, idx) => {\n                    commonTuples[key][schema2[idx].name] = value;\n                });\n            } else {\n                const dm1Key = dim1Values.join();\n                const dm2Key = dim2Values.join();\n                if (!commonTuples[dm1Key] && !commonTuples[dm2Key]) {\n                    !tuples1[dm1Key] && (tuples1[dm1Key] = {});\n                    !tuples2[dm2Key] && (tuples2[dm2Key] = {});\n                    row1.forEach((value, idx) => {\n                        tuples1[dm1Key][schema1[idx].name] = value;\n                    });\n                    row2.forEach((value, idx) => {\n                        tuples2[dm2Key][schema2[idx].name] = value;\n                    });\n                }\n            }\n        }\n    }\n\n    const commonSchema = [...schema1, ...schema2.filter(s2 => schema1.findIndex(s1 => s1.name === s2.name) === -1)];\n    const data = [...Object.values(tuples1), ...Object.values(tuples2), ...Object.values(commonTuples)];\n    return [data, commonSchema];\n};\n\nconst getSymbol = type => symbol().type(symbolFns[type]);\n\nconst stackOrders = {\n    [STACK_CONFIG.ORDER_NONE]: stackOrderNone,\n    [STACK_CONFIG.ORDER_ASCENDING]: stackOrderAscending,\n    [STACK_CONFIG.ORDER_DESCENDING]: stackOrderDescending\n};\nconst stackOffsets = {\n    [STACK_CONFIG.OFFSET_DIVERGING]: stackOffsetDiverging,\n    [STACK_CONFIG.OFFSET_NONE]: stackOffsetNone,\n    [STACK_CONFIG.OFFSET_EXPAND]: stackOffsetExpand,\n    [STACK_CONFIG.OFFSET_WIGGLE]: stackOffsetWiggle\n};\n\n// eslint-disable-next-line require-jsdoc\nconst stack = params => d3Stack().keys(params.keys).offset(stackOffsets[params.offset])\n                .order(stackOrders[params.order])(params.data);\n\n/**\n * Groups the data into a hierarchical tree structure based on one or more fields.\n * @param { Object } params Configuration properties for nesting data\n * @param { Array.<Array> } params.data Data which needs to be grouped\n * @param { Array.<number> } params.keys Field indices by which the data will be grouped\n * @return { Array.<Object> } Grouped data array\n */\nconst nestCollection = (params) => {\n    const nestFn = nest();\n    params.keys.forEach(key => nestFn.key(d => d[key]));\n    return nestFn.entries(params.data);\n};\n\nconst pathInterpolators = {\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    stepAfter: curveStepAfter,\n    catmullRom: curveCatmullRom,\n    step: curveStep,\n    stepBefore: curveStepBefore,\n    linear: curveLinear\n};\n\nconst Symbols = {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom,\n    line,\n    area,\n    pie,\n    arc,\n    nest\n};\n\nconst Scales = {\n    band: scaleBand\n};\n\nconst getSmallestDiff = (points) => {\n    points = points.sort((a, b) => a - b);\n    let minDiff = points[1] - points[0];\n    for (let i = 2; i < points.length; i++) {\n        minDiff = Math.min(minDiff, points[i] - points[i - 1]);\n    }\n\n    return minDiff;\n};\n\nconst timeFormats = {\n    millisecond: '%A, %b %e, %H:%M:%S.%L',\n    second: '%A, %b %e, %H:%M:%S',\n    minute: '%A, %b %e, %H:%M',\n    hour: '%A, %b %e, %H:%M',\n    day: '%A, %b %e, %Y',\n    month: '%B %Y',\n    year: '%Y'\n};\n\nconst timeDurations = [\n    ['millisecond', 'second', 'minute', 'hour', 'day', 'month', 'year'],\n    [1, 1000, 60000, 3600000, 86400000, 2592000000, 31536000000]\n];\n\nconst getNearestInterval = (interval) => {\n    const index = getClosestIndexOf(timeDurations[1], interval);\n    return timeDurations[0][index];\n};\n\nconst formatTemporal = (value, interval) => {\n    const nearestInterval = getNearestInterval(interval);\n    return DateTimeFormatter.formatAs(value, timeFormats[nearestInterval]);\n};\n\nconst temporalFields = (dataModel) => {\n    const filteredFields = {};\n    Object.entries(dataModel.getFieldspace().getDimension()).forEach(([fieldName, fieldObj]) => {\n        if (fieldObj.subtype() === DimensionSubtype.TEMPORAL) {\n            filteredFields[fieldName] = fieldObj;\n        }\n    });\n    return filteredFields;\n};\n\nconst require = (lookupWhat, lookupDetails) => ({\n    resolvable: (store) => {\n        const lookupTarget = store[lookupWhat];\n        const depArr = lookupDetails.slice(0, lookupDetails.length - 1);\n        const fn = lookupDetails[lookupDetails.length - 1]; // fn\n\n        const deps = depArr.map(str => lookupTarget[str]);\n        return {\n            fn: fn(...deps),\n            depArr\n        };\n    }\n});\n\nconst nextAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n    function (callback) {\n        setTimeout(callback, 16);\n    };\n\nconst getValueParser = config => (val) => {\n    if (val instanceof InvalidAwareTypes) {\n        return val in config ? config[val] : `${val}`;\n    }\n    return val;\n};\n\nconst retrieveNearestGroupByReducers = (dataModel, ...measureFieldNames) => {\n    let nearestReducers = {};\n    let next = dataModel;\n    do {\n        const derivations = next.getDerivations();\n        if (derivations) {\n            const groupDerivation = derivations.reverse().find(derivation => derivation.op === DM_OPERATION_GROUP);\n            if (groupDerivation) {\n                nearestReducers = groupDerivation.criteria || {};\n                break;\n            }\n        }\n    } while (next = next.getParent());\n\n    const filteredReducers = {};\n    const measures = dataModel.getFieldspace().getMeasure();\n    measureFieldNames.forEach((measureName) => {\n        if (nearestReducers[measureName]) {\n            filteredReducers[measureName] = nearestReducers[measureName];\n        } else {\n            const measureField = measures[measureName];\n            if (measureField) {\n                filteredReducers[measureName] = measureField.defAggFn();\n            }\n        }\n    });\n\n    return filteredReducers;\n};\n\nexport {\n    getValueParser,\n    require,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    stack,\n    nestCollection,\n    getSymbol,\n    transformColors,\n    detectColor,\n    hexToHsv,\n    hslToRgb,\n    rgbToHsv,\n    hsvToRgb,\n    concatModels,\n    toArray,\n    angleToRadian,\n    escapeHTML,\n    generateGetterSetters,\n    getArraySum,\n    interpolator,\n    piecewiseInterpolator,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    colorInterpolator,\n    numberInterpolator,\n    ERROR_MSG,\n    reqAnimFrame,\n    nextAnimFrame,\n    filterPropagationModel,\n    transposeArray,\n    cancelAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    symbolFns,\n    easeFns,\n    clone,\n    isEqual,\n    interpolateArray,\n    getMinPoint,\n    defaultValue,\n    getMaxPoint,\n    getClosestIndexOf,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    Store,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    transactor,\n    enableChainedTransaction,\n    isHTMLElem,\n    isSimpleObject,\n    nextFrame,\n    registerListeners,\n    replaceCSSPrefix,\n    getObjProp,\n    extendsClass,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    hslInterpolator,\n    getSmallestDiff,\n    getNearestValue,\n    retrieveNearestGroupByReducers,\n    createSelection,\n    formatTemporal,\n    temporalFields\n};\n","export function linear(t) {\n  return +t;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","import Selection from './selection';\n/**\n * This function applies a selection operation on a data array.\n *\n * @export\n * @param {Array} [data=[]] The data array to be observed.\n * @return {Selection} Instance of a selection.\n */\nexport default function dataSelect (data = []) {\n    return new Selection(data);\n}\n\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","export const ORDER_ASCENDING = 'ascending';\nexport const ORDER_DESCENDING = 'descending';\nexport const ORDER_NONE = 'none';\nexport const OFFSET_DIVERGING = 'diverging';\nexport const OFFSET_NONE = 'none';\nexport const OFFSET_EXPAND = 'expand';\nexport const OFFSET_WIGGLE = 'wiggle';\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export const DM_OPERATION_GROUP = 'group';\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import { select, event as d3event, selection, clientPoint } from 'd3-selection';\nimport { drag as d3drag } from 'd3-drag';\nimport 'd3-transition';\nimport { mergeRecursive } from './common-utils';\n/**\n * This function takes a raw DOM element or\n * a string and returns a d3 selection of that element.\n *\n * @param {HTMLElement | string} element The element to wrap in d3 selection.\n * @return {Selection} Instance of d3 selection.\n */\nconst selectElement = element => select(element);\n\n/**\n * It creates a new d3 element on the parent element\n * @param  {Selection} parent Element to which the element is to be appended\n * @param  {Object} elemType Type of the new element\n * @param  {Array} data Data for the new element\n * @param  {Object} selector classname/id/tagname for the element\n * @return {HTMLElement} Newly Created Element\n */\nconst makeElement = (parent, elemType, data, selector, callbacks = {}, keyFn) => {\n    if ((parent instanceof HTMLElement || parent instanceof SVGElement)) {\n        parent = selectElement(parent);\n    }\n\n    const selectorVal = selector ? selector[0] : null;\n    let selectorType = null;\n    let actualSelector = null;\n    let element = null;\n    let enterSel = null;\n    let mergeSel = null;\n    let filter;\n    if (selectorVal) {\n        if (selectorVal === '#') {\n            selectorType = 'id';\n            actualSelector = selector;\n        } else {\n            selectorType = 'class';\n            actualSelector = selector[0] === '.' ? selector : `.${selector}`;\n        }\n    } else {\n        actualSelector = elemType;\n        filter = true;\n    }\n    element = parent.selectAll(actualSelector);\n\n    filter && (element = element.filter(function () {\n        return this.parentNode === parent.node();\n    }));\n    element = element.data(data, keyFn);\n\n    enterSel = element.enter()\n                            .append(elemType || 'div');\n    callbacks.enter && enterSel.each(function (...params) {\n        callbacks.enter(selectElement(this), ...params);\n    });\n\n    mergeSel = enterSel.merge(element);\n    callbacks.update && mergeSel.each(function (...params) {\n        callbacks.update(selectElement(this), ...params);\n    });\n    if (selectorType === 'class') {\n        mergeSel.classed(selectorVal === '.' ? selector.substring(1, selector.length) : selector, true);\n    } else if (selectorType === 'id') {\n        mergeSel.attr('id', selector.substring(1, selector.length));\n    }\n    const exitSel = element.exit();\n\n    if (callbacks.exit) {\n        exitSel.each(function (...params) {\n            callbacks.exit(selectElement(this), ...params);\n        });\n    } else {\n        exitSel.remove();\n    }\n    return mergeSel;\n};\n\n/**\n * This function applies styles to an element\n *  @param  {Object} elem Element Selection\n * @param  {Object} styleObj Style Object to be applied\n * @return {Element} Newly Created Element\n*/\nconst applyStyle = (elem, styleObj) => {\n    Object.entries(styleObj).forEach((d) => {\n        elem.style(d[0], d[1]);\n    }, this);\n    return elem;\n};\n\n/**\n * This function appends a dom element in another element.\n * @param {HTMLElement | SVGElement} element1 The element in which to append the second element\n * @param {HTMLElement | SVGElement} element2 The element which will be appended.\n */\nconst appendElement = (element1, element2) => {\n    element1.appendChild(element2);\n};\n\n/**\n * Sets the attributes to the element.\n * @param {HTMLElement | SVGElement} element Element on which attributes will be applied\n * @param {Object} attrs Attributes which need to be applied\n */\nconst setElementAttrs = (element, attrs) => {\n    for (const key in attrs) {\n        if ({}.hasOwnProperty.call(attrs, key)) {\n            element.attr(key, attrs[key]);\n        }\n    }\n};\n\n/**\n * Sets attributes in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which attrs will be applied\n * @param {Array.<Object>} attrs Array of attributes\n * @param {string} className className of elements to select.\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setAttrs = (element, attrs, className) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    className !== undefined ? element.selectAll(`.${className}`).each(function () {\n        setElementAttrs(select(this), attrs);\n    }) : setElementAttrs(element, attrs);\n    return element;\n};\n\n/**\n * Adds a css class to elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst addClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, true) :\n                elem.classed(className, true);\n    });\n};\n\n/**\n * Removes the css class from elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst removeClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, false) :\n                elem.classed(className, false);\n    });\n};\n\n/**\n * Sets styles in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which styles will be applied\n * @param {Array.<Object>} styles Array of style attributes\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setStyles = (element, styles) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            element.style(key, styles[key]);\n        }\n    }\n    return element;\n};\n\n/**\n * Creates svg or html elements by binding data to the selection.Removes extra elements\n * on exit.\n * @param {Object} params Parameter object\n * @param {SVGElement | HTMLElement} params.container Container element where all elements will be appended\n * @param {string} params.selector Selector by which elements will be selected from dom\n * @param {string} params.append Append tag\n * @param {Function} params.each Function which will be executed for each data point and element.\n */\nconst createElements = (params) => {\n    const container = select(params.container);\n    let data;\n    let sel;\n\n    data = params.data;\n    if (typeof data === 'number') {\n        data = Array(data).fill().map((d, i) => i);\n    }\n    sel = container.selectAll(params.selector).data(data);\n\n    sel = container.selectAll(params.selector).filter(function () {\n        return this.parentNode === container.node();\n    }).data(params.data);\n\n    const selectionMerge = sel.enter().append(params.append).merge(sel).each(function (d, i) {\n        params.each(d, select(this), i);\n    });\n\n    selectionMerge.attr('class', params.className || '');\n    sel.exit().remove();\n};\n\n/**\n * Clips an element with given measurement. Basically it is used to hide overflowing portions\n * of any element.\n * @param {SVGElement} container svg element which needs to be clipped.\n * @param {Object} measurement Dimensions of the clipped rectangle.\n * @param {string} id Unique id of the clip element\n */\nconst clipElement = (container, measurement, id) => {\n    const clipPathElement = makeElement(select(container), 'clipPath', [1], `#${id}`);\n    const clipPathRect = makeElement(clipPathElement, 'rect', [1]);\n    clipPathRect.attr('x', measurement.x)\n                    .attr('y', measurement.x)\n                    .attr('width', measurement.width)\n                    .attr('height', measurement.height);\n    clipPathElement.attr('clip-path', `url(#${id})`);\n};\n\n/**\n * Returns the element of the corresponding classname.\n * @param {HTMLElement | SVGElement} node html or svg node element.\n * @param {string} className css class to be applied.\n * @return {HTMLElement | SVGElement} html or svg element.\n */\nconst getElementsByClassName = (node, className) => select(node).selectAll(className).nodes();\n\n/**\n * Gets the mouse position relative to an svg type of element\n * @param {SVGElement} element Any svg element like rect, circle, etc.\n * @param {Event} event Event object.\n * @return {Object} x and y position relative to the container element passed.\n */\nconst getMousePos = (element, event) => {\n    const boundingClientRect = element.getBoundingClientRect();\n    return {\n        x: event.x - boundingClientRect.x,\n        y: event.y - boundingClientRect.y\n    };\n};\n\nconst getClientPoint = (...params) => {\n    const pos = clientPoint(...params);\n    return {\n        x: pos[0],\n        y: pos[1]\n    };\n};\n\n/** This function appends a dom element in another element.\n * @param {Object} tag The tag name of the element to append\n * @param {Object} mount Mount point fo the element\n * @return {Object} selection of the appended element\n */\nconst createElement = (tag, mount) => select(mount).append(tag).node();\n\n/**\n * Gets the d3 event function\n * @return {Object} d3 event\n */\nconst getEvent = () => d3event;\n\n/**\n * Gets the d3 drag function\n * @return {Object} d3 drag\n */\nconst getD3Drag = () => d3drag;\n\nconst getSmartComputedStyle = (group, css) => {\n    let textEl;\n    const testText = 'W';\n    const mandatoryStyle = {\n        'fill-opacity': 0\n    };\n    const className = typeof css === 'string' ? css : (css instanceof Array ? css.join(' ') : undefined);\n\n    if (group.node() instanceof HTMLElement) {\n        textEl = group.append('div').html(testText);\n    } else {\n        textEl = group.append('text').text(testText);\n    }\n\n    if (className) {\n        textEl.attr('class', className);\n    } else if (typeof css === 'object') {\n        delete css['fill-opacity'];\n        mergeRecursive(mandatoryStyle, css);\n    }\n\n    textEl.style(mandatoryStyle);\n    const computedStyle = window.getComputedStyle(textEl.node());\n    const styleForSmartLabel = {\n        fontSize: computedStyle.fontSize,\n        fontFamily: computedStyle.fontFamily,\n        fontWeight: computedStyle.fontWeight,\n        fontStyle: computedStyle.fontStyle\n    };\n\n    textEl.remove();\n\n    return styleForSmartLabel;\n};\n\nconst hasTouch = () => 'ontouchstart' in document.documentElement;\n\nexport {\n    hasTouch,\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint\n};\n","const events = [\n    'initialized',\n    'beforeupdate',\n    'updated',\n    'beforedraw',\n    'drawn',\n    'beforeremove',\n    'removed',\n    'animationend'\n];\n\nconst compositions = [\n    'canvas',\n    'unit',\n    'layer',\n    'axis',\n    'facet-headers',\n    'legend',\n    'caption'\n];\n\nconst EVENT_LIST = [];\n\ncompositions.forEach((composition) => {\n    events.forEach((event) => {\n        EVENT_LIST.push(`${composition}.${event}`);\n    });\n});\n\nexport default EVENT_LIST;\n","import EVENT_LIST from './event-list';\nimport { createPromise } from './helper';\n\n/**\n * At first call it accepts one function\n * calling it second time accepts notification object.\n * notification object then called with first accepted function\n *\n * @param {Function} resolveFn a promise's resolve function\n * @return {Function} a function to accept notification object\n */\nconst resolver = resolveFn => notification => resolveFn(notification);\n\n/**\n * Checks if the property string is present in the source object\n *\n * @param {Object} source source object whom you want to check the property\n * @param {string} property key name that need to be checked\n * @return {boolean} returns true if the property found in the source object\n */\nconst hasOwn = (source, property) => Object.prototype.hasOwnProperty.call(source, property);\n\n/**\n * LifeCycleManager which goes as a dependendecy to a muze\n * it accepts notification from the entire library throughout\n * the exeecution life\n *\n * @export\n * @class LifeCycleManager\n */\nexport default class LifeCycleManager {\n\n    /**\n     * Creates an instance of LifeCycleManager.\n     * @memberof LifeCycleManager\n     */\n    constructor () {\n        this._eventList = EVENT_LIST;\n        this._promises = new Map();\n        this._notifiers = {};\n        this._lifeCycles = {};\n        this._unreleasedLifeCycles = {};\n        this._boot();\n    }\n\n    /**\n     * Fills all the notifiers with resolver callback\n     *\n     * @memberof LifeCycleManager\n     */\n    _boot () {\n        this._notifiers = this._eventList.reduce((acc, name) => {\n            acc[name] = resolver;\n            return acc;\n        }, {});\n        this._preparePromises();\n    }\n\n    /**\n     * Public method which gives the promise corresponding\n     * to the event name\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    retrieve (eventName) {\n        return this._promises.get(eventName);\n    }\n\n    /**\n     * Creates a promise that will be passed to user's callback\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} a pending promise waiting for resolve to be called\n     * @memberof LifeCycleManager\n     */\n    _makeNotifierPromise (eventName) {\n        return new Promise((resolve) => {\n            this._notifiers[eventName] = resolver(resolve);\n        });\n    }\n\n    /**\n     * Prepares the promise map with pending promises\n     * all the promises are in a pending state where their's\n     * resolve function waiting to be called with notification object\n     * @memberof LifeCycleManager\n     */\n    _preparePromises () {\n        this._eventList.forEach((eventName) => {\n            const promise = this._makeNotifierPromise(eventName);\n            this._promises.set(eventName, promise);\n            createPromise(promise, eventName, this);\n        });\n    }\n\n    /**\n     * Resolves the promise with notification object\n     *\n     * @param {string} eventName name of the event in the system\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     *\n     * @memberof LifeCycleManager\n     */\n    _resolvePromise (eventName, notification) {\n        this._notifiers[eventName](notification);\n    }\n\n    /**\n     * Public method which is being called by different\n     * subcompoents of the system at different execution atages\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    notify (notification) {\n        // get the composition name from notification\n        // or from static formalName() method\n        const composition = notification.formalName || notification.client.constructor.formalName();\n        notification.formalName = composition;\n        this._releasePromisesFromCache();\n        this._notify(composition, notification);\n    }\n\n    /**\n     * Notify user the with promsie in a callback\n     * if callback not found then cache it\n     *\n     * @param {string} composition\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    _notify (composition, notification) {\n        const stage = notification.action;\n        const eventName = `${composition}.${stage}`;\n\n        // resolves promise with the notification object\n        this._resolvePromise(eventName, notification);\n\n        // get the promise from the promise map\n        const promise = this.retrieve(eventName);\n\n        if (this._lifeCycles[composition]) {\n            if (this._lifeCycles[composition][stage]) {\n                // if user given call back exists, then call with promise\n                this._callLifeCycleCallback(composition, stage, promise);\n            } else {\n                // otherwise cache the promise\n                this._cachePromise(composition, stage, promise);\n            }\n        } else {\n            this._cachePromise(composition, stage, promise);\n        }\n    }\n\n    /**\n     * Calls the user's callback with callback\n     *\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _callLifeCycleCallback (composition, stage, promise) {\n        const eventName = `${composition}.${stage}`;\n        this._lifeCycles[composition][stage](promise);\n        this._resetTargetPromise(eventName);\n    }\n\n    /**\n     * Try to clear the cached promsies once we have\n     * macthed callbacks from the user\n     *\n     * @memberof LifeCycleManager\n     */\n    _releasePromisesFromCache () {\n        const compositions = Object.keys(this._unreleasedLifeCycles);\n        compositions.forEach((composition) => {\n            const stages = Object.keys(this._unreleasedLifeCycles[composition]);\n            stages.forEach((stage) => {\n                if (this._lifeCycles[composition]) {\n                    if (this._lifeCycles[composition][stage]) {\n                        // take the promise from unreleased lifeCycles\n                        const promise = this._unreleasedLifeCycles[composition][stage];\n                        // call the user given callback with that promise\n                        this._callLifeCycleCallback(composition, stage, promise);\n                        // delete promise from unreleased lifeCycles\n                        delete this._unreleasedLifeCycles[composition][stage];\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Cache the promise in the map. This cache\n     * then get consumed if we get user callbacks\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _cachePromise (composition, stage, promise) {\n        if (!hasOwn(this._unreleasedLifeCycles, composition)) {\n            this._unreleasedLifeCycles[composition] = {};\n        }\n\n        if (!hasOwn(this._unreleasedLifeCycles[composition], stage)) {\n            this._unreleasedLifeCycles[composition][stage] = {};\n        }\n        this._unreleasedLifeCycles[composition][stage] = promise;\n    }\n\n    /**\n     * It register's the callbacks gievn the user\n     *\n     * @param {Object} [lifeCycles={}] a object with list of callbacks\n     * @memberof LifeCycleManager\n     */\n    register (lifeCycles = {}) {\n        this._lifeCycles = lifeCycles;\n        // as we get all the callbacks, try to call them\n        // from unreleased promise map\n        this._releasePromisesFromCache();\n    }\n\n    /**\n     * Reset the promise into pending state\n     *\n     * @param {string} eventName name of the event happening\n     * @memberof LifeCycleManager\n     */\n    _resetTargetPromise (eventName) {\n        setTimeout(() => {\n            this._notifiers[eventName] = resolver;\n            this._promises.set(eventName, this._makeNotifierPromise(eventName));\n        }, 0);\n    }\n}\n","import LifeCycleManager from './lifecycle-manager';\n\nexport default LifeCycleManager;\n","/**\n * Creates a new promise when the given promise is resolved. This needs to be done so that after the lifecycle event\n * is completed, then again when the event gets completed, then a new promise gets resolved.\n *\n * @param {Promise} promise Instance of promise\n * @param {string} eventName name of event\n * @param {LifeCycleManager} context Instance of lifecyclemanager\n */\nexport const createPromise = (promise, eventName, context) => {\n    promise.then(() => {\n        const prm = context._makeNotifierPromise(eventName);\n        context._promises.set(eventName, prm);\n        createPromise(prm, eventName, context);\n    });\n};\n","import { default as DataModel } from 'datamodel';\nimport * as scales from './scales';\nimport * as colorSchemes from './color-schemes';\nimport * as STATE_NAMESPACES from './enums/namespace';\n\nconst InvalidAwareTypes = DataModel.InvalidAwareTypes;\n\nexport {\n    InvalidAwareTypes,\n    DataModel\n};\n\nexport {\n    ReservedFields,\n    CommonProps\n} from './enums';\n\nexport { STATE_NAMESPACES };\n\nexport {\n    scales,\n    colorSchemes\n};\n\nexport {\n    getNearestValue,\n    getValueParser,\n    transformColors,\n    detectColor,\n    hslToRgb,\n    rgbToHsv,\n    hexToHsv,\n    hsvToRgb,\n    escapeHTML,\n    angleToRadian,\n    generateGetterSetters,\n    getArraySum,\n    ERROR_MSG,\n    interpolator,\n    colorInterpolator,\n    numberInterpolator,\n    piecewiseInterpolator,\n    reqAnimFrame,\n    cancelAnimFrame,\n    nextAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    replaceCSSPrefix,\n    symbolFns,\n    defaultValue,\n    easeFns,\n    clone,\n    interpolateArray,\n    getMinPoint,\n    getMaxPoint,\n    getClosestIndexOf,\n    registerListeners,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    Store,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    transactor,\n    enableChainedTransaction,\n    isHTMLElem,\n    isEqual,\n    isSimpleObject,\n    nextFrame,\n    filterPropagationModel,\n    getObjProp,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    transposeArray,\n    toArray,\n    extendsClass,\n    concatModels,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    nestCollection,\n    stack,\n    getSymbol,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    hslInterpolator,\n    getSmallestDiff,\n    require,\n    formatTemporal,\n    createSelection,\n    temporalFields,\n    retrieveNearestGroupByReducers\n} from './common-utils';\n\nexport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint,\n    hasTouch\n} from './renderer-utils';\n\nexport { default as Smartlabel } from 'fusioncharts-smartlabel';\n\nexport { dataSelect, DataObject } from './DataSystem';\n\nexport { default as LifeCycleManager } from './lifecycle-manager';\n\nexport { DimensionSubtype, FieldType, MeasureSubtype, DateTimeFormatter } from 'datamodel';\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\nexport const LONGTOUCH = 'longtouch';\nexport const TOUCHDRAG = 'touchdrag';\nexport const ALL_ACTIONS = '*';\n","const SELECTION_NEW_ENTRY = 1;\nconst SELECTION_NEW_EXIT = -1;\nconst SELECTION_NULL = 0;\nconst SELECTION_OLD_ENTRY = 2;\nconst SELECTION_OLD_EXIT = -2;\n\nexport {\n    SELECTION_NEW_ENTRY,\n    SELECTION_NEW_EXIT,\n    SELECTION_NULL,\n    SELECTION_OLD_ENTRY,\n    SELECTION_OLD_EXIT\n};\n","import SelectionSet from './selection-set';\n\nexport default SelectionSet;\n","import {\n    SELECTION_NEW_ENTRY, SELECTION_NEW_EXIT, SELECTION_NULL, SELECTION_OLD_ENTRY, SELECTION_OLD_EXIT\n} from '../enums/selection';\n/* eslint-disable guard-for-in */\n\n/**\n * This component is used to keep track of the row tuples of the data which gets added and removed. This keeps\n * information of which rows are in previous and new entry set and previous and new exit set. This is initialized by\n * {@link Firebolt}.\n *\n * @public\n *\n * @class SelectionSet\n */\nclass SelectionSet {\n    /**\n     * Creates an instance of selection set\n     *\n     * @param {Array.<string>} completeSet Set of unique ids.\n     */\n    constructor (completeSet, _volatile) {\n        this.completeSet = completeSet;\n        this._set = completeSet.reduce((obj, key) => {\n            obj[key] = SELECTION_NULL;\n            return obj;\n        }, {});\n        this._volatile = _volatile;\n        this._completeSetCount = completeSet.length;\n        this._lockedSelection = {};\n        this._resetted = true;\n    }\n\n    /**\n     * Adds a set of ids to the selection set. This also moves the other rows to exit set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    add (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_ENTRY;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_ENTRY && set[key] !== SELECTION_OLD_ENTRY) {\n                set[key] = set[key] < 0 ? SELECTION_OLD_EXIT : SELECTION_NEW_EXIT;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Adds an array of ids to the old entry set.\n     *\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    update (ids) {\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_OLD_ENTRY;\n        });\n\n        return this;\n    }\n\n    /**\n     * Moves all ids which in new entry set  to old entry set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateEntry () {\n        const set = this._set;\n\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_ENTRY ? SELECTION_OLD_ENTRY : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Moves an array of ids which are in new exit set to old exit set.\n     *\n     * @public\n     *\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateExit () {\n        const set = this._set;\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_EXIT ? SELECTION_OLD_EXIT : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Removes an array of ids from the selection set. It also moves the remaining row ids to entry set.\n     *\n     * @public\n     * @param {Array.<string>} ids Array of unique ids\n     *\n     * @return {SelectionSet}  Instance of selection set\n     */\n    remove (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_EXIT;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_EXIT && set[key] !== SELECTION_OLD_EXIT) {\n                set[key] = set[key] === 0 ? SELECTION_NEW_ENTRY : SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n\n    getSets () {\n        const set = this._set;\n        const retObj = {\n            entrySet: [[], []],\n            exitSet: [[], []],\n            completeSet: []\n        };\n\n        for (const key in set) {\n            if (set[key] > 0) {\n                set[key] === SELECTION_OLD_ENTRY && retObj.entrySet[0].push(key);\n                set[key] === SELECTION_NEW_ENTRY && retObj.entrySet[1].push(key);\n            } else if (set[key] < 0) {\n                set[key] === SELECTION_OLD_EXIT && retObj.exitSet[0].push(key);\n                set[key] === SELECTION_NEW_EXIT && retObj.exitSet[1].push(key);\n            }\n            retObj.completeSet.push(key);\n        }\n\n        ['entrySet', 'exitSet'].forEach((type) => {\n            retObj[type] = retObj[type].map(e => e.map(Number));\n        });\n        retObj.completeSet = retObj.completeSet.map(Number);\n\n        return retObj;\n    }\n\n    /**\n     * Resets an array of ids in the selection set to initial state. It sets the value of every unique id value to\n     * null in the selection set which means they are neither in entry set nor in exit set. If no ids are passed,\n     * then it resets all the ids to null.\n     *\n     * @public\n     *\n     * @param {Array} ids Array of unique ids.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    reset (ids) {\n        const set = this._set;\n        if (ids) {\n            ids.forEach((i) => {\n                set[i] = SELECTION_NULL;\n            });\n        } else {\n            const lockedSel = this._lockedSelection;\n            for (const key in set) {\n                if (!(key in lockedSel)) {\n                    set[key] = SELECTION_NULL;\n                }\n            }\n        }\n        this._resetted = true;\n        return this;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     *\n     * @public\n     *\n     * @return {Array.<string>} Array of unique ids\n     */\n    getEntrySet () {\n        const set = this._set;\n        const addSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_ENTRY && addSet.push(key);\n        }\n\n        return addSet;\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in entry set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old entry set or new entry set\n     */\n    getExistingEntrySet (addSet) {\n        const set = this._set;\n        return addSet.filter(d => set[d] === SELECTION_NEW_ENTRY || set[d] === SELECTION_OLD_ENTRY);\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old exit set or new exit set\n     */\n    getExistingExitSet (removeSet) {\n        const set = this._set;\n        return removeSet.filter(d => set[d] === SELECTION_NEW_EXIT || set[d] === SELECTION_OLD_EXIT);\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldEntry () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_ENTRY && updateSet.push(key);\n        }\n        return updateSet;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldExit () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_EXIT && updateSet.push(key);\n        }\n\n        return updateSet;\n    }\n\n    /**\n     * Gets the array of ids which are in the exit set.\n     *\n     * @public\n     * @return {Array.<string>} Array of unique ids\n     */\n    getExitSet () {\n        const set = this._set;\n        const removeSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_EXIT && removeSet.push(key);\n        }\n        return removeSet;\n    }\n\n    /**\n     * Gets all the ids which are either in exit or entry set.\n     *\n     * @public\n     * @return {Array} Array of unique ids\n     */\n    getCompleteSet () {\n        const set = this._set;\n        const completeSet = [];\n\n        for (const key in set) {\n            completeSet.push(key);\n        }\n\n        return completeSet;\n    }\n\n    getCompleteSetCount () {\n        return this._completeSetCount;\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Swaps the add set and remove set in the selection set.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    toggle () {\n        const set = this._set;\n\n        for (const key in set) {\n            if (set[key] === SELECTION_NEW_ENTRY) {\n                set[key] = SELECTION_NEW_EXIT;\n            } else if (set[key] === SELECTION_NEW_EXIT) {\n                set[key] = SELECTION_NEW_ENTRY;\n            } else if (set[key] === SELECTION_OLD_ENTRY) {\n                set[key] = SELECTION_OLD_EXIT;\n            } else {\n                set[key] = SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n}\n\nexport default SelectionSet;\n","import { clone } from 'muze-utils';\nimport * as SELECTION from '../enums/selection';\n\nexport const initializeSideEffects = (context, sideEffects) => {\n    const sideEffectsMap = context._sideEffects;\n    const config = context.config();\n    sideEffects = sideEffects instanceof Array ? sideEffects : Object.values(sideEffects);\n    sideEffects.forEach((SideEffect) => {\n        const formalName = SideEffect.formalName();\n        const sideEffectInstance = sideEffectsMap[formalName];\n        sideEffectsMap[formalName] = sideEffectInstance || new SideEffect(context);\n        const sideEffectConf = config[formalName];\n        sideEffectConf && sideEffectsMap[formalName].config(sideEffectConf);\n    });\n    return sideEffectsMap;\n};\n\nexport const initializeBehaviouralActions = (context, actions) => {\n    const dispatchableBehaviours = {};\n\n    actions = actions instanceof Array ? actions : Object.values(actions);\n    actions.forEach((Action) => {\n        dispatchableBehaviours[Action.formalName()] = new Action(context);\n    });\n    return dispatchableBehaviours;\n};\n\nexport const initializePhysicalActions = (context, actions) => {\n    const physicalActions = {};\n\n    for (const name in actions) {\n        if (!({}).hasOwnProperty.call(name, actions)) {\n            physicalActions[name] = actions[name](context);\n        }\n    }\n    return physicalActions;\n};\n\nexport const changeSideEffectAvailability = (context, fn, toEnable) => {\n    const sideEffects = context.sideEffects();\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            let change = true;\n            if (fn && fn(key) === false) {\n                change = false;\n            }\n            if (change) {\n                toEnable ? sideEffects[key].enable() : sideEffects[key].disable();\n            }\n        }\n    }\n};\n\nexport const getMergedSet = set => [...new Set([...set[0], ...set[1]])];\n\nexport const getSourceFields = (propagationInf, criteria = {}) => {\n    const sourceIdentifiers = propagationInf.sourceIdentifiers;\n    let sourceFields;\n    if (sourceIdentifiers) {\n        sourceFields = sourceIdentifiers.getSchema().map(d => d.name);\n    } else if (criteria instanceof Array) {\n        sourceFields = criteria[0];\n    } else {\n        sourceFields = Object.keys(criteria || {});\n    }\n    return sourceFields;\n};\n\nconst conditionsMap = {\n    newEntry: [SELECTION.SELECTION_NEW_ENTRY],\n    oldEntry: [SELECTION.SELECTION_OLD_ENTRY],\n    mergedEnter: [SELECTION.SELECTION_NEW_ENTRY, SELECTION.SELECTION_OLD_ENTRY],\n    newExit: [SELECTION.SELECTION_NEW_EXIT],\n    oldExit: [SELECTION.SELECTION_OLD_EXIT],\n    mergedExit: [SELECTION.SELECTION_NEW_EXIT, SELECTION.SELECTION_OLD_EXIT],\n    complete: []\n};\n\nexport const getModelFromSet = (type, model, set) => {\n    if (model) {\n        return model.select((fields, i) =>\n           (conditionsMap[type].some(condition => set[i] === condition)), {\n               saveChild: false\n           });\n    }\n    return null;\n};\n\nexport const getSetInfo = (type, set, config) => {\n    let model = null;\n    const filteredDataModel = config.filteredDataModel;\n    const selectionSet = config.selectionSet;\n    if (!config.propagationData) {\n        if (selectionSet.resetted()) {\n            model = null;\n        } else {\n            model = getModelFromSet(type, config.dataModel, config.selectionSet._set);\n        }\n    } else if (filteredDataModel) {\n        model = type === 'mergedEnter' ? filteredDataModel[0] : filteredDataModel[1];\n    }\n    return {\n        uids: set,\n        length: set.length,\n        model\n    };\n};\n\nexport const getSideEffects = (behaviour, behaviourEffectMap) => {\n    const sideEffects = [];\n    for (const key in behaviourEffectMap) {\n        const behaviours = key.split(',');\n        const found = behaviours.some(d => d === behaviour);\n        if (found) {\n            sideEffects.push({\n                effects: behaviourEffectMap[key],\n                behaviours\n            });\n        }\n    }\n    return sideEffects;\n};\n\nexport const unionSets = (context, behaviours) => {\n    let combinedSet = {};\n    const models = {\n        mergedEnter: null,\n        mergedExit: null\n    };\n    behaviours.forEach((behaviour) => {\n        const entryExitSet = context._entryExitSet[behaviour];\n        if (entryExitSet) {\n            combinedSet = Object.assign(combinedSet, clone(entryExitSet));\n            ['mergedEnter', 'mergedExit'].forEach((type) => {\n                const model = entryExitSet[type].model;\n                let existingModel = models[type];\n                if (!existingModel) {\n                    existingModel = models[type] = model;\n                } else if (`${model.getSchema().map(d => d.name).sort()}` ===\n                    `${existingModel.getSchema().map(d => d.name).sort()}`) {\n                    existingModel = models[type] = model.union(existingModel);\n                } else {\n                    existingModel = model;\n                }\n                combinedSet[type].model = existingModel;\n            });\n        }\n    });\n    return combinedSet;\n};\n","import {\n    mergeRecursive,\n    hasTouch,\n    filterPropagationModel,\n    FieldType,\n    selectElement,\n    isSimpleObject\n} from 'muze-utils';\nimport { ALL_ACTIONS } from './enums/actions';\nimport SelectionSet from './selection-set';\nimport {\n    initializeBehaviouralActions,\n    initializeSideEffects,\n    changeSideEffectAvailability,\n    initializePhysicalActions,\n    unionSets,\n    getSideEffects\n} from './helper';\n\n/**\n * This class is responsible for dispatching behavioural actions and side effects. It also keeps the information of\n * registered physical actions, behavioural actions and side effects. Also, it keeps the map of physical and behavioural\n * actions and behavioural actions and side effects. Whenever any behavioural action is dispatched, it also propagates\n * the rows which got affected to the other datamodels. This class is initialized by {@link VisualUnit} and legend to\n * manage it's interaction.\n *\n * @public\n * @class Firebolt\n * @module Firebolt\n */\nexport default class Firebolt {\n    constructor (context, actions, sideEffects, behaviourEffectMap) {\n        this.context = context;\n        this._sideEffectDefinitions = {};\n        this._sideEffects = {};\n        this._propagationInf = {};\n        this._actions = {\n            behavioural: {},\n            physical: {}\n        };\n        this._selectionSet = {};\n        this._volatileSelectionSet = {};\n        this._propagationFields = {};\n        this._sourceSideEffects = {\n            selectionBox: () => false\n        };\n        this._propagationBehaviourMap = {};\n        this._sourceBehaviours = {};\n        this._actionBehaviourMap = {};\n        this._config = {};\n        this._behaviourEffectMap = {};\n        this._entryExitSet = {};\n        this._actionHistory = {};\n        this._queuedSideEffects = {};\n\n        this.mapSideEffects(behaviourEffectMap);\n        this.registerBehaviouralActions(actions.behavioural);\n        this.registerSideEffects(sideEffects);\n        this.registerPhysicalBehaviouralMap(actions.physicalBehaviouralMap);\n        this.registerPhysicalActions(actions.physical);\n    }\n\n    config (...config) {\n        if (config.length) {\n            this._config = mergeRecursive(this._config, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    mapSideEffects (behEffectMap) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        for (const key in behEffectMap) {\n            if ({}.hasOwnProperty.call(behEffectMap, key)) {\n                const sideEffects = behEffectMap[key] || [];\n                let preventDefaultActions = false;\n                let effectNames;\n                if (isSimpleObject(sideEffects)) {\n                    effectNames = sideEffects.effects;\n                    preventDefaultActions = sideEffects.preventDefaultActions;\n                } else {\n                    effectNames = sideEffects;\n                }\n                !behaviourEffectMap[key] && (behaviourEffectMap[key] = []);\n                this._behaviourEffectMap[key] = [...new Set(preventDefaultActions ? effectNames :\n                    [...behaviourEffectMap[key], ...effectNames])];\n            }\n        }\n        return this;\n    }\n\n    registerBehaviouralActions (actions) {\n        const behaviours = initializeBehaviouralActions(this, actions);\n        this.prepareSelectionSets(behaviours);\n        Object.assign(this._actions.behavioural, behaviours);\n        return this;\n    }\n\n    prepareSelectionSets () {\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        this.initializeSideEffects();\n        return this;\n    }\n\n    applySideEffects (sideEffects, selectionSet, payload) {\n        const sideEffectStore = this.sideEffects();\n        const actionHistory = this._actionHistory;\n        const queuedSideEffects = this._queuedSideEffects;\n        sideEffects.forEach((sideEffect) => {\n            let options;\n            let name;\n            const effects = sideEffect.effects;\n            const behaviours = sideEffect.behaviours;\n            const combinedSet = unionSets(this, behaviours, selectionSet);\n            effects.forEach((effect) => {\n                if (typeof effect === 'object') {\n                    name = effect.name;\n                    options = effect.options;\n                } else {\n                    name = effect;\n                }\n\n                const sideEffectInstance = sideEffectStore[name];\n                if (sideEffectInstance.isEnabled()) {\n                    if (!sideEffectInstance.constructor.mutates() &&\n                        Object.values(actionHistory).some(d => d.isMutableAction)) {\n                        queuedSideEffects[`${name}-${behaviours.join()}`] = {\n                            name,\n                            params: [combinedSet, payload, options]\n                        };\n                    } else {\n                        this.dispatchSideEffect(name, combinedSet, payload, options);\n                    }\n                }\n            });\n        });\n        return this;\n    }\n\n    dispatchSideEffect (name, selectionSet, payload, options = {}) {\n        const sideEffectStore = this.sideEffects();\n        const sideEffect = sideEffectStore[name];\n        let disable = false;\n        if (options.filter && options.filter(sideEffect)) {\n            disable = true;\n        }\n        !disable && sideEffectStore[name].apply(selectionSet, payload, options);\n    }\n\n    registerPropagationBehaviourMap (map) {\n        this._propagationBehaviourMap = Object.assign(this._propagationBehaviourMap, map || {});\n        return this;\n    }\n\n    dispatchBehaviour (behaviour, payload, propagationInfo = {}) {\n        const propagate = propagationInfo.propagate !== undefined ? propagationInfo.propagate : true;\n        const behaviouralActions = this._actions.behavioural;\n        const action = behaviouralActions[behaviour];\n        const behaviourEffectMap = this._behaviourEffectMap;\n        const sideEffects = getSideEffects(behaviour, behaviourEffectMap);\n        this._propagationInf = propagationInfo;\n\n        if (action) {\n            const selectionSet = action.dispatch(payload);\n            const propagationSelectionSet = this.getPropagationSelectionSet(selectionSet);\n            this._entryExitSet[behaviour] = propagationSelectionSet;\n            const shouldApplySideEffects = this.shouldApplySideEffects(propagate);\n\n            if (propagate) {\n                this.propagate(behaviour, payload, selectionSet.find(d => d.sourceSelectionSet), sideEffects);\n            }\n            if (shouldApplySideEffects) {\n                const applicableSideEffects = this.getApplicableSideEffects(sideEffects, payload, propagationInfo);\n                this.applySideEffects(applicableSideEffects, propagationSelectionSet, payload);\n            }\n        }\n\n        return this;\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet.find(d => !d.sourceSelectionSet);\n    }\n\n    shouldApplySideEffects () {\n        return true;\n    }\n\n    changeBehaviourStateOnPropagation (behaviour, value) {\n        if (value instanceof Function) {\n            this._sourceBehaviours[behaviour] = value;\n        } else {\n            this._sourceBehaviours[behaviour] = () => value;\n        }\n        return this;\n    }\n\n    changeSideEffectStateOnPropagation (sideEffect, value) {\n        if (value instanceof Function) {\n            this._sourceSideEffects[sideEffect] = value;\n        } else {\n            this._sourceSideEffects[sideEffect] = () => value;\n        }\n    }\n\n    propagate () {\n        return this;\n    }\n\n    sideEffects (...sideEffects) {\n        if (sideEffects.length) {\n            this._sideEffects = sideEffects[0];\n            return this;\n        }\n        return this._sideEffects;\n    }\n\n    enableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, true);\n        return this;\n    }\n\n    disableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, false);\n        return this;\n    }\n\n    dissociateBehaviour (behaviour, physicalAction) {\n        const actionBehaviourMap = this._actionBehaviourMap;\n        for (const key in actionBehaviourMap) {\n            if (key === physicalAction) {\n                const behaviourMap = actionBehaviourMap[key];\n                behaviourMap.behaviours = behaviourMap.behaviours.filter(d => d !== behaviour);\n                this.mapActionsAndBehaviour(key);\n            }\n        }\n\n        return this;\n    }\n\n    dissociateSideEffect (sideEffect, behaviour) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        behaviourEffectMap[behaviour] = behaviourEffectMap[behaviour].filter(d => (d.name || d) !== sideEffect);\n        return this;\n    }\n\n    getApplicableSideEffects (sideEffects) {\n        return sideEffects;\n    }\n\n    attachPropagationListener (dataModel) {\n        dataModel.unsubscribe('propagation');\n        dataModel.on('propagation', this.onDataModelPropagation());\n        return this;\n    }\n\n    onDataModelPropagation () {\n        return (propValue) => {\n            const payload = propValue.payload;\n            const action = payload.action;\n\n            this.dispatchBehaviour(action, payload, {\n                propagate: false\n            });\n        };\n    }\n\n    createSelectionSet (uniqueIds, behaviouralActions) {\n        const behaviours = behaviouralActions || this._actions.behavioural;\n        const selectionSet = this._selectionSet;\n        const volatileSelectionSet = this._volatileSelectionSet;\n\n        for (const key in behaviours) {\n            if ({}.hasOwnProperty.call(behaviours, key)) {\n                selectionSet[key] = new SelectionSet(uniqueIds);\n                volatileSelectionSet[key] = new SelectionSet(uniqueIds, true);\n            }\n        }\n        this._volatileSelectionSet = volatileSelectionSet;\n        this.selectionSet(selectionSet);\n        return this;\n    }\n\n    selectionSet (...selectionSet) {\n        if (selectionSet.length) {\n            this._selectionSet = selectionSet[0];\n            return this;\n        }\n        return this._selectionSet;\n    }\n\n    initializeSideEffects () {\n        const sideEffectDefinitions = this._sideEffectDefinitions;\n        this.sideEffects(initializeSideEffects(this, sideEffectDefinitions));\n        return this;\n    }\n\n    registerPhysicalActions (actions) {\n        const initedActions = initializePhysicalActions(this, actions);\n        Object.assign(this._actions.physical, initedActions);\n        return this;\n    }\n\n    /**\n     * Allows to propagate the datamodel with only the supplied fields. When propagation is done, then the fields\n     * which are supplied for the specified behavioural action is propagated.\n     *\n     * @public\n     *\n     * @param {string} action Name of behavioural action. If '*' is specified, then for all behavioural actions it is\n     * applied.\n     * @param {Array} fields Array of field names which will be propagated.\n     * @param {boolean} append If true, then it is appended to the existing propagation data model fields else only\n     * those fields are projected from propagation data model and propagated.\n     *\n     * @return {Firebolt} Instance of firebolt\n     */\n    propagateWith (action, fields, append = false) {\n        const behaviouralActions = this._actions.behavioural;\n        if (fields.length) {\n            if (action === ALL_ACTIONS) {\n                for (const key in behaviouralActions) {\n                    this._propagationFields[key] = {\n                        fields,\n                        append\n                    };\n                }\n            } else {\n                this._propagationFields[action] = {\n                    fields,\n                    append\n                };\n            }\n            return this;\n        }\n        return this._propagationFields;\n    }\n\n    /**\n     * Map actions and behaviours\n     * @return {Firebolt} Firebolt instance\n     */\n    mapActionsAndBehaviour (phyAction) {\n        const initedPhysicalActions = this._actions.physical;\n        const map = this._actionBehaviourMap;\n\n        for (const action in map) {\n            if (!({}).hasOwnProperty.call(action, map) && action === (phyAction || action)) {\n                let target;\n                const mapObj = map[action];\n                target = mapObj.target;\n                const touch = mapObj.touch;\n                if (!target) {\n                    target = this.context.getDefaultTargetContainer();\n                }\n                const bind = hasTouch() ? touch === true || touch === undefined : !touch;\n                bind && this.bindActionWithBehaviour(initedPhysicalActions[action],\n                    target, mapObj.behaviours);\n            }\n        }\n        return this;\n    }\n\n    registerPhysicalBehaviouralMap (map) {\n        this._actionBehaviourMap = mergeRecursive(this._actionBehaviourMap, map);\n        return this;\n    }\n\n    /**\n     * Binds a target element with an action.\n     *\n     * @param {Function} action Action method\n     * @param {string} target Class name of element\n     * @param {Array} behaviourList Array of behaviours\n     * @return {FireBolt} Instance of firebolt\n     */\n    bindActionWithBehaviour (action, targets, behaviourList) {\n        if (typeof (targets) === 'string') {\n            targets = [targets];\n        }\n        targets.forEach((target) => {\n            const mount = this.context.mount();\n            const nodes = target.node instanceof Function ? target : selectElement(mount).selectAll(target);\n            if (!nodes.empty()) {\n                if (nodes instanceof Array) {\n                    nodes.forEach((node) => {\n                        action(selectElement(node), behaviourList);\n                    });\n                } else {\n                    action(nodes, behaviourList);\n                }\n            }\n        });\n        return this;\n    }\n\n    getPropagationInf () {\n        return this._propagationInf;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.context;\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all');\n        const xFields = context.fields().x || [];\n        const yFields = context.fields().y || [];\n        const xMeasures = xFields.every(field => field.type() === FieldType.MEASURE);\n        const yMeasures = yFields.every(field => field.type() === FieldType.MEASURE);\n        return {\n            model: filteredDataModel,\n            uids: criteria === null ? null : (propagationInf.data ? filterPropagationModel(this.getFullData(),\n                propagationInf.data[0], xMeasures && yMeasures).getData().uids : filteredDataModel[0].getData().uids)\n        };\n    }\n\n    getSelectionSets (action) {\n        const sourceId = this.context.id();\n        const propagationInf = this._propagationInf || {};\n        const propagationSource = propagationInf.sourceId;\n        let applicableSelectionSets = [];\n        if (propagationSource !== sourceId) {\n            applicableSelectionSets = [this._volatileSelectionSet[action]];\n        }\n\n        if (propagationSource) {\n            applicableSelectionSets.push(this.selectionSet()[action]);\n        }\n        return applicableSelectionSets;\n    }\n\n    getFullData () {\n        return this.context.data();\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Returns the entry and exit set information of the specified behavioural action.\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of behavioural action.\n     *\n     * @return {Object} Entry exit set information.\n     */\n    getEntryExitSet (behaviour) {\n        return this._entryExitSet[behaviour];\n    }\n}\n","import { getSetInfo, getMergedSet, getSourceFields } from '../../helper';\n\n/**\n * This is the base class has all the common functionalities needed for all behavioural actions. Any other behavioural\n * action needs to extend this class.\n *\n * @public\n * @class GenericBehaviour\n * @module GenericBehaviour\n */\nexport default class GenericBehaviour {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n    }\n\n    /**\n     * Returns entry and exit set information. This method is called by firebolt when ```dispatchBehaviour``` is called\n     * dynamically or when any physical action is triggered on the chart.\n     *\n     * @param {Object} payload Payload information.\n     * @param {Object|Array} payload.criteria Identifiers of data interacted with.\n     *\n     * @return {Array} Entry and exit set information.\n     */\n    dispatch (payload) {\n        const criteria = payload.criteria;\n        const firebolt = this.firebolt;\n        const formalName = this.constructor.formalName();\n        const selectionSets = firebolt.getSelectionSets(formalName);\n        const {\n            model: filteredDataModel,\n            uids\n        } = this.firebolt.getAddSetFromCriteria(criteria, this.firebolt.getPropagationInf());\n        const entryExitSets = selectionSets.map((selectionSet) => {\n            this.setSelectionSet(uids, selectionSet);\n            return this.getEntryExitSet(selectionSet, filteredDataModel, payload);\n        });\n\n        return entryExitSets;\n    }\n\n    /**\n     * Updates the selection set by adding uids to the instance of {@link SelectionSet} or removing them.\n     * {@link SelectionSet} keeps the information of which rows are in the entry set and exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of row ids which got affected during interaction.\n     * @param {SelectionSet} selectionSet Instance of selection set.\n     *\n     * @return {GenericBehaviour} Instance of behaviour.\n     */\n    setSelectionSet () {\n        return this;\n    }\n\n    getEntryExitSet (selectionSet, filteredDataModel, payload) {\n        const {\n            entrySet,\n            exitSet,\n            completeSet\n        } = selectionSet.getSets();\n        const propagationInf = this.firebolt.getPropagationInf();\n        const dataModel = this.firebolt.getFullData();\n        const setConfig = {\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            dataModel,\n            filteredDataModel,\n            propagationData: propagationInf.data,\n            selectionSet\n        };\n\n        return {\n            entrySet: [getSetInfo('oldEntry', entrySet[0], setConfig),\n                getSetInfo('newEntry', entrySet[1], setConfig)],\n            exitSet: [getSetInfo('oldEntry', exitSet[0], setConfig),\n                getSetInfo('newExit', exitSet[1], setConfig)],\n            mergedEnter: getSetInfo('mergedEnter', getMergedSet(entrySet), setConfig),\n            mergedExit: getSetInfo('mergedExit', getMergedSet(exitSet), setConfig),\n            completeSet: getSetInfo('complete', completeSet, setConfig),\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            fields: getSourceFields(propagationInf, payload.criteria),\n            sourceSelectionSet: selectionSet._volatile === true\n        };\n    }\n\n    static mutates () {\n        return false;\n    }\n\n    enable () {\n        this._enabled = true;\n    }\n\n    disable () {\n        this._enabled = false;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n}\n\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class VolatileBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n                // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                    || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            selectionSet.updateExit();\n            const { entrySet } = selectionSet.getSets();\n            selectionSet.reset(getMergedSet(entrySet));\n            selectionSet.add(addSet);\n            selectionSet.update(existingAddSet);\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n    }\n}\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n","import VolatileBehaviour from './volatile';\nimport { HIGHLIGHT } from '../../enums/behaviours';\n\nexport default class HighlightBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return HIGHLIGHT;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport * as BEHAVIOURNAMES from '../../enums/behaviours';\n\n/**\n * This is the behaviour for brushing a region on the chart. It accepts a payload\n * which contains the x and y range of the data and other configuration. It will then\n * create a selection box from the range and select the points which fall within the range.\n */\nexport default class BrushBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return BEHAVIOURNAMES.BRUSH;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport { FILTER } from '../../enums/behaviours';\n\nexport default class FilterBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return FILTER;\n    }\n\n    static mutates () {\n        return true;\n    }\n}\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class PersistentBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            const propagationInf = this.firebolt.getPropagationInf();\n            // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            if (propagationInf.propagate === false) {\n                selectionSet.updateExit();\n                const { entrySet } = selectionSet.getSets();\n                selectionSet.reset(getMergedSet(entrySet));\n                selectionSet.add(addSet);\n                selectionSet.update(existingAddSet);\n            } else {\n                // existing add set\n                if (existingAddSet.length) {\n                    selectionSet.updateExit();\n                    selectionSet.remove(existingAddSet);\n                } else {\n                    selectionSet.updateEntry();\n                    selectionSet.add(addSet);\n                }\n                const { exitSet } = selectionSet.getSets();\n                const mergedExitSet = getMergedSet(exitSet);\n                const completeSetCount = selectionSet.getCompleteSet().length;\n                if (mergedExitSet.length === completeSetCount) {\n                    selectionSet.reset();\n                }\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n\n        return this;\n    }\n}\n","import PersistentBehaviour from './persistent';\nimport { SELECT } from '../../enums/behaviours';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return SELECT;\n    }\n}\n\n","import { DimensionSubtype, MeasureSubtype } from 'muze-utils';\n/**\n * Gets the drag action configuration\n * @param {VisualUnit} instance instance of visual unit\n * @param {Object} config x y positions\n * @return {Object} Payload of behaviour\n*/\n/* istanbul ignore next */ const getDragActionConfig = (sourceInfo, config, fieldsConfig) => {\n    if (!(sourceInfo.axes.x || sourceInfo.axes.y)) {\n        return {\n            criteria: null\n        };\n    }\n\n    const axes = sourceInfo.axes;\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const axisFields = sourceInfo.fields;\n    const xField = axisFields.x[0].getMembers()[0];\n    const yField = axisFields.y[0].getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n    const dimensions = {};\n    const stPos = config.startPos;\n    const endPos = config.endPos;\n\n    if (stPos.x === endPos.x && stPos.y === endPos.y) {\n        return {\n            criteria: null\n        };\n    }\n\n    const dragDim = xFieldType === MeasureSubtype.CONTINUOUS ? (yFieldType === MeasureSubtype.CONTINUOUS ?\n        ['x', 'y'] : ['y']) : ['x'];\n    const criteria = {};\n    const isXDimension = xFieldType === DimensionSubtype.CATEGORICAL;\n    const isYDimension = yFieldType === DimensionSubtype.CATEGORICAL;\n    const xRange = xAxis.invertExtent(stPos.x, endPos.x);\n    const yRange = yAxis.invertExtent(stPos.y, endPos.y);\n    const selectedDomains = {\n        x: stPos.x === endPos.x ? [] : (isXDimension ? xRange : xRange.sort((a, b) => a - b)),\n        y: stPos.y === endPos.y ? [] : (isYDimension ? yRange : yRange.sort((a, b) => a - b))\n    };\n    const rangeObj = {};\n\n    if (dragDim.length === 2) {\n        rangeObj[xField] = selectedDomains.x;\n        rangeObj[yField] = selectedDomains.y;\n        if (xField === yField) {\n            const xdom = selectedDomains.x;\n            const ydom = selectedDomains.y;\n            const min = xdom[0] > ydom[0] ? ydom : xdom;\n            const max = min === ydom ? xdom : ydom;\n            if (min[1] < max[0]) {\n                rangeObj[xField] = [];\n            } else {\n                rangeObj[xField] = [max[0], min[1] < max[1] ? min[1] : max[1]];\n            }\n            dimensions.x = [stPos.x, endPos.x];\n            dimensions.y = [stPos.y, endPos.y];\n        }\n    } else {\n        criteria[dragDim[0]] = selectedDomains[dragDim[0]] || [];\n\n        if (dragDim[0] === 'x') {\n            rangeObj[xField] = criteria.x;\n            if (xFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.x = (config.snap && stPos.x !== endPos.x) ? xAxis.getNearestRange(stPos.x, endPos.x) :\n                    [stPos.x, endPos.x];\n            }\n        } else {\n            rangeObj[yField] = criteria.y;\n            if (yFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.y = (config.snap && stPos.y !== endPos.y) ? yAxis.getNearestRange(stPos.y, endPos.y) :\n                    [stPos.y, endPos.y];\n            }\n        }\n    }\n\n    return {\n        criteria: rangeObj,\n        dimensions\n    };\n};\n\nexport default getDragActionConfig;\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './drag-action-config';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const attachDragEvent = (targetEl, behaviours, firebolt, touch) => {\n    let startPos = {};\n    let endPos = {};\n    let drawingInf;\n\n    const d3Drag = getD3Drag();\n    let touchStart;\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n        drawingInf = firebolt.context.getDrawingContext();\n        touchStart = new Date().getTime();\n    }).on('drag', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        if (touch && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos\n        }, firebolt.context.data().getFieldsConfig());\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }).on('end', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        const duration = new Date().getTime() - touchStart;\n\n        if (touch && duration > 100 && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos,\n            snap: true\n        }, firebolt.context.data().getFieldsConfig());\n        payload.dragEnd = true;\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }));\n};\n\n","import { getClientPoint, getEvent } from 'muze-utils';\nimport { CONSOLIDATED, FRAGMENTED } from '../../enums/constants';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} instance instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const context = firebolt.context;\n        const tooltipConf = context.config().interaction.tooltip;\n        const mode = tooltipConf.mode;\n        const pos = getClientPoint(context.getDrawingContext().svgContainer, event);\n        const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n            getAllPoints: mode === CONSOLIDATED || mode === FRAGMENTED,\n            data: args,\n            event\n        });\n        const payload = {\n            criteria: nearestPoint ? nearestPoint.id : null,\n            showInPosition: nearestPoint.showInPosition,\n            target: nearestPoint.target,\n            position: pos,\n            mode\n        };\n\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                            criteria: null\n                        }));\n                    });\n};\n\nexport default hover;\n","export const CLASSPREFIX = 'muze';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\n\n","import { getClientPoint } from 'muze-utils';\n\nexport const generatePayloadFromEvent = function (args, event, firebolt) {\n    const context = firebolt.context;\n    const pos = getClientPoint(context.getDrawingContext().svgContainer, event.touches ? event.touches[0] : event);\n    const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n        data: args,\n        event\n    });\n    return {\n        criteria: nearestPoint ? nearestPoint.id : null,\n        showInPosition: nearestPoint.showInPosition,\n        target: nearestPoint.target,\n        position: pos\n    };\n};\n","import { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport { longtouch } from './longtouch';\nimport { touchdrag } from './touch-drag';\nimport * as ACTIONNAMES from '../../enums/actions';\nimport click from './click';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click,\n    [ACTIONNAMES.LONGTOUCH]: longtouch,\n    [ACTIONNAMES.TOUCHDRAG]: touchdrag\n};\n\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt);\n};\n\nexport default drag;\n","/* global setTimeout */\nimport { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nexport const longtouch = firebolt => (targetEl, behaviours) => {\n    let event;\n    let touchEnd;\n    const dispatchBehaviour = function (args) {\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    touchEnd = false;\n    event = getEvent();\n    targetEl.on('touchstart', (args) => {\n        event = getEvent();\n        touchEnd = false;\n        setTimeout(() => {\n            if (!touchEnd) {\n                dispatchBehaviour(args);\n            } else {\n                behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                    criteria: null\n                }));\n            }\n        }, 100);\n    }).on('touchend', () => {\n        touchEnd = true;\n    });\n};\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const touchdrag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt, true);\n};\n\n","export const PROPS = {\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import GenericSideEffect from './generic-sideeffect';\n\nexport default GenericSideEffect;\n","import { mergeRecursive, getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { PROPS } from './props';\n\n/**\n * This is the base class of all side effects. It contains all common methods like setting configuration, disabling,\n * enabling side effect, etc. Every new side effect has to inherit this class or {@link SpawnableSideEffect} or\n * {@link SurrogateSideEffect} class. All side effects are initialized by firebolt. The instance of firebolt is\n * passed on initialization. The firebolt instance contains ```context``` which is the instance of visual unit with\n * which the firebolt is attached.\n *\n * @public\n * @class\n * @module GenericSideEffect\n */\nexport default class GenericSideEffect {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n        this._strategy = 'default';\n        this._config = {};\n        this._id = getUniqueId();\n        this._strategies = {};\n        generateGetterSetters(this, PROPS);\n        this.config(this.constructor.defaultConfig());\n    }\n\n    /**\n     * Returns the default configuration of the side effect.\n     *\n     * @public\n     * @return {Object} Default configuration of side effect.\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the formal name of a side effect. This method must be implemented by all side effects which changes\n     * or adds any element in the visualization.\n     *\n     * @return {string} Formal name of side effect.\n     */\n    static formalName () {\n        return 'generic';\n    }\n\n    static target () {\n        return 'all';\n    }\n\n    /**\n     * Returns true if the side effects mutates the data of chart.\n     *\n     * @public\n     *\n     * @return {boolean} If the side effect mutates the data of chart.\n     */\n    static mutates () {\n        return false;\n    }\n\n    /**\n     * Sets or gets the configuration of side effect.\n     *\n     * When setter,\n     * @param {Object} config Configuration of side effect.\n     * @return {GenericSideEffect} Side effect instance.\n     *\n     * When getter,\n     * @return {Object} Side effect configuration.\n     */\n    config (...params) {\n        if (params.length) {\n            this._config = mergeRecursive(this._config, params[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    disable () {\n        this._enabled = false;\n        return this;\n    }\n\n    enable () {\n        this._enabled = true;\n        return this;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n\n    /**\n     * Applies the interaction effect on the chart. This is where the implemntation of the side effect is defined.\n     *\n     * @param {Object} selectionSet Contains the entry and exit set of data which got affected during interaction.\n     * @param {Object} selectionSet.mergedEnter Combined previous entry and new entry set.\n     * @param {DataModel} selectionSet.mergedEnter.model Instance of data model containing all rows which got\n     * affected during interaction.\n     * @param {Array} selectionSet.mergedEnter.uids Ids of all rows which were affected during interaction.\n     * @param {Object} selectionSet.mergedExit Combined previous exit and new exit set.\n     * @param {DataModel} selectionSet.mergedExit.model Instance of data model containing rows which were not affected\n     * during interaction.\n     * @param {Array} selectionSet.mergedExit.uids Ids of all rows which were not affected during interaction.\n     * @param {Object} selectionSet.entrySet Entry set information.\n     * @param {Array} selectionSet.entrySet[0].uids All row ids which got affected during previous interaction.\n     * @param {Array} selectionSet.entrySet[1].uids All row ids which got affected during current interaction.\n     * @param {Array} selectionSet.exitSet[0].uids All row ids which were not affected during previous interaction.\n     * @param {Array} selectionSet.exitSet[1].uids All row ids which were not affected during current interaction.\n     * @param {Object} payload Payload information of the behavioural action on trigger of which this side effect\n     * is applied.\n     * @param {Object} options Optional information for side effect like strategy, etc.\n     */\n    apply () {\n        return this;\n    }\n\n    /**\n     * Adds a new strategy method for this side effect. The strategy method is implemented by side effect class.\n     *\n     * @param {string} name Name of the strategy.\n     * @param {Function} fn Strategy method.\n     *\n     * @return {GenericSideEffect} Instance of side effect.\n     */\n    addStrategy (name, fn) {\n        this._strategies[name] = fn;\n        return this;\n    }\n}\n","import GenericSideEffect from './generic';\n\n/**\n * This class is inherited by all side effects which changes the look of any existing elements in the visualization.\n * For example, if a side effect wants to change the color of bar plots, then it is a surrogate side effect.\n *\n * To use this,\n * ```\n *      const SurrogateSideEffect = muze.SideEffects.standards.SurrogateSideEffect;\n *\n *      class BarColorChanger extends SurrogateSideEffect {\n *          static formalName () {\n *              return 'colorChanger';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n *\n * @module SurrogateSideEffect\n * @class\n * @extends GenericSideEffect\n */\nexport default class SurrogateSideEffect extends GenericSideEffect {\n    /**\n     * Applies or removes interaction styles from plot elements. An array of row ids needs to be passed\n     * which identifies the plot elements and applies styles to them.\n     *\n     * To apply the interaction style,\n     * ```\n     *      const entryRowIds = entrySet[0].uids;\n     *      const interactionStyle = [{\n     *          type: 'fill',\n     *          intensity: [0, 0, 15, 0] // hsla configuration\n     *      }];\n     *\n     *      this.applyInteractionStyle(entryRowIds, interactionStyle, 'brighten', true);\n     * ```\n     * @public\n     * @param {Array} set Array of row ids.\n     * @param {Array} config Style configuration.\n     * @param {Object} config[0] fill or stroke configuration.\n     * @param {string} config[0].type Type of style - fill or stroke.\n     * @param {Array} config[0].intensity hsla configuration.\n     * @param {string} interactionType Type of interaction. This is needed for storing the styles for\n     * each type of interaction in the plot elements.\n     * @param {boolean} apply Whether to apply or remove the interaction style.\n     *\n     * @return {SurrogateSideEffect} Instance of surrogate side effect.\n     */\n    applyInteractionStyle (set, config = {}, interactionType, apply) {\n        const layers = this.firebolt.context.layers();\n        layers.forEach(layer => layer.config().interactive !== false &&\n            layer.applyInteractionStyle(interactionType, set.uids, apply));\n        return this;\n    }\n}\n","import { makeElement } from 'muze-utils';\n\nimport GenericSideEffect from './generic';\n\n/**\n * Any side effect which will add any new element to the chart like drawing a rectangular box or any annotation over\n * the chart needs to inherit this class. This class has methods which returns the container where the dom elements\n * needs to be created.\n *\n * To use this,\n * ```\n *      const SpawnableSideEffect = muze.SideEffects.standards.SpawnableSideEffect;\n *\n *      class SelectionBox extends SpawnableSideEffect {\n *          static formalName () {\n *              return 'selectionBox';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n * @class\n * @extends GenericSideEffect\n * @module SpawnableSideEffect\n */\nexport default class SpawnableSideEffect extends GenericSideEffect {\n    /**\n     * Creates a html or svg element in the container.\n     *\n     * @public\n     * @param {SVGElement|HTMLElement} container Container where the dom element will be rendered.\n     * @param {string} elemType Type of dom element.\n     * @param {Array} data Array of objects with which the dom elements will be binded.\n     * @param {string} className class name of the element.\n     *\n     * @return {Selection} D3 Selection of the element.\n     */\n    createElement (container, elemType, data, className, callbacks) {\n        return makeElement(container, elemType, data, className, callbacks);\n    }\n\n    /**\n     * Returns the drawing information for side effect like svg container, dimensions of the visual unit.\n     *\n     * @public\n     * @return {Object} Drawing information for side effect.\n     * ```\n     *      sideEffectGroup: // svg container where the side effect needs to be appended.\n     *      svgContainer: // svg container of the {@link VisualUnit}.\n     *      htmlContainer: // html div container of the {@link VisualUnit}.\n     *      width: // Width of the {@link VisualUnit}\n     *      height: // Height of the {@link VisualUnit}\n     * ```\n     */\n    drawingContext (...drawingContext) {\n        if (drawingContext.length) {\n            this._drawingContext = drawingContext[0];\n            return this;\n        }\n        return this._drawingContext();\n    }\n\n    show () {\n        return this;\n    }\n\n    hide () {\n        return this;\n    }\n}\n","import { selectElement } from 'muze-utils';\n\nexport const getBoxDimensionsFromPayload = (payload, axes, axisFields) => {\n    let x1;\n    let x2;\n    let y1;\n    let y2;\n    let xRange;\n    let yRange;\n    let direction;\n    const criteria = payload.criteria;\n    const dimensions = payload.dimensions || {};\n    const xDim = dimensions.x;\n    const yDim = dimensions.y;\n\n    if (criteria === null) {\n        return null;\n    }\n\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const xLinear = xAxis.constructor.type() === 'linear';\n    const yLinear = yAxis.constructor.type() === 'linear';\n    const xField = `${axisFields.x[0]}`;\n    const yField = `${axisFields.y[0]}`;\n    const xCriteria = criteria[xField];\n    const yCriteria = criteria[yField];\n\n    if (xCriteria && xCriteria[0] instanceof Array) {\n        xRange = xCriteria[0];\n        yRange = xCriteria[1];\n    } else {\n        xRange = xCriteria || [];\n        yRange = yCriteria || [];\n    }\n    direction = xCriteria && yCriteria ? 'both' : (xCriteria ? 'vertical' : 'horizontal');\n    if (xRange && xRange.length) {\n        if ((yAxis.constructor.type() === 'band' && xLinear)) {\n            x1 = x2 = undefined;\n            direction = 'horizontal';\n        } else {\n            const domain = xAxis.domain();\n            const bandScale = xAxis.constructor.type() === 'band';\n            let x1Val;\n            let x2Val;\n            if (bandScale) {\n                let x1DomainIndex = domain.indexOf(xRange[0]);\n                let x2DomainIndex = domain.indexOf(xRange[xRange.length - 1]);\n                [x1DomainIndex, x2DomainIndex] = [x1DomainIndex, x2DomainIndex].sort((a, b) => a - b);\n                x1Val = domain[x1DomainIndex];\n                x2Val = domain[x2DomainIndex];\n            } else {\n                x1Val = xRange[0];\n                x2Val = xRange[xRange.length - 1];\n            }\n            x1 = xAxis.getScaleValue(x1Val);\n            x2 = xAxis.getScaleValue(x2Val);\n            x2 += bandScale ? xAxis.getUnitWidth() : 0;\n        }\n    } else {\n        x1 = x2 = undefined;\n    }\n    if (yRange && yRange.length) {\n        if ((xAxis.constructor.type() === 'band' && yLinear)) {\n            y1 = y2 = undefined;\n            direction = 'vertical';\n        } else {\n            const domain = yAxis.domain();\n            const bandScale = yAxis.constructor.type() === 'band';\n            let y1Val;\n            let y2Val;\n            if (bandScale) {\n                let y1DomainIndex = domain.indexOf(yRange[0]);\n                let y2DomainIndex = domain.indexOf(yRange[yRange.length - 1]);\n                [y1DomainIndex, y2DomainIndex] = [y1DomainIndex, y2DomainIndex].sort(((a, b) => b - a));\n                y1Val = domain[y1DomainIndex];\n                y2Val = domain[y2DomainIndex];\n            } else {\n                y1Val = yRange[0];\n                y2Val = yRange[yRange.length - 1];\n            }\n            y1 = yAxis.getScaleValue(y1Val);\n            y2 = yAxis.getScaleValue(y2Val);\n            y2 += yAxis.constructor.type() === 'band' ? yAxis.getUnitWidth() : 0;\n        }\n    } else {\n        y1 = y2 = undefined;\n    }\n\n    if ((yLinear && xLinear) || !payload.dragEnd) {\n        if (xDim) {\n            [x1, x2] = xDim;\n        }\n        if (yDim) {\n            [y1, y2] = yDim;\n        }\n    }\n\n    return {\n        dimension: {\n            x1,\n            x2,\n            y1,\n            y2\n        },\n        direction\n    };\n};\n\nexport const changeVisibility = (context, sideEffectGroup, visible) => {\n    const config = context.config();\n    const className = config.defClassName;\n    const classPrefix = config.classPrefix;\n    selectElement(sideEffectGroup).selectAll(`.${classPrefix}-${className}`)\n                    .style('display', visible ? 'block' : 'none');\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    isValidValue\n} from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport './styles.scss';\nimport SpawnableSideEffect from '../spawnable';\nimport { selectionBoxDrag } from '../../actions/physical/selection-box-drag';\nimport { getBoxDimensionsFromPayload, changeVisibility } from './helper';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\nclass SelectionBox extends SpawnableSideEffect {\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            defClassName: 'selection-box-group',\n            className: '',\n            classPrefix: CLASSPREFIX,\n            box: {\n                defClassName: 'selection-box',\n                className: ''\n            },\n            transition: {\n                duration: 200\n            }\n        };\n    }\n\n    static formalName () {\n        return 'selectionBox';\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     * @param {Object} dimension Dimensions of the selection box.\n     * @param {number} dimension.x1 Starting x position\n     * @param {number} dimension.x2 Ending x position\n     * @param {number} dimension.y1 Starting y position\n     * @param {number} dimension.y2 Ending y position\n     * @param {Object} conf Configuration needed to draw the selection box\n     * @param {number} unitWidth Width of the visual unit.\n     * @param {number} unitHeight Height of the visual unit.\n     */\n    apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const config = this._config;\n        const boxConf = config.box;\n        const firebolt = this.firebolt;\n        const drawingInf = this.drawingContext();\n        const mountPoint = drawingInf.sideEffectGroup;\n        const unitWidth = drawingInf.width;\n        const unitHeight = drawingInf.height;\n        const classPrefix = config.classPrefix;\n        const selectionGroupClassName = config.defClassName;\n\n        if (payload.criteria === null) {\n            this.hide(drawingInf);\n            return this;\n        }\n\n        const sourceInf = firebolt.context.getSourceInfo();\n        const { dimension, direction } = getBoxDimensionsFromPayload(payload, sourceInf.axes,\n            sourceInf.fields);\n        const transition = payload.dragEnd && config.transition;\n\n        if (direction === 'both' || direction === 'vertical') {\n            x = Math.min(dimension.x1, dimension.x2);\n            width = Math.abs(dimension.x2 - dimension.x1);\n        } else {\n            x = 0;\n            width = unitWidth;\n        }\n        if (direction === 'both' || direction === 'horizontal') {\n            y = Math.min(dimension.y1, dimension.y2);\n            height = Math.abs(dimension.y2 - dimension.y1);\n        } else {\n            height = unitHeight;\n            y = 0;\n        }\n        this.show(drawingInf);\n        // Create the data array for drawing the rectangle\n        const points = [\n            {\n                x,\n                y,\n                width,\n                height\n            }\n        ];\n        // Create the container group for selection box.\n        const selectionGroup = makeElement(selectElement(mountPoint), 'g', [1],\n            `.${classPrefix}-${selectionGroupClassName}`);\n        const sideEffect = this;\n        const selection = selectionGroup.selectAll('rect').data(points);\n        const selectionBox = selection.enter().append('rect')\n                        .each(function () {\n                            selectionBoxDrag(firebolt)(selectElement(this), ['brush'], sideEffect);\n                        })\n                        .merge(selection)\n                        .each(function (attrs) {\n                            let element = selectElement(this);\n                            transition && (element = element.transition().duration(transition.duration));\n                            for (const key in attrs) {\n                                if ({}.hasOwnProperty.call(attrs, key)) {\n                                    isValidValue(attrs[key]) && element.attr(key, attrs[key]);\n                                }\n                            }\n                        });\n        // Get the qualified class name for selection box rectangle\n        const boxClassName = getQualifiedClassName(boxConf.defClassName, this._id, classPrefix);\n        selectionBox.classed(boxClassName.join(' '), true);\n        selectionBox.classed(boxConf.className, true);\n\n        return this;\n    }\n\n    hide (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, false);\n    }\n\n    show (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, true);\n    }\n}\n\nexport default SelectionBox;\n\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './helpers/drag-action-config';\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let subject;\n    let drawingInf;\n    const context = firebolt.context;\n    const onDrag = (payload) => {\n        behaviours.forEach(action => firebolt.dispatchBehaviour(action, payload));\n    };\n    const d3Drag = getD3Drag();\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        drawingInf = context.getDrawingContext();\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        subject.x += event.dx;\n        subject.y += event.dy;\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            }, context.data().getFieldsConfig());\n            onDrag(payload);\n        }\n    }).on('end', () => {\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                },\n                snap: true\n            }, context.data().getFieldsConfig());\n            payload.dragEnd = true;\n            onDrag(payload);\n        }\n    }));\n};\n","export const CLASSPREFIX = 'muze';\nexport const ARROW_RIGHT = 'right';\nexport const ARROW_TOP = 'top';\nexport const ARROW_BOTTOM = 'bottom';\nexport const ARROW_LEFT = 'left';\nexport const TOOLTIP_LEFT = 'left';\nexport const TOOLTIP_RIGHT = 'right';\nexport const TOOLTIP_BOTTOM = 'bottom';\nexport const TOOLTIP_TOP = 'top';\nexport const INITIAL_STYLE = {\n    position: 'absolute',\n    width: 0,\n    height: 0\n};\n","import { CLASSPREFIX } from './constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'tooltip-box',\n    connectorClassName: 'tooltip-connectors',\n    className: '',\n    row: {\n        margin: 0\n    },\n    content: {\n        spacing: 5,\n        iconContainerSize: 10,\n        iconScale: 1,\n        iconShape: 'circle',\n        iconColor: '#ff0000',\n        rowMargin: '0px',\n        margin: 10,\n        separator: ':',\n        className: 'tooltip-content-container',\n        parentClassName: 'tooltip-content-parent-container'\n    },\n    arrow: {\n        size: 10,\n        disabled: false,\n        defClassName: 'tooltip-arrow',\n        className: '',\n        color: 'rgba(195,195,195,0.85)'\n    }\n};\n","import { getQualifiedClassName } from 'muze-utils';\nimport { TOOLTIP_LEFT, TOOLTIP_RIGHT, ARROW_RIGHT, ARROW_LEFT, TOOLTIP_BOTTOM } from './constants';\n\nexport const getArrowPos = (orient, dim, measurement, config) => {\n    let arrowPos;\n    const { x, y, boxHeight, boxWidth } = measurement;\n    const arrowDisabled = config.arrow.disabled;\n    const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n\n    if (orient === ARROW_LEFT || orient === ARROW_RIGHT) {\n        let start = 0;\n        let diff = boxHeight / 2;\n        const plotBottom = dim.y + dim.height;\n        const boxBottom = y + boxHeight;\n\n        if (dim.y > y) {\n            start = dim.y - y;\n            diff = (plotBottom >= boxBottom ? (boxBottom - dim.y) : dim.height) / 2;\n        } else if (boxBottom > plotBottom) {\n            diff = Math.abs(y - (dim.y + dim.height)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    } else {\n        let start = 0;\n        let diff = boxWidth / 2;\n        const plotRight = dim.x + dim.width;\n        const boxRight = x + boxWidth;\n\n        if (dim.x > x) {\n            start = dim.x - x;\n            diff = (plotRight >= boxRight ? (boxRight - dim.x) : dim.width) / 2;\n        } else if (boxRight > plotRight) {\n            diff = Math.abs(x - (dim.x + dim.width)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    }\n    return arrowPos;\n};\n\n/**\n * Places the arrow in the specified arrow position. It also applies appropriate arrow\n * class name to the arrow element.\n * @param {string} position Left, bottom or right position of the arrow;\n * @param {number} arrowPos position of arrow in pixels\n * @return {Tooltip} Instance of tooltip.\n */\nexport const placeArrow = (context, position, arrowPos) => {\n    const tooltipArrow = context._tooltipArrow;\n    const tooltipBackground = context._tooltipBackground;\n    const config = context._config;\n    const classPrefix = config.classPrefix;\n    const arrowConf = config.arrow;\n    const className = getQualifiedClassName(arrowConf.defClassName, context._id, config.classPrefix);\n\n    tooltipArrow.style('display', 'block');\n    tooltipArrow.attr('class', `${className.join(' ')}`);\n    if (position === TOOLTIP_LEFT || position === TOOLTIP_RIGHT) {\n        tooltipArrow.style('top', `${arrowPos}px`);\n        tooltipArrow.style('left', '');\n        tooltipBackground.style('top', `${arrowPos}px`);\n        tooltipBackground.style('left', '');\n    } else {\n        position === TOOLTIP_BOTTOM ? tooltipArrow.style('top', '100%') : tooltipArrow.style('top',\n            `-${arrowConf.size}px`);\n        tooltipArrow.style('left', `${arrowPos}px`);\n        position === TOOLTIP_BOTTOM ? tooltipBackground.style('top', '100%') : tooltipBackground.style('top',\n            `-${arrowConf.size + 3}px`);\n        tooltipBackground.style('left', `${arrowPos}px`);\n    }\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow`, true);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${context._arrowOrientation}`, false);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${position}`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${context._arrowOrientation}`, false);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${position}`, true);\n    return this;\n};\n\nexport const reorderContainers = (parentContainer, className) => {\n    parentContainer.selectAll(className).sort((a, b) => a - b);\n};\n","import {\n    formatTemporal,\n    DimensionSubtype,\n    MeasureSubtype,\n    FieldType,\n    DataModel\n} from 'muze-utils';\n\nconst { InvalidAwareTypes } = DataModel;\n\nconst formatters = (formatter, interval, valueParser) => ({\n    [DimensionSubtype.TEMPORAL]: (value) => {\n        if (value instanceof InvalidAwareTypes) {\n            return valueParser(value);\n        }\n        return formatTemporal(value, interval);\n    },\n    [MeasureSubtype.CONTINUOUS]: value => (value instanceof InvalidAwareTypes ? valueParser(value) :\n        formatter(value.toFixed(2))),\n    [DimensionSubtype.CATEGORICAL]: value => valueParser(value)\n});\n\nconst getDefaultTooltipFormatterFn = (formatter = formatters()[DimensionSubtype.CATEGORICAL]) => formatter;\n\nconst getTabularData = (data, schema, fieldspace, context) => {\n    const rows = [];\n    rows.push(schema.map(d => d.name));\n    const { valueParser, timeDiffs } = context;\n    data.forEach((d) => {\n        const row = [];\n        schema.forEach((fieldObj, i) => {\n            const interval = fieldObj.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[fieldObj.name] : 0;\n            const numberFormat = fieldObj.type === FieldType.MEASURE && fieldspace.fields[i].numberFormat();\n            const formatterFn = getDefaultTooltipFormatterFn(formatters(numberFormat,\n                interval, valueParser)[fieldObj.subtype]);\n            const value = formatterFn(d[i]);\n            row.push(value);\n        });\n        rows.push(row);\n    });\n    return rows;\n};\n\nexport const buildTooltipData = (dataModel, config = {}, context) => {\n    let fieldValues = [];\n    const dataObj = dataModel.getData();\n    const data = dataObj.data;\n    const schema = dataObj.schema;\n    const separator = config.separator;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const fieldspace = dataModel.getFieldspace();\n    const detailFields = context.detailFields || [];\n    const dimensions = schema.filter(d => d.type === FieldType.DIMENSION);\n    const measures = schema.filter(d => d.type === FieldType.MEASURE);\n    const containsDetailField = schema.find(d => detailFields.indexOf(d.name) !== -1);\n    const dataLen = data.length;\n    const {\n        valueParser,\n        axes,\n        dimensionMeasureMap,\n        timeDiffs\n    } = context;\n    const getRowContent = (field, type) => {\n        let value;\n        let formattedValue;\n        let measureIndex;\n        const values = [];\n        const index = fieldsConfig[field].index;\n        const interval = fieldsConfig[field].def.subtype === DimensionSubtype.TEMPORAL ?\n                timeDiffs[field] : 0;\n        const formatterFn = getDefaultTooltipFormatterFn(formatters(val => val, interval, valueParser)[type]);\n\n        if (value !== null) {\n            let uniqueVals = type === MeasureSubtype.CONTINUOUS ? data.map(d => d[index]) :\n                [...new Set(data.map(d => d[index]))];\n            uniqueVals = uniqueVals.filter(d => d !== '');\n            const colorAxis = axes.color[0];\n            const shapeAxis = axes.shape[0];\n            const sizeAxis = axes.size[0];\n            const isRetinalField = (colorAxis || shapeAxis || sizeAxis) && dataLen > 1 &&\n                    type !== MeasureSubtype.CONTINUOUS;\n\n            uniqueVals.forEach((val, i) => {\n                let key;\n                const associatedMeasures = dimensionMeasureMap[field];\n\n                if (associatedMeasures && associatedMeasures.length && dataLen > 1) {\n                    key = val;\n                    let icon = {\n                        value: ''\n                    };\n\n                    if (isRetinalField) {\n                        icon = {\n                            type: 'icon',\n                            color: colorAxis.getColor(val),\n                            shape: shapeAxis.getShape(val),\n                            size: sizeAxis.getSize(val) * config.iconScale\n                        };\n                    }\n                    if (associatedMeasures.length > 1) {\n                        const formattedKey = type === DimensionSubtype.TEMPORAL ? formatterFn(key, interval) : key;\n                        values.push([icon, `${formattedKey}`]);\n                        associatedMeasures.forEach((measure) => {\n                            measureIndex = fieldsConfig[measure].index;\n                            value = data[i][measureIndex];\n                            const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                            const measureFormatter = getDefaultTooltipFormatterFn(\n                                formatters(numberFormat, valueParser)[MeasureSubtype.CONTINUOUS]);\n                            formattedValue = measureFormatter(value);\n                            values.push([{\n                                value: `${measure}${separator}`,\n                                style: {\n                                    'margin-left': `${config.margin}px}`\n                                },\n                                className: `${config.classPrefix}-tooltip-key`\n                            }, {\n                                value: `${formattedValue}`,\n                                className: `${config.classPrefix}-tooltip-value`\n                            }]);\n                        });\n                    } else {\n                        measureIndex = fieldsConfig[associatedMeasures[0]].index;\n                        value = data[i][measureIndex];\n                        const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                        const measureFormatter = getDefaultTooltipFormatterFn(\n                            formatters(numberFormat, valueParser)[MeasureSubtype.CONTINUOUS]);\n                        formattedValue = measureFormatter(value, interval);\n                        const formattedKey = type === DimensionSubtype.TEMPORAL ? formatterFn(key, interval) : key;\n                        values.push([\n                            icon,\n                            {\n                                value: `${formattedKey}`,\n                                className: `${config.classPrefix}-tooltip-key`\n                            },\n                            {\n                                value: `${formattedValue}`,\n                                className: `${config.classPrefix}-tooltip-value`\n                            }\n                        ]);\n                    }\n                } else {\n                    key = field;\n                    value = val;\n                    formattedValue = formatterFn(value);\n                    values.push([{\n                        value: `${key}${separator}`,\n                        className: `${config.classPrefix}-tooltip-key`\n                    }, {\n                        value: `${formattedValue}`,\n                        className: `${config.classPrefix}-tooltip-value`\n                    }]);\n                }\n            });\n        }\n        return values;\n    };\n    let displayFormat = 'keyValue';\n\n    if (dataLen > 1 && containsDetailField) {\n        fieldValues = getTabularData(data, schema, fieldspace, context);\n        displayFormat = 'table';\n    } else {\n        dimensions.forEach((item) => {\n            const type = item.subtype ? item.subtype : item.type;\n            fieldValues = [...fieldValues, ...getRowContent(item.name, type)];\n        });\n\n        const allMeasures = [...new Set(...Object.values(dimensionMeasureMap))];\n        const filteredMeasures = dataLen > 1 ? measures.filter(d => allMeasures.indexOf(d.name) === -1)\n            : measures;\n\n        filteredMeasures.forEach((item) => {\n            const type = item.subtype ? item.subtype : item.type;\n            fieldValues = [...fieldValues, ...getRowContent(item.name, type)];\n        });\n    }\n\n    return {\n        content: fieldValues,\n        displayFormat\n    };\n};\n\n/**\n * This contains the strategy methods for showing tooltip in the chart.\n * @param {VisualUnit} context Attached instance.\n */\nexport const strategy = {\n    keyValue: (data, config, context) => {\n        const values = buildTooltipData(data, config, context);\n        return values;\n    }\n};\n\nexport const DEFAULT_STRATEGY = 'keyValue';\n","import {\n    selectElement,\n    mergeRecursive,\n    makeElement,\n    setAttrs,\n    setStyles,\n    getSymbol,\n    isSimpleObject\n} from 'muze-utils';\nimport { DEFAULT_STRATEGY, strategy } from './strategy';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class is used to manage the content of tooltip.\n */\nexport default class Content {\n    /**\n     * Creates an instance of content.\n     */\n    constructor () {\n        this._model = null;\n        this._strategy = DEFAULT_STRATEGY;\n        this._formatter = null;\n        this._config = this.constructor.defaultConfig();\n    }\n   /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        const config = defaultConfig.content;\n        config.classPrefix = defaultConfig.classPrefix;\n        return config;\n    }\n\n    config (...c) {\n        if (c.length > 0) {\n            this._config = mergeRecursive(this._config, c[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Update model. The format contains presentation strategy which determines how to show the content.\n     * If no strategy is mentioned then default is to show key value pair\n    */\n    update (item) {\n        this._model = item.model;\n        this._strategy = item.strategy !== undefined ? item.strategy : DEFAULT_STRATEGY;\n        this._formatter = item.formatter;\n        return this;\n    }\n\n    context (ctx) {\n        this._context = ctx;\n        return this;\n    }\n\n    render (mount) {\n        let data;\n        const config = this._config;\n        const iconContainerSize = config.iconContainerSize;\n        const formatter = this._formatter;\n        const rowMargin = config.rowMargin;\n        const model = this._model;\n\n        this._mount = mount;\n        if (model instanceof Array) {\n            data = model;\n        } else {\n            data = formatter instanceof Function ? formatter(this._model, this._context) :\n                strategy[this._strategy](this._model, this.config(), this._context);\n        }\n\n        if (data instanceof Function) {\n            mount.html(data());\n        } else {\n            let content = data;\n            let displayFormat = 'default';\n\n            if (isSimpleObject(data)) {\n                content = data.content;\n                displayFormat = data.displayFormat;\n            }\n\n            const body = makeElement(mount, 'div', [displayFormat], `${config.classPrefix}-tooltip-content`, {},\n                d => d);\n\n            if (displayFormat === 'table') {\n                const table = makeElement(body, 'table', [1], `${config.classPrefix}-tooltip-table`);\n                const tbody = makeElement(table, 'tbody', [1], `${config.classPrefix}-tooltip-table-tbody`);\n                const rows = makeElement(tbody, 'tr', content, `${config.classPrefix}-tooltip-table-row`);\n                rows.each(function (d, i) {\n                    selectElement(this).classed(`${config.classPrefix}-tooltip-table-row-${i}`, true);\n                });\n                const cells = makeElement(rows, 'td', d => d, `${config.classPrefix}-tooltip-table-cell`);\n                cells.each(function (d) {\n                    selectElement(this).html(d);\n                });\n            } else {\n                const rows = makeElement(body, 'div', content, `${config.classPrefix}-tooltip-row`);\n                const cells = makeElement(rows, 'span', d => d, `${config.classPrefix}-tooltip-content`);\n                cells.attr('class', `${config.classPrefix}-tooltip-content`);\n                setStyles(rows, {\n                    margin: rowMargin\n                });\n                setStyles(cells, {\n                    display: 'inline-block',\n                    'margin-right': `${config.spacing}px`\n                });\n\n                cells.each(function (d) {\n                    const el = selectElement(this);\n                    el.html('');\n                    if (d instanceof Object) {\n                        if (d.type === 'icon') {\n                            const svg = makeElement(el, 'svg', [1]);\n                            const path = makeElement(svg, 'path', [1]);\n                            const shape = d.shape instanceof Function ? d.shape : getSymbol(d.shape);\n\n                            setAttrs(svg, {\n                                x: 0,\n                                y: 0,\n                                width: iconContainerSize,\n                                height: iconContainerSize\n                            });\n                            setAttrs(path, {\n                                d: shape.size(d.size)(),\n                                transform: `translate(${iconContainerSize / 2}, ${iconContainerSize / 2})`\n                            });\n                            setStyles(path, {\n                                fill: d.color\n                            });\n                            setStyles(svg, {\n                                width: `${iconContainerSize}px`,\n                                height: `${iconContainerSize}px`\n                            });\n                        } else {\n                            el.html(d.value);\n                            d.className && el.classed(d.className, true);\n                            setStyles(el, d.style);\n                        }\n                    } else {\n                        el.html(d);\n                    }\n                });\n            }\n        }\n        return this;\n    }\n\n    clear () {\n        this._model = null;\n        return this;\n    }\n}\n","import {\n    mergeRecursive,\n    getQualifiedClassName,\n    getUniqueId,\n    selectElement,\n    setStyles,\n    makeElement\n} from 'muze-utils';\nimport { ARROW_BOTTOM, ARROW_LEFT, ARROW_RIGHT, TOOLTIP_LEFT, TOOLTIP_RIGHT, TOOLTIP_BOTTOM, TOOLTIP_TOP,\n    INITIAL_STYLE } from './constants';\nimport { defaultConfig } from './default-config';\nimport { getArrowPos, placeArrow, reorderContainers } from './helper';\nimport './styles.scss';\nimport Content from './content';\n\n/**\n * This component is responsible for creating a tooltip element. It appends the tooltip\n * in the body element.\n * @class Tooltip\n */\nexport default class Tooltip {\n    /**\n     * Initializes the tooltip with the container element and configuration\n     * @param {HTMLElement} container container where the tooltip will be mounted.\n     * @param {string} className Class name of the tooltip.\n     */\n    constructor (htmlContainer, svgContainer) {\n        let connectorContainer = svgContainer;\n        this._id = getUniqueId();\n        this._config = {};\n        this.config({});\n        const tooltipConf = this._config;\n        const classPrefix = tooltipConf.classPrefix;\n        const contentClass = tooltipConf.content.parentClassName;\n        const container = makeElement(htmlContainer, 'div', [1], `${classPrefix}-tooltip-container`);\n        this._container = container;\n        this._tooltipContainer = container.append('div').style('position', 'absolute');\n        this._contentContainer = this._tooltipContainer.append('div').attr('class', `${classPrefix}-${contentClass}`);\n        this._tooltipBackground = this._tooltipContainer.append('div').style('position', 'relative');\n        this._tooltipArrow = this._tooltipContainer.append('div');\n\n        if (!svgContainer) {\n            connectorContainer = htmlContainer.append('svg').style('pointer-events', 'none');\n        }\n        this._contents = {};\n        this._tooltipConnectorContainer = selectElement(connectorContainer)\n            .append('g')\n            .attr('class', `${tooltipConf.classPrefix}-${tooltipConf.connectorClassName}`);\n        const id = this._id;\n        const defClassName = tooltipConf.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, id, tooltipConf.classPrefix);\n\n        setStyles(this._tooltipArrow, INITIAL_STYLE);\n        setStyles(this._tooltipBackground, INITIAL_STYLE);\n        this.addClass(qualifiedClassName.join(' '));\n        this.addClass(tooltipConf.className);\n        this.hide();\n    }\n\n    /**\n     * Sets the configuration of tooltip.\n     * @param {Object} config Configuration of tooltip\n     * @return {Tooltip} Instance of tooltip\n     */\n    config (...config) {\n        if (config.length > 0) {\n            const defConf = mergeRecursive({}, this.constructor.defaultConfig());\n            this._config = mergeRecursive(defConf, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n    /**\n     * Sets the class name of tooltip\n     * @param {string} className tooltip class name\n     * @return {Tooltip} Instance of tooltip.\n     */\n    addClass (className) {\n        this._tooltipContainer.classed(className, true);\n        return this;\n    }\n\n    context (...ctx) {\n        if (ctx.length) {\n            this._context = ctx[0];\n            return this;\n        }\n        return this._context;\n    }\n\n    content (name, data, contentConfig = {}) {\n        const config = this.config();\n        const { classPrefix } = config;\n        const contentClass = config.content.className;\n        const formatter = config.formatter;\n        const className = contentConfig.className || `${classPrefix}-${contentClass}-${name}`;\n        const content = this._contents[name] = this._contents[name] || new Content();\n        const container = makeElement(this._contentContainer, 'div', [contentConfig.order], className);\n        container.attr('class', `${classPrefix}-${contentClass} ${className}`);\n        reorderContainers(this._contentContainer, `.${classPrefix}-${contentClass}`);\n        const contentConf = config.content;\n        contentConfig.classPrefix = this._config.classPrefix;\n        content.config(contentConf);\n\n        if (data === null) {\n            content.clear();\n            container.remove();\n            delete this._contents[name];\n        } else {\n            content.update({\n                model: data,\n                formatter: contentConfig.formatter || formatter\n            });\n            content.context(this._context);\n            content.render(container);\n        }\n\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n        }\n        return this;\n    }\n\n    getContents () {\n        return Object.values(this._contents);\n    }\n\n    /**\n     * Positions the tooltip at the given x and y position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Tooltip} Instance of tooltip.\n     */\n    position (x, y, conf = {}) {\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n            return this;\n        }\n        this.show();\n        const target = this._target;\n        const repositionArrow = conf.repositionArrow;\n\n        if (target && repositionArrow) {\n            const node = this._tooltipContainer.node();\n            const config = this._config;\n            const arrowDisabled = config.arrow.disabled;\n            const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n            const arrowOrient = this._arrowOrientation;\n            const outsidePlot = arrowOrient === ARROW_LEFT || arrowOrient === ARROW_RIGHT ?\n                (y + node.offsetHeight - arrowWidth) < target.y || y > (target.y + target.height) :\n                (x + node.offsetWidth - arrowWidth) < target.x || x > (target.x + target.width);\n\n            if (!arrowDisabled) {\n                if (outsidePlot) {\n                    let path;\n                    this._tooltipArrow.style('display', 'none');\n                    this._tooltipBackground.style('display', 'none');\n                    this._tooltipConnectorContainer.style('display', 'block');\n                    const connector = this._tooltipConnectorContainer.selectAll('path').data([1]);\n                    const enter = connector.enter().append('path');\n                    if (arrowOrient === ARROW_LEFT) {\n                        path = `M ${x} ${y + node.offsetHeight / 2} L ${target.x + target.width}`\n                            + ` ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_RIGHT) {\n                        path = `M ${x + node.offsetWidth} ${y + node.offsetHeight / 2}`\n                                + ` L ${target.x} ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_BOTTOM) {\n                        path = `M ${x + node.offsetWidth / 2} ${y + node.offsetHeight}`\n                            + ` L ${target.x + target.width / 2} ${target.y}`;\n                    }\n                    enter.merge(connector).attr('d', path).style('display', 'block');\n                } else {\n                    const arrowPos = getArrowPos(arrowOrient, target, {\n                        x,\n                        y,\n                        boxHeight: node.offsetHeight,\n                        boxWidth: node.offsetWidth\n                    }, this._config);\n\n                    placeArrow(this, this._arrowOrientation, arrowPos);\n                    this._tooltipConnectorContainer.style('display', 'none');\n                }\n            }\n        }\n\n        const offset = this._offset || {\n            x: 0,\n            y: 0\n        };\n        this._tooltipContainer.style('left', `${offset.x + x}px`).style('top',\n            `${offset.y + y}px`);\n\n        return this;\n    }\n\n    /**\n     * Positions the tooltip relative to a rectangular box. It takes care of tooltip overflowing the\n     * boundaries.\n     * @param {Object} dim Dimensions of the plot.\n     */\n    positionRelativeTo (dim, tooltipConf = {}) {\n        let obj;\n        let orientation = tooltipConf.orientation;\n        this.show();\n        if (!dim) {\n            this.hide();\n            return this;\n        }\n\n        const extent = this._extent;\n        const node = this._tooltipContainer.node();\n\n        this._tooltipContainer.style('top', '0px')\n                        .style('left', '0px');\n        const offsetWidth = node.offsetWidth + 2;\n        const offsetHeight = node.offsetHeight + 2;\n        const config = this._config;\n        const offset = this._offset;\n        const arrowDisabled = config.arrow.disabled;\n        const arrowSize = arrowDisabled ? 0 : config.arrow.size;\n        const draw = tooltipConf.draw !== undefined ? tooltipConf.draw : true;\n        const topSpace = dim.y;\n        // When there is no space in right\n        const dimX = dim.x + dim.width + offset.x;\n        const rightSpace = extent.width - dimX;\n        const leftSpace = dim.x + offset.x - extent.x;\n        const positionTop = topSpace > (offsetHeight + arrowSize);\n        const positionRight = rightSpace >= offsetWidth + arrowSize;\n        const positionLeft = leftSpace >= offsetWidth + arrowSize;\n\n        const positionHorizontal = () => {\n            let position;\n            let x = dim.x + dim.width;\n            let y = dim.y;\n\n            if (positionRight) {\n                position = TOOLTIP_LEFT;\n                x += arrowSize;\n            } else if (positionLeft) {\n                x = dim.x - offsetWidth;\n                position = TOOLTIP_RIGHT;\n                x -= arrowSize;\n            } else {\n                position = 'left';\n                x += arrowSize;\n            }\n            if (dim.height < offsetHeight) {\n                y = Math.max(0, dim.y + dim.height / 2 - offsetHeight / 2);\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        const positionVertical = () => {\n            let position;\n            let y;\n            // Position tooltip at the center of plot\n            let x = dim.x - offsetWidth / 2 + dim.width / 2;\n\n            // Overflows to the right\n            if ((extent.width - (dim.x + offset.x)) < offsetWidth) {\n                x = extent.width - offsetWidth - offset.x;\n            } else if ((x + offset.x) < extent.x) { // Overflows to the left\n                x = extent.x;\n            }\n\n            if (positionTop) {\n                y = dim.y - offsetHeight - arrowSize;\n                position = TOOLTIP_BOTTOM;\n            } else {\n                y = dim.y + dim.height + arrowSize;\n                position = TOOLTIP_TOP;\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        this._target = dim;\n        if (!orientation) {\n            if (positionTop) {\n                orientation = 'vertical';\n            } else if (positionRight || positionLeft) {\n                orientation = 'horizontal';\n            } else {\n                orientation = 'vertical';\n            }\n        }\n\n        if (orientation === 'horizontal') {\n            obj = positionHorizontal();\n        } else if (orientation === 'vertical') {\n            obj = positionVertical();\n        }\n\n        this._position = {\n            x: obj.x,\n            y: obj.y\n        };\n\n        this._arrowPos = obj.arrowPos;\n        if (!arrowDisabled) {\n            placeArrow(this, obj.position, obj.arrowPos);\n        } else {\n            this._tooltipArrow.style('display', 'none');\n            this._tooltipBackground.style('display', 'none');\n        }\n        this._arrowOrientation = obj.position;\n        draw && this.position(obj.x, obj.y);\n        return this;\n    }\n\n    /**\n     * Hides the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    hide () {\n        this._tooltipContainer.style('display', 'none');\n        this._tooltipConnectorContainer.style('display', 'none');\n        return this;\n    }\n\n    /**\n     * Shows the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    show () {\n        this._tooltipContainer.style('display', 'block');\n        return this;\n    }\n\n    extent (extent) {\n        this._extent = extent;\n        return this;\n    }\n\n    offset (offset) {\n        this._offset = offset;\n        return this;\n    }\n\n    remove () {\n        this._tooltipContainer.remove();\n        this._tooltipBackground.remove();\n        this._tooltipConnectorContainer.remove();\n        return this;\n    }\n}\n","import { FieldType } from 'muze-utils';\n\nexport const strategies = {\n    showSelectedItems: (dm) => {\n        const dataObj = dm.getData();\n        const measures = dataObj.schema.filter(d => d.type === FieldType.MEASURE);\n        const aggregatedModel = dm.groupBy([''], measures.reduce((acc, v) => {\n            acc[v.name] = v.defAggFn === 'count' ? 'sum' : v.defAggFn;\n            return acc;\n        }, {}));\n        const fieldsObj = dm.getFieldspace().fieldsObj();\n        const fieldsConf = aggregatedModel.getFieldsConfig();\n        let values = [{\n            value: `${dataObj.data.length}`,\n            style: {\n                'font-weight': 'bold'\n            }\n        }, 'Items Selected'];\n        const measureNames = measures.map(d => d.name);\n        if (measureNames.length) {\n            values = [...values, ...[`(${fieldsObj[measureNames[0]].defAggFn().toUpperCase()}) ${measureNames[0]}`,\n                {\n                    value: `${aggregatedModel.getData().data[0][fieldsConf[measureNames[0]].index].toFixed(2)}`,\n                    style: {\n                        'font-weight': 'bold'\n                    }\n                }]];\n        }\n        return [values];\n    }\n};\n","import { Tooltip as TooltipRenderer } from '@chartshq/muze-tooltip';\nimport { FieldType } from 'muze-utils';\nimport { spaceOutBoxes } from '../helper';\nimport { strategies } from './strategies';\nimport { FRAGMENTED } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nexport default class Tooltip extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._tooltips = {};\n        this._strategies = strategies;\n        this._strategy = 'default';\n    }\n\n    static defaultConfig () {\n        return {\n            padding: 5,\n            offset: {\n                x: 0,\n                y: 0\n            }\n        };\n    }\n\n    static formalName () {\n        return 'tooltip';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        let totalHeight = 0;\n        let totalWidth = 0;\n        const dataModel = selectionSet.mergedEnter.model;\n        const context = this.firebolt.context;\n        const drawingInf = this.drawingContext();\n        if ((dataModel.isEmpty() || payload.criteria === null) || selectionSet.isSourceFieldPresent === false) {\n            this.hide(options, null);\n            return this;\n        }\n\n        const tooltips = this._tooltips;\n        const config = this.config();\n        const boundBox = {\n            width: drawingInf.width,\n            height: drawingInf.height\n        };\n        const showInPosition = payload.showInPosition;\n        const pad = config.padding;\n        const dataModels = [];\n        const fragmented = config.mode === FRAGMENTED;\n        const sourceInf = context.getSourceInfo();\n        const fields = sourceInf.fields;\n        const xFieldDim = fields.x[0] ? fields.x[0].type() === FieldType.DIMENSION : false;\n        const showVertically = !!xFieldDim;\n        const tooltipPos = payload.position;\n        const boxes = [];\n        const enter = {};\n        const uids = dataModel.getData().uids;\n        if (fragmented) {\n            dataModels.push(...uids.map(d => dataModel.select((fieldsArr, i) => i === d, {\n                saveChild: false\n            })));\n        } else {\n            dataModels.push(dataModel);\n        }\n\n        let target = payload.target;\n        let targetFields = [];\n        if (target) {\n            targetFields = target[0] || [];\n            const sourceFields = payload.sourceFields;\n            const indices = [];\n            for (let i = 0, len = targetFields.length; i < len; i++) {\n                if (sourceFields.indexOf(targetFields[i]) !== -1) {\n                    indices.push(i);\n                }\n            }\n            target = target.map(d => d.filter((v, i) => indices.indexOf(i) !== -1));\n        }\n\n        const plotDimensions = context.getPlotPointsFromIdentifiers(target || payload.criteria, {\n            getBBox: true\n        });\n\n        // Show tooltip for each datamodel\n        for (let i = 0; i < dataModels.length; i++) {\n            let plotDim = plotDimensions[i];\n            if (fragmented) {\n                const dimensions = dataModels[i].getData().schema.filter(d => d.type === FieldType.DIMENSION)\n                    .map(d => d.name);\n                plotDim = context.getPlotPointsFromIdentifiers(dataModels[i].project(dimensions), { getBBox: true });\n                plotDim = plotDim && plotDim[0];\n            }\n\n            let dt = dataModels[i];\n            if (config.fields) {\n                dt = dt.project(config.fields, {\n                    saveChild: false\n                });\n            }\n            if (config.dataTransform) {\n                dt = config.dataTransform(dt, i);\n            }\n\n            enter[i] = true;\n            const { parentContainer: layoutContainer, parentContainerDimensions } = drawingInf;\n            const layoutBoundBox = layoutContainer.getBoundingClientRect();\n            const unitBoundBox = drawingInf.htmlContainer.getBoundingClientRect();\n\n            const offsetLeft = unitBoundBox.left - layoutBoundBox.left;\n            const offsetTop = unitBoundBox.top - layoutBoundBox.top;\n            const tooltipInst = tooltips[i] = tooltips[i] || new TooltipRenderer(layoutContainer,\n                    drawingInf.svgContainer);\n\n            sourceInf.payload = payload;\n            sourceInf.firebolt = this.firebolt;\n            sourceInf.detailFields = context.detailFields();\n            sourceInf.timeDiffs = context.timeDiffsByField();\n            sourceInf.valueParser = context.valueParser();\n            tooltipInst.context(sourceInf);\n            const strategy = strategies[options.strategy];\n            tooltipInst.content(options.strategy || this._strategy, dt, {\n                formatter: strategy,\n                order: options.order\n            })\n                            .config(this.config())\n                            .extent({\n                                x: 0,\n                                y: 0,\n                                width: parentContainerDimensions.width,\n                                height: parentContainerDimensions.height\n                            })\n                            .offset({\n                                x: offsetLeft + (config.offset.x || 0),\n                                y: offsetTop + (config.offset.y || 0)\n                            });\n\n            if (showInPosition) {\n                tooltipInst.position(tooltipPos.x + pad, tooltipPos.y + pad);\n            } else if (plotDim) {\n                tooltipInst.positionRelativeTo({\n                    x: plotDim.x,\n                    y: plotDim.y,\n                    width: plotDim.width || 0,\n                    height: plotDim.height || 0\n                }, {\n                    orientation: fragmented ?\n                        (showVertically ? 'horizontal' : 'vertical') : undefined\n                });\n            } else {\n                tooltipInst.hide();\n                break;\n            }\n\n            if (fragmented) {\n                const position = tooltipInst._position;\n                const tooltipBoundBox = tooltipInst._tooltipContainer.node().getBoundingClientRect();\n\n                totalHeight += tooltipBoundBox.height + pad;\n                totalWidth += tooltipBoundBox.width + pad;\n                if (showVertically ? totalHeight > drawingInf.height : totalWidth > drawingInf.width) {\n                    break;\n                }\n                boxes.push({\n                    x: position.x,\n                    y: position.y,\n                    width: tooltipBoundBox.width,\n                    height: tooltipBoundBox.height,\n                    tooltip: tooltipInst\n                });\n            }\n        }\n\n        for (const key in tooltips) {\n            if (!enter[key]) {\n                const tooltip = tooltips[key];\n                tooltip.content(payload.action, null);\n                if (!tooltip.getContents().length) {\n                    tooltip.remove();\n                    delete tooltips[key];\n                }\n            }\n        }\n        if (fragmented) {\n            spaceOutBoxes(boxes, boundBox, showVertically);\n            boxes.forEach(box => box.tooltip.position(box.x, box.y, {\n                repositionArrow: true\n            }));\n        }\n        return this;\n    }\n\n    hide (options) {\n        const tooltips = this._tooltips;\n        for (const key in tooltips) {\n            if ({}.hasOwnProperty.call(tooltips, key)) {\n                const strategy = options.strategy || this._strategy;\n                tooltips[key].content(strategy, null);\n                tooltips[key].hide();\n            }\n        }\n    }\n}\n","export const spaceOutBoxes = (boxes, extent, showVertically) => {\n    let y;\n    let height;\n    let x;\n    let width;\n    let i;\n    const pad = 5;\n    const len = boxes.length;\n    const spaceOutIfOverlap = (firstBox, secondBox, opposite) => {\n        x = firstBox.x;\n        width = firstBox.width;\n        y = firstBox.y;\n        height = firstBox.height;\n        const bottom = y + height;\n        const right = x + width;\n\n        if (showVertically) {\n            if (opposite ? y < (secondBox.y + secondBox.height) : bottom > secondBox.y) {\n                secondBox.y = opposite ? firstBox.y - secondBox.height - pad :\n                        bottom + pad;\n            }\n        } else if (opposite ? x < (secondBox.x + secondBox.width) : right > secondBox.x) {\n            secondBox.x = opposite ? firstBox.x - secondBox.width - pad :\n                    right + pad;\n        }\n    };\n\n    boxes.sort((a, b) => (showVertically ? a.y - b.y : a.x - b.x));\n    i = 0;\n\n    for (i = 0; i < len - 1; i++) {\n        spaceOutIfOverlap(boxes[i], boxes[i + 1]);\n    }\n\n    if ((boxes[i].y + boxes[i].height) > extent.height ||\n            (boxes[i].x + boxes[i].width) > extent.width) {\n        if (showVertically) {\n            boxes[i].y -= (boxes[i].height + boxes[i].y) - extent.height;\n        } else {\n            boxes[i].x -= (boxes[i].width + boxes[i].x) - extent.width;\n        }\n        for (i = len - 1; i > 0; i--) {\n            spaceOutIfOverlap(boxes[i], boxes[i - 1], true);\n        }\n    }\n    return boxes;\n}\n;\n","import { selectElement, FieldType } from 'muze-utils';\n\nimport './styles.scss';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nexport default class Crossline extends SpawnableSideEffect {\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-crossline-group`,\n            bandClass: `${CLASSPREFIX}-crossband`,\n            lineClass: `${CLASSPREFIX}-crossline`\n        };\n    }\n\n    static formalName () {\n        return 'crossline';\n    }\n\n    apply (selectionSet, payload) {\n        let height;\n        let bandWidth;\n        let px;\n        let width;\n        const {\n            className,\n            bandClass,\n            lineClass\n        } = this.config();\n        const dataModel = selectionSet.mergedEnter.model;\n        const drawingInf = this.drawingContext();\n        if (payload.criteria && dataModel && dataModel.isEmpty()) {\n            return this;\n        }\n        if (payload.criteria === null || !dataModel) {\n            this.hide();\n            return this;\n        }\n\n        const dataObj = dataModel.getData();\n        const sourceInf = this.firebolt.context.getSourceInfo();\n        const axes = sourceInf.axes;\n        const axisFields = sourceInf.fields;\n        const fields = selectionSet.fields;\n        const data = dataObj.data;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const svgContainer = drawingInf.sideEffectGroup;\n\n        const elemData = [];\n        fields.forEach((field) => {\n            const fieldIndex = fieldsConfig[field] && fieldsConfig[field].index;\n            const dataArr = data.map(d => d[fieldIndex]);\n            const axisIndex = [['x', 0], ['x', 1], ['y', 0], ['y', 1]].find((arr) => {\n                const fieldInst = axisFields[arr[0]][arr[1]];\n                return fieldInst && fieldInst.type() === FieldType.DIMENSION &&\n                    fieldInst.getMembers().indexOf(field) !== -1;\n            });\n            if (axisIndex !== undefined && data.length) {\n                const type = axisIndex[0];\n                const axis = axes[type][axisIndex[1]];\n                const value = dataArr[0];\n                bandWidth = axis.getUnitWidth() || 0;\n                px = axis.getScaleValue(value) + bandWidth / 2 + drawingInf.xOffset;\n                const plotWidth = Math.max(...this.firebolt.context.layers().map(layer => layer.getPlotSpan()[type]));\n                const pad = Math.max(...this.firebolt.context.layers().map(layer => layer.getPlotPadding()[type]));\n                height = drawingInf.height;\n                width = drawingInf.width;\n                const startPx = px - plotWidth / 2 - pad / 2;\n                const endPx = px + plotWidth / 2 + pad / 2;\n                const dataPoint = {};\n                if (type === 'y') {\n                    dataPoint.d = `M 0 ${startPx} L 0 ${endPx} L ${width} ${endPx} L ${width} ${startPx} Z`;\n                } else {\n                    dataPoint.d = `M ${startPx} 0 L ${endPx} 0 L ${endPx} ${height} L ${startPx} ${height} Z`;\n                }\n                dataPoint.className = plotWidth ? bandClass : lineClass;\n                elemData.push(dataPoint);\n            }\n        });\n        if (elemData.length) {\n            const parentGroup = this.createElement(svgContainer, 'g', [1], className);\n            const elem = this.createElement(parentGroup, 'path', elemData);\n            elem.attr('d', d => d.d).style('pointer-events', 'none')\n                            .attr('class', d => d.className);\n        }\n        return this;\n    }\n\n    hide () {\n        const className = this.config().className;\n        const drawingInf = this.drawingContext();\n        selectElement(drawingInf.sideEffectGroup).selectAll(`.${className}`).remove();\n    }\n}\n","const fadeFn = (set, context, strategy) => {\n    const {\n        mergedEnter,\n        mergedExit,\n        exitSet,\n        completeSet\n    } = set;\n\n    if (!mergedEnter.length && !mergedExit.length) {\n        context.applyInteractionStyle(completeSet, {}, strategy, false);\n    } else {\n        context.applyInteractionStyle(exitSet[1], {}, strategy, true);\n        context.applyInteractionStyle(mergedEnter, {}, strategy, false);\n    }\n};\n\nexport const strategies = {\n    fade: fadeFn,\n    focus: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'focus', false);\n        } else {\n            context.applyInteractionStyle(mergedExit, {}, 'focus', true);\n            context.applyInteractionStyle(mergedEnter, {}, 'focus', false);\n        }\n    },\n    highlight: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            entrySet,\n            exitSet,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'highlight', false);\n        } else {\n            context.applyInteractionStyle(entrySet[1], {}, 'highlight', true);\n            context.applyInteractionStyle(exitSet[1], {}, 'highlight', false);\n        }\n    }\n};\n","import SurrogateSideEffect from '../surrogate';\nimport { strategies } from './strategy';\n\nexport default class PlotHighlighter extends SurrogateSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategy = 'highlight';\n        this._strategies = strategies;\n    }\n\n    static formalName () {\n        return 'highlighter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        if (selectionSet.isSourceFieldPresent !== false) {\n            strategy(selectionSet, this, options.strategy || this._strategy);\n        }\n\n        return this;\n    }\n}\n","import SurrogateSideEffect from '../surrogate';\n\nexport default class FilterEffect extends SurrogateSideEffect {\n    static formalName () {\n        return 'filter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static mutates () {\n        return true;\n    }\n\n    apply (selectionSet, payload) {\n        const context = this.firebolt.context;\n        const entryModel = selectionSet.mergedEnter.model;\n        if (payload.criteria === null) {\n            context.clearCaching().resetData();\n        } else {\n            context.enableCaching().data(entryModel);\n        }\n        return this;\n    }\n}\n","import { DataModel, STATE_NAMESPACES, getObjProp } from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst addLayer = (layerDefs, layerRegistry, context, sideEffect) => {\n    const layers = [];\n    if (layerDefs) {\n        layerDefs.forEach((layerDef) => {\n            const mark = layerDef.mark;\n            const layerCls = layerRegistry[mark];\n            if (layerCls && layerCls.shouldDrawAnchors()) {\n                const depLayerEncoding = layerDef.def.encoding;\n                const encoding = {\n                    x: getObjProp(depLayerEncoding, 'x', 'field'),\n                    y: getObjProp(depLayerEncoding, 'y', 'field'),\n                    color: getObjProp(depLayerEncoding, 'color', 'field'),\n                    size: {\n                        field: getObjProp(depLayerEncoding, 'size', 'field'),\n                        value: sideEffect.defaultSizeValue()\n                    }\n                };\n                const name = `${layerDef.def.name}-${sideEffect.constructor.formalName()}`;\n                const layerObj = {\n                    instances: context.addLayer({\n                        name,\n                        mark: 'point',\n                        className: sideEffect.constructor.defaultConfig().className,\n                        encoding,\n                        transform: {\n                            type: 'identity'\n                        },\n                        transition: sideEffect.getTransitionConfig(),\n                        calculateDomain: false,\n                        source: dm => dm.select(() => false, {\n                            saveChild: false\n                        }),\n                        interactive: false,\n                        render: false\n                    }),\n                    linkedLayer: layerDef.def.name\n                };\n                layers.push(layerObj);\n            }\n        });\n    }\n    return layers;\n};\n\nexport default class AnchorEffect extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._layersMap = {};\n        this.addAnchorLayers();\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-anchors-group`\n        };\n    }\n\n    static formalName () {\n        return 'anchors';\n    }\n\n    addAnchorLayers () {\n        const context = this.firebolt.context;\n        const metaInf = context.metaInf();\n        const layerRegistry = context.registry().layerRegistry;\n        const layerDefsVal = context.layerDef();\n        context.store().registerImmediateListener(\n            `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}.layerDef`, ([, layerDefs]) => {\n                this._layers = addLayer(layerDefs, layerRegistry, context, this);\n            });\n        this._layers = addLayer(layerDefsVal, layerRegistry, context, this);\n        return this;\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n\n    /**\n     * Returns the default area value of the anchor point.\n     * @return { number } Default area value of anchor.\n     */\n    defaultSizeValue () {\n        return 100;\n    }\n\n    apply (selectionSet) {\n        const self = this;\n        const dataModel = selectionSet.mergedEnter.model;\n        if (selectionSet.isSourceFieldPresent !== false) {\n            const drawingInf = this.drawingContext();\n            const sideEffectGroup = drawingInf.sideEffectGroup;\n            const className = `${this.config().className}`;\n            const layers = this._layers;\n            const parentGroup = this.createElement(sideEffectGroup, 'g', [1], `${className}-container`);\n            const anchorGroups = this.createElement(parentGroup, 'g', Object.values(layers));\n            anchorGroups.each(function (layer) {\n                const instances = layer.instances;\n                const elems = self.createElement(this, 'g', instances, className);\n                const linkedLayer = self.firebolt.context.getLayerByName(layer.linkedLayer);\n                const [transformedData, schema] = linkedLayer.getTransformedDataFromIdentifiers(dataModel);\n                const transformedDataModel = new DataModel(transformedData, schema);\n                elems.each(function (d, i) {\n                    instances[i].data(transformedDataModel).mount(this);\n                });\n            });\n        }\n        return this;\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class PersistentAnchors extends AnchorEffect {\n    static formalName () {\n        return 'persistent-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-persistent-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class BrushAnchors extends AnchorEffect {\n    static formalName () {\n        return 'brush-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-brush-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import * as BEHAVIOURS from './enums/behaviours';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: ['selectionBox', {\n        name: 'highlighter',\n        options: {\n            strategy: 'fade'\n        }\n    }, 'brush-anchors'],\n    [`${BEHAVIOURS.BRUSH},${BEHAVIOURS.SELECT}`]: [{\n        name: 'tooltip',\n        options: {\n            strategy: 'showSelectedItems',\n            order: 0,\n            filter: context => context.config().mode === 'fragmented'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'highlight'\n        }\n    }, 'crossline', {\n        name: 'tooltip',\n        options: {\n            order: 9999\n        }\n    }, 'anchors'],\n    [BEHAVIOURS.FILTER]: ['filter'],\n    [BEHAVIOURS.SELECT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'focus'\n        }\n    }, 'persistent-anchors']\n};\n","export const CLASSPREFIX = 'muze';\nexport const STACK = 'stack';\nexport const GROUP = 'group';\nexport const IDENTITY = 'identity';\nexport const ANGLE = 'angle';\nexport const RADIUS = 'radius';\nexport const SIZE = 'size';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const OUTER_RADIUS_VALUE = 'outerRadiusValue';\nexport const TEXT_ANCHOR_MIDDLE = 'middle';\nexport const ENCODING = {\n    X: 'x',\n    Y: 'y',\n    X0: 'x0',\n    Y0: 'y0'\n};\n\nexport const ASCENDING = 'asc';\n\nexport const AGG_FN_SUM = 'sum';\n\nexport const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { CLASSPREFIX, STACK } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-area',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: STACK\n    },\n    interaction: {\n\n    },\n    nearestPointThreshold: 10,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        y0: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * This is an interface class which any new layer class has to extend.\n *\n * @example\n * class BarLayer extends BaseLayer {\n *   update (params) {\n *       // super.update(params);\n *       // Update the bar layer\n *   }\n * }\n * @class\n */\nexport default class SimpleLayer {\n\n    formalName () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets or gets the dependencies.\n     * @param {Object} dependencies Dependencies needed by layer\n     * @return {BaseLayer} Instance of base layer.\n     */\n    dependencies () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the config of the layer\n     *\n     * @param {Object} config Configuration of layer\n     * @return {Object} configuration of layer\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Acts as a getter or setter function\n     * When setter\n     * Returns the datamodel of the layer\n     * @param { DataModel } dataModel instance of DataModel\n     * @return { DataModel } DataModel instance of the layer\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized schema of the layer\n     * @return {Object} Serialized schema\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the unique identifier of this layer\n     * @return {string} id of the layer\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n    /*\n     * This method resolves the x, y, x0 and y0 values from the transformed data.\n     * It also checks the type of transformed data for example, if it is a stacked data\n     * then it fetches the y and y0 values from the stacked data.\n     * @param {Array.<Array>} transformedData transformed data\n     * @param {Object} fieldMap field definitions\n     * @param {string} transformType type of transformed data - stack, group or identity.\n     * @return {Array.<Object>} Normalized data\n     * @private\n     */\n    normalizeTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of dataModel\n     * @param {Object} config configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     * @private\n     */\n    getTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a nominal field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @return {Array} Domain values array.\n     */\n    _calculateDomainFromData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, color, etc.\n     * @return {Object} Axis domains\n     */\n    getDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for getting nearest point\n     * @return {BaseLayer} Instance of base layer\n     */\n    getNearestPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for highlighting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    highlightPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for deselecting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    dehighlightPoint () {\n        return this;\n    }\n\n    linkLayerStore () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets the container element for the layer to be renderered.\n     * @param {SVGElement} mountPoint SVG element or group element.\n     */\n    mount () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n","export const props = {\n    axes: {},\n    mount: {},\n    measurement: {},\n    metaInf: {},\n    data: {},\n    config: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { Symbols } from 'muze-utils';\nimport * as AxisOrientation from '../enums/axis-orientation';\n\n/**\n * @module Axis\n * This file exports constants that are used to reference axis orientations\n * in a consistent manner.\n */\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\n\n/**\n  * This object is used to associate the axis orientation with the d3 class\n  * used to represent that axis.\n  */\nexport const axisOrientationMap = {\n    [AxisOrientation.LEFT]: Symbols.axisLeft,\n    [AxisOrientation.BOTTOM]: Symbols.axisBottom,\n    [AxisOrientation.RIGHT]: Symbols.axisRight,\n    [AxisOrientation.TOP]: Symbols.axisTop\n};\n","/**\n * @module axis\n * This file exports constants used to reference scale type\n * consistently throughout the project.\n */\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const TIME = 'temporal';\nexport const COLOR = 'color';\nexport const ORDINAL = 'ordinal';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\nexport const LOG = 'log';\nexport const POW = 'pow';\nexport const IDENTITY = 'identity';\nexport const SEQUENTIAL = 'sequential';\nexport const THRESHOLD = 'threshold';\n","export const CLASSPREFIX = 'muze';\n\nexport const CONTINOUS = 'continous';\nexport const DISCRETE = 'discrete';\nexport const SEQUENTIAL = 'sequential';\nexport const ORDINAL = 'ordinal';\nexport const LINEAR = 'linear';\nexport const THRESHOLD = 'threshold';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\n\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\n\nexport const DOMAIN = 'domain';\nexport const BAND = 'band';\nexport const HIDDEN = 'hidden';\nexport const NUMBER = 'number';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\n\nexport const RGB = 'rgb';\nexport const HEX = 'hex';\nexport const HSLA = 'hsla';\nexport const HSL = 'hsl';\n\n","import { scales, colorSchemes } from 'muze-utils';\n\nimport {\n    SEQUENTIAL,\n    ORDINAL,\n    LINEAR,\n    CONTINOUS,\n    THRESHOLD,\n    QUANTIZE\n} from './enums/constants';\n\nimport * as ScaleType from './enums/scale-type';\n\nconst {\n    scaleLinear,\n    scaleThreshold,\n    scaleLog,\n    scalePow,\n    scaleIdentity,\n    scaleOrdinal,\n    scaleSequential,\n    scaleQuantize,\n    scaleQuantile,\n    schemeCategory10,\n    schemeCategory20,\n    schemeCategory20b,\n    scaleBand,\n    scaleTime\n} = scales;\nexport const scaleMap = {\n    [ScaleType.LINEAR]: scaleLinear,\n    [ScaleType.BAND]: scaleBand,\n    [ScaleType.QUANTIZE]: scaleQuantize,\n    [ScaleType.QUANTILE]: scaleQuantile,\n    [ScaleType.THRESHOLD]: scaleThreshold,\n    [ScaleType.SEQUENTIAL]: scaleSequential,\n    [ScaleType.LOG]: scaleLog,\n    [ScaleType.POW]: scalePow,\n    [ScaleType.IDENTITY]: scaleIdentity,\n    [ScaleType.TIME]: scaleTime,\n    [ScaleType.COLOR]: scaleLinear,\n    [ScaleType.ORDINAL]: scaleOrdinal\n};\nexport const SCHEMES = {\n    SCHEME1: schemeCategory10,\n    SCHEME2: schemeCategory20,\n    SCHEME3: schemeCategory20b\n};\n\n/**\n * Accepts a scheme in a string format and returns the scale from d3-scale-chromatic\n *\n * @export\n * @param {string} scheme a string representing the kind of scheme for the color axis\n * @return {Object} The corresponding scale from a scheme type from d3 chromatic scale\n */\nexport function getScheme (scheme) {\n    if (scheme[0] === 'i') {\n        return scaleSequential(colorSchemes[scheme]);\n    }\n    return scaleOrdinal(colorSchemes[scheme]);\n}\n\n/**\n *\n *\n * @export\n * @param {*} scheme\n *\n */\nexport function getSchemeType (scheme) {\n    let schemeType = '';\n    if (scheme && typeof (scheme) === 'string') {\n        schemeType = scheme[0] === 'i' ? SEQUENTIAL : ORDINAL;\n    } else {\n        schemeType = ORDINAL;\n    }\n    return schemeType;\n}\n\n/**\n * This function is used to create a scale that is assigned to\n * an instance of axis.\n *\n * @export\n * @param {Object} params the input parameters to create a Scale object\n * @param {string} params.type the type of scale\n * @param {Array} params.range the range of scale\n * @return {Object} instance of scale\n */\nexport function createScale (params) {\n    if (!params.type || !scaleMap[params.type]) {\n        throw new Error(`${params.type} is not a valid scale type`);\n    }\n    if (!Array.isArray(params.range)) {\n        throw new Error('range parameter must be an array');\n    }\n    let scaleFactory = null;\n    const range = params.range;\n    // @todo: do it using scale decorator\n    if (params.type === LINEAR && params.interpolator) {\n        scaleFactory = scaleMap[params.interpolator];\n        if (params.interpolator === ScaleType.POW) {\n            return scaleFactory().range(range).exponent(params.exponent);\n        } else if (params.interpolator === ScaleType.LOG) {\n            return scaleFactory().range(range).base([params.base]);\n        }\n    } else {\n        scaleFactory = scaleMap[params.type];\n    }\n\n    if (params.type === QUANTIZE) {\n        scaleFactory().nice();\n    }\n    return scaleFactory().range(range);\n}\n\n/**\n * This method is used to update the range of a scale\n * so that the core module can remain agnostic of the d3\n * scale api.\n *\n * @export\n * @param {Scale} scale Instance of d3 Scale.\n * @param {Array} range new range of the scale.\n * @return {Scale} Updated scale.\n */\nexport function updateScaleRange (scale, range) {\n    return scale.range(range);\n}\n\n/**\n *\n *\n * @export\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} steps\n *\n */\nexport function getScaleType (domainType, rangeType, steps) {\n    if (rangeType === CONTINOUS) {\n        return LINEAR;\n    }\n    if (domainType === CONTINOUS) {\n        if (steps instanceof Array) {\n            return THRESHOLD;\n        }\n        return QUANTIZE;\n    }\n    return ORDINAL;\n}\n","import { getUniqueId } from 'muze-utils';\nimport { CLASSPREFIX } from '../enums/constants';\n\n/**\n *\n *\n */\nexport const defaultConfig = {\n    id: getUniqueId(),\n    axisName: {\n        defClassName: 'axis-name'\n    },\n    axisNamePadding: 12,\n    base: 10,\n    classPrefix: CLASSPREFIX,\n    className: `${CLASSPREFIX}-axis`,\n    exponent: 1,\n    interpolator: 'linear',\n    fixedBaseline: true,\n    labels: {\n        rotation: null,\n        smartTicks: null\n    },\n    orientation: 'left',\n    numberFormat: val => val,\n    padding: 0.3,\n    nice: true,\n    numberOfTicks: 10,\n    rotate: false,\n    show: true,\n    showAxisName: true,\n    showInnerTicks: true,\n    showOuterTicks: true,\n    style: {},\n    type: 'linear',\n    tickFormat: null,\n    tickValues: null,\n    xOffset: 0,\n    yOffset: 0\n};\n\n","/**\n * This file exports functionality that is used to render axis.\n */\nimport { selectElement, makeElement, angleToRadian } from 'muze-utils';\nimport * as AxisOrientation from './enums/axis-orientation';\nimport { LINEAR, HIDDEN, BOTTOM, TOP } from './enums/constants';\n\n/**\n *\n *\n * @param {*} instance\n * @param {*} container\n * @param {*} labelManager\n * @param {*} config\n */\nconst rotateAxis = (instance, tickText, labelManager) => {\n    let rotation;\n    const axis = instance.axis();\n    const config = instance.config();\n    const renderConfig = instance.renderConfig();\n    const smartTicks = instance.smartTicks();\n    const scale = axis.scale();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n    const ticks = labelFunc();\n    const {\n        orientation,\n        fixedBaseline,\n        type\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n\n    rotation = labels.rotation;\n\n    const tickSize = instance.getTickSize();\n    tickText.each(function (d, index) {\n        let yShift;\n        let xShift;\n        let datum = smartTicks[index] ? smartTicks[index].text : d;\n\n        const tickFormatter = axis.tickFormat() ? axis.tickFormat : null;\n\n        const temp = tickSize ? (tickFormatter ? tickFormatter()(d) : datum) : '';\n\n        datum = temp.toString();\n\n        const tickLabelDim = labelManager.getOriSize(datum);\n\n        const width = tickLabelDim.width * 0.5;\n        const height = tickLabelDim.height * 0.5;\n\n        if (rotation < 0) {\n            rotation = 360 + rotation;\n        }\n\n        const quadrant = 4 - Math.floor(rotation / 90);\n        const rotationNormalizer = ((quadrant % 2 === 0) ? rotation : 180 * Math.ceil(rotation / 180) - rotation) % 180;\n\n        yShift = Math.sqrt(height ** 2 + width ** 2) * Math.sin(angleToRadian(rotationNormalizer));\n\n        if ((quadrant === 3 || quadrant === 2) && !(rotationNormalizer > 67.5 && rotationNormalizer <= 90)) {\n            yShift += height * 2;\n        }\n        xShift = width;\n\n        if (rotation === 90) {\n            xShift = height;\n        } else if (rotation === 270) {\n            xShift = -height;\n        } else {\n            xShift = 0;\n        }\n\n        if (orientation === AxisOrientation.TOP) {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift + xShift / 2 : xShift;\n            selectElement(this)\n                            .attr('transform', `translate(${-xShift + tickSize}\n                                ${-yShift - tickSize}) rotate(${rotation})`);\n        } else {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift - xShift / 2 : xShift;\n\n            selectElement(this)\n                            .attr('transform', `translate(${xShift - tickSize}\n                                ${yShift + tickSize}) rotate(${rotation})`);\n        }\n        selectElement(this).transition()\n                        .duration(1000).text(datum);\n    });\n    return tickText;\n};\n\n/**\n *\n *\n * @param {*} tickText\n * @param {*} axisInstance\n */\nconst changeTickOrientation = (selectContainer, axisInstance, tickSize) => {\n    const {\n        _smartTicks\n    } = axisInstance;\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const {\n        orientation,\n        classPrefix\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n    const {\n        rotation,\n        smartTicks: isSmartTicks\n    } = labels;\n\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.selectAll('tspan').remove();\n\n   // rotate labels if not enough space is available\n    if (rotation && (orientation === TOP || orientation === BOTTOM)) {\n        rotateAxis(axisInstance, tickText, labelManager);\n    } else if (!rotation && !isSmartTicks) {\n        tickText.attr('transform', '');\n    } else {\n        tickText.text('');\n        if (orientation === TOP || orientation === BOTTOM) {\n            tickText.attr('y', 0)\n                            .attr('x', 0)\n                            .attr('transform', '')\n                            .text('');\n            const tspan = makeElement(tickText, 'tspan', (d, i) => {\n                if (_smartTicks[i]) {\n                    return _smartTicks[i].lines;\n                } return [];\n            }, `${classPrefix}-smart-text`);\n\n            tspan.attr('dy', '0')\n                            .style('opacity', '0')\n\n                            .transition()\n                            .duration(1000)\n                            .on('end', axisInstance.registerAnimationDoneHook())\n                            .attr('dy', (d, i) => {\n                                if (orientation === BOTTOM || i !== 0) {\n                                    return _smartTicks[0].oriTextHeight;\n                                }\n                                return -_smartTicks[0].oriTextHeight * (_smartTicks[0].lines.length - 1) - tickSize;\n                            })\n                            .style('opacity', 1)\n                            .text(e => e)\n                            .attr('x', 0);\n        } else {\n            const tspan = makeElement(tickText, 'tspan', (d, i) => _smartTicks[i].lines, `${classPrefix}-smart-text`);\n            tspan.text(e => e);\n        }\n    }\n\n    return tickText;\n};\n\nconst setFixedBaseline = (axisInstance) => {\n    const {\n        fixedBaseline\n    } = axisInstance.config();\n    if (fixedBaseline) {\n        axisInstance.setFixedBaseline();\n    }\n};\n\n/**\n *\n *\n * @param {*} textNode\n * @param {*} orientation\n * @param {*} measures\n */\nconst setAxisNamePos = (textNode, orientation, measures) => {\n    const {\n        axisNameHeight,\n        yOffset,\n        labelOffset,\n        availableSpace\n    } = measures;\n    switch (orientation) {\n    case AxisOrientation.LEFT:\n        textNode.attr('transform',\n            `translate(${-(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(-90)`);\n        break;\n    case AxisOrientation.RIGHT:\n        textNode.attr('transform',\n             `translate(${(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(90)`);\n        break;\n    case AxisOrientation.TOP:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${-availableSpace.height + axisNameHeight})`);\n        break;\n    case AxisOrientation.BOTTOM:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${availableSpace.height - axisNameHeight / 2})`);\n        break;\n    default:\n    }\n    return textNode;\n};\n\n/**\n * This method is used to render the axis inside an\n * svg container.\n *\n * @export\n * @param {Object} axisInstance the nput object required to render axis\n * @param {string} axisInstance.orientation the orientation of axis\n * @param {Object} axisInstance.scale instance of d3 scale\n * @param {SVGElement} axisInstance.container the container in which to render\n */\nexport function renderAxis (axisInstance) {\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const mount = axisInstance.mount();\n    const range = axisInstance.range();\n    const axis = axisInstance.axis();\n    const scale = axisInstance.scale();\n    const domain = axisInstance.domain() || [];\n    const {\n        _axisNameStyle: axisNameStyle,\n        _tickLabelStyle: tickLabelStyle,\n        _tickFormatter: axisTickFormatter,\n        tickValues\n     } = axisInstance;\n    const {\n        orientation,\n        name,\n        xOffset,\n        yOffset,\n        axisNamePadding,\n        className,\n        id,\n        classPrefix\n     } = config;\n    const {\n        show,\n        showAxisName,\n        labels\n    } = renderConfig;\n    if (!show || !domain.length) {\n        return;\n    }\n\n    const tickSize = axisInstance.getTickSize();\n\n    const selectContainer = makeElement(selectElement(mount), 'g', [axisInstance], `${className}`, {},\n        key => key.config().id);\n\n    // Set style for tick labels\n    labelManager.setStyle(tickLabelStyle);\n\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    axis.tickFormat(axisTickFormatter(tickValues || axis.tickValues() || labelFunc()));\n\n    // Get range(length of range)\n    const availableSpace = Math.abs(range[0] - range[1]);\n\n    // Get width and height taken by axis labels\n    const labelProps = axisInstance.axisComponentDimensions().largestTickDimensions;\n\n    // Draw axis ticks\n    selectContainer.attr('transform', `translate(${xOffset},${yOffset})`);\n    setFixedBaseline(axisInstance);\n    if (labels.smartTicks === false || tickSize === 0) {\n        selectContainer.transition()\n                        .duration(1000)\n                        .on('end', axisInstance.registerAnimationDoneHook())\n                        .call(axis);\n    } else {\n        selectContainer.call(axis);\n    }\n    selectContainer.selectAll('.tick').classed(`${classPrefix}-ticks`, true);\n    selectContainer.selectAll('.tick line').classed(`${classPrefix}-tick-lines`, true);\n\n    // Set classes for ticks\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.classed(`${classPrefix}-ticks`, true)\n                    .classed(`${classPrefix}-ticks-${id}`, true);\n\n    changeTickOrientation(selectContainer, axisInstance, tickSize);\n\n    // Create axis name\n    const textNode = makeElement(selectContainer, 'text', [name], `${classPrefix}-axis-name`)\n                    .attr('text-anchor', 'middle')\n                    .classed(`${classPrefix}-axis-name-${id}`, true)\n                    .text(d => d);\n\n    // Hide axis name if show is off\n    textNode.classed(HIDDEN, !showAxisName);\n\n     // render labels based on orientation of axis\n    const labelOffset = availableSpace / 2;\n\n    // Set style for axis name\n    labelManager.setStyle(axisNameStyle);\n    const axisNameSpace = labelManager.getOriSize(name);\n    const measures = {\n        labelProps,\n        tickSize,\n        axisNamePadding,\n        axisNameHeight: axisNameSpace.height,\n        axisNameWidth: axisNameSpace.width,\n        yOffset,\n        xOffset,\n        labelOffset,\n        availableSpace: axisInstance.availableSpace()\n    };\n    // Set position for axis name\n    setAxisNamePos(textNode, orientation, measures);\n}\n","import { BOTTOM, TOP } from '../enums/axis-orientation';\n\nconst setAxisRange = (context, type, rangeBounds, offset) => {\n    context.range(rangeBounds);\n    offset && context.config({ [`${type}Offset`]: offset });\n};\n\nconst getAxisOffset = (timeDiff, range, domain) => {\n    const pvr = Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    const width = (pvr * timeDiff);\n    const avWidth = (range[1] - range[0]);\n    const bars = avWidth / width;\n    const barWidth = avWidth / (bars + 1);\n    const diff = avWidth - barWidth * bars;\n\n    return diff / 2;\n};\n\nexport const adjustRange = (minDiff, range, domain, orientation) => {\n    const diff = getAxisOffset(minDiff, range, domain);\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        range[0] += diff;\n        range[1] -= diff;\n    } else {\n        range[0] -= diff;\n        range[1] += diff;\n    }\n    return range;\n};\n\nexport const spaceSetter = (context, spaceConfig) => {\n    let tickInterval;\n    let heightForTicks;\n    const {\n        width: availWidth,\n        height: availHeight,\n        padding\n    } = context.availableSpace();\n    const {\n        top,\n        left,\n        bottom,\n        right\n    } = padding;\n    const {\n        isOffset\n    } = spaceConfig;\n    const {\n        showAxisName,\n        labels\n    } = context.renderConfig();\n    const {\n        rotation\n    } = labels;\n    const {\n        orientation,\n        fixedBaseline,\n        axisNamePadding,\n        tickValues\n    } = context.config();\n    const {\n        tickDimensions,\n        allTickDimensions,\n        axisNameDimensions,\n        tickSize\n    } = context.getAxisDimensions();\n    const {\n        height: tickDimHeight,\n        width: tickDimWidth\n    } = tickDimensions;\n    const namePadding = showAxisName ? axisNamePadding : 0;\n    const labelConfig = { smartTicks: true, rotation: labels.rotation };\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minDiff = context._minDiff;\n    const domain = context.domain();\n    const axisNameHeight = axisNameDimensions.height;\n\n    return {\n        time: {\n            x: () => {\n                const tickShifter = tickDimWidth / 2;\n\n                setAxisRange(context, 'y', adjustRange(minDiff,\n                    [tickShifter, availWidth - left - right - tickShifter], domain, orientation),\n                        isOffset ? availHeight : null);\n\n                tickInterval = ((availWidth) / context.getTickValues().length)\n                                     - minTickDistance.width;\n\n                heightForTicks = availHeight - axisNameDimensions.availHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickSpace.width && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = labels.rotation === null ? -90 : rotation;\n\n                    // Remove ticks if not enough height\n                    if (tickInterval < minTickSpace.height) {\n                        heightForTicks = availHeight;\n                        tickInterval = minTickSpace.height;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                let widthForTicks = availWidth;\n                const tickShifter = tickDimHeight / 2;\n\n                setAxisRange(context, 'x', adjustRange(minDiff,\n                    [availHeight - top - bottom - tickShifter, tickShifter], domain, orientation),\n                        isOffset ? availWidth : null);\n\n                if ((availWidth - axisNameHeight - namePadding) <= minTickDistance.width) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        band: {\n            x: () => {\n                setAxisRange(context, 'y', [0, availWidth - left - right], isOffset ? availHeight : null);\n                const range = context.range();\n\n                // Get Tick Interval\n                tickInterval = ((range[1] - range[0]) / (tickValues || domain).length) - minTickDistance.width;\n\n                // Get height available for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickSpace.width && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation === null ? -90 : rotation;\n                    labelConfig.smartTicks = false;\n\n                    // Ticks with overlapping height\n                    if (tickInterval < minTickSpace.height) {\n                        heightForTicks = 0;\n                        tickInterval = 0;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                        context.range([minTickSpace.height / 2, availWidth - minTickSpace.height / 2]);\n                    }\n                } else if (tickValues) {\n                    const interval = (availWidth / domain.length) - minTickDistance.width;\n                    if (interval < minTickSpace.width) {\n                        context.range([minTickSpace.height / 2, availWidth - minTickSpace.height / 2]);\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false, showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                setAxisRange(context, 'x', [availHeight - bottom, top], isOffset ? availWidth : null);\n\n                let widthForTicks = availWidth;\n                if (availWidth - axisNameHeight - namePadding <= minTickDistance.width) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        continous: {\n            x: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.width / 2;\n                const baseline = fixedBaseline ? 0 : tickShifter;\n\n                setAxisRange(context, 'y', [baseline + left, availWidth - right - tickShifter],\n                    isOffset ? availHeight : null);\n\n                const range = context.range();\n\n                // Get Tick widths and available space\n                const totalTickWidth = allTickDimensions.length * (tickDimensions.width + minTickDistance.width);\n                const availableSpace = range[1] - range[0];\n\n                 // Rotate labels if not enough width\n                if (availableSpace < totalTickWidth && labels.rotation === null) {\n                    labelConfig.rotation = -90;\n                }\n\n                // Remove ticks if not enough height\n                if (availHeight - axisNameHeight - namePadding < tickDimensions.height) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availHeight < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            },\n            y: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.height / 2;\n                const baseline = fixedBaseline ? 1 : tickShifter;\n\n                setAxisRange(context, 'x', [availHeight - bottom - baseline, tickShifter + top],\n                    isOffset ? availWidth : null);\n\n                // Remove display of ticks if no space is left\n                if (availWidth < tickDimensions.width + axisNameHeight + namePadding) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availWidth < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            }\n        }\n    };\n};\n","import { TOP, LEFT, BOTTOM } from '../enums/axis-orientation';\n\nexport const getRotatedSpaces = (rotation = 0, width, height) => {\n    let rotatedHeight = height;\n    let rotatedWidth = width;\n    if (rotation) {\n        const angle = ((rotation || 0) * Math.PI) / 180;\n        rotatedWidth = Math.abs(height * Math.sin(angle)) + Math.abs(width * Math.cos(angle));\n        rotatedHeight = Math.abs(width * Math.sin(angle)) + Math.abs(height * Math.cos(angle));\n    }\n    return { width: rotatedWidth, height: rotatedHeight };\n};\n\nexport const setOffset = (context) => {\n    let x = 0;\n    let y = 0;\n    const logicalSpace = context.logicalSpace();\n    const config = context.config();\n    const {\n        orientation,\n        xOffset,\n        yOffset\n    } = config;\n    if (orientation === LEFT) {\n        x = xOffset === undefined ? logicalSpace.width : xOffset;\n    }\n    if (orientation === TOP) {\n        y = yOffset === undefined ? logicalSpace.height : yOffset;\n    }\n    context.config({ xOffset: x, yOffset: y });\n};\n\nexport const getNumberOfTicks = (availableSpace, labelDim, axis, axisInstance) => {\n    const ticks = axis.scale().ticks();\n    const { numberOfTicks } = axisInstance.config();\n    const tickLength = ticks.length;\n    let numberOfValues = tickLength;\n\n    if (tickLength * (labelDim * 1.5) > availableSpace) {\n        numberOfValues = Math.floor(availableSpace / (labelDim * 1.5));\n    }\n\n    numberOfValues = Math.min(numberOfTicks, Math.max(2, numberOfValues));\n\n    return axis.scale().ticks(numberOfValues);\n};\n\nexport const getAxisComponentDimensions = (context) => {\n    let largestTick = '';\n    let largestTickDimensions = { width: 0, height: 0 };\n    let smartTick = {};\n    let axisTicks;\n    const allTickDimensions = [];\n    const scale = context.scale();\n    const { showAxisName } = context.renderConfig();\n    const { tickValues, name } = context.config();\n    const { labelManager } = context.dependencies();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    // set the style on the shared label manager instance\n    labelManager.setStyle(context._tickLabelStyle);\n\n    // get the values along the domain\n    axisTicks = tickValues || labelFunc();\n\n    // Get the tick labels\n    axisTicks = axisTicks.map((originalLabel, i) => {\n        const label = context.getFormattedText(originalLabel, i, axisTicks);\n\n    // convert to string for quant values\n        const tickDimensions = labelManager.getOriSize(label);\n\n    // Get spaces for all labels\n        allTickDimensions.push(tickDimensions);\n\n    // Getting largest label\n        if (tickDimensions.width > largestTickDimensions.width) {\n            largestTick = label;\n            smartTick = context.smartTicks() ? context.smartTicks()[i] : {};\n            largestTickDimensions = tickDimensions;\n        }\n        return label;\n    });\n\n    labelManager.setStyle(context._axisNameStyle);\n    const axisNameDimensions = showAxisName ? labelManager.getOriSize(name) : { width: 0, height: 0 };\n\n    return {\n        axisNameDimensions,\n        largestTick,\n        largestTickDimensions,\n        allTickDimensions,\n        axisTicks,\n        smartTick,\n        tickSize: context.getTickSize()\n    };\n};\n\nexport const computeAxisDimensions = (context) => {\n    let tickDimensions = {};\n    const { labels } = context.renderConfig();\n    const { smartTicks, rotation } = labels;\n    const {\n        largestTickDimensions,\n        axisTicks,\n        smartTick,\n        axisNameDimensions,\n        allTickDimensions,\n        tickSize\n    } = getAxisComponentDimensions(context);\n    const { height: labelHeight, width: labelWidth } = largestTickDimensions;\n\n    // get the domain of axis\n    const domain = context.domain();\n    // const angle = ((rotation || 0) * Math.PI) / 180;\n\n    if (domain.length === 0) {\n        return null;\n    }\n    if (smartTicks) {\n        tickDimensions = smartTick;\n    } else {\n        tickDimensions = { width: labelWidth, height: labelHeight };\n    }\n    tickDimensions = getRotatedSpaces(rotation, tickDimensions.width, tickDimensions.height);\n\n    if (tickSize === 0) {\n        tickDimensions = { width: 0, height: 0 };\n    }\n    return {\n        allTickDimensions,\n        tickSize,\n        tickDimensions,\n        axisNameDimensions,\n        largestTickDimensions,\n        axisTicks\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getHorizontalAxisSpace = (context, axisDimensions, range) => {\n    let width;\n    let height;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    width = range && range.length ? range[1] - range[0] : 0;\n\n    height = 0;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        width = ((max - min) / Math.abs(minTickDiff)) * (tickDimWidth + context._minTickDistance.width);\n    }\n    if (!width || width === 0) {\n        height = Math.max(tickDimWidth, tickDimHeight);\n    } else {\n        height = tickDimHeight;\n    }\n    height += (showAxisName ? axisDimHeight + axisNamePadding : 0) + tickSize;\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getVerticalAxisSpace = (context, axisDimensions) => {\n    let height;\n    let width;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    height = 0;\n    width = tickDimWidth;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        height = ((max - min) / Math.abs(minTickDiff)) * tickDimHeight;\n    }\n    width += (showAxisName ? axisDimHeight : 0) + tickSize + axisNamePadding;\n\n    return {\n        height,\n        width\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateBandSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show } = context.renderConfig();\n    const { largestTickDimensions, axisTicks, allTickDimensions } = axisDimensions;\n    const { height: largestDimHeight } = largestTickDimensions;\n    const minTickWidth = context._minTickDistance.width;\n    if (orientation === TOP || orientation === BOTTOM) {\n        let {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n\n        if (!width || width === 0) {\n            width = allTickDimensions.reduce((t, n) =>\n                t + Math.min(n.width, n.height) + minTickWidth, 0);\n        }\n        if (show === false) {\n            height = 0;\n        }\n\n        return {\n            width,\n            height\n        };\n    }\n\n    let {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    if (!height || height === 0) {\n        height = axisTicks.length * (largestDimHeight + context._minTickDistance.height) + largestDimHeight;\n    }\n    if (show === false) {\n        width = 0;\n    }\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateContinousSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show, showAxisName } = context.renderConfig();\n    const { axisNameDimensions } = axisDimensions;\n\n    if (show === false) {\n        return {\n            width: 0,\n            height: 0\n        };\n    }\n\n    const { width: axisNameWidth } = axisNameDimensions;\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        const {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n        const axisWidth = Math.max(width, axisNameWidth);\n\n        return {\n            width: axisWidth,\n            height\n        };\n    }\n    const {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    const effHeight = Math.max(height, showAxisName ? axisNameWidth : 0);\n\n    return {\n        width,\n        height: effHeight\n    };\n};\n\n/**\n * Overwrites domain with user defined domain (if present)\n * @param {Object} context reference to current axes\n * @param {Array} domain default domain\n *\n * @return {Array} domain\n */\nexport const getValidDomain = (context, domain) => {\n    const { domain: userDom } = context.config();\n\n    if (userDom) {\n        domain = userDom;\n    }\n\n    return domain;\n};\n\nexport const setContinousAxisDomain = (context, domain) => {\n    const { nice } = context.config();\n    const scale = context.scale.bind(context);\n\n    scale().domain(domain);\n    nice && scale().nice();\n    context._domain = scale().domain();\n};\n\n/**\n * Checks if any of the properties have changed between two objects\n * @param {Object} obj first object\n * @param {Object} obj1 second object\n * @param {Array} properties properties to be compared between two objects\n *\n * @return {Boolean} boolean value\n */\nexport const hasAxesConfigChanged = (obj = {}, obj1 = {}, properties) => {\n    if (!Object.keys(obj).length || !Object.keys(obj1).length) {\n        return false;\n    }\n    return properties.some(key => obj[key] !== obj1[key]);\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { hasAxesConfigChanged } from './helper';\n\nexport const PROPS = {\n    availableSpace: {},\n    axisDimensions: {},\n    axisComponentDimensions: {},\n    config: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._config || {});\n            const mockedOldConfig = mergeRecursive({}, oldConfig);\n            value = mergeRecursive(mockedOldConfig, value);\n\n            value.axisNamePadding = Math.max(value.axisNamePadding, 0);\n            const shouldAxesScaleUpdate = hasAxesConfigChanged(\n                value, oldConfig, ['interpolator', 'exponent', 'base', 'orientation']\n            );\n            const tickFormatter = context.sanitizeTickFormatter(value);\n\n            if (shouldAxesScaleUpdate) {\n                context._scale = context.createScale(value);\n                context._axis = context.createAxis(value);\n            }\n\n            context._tickFormatter = ticks => tickFormatter(ticks);\n\n            const {\n                labels,\n                show,\n                showInnerTicks,\n                showOuterTicks,\n                showAxisName\n            } = value;\n            context.renderConfig({\n                labels,\n                show,\n                showInnerTicks,\n                showOuterTicks,\n                showAxisName\n            });\n            return value;\n        }\n    },\n    renderConfig: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._renderConfig || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    logicalSpace: {},\n    mount: {\n    },\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.logicalSpace(null);\n            return value;\n        }\n    },\n\n    smartTicks: {},\n    tickSize: {},\n    maxTickSpaces: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import {\n    mergeRecursive,\n    getSmartComputedStyle,\n    selectElement,\n    generateGetterSetters,\n    getUniqueId\n} from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { defaultConfig } from './default-config';\nimport { renderAxis } from '../axis-renderer';\nimport { spaceSetter } from './space-setter';\nimport {\n    getAxisComponentDimensions,\n    computeAxisDimensions,\n    calculateContinousSpace,\n    setOffset,\n    getValidDomain\n} from './helper';\nimport { PROPS } from './props';\n\nexport default class SimpleAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @memberof SimpleAxis\n     */\n    constructor (config, dependencies) {\n        this._id = getUniqueId();\n\n        this._dependencies = dependencies;\n        this._mount = null;\n        this._range = [];\n        this._domain = [];\n        this._domainLock = false;\n        this._axisDimensions = {};\n        this._smartTicks = [];\n\n        const defCon = mergeRecursive({}, this.constructor.defaultConfig());\n        const simpleConfig = mergeRecursive(defCon, config);\n\n        const bodyElem = selectElement('body');\n        const classPrefix = simpleConfig.classPrefix;\n        this._tickLabelStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-ticks`);\n        this._axisNameStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-axis-name`);\n\n        dependencies.labelManager.setStyle(this._tickLabelStyle);\n        const dist = dependencies.labelManager.getOriSize('w');\n\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n        this._minTickSpace = dependencies.labelManager.getOriSize('www');\n\n        generateGetterSetters(this, PROPS);\n        this.config(simpleConfig);\n\n        this._scale = this.createScale(this._config);\n        this._axis = this.createAxis(this._config);\n        this._animationDonePromises = [];\n    }\n\n    /**\n     * Returns the default configuration of simple axis\n     *  @return {Object} default configurations\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    scale (...params) {\n        if (params.length) {\n            this._scale = params[0];\n            return this;\n        }\n        return this._scale;\n    }\n\n    resetDomain () {\n        this._domain = [];\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    axis (...params) {\n        if (params.length) {\n            this._axis = params[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            let domainValue = domain[0];\n            domainValue = getValidDomain(this, domainValue);\n            this.scale().domain(domainValue);\n            this._domain = this.scale().domain();\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    setAxisComponentDimensions () {\n        this.axisComponentDimensions(getAxisComponentDimensions(this));\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const scale = createScale({\n            padding,\n            interpolator,\n            exponent,\n            base,\n            range,\n            type: this.constructor.type()\n        });\n\n        return scale;\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat, numberFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(numberFormat(val), val, i, ticks);\n        }\n\n        return () => val => numberFormat(val);\n    }\n\n    resetLogicalSpace () {\n        this.logicalSpace(null);\n        this.range([]);\n        const {\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName\n        } = this.config();\n        this.renderConfig({\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName\n        });\n    }\n\n    getFormattedText (text, index, axisTicks) {\n        const formatter = this._tickFormatter;\n\n        return formatter(axisTicks)(text, index);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const { orientation } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            return axis;\n        }\n        return null;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).continous.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).continous.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        return this;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this.scale()(domainVal);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        return this.axis().tickSize();\n    }\n\n    /**\n     * Gets the space occupied by the parts of an axis\n     *\n     * @return {Object} object with details about sizes of the axis.\n     * @memberof SimpleAxis\n     */\n    getAxisDimensions (...params) {\n        this.axisDimensions(computeAxisDimensions(this, ...params));\n        return this.axisDimensions();\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateContinousSpace(this));\n            this.logicalSpace();\n            setOffset(this);\n        }\n\n        return this.logicalSpace();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (value) {\n        return this.scale().invert(value);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     *\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        return [v1, v2];\n    }\n\n    invertExtent (v1, v2) {\n        return [this.invert(v1), this.invert(v2)];\n    }\n\n    getMinTickDifference () {\n        return this.domain();\n    }\n\n    getFormattedTickValues (tickValues) {\n        return tickValues;\n    }\n\n    /**\n     * This method returns the width in pixels for one\n     * unit along the axis. It is only applicable to band scale\n     * and returns undefined for other scale type.\n     *\n     * @return {number} the width of one band along band scale axis\n     * @memberof SimpleAxis\n     */\n    getUnitWidth () {\n        return 0;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof SimpleAxis\n     */\n    serialize () {\n        return {\n            name: this.name,\n            type: this.type,\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to render the axis inside\n     * the supplied svg container.\n     *\n     * @param {SVGElement} svg the svg element in which to render the path\n     * @memberof SimpleAxis\n     */\n    /* istanbul ignore next */render () {\n        if (this.mount()) {\n            this.setTickConfig();\n            renderAxis(this);\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    remove () {\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    unsubscribe () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    isReverse () {\n        const range = this.range();\n        return range[0] > range[1];\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getPixelToValueRatio () {\n        const scale = this.scale();\n        const range = scale.range();\n        const domain = scale.domain();\n\n        return Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    }\n\n     /**\n     * Notifies when all animations/transitions of the axis are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n}\n\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LinearInterpolator {\n\n    createScale (config) {\n        const {\n            range\n        } = config;\n        const scaleFactory = scaleMap.linear;\n        this._scale = scaleFactory().range(range);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain.length && domain[0] === domain[1]) {\n            domain = [0, +domain[0] * 2];\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LogInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            base\n        } = config;\n        const scaleFactory = scaleMap.log;\n        this._scale = scaleFactory().range(range).base(base);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal <= 0) {\n            return 1;\n        }\n\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain[0] <= 0) {\n            return [Math.max(1, domain[0]), Math.max(1, domain[1])];\n        } return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class PowInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            exponent\n        } = config;\n        const scaleFactory = scaleMap.pow;\n        this._scale = scaleFactory().range(range).exponent(exponent);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { spaceSetter } from './space-setter';\nimport { LINEAR, LOG, POW } from '../enums/scale-type';\nimport { LogInterpolator, PowInterpolator, LinearInterpolator } from './interpolators';\nimport {\n    getNumberOfTicks,\n    getValidDomain,\n    setContinousAxisDomain\n} from './helper';\n\nexport const interpolatorMap = {\n    [LOG]: LogInterpolator,\n    [POW]: PowInterpolator,\n    [LINEAR]: LinearInterpolator\n};\n\nexport default class ContinousAxis extends SimpleAxis {\n    constructor (config, dependencies) {\n        config.tickFormat = config.tickFormat || (val => val);\n        super(config, dependencies);\n    }\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const InterpolatorCls = interpolatorMap[interpolator];\n\n        this._interpolator = new InterpolatorCls();\n        let scale = this._interpolator.createScale({\n            padding,\n            exponent,\n            base,\n            range\n        });\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ContinousAxis\n     */\n    static type () {\n        return LINEAR;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this._interpolator.getScaleValue(domainVal);\n    }\n /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n\n        return axis.tickSize();\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (domain) {\n        if (domain) {\n            if (Array.isArray(domain) && domain.length) {\n                domain = getValidDomain(this, domain);\n                domain = this._interpolator.sanitizeDomain(domain);\n                setContinousAxisDomain(this, domain);\n                this.setAxisComponentDimensions();\n                this.logicalSpace(null);\n            } else {\n                this._domain = [];\n            }\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).continous.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).continous.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} tickValues\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        const {\n            tickValues\n        } = this.config();\n        const {\n            showInnerTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        if (!showInnerTicks) {\n            axis.tickValues([]);\n            return this;\n        }\n\n        if (tickValues) {\n            tickValues instanceof Array && this.axis().tickValues(tickValues);\n            return this;\n        }\n        axis.tickValues(this.getTickValues());\n\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickValues () {\n        let labelDim = 0;\n        const {\n            orientation,\n            tickValues\n        } = this.config();\n        const range = this.range();\n        const axis = this.axis();\n\n        const availableSpace = Math.abs(range[0] - range[1]);\n\n        const labelProps = this.axisComponentDimensions().largestTickDimensions;\n\n        if (tickValues) {\n            return axis.scale().ticks(tickValues);\n        }\n        labelDim = labelProps[orientation === BOTTOM || orientation === TOP ? 'width' : 'height'];\n\n        return getNumberOfTicks(availableSpace, labelDim, axis, this);\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline (tickText) {\n        const {\n            orientation\n        } = this.config();\n        const {\n            labels\n        } = this.renderConfig();\n\n        const {\n            rotation\n        } = labels;\n        const axis = this.axis();\n        const ticks = axis.scale().ticks();\n        const { width, height } = this.axisComponentDimensions().allTickDimensions[0];\n        axis.tickTransform((d) => {\n            if (d === ticks[0]) {\n                if ((orientation === LEFT || orientation === RIGHT)) {\n                    return `translate(0, -${(height) / 3}px)`;\n                }\n                if ((orientation === TOP || orientation === BOTTOM) && !rotation) {\n                    return `translate(${width / 2}px,  ${0}px)`;\n                }\n            } return '';\n        });\n        return tickText;\n    }\n\n}\n","import SimpleAxis from './simple-axis';\nimport { BAND } from '../enums/scale-type';\nimport { TOP, BOTTOM } from '../enums/axis-orientation';\nimport { calculateBandSpace, setOffset, getRotatedSpaces } from './helper';\nimport { spaceSetter } from './space-setter';\n\nexport default class BandAxis extends SimpleAxis {\n\n    /**\n     *\n     *\n     * @param {*} config axes configuration\n     *\n     * @memberof BandAxis\n     */\n    createScale (config) {\n        return super.createScale(config);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BandAxis\n     */\n    static type () {\n        return BAND;\n    }\n\n     /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).band.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).band.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks = '';\n        let smartlabel;\n        const domain = this.domain();\n        const { labelManager } = this._dependencies;\n        const { tickValues, padding } = this.config();\n        const { labels } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        tickValues && this.axis().tickValues(tickValues);\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        // Update padding between plots\n        if (typeof padding === 'number' && padding >= 0 && padding <= 1) {\n            this.scale().padding(padding);\n        }\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n            setOffset(this);\n            this.logicalSpace();\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     *\n     *\n     * @memberof BandAxis\n     */\n    getTickValues () {\n        return this.axis().scale().domain();\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(val, i, ticks);\n        }\n        return () => val => this.valueParser()(val);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    getUnitWidth () {\n        return this.scale().bandwidth();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        axis.tickSizeInner(showInnerTicks ? 6 : 0);\n        axis.tickSizeOuter(showOuterTicks ? 6 : 0);\n        return axis.tickSize();\n    }\n\n    invertExtent (v1, v2) {\n        return this.scale().invertExtent(v1, v2);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        const scale = this.scale();\n        const range = scale.range();\n        const reverse = range[0] > range[1];\n\n        const extent = this.invertExtent(v1, v2);\n        const p1 = scale(reverse ? extent[extent.length - 1] : extent[0]);\n        const p2 = scale(reverse ? extent[0] : extent[extent.length - 1]) + scale.bandwidth();\n        return [p1, p2];\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { TIME } from '../enums/scale-type';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { calculateBandSpace, getRotatedSpaces, getValidDomain, setContinousAxisDomain, setOffset } from './helper';\nimport { spaceSetter } from './space-setter';\n\n/**\n *\n *\n * @export\n * @class TimeAxis\n * @extends {SimpleAxis}\n */\nexport default class TimeAxis extends SimpleAxis {\n\n    constructor (...params) {\n        super(...params);\n        this._minDiff = Infinity;\n    }\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof TimeAxis\n     */\n    createScale (range) {\n        let scale = super.createScale(range);\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TimeAxis\n     */\n    static type () {\n        return TIME;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const { orientation } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            return axis;\n        }\n        return null;\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return (ticks) => {\n                const rawTicks = ticks.map(t => t.getTime());\n                return (val, i) => tickFormat(val, val.getTime(), i, rawTicks);\n            };\n        }\n        return () => text => this.scale().tickFormat()(text);\n    }\n\n     /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n        return super.getTickSize();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TimeAxis\n     */\n    getTickValues () {\n        return this.config().tickValues || this.scale().ticks();\n    }\n\n    /**\n     *\n     *\n     * @param {*} diff\n     *\n     * @memberof TimeAxis\n     */\n    minDiff (diff) {\n        this._minDiff = Math.min(this._minDiff, diff);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (domain) {\n        if (domain) {\n            domain = getValidDomain(this, domain);\n            setContinousAxisDomain(this, domain);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n            this.logicalSpace();\n            setOffset(this);\n        }\n        return this.logicalSpace();\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).time.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).time.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks;\n        let smartlabel;\n        const { tickValues } = this.config();\n        const { labels } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { labelManager } = this._dependencies;\n        const domain = this.getTickValues();\n\n        tickValues && this.axis().tickValues(tickValues);\n\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n}\n","export const x11Colors = {\n    Pink: { hex: 'ffc0cb', rgb: '255,192,203' },\n    LightPink: { hex: 'ffb6c1', rgb: '255,182,193' },\n    HotPink: { hex: 'ff69b4', rgb: '255,105,180' },\n    DeepPink: { hex: 'ff1493', rgb: '255,20,147' },\n    PaleVioletRed: { hex: 'db7093', rgb: '219,112,147' },\n    MediumVioletRed: { hex: 'c71585', rgb: '199,21,133' },\n    LightSalmon: { hex: 'ffa07a', rgb: '255,160,122' },\n    Salmon: { hex: 'fa8072', rgb: '250,128,114' },\n    DarkSalmon: { hex: 'e9967a', rgb: '233,150,122' },\n    LightCoral: { hex: 'f08080', rgb: '240,128,128' },\n    IndianRed: { hex: 'cd5c5c', rgb: '205,92,92' },\n    Crimson: { hex: 'dc143c', rgb: '220,20,60' },\n    FireBrick: { hex: 'b22222', rgb: '178,34,34' },\n    DarkRed: { hex: '8b0000', rgb: '139,0,0' },\n    Red: { hex: 'ff0000', rgb: '255,0,0' },\n    OrangeRed: { hex: 'ff4500', rgb: '255,69,0' },\n    Tomato: { hex: 'ff6347', rgb: '255,99,71' },\n    Coral: { hex: 'ff7f50', rgb: '255,127,80' },\n    DarkOrange: { hex: 'ff8c00', rgb: '255,140,0' },\n    Orange: { hex: 'ffa500', rgb: '255,165,0' },\n    Gold: { hex: 'ffd700', rgb: '255,215,0' },\n    Yellow: { hex: 'ffff00', rgb: '255,255,0' },\n    LightYellow: { hex: 'ffffe0', rgb: '255,255,224' },\n    LemonChiffon: { hex: 'fffacd', rgb: '255,250,205' },\n    LightGoldenrodYellow: { hex: 'fafad2', rgb: '250,250,210' },\n    PapayaWhip: { hex: 'ffefd5', rgb: '255,239,213' },\n    Moccasin: { hex: 'ffe4b5', rgb: '255,228,181' },\n    PeachPuff: { hex: 'ffdab9', rgb: '255,218,185' },\n    PaleGoldenrod: { hex: 'eee8aa', rgb: '238,232,170' },\n    Khaki: { hex: 'f0e68c', rgb: '240,230,140' },\n    DarkKhaki: { hex: 'bdb76b', rgb: '189,183,107' },\n    Cornsilk: { hex: 'fff8dc', rgb: '255,248,220' },\n    BlanchedAlmond: { hex: 'ffebcd', rgb: '255,235,205' },\n    Bisque: { hex: 'ffe4c4', rgb: '255,228,196' },\n    NavajoWhite: { hex: 'ffdead', rgb: '255,222,173' },\n    Wheat: { hex: 'f5deb3', rgb: '245,222,179' },\n    BurlyWood: { hex: 'deb887', rgb: '222,184,135' },\n    Tan: { hex: 'd2b48c', rgb: '210,180,140' },\n    RosyBrown: { hex: 'bc8f8f', rgb: '188,143,143' },\n    SandyBrown: { hex: 'f4a460', rgb: '244,164,96' },\n    Goldenrod: { hex: 'daa520', rgb: '218,165,32' },\n    DarkGoldenrod: { hex: 'b8860b', rgb: '184,134,11' },\n    Peru: { hex: 'cd853f', rgb: '205,133,63' },\n    Chocolate: { hex: 'd2691e', rgb: '210,105,30' },\n    SaddleBrown: { hex: '8b4513', rgb: '139,69,19' },\n    Sienna: { hex: 'a0522d', rgb: '160,82,45' },\n    Brown: { hex: 'a52a2a', rgb: '165,42,42' },\n    Maroon: { hex: '800000', rgb: '128,0,0' },\n    DarkOliveGreen: { hex: '556b2f', rgb: '85,107,47' },\n    Olive: { hex: '808000', rgb: '128,128,0' },\n    OliveDrab: { hex: '6b8e23', rgb: '107,142,35' },\n    YellowGreen: { hex: '9acd32', rgb: '154,205,50' },\n    LimeGreen: { hex: '32cd32', rgb: '50,205,50' },\n    Lime: { hex: '00ff00', rgb: '0,255,0' },\n    LawnGreen: { hex: '7cfc00', rgb: '124,252,0' },\n    Chartreuse: { hex: '7fff00', rgb: '127,255,0' },\n    GreenYellow: { hex: 'adff2f', rgb: '173,255,47' },\n    SpringGreen: { hex: '00ff7f', rgb: '0,255,127' },\n    MediumSpringGreen: { hex: '00fa9a', rgb: '0,250,154' },\n    LightGreen: { hex: '90ee90', rgb: '144,238,144' },\n    PaleGreen: { hex: '98fb98', rgb: '152,251,152' },\n    DarkSeaGreen: { hex: '8fbc8f', rgb: '143,188,143' },\n    MediumSeaGreen: { hex: '3cb371', rgb: '60,179,113' },\n    SeaGreen: { hex: '2e8b57', rgb: '46,139,87' },\n    ForestGreen: { hex: '228b22', rgb: '34,139,34' },\n    Green: { hex: '008000', rgb: '0,128,0' },\n    DarkGreen: { hex: '006400', rgb: '0,100,0' },\n    MediumAquamarine: { hex: '66cdaa', rgb: '102,205,170' },\n    Aqua: { hex: '00ffff', rgb: '0,255,255' },\n    Cyan: { hex: '00ffff', rgb: '0,255,255' },\n    LightCyan: { hex: 'e0ffff', rgb: '224,255,255' },\n    PaleTurquoise: { hex: 'afeeee', rgb: '175,238,238' },\n    Aquamarine: { hex: '7fffd4', rgb: '127,255,212' },\n    Turquoise: { hex: '40e0d0', rgb: '64,224,208' },\n    MediumTurquoise: { hex: '48d1cc', rgb: '72,209,204' },\n    DarkTurquoise: { hex: '00ced1', rgb: '0,206,209' },\n    LightSeaGreen: { hex: '20b2aa', rgb: '32,178,170' },\n    CadetBlue: { hex: '5f9ea0', rgb: '95,158,160' },\n    DarkCyan: { hex: '008b8b', rgb: '0,139,139' },\n    Teal: { hex: '008080', rgb: '0,128,128' },\n    LightSteelBlue: { hex: 'b0c4de', rgb: '176,196,222' },\n    PowderBlue: { hex: 'b0e0e6', rgb: '176,224,230' },\n    LightBlue: { hex: 'add8e6', rgb: '173,216,230' },\n    SkyBlue: { hex: '87ceeb', rgb: '135,206,235' },\n    LightSkyBlue: { hex: '87cefa', rgb: '135,206,250' },\n    DeepSkyBlue: { hex: '00bfff', rgb: '0,191,255' },\n    DodgerBlue: { hex: '1e90ff', rgb: '30,144,255' },\n    CornflowerBlue: { hex: '6495ed', rgb: '100,149,237' },\n    SteelBlue: { hex: '4682b4', rgb: '70,130,180' },\n    RoyalBlue: { hex: '4169e1', rgb: '65,105,225' },\n    Blue: { hex: '0000ff', rgb: '0,0,255' },\n    MediumBlue: { hex: '0000cd', rgb: '0,0,205' },\n    DarkBlue: { hex: '00008b', rgb: '0,0,139' },\n    Navy: { hex: '000080', rgb: '0,0,128' },\n    MidnightBlue: { hex: '191970', rgb: '25,25,112' },\n    Lavender: { hex: 'e6e6fa', rgb: '230,230,250' },\n    Thistle: { hex: 'd8bfd8', rgb: '216,191,216' },\n    Plum: { hex: 'dda0dd', rgb: '221,160,221' },\n    Violet: { hex: 'ee82ee', rgb: '238,130,238' },\n    Orchid: { hex: 'da70d6', rgb: '218,112,214' },\n    Fuchsia: { hex: 'ff00ff', rgb: '255,0,255' },\n    Magenta: { hex: 'ff00ff', rgb: '255,0,255' },\n    MediumOrchid: { hex: 'ba55d3', rgb: '186,85,211' },\n    MediumPurple: { hex: '9370db', rgb: '147,112,219' },\n    BlueViolet: { hex: '8a2be2', rgb: '138,43,226' },\n    DarkViolet: { hex: '9400d3', rgb: '148,0,211' },\n    DarkOrchid: { hex: '9932cc', rgb: '153,50,204' },\n    DarkMagenta: { hex: '8b008b', rgb: '139,0,139' },\n    Purple: { hex: '800080', rgb: '128,0,128' },\n    Indigo: { hex: '4b0082', rgb: '75,0,130' },\n    DarkSlateBlue: { hex: '483d8b', rgb: '72,61,139' },\n    SlateBlue: { hex: '6a5acd', rgb: '106,90,205' },\n    MediumSlateBlue: { hex: '7b68ee', rgb: '123,104,238' },\n    White: { hex: 'ffffff', rgb: '255,255,255' },\n    Snow: { hex: 'fffafa', rgb: '255,250,250' },\n    Honeydew: { hex: 'f0fff0', rgb: '240,255,240' },\n    MintCream: { hex: 'f5fffa', rgb: '245,255,250' },\n    Azure: { hex: 'f0ffff', rgb: '240,255,255' },\n    AliceBlue: { hex: 'f0f8ff', rgb: '240,248,255' },\n    GhostWhite: { hex: 'f8f8ff', rgb: '248,248,255' },\n    WhiteSmoke: { hex: 'f5f5f5', rgb: '245,245,245' },\n    Seashell: { hex: 'fff5ee', rgb: '255,245,238' },\n    Beige: { hex: 'f5f5dc', rgb: '245,245,220' },\n    OldLace: { hex: 'fdf5e6', rgb: '253,245,230' },\n    FloralWhite: { hex: 'fffaf0', rgb: '255,250,240' },\n    Ivory: { hex: 'fffff0', rgb: '255,255,240' },\n    AntiqueWhite: { hex: 'faebd7', rgb: '250,235,215' },\n    Linen: { hex: 'faf0e6', rgb: '250,240,230' },\n    LavenderBlush: { hex: 'fff0f5', rgb: '255,240,245' },\n    MistyRose: { hex: 'ffe4e1', rgb: '255,228,225' },\n    Gainsboro: { hex: 'dcdcdc', rgb: '220,220,220' },\n    LightGray: { hex: 'd3d3d3', rgb: '211,211,211' },\n    Silver: { hex: 'c0c0c0', rgb: '192,192,192' },\n    DarkGrey: { hex: 'a9a9a9', rgb: '169,169,169' },\n    Grey: { hex: '808080', rgb: '128,128,128' },\n    DimGrey: { hex: '696969', rgb: '105,105,105' },\n    LightSlateGrey: { hex: '778899', rgb: '119,136,153' },\n    SlateGrey: { hex: '708090', rgb: '112,128,144' },\n    DarkSlateGrey: { hex: '2f4f4f', rgb: '47,79,79' },\n    Black: { hex: '000000', rgb: '0,0,0' }\n};\n","import {\n    LINEAR\n} from '../enums/constants';\n/**\n * Set of default colors\n */\nexport const palette = [\n    '#086bb6',\n    '#f37d45',\n    '#f5ce02',\n    '#67bda0',\n    '#c54e4e',\n    '#ae70af'\n];\n\nexport const DEFAULT_GRADIENT_COLOR = '#eaeaea';\n\nexport const DEFAULT_CONFIG = {\n    range: palette,\n    value: palette[0],\n    step: false,\n    stops: 5,\n    type: LINEAR\n};\n","import { mergeRecursive, detectColor, hexToHsv, rgbToHsv } from 'muze-utils';\nimport { x11Colors } from './color-maps';\nimport { palette, DEFAULT_GRADIENT_COLOR } from './defaults';\nimport { LINEAR, RGB, HEX, HSL, HSLA } from '../enums/constants';\n\nexport const getHslString = hslArr => `hsla(${hslArr[0] * 360},${hslArr[1] * 100}%,${hslArr[2] * 100}%,\\\n${hslArr[3] || 1})`;\n\nexport const convertToXllString = baseString => (baseString.split(' ') || [])\n                .reduce((x, e) => `${x}${e.charAt(0).toUpperCase()}${e.slice(1)}`, '');\n\nexport const getActualHslColor = (e, paletteColor) => {\n    let color = '';\n    if (typeof e === 'string') {\n        e = e.replace(/ /g, '');\n        e = e.toLowerCase();\n        if (detectColor(e) === HSL || detectColor(e) === HSLA) {\n            color = e.match(/(\\d+(\\.\\d+)?)/g);\n            color = [color[0] / 360, color[1] / 100, color[2] / 100, color[3] || 1];\n        } else if (detectColor(e) === HEX) {\n            color = hexToHsv(e);\n        } else if (detectColor(e) === RGB) {\n            const col = e.substring(e.indexOf('(') + 1, e.lastIndexOf(')')).split(/,\\s*/);\n            color = rgbToHsv(...col);\n        } else if (x11Colors[convertToXllString(e)]) {\n            color = rgbToHsv(...x11Colors[convertToXllString(e)].rgb.split(','));\n        }\n    } else if (!(e instanceof Array)) {\n        color = rgbToHsv(paletteColor);\n    } else {\n        color = e;\n    }\n    return color;\n};\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => {\n            const defCon = mergeRecursive({}, context.constructor.defaultConfig());\n            if (config.type === LINEAR) {\n                config.range = config.range || [defCon.range[0]];\n                config.range = config.range.length > 1 ? config.range : [DEFAULT_GRADIENT_COLOR, ...config.range];\n            }\n            const oldConfig = mergeRecursive(defCon, context.config());\n            const newConfig = mergeRecursive(oldConfig, config);\n\n            if (newConfig.range instanceof Array) {\n                newConfig.range = newConfig.range.map((e, i) => getActualHslColor(e, palette[i]));\n                newConfig.stops = config.stops || newConfig.range.length;\n            }\n            newConfig.value = getActualHslColor(newConfig.value, newConfig.value);\n            return newConfig;\n        }\n    },\n    domain: {},\n    scale: {},\n    uniqueValues: {}\n};\n","import { numberInterpolator, piecewiseInterpolator, hslInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, SEQUENTIAL, ORDINAL, QUANTILE } from '../enums/scale-type';\nimport { getHslString } from './props';\n\nconst getStops = (domain, stops) => {\n    let newStops = [];\n\n    if (stops instanceof Array) {\n        newStops = stops.slice().sort();\n        newStops = [...new Set([domain[0], ...stops, domain[1]])].sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i <= stops; i++) {\n            newStops[i] = interpolator(i / stops);\n        }\n    }\n\n    if (newStops[0] < domain[0]) {\n        newStops.shift();\n    }\n    return { domain, newStops };\n};\n\nconst rangeStops = (newStopsLength, range) => {\n    let newRange = [];\n    const maxRangeLength = Math.min(range.length, 18);\n\n    if (newStopsLength > maxRangeLength) {\n        const interpolator = piecewiseInterpolator()(hslInterpolator(), range.map(e => getHslString(e)));\n        for (let i = 0; i < newStopsLength; i++) {\n            newRange[i] = interpolator(i / (newStopsLength - 1));\n        }\n    } else {\n        newRange = range.slice(0, newStopsLength);\n    }\n    return { newRange };\n};\n\n/**\n*\n*\n* @param {*} domain\n*\n*/\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomainMeasure = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { domain, uniqueVals, scaleDomain: [0, 1], range };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain, nice: true, range };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} stops\n *\n */\nconst steppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, stops);\n    const { newRange } = rangeStops(newStops.length - 1, range);\n\n    return { uniqueVals, domain: newStops, nice: true, range: newRange };\n};\n\nconst continousSteppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, range.length - 1);\n    const hslRange = range.map(e => getHslString(e));\n    return { uniqueVals, domain: newStops, nice: true, range: hslRange };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst uniqueRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst indexedRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale) => scale(domainValue);\n\n/**\n *\n *\n * @param {*} stops\n */\nconst strategies = () => ({\n    [`${CONTINOUS}-${CONTINOUS}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomain,\n        value: () => uniqueRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${ORDINAL}`]: {\n        scale: ORDINAL,\n        domainRange: () => normalDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}-${ORDINAL}`]: {\n        scale: LINEAR,\n        domainRange: () => continousSteppedDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${ORDINAL}`]: {\n        scale: QUANTILE,\n        domainRange: () => steppedDomain,\n        value: () => normalRange\n\n    }\n});\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} stops\n */\nexport const strategyGetter = (domainType, rangeType, schemeType, stops) =>\n     strategies(stops)[`${domainType}-${rangeType}-${schemeType || ''}`];\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters, rgbToHsv } from 'muze-utils';\nimport { createScale, getScheme, getSchemeType } from '../scale-creator';\nimport { CONTINOUS, DISCRETE, COLOR } from '../enums/constants';\nimport { strategyGetter } from './color-strategy';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { PROPS, getHslString } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ColorAxis {\n\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} config input parameters.\n    * @param {Object | undefined} params.range Type of color range.\n    * @param {string} params.name the label to show on axis.\n    * @param {string} params.type The type of scale to handle.\n    * @memberof ColorAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n        this.config(config);\n\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = (this._config.type === 'linear' && !this._config.step) ? CONTINOUS : DISCRETE;\n\n        this._schemeType = getSchemeType(this._config.range);\n\n        this._colorStrategy = this.setColorStrategy(this._domainType, this._rangeType, this._schemeType);\n        this._scale = this.createScale(this._colorStrategy);\n\n        this._id = getUniqueId();\n\n        this.updateDomain(config.domain);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return COLOR;\n    }\n\n    /**\n     *\n     *\n     * @param {*} colorStrategy\n     *\n     * @memberof ColorAxis\n     */\n    createScale (colorStrategy) {\n        const { range } = this.config();\n        if (range && typeof (range) === 'string') {\n            return getScheme(range);\n        }\n        return createScale({\n            type: colorStrategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setColorStrategy (domainType, rangeType, schemeType) {\n        const { stops } = this.config();\n\n        return strategyGetter(domainType, rangeType, schemeType, stops);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getHslString (hslColorArray) {\n        return getHslString(hslColorArray);\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getColor (domainVal) {\n        return this.getHslString(this.getRawColor(domainVal));\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getRawColor (domainVal) {\n        if (this.domain() && domainVal !== undefined) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const color = this._colorStrategy.value(range)(domainVal, scale, this.domain(), this.uniqueValues());\n            if (color) {\n                if (typeof color === 'string') {\n                    const col = color.substring(color.indexOf('(') + 1, color.lastIndexOf(')')).split(/,\\s*/);\n                    return rgbToHsv(...col);\n                }\n                return [...color];\n            }\n        }\n        return [...this.config().value];\n    }\n\n    /**\n     *\n     *\n     * @param {*} [domain=[]]\n     *\n     * @memberof ColorAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const domainRangeFn = this._colorStrategy.domainRange();\n            const scaleInfo = domainRangeFn(domain, this.config().stops, range);\n\n            this.domain(scaleInfo.domain);\n            scaleInfo.range && this.scale().range(scaleInfo.range);\n            this.uniqueValues(scaleInfo.uniqueVals);\n            this.scale().domain(scaleInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            config: this.config()\n        };\n    }\n\n    transformColor (color, transformationArr) {\n        const h = color[0] * 360;\n        const s = color[1] * 100;\n        const l = color[2] * 100;\n        const a = color[3] || 1;\n        const newH = h + transformationArr[0];\n        const newS = s + transformationArr[1];\n        const newL = l + transformationArr[2];\n        const newA = a + transformationArr[3] || 0;\n\n        return { color: `hsla(${newH},${newS}%,${newL}%,${newA})`, hsla: [newH / 360, newS / 100, newL / 100, newA] };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n\n}\n","export const DEFAULT_CONFIG = {\n    value: 36,\n    range: [36, 1000]\n};\n","import { numberInterpolator, piecewiseInterpolator, InvalidAwareTypes } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, THRESHOLD } from '../enums/scale-type';\n\nconst treatNullMeasures = (domainVal, sizeVal) => {\n    if (domainVal instanceof InvalidAwareTypes) {\n        return 0;\n    }\n    return sizeVal;\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} intervals\n *\n */\nconst steppedDomain = (domain, intervals) => {\n    let newIntervals = [];\n    if (intervals instanceof Array) {\n        newIntervals = intervals.slice().sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i < intervals; i++) {\n            newIntervals[i] = interpolator(i / (intervals - 1));\n        }\n    }\n    if (newIntervals[0] < domain[0]) {\n        newIntervals.shift();\n    }\n    const retDomain = newIntervals;\n    return { uniqueVals: newIntervals, domain: retDomain, nice: true };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst discreteRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n    const interpolator = numberInterpolator()(...scale.range());\n    return treatNullMeasures(domainValue, interpolator(numVal));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst pieceWiseRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    const fn = piecewiseInterpolator()(numberInterpolator(), [...scale.range()]);\n    return fn(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale) => treatNullMeasures(domainValue, scale(domainValue));\n\n\n\n/**\n *\n *\n * @param {*} intervals\n */\nconst strategies = {\n    [`${DISCRETE}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: indexedDomain,\n        range: pieceWiseRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: normalDomain,\n        range: normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}`]: {\n        scale: THRESHOLD,\n        domain: steppedDomain,\n        range: discreteRange\n    }\n};\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} intervals\n */\nexport const strategyGetter = (domainType, rangeType) =>\n     strategies[`${domainType}-${rangeType}`];\n","export const PROPS = {\n    config: {},\n    domain: {\n        sanitization: (context, value) => {\n            context.scale().domain(value);\n            return value;\n        }\n    },\n    range: {},\n    scale: {},\n    uniqueValues: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters, InvalidAwareTypes } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SIZE, CONTINOUS, DISCRETE } from '../enums/constants';\nimport { strategyGetter } from './size-strategy';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class SizeAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @param {Object} config input parameters.\n     * @memberof SizeAxis\n     */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig(), config);\n        // @todo: Will use configuration override using scale decorator\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = CONTINOUS;\n\n        this._sizeStrategy = this.setStrategy(this._domainType, this._rangeType);\n        this._scale = this.createScale(this._sizeStrategy);\n        this._range = this._config.range;\n\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setStrategy (domainType, rangeType) {\n        return strategyGetter(domainType, rangeType);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SizeAxis\n     */\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SIZE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof SizeAxis\n     */\n    getSize (domainVal = 0) {\n        let sizeVal = 1;\n        const {\n            value\n        } = this.config();\n        const scale = this.scale();\n        const domain = this.domain() || [1, 1];\n\n        if (!scale || domain[0] === domain[1]) {\n            sizeVal = value;\n        } else {\n            return this._sizeStrategy.range(domainVal, scale, this.domain(), this.uniqueValues());\n        }\n        return sizeVal;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SizeAxis\n     */\n    updateDomain (domain) {\n        if (domain) {\n            const domainFn = this._sizeStrategy.domain;\n\n            const domainInfo = domainFn(domain, this.config().intervals);\n\n            this.domain(domainInfo.domain);\n            this.uniqueValues(domainInfo.uniqueVals);\n\n            this.scale().domain(domainInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","export const DEFAULT_CONFIG = {\n    generator: null,\n    value: 'circle',\n    range: ['circle', 'diamond', 'star', 'cross', 'square', 'wye', 'triangle']\n};\n","export const PROPS = {\n    config: {},\n    domain: {},\n    scale: {},\n    uniqueValues: {},\n    generator: {}\n};\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, getSymbol, generateGetterSetters, mergeRecursive, InvalidAwareTypes } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SHAPE } from '../enums/constants';\nimport { shapeGenerator } from './helper';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ShapeAxis {\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} params input parameters.\n    * @param {Object | undefined} params.range Type of color scheme.\n    * @memberof ShapeAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(this._config, config);\n\n        this._scale = createScale({\n            type: 'ordinal',\n            range: this._config.range\n        });\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SHAPE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} value\n     *\n     * @memberof ShapeAxis\n     */\n    getShape (value) {\n        if (!this.scale() || !this.domain() || !value || value instanceof InvalidAwareTypes) {\n            return this.config().value;\n        }\n\n        if (this._generatedShapes) {\n            return this._generatedShapes[value];\n        }\n\n        const shapeType = this.scale()(value);\n        if (shapeType === 'string') {\n            return getSymbol(shapeType);\n        }\n\n        return shapeType;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof ShapeAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            this.uniqueValues(domain);\n            this.domain(domain);\n            this.scale().domain(domain);\n\n            if (this.config().generator) {\n                this._generatedShapes = shapeGenerator(domain, this.config().generator);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.config().range,\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","/**\n *\n *\n * @param {*} domain\n * @param {*} generatorFn\n *\n */\nexport const shapeGenerator = (domain, generatorFn) => {\n    const generatedShapes = {};\n    domain.forEach((value) => {\n        generatedShapes[value] = generatorFn(value);\n    });\n    return generatedShapes;\n};\n","import * as ScaleType from './enums/scale-type';\n\nconst DATA_TYPES = {\n    DIMENSION: 'dimension',\n    CATEGORICAL: 'categorical',\n    MEASURE: 'measure',\n    TEMPORAL: 'temporal'\n};\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    [DATA_TYPES.DIMENSION]: ScaleType.BAND,\n    [DATA_TYPES.MEASURE]: ScaleType.LINEAR,\n    [DATA_TYPES.TEMPORAL]: ScaleType.TIME\n};\n\n","import { nestCollection, InvalidAwareTypes } from 'muze-utils';\n\n/**\n * Create multiple datasets from a single dataset by grouping the data using\n * a dimensional field.\n * @param {Array} schema Name and type of fields are stored in schema\n * @param {Array} data Data array\n * @param {Object} config Configuration object\n * @return {Array} Grouped data array\n */\nexport default (schema, data, config) => {\n    const groupBy = config.groupBy instanceof Array ? config.groupBy : [config.groupBy];\n    const groupByIndices = groupBy.map(fieldName => schema.findIndex(d => d.name === fieldName));\n\n    if (groupByIndices.find(d => d === -1) !== undefined) {\n        throw new Error(`Groupby field ${groupBy} not found in schema`);\n    }\n\n    const groupedData = nestCollection({\n        keys: groupByIndices,\n        data\n    });\n\n    groupedData.forEach((d) => {\n        const key = d.key;\n        if (InvalidAwareTypes.isInvalid(key)) {\n            d.key = InvalidAwareTypes.getInvalidType(key);\n        }\n    });\n    return groupedData;\n};\n","/**\n * @module Transform\n * This file exports a function that is used to implement\n * the identity transform\n */\n /* eslint no-unused-vars: 0 */\n /**\n  * This function accepts data and returns the data unchanged.\n  * @param {Object} schema The schema.\n  * @param {Array} data The data array.\n  * @param {Object} config The config object.\n  * @return {Array} The unchanged data.\n  */\n function identityTransform (schema, data, config) {\n     return data;\n }\n\n export default identityTransform;\n","/**\n * @module Transform\n * This file exports the transform factory.\n */\nimport * as TransformType from '../enums/transform-type';\nimport identity from '../identity-transform';\nimport group from '../group-transform';\nimport stack from '../stack-transform';\n\n/* istanbul ignore next */\nconst transformMap = {\n    [TransformType.IDENTITY]: identity,\n    [TransformType.GROUP]: group,\n    [TransformType.STACK]: stack\n};\n\n/**\n * This function is used to retirn a transform associated\n * with the given type.\n *\n * @param {string} type The type of the transform.\n * @return {Function} The transform function.\n */\nfunction transformFactory (type) {\n    const transform = transformMap[type];\n    if (typeof transform !== 'function') {\n        throw new Error('Invalid transform type supplied.');\n    }\n    return transform;\n}\n\nexport default transformFactory;\n","/**\n * @module Transform\n * This module exports constants that are used to reference transforms in\n * a consistent manner throughout the project.\n */\n/* eslint one-var: 0 */\n export const IDENTITY = 'identity';\n export const GROUP = 'group';\n export const STACK = 'stack';\n export const FRACTURE = 'fracture';\n","import { stack } from 'muze-utils';\n\nimport group from '../group-transform';\n/*\n    Normalize the data to a form which can be given to d3 stack for stacking the data\n    ['Product', 'Sales', 'Region'],\n    0 ['A', 2000, 'North'],\n    1 ['A', 3000, 'South'],\n    2 ['B', 3000, 'South'],\n    3 ['B', 2000, 'North'],\n    4 ['C', 3000, 'South'],\n    5 ['C', 2000, 'North']\n            |\n            |\n    ['Product', 'North', 'South'],\n    ['A', 2000, 3000],\n    ['B', 2000, 3000],\n    ['C', 2000, 3000]\n*/\n// eslint-disable-next-line require-jsdoc\nconst normalizeData = (data, schema, valueField, uniqueField, groupBy) => {\n    const groupedData = group(schema, data, {\n        groupBy: uniqueField\n    });\n    const uniqueFieldIndex = schema.findIndex(d => d.name === uniqueField);\n    const valueFieldIndex = schema.findIndex(d => d.name === valueField);\n    const seriesKeyIndex = schema.findIndex(d => d.name === groupBy);\n    const seriesKeys = data.map(d => d[seriesKeyIndex]).filter((item, pos, arr) => arr.indexOf(item) === pos).sort();\n    const fieldNames = schema.reduce((acc, obj, i) => {\n        acc[i] = obj.name;\n        return acc;\n    }, {});\n    const dataArr = groupedData.map((arr) => {\n        const tuples = {};\n        const rowObj = arr.values.reduce((acc, row) => {\n            acc = row.reduce((obj, value, i) => {\n                if (i === seriesKeyIndex) {\n                    obj[value] = row[valueFieldIndex];\n                    tuples[value] = row;\n                } else if (i !== valueFieldIndex) {\n                    obj[fieldNames[i]] = value;\n                }\n                return obj;\n            }, acc);\n            return acc;\n        }, {});\n        rowObj._tuple = tuples;\n            // Set missing values field to zero value\n        seriesKeys.forEach((seriesKey) => {\n            if (rowObj[seriesKey] === undefined) {\n                rowObj[seriesKey] = 0;\n                const newArr = new Array(arr.values[0].length);\n                newArr[uniqueFieldIndex] = arr.key;\n                newArr[seriesKeyIndex] = seriesKey;\n                rowObj._tuple[seriesKey] = newArr;\n            }\n        });\n        return rowObj;\n    });\n\n    return {\n        data: dataArr,\n        keys: seriesKeys\n    };\n};\n/**\n * Generate a stacked representation of data\n * @param {Array} schema schema Array\n * @param {Array} data data array\n * @param {Object} config Configuration object\n * @return {Array} stacked data\n */\nexport default (schema, data, config) => {\n    const uniqueField = config.uniqueField;\n    const valueField = config.value;\n    const groupBy = config.groupBy;\n    const sort = config.sort || 'descending';\n    const normalizedData = normalizeData(data, schema, valueField, uniqueField, groupBy);\n    const keys = normalizedData.keys;\n    const map = {};\n    const orderBy = config.orderBy;\n    const orderIndex = schema.findIndex(d => d.name === orderBy);\n    const groupByIndex = schema.findIndex(d => d.name === groupBy);\n    if (orderIndex !== -1) {\n        keys.forEach((key) => {\n            const name = data.find(d => d[groupByIndex] === key);\n            map[key] = name[orderIndex];\n        });\n        normalizedData.keys.sort((a, b) => map[a].localeCompare(map[b]));\n    }\n\n    const stackData = stack({\n        keys: normalizedData.keys,\n        offset: config.offset || 'diverging',\n        order: sort,\n        data: normalizedData.data\n    });\n    stackData.forEach((seriesData) => {\n        seriesData.forEach((dataObj) => {\n            dataObj.data = dataObj.data._tuple[seriesData.key];\n        });\n    });\n    return stackData;\n};\n\n","import {\n    FieldType,\n    getDomainFromData,\n    setStyles,\n    easeFns,\n    selectElement,\n    DimensionSubtype,\n    STATE_NAMESPACES,\n    retrieveNearestGroupByReducers,\n    getObjProp\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { transformFactory } from '@chartshq/transform';\nimport { IDENTITY, STACK, GROUP, COLOR, SHAPE, SIZE, ENCODING, AGG_FN_SUM } from '../enums/constants';\n\nconst BAND = ScaleType.BAND;\n\nexport const getLayerColor = ({ datum, index }, { colorEncoding, colorAxis, colorFieldIndex }) => {\n    let rawColor = '';\n    let color = '';\n    if (colorEncoding && colorEncoding.value instanceof Function) {\n        color = colorEncoding.value(datum, index);\n        rawColor = colorEncoding.value(datum, index);\n    } else {\n        rawColor = colorAxis.getRawColor(datum._data[colorFieldIndex]);\n        color = colorAxis.getHslString(rawColor);\n    }\n    return { color, rawColor };\n};\n\nconst transfromColor = (colorAxis, datum, styleType, intensity) => {\n    datum.meta.stateColor[styleType] = datum.meta.stateColor[styleType] || datum.meta.originalColor;\n    const fillColorInfo = colorAxis.transformColor(datum.meta.stateColor[styleType], intensity);\n    datum.meta.stateColor[styleType] = fillColorInfo.hsla;\n\n    return fillColorInfo;\n};\n\nexport const applyInteractionStyle = (context, selectionSet, interactionStyles, config) => {\n    const elements = context.getPlotElementsFromSet(selectionSet);\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const apply = config.apply;\n    const interactionType = config.interactionType;\n    interactionStyles.forEach((style) => {\n        const styleType = style.type;\n        elements.style(styleType, ((d) => {\n            const { colorTransform, stateColor, originalColor } = d.meta;\n            colorTransform[interactionType] = colorTransform[interactionType] || {};\n            if (apply && !colorTransform[interactionType][styleType]) {\n                // fade selections\n                colorTransform[interactionType][styleType] = style.intensity;\n                const color = transfromColor(colorAxis, d, styleType, style.intensity).color;\n                return color;\n            }\n            if (!apply && colorTransform[interactionType][styleType]) {\n                 // unfade selections\n                colorTransform[interactionType][styleType] = null;\n                return transfromColor(colorAxis, d, styleType, style.intensity.map(e => -e)).color;\n            }\n            const [h, s, l, a] = stateColor[styleType] ? stateColor[styleType] : originalColor;\n            return `hsla(${h * 360},${s * 100}%,${l * 100}%, ${a || 1})`;\n        }));\n    });\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const fadeUnfadeSelection = (context, selectionSet, hasFaded, interaction) => {\n    const interactionConfig = { interaction, apply: hasFaded };\n    applyInteractionStyle(context, selectionSet, 'fade', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const focusUnfocusSelection = (context, selectionSet, isFocussed, interaction) => {\n    const interactionConfig = { interaction, apply: isFocussed };\n    applyInteractionStyle(context, selectionSet, 'focus', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} axes\n *\n */\nexport const getAxesScales = (axes) => {\n    const [xAxis, yAxis] = [ENCODING.X, ENCODING.Y].map(e => axes[e]);\n    const [xScale, yScale] = [xAxis, yAxis].map(e => e && e.scale());\n    return {\n        xAxis,\n        yAxis,\n        xScale,\n        yScale\n    };\n};\n\n/**\n *\n *\n * @param {*} encoding\n * @param {*} fieldsConfig\n *\n */\nexport const getEncodingFieldInf = (encoding, fieldsConfig) => {\n    const [xField, yField, x0Field, y0Field, colorField, shapeField, sizeField] =\n        [ENCODING.X, ENCODING.Y, ENCODING.X0, ENCODING.Y0, COLOR, SHAPE, SIZE].map(e => encoding[e] &&\n            encoding[e].field);\n\n    const [xFieldType, yFieldType] = [xField, yField, x0Field, y0Field].map(e => fieldsConfig[e] &&\n        fieldsConfig[e].def.type);\n\n    const [xFieldSubType, yFieldSubType] = [xField, yField].map(e => fieldsConfig[e] && (fieldsConfig[e].def.subtype ||\n        fieldsConfig[e].def.type));\n\n    const [xFieldIndex, yFieldIndex, x0FieldIndex, y0FieldIndex] = [xField, yField, x0Field, y0Field]\n        .map(e => fieldsConfig[e] && fieldsConfig[e].index);\n\n    return {\n        xField,\n        yField,\n        colorField,\n        shapeField,\n        sizeField,\n        x0Field,\n        y0Field,\n        xFieldType,\n        yFieldType,\n        xFieldSubType,\n        yFieldSubType,\n        xFieldIndex,\n        yFieldIndex,\n        x0FieldIndex,\n        y0FieldIndex\n    };\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} config\n * @param {*} transformType\n *\n */\nexport const transformData = (dataModel, config, transformType, encodingFieldInf) => {\n    const data = dataModel.getData({ withUid: true });\n    const schema = data.schema;\n    const transform = config.transform;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const uniqueField = xFieldType === FieldType.MEASURE ? yField : xField;\n\n    return transformFactory(transformType)(schema, data.data, {\n        groupBy: transform.groupBy,\n        uniqueField,\n        sort: transform.sort || 'none',\n        offset: transform.offset,\n        orderBy: transform.orderBy,\n        value: yFieldType === FieldType.MEASURE ? yField : xField\n    }, data.uids);\n};\n\nexport const getIndividualClassName = (d, i, data, context) => {\n    const className = context.config().individualClassName;\n    let classNameStr = '';\n    if (className instanceof Function) {\n        classNameStr = className(d, i, data, context);\n    }\n    return classNameStr;\n};\n\n/*\n * This method resolves the x, y, x0 and y0 values from the transformed data.\n * It also checks the type of transformed data for example, if it is a stacked data\n * then it fetches the y and y0 values from the stacked data.\n * @param {Array.<Array>} transformedData transformed data\n * @param {Object} fieldsConfig field definitions\n * @param {string} transformType type of transformed data - stack, group or identity.\n * @return {Array.<Object>} Normalized data\n*/\nexport const getNormalizedData = (transformedData, fieldsConfig, encodingFieldInf, transformType) => {\n    const transformedDataArr = transformType === IDENTITY ? [transformedData] : transformedData;\n    const {\n        xFieldType,\n        xFieldIndex,\n        yFieldIndex,\n        x0FieldIndex,\n        y0FieldIndex\n    } = encodingFieldInf;\n    const fieldsLen = Object.keys(fieldsConfig).length;\n    /**\n     * Returns normalized data from transformed data. It recursively traverses through\n     * the transformed data if there it is nested.\n     */\n    return transformedDataArr.map((data) => {\n        const values = transformType === GROUP ? data.values : data;\n        return values.map((d) => {\n            let pointObj = {};\n            let tuple;\n            if (transformType === STACK) {\n                tuple = d.data || [];\n                let y;\n                let y0;\n                let x;\n                let x0;\n                if (d[1] >= d[0]) {\n                    y = x0 = d[1];\n                    x = y0 = d[0];\n                } else {\n                    y = x0 = d[0];\n                    x = y0 = d[1];\n                }\n\n                pointObj = xFieldType === FieldType.MEASURE ? {\n                    x,\n                    x0,\n                    y: tuple[yFieldIndex],\n                    y0: tuple[yFieldIndex]\n                } : {\n                    x: tuple[xFieldIndex],\n                    x0: tuple[xFieldIndex],\n                    y,\n                    y0\n                };\n                pointObj._data = tuple;\n                pointObj._id = tuple[fieldsLen];\n            } else {\n                pointObj = {\n                    x: d[xFieldIndex],\n                    y: d[yFieldIndex],\n                    x0: d[x0FieldIndex],\n                    y0: d[y0FieldIndex]\n                };\n                pointObj._data = d;\n                pointObj._id = d[fieldsLen];\n            }\n            return pointObj;\n        });\n    }).filter(d => d.length);\n};\n\nexport const calculateDomainFromData = (data, encodingFieldInf, transformType) => {\n    const {\n        xFieldSubType,\n        yFieldSubType,\n        xField,\n        yField,\n        x0Field,\n        y0Field\n    } = encodingFieldInf;\n    const domains = {};\n    const yEnc = ENCODING.Y;\n    const xEnc = ENCODING.X;\n    if (xField) {\n        domains.x = getDomainFromData(data, x0Field || transformType === STACK ? [xEnc, ENCODING.X0] : [xEnc, xEnc],\n            xFieldSubType);\n    }\n    if (yField) {\n        domains.y = getDomainFromData(data, y0Field || transformType === STACK ? [ENCODING.Y0, ENCODING.Y] :\n            [yEnc, yEnc], yFieldSubType);\n    }\n\n    return domains;\n};\n\nexport const attachDataToVoronoi = (voronoi, points) => {\n    voronoi.data([].concat(...points).filter(d => d._id !== undefined).map((d) => {\n        const point = d.update;\n        return {\n            x: point.x,\n            y: point.y,\n            data: d\n        };\n    }));\n};\n\n/**\n *\n *\n * @param {*} target\n * @param {*} styles\n * @param {*} remove\n */\nexport const updateStyle = (target, styles, remove) => {\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            target.style(key, remove ? null : styles[key]);\n        }\n    }\n};\n\n/**\n *\n *\n * @param {*} mount\n * @param {*} context\n */\nexport const animateGroup = (mount, context) => {\n    let groupTransition;\n    let update;\n    const { transition, groupAnimateStyle } = context;\n    const { duration, effect, disabled } = transition;\n    if (groupAnimateStyle) {\n        setStyles(mount.node(), groupAnimateStyle.enter);\n        update = groupAnimateStyle.update;\n        if (!disabled) {\n            groupTransition = mount.transition()\n                .ease(easeFns[effect])\n                .duration(duration)\n                .on('end', function () {\n                    updateStyle(selectElement(this), update, true);\n                });\n        } else {\n            groupTransition = mount;\n        }\n        updateStyle(groupTransition, update);\n    }\n};\n\nexport const positionPoints = (context, points) => {\n    const positioner = context.encodingTransform();\n    if (positioner) {\n        return positioner(points, context, { smartLabel: context._dependencies.smartLabel });\n    }\n    return points;\n};\n\n/**\n  * Gets the width of each group. It gets the width from axis if it is available for\n  * example when the scale is nominal else it calculates the width from the\n  * range of the axis and number of data points.\n  *\n  * @param {SimpleAxis} axis instance of axis\n  * @param {number} minDiff Minimum difference between data points\n  * @return {number} width of each bar\n  * @private\n*/\nexport const getGroupSpan = (axis, minDiff) => {\n    let groupSpan;\n    const width = axis.getUnitWidth();\n    const scale = axis.scale();\n    const range = scale.range();\n    const domain = scale.domain();\n    !width ? groupSpan = (Math.abs(range[1] - range[0]) / Math.abs(domain[1] - domain[0])) * minDiff :\n        (groupSpan = width);\n\n    return groupSpan;\n};\n\nexport const getPlotMeasurement = (context, dimensionalValues) => {\n    const fieldInfo = context.encodingFieldsInf();\n    const axes = context.axes();\n    const transformType = context.transformType();\n    const config = context.config();\n    const bandScale = context._bandScale;\n\n    return ['x', 'y'].map((type) => {\n        let span = 0;\n        let groupSpan = 0;\n        let padding = 0;\n        let offsetValues = [];\n        if (fieldInfo[`${type}FieldType`] === FieldType.DIMENSION) {\n            let actualGroupWidth;\n            const isTemporal = fieldInfo[`${type}FieldSubType`] === DimensionSubtype.TEMPORAL;\n            const timeDiff = isTemporal ? context.dataProps().timeDiffs[type] : 0;\n            const axis = axes[type];\n            const pad = config[`pad${type.toUpperCase()}`];\n            const innerPadding = config.innerPadding;\n            const keys = dimensionalValues;\n            const scale = axis.scale();\n            groupSpan = getGroupSpan(axis, timeDiff);\n            const isAxisBandScale = axis.constructor.type() === BAND;\n            const axisPadding = axis.config().padding;\n            // If it is a grouped bar then the width of each bar in a grouping is retrieved from\n            // a band scale. The band scale will have range equal to width of one group of bars and\n            // the domain is set to series keys.\n            if (transformType === 'group') {\n                const groupPadding = isAxisBandScale ? 0 : axisPadding * groupSpan / 2;\n                bandScale.range([groupPadding, groupSpan - groupPadding]).domain(keys).paddingInner(innerPadding);\n                span = bandScale.bandwidth();\n                actualGroupWidth = groupSpan - (isAxisBandScale ? 0 : axisPadding * groupSpan);\n                offsetValues = keys.map(key => bandScale(key) - (isAxisBandScale ? 0 : (groupSpan / 2)));\n            } else if (pad !== undefined) {\n                let offset;\n                if (isAxisBandScale) {\n                    const step = scale.step();\n                    offset = scale.padding() * step;\n                    span = scale.bandwidth() + offset;\n                } else {\n                    span = groupSpan;\n                }\n                offsetValues = keys.map(() => (isAxisBandScale ? -(offset / 2) : -(span / 2)));\n            } else {\n                padding = isAxisBandScale ? 0 : axisPadding * groupSpan;\n                span = groupSpan - padding;\n                actualGroupWidth = span;\n                offsetValues = keys.map(() => (isAxisBandScale ? 0 : -(span / 2)));\n            }\n\n            groupSpan = actualGroupWidth;\n            padding = isAxisBandScale ? axisPadding * axis.scale().step() : axisPadding * groupSpan;\n        }\n\n        return {\n            span,\n            offsetValues,\n            groupSpan,\n            padding\n        };\n    });\n};\n\nexport const initializeGlobalState = (context) => {\n    const store = context.store();\n    const globalState = context.constructor.getState()[0];\n    const namespace = context.metaInf().namespace;\n    for (const prop in globalState) {\n        store.append(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${prop}`, {\n            [namespace]: null\n        });\n    }\n};\n\nexport const resolveInvalidTransformType = (context) => {\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const fieldsConfig = context.data().getFieldsConfig();\n    const groupByFieldMeasure = fieldsConfig[groupByField] && fieldsConfig[groupByField].def.type === FieldType.MEASURE;\n    if (!xField || !yField || groupByFieldMeasure || !groupByField || xFieldType === FieldType.DIMENSION &&\n        yFieldType === FieldType.DIMENSION) {\n        return IDENTITY;\n    }\n    return null;\n};\n\nexport const getValidTransform = context => resolveInvalidTransformType(context) || context.config().transform.type;\n\nexport const getValidTransformForAggFn = (context) => {\n    const resolvedInvalidTransformType = resolveInvalidTransformType(context);\n    if (resolvedInvalidTransformType) {\n        return resolvedInvalidTransformType;\n    }\n\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const isCustomTransformTypeProvided = !!getObjProp(context._customConfig, 'transform', 'type');\n    let transformType = context.config().transform.type;\n\n    if (!isCustomTransformTypeProvided && groupByField && xFieldType !== yFieldType) {\n        const measureField = xFieldType === FieldType.MEASURE ? xField : yField;\n        const { [measureField]: aggFn } = retrieveNearestGroupByReducers(context.data(), measureField);\n        transformType = aggFn === AGG_FN_SUM ? STACK : GROUP;\n    }\n\n    return transformType;\n};\n","import { CommonProps, STATE_NAMESPACES } from 'muze-utils';\nimport { getEncodingFieldInf } from '../helpers';\nimport * as PROPS from '../enums/props';\n\nconst renderLayer = (context) => {\n    const mount = context.mount();\n    if (mount) {\n        context.render(mount);\n        context.dependencies().throwback.commit(CommonProps.ON_LAYER_DRAW, true);\n    }\n};\n\nexport const listenerMap = (context, ns) => [\n    {\n        props: [`${ns.local}.${PROPS.DATA}`],\n        listener: ([, data]) => {\n            const config = context.config();\n            const encodingValue = config.encoding;\n            if (data && encodingValue) {\n                const fieldsConfig = data.getFieldsConfig();\n                const encodingFieldsInf = getEncodingFieldInf(encodingValue, fieldsConfig);\n                context.encodingFieldsInf(encodingFieldsInf);\n                context.resolveTransformType();\n                context._transformedData = context.getTransformedData(data, config,\n                    context.transformType(), encodingFieldsInf);\n                context._normalizedData = context.getNormalizedData(context._transformedData, fieldsConfig);\n                const domain = context.calculateDomainFromData(context._normalizedData, context.encodingFieldsInf(),\n                    context.data().getFieldsConfig());\n                context._domain = domain;\n                !context._updateLock && context.domain(domain);\n            }\n        },\n        type: 'registerImmediateListener'\n    },\n    {\n        props: [`${ns.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            const calculateDomain = config.calculateDomain;\n            const props = context.getRenderProps();\n            const store = context.store();\n            const namespaceInf = {\n                namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${context.metaInf().namespace}`,\n                key: 'renderListener'\n            };\n            store.unsubscribe(namespaceInf);\n            if (calculateDomain === false) {\n                props.push(`${ns.local}.${PROPS.DATA}`);\n            }\n            store.registerChangeListener(props,\n                () => {\n                    renderLayer(context);\n                }, false, namespaceInf);\n        },\n        type: 'registerImmediateListener'\n    }\n];\n\n","export const DATA = 'data';\nexport const CONFIG = 'config';\nexport const MEASUREMENT = 'measurement';\nexport const DOMAIN = 'domain';\nexport const MOUNT = 'mount';\n","import { mergeRecursive } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nexport const defaultOptions = {\n    [PROPS.CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig, context) => {\n                context._customConfig = config;\n                const constructor = context.constructor;\n                const newConf = mergeRecursive({}, constructor.defaultConfig());\n                return constructor.defaultPolicy(newConf, config);\n            }\n        }\n    },\n    [PROPS.DATA]: {\n        value: null,\n        meta: {\n            preset: (data, context) => {\n                if (context._cacheEnabled) {\n                    context._cachedData.push(data);\n                } else {\n                    context._cachedData = [data];\n                }\n            }\n        }\n    }\n    // [PROPS.MOUNT]: {\n    //     value: null\n    // },\n    // [PROPS.AXES]: {\n    //     value: null\n    // },\n    // [PROPS.MEASUREMENT]: {\n    //     value: null\n    // }\n};\n","import {\n    getUniqueId,\n    mergeRecursive,\n    FieldType,\n    selectElement,\n    ReservedFields,\n    registerListeners,\n    transactor,\n    DataModel,\n    clone,\n    generateGetterSetters,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { SimpleLayer } from '../simple-layer';\nimport * as PROPS from '../enums/props';\nimport { props } from './props';\nimport {\n    transformData,\n    calculateDomainFromData,\n    getNormalizedData,\n    applyInteractionStyle,\n    initializeGlobalState,\n    getValidTransform\n} from '../helpers';\nimport { listenerMap } from './listener-map';\nimport { defaultOptions } from './default-options';\n\n/**\n * An abstract class which gives definition of common layer functionality like\n * - transforming data for various modes. Supported modes: identity, group and stack.\n * - calculating data domain\n * - linking dependent layers\n * - merging policy of configuration\n * - interaction sideffect helpers\n * - retrieving dom elements from data using id\n * - retrieving the physical dimensions of marks\n * - disposing layer\n *\n * Every layer has to extend base layer and give concrete definition.\n * This layer does not have any default visual. A new layer has to define the logic of `render` for rendering the\n * visuals\n *\n * @public\n * @class\n * @module BaseLayer\n */\nexport default class BaseLayer extends SimpleLayer {\n\n    /**\n     * Creates a layer using a configuration and data.\n     *\n     * @public\n     * @constructor\n     * @param {DataModel} data Instance of DataModel to be used. This DataModel instance serves as the data for a layer.\n     * @param {Object} axes Axes instances to be used for rendering the layer. Axes are used for mapping data from\n     *      value to px.\n     * @param {SimpleAxis} axes.x X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {SimpleAxis} axes.y X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {ColorAxis} axes.color Axis for coloring a layer using color interpolators\n     * @param {ShapeAxis} axes.shape Axis for providing a shape\n     * @param {SizeAxis} axes.size Axis for determining size of a mark using size interpolator\n     * @param {LayerConfig} config Configuration of the layer\n     * @param {Object} dependencies Dependencies of the layer\n     * @param {SmartLabel} dependencies.smartLabel Smartlabel singleton instance\n     */\n    constructor (data, axes, config, dependencies = {}) {\n        super();\n\n        generateGetterSetters(this, props);\n        this.data(data);\n        this.axes(axes);\n        this.config(config);\n        this.alias(this.constructor.formalName() + getUniqueId());\n        this.dependencies(dependencies);\n        this._points = [];\n        this._cachedData = [];\n        this._id = getUniqueId();\n        this._measurement = {};\n        this._animationDonePromises = [];\n        this._customConfig = null;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            {\n                config: {},\n                data: {}\n            }\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            const localNs = `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            initializeGlobalState(this);\n            const store = this.store();\n            store.append(`${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}`, {\n                [metaInf.namespace]: null\n            });\n\n            transactor(this, defaultOptions, store.model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE\n            }, {\n                unitRowIndex: metaInf.unitRowIndex,\n                unitColIndex: metaInf.unitColIndex\n            });\n            return this;\n        }\n        return this._store;\n    }\n\n    domain (...dom) {\n        const prop = `${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`;\n        if (dom.length) {\n            this.store().commit(prop, dom[0]);\n            return this;\n        }\n        return this.store().get(prop);\n    }\n\n    /**\n     * Creates a layer instance\n     * @return {BaseLayer} Instance of a layer\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Default configuration of the layer. This configuration gets merged to the user passed configuration using a\n     * plolicy. Base layer only returns part of configuraion, any layer overridding base layer should return its own\n     * configuration.\n     *\n     * @public\n     * @static\n     *\n     * @return {Object} Default configuration\n     */\n    static defaultConfig () {\n        return {\n            transform: {\n                type: 'identity'\n            }\n        };\n    }\n\n    /**\n     * Policy defines how user config gets merged to default config. The default policy here does a deep copy\n     * operation.\n     * Any policy which does more than deep copying should define the policy as a static member.\n     *\n     * @static\n     * @public\n     *\n     * @param {LayerConfig} conf Configuration with which the user config will be merged\n     * @param {LayerConfig} userConf Configuration given by the user\n     *\n     * @return {LayerConfig} Merged layer configuration\n     */\n    static defaultPolicy (conf, userConf) {\n        return mergeRecursive(conf, userConf);\n    }\n\n    /**\n     * Determines a name for a layer. This name of the layer is used in the input data to refer to this layer.\n     * ```\n     *  .layers([\n     *      mark: 'bar',\n     *      encoding: { ... }\n     *  ])\n     * ```\n     *\n     * @static\n     * @public\n     *\n     * @return {string} name of layer\n     */\n    static formalName () {\n        return 'base';\n    }\n\n    encodingFieldsInf (...fieldsInf) {\n        if (fieldsInf.length) {\n            this._encodingFieldsInf = fieldsInf[0];\n            return this;\n        }\n        return this._encodingFieldsInf;\n    }\n\n    encodingTransform (...encodingTransform) {\n        if (encodingTransform.length) {\n            this._encodingTransform = encodingTransform[0];\n            return this;\n        }\n        return this._encodingTransform;\n    }\n\n    /**\n     * Provides a alias for a layer. Like it's possible to have same layer (like bar) multiple times, but among multiple\n     * layers of same type if one layer has to be referred, alias is used. If no alias is given then `formalName` is set\n     * as the alias name.\n     *\n     *\n     * If used as setter\n     * @param  {string} alias Name of the alias\n     * @return {BaseLayer} Instance of current base layer\n     *\n     * If used as getter\n     * @return {string} Alias of the current layer\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            this._alias = params[0];\n            return this;\n        }\n        return this._alias || this.constructor.formalName();\n    }\n\n    dependencies (...params) {\n        if (params.length) {\n            this._dependencies = params[0];\n            return this;\n        }\n        return this._dependencies;\n    }\n\n    enableCaching () {\n        this._cacheEnabled = true;\n        return this;\n    }\n\n    clearCaching () {\n        this._cacheEnabled = false;\n        return this.data(this._cachedData[0]);\n    }\n\n    /**\n     * Serialize the schema. Merge config is used for serialization.\n     *\n     * @public\n     *\n     * @return {LayerConfig} Serialized schema\n     */\n    serialize () {\n        return this.config();\n    }\n\n    /**\n     * Returns the unique identifier of this layer. Id is auto generated during the creation proceess of a schema.\n     *\n     * @public\n     *\n     * @return {string} id of the layer\n     */\n    id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the transformed data based on given transform type.\n     * It first gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of DataModel\n     * @param {Object} config Configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     */\n    getTransformedData (dataModel, config, transformType, encodingFieldsInf) {\n        return transformData(dataModel, config, transformType, encodingFieldsInf);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a categorical field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @param {Object} fieldsConfig Configuration of fields\n     * @return {Array} Domain values array.\n     */\n    calculateDomainFromData (data) {\n        let domains = {};\n        const isEmpty = this.data().isEmpty();\n\n        if (!isEmpty) {\n            domains = calculateDomainFromData(data, this.encodingFieldsInf(), this.transformType());\n        }\n        return domains;\n    }\n\n    static shouldDrawAnchors () {\n        return false;\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getDataDomain (encodingType) {\n        const domains = this.store()\n            .get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`);\n        return encodingType !== undefined ? domains[encodingType] || [] : domains;\n    }\n\n    /**\n     * Normalizes the transformed data and returns it.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getNormalizedData (transformedData, fieldsConfig) {\n        return getNormalizedData(transformedData, fieldsConfig, this.encodingFieldsInf(), this.transformType());\n    }\n\n    /**\n     * Gets the nearest point closest to the given x and y coordinate. If no nearest point is found, then it returns\n     * null.\n     *\n     * @public\n     *\n     * @param {number} x X Coordinate.\n     * @param {number} y Y Coordinate.\n     *\n     * @return {Object} Information of the nearest point.\n     * ```\n     *      {\n     *          // id property contains the field names and their corresponding values in a 2d array. This is the data\n     *          // associated with the nearest point.\n     *          id: // Example data: [['Origin'], ['USA']],\n     *          dimensions: // Physical dimensions of the point.\n     *          layerId: // Id of the layer instance.\n     *      }\n     * ```\n     */\n    getNearestPoint () {\n        return null;\n    }\n\n    applyInteractionStyle (interactionType, selectionSet, apply, styles) {\n        const interactionConfig = this.config().interaction || {};\n\n        let interactionStyles = interactionConfig[interactionType];\n        interactionStyles = styles || interactionStyles;\n        if (interactionStyles) {\n            applyInteractionStyle(this, selectionSet, interactionStyles, {\n                apply,\n                interactionType\n            });\n        }\n    }\n\n    disableUpdate () {\n        this._updateLock = true;\n        return this;\n    }\n\n    enableUpdate () {\n        this._updateLock = false;\n        return this;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransform(this);\n    }\n\n    transformType () {\n        return this._transformType;\n    }\n\n    /**\n     * Renders the layer\n     * @return {BaseLayer} Instance of the layer.\n     */\n    render () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BaseLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Disposes the entire layer.\n     *\n     * @return {BaseLayer} Instance of layer.\n     */\n    remove () {\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     * Stores point in an object with key as the categorical value or temporal value\n     *\n     * @param {string} key categorical value or temporal value\n     * @param {Object} data Information of the data point\n     * @return {BarLayer} Instance of bar layer\n     */\n    cachePoint (key, data) {\n        if (key === null) {\n            return this;\n        }\n        const pointMap = this._pointMap;\n        !pointMap[key] && (pointMap[key] = []);\n        pointMap[key].push(data);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} dataProps\n     *\n     * @memberof BaseLayer\n     */\n    dataProps (...dataProps) {\n        if (dataProps.length) {\n            this._dataProps = dataProps[0];\n            return this;\n        }\n        return this._dataProps;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} id\n     *\n     * @memberof BaseLayer\n     */\n    getIdentifiersFromData (data) {\n        const schema = this.data().getData().schema;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const identifiers = [[], []];\n        const {\n                xFieldType,\n                yFieldType,\n                xField,\n                yField\n            } = this.encodingFieldsInf();\n\n        const [xMeasure, yMeasure] = [xFieldType, yFieldType].map(type => type === FieldType.MEASURE);\n        schema.forEach((d, i) => {\n            const name = d.name;\n            if (fieldsConfig[name].def.type === FieldType.DIMENSION) {\n                identifiers[0].push(name);\n                identifiers[1].push(data[i]);\n            }\n        });\n\n        if (xMeasure && yMeasure) {\n            const xMeasureIndex = fieldsConfig[xField].index;\n            const yMeasureIndex = fieldsConfig[yField].index;\n            identifiers[0].push(...[xField, yField]);\n            identifiers[1].push(...[data[xMeasureIndex], data[yMeasureIndex]]);\n        }\n        return identifiers;\n    }\n\n    getPlotSpan () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    getPlotPadding () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    /**\n     * Returns the information of the marks corresponding to the supplied identifiers. Identifiers are a set of field\n     * names and their corresponding values in an array. It can also be an instance of datamodel.\n     *\n     * For example,\n     * ```\n     *  const identifiers = [\n     *      ['Origin', 'Cylinders'],\n     *      ['USA', '8']\n     *  ];\n     *  const points = barLayer.getPointsFromIdentifiers(identifiers);\n     * ```\n     * @public\n     * @param {Array|DataModel} identifiers Identifiers of the marks.\n     * @param {Object} config Optional configuration which describes how to get the information.\n     * @param {boolean} config.getAllAttrs If true, then returns all the information of the points, else returns only\n     * the positions of the points.\n     * @param {boolean} config.getBBox If true, then returns the bounding box of all the marks.\n     *\n     * @return {Array} Array of points contains\n     */\n    getPointsFromIdentifiers (identifiers, config = {}) {\n        const getAllAttrs = config.getAllAttrs;\n        const getBBox = config.getBBox;\n        if (!this.data()) {\n            return [];\n        }\n        let fieldNames;\n        let values;\n        if (identifiers instanceof DataModel) {\n            const dataObj = identifiers.getData();\n            fieldNames = dataObj.schema.map(d => d.name);\n            values = dataObj.data;\n        } else {\n            fieldNames = identifiers[0];\n            values = identifiers.slice(1, identifiers.length);\n        }\n\n        const points = this._points;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPoints = [].concat(...points).filter((point) => {\n            const { _data, _id } = point;\n\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === _data[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === _id) !== -1;\n                } return true;\n            });\n        });\n        return getAllAttrs ? filteredPoints : filteredPoints.map((d) => {\n            const obj = clone(d);\n            if (getBBox) {\n                const update = obj.update || obj;\n                if (obj.size !== undefined) {\n                    const sizeVal = Math.sqrt(obj.size / Math.PI) * 2;\n                    update.width = sizeVal;\n                    update.height = sizeVal;\n                    update.x -= sizeVal / 2;\n                    update.y -= sizeVal / 2;\n                } else {\n                    if (update.width === undefined) {\n                        update.width = 2;\n                    }\n                    if (update.height === undefined) {\n                        update.height = 2;\n                    }\n                }\n            }\n\n            return obj.update || obj;\n        }).sort((a, b) => a.y - b.y);\n    }\n\n    getTransformedDataFromIdentifiers (identifiers) {\n        const { data: identifierData, schema: identifierSchema } = identifiers.getData();\n        const normalizedData = this._normalizedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            yField,\n            xField,\n            yFieldType,\n            xFieldType\n        } = this.encodingFieldsInf();\n        let measureIndex;\n        let enc;\n        if (xFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[xField].index;\n            enc = 'x';\n        } else if (yFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[yField].index;\n            enc = 'y';\n        }\n\n        const transformedData = [];\n        normalizedData.forEach((dataArr) => {\n            dataArr.forEach((dataObj) => {\n                const tupleArr = dataObj._data;\n                const exist = identifierSchema.every((obj, i) =>\n                    identifierData.findIndex(d => tupleArr[fieldsConfig[obj.name].index] === d[i]) !== -1);\n                if (exist) {\n                    const transformedVal = dataObj[enc];\n                    const row = dataObj._data;\n                    const tuple = {};\n                    for (const key in fieldsConfig) {\n                        const index = fieldsConfig[key].index;\n                        tuple[key] = row[index];\n                        if (index === measureIndex) {\n                            tuple[key] = transformedVal;\n                        }\n                    }\n                    transformedData.push(tuple);\n                }\n            });\n        });\n\n        return [transformedData, this.data().getData().schema];\n    }\n\n    /**\n     * Returns the dom elements associated with the supplied set of row ids.\n     * Each element in the layer is mapped with a row of the datamodel. When given an array of row ids, it returns all\n     * the elements which is mapped with those row ids.\n     *\n     * @public\n     * @param {Array} set Array of row ids\n     *\n     * @return {Selection} D3 Selection of dom elements.\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(data =>\n            (data ? set.indexOf(data._id) !== -1 : false));\n    }\n\n    /**\n     * Notifies when all animations/transitions of the layer are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n\n    getRenderProps () {\n        const metaInf = this.metaInf();\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.unitRowIndex}0`,\n            `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.unitColIndex}0`];\n    }\n}\n","import {\n    selectElement,\n    makeElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\nimport { updateStyle } from '../../helpers';\n\nconst line = Symbols.line;\n\nconst filterFn = (d) => {\n    const { update } = d;\n    return update.y !== null && update.x !== null;\n};\n\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nexport const drawLine = (context) => {\n    let filteredPoints;\n    const { layer, container, points, interpolate, connectNullData, className, style, transition } = context;\n    const mount = selectElement(container).attr('class', className);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const linepath = line()\n                .curve(curveInterpolatorFn)\n                .x(d => d.update.x)\n                .y(d => d.update.y)\n                .defined(filterFn);\n\n    filteredPoints = points;\n    if (connectNullData) {\n        filteredPoints = points.filter(filterFn);\n    }\n\n    updateStyle(mount, style);\n    let element = makeElement(mount, 'path', [1]);\n    element.classed(points[0].className, true);\n    if (!transition.disabled) {\n        element = element.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    }\n    element.attr('d', linepath(filteredPoints))\n                    .style('fill-opacity', 0);\n    return element;\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-line',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: 'group'\n    },\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    nearestPointThreshold: 20,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n\n","import {\n    Voronoi,\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    FieldType,\n    getObjProp,\n    InvalidAwareTypes\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawLine } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    animateGroup,\n    getLayerColor,\n    positionPoints,\n    getIndividualClassName\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to render straight or smoothed line paths. The mark type of this layer is ```line```.\n *\n * @public\n *\n * @class\n * @module LineLayer\n * @extends BaseLayer\n */\nexport default class LineLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of LineLayer.\n     * @param {*} args\n     * @memberof LineLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof LineLayer\n     */\n    static formalName () {\n        return 'line';\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof LineLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Default configuration of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof LineLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField && !transform.groupBy) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     * Returns the draw method for line\n     * @return {Function} Draw method of line layer\n     */\n    getDrawFn () {\n        return drawLine;\n    }\n\n    static shouldDrawAnchors () {\n        return true;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @param {number} seriesIndex index of series\n     * @return {Array} Array of points\n     */\n    translatePoints (data, encodingFieldsInf, axes) {\n        let points = [];\n        const xAxis = axes.x;\n        const yAxis = axes.y;\n        const colorAxis = axes.color;\n        const encoding = this.config().encoding;\n        const { xFieldType, yFieldType } = encodingFieldsInf;\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const colorFieldIndex = colorField && fieldsConfig[colorField].index;\n        const style = {};\n        const meta = {};\n\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y) + yAxis.getUnitWidth() / 2;\n            const { color, rawColor } = getLayerColor({ datum: d, index: i }, {\n                colorEncoding, colorAxis, colorFieldIndex });\n\n            style.stroke = color;\n            style['fill-opacity'] = 0;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n\n            const point = {\n                enter: {},\n                update: {\n                    x: d.x instanceof InvalidAwareTypes ? null : xPx,\n                    y: d.y instanceof InvalidAwareTypes ? null : yPx\n                },\n                style,\n                _data: d._data,\n                _id: d._id,\n                rowId: d._id,\n                source: d._data,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the line plot\n     * @param {SVGElement} container svg element\n     * @return {LineLayer} instance of line layer\n     */\n    render (container) {\n        let points;\n        let seriesClassName;\n        let style;\n\n        const config = this.config();\n        const {\n            encoding,\n            interpolate,\n            className,\n            defClassName,\n            transition\n        } = config;\n        const normalizedData = this._normalizedData;\n        const transformedData = this._transformedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const keys = transformedData.map(d => d.key);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n        const colorField = encoding.color.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n        this._points = [];\n        this._pointMap = {};\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        makeElement(container, 'g', normalizedData, null, {\n            enter: (group) => {\n                animateGroup(group, {\n                    transition,\n                    groupAnimateStyle: {\n                        enter: {\n                            'stroke-opacity': 0,\n                            'fill-opacity': this.getPathStyle()['fill-opacity']\n                        },\n                        update: {\n                            'stroke-opacity': encoding.strokeOpacity.value\n                        }\n                    }\n                });\n            },\n            update: (group, dataArr, i) => {\n                points = this.translatePoints(dataArr, this.encodingFieldsInf(), axes, i);\n                this._points.push(points);\n                seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n\n                let color;\n                const colorValFn = encoding.color.value;\n                const colorVal = points.find(d => d._data[colorFieldIndex] !== null &&\n                        d._data[colorFieldIndex] !== undefined);\n\n                if (colorValFn) {\n                    color = colorValFn(dataArr, i, normalizedData);\n                } else {\n                    color = axes.color.getColor(colorVal && colorVal._data[colorFieldIndex]);\n                }\n\n                style = this.getPathStyle(color);\n                this.getDrawFn()({\n                    layer: this,\n                    container: group.node(),\n                    interpolate,\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: style || {},\n                    connectNullData: config.connectNullData\n                });\n            }\n        }, d => d[0]._data[colorFieldIndex] || d[0]._id);\n\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            stroke: color,\n            'fill-opacity': '0'\n        };\n    }\n\n    /**\n     * Gets the nearest point closest to the given position\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point information\n     */\n    getNearestPoint (x, y, config) {\n        let searchRadius = config.searchRadius;\n        const data = this.data();\n\n        if (!data || (data && data.isEmpty())) {\n            return null;\n        }\n\n        searchRadius = searchRadius !== undefined ? searchRadius : this.config().nearestPointThreshold;\n        const point = this._voronoi.find(x, y, searchRadius);\n        const dimensions = getObjProp(point, 'data', 'data', 'update');\n\n        if (point) {\n            const { _data, _id } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(_data, _id);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: 2,\n                    height: 2\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import {\n    easeFns,\n    selectElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\n\nconst area = Symbols.area;\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nconst /* istanbul ignore next */ drawArea = (params) => {\n    let filteredPoints;\n    const { layer, container, points, style, transition, className, connectNullData, interpolate } = params;\n\n    const { effect: easeEffect, duration } = transition;\n    const mount = selectElement(container);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const selection = mount.selectAll('path').data([params.points]);\n    const [enterAreaPath, updateAreaPath] = ['enter', 'update'].map(e => area().curve(curveInterpolatorFn)\n                    .x(d => d[e].x)\n                    .y1(d => d[e].y)\n                    .y0(d => d[e].y0)\n                    .defined(d => d[e].y !== null\n            ));\n\n    filteredPoints = points;\n    mount.attr('class', className);\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n    const selectionEnter = selection.enter().append('path').attr('d', enterAreaPath(filteredPoints));\n    selection.merge(selectionEnter).transition().ease(easeFns[easeEffect])\n                    .duration(duration)\n                    .on('end', layer.registerAnimationDoneHook())\n                    .attr('d', updateAreaPath(filteredPoints))\n                    .each(function (d) {\n                        const element = selectElement(this);\n\n                        element.classed(d[0].className, true);\n                        Object.keys(style).forEach(key => element.style(key, style[key]));\n                    });\n};\n\nexport default drawArea;\n","import { FieldType, InvalidAwareTypes } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { LineLayer } from '../line';\nimport drawArea from './renderer';\nimport './styles.scss';\nimport { STACK, ENCODING } from '../../enums/constants';\nimport {\n    getAxesScales,\n    positionPoints,\n    getLayerColor,\n    getIndividualClassName,\n    getValidTransformForAggFn\n} from '../../helpers';\n\n/**\n * Area layer renders a closed path. The mark type of this layer is ```area```. This layer can be used\n * to create stacked or multi-series areas and vertical range area plots by using the encoding properties.\n *\n * To create this layer using layer configuration from canvas,\n * ```\n *      canvas.layers([{\n *          mark: 'area',\n *          transform: {\n *              type: 'stack' // Produces a stacked area.\n *          }\n *      }]);\n * ```\n *\n * @public\n *\n * @class\n * @module AreaLayer\n * @extends LineLayer\n */\nexport default class AreaLayer extends LineLayer {\n    /** oation of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof AreaLayer\n     */\n    static formalName () {\n        return 'area';\n    }\n\n    /**\n     * Calculates the domain from data. It calls its parent class's method which is line layer\n     * to get the domain and overwrites the domain according to its need.\n     * @return {Array} Domain values\n     */\n    calculateDomainFromData (data, encodingFieldsInf, fieldsConfig) {\n        const domains = super.calculateDomainFromData(data, fieldsConfig);\n        [ENCODING.X, ENCODING.Y].forEach((type) => {\n            const { [`${type}FieldType`]: fieldType } = encodingFieldsInf;\n            if (fieldType === FieldType.MEASURE && domains[type] !== undefined) {\n                domains[type][0] = Math.min(domains[type][0], 0);\n            }\n        });\n        return domains;\n    }\n\n    /**\n     * Returns the drawing method of this layer\n     * @return {Function} Draw method\n     */\n    getDrawFn () {\n        return drawArea;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @return {Array} Array of points\n     */\n    translatePoints (data, encodingFieldsInf, axes) {\n        let points = [];\n        const transformType = this.transformType();\n        const colorAxis = axes.color;\n        const config = this.config();\n        const encoding = config.encoding;\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const colorFieldIndex = colorField && fieldsConfig[colorField].index;\n        const { xField, yField, y0Field } = encodingFieldsInf;\n        const {\n            xAxis,\n            yAxis\n       } = getAxesScales(axes);\n        const classNameFn = config.individualClassName;\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const y0Px = (y0Field || transformType === STACK) ? yAxis.getScaleValue(d.y0) : yAxis.getScaleValue(0);\n            const { color, rawColor } = getLayerColor({ datum: d, index: i }, {\n                colorEncoding, colorAxis, colorFieldIndex });\n            const style = {};\n            const meta = {};\n            style.fill = color;\n            // style['fill-opacity'] = 0;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n            const invalidY = d.y instanceof InvalidAwareTypes;\n            const invalidY0 = d.y0 instanceof InvalidAwareTypes;\n            const point = {\n                enter: {\n                    x: xPx,\n                    y: invalidY ? null : yAxis.getScaleValue(0),\n                    y0: invalidY0 ? null : yAxis.getScaleValue(0)\n                },\n                update: {\n                    x: xPx,\n                    y: invalidY ? null : yPx,\n                    y0: invalidY0 ? null : y0Px\n                },\n                _id: d._id,\n                _data: d._data,\n                source: d._data,\n                rowId: d._id,\n                className: classNameFn ? classNameFn(d, i, data, this) : '',\n                style,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            fill: color\n        };\n    }\n}\n\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-arc',\n    padding: { top: 1, bottom: 1, left: 1, right: 1 },\n    className: '',\n    minOuterRadius: 10,\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    height: 100,\n    width: 100,\n    sort: '',\n    cornerRadius: 0,\n    padAngle: 0,\n    padRadius: 0,\n    startAngle: 0,\n    endAngle: 360,\n    colors: ['#F44336', 'blue', 'green', 'yellow', 'orange', 'purple'],\n    transform: {\n        type: 'identity'\n    },\n    encoding: {\n        'stroke-width': {\n            value: '2px'\n        },\n        'stroke-linejoin': {\n            value: 'round'\n        },\n        angle: {\n            value: '1'\n        },\n        radius: {\n            value: '1'\n        },\n        opacity: {\n            value: '1'\n        },\n        color: {\n            value: '1'\n        },\n        shape: {\n            value: '1'\n        },\n        size: {\n            value: '1'\n        }\n    },\n    innerRadiusFixer: 10,\n    transition: {\n        effect: 'cubic',\n        duration: 500\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-arc-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-arc-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-arc-selected`\n        }\n    }\n};\n\n","import {\n    makeElement,\n    selectElement,\n    getQualifiedClassName,\n    isSimpleObject,\n    getDomainFromData,\n    Symbols,\n    FieldType,\n    ReservedFields,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { BaseLayer } from '../../base-layer';\nimport { ASCENDING, OUTER_RADIUS_VALUE } from '../../enums/constants';\nimport { getIndividualClassName } from '../../helpers';\nimport { getRangeValue, getRadiusRange, tweenPie, tweenExitPie, getFieldIndices, getPreviousPoint } from './arc-helper';\nimport './styles.scss';\n\nconst pie = Symbols.pie;\nconst arc = Symbols.arc;\n\n/**\n * Arc Layer creates a plot with polar coordinates.\n *\n * @public\n *\n * @class\n * @module ArcLayer\n * @extends BaseLayer\n */\nexport default class ArcLayer extends BaseLayer {\n\n    constructor (data, axes, config, dependencies) {\n        super(data, axes, config, dependencies);\n        this._prevPieData = {};\n    }\n\n    /**\n     * returns the default configuration of the layer\n     *\n     * @static\n     * @return {Object} Default configuration for arc layer\n     * @memberof ArcLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ArcLayer\n     */\n    static formalName () {\n        return 'arc';\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof ArcLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Transforms data in the appropriate data structure to be consumed by the layer for rendering\n     *\n     * @param {Object} data data model associated with the layer\n     * @param {Object} config configuration of the layer that contains encoding and other parameters\n     * @return {Object} Transformed pie data\n     * @memberof ArcLayer\n     */\n    getTransformedData (dataModel, config) {\n        let pieData = [];\n        const pieIndex = {};\n        const {\n            startAngle,\n            endAngle,\n            encoding,\n            sort,\n            minOuterRadius\n        } = config;\n        const prevData = this._transformedData || [];\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            angleIndex,\n            sizeIndex,\n            radiusIndex,\n            colorIndex\n        } = getFieldIndices(encoding, fieldsConfig);\n        const dataVal = dataModel.getData();\n        const data = dataVal.data;\n        const uids = dataVal.uids;\n\n        this._prevPieData = {};\n\n        prevData.forEach((e, index) => {\n            this._prevPieData[e.uid] = [e, index];\n            pieIndex[e.index] = e;\n        });\n        // Creating pie data using angle field provided. If the angle field is a dimension,\n        // all the angles will be equal(360/number of dimensions)\n\n        pieData = pie()\n            .startAngle((startAngle / 180) * Math.PI)\n            .endAngle(Math.PI * endAngle / 180)\n            .value(d => d[angleIndex] || 1)\n            .sortValues(null);\n\n        sort.length && radiusIndex && pieData.sort((a, b) => {\n            if (sort === ASCENDING) {\n                return a[radiusIndex] - b[radiusIndex];\n            } return b[radiusIndex] - a[radiusIndex];\n        });\n        const sizeVal = data.reduce((acc, d) => acc + (d[sizeIndex] || 0), 1);\n\n        // Adding the radius field values to each data point in pie data\n        pieData = pieData(data).map((d, i) => {\n            d.outerRadiusValue = data[i][radiusIndex] || minOuterRadius;\n            d.innerRadius = config.innerRadius;\n            d.colorVal = data[i][colorIndex];\n            d.angleVal = data[i][angleIndex];\n            d.sizeVal = sizeVal;\n            d.uid = uids[i];\n            d.rowId = d.uid;\n            d.source = data[i];\n            d._previousInfo = this._prevPieData[d.uid] ? this._prevPieData[d.uid][0] :\n                getPreviousPoint(pieIndex, d.index, config);\n            return d;\n        });\n        return pieData;\n    }\n\n    /**\n     * Returns normalized data after transformation (it is the same in the case of pie layer)\n     *\n     * @param {Object} data transformed data\n     * @return {Object} normalized data\n     * @memberof ArcLayer\n     */\n    getNormalizedData (data) {\n        return data;\n    }\n\n    /**\n     *\n     *\n     * @param {Object} data\n     * @return {}\n     * @memberof ArcLayer\n     */\n    calculateDomainFromData (data) {\n        const domainKey = OUTER_RADIUS_VALUE;\n        return {\n            radius: getDomainFromData([data], [domainKey, domainKey])\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {Object} x\n     * @param {Object} y\n     * @return {}\n     * @memberof ArcLayer\n     */\n    getNearestPoint (x, y, config = {}) {\n        const dataPoint = selectElement(config.event.target).data()[0];\n        if (isSimpleObject(dataPoint)) {\n            const { data, uid } = dataPoint.datum;\n            return {\n                id: this.getIdentifiersFromData(data, uid),\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    /**\n     *\n     *\n     * @param {*} set\n     *\n     * @memberof ArcLayer\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(d => set.indexOf(d.datum.uid) !== -1);\n    }\n\n    /**\n     *\n     *\n     * @param {Object} container\n     * @return {}\n     * @memberof ArcLayer\n     */\n    render (container) {\n        const {\n            height,\n            width\n        } = this.measurement();\n        const {\n            classPrefix,\n            defClassName,\n            minOuterRadius,\n            innerRadius,\n            outerRadius,\n            cornerRadius,\n            padAngle,\n            padRadius,\n            padding,\n            transition,\n            innerRadiusFixer\n       } = this.config();\n        const sizeAxis = this.axes().size;\n        const transformedData = this._transformedData;\n        const chartHeight = height - padding.top - padding.bottom;\n        const chartWidth = width - padding.left - padding.right;\n        const qualClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        // Sets range for radius\n        const range = getRadiusRange(chartWidth, chartHeight, {\n            minOuterRadius,\n            innerRadius,\n            outerRadius,\n            innerRadiusFixer\n        });\n        const colorAxis = this.axes().color;\n        const defaultRadius = outerRadius || Math.min(chartHeight, chartWidth) / 2;\n        const radiusDomain = this.domain().radius;\n        const rangeValueGetter = d => getRangeValue(d, range, radiusDomain, defaultRadius, sizeAxis);\n        // This returns a function that generates the arc path based on the datum provided\n        const path = arc()\n                // .outerRadius(d => rangeValueGetter(d))\n                .innerRadius(innerRadius ? Math.min(chartHeight / 2, chartWidth / 2, innerRadius) : 0)\n                .cornerRadius(cornerRadius)\n                .padAngle(padAngle)\n                .padRadius(padRadius);\n        this._chartWidth = chartWidth;\n        this._chartHeight = chartHeight;\n        // Creating the group that holds all the arcs\n        const g = makeElement(selectElement(container), 'g', [1], `${qualClassName[0]}-group`)\n                .classed(`${qualClassName[1]}-group`, true)\n                .attr('transform', `translate(${chartWidth / 2},${chartHeight / 2})`);\n        const tween = (elem) => {\n            makeElement(elem, 'path', (d, i) => [{\n                datum: d,\n                index: i,\n                arcFn: path,\n                meta: {\n                    originalColor: colorAxis.getRawColor(d.colorVal),\n                    stateColor: {},\n                    colorTransform: {}\n                }\n            }], `${qualClassName[0]}-path`)\n                            .style('fill', d => colorAxis.getColor(d.datum.colorVal))\n                            .transition()\n                            .duration(transition.duration)\n                            .on('end', this.registerAnimationDoneHook())\n                            .attrTween('d', (...params) => tweenPie(path, rangeValueGetter, params))\n                            .attr('class', (d, i) => {\n                                const individualClass = getIndividualClassName(d, i, transformedData, this);\n                                return `${qualClassName[0]}-path ${qualClassName[1]}-path-${d.index}\n                                    ${individualClass}`;\n                            });\n        };\n        const consecutiveExits = [];\n        let exitCounter = 0;\n        const tweenExit = (elem, d) => {\n            let exitArr = consecutiveExits[exitCounter];\n            const oldExitCounter = exitCounter;\n            if (!exitArr) {\n                exitArr = [{ elem, datum: d }];\n            } else if (exitArr[exitArr.length - 1].datum.index === d.index - 1) {\n                exitArr.push({ elem, datum: d });\n            } else {\n                exitCounter++;\n            }\n            consecutiveExits[oldExitCounter] = exitArr;\n        };\n        // Creating groups for all the arcs present individually\n        makeElement(g, 'g', transformedData, `${qualClassName[0]}`,\n            {\n                update: tween,\n                exit: tweenExit\n            })\n                        .attr('class', (d, i) => `${qualClassName[0]} ${qualClassName[1]}-${i}`);\n        tweenExitPie(consecutiveExits, transition, rangeValueGetter, path);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof BaseLayer\n     */\n    getPointsFromIdentifiers (identifiers) {\n        if (!this.data()) {\n            return [];\n        }\n        const fieldNames = identifiers[0];\n        const values = identifiers.slice(1, identifiers.length);\n        const pieSlices = selectElement(this.mount()).selectAll('path').data();\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPies = pieSlices.filter((tData) => {\n            const data = tData.datum.data;\n            const uid = tData.datum.uid;\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === data[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === uid) !== -1;\n                } return true;\n            });\n        });\n\n        const pieSliceInf = filteredPies[0];\n        if (pieSliceInf) {\n            const centroid = pieSliceInf.arcFn.centroid(pieSliceInf.datum);\n            return [{\n                x: centroid[0] + this._chartWidth / 2,\n                y: centroid[1] + this._chartHeight / 2,\n                width: 2,\n                height: 2\n            }];\n        }\n        return [];\n    }\n\n    getRenderProps () {\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`];\n    }\n}\n","import { getObjProp, interpolator, FieldType, selectElement } from 'muze-utils';\nimport { ANGLE, RADIUS, SIZE, COLOR } from '../../enums/constants';\n\n/**\n * Returns the range value from a value inside the domain\n *\n * @param {Object} domainValue Value whose range has to be returned\n * @return {number} range value\n * @memberof ArcLayer\n */\nexport const getRangeValue = (datum, range, domain, defaultRadius, sizeAxis) => {\n    let domainMultiplier = 1;\n    const {\n        outerRadiusValue,\n        sizeVal\n    } = datum;\n    const sizeAxisDomain = sizeAxis.domain();\n    const sizeMultiplier = sizeAxis.getSize(sizeVal) / (sizeAxisDomain ? sizeAxis.range()[1] : sizeAxis.config().value);\n\n    domainMultiplier *= (range[1] - range[0]) / (domain[1] - domain[0]);\n    const rangeVal = (range[0] + (outerRadiusValue - domain[0]) * domainMultiplier);\n    return (rangeVal || defaultRadius) * sizeMultiplier;\n};\n\n/**\n *\n *\n * @memberof ArcLayer\n */\nexport const getRadiusRange = (width, height, config) => {\n    const {\n        minOuterRadius,\n        innerRadius,\n        outerRadius,\n        innerRadiusFixer\n    } = config;\n\n    return [Math.max((innerRadius + innerRadiusFixer || 0), minOuterRadius), outerRadius || Math.min(height,\n        width) / 2];\n};\nexport const getPreviousPoint = (prevData, currIndex, config) => {\n    const prevArc = prevData[currIndex - 1];\n    const nextArc = prevData[currIndex];\n\n    if (prevArc && nextArc) {\n        return {\n            startAngle: prevArc.endAngle,\n            endAngle: nextArc.startAngle\n        };\n    } else if (!nextArc) {\n        return {\n            startAngle: config.endAngle * Math.PI * 2 / 360,\n            endAngle: config.endAngle * Math.PI * 2 / 360\n        };\n    }\n    return {\n        startAngle: config.startAngle * Math.PI * 2 / 360,\n        endAngle: config.startAngle * Math.PI * 2 / 360\n    };\n};\n\n/**\n *\n *\n * @param {*} path\n * @param {*} b\n *\n * @memberof ArcLayer\n */\nexport const tweenPie = (path, rangeValueGetter, b) => {\n    const { datum } = b[0];\n    const outerRadius = rangeValueGetter(datum);\n    datum.outerRadius = outerRadius;\n    datum._previousInfo.outerRadius = datum._previousInfo.outerRadius || outerRadius;\n    return function (t) {\n        return path(interpolator()(datum._previousInfo, datum)(t));\n    };\n};\n\n/**\n *\n *\n * @param {*} path\n * @param {*} b\n *\n * @memberof ArcLayer\n */\nexport const tweenExitPie = (consecutiveExits, transition, rangeValueGetter, path) => {\n    if (consecutiveExits.length > 0) {\n        consecutiveExits.forEach((consecutiveExitArr) => {\n            const startAngle = consecutiveExitArr[0].datum.startAngle;\n            const endAngle = consecutiveExitArr[consecutiveExitArr.length - 1].datum.endAngle;\n            const mid = (Math.PI * 2 * startAngle) / ((Math.PI * 2) + startAngle - endAngle);\n\n            consecutiveExitArr.forEach((e) => {\n                const { elem, datum } = e;\n\n                elem.each(function () {\n                    const gElem = selectElement(this);\n                    gElem.selectAll('path')\n                                    .transition()\n                                    .duration(transition.duration)\n                                    .attrTween('d', () => function (t) {\n                                        const outerRadius = rangeValueGetter(datum);\n                                        datum.outerRadius = outerRadius;\n                                        return path(interpolator()(datum, {\n                                            startAngle: mid,\n                                            endAngle: mid,\n                                            outerRadius\n                                        })(t));\n                                    })\n                                    .remove();\n                    gElem.remove();\n                });\n            });\n        });\n    }\n};\n\nexport const getFieldIndices = (encoding, fieldsConfig) => {\n    const [angleField, radiusField, colorField, sizeField] = [ANGLE, RADIUS, COLOR, SIZE]\n            .map(e => encoding[e].field);\n    const [angleIndex, sizeIndex, radiusIndex] = [angleField, sizeField, radiusField]\n        .map((e) => {\n            const conf = fieldsConfig[e];\n            if (conf && conf.def.type === FieldType.MEASURE) {\n                return conf.index;\n            }\n            return null;\n        });\n    const colorIndex = getObjProp(fieldsConfig, colorField, 'index');\n    return {\n        angleIndex,\n        sizeIndex,\n        radiusIndex,\n        colorIndex\n    };\n};\n","import {\n    setAttrs,\n    setStyles,\n    selectElement,\n    makeElement,\n    getSmartComputedStyle\n} from 'muze-utils';\n\n/**\n * Draws svg text in the specified container.\n * @param {SVGElement} container Container where labels will be appended.\n * @param {Array.<Object>} data Data of the elements.\n * @return {Selection} d3 selection of the elements.\n */\nconst drawText = (container, data, config, smartLabel) => {\n    const selection = selectElement(container).selectAll('g').data(data);\n\n    const selectionMerge = selection.enter().append('g')\n        .each(function (dataObj) {\n            setAttrs(this, dataObj.enter);\n        })\n        .merge(selection);\n    const style = getSmartComputedStyle(selectElement(container), config.className);\n    const fontSize = parseInt(style.fontSize, 10);\n\n    smartLabel.setStyle(style);\n    selectionMerge.each(function (dataObj) {\n        const element = selectElement(this);\n        const { update, text, color, textanchor, style: textStyle } = dataObj;\n        const background = dataObj.background;\n        let backgroundVal;\n        if (backgroundVal = background.value) {\n            const backgroundPadding = background.padding;\n            let diff;\n            const { width, height } = smartLabel.getOriSize(dataObj.text);\n            const backgroundEl = makeElement(element, 'rect', [1]);\n\n            if (textanchor === 'end') {\n                diff = width;\n            } else if (textanchor === 'start') {\n                diff = 0;\n            } else {\n                diff = width / 2;\n            }\n\n            setAttrs(backgroundEl.node(), {\n                x: update.x - diff - backgroundPadding / 2,\n                y: update.y - fontSize - backgroundPadding / 2,\n                width: width + backgroundPadding,\n                height: height + backgroundPadding\n            });\n            background && setStyles(backgroundEl, {\n                background: backgroundVal\n            });\n        }\n        const textEl = makeElement(element, 'text', d => [d]).text(text);\n        const textNode = textEl.node();\n        textStyle && setStyles(textNode, textStyle);\n        color && setStyles(textNode, {\n            fill: color\n        });\n        dataObj.className && textEl.classed(dataObj.className, true);\n        setAttrs(textNode, update);\n        textEl.attr('text-anchor', textanchor);\n    });\n    selection.exit().remove();\n    return selection;\n};\n\nexport default drawText;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-text',\n    classPrefix: CLASSPREFIX,\n    className: '',\n    transform: {\n        type: 'identity'\n    },\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: {},\n        text: {\n            value: '',\n            formatter: (val, i, data, context) => {\n                const valueParser = context.valueParser();\n                return valueParser(val);\n            },\n            background: {\n                padding: 10\n            }\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-text-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-text-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-text-selected`\n        }\n    }\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    setStyles,\n    createElements\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawText from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\nimport { TEXT_ANCHOR_MIDDLE, ENCODING } from '../../enums/constants';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create labels for each data point. It has an encoding property ```text```\n * which determines from which field's data the value of the label will be taken. The text encoding\n * property is necessary for the layer to render the text.The mark type of this layer is ```text```.\n *\n * @public\n *\n * @class\n * @module TextLayer\n * @extends BaseLayer\n */\nexport default class TextLayer extends BaseLayer {\n    /**\n     * Returns the default configuration of the text layer\n     * @return {Object} Default configuration of the text layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'text';\n    }\n\n    elemType () {\n        return 'text';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes) {\n        let points = [];\n        const colorAxis = axes.color;\n        const textEncoding = encoding.text;\n        const { field: textField, value, formatter: textFormatter } = textEncoding;\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding && colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const colorFieldIndex = fieldsConfig[colorField] ? fieldsConfig[colorField].index : -1;\n        const textFieldIndex = textField ? fieldsConfig[textField] && fieldsConfig[textField].index : -1;\n        const xEnc = ENCODING.X;\n        const yEnc = ENCODING.Y;\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d._data;\n            const textValue = textField ? row[textFieldIndex] : value;\n\n            const [xPx, yPx] = [xEnc, yEnc].map(type => (axes[type] ? axes[type].getScaleValue(d[type]) +\n                    axes[type].getUnitWidth() / 2 : 0));\n\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            const point = {\n                enter: {},\n                update: {\n                    x: xPx,\n                    y: yPx\n                },\n                text: textFormatter(textValue, i, data, this),\n                color,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, this) : null,\n                    padding: backgroundPadding\n                },\n                meta: {\n                    stateColor: {},\n                    originalColor: rawColor,\n                    colorTransform: {}\n                },\n                style: {},\n                _data: row,\n                _id: d._id,\n                source: d._data,\n                rowId: d._id\n            };\n\n            point.className = getIndividualClassName(d, i, data, this);\n            points.push(point);\n        }\n\n        points = positionPoints(this, points);\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {textLayer} Instance of text layer\n     */\n    render (container) {\n        let points;\n        const config = this.config();\n        const encoding = config.encoding;\n        const normalizedData = this._normalizedData;\n        const className = config.className;\n        const qualifiedClassName = getQualifiedClassName(config.defClassName, this.id(), config.classPrefix);\n        const axes = this.axes();\n        const containerSelection = selectElement(container);\n\n        containerSelection.classed(`${qualifiedClassName.join(' ')} ${className}`, true);\n        createElements({\n            data: normalizedData,\n            append: 'g',\n            selector: 'g',\n            container,\n            each: (dataArr, group, i) => {\n                const node = group.node();\n                points = this.translatePoints(dataArr, encoding, axes, i);\n                setStyles(node, {\n                    'text-anchor': TEXT_ANCHOR_MIDDLE\n                });\n                drawText(node, points, {\n                    className: qualifiedClassName[0]\n                }, this._dependencies.smartLabel);\n            }\n        });\n        return this;\n    }\n}\n","/* global Element, document  */\nimport {\n    makeElement,\n    selectElement,\n    easeFns,\n    objectIterator,\n    getSymbol\n} from 'muze-utils';\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem) {\n    const groupElement = selectElement(elem);\n    const { shape, size, update } = d;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        if (newShape.nodeName === 'path' || newShape.nodeName === 'image') {\n            shapeElement.attr('transform', `scale(${size / 100})`);\n        } else {\n            shapeElement.attr('height', size);\n            shapeElement.attr('width', size);\n        }\n        shapeElement.attr('x', -size / 2);\n        shapeElement.attr('y', -size / 2);\n        selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = getSymbol(shape).size(size)(update);\n        }\n        makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    } else {\n        d.shape = 'circle';\n        createShape(d, elem);\n    }\n};\n\n/**\n * Draws symbols using d3 symbol api\n * @param {Object} params Contains the svg container, points and other symbol related attributes.\n */\n/* istanbul ignore next */ const drawSymbols = (params) => {\n    let mergedGroups;\n    const { layer, container, points, transition, className } = params;\n    const { duration, effect, disabled } = transition;\n    const mount = selectElement(container);\n\n    mount.attr('class', className);\n    const symbolGroups = mount.selectAll('g').data(points, params.keyFn);\n    const symbolEnter = symbolGroups.enter().append('g').attr('transform', d => `translate(${d.enter.x},${d.enter.y})`);\n    mergedGroups = symbolGroups.merge(symbolEnter)\n                    .each(function (d) {\n                        createShape(d, this);\n                    });\n    mergedGroups = disabled ? mergedGroups :\n        mergedGroups.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    mergedGroups.attr('transform', d => `translate(${d.update.x},${d.update.y})`)\n                    .each(function (d) {\n                        const style = d.style;\n                        const element = selectElement(this);\n                        objectIterator(style, key => element.style(key, style[key]));\n                        element.attr('class', `${className}`);\n                        element.classed(d.className, true);\n                    });\n\n    const exitGroups = symbolGroups.exit();\n    if (!disabled) {\n        exitGroups.transition().ease(easeFns[effect])\n                        .duration(duration)\n                        .on('end', function () {\n                            selectElement(this).remove();\n                        })\n                        .style('fill-opacity', 0)\n                        .style('stroke-opacity', 0);\n    } else {\n        exitGroups.remove();\n    }\n};\n\nexport default drawSymbols;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-point',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    defColorStyle: 'stroke',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -20, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }\n        ]\n    },\n    innerPadding: 0.1,\n    nearestPointThreshold: 10,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        size: {\n            value: 30\n        },\n        color: { },\n        shape: {\n            value: 'circle'\n        },\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    shapes: ['circle', 'cross', 'diamond', 'square', 'star', 'wye', 'triangle'],\n    sizes: [20, 30, 40, 50, 60, 70]\n};\n","import {\n    Voronoi,\n    selectElement,\n    getQualifiedClassName,\n    makeElement,\n    FieldType,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawSymbols from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    getLayerColor,\n    positionPoints,\n    getPlotMeasurement,\n    getIndividualClassName\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create various symbols for each data point. This is commonly used in\n * scatterplot visualizations. The mark type of this layer is ```point```.\n *\n * @public\n *\n * @class\n * @module PointLayer\n * @extends BaseLayer\n */\nexport default class PointLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of PointLayer.\n     * @param {*} args\n     * @memberof PointLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n        this._bandScale = Scales.band();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PointLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Returns the default configuration of the point layer\n     * @return {Object} Default configuration of the point layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof PointLayer\n     */\n    static formalName () {\n        return 'point';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof PointLayer\n     */\n    static drawFn () {\n        return drawSymbols;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes, config = {}) {\n        let points = [];\n        const {\n            size: sizeEncoding,\n            shape: shapeEncoding,\n            color: colorEncoding,\n            x,\n            y\n        } = encoding;\n        const sizeField = sizeEncoding.field;\n        const sizeValue = sizeEncoding.value;\n        const shapeField = shapeEncoding.field;\n        const xField = x.field;\n        const yField = y.field;\n        const { size: sizeAxis, shape: shapeAxis } = axes;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorField = colorEncoding && colorEncoding.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n        const measurement = this.measurement();\n        const shapeFieldIndex = fieldsConfig[shapeField] && fieldsConfig[shapeField].index;\n        const sizeFieldIndex = fieldsConfig[sizeField] && fieldsConfig[sizeField].index;\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d._data;\n            const size = sizeValue instanceof Function ? sizeValue(d, i) : sizeAxis.getSize(row[sizeFieldIndex]);\n            const shape = shapeAxis.getShape(row[shapeFieldIndex]);\n\n            let [xPx, yPx] = [ENCODING.X, ENCODING.Y].map((type) => {\n                const value = d[type] === null ? undefined : d[type];\n                const measure = type === ENCODING.X ? measurement.width : measurement.height;\n                return !encoding[type].field ? measure / 2 : axes[type].getScaleValue(value);\n            });\n\n            xPx += offsetX;\n            yPx += offsetY;\n\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            const style = {\n                fill: color,\n                stroke: color\n            };\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {\n                        x: xPx,\n                        y: yPx\n                    },\n                    update: {\n                        x: xPx,\n                        y: yPx\n                    },\n                    shape,\n                    size: Math.abs(size),\n                    meta: {\n                        stateColor: {},\n                        originalColor: rawColor,\n                        colorTransform: {}\n                    },\n                    style,\n                    _data: row,\n                    _id: d._id,\n                    source: d._data,\n                    rowId: d._id\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container.\n     *\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {BarLayer} Instance of bar layer\n     */\n    render (container) {\n        let maxSize = 0;\n        let seriesClassName;\n        const config = this.config();\n        const keys = this._transformedData.map(d => d.key);\n        const { transition, className, defClassName, classPrefix } = config;\n        const normalizedData = this._normalizedData;\n        const containerSelection = selectElement(container);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        this._points = [];\n        this._pointMap = {};\n\n        containerSelection.classed(qualifiedClassName.join(' '), true).classed(className, true);\n\n        this._points = this.generateDataPoints(normalizedData, keys);\n\n        makeElement(container, 'g', this._points, null, {\n            update: (group, points) => {\n                maxSize = Math.max(maxSize, ...points.map(d => d.size));\n                seriesClassName = `${qualifiedClassName[0]}`;\n                this.constructor.drawFn()({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    keyFn: d => d._id\n                });\n            }\n        }, data => data[0]._id);\n        this._maxSize = Math.sqrt(maxSize / Math.PI) * 2;\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    generateDataPoints (normalizedData, keys) {\n        const encoding = this.config().encoding;\n        const axes = this.axes();\n        const [widthMetrics, heightMetrics] = getPlotMeasurement(this, keys);\n        const offsetXValues = widthMetrics.offsetValues || [];\n        const offsetYValues = heightMetrics.offsetValues || [];\n        return normalizedData.map((dataArr, i) => {\n            const measurementConf = this.getMeasurementConfig(offsetXValues[i], offsetYValues[i], widthMetrics.span,\n                heightMetrics.span);\n            return this.translatePoints(dataArr, encoding, axes, measurementConf);\n        }).filter(d => d.length);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0) + widthSpan / 2,\n                y: (offsetY || 0) + heightSpan / 2\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n\n    /**\n     * Gets the nearest point from a position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Point details\n     */\n    getNearestPoint (x, y) {\n        const distanceLimit = Math.max(this._maxSize, this.config().nearestPointThreshold);\n\n        if (!this.data()) {\n            return null;\n        }\n\n        const point = this._voronoi.find(x, y, distanceLimit);\n        const dimensions = point && point.data.data.update;\n        const radius = point ? Math.sqrt(point.data.data.size / Math.PI) : 0;\n\n        if (point) {\n            const { _data, _id } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(_data, _id);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: radius,\n                    height: radius\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import { makeElement, easeFns } from 'muze-utils';\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} datum\n * @param {*} index\n * @param {*} context\n */\nconst transitionBars = (layer, elem, datum, index, context) => {\n    const { transition } = context;\n    const { duration, disabled, effect } = transition;\n    const selection = elem;\n\n    const selTransition = disabled ? selection :\n        selection.transition()\n        .duration(duration)\n        .ease(easeFns[effect])\n        .on('end', layer.registerAnimationDoneHook());\n    const update = datum.update || datum;\n    const updateStyle = datum.style || {};\n    datum.className && selection.classed(datum.className, true);\n    Object.entries(update).forEach(attr => (!isNaN(attr[1]) && selTransition.attr(attr[0], attr[1])));\n    Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n};\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} d\n */\nconst barEnterFn = (elem, d) => {\n    const selection = elem;\n    const enter = d.enter || {};\n    Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n};\n\n/**\n * Draws rectangles by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Bar Selection\n */\n/* istanbul ignore next */ export const drawRects = (params) => {\n    const { layer, points, container, keyFn } = params;\n    const updateFns = {\n        enter (elem, d) { barEnterFn(elem, d); },\n        update (elem, d, i) { transitionBars(layer, elem, d, i, params); }\n    };\n    return makeElement(container, 'rect', points, null, updateFns, keyFn);\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-bar',\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transform: {\n        type: 'stack'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    innerPadding: 0.1,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        x0: {},\n        y0: {}\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-bar-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-bar-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-bar-selected`\n        }\n    }\n};\n\n","import { MeasureSubtype, DimensionSubtype } from 'muze-utils';\nimport { STACK } from '../../enums/constants';\nimport { getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fieldInfo\n * @param {*} config\n * @param {*} data\n *\n */\nconst resolveDimByField = (type, axesInfo, config, data) => {\n    const spaceType = type === 'x' ? 'width' : 'height';\n    const [fieldType, axis] = [config[`${type}FieldType`], axesInfo[`${type}Axis`]];\n    const {\n        transformType,\n        sizeEncoding,\n        sizeConfig,\n        measurement\n    } = config;\n\n    const sizeValue = sizeEncoding.value;\n    let enter = 0;\n    let pos;\n    let space = 0;\n    let enterSpace = 0;\n    if (fieldType !== undefined) {\n        if (config[`${type}0Field`]) {\n            const minVal = data[type];\n            const maxVal = data[`${type}0`];\n            let min;\n            let max;\n            if (minVal === null || maxVal === null) {\n                return {\n                    enterSpace: undefined,\n                    enter: undefined,\n                    pos: undefined,\n                    space: undefined\n                };\n            } else if (fieldType === MeasureSubtype.CONTINUOUS || fieldType === DimensionSubtype.TEMPORAL) {\n                min = Math.min(minVal, maxVal);\n                max = Math.max(minVal, maxVal);\n            } else {\n                min = minVal;\n                max = maxVal;\n            }\n            const scales = type === 'x' ? [min, max] : [max, min];\n            pos = axis.getScaleValue(scales[0]) + axis.getUnitWidth() / 2;\n            space = Math.abs(axis.getScaleValue(scales[1]) - pos) + axis.getUnitWidth() / 2;\n\n            enter = pos;\n            enterSpace = 0;\n        } else if (fieldType === DimensionSubtype.CATEGORICAL || fieldType === DimensionSubtype.TEMPORAL) {\n            pos = axis.getScaleValue(data[type]) +\n                (sizeConfig[type === 'x' ? 'barWidthOffset' : 'barHeightOffset'] || 0);\n\n            space = sizeConfig[type === 'x' ? 'barWidth' : 'barHeight'];\n            if (sizeValue !== undefined) {\n                const diffPx = sizeValue * space;\n                space -= diffPx;\n                pos += diffPx / 2;\n            }\n            enter = pos;\n            enterSpace = space;\n        } else {\n            const zeroPos = axis.getScaleValue(0);\n            const axisType = axis.getScaleValue(data[type]);\n            const axisType0 = axis.getScaleValue(data[`${type}0`]);\n\n            enterSpace = 0;\n            if (type === 'x') {\n                pos = data[type] < 0 || transformType === STACK ? axisType : zeroPos;\n                space = Math.abs(pos - (transformType === STACK ? axisType0 : (data[type] >= 0 ? axisType : zeroPos)));\n            } else {\n                pos = transformType === STACK || data[type] >= 0 ? axisType : zeroPos;\n                space = Math.abs(pos - (transformType === STACK ? axisType0 : (data[type] >= 0 ? zeroPos : axisType)));\n            }\n            enter = zeroPos;\n        }\n    } else {\n        pos = 0;\n        space = measurement[spaceType];\n    }\n\n    return {\n        enterSpace,\n        enter,\n        pos,\n        space\n    };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} config\n * @param {*} axes\n *\n */\nconst resolveDimensions = (data, config, axes) => {\n    const axesInfo = {\n        xAxis: axes.x,\n        yAxis: axes.y\n    };\n    const {\n        enterSpace: enterWidth,\n        enter: enterX,\n        pos: xPos,\n        space: width\n    } = resolveDimByField('x', axesInfo, config, data);\n\n    const {\n        enterSpace: enterHeight,\n        enter: enterY,\n        pos: yPos,\n        space: height\n    } = resolveDimByField('y', axesInfo, config, data);\n    return {\n        enter: {\n            x: enterX,\n            y: enterY,\n            width: enterWidth,\n            height: enterHeight\n        },\n        update: {\n            x: xPos,\n            y: yPos,\n            width,\n            height\n        }\n    };\n};\n\n/**\n * Generates an array of objects containing x, y, width and height of the bars from the data\n * @param  {Array.<Array>} data Data Array\n * @param  {Object} encoding  Config\n * @param  {Object} axes     Axes object\n * @param {Object} conf config object for point generation\n * @return {Array.<Object>}  Array of points\n */\nexport const getTranslatedPoints = (context, data, sizeConfig) => {\n    let points = [];\n    const encoding = context.config().encoding;\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const fieldsConfig = context.data().getFieldsConfig();\n    const colorEncoding = encoding.color;\n    const colorField = colorEncoding.field;\n    const sizeEncoding = encoding.size || {};\n    const {\n            x0Field,\n            y0Field,\n            xFieldSubType,\n            yFieldSubType\n        } = context.encodingFieldsInf();\n    const measurement = context.measurement();\n    const isXDim = xFieldSubType === DimensionSubtype.CATEGORICAL || xFieldSubType === DimensionSubtype.TEMPORAL;\n    const isYDim = yFieldSubType === DimensionSubtype.CATEGORICAL || yFieldSubType === DimensionSubtype.TEMPORAL;\n    const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n    const transformType = context.transformType();\n    const colorFieldIndex = colorField && fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n    for (let i = 0, len = data.length; i < len; i++) {\n        const d = data[i];\n        const style = {};\n        const meta = {};\n        const dimensions = resolveDimensions(d, {\n            xFieldType: xFieldSubType,\n            yFieldType: yFieldSubType,\n            x0Field,\n            y0Field,\n            transformType,\n            measurement,\n            sizeConfig,\n            sizeEncoding\n        }, axes);\n\n        const { color, rawColor } = getLayerColor({ datum: d, index: i },\n            { colorEncoding, colorAxis, colorFieldIndex });\n\n        style.fill = color;\n        meta.stateColor = {};\n        meta.originalColor = rawColor;\n        meta.colorTransform = {};\n\n        const update = dimensions.update;\n\n        if (!isNaN(update.x) && !isNaN(update.y) && d._id !== undefined) {\n            let point = null;\n            point = {\n                enter: dimensions.enter,\n                update,\n                style,\n                _data: d._data,\n                _id: d._id,\n                source: d._data,\n                rowId: d._id,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, context);\n            points.push(point);\n            // Store each point in a hashmap with key as the dimensional or temporal field value\n            context.cachePoint(d[key], point);\n        }\n    }\n\n    points = positionPoints(context, points);\n    return points;\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    createElements,\n    clipElement,\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    Scales,\n    getNearestValue\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawRects } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getPlotMeasurement, getValidTransformForAggFn } from '../../helpers';\nimport './styles.scss';\nimport { getTranslatedPoints } from './bar-helper';\n\nconst MEASURE = FieldType.MEASURE;\nconst scaleBand = Scales.band;\n\n/**\n * Bar layer creates rectangle marks. The mark type of this layer is ```bar```. This layer can be used\n * to create stacked or grouped bars, range bars, heatmap plots and also reference bands by using\n * the encoding properties.\n *\n * @public\n *\n * @class\n * @module BarLayer\n * @extends BaseLayer\n */\nexport default class BarLayer extends BaseLayer {\n    /**\n     * Creates an instance of bar layer\n     */\n    constructor (...params) {\n        super(...params);\n        this._bandScale = scaleBand();\n        this._plotPadding = {\n            x: 0,\n            y: 0\n        };\n        this._plotSpan = {\n            x: 0,\n            y: 0\n        };\n        this._pointMap = {};\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BarLayer\n     */\n    elemType () {\n        return 'rect';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BarLayer\n     */\n    static formalName () {\n        return 'bar';\n    }\n\n    /**\n     * Returns the default configuration of the bar layer\n     * @return {Object} Default configuration of the bar layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof BarLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const colorField = encoding.color.field;\n        const transform = config.transform;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} fieldsConfig\n     *\n     * @memberof BarLayer\n     */\n    calculateDomainFromData (data, encodingFieldInf, fieldsConfig) {\n        const domain = super.calculateDomainFromData(data, encodingFieldInf, fieldsConfig);\n        ['x', 'y'].forEach((d) => {\n            if (encodingFieldInf[`${d}FieldType`] === MEASURE && domain[d]) {\n                encodingFieldInf[`${d}0Field}`] ? domain[d] = domain[d].sort((a, b) => a - b) :\n                    (domain[d][0] = Math.min(domain[d][0], 0));\n            }\n        });\n        return domain;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the bars from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @param {Object} conf config object for point generation\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, sizeConfig) {\n        return getTranslatedPoints(this, data, sizeConfig);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGGroup} container SVGGroup where plot will be rendered.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    render (container) {\n        const config = this.config();\n        const transition = config.transition;\n        const normalizedDataArr = this._normalizedData;\n        const transformedData = this._transformedData;\n        const keys = transformedData.map(d => d.key);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const height = axes.y && axes.y.scale().range()[0];\n        const width = axes.x && axes.x.scale().range()[1];\n        const defClassName = config.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const className = config.className;\n        const containerSelection = selectElement(container);\n        const dimensions = Object.values(fieldsConfig).filter(e => e.def.type === FieldType.DIMENSION)\n            .map(e => e.index);\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        clipElement(container, {\n            x: 0,\n            y: 0,\n            width,\n            height\n        }, `id-${this.id()}`);\n\n        this._points = this.generateDataPoints(normalizedDataArr, keys);\n\n        createElements({\n            data: this._points,\n            container,\n            selector: 'g',\n            append: 'g',\n            each: (points, group, i) => {\n                const seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n                group.style('display', 'block');\n                drawRects({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: {},\n                    keyFn: d => dimensions.map(key => d._data[key]).join('-')\n                });\n            }\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} normalizedData\n     * @param {*} keys\n     *\n     * @memberof BarLayer\n     */\n    generateDataPoints (normalizedData, keys) {\n        const [barWidthMetrics, barHeightMetrics] = getPlotMeasurement(this, keys);\n        const barWidthOffsets = barWidthMetrics.offsetValues || [];\n        const barHeightOffsets = barHeightMetrics.offsetValues || [];\n        this._plotSpan = {\n            x: barWidthMetrics.groupSpan || 0,\n            y: barHeightMetrics.groupSpan || 0\n        };\n        this._plotPadding = {\n            x: barWidthMetrics.padding || 0,\n            y: barHeightMetrics.padding || 0\n        };\n\n        this._pointMap = {};\n        return normalizedData.map((data, i) => this.translatePoints(data,\n            {\n                barWidth: barWidthMetrics.span,\n                barWidthOffset: barWidthOffsets[i] || 0,\n                barHeight: barHeightMetrics.span,\n                barHeightOffset: barHeightOffsets[i] || 0\n            }));\n    }\n\n    getPlotPadding () {\n        return this._plotPadding;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Gets the nearest point of the position passed.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point.\n     */\n    getNearestPoint (x, y) {\n        if (!this.data()) {\n            return null;\n        }\n        let axis;\n        let value;\n        let points;\n        let uniqueFieldType;\n        let uniqueFieldIndex;\n        let filterData;\n        let identifiers;\n        let pointFound = null;\n        const dataModel = this.data();\n        const dataObj = dataModel.getData();\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const axes = this.axes();\n        const data = dataObj.data;\n        const pointMap = this._pointMap;\n        const {\n                xField,\n                yField,\n                xFieldSubType,\n                yFieldSubType\n            } = this.encodingFieldsInf();\n\n        if (xFieldSubType === MeasureSubtype.CONTINUOUS) {\n            axis = axes.y;\n            value = axis.invert(y);\n            uniqueFieldIndex = fieldsConfig[yField].index;\n            uniqueFieldType = yFieldSubType;\n        } else {\n            axis = axes.x;\n            value = axis.invert(x);\n            uniqueFieldIndex = fieldsConfig[xField].index;\n            uniqueFieldType = xFieldSubType;\n        }\n\n        if (uniqueFieldType === DimensionSubtype.CATEGORICAL) {\n            points = pointMap[value];\n        }\n\n        if (uniqueFieldType === DimensionSubtype.TEMPORAL) {\n            filterData = [...new Set(data.map(d => d[uniqueFieldIndex]))];\n            value = getNearestValue(filterData, value);\n            points = pointMap[value];\n        }\n        const len = points && points.length;\n        points && points.sort((p1, p2) => p1.update.y - p2.update.y);\n        for (let i = 0; i < len; i++) {\n            const point = points[i];\n            const update = point.update;\n            if (x >= update.x && x <= (update.width + update.x) && y >= update.y && y <= (update.height + update.y)) {\n                pointFound = point;\n                break;\n            }\n            pointFound = null;\n        }\n\n        const values = pointFound && pointFound._data;\n        if (values) {\n            identifiers = this.getIdentifiersFromData(values, pointFound._id);\n        }\n        return pointFound ? {\n            dimensions: [pointFound.update],\n            id: identifiers,\n            layerId: this.id()\n        } : pointFound;\n    }\n\n    getPlotSpan () {\n        return this._plotSpan;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-tick',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }]\n    },\n    innerPadding: 0.1,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: { },\n        x: {},\n        y: {},\n        x0: {},\n        y0: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-tick-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-tick-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-tick-selected`\n        }\n    }\n};\n","import { selectElement } from 'muze-utils';\n\n/**\n * Draws ticks by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Ticks Selection\n */\nexport default /* istanbul ignore next */ (params) => {\n    const { points, container, keyFn, className } = params;\n    const mount = selectElement(container);\n    const ticks = mount.selectAll('path').data(points, keyFn);\n    const ticksEnter = ticks.enter().append('path');\n\n    mount.attr('class', className || '');\n    ticksEnter.each(function (d) {\n        const selection = selectElement(this);\n        const enter = d.enter || {};\n        Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n    });\n\n    ticks.exit().remove();\n    return ticks.merge(ticksEnter)\n                    .each(function (d) {\n                        const selection = selectElement(this);\n                        const update = d.update;\n                        const updateStyle = d.style || {};\n                        const x0 = update.x0 !== undefined ? update.x0 : update.x;\n                        const y0 = update.y0 !== undefined ? update.y0 : update.y;\n                        const path = `M ${update.x} ${update.y} L ${x0} ${y0}`;\n                        d.className && selection.classed(d.className, true);\n                        selection.attr('d', path);\n                        Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n                    });\n};\n\n","import { FieldType } from 'muze-utils';\nimport { PointLayer } from '../point';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport drawTicks from './renderer';\nimport './styles.scss';\nimport { getAxesScales, getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\n\n/**\n * This layer is used to create small lines. The orientation of the line is determined by the positional\n * encoding properties x0 and y0. The mark type of the layer is ```tick```.\n *\n * @public\n *\n * @class\n * @module TickLayer\n * @extends BaseLayer\n */\nexport default class TickLayer extends PointLayer {\n\n    /**\n     *\n     *\n     * @staticg\n     *\n     * @memberof TickLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static formalName () {\n        return 'tick';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static drawFn () {\n        return drawTicks;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TickLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes, config = {}) {\n        let points = [];\n        const {\n                xAxis,\n                yAxis\n            } = getAxesScales(axes);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n                xField,\n                yField,\n                x0Field,\n                y0Field,\n                xFieldType,\n                yFieldType\n            } = this.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding && colorEncoding.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n        const measurement = this.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n        const { x: xSpan, y: ySpan } = config.span;\n        for (let i = 0, len = data.length; i < len; i++) {\n            let xPx;\n            let x0Px;\n            let y0Px;\n            let yPx;\n            const d = data[i];\n            const row = d._data;\n            if (xField) {\n                xPx = xAxis.getScaleValue(d.x) + offsetX;\n                x0Px = xPx + xSpan;\n            }\n\n            if (yField) {\n                yPx = yAxis.getScaleValue(d.y) + offsetY;\n                y0Px = yPx !== null ? yPx + ySpan : null;\n            }\n\n            if (!xField) {\n                xPx = 0;\n                x0Px = measurement.width;\n                if (!isNaN(yPx)) {\n                    yPx += ySpan / 2;\n                    y0Px = yPx;\n                }\n            }\n\n            if (!yField) {\n                yPx = 0;\n                y0Px = measurement.height;\n                x0Px = xPx += xSpan / 2;\n            }\n\n            if (x0Field) {\n                x0Px = xAxis.getScaleValue(d.x0) + xSpan;\n                yPx += ySpan / 2;\n                y0Px -= ySpan / 2;\n            }\n\n            if (y0Field) {\n                y0Px = yAxis.getScaleValue(d.y0) + ySpan;\n                xPx += xSpan / 2;\n                x0Px -= xSpan / 2;\n            }\n            const style = {};\n            const meta = {};\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            style.stroke = color;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {},\n                    update: {\n                        x: xPx,\n                        y: yPx,\n                        x0: x0Px,\n                        y0: y0Px\n                    },\n                    style,\n                    _data: row,\n                    _id: d._id,\n                    source: row,\n                    rowId: d._id,\n                    meta\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0),\n                y: (offsetY || 0)\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n}\n","export const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { isSimpleObject, mergeRecursive, getObjProp } from 'muze-utils';\n\nconst parseLayerDefinition = (sink, definition, layerDef, layerType) => {\n    for (const key in definition) {\n        if (Object.hasOwnProperty.call(definition, key)) {\n            let strs;\n            let propValue;\n            const def = definition[key];\n            if (isSimpleObject(def)) {\n                sink[key] = {};\n                parseLayerDefinition(sink[key], def, layerDef, layerType);\n            } else if (typeof def === 'string' && (strs = def.split('.')) && strs[0] === layerType) {\n                propValue = getObjProp(layerDef, ...strs.slice(1, strs.length));\n                if (propValue !== undefined) {\n                    sink[key] = propValue;\n                }\n            } else {\n                sink[key] = def;\n            }\n        }\n    }\n};\n\nconst sanitizeEncoding = (encoding) => {\n    // Create object for each encoding value if encoding value is a string\n    for (const key in encoding) {\n        if (typeof encoding[key] === 'string') {\n            encoding[key] = {\n                field: encoding[key]\n            };\n        }\n    }\n};\n\n/**\n * Layer Factory creates layers based on the layer type. All types of layers needs to register in\n * the layer factory. For getting a layer instance, getLayer method needs to invoked with the\n * layerType and other arguments. It also registers the definition of composite layers.\n *\n * @public\n *\n * @module LayerFactory\n */\nconst layerFactory = (() => {\n    const compositeLayers = {};\n    const factoryObj = {\n        setLayerRegistry: (reg) => {\n            factoryObj._layerRegistry = reg;\n        },\n        getSerializedConf: (mark, layerDef) => {\n            let serializedDefs;\n            const defs = compositeLayers[mark];\n            const newConf = mergeRecursive({}, layerDef);\n\n                // If it is a composite layer then resolve all the definitions of each unit layer\n            if (defs) {\n                serializedDefs = defs.map((unitLayerDef) => {\n                    const sDef = {};\n                    parseLayerDefinition(sDef, unitLayerDef, newConf, mark);\n                    sanitizeEncoding(sDef.encoding);\n                    return sDef;\n                });\n            } else {\n                const encoding = newConf.encoding;\n                // Create object for each encoding value if encoding value is a string\n                sanitizeEncoding(encoding);\n                serializedDefs = newConf;\n            }\n\n            return serializedDefs;\n        },\n        getLayerInstance: (layerDef, ...params) => {\n            const layerRegistry = factoryObj._layerRegistry;\n            layerDef = !(layerDef instanceof Array) ? [layerDef] : layerDef;\n            const instances = layerDef.map((layerObj) => {\n                const layerConstructor = layerRegistry[layerObj.mark];\n                return layerConstructor.create(...params);\n            });\n            return instances.length === 1 ? instances[0] : instances;\n        },\n        getLayerClass: mark => factoryObj._layerRegistry[mark],\n        /**\n         * Registers a new composite layer definition in the layer factory.\n         *\n         * @public\n         *\n         * @param {string} layerType Mark type of the new composite layer.\n         * @param {Array} layerDefs Layer definitions of the composite layer.\n         */\n        composeLayers: (layerType, layerDefs) => {\n            compositeLayers[layerType] = layerDefs;\n        },\n        sanitizeLayerConfig: (layerDef) => {\n            const newConf = mergeRecursive({}, layerDef);\n            sanitizeEncoding(newConf.encoding);\n            return newConf;\n        }\n    };\n    return factoryObj;\n})();\n\nexport default layerFactory;\n","import layerFactory from './layer-factory';\n\nexport default layerFactory;\n","import { AreaLayer } from './layers/area';\nimport { ArcLayer } from './layers/arc';\nimport { LineLayer } from './layers/line';\nimport { TextLayer } from './layers/text';\nimport { PointLayer } from './layers/point';\nimport { BarLayer } from './layers/bar';\nimport { BaseLayer } from './base-layer';\nimport * as LAYER_TYPES from './enums/layer-types';\nimport { TickLayer } from './layers/tick';\n\nexport const DEFAULT_LAYERS = {\n    [LAYER_TYPES.AREA_LAYER]: AreaLayer,\n    [LAYER_TYPES.ARC_LAYER]: ArcLayer,\n    [LAYER_TYPES.LINE_LAYER]: LineLayer,\n    [LAYER_TYPES.TEXT_LAYER]: TextLayer,\n    [LAYER_TYPES.POINT_LAYER]: PointLayer,\n    [LAYER_TYPES.TICK_LAYER]: TickLayer,\n    [LAYER_TYPES.BAR_LAYER]: BarLayer,\n    [LAYER_TYPES.BASE_LAYER]: BaseLayer\n};\n","/**\n * This file exports constants that are used as enums in the\n *  crosstab group implementation.\n */\n/**\n * Width of the crosstab.\n */\nexport const X = 'x';\n/**\n * Width of the crosstab.\n */\nexport const Y = 'y';\n/**\n * Width of the crosstab.\n */\nexport const WIDTH = 'width';\n\n/**\n * Height of the crosstab.\n */\nexport const HEIGHT = 'height';\n\n/**\n * Field referring to object storing measurement configuration.\n */\nexport const MEASUREMENT = 'measurement';\n\n/**\n * Field referring to object storing configuration properties.\n */\nexport const CONFIG = 'config';\n\n/**\n * Width of visual unit in crosstab.\n */\nexport const MIN_UNIT_WIDTH = 'minUnitWidth';\n\n/**\n * Height of visual unit.\n */\nexport const MIN_UNIT_HEIGHT = 'minUnitHeight';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSIONS = 'dimensions';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURES = 'measures';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSION = 'dimension';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURE = 'measure';\n\n/**\n * Flag to specify if model should be pivoted.\n */\nexport const PIVOT = 'pivot';\n\n/**\n * Flag to specify format\n */\nexport const FORMAT = 'format';\n\n/**\n * Mount point where the variable will be hosted\n */\nexport const MOUNT = 'mount';\n\n/**\n * Data update flag\n */\nexport const HAS_DATA_UPDATED = 'hasDataUpdated';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROWS = 'rows';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMNS = 'columns';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COL = 'col';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROW = 'row';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMN = 'column';\n\n/**\n * Field referring to object storing color field\n */\nexport const COLOR = 'color';\n\n/**\n * Field referring to object storing shape field\n */\nexport const SHAPE = 'shape';\n\n/**\n * Field referring to object storing size field\n */\nexport const SIZE = 'size';\n\n/**\n * Field referring to object storing detail field\n */\nexport const DETAIL = 'detail';\n\n/**\n * Field referring to object storing set of layers\n */\nexport const LAYERS = 'layers';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const TRANSFORM = 'transform';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const ORDINAL = 'ordinal';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const LINEAR = 'linear';\n/**\n * Field referring to object storing the transforms\n */\nexport const LEFT = 'left';\n/**\n * Field referring to object storing the transforms\n */\nexport const RIGHT = 'right';\n/**\n * Field referring to object storing the transforms\n */\nexport const TOP = 'top';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTTOM = 'bottom';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const RETINAL = 'retinal';\n/**\n * Field referring to object storing the transforms\n */\nexport const CELL = 'cell';\n/**\n * Field referring to object storing the transforms\n */\nexport const X_AXES = 'xAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const Y_AXES = 'yAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const ENTRY_CELLS = 'entryCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const INITIALIZED = 'initialized';\n/**\n * Field referring to object storing the transforms\n */\nexport const EXIT_CELLS = 'exitCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const AXIS = 'axis';\n/**\n * Field referring to object storing the transforms\n */\nexport const UNIT = 'unit';\n/**\n * Field referring to object storing the transforms\n */\nexport const UPDATED = 'updated';\n/**\n * Field referring to object storing the transforms\n */\nexport const BEFORE_UPDATE = 'beforeupdate';\n/**\n * Field referring to object storing the transforms\n */\nexport const VALUE_MATRIX = 'valueMatrix';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET_HEADERS = 'facet-headers';\n/**\n * Field referring to object storing the transforms\n */\nexport const RADIUS = 'radius';\n/**\n * Field referring to object storing the transforms\n */\nexport const ANGLE = 'angle';\n/**\n * Field referring to object storing the transforms\n */\nexport const ARC = 'arc';\n/**\n * Field referring to object storing the transforms\n */\nexport const CARTESIAN = 'cartesian';\n/**\n * Field referring to object storing the transforms\n */\nexport const POLAR = 'polar';\n/**\n * Field referring to object storing the transforms\n */\nexport const CATEGORICAL = 'categorical';\n/**\n * Field referring to object storing the transforms\n */\nexport const TEMPORAL = 'temporal';\n/**\n * Field referring to object storing the transforms\n */\nexport const BAR = 'bar';\n/**\n * Field referring to object storing the transforms\n */\nexport const LINE = 'line';\n/**\n * Field referring to object storing the transforms\n */\nexport const POINT = 'point';\n/**\n * Field referring to object storing the transforms\n */\nexport const PRIMARY = 'Primary';\n/**\n * Field referring to object storing the transforms\n */\nexport const SECONDARY = 'Secondary';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTH = 'both';\n/**\n * Field referring to object storing the transforms\n */\nexport const INTERACTION = 'interaction';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_LINES = 'gridLines';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_BANDS = 'gridBands';\n/**\n * Field referring to object storing the transforms\n */\nexport const HEADER = 'header';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET = 'facet';\n\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Artboard.\n * Artboard merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module\n */\n\nexport default {\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * Interfaces for VisualGroup. Any new VisualGroup has to implement this class.\n * @class  SimpleGroup\n */\nclass SimpleGroup {\n\n    /**\n     * This method is used to set or get the DataModel instance.\n     *\n     * @param {DataModel | undefined} dataModel Instance of datamodel.\n\n     * @memberof  SimpleGroup\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to set or get the group specific configuration\n     * properties\n     *\n     * @param {Object | undefined} configObj The input configuration.\n     *                                or instance of visual group.\n     * @memberof  SimpleGroup\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to return a serialized representation of the\n     * instance's properties.\n     *\n     * @memberof  SimpleGroup\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to get or set the measurement object which houses\n     * layout properties like width and height.\n     *\n     * @param {Object  | undefined} mObj The measurement properties.\n     * @memberof  SimpleGroup\n     */\n    measurement () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n\nexport default SimpleGroup;\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n *\n *\n * @export\n * @class Variable\n */\nexport default class Variable {\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    type () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    toString () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n","import Variable from './variable';\n\n/**\n * This is a wrapper on top of multiple variables which are of same type but they are shown in the same axis.This is\n * required in case of range plots or ohlc plots where one plot is mapped to multiple measure fields. At that time,\n * we need to create a composed variable from multiple variables. This class just wraps them into one variable instance\n * and provides methods to get the type and other common functionalities which can be performed on a simple variable\n * instance.\n *\n * @public\n * @class ComposeVars\n */\nclass ComposedVars extends Variable {\n\n    /**\n     * Creates an instance of ComposeVars.\n     *\n     * @param {Array} texts Array of field names\n     */\n    constructor (...texts) {\n        super(...texts);\n        this.vars(texts);\n    }\n\n    vars (...params) {\n        if (params.length) {\n            this._vars = params[0];\n            return this;\n        }\n        return this._vars;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this.vars().forEach(d => d.data(dm[0]));\n            return this;\n        }\n        return this._data;\n    }\n\n    /**\n     * Get all the field names from composed variable instance.\n     *\n     * @public\n     * @return {Array} Array of field names.\n     */\n    getMembers () {\n        const vars = this.vars();\n        return vars.map(member => member.getMembers()[0]);\n    }\n\n    /**\n     * Type of field associated with this composed variable.\n     *\n     * @return {string} Type of variable (Measure/Dimension).\n     */\n    type () {\n        return this.vars()[0].type();\n    }\n\n    toString () {\n        return this.vars().map(d => d.toString()).join(',');\n    }\n\n    /**\n     * Returns the number formatter function of the variable.\n     *\n     * @return {Function} Number formatter function of the variable.\n     */\n    numberFormat () {\n        return this.vars()[0].numberFormat();\n    }\n\n    format (values) {\n        return this.vars()[0].format(values);\n    }\n\n    /**\n     * Returns the subtype of the fields associated with this variable instance.\n     *\n     * @public\n     * @return {string} Subtype of the variable.\n     */\n    subtype () {\n        return this.vars()[0].subtype();\n    }\n\n    /**\n     * Returns the consecutive minimum difference of the field values.\n     *\n     * @public\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        return this.vars()[0].getMinDiff();\n    }\n}\n\nexport default ComposedVars;\n","import { DateTimeFormatter } from 'muze-utils';\nimport Variable from './variable';\n\n/**\n * This is a wrapper on top of fields passed in rows or columns in canvas. This is used to get the type of field or\n * get min difference from the field values.\n *\n * @public\n * @class SimpleVariable\n */\nexport default class SimpleVariable extends Variable {\n\n    /**\n     * Creates an instance of simple variable instance.\n     *\n     * @param {string} text Field name.\n     */\n    constructor (text) {\n        super();\n        this.oneVar(text);\n    }\n\n    /**\n     * Gets the field name associated with this variable instance.\n     *\n     * @public\n     * @return {string} Name of the field.\n     */\n    oneVar (...oneV) {\n        if (oneV.length) {\n            this._oneVar = oneV[0];\n            return this;\n        }\n        return this._oneVar;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    toString () {\n        return this.oneVar();\n    }\n\n    /**\n     * Gets the number formatter function of this variable.\n     *\n     * @public\n     * @return {Function} Number formatter function.\n     */\n    numberFormat () {\n        if (this.type() === 'measure') {\n            const formatter = this.data().getFieldspace().getMeasure()[this.oneVar()];\n            return formatter.numberFormat();\n        } return val => val;\n    }\n\n    format (values) {\n        if (values && this.subtype() === 'temporal') {\n            const formatter = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            const dtFormat = new DateTimeFormatter(formatter);\n            values = values.map(e => dtFormat.getNativeDate(e));\n        }\n        return values;\n    }\n\n    /**\n     * Return the field names associated with this variable instance.\n     *\n     * @public\n     * @return {Array} Array of fields.\n     */\n    getMembers () {\n        return [this.oneVar()];\n    }\n\n    /**\n     * Returns the type of the variable. Whether it is measure or dimension.\n     *\n     * @public\n     * @return {string} Type of variable.\n     */\n    type () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.type;\n    }\n\n    /**\n     * Returns the subtype of the variable. Subtype can be categorical or temporal. If no subtype is found, then it\n     * returns the type of the variable.\n     *\n     * @public\n     * @return {string} Subtype of variable.\n     */\n    subtype () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.subtype || fieldDef.type;\n    }\n\n    /**\n     * Returns the minimum consecutive difference between the data values of this variable.\n     *\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        const fieldSpace = this.data().getFieldspace();\n        return fieldSpace.fieldsObj()[this.oneVar()].minimumConsecutiveDifference();\n    }\n\n    /**\n     * Returns true if two variable instances are same.If both variable has the same field names, they are equal.\n     *\n     * @return {Boolean} Whether two variable instances are same.\n     */\n    equals (varInst) {\n        return this.oneVar() === varInst.oneVar();\n    }\n}\n","import { ComposedVars, SimpleVariable } from '../variable';\nimport { DIMENSION, COLUMNS, ROWS, TEMPORAL } from '../enums/constants';\n\n/**\n * Gets the list of fields in a sorted order by measurement and dimension\n *\n * @param {Array} fieldList List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields sorted by measurement and dimensions\n */\nconst orderFields = (fieldArray, type) => {\n    const dimensionArr = [[], []];\n    const measureArr = [[], []];\n    const temporalArr = [[], []];\n    const categoricalArr = [[], []];\n\n    fieldArray.forEach((fieldList, index) => {\n        fieldList.forEach((field) => {\n            if (field.type() === DIMENSION) {\n                dimensionArr[index].push(field);\n                field.subtype() === TEMPORAL ? temporalArr[index].push(field) : categoricalArr[index].push(field);\n            } else {\n                measureArr[index].push(field);\n            }\n        });\n    });\n\n    const numOfMeasures = measureArr[0].length + (measureArr[1] ? measureArr[1].length : 0);\n\n    // Single array of fields\n    if (!fieldArray[1]) {\n        // Push measures to bottom\n        measureArr[1] = type === COLUMNS ? measureArr[0] : [];\n        // Push measures to left\n        measureArr[0] = type !== COLUMNS ? measureArr[0] : [];\n        // Bottom and right dimensions empty\n        dimensionArr[1] = [];\n        // Left and top filled with dimensions\n        dimensionArr[0] = dimensionArr[0];\n        if (numOfMeasures === 0) {\n            const allDimensions = [...dimensionArr[0], ...dimensionArr[1]];\n            if (type === COLUMNS) {\n                dimensionArr[1] = allDimensions[allDimensions.length - 1] ? [allDimensions[allDimensions.length - 1]]\n                        : [];\n                allDimensions.splice(-1, 1);\n            } else {\n                dimensionArr[1] = [];\n            }\n            dimensionArr[0] = [...allDimensions];\n        }\n    }\n\n    if (dimensionArr[0].length && dimensionArr[1].length && numOfMeasures > 0) {\n        dimensionArr[0] = [...dimensionArr[0], ...dimensionArr[1]];\n        dimensionArr[1] = [];\n    }\n    return {\n        fields: dimensionArr.map((list, i) => (i === 1 ?\n            measureArr[i].concat(dimensionArr[i]) : dimensionArr[i].concat(measureArr[i]))),\n        dimensions: [...dimensionArr[0], ...dimensionArr[1]],\n        measures: [...measureArr[0], ...measureArr[1]],\n        temporal: [...temporalArr[0], ...temporalArr[1]],\n        categorical: [...categoricalArr[0], ...categoricalArr[1]]\n    };\n};\n\n/**\n * Gets the list of normalized fields\n *\n * @param {Array} fields List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields normalized by measurement and dimensions\n */\nconst normalizeFields = (config, type) => {\n    const fieldsArr = [];\n    const fields = config[type];\n\n    if (!(fields[0] instanceof Array)) {\n        fieldsArr[0] = fields;\n    } else {\n        fieldsArr[0] = fields[0] || [];\n        fieldsArr[1] = fields[1] || [];\n    }\n    return fieldsArr;\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} datamodel\n *\n */\nconst convertToVar = (datamodel, fields) => {\n    const vars = [];\n\n    fields && fields.forEach((field) => {\n        if (field instanceof ComposedVars) {\n            vars.push(field);\n            field.data(datamodel);\n        } else {\n            vars.push(new SimpleVariable(field).data(datamodel));\n        }\n    });\n    return vars;\n};\n\n/**\n *\n *\n * @param {*} rows\n * @param {*} columns\n * @param {*} datamodel\n *\n */\nexport const transformFields = (datamodel, config) => {\n    const [rowsInfo, columnsInfo] = [ROWS, COLUMNS].map((fields) => {\n        const normalizedFields = normalizeFields(config, fields);\n        const norFields = [convertToVar(datamodel, normalizedFields[0])];\n\n        if (normalizedFields[1]) {\n            norFields[1] = convertToVar(datamodel, normalizedFields[1]);\n        }\n        return orderFields(norFields, fields);\n    });\n    const {\n        fields: rows,\n        dimensions: rowDimensions,\n        measures: rowMeasures,\n        temporal: rowTemporalFields,\n        categorical: rowCategoricalFields\n    } = rowsInfo;\n    const {\n        fields: columns,\n        dimensions: columnDimensions,\n        measures: columnMeasures,\n        temporal: columnTemporalFields,\n        categorical: columnCategoricalFields\n    } = columnsInfo;\n    return {\n        rows,\n        rowDimensions,\n        rowMeasures,\n        rowTemporalFields,\n        rowCategoricalFields,\n        columns,\n        columnTemporalFields,\n        columnCategoricalFields,\n        columnDimensions,\n        columnMeasures\n    };\n};\n","import { ERROR_MSG, mergeRecursive } from 'muze-utils';\nimport { transformFields } from './field-sanitizer';\nimport { getHeaderAxisFrom } from '../group-helper/group-utils';\nimport { ROW, COLUMN } from '../enums/constants';\n\n/**\n *\n *\n * @export\n * @class VisualEncoder\n */\nexport default class VisualEncoder {\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    createAxis () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    setCommonDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    getLayerConfig () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    fieldInfo (...info) {\n        if (info.length) {\n            this._fieldInfo = mergeRecursive(this._fieldInfo || {}, info[0]);\n            return this;\n        }\n        return this._fieldInfo;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof VisualEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        this.fieldInfo(transformFields(datamodel, config));\n        return this.fieldInfo();\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    axisFrom (...params) {\n        if (params.length) {\n            this._axisFrom = params[0];\n            return this;\n        }\n        return this._axisFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    headerFrom (...params) {\n        if (params.length) {\n            this._headerFrom = params[0];\n            return this;\n        }\n        return this.__headerFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisFrom\n     *\n     * @memberof CartesianEncoder\n     */\n    setAxisAndHeaders (axisFrom = {}, fields) {\n        const [rowHeader, rowAxis] = getHeaderAxisFrom(ROW, fields.rows, axisFrom);\n        const [colHeader, colAxis] = getHeaderAxisFrom(COLUMN, fields.columns, axisFrom);\n\n        this.axisFrom({\n            row: rowAxis,\n            column: colAxis\n        });\n        this.headerFrom({\n            row: rowHeader,\n            column: colHeader\n        });\n        return this;\n    }\n}\n","import { ContinousAxis, BandAxis, TimeAxis, ColorAxis, SizeAxis, ShapeAxis } from '@chartshq/muze-axis';\n\nexport const scaleMaps = {\n    linear: ContinousAxis,\n    band: BandAxis,\n    temporal: TimeAxis,\n    size: SizeAxis,\n    color: ColorAxis,\n    shape: ShapeAxis\n};\n","import { ScaleType } from '@chartshq/muze-axis';\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    dimension: ScaleType.BAND,\n    categorical: ScaleType.BAND,\n    temporal: ScaleType.TIME,\n    measure: ScaleType.LINEAR,\n    continuous: ScaleType.LINEAR\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { AxisOrientation } from '@chartshq/muze-axis';\nimport { scaleMaps } from '../enums/scale-maps';\nimport { getAxisType, getAxisKey } from '../group-helper';\nimport { dataTypeScaleMap } from '../data-type-scale-map';\nimport { CATEGORICAL, TEMPORAL, BAR, LINE, POINT, BOTH, Y } from '../enums/constants';\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst getAxisConfig = (axisInfo, field, axesCreators) => {\n    let axisOrientation;\n    const { index, axisIndex, axisType } = axisInfo;\n    const { config, position } = axesCreators;\n    const userAxisConfig = config.axes ? (config.axes[axisType] || {}) : {};\n    const {\n        LEFT,\n        RIGHT,\n        TOP,\n        BOTTOM\n    } = AxisOrientation;\n    const allOrientations = axisType === Y ? [LEFT, RIGHT] : [TOP, BOTTOM];\n\n    if (position === BOTH) {\n        axisOrientation = allOrientations[axisIndex];\n    } else {\n        axisOrientation = position;\n    }\n    const axisConfig = {\n        id: `${axisType}-${index}-${axisIndex}`,\n        name: field.toString(),\n        field: field.toString(),\n        numberFormat: field.numberFormat(),\n        orientation: axisOrientation,\n        showAxisName: true,\n        show: true,\n        type: dataTypeScaleMap[field.subtype()]\n    };\n    userAxisConfig.tickValues = field.format(userAxisConfig.tickValues);\n    userAxisConfig.domain = field.format(userAxisConfig.domain);\n\n    return mergeRecursive(axisConfig, userAxisConfig);\n};\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst createSimpleAxis = (axisConfig, field, axesCreators) => {\n    const { labelManager } = axesCreators;\n    const Cls = scaleMaps[dataTypeScaleMap[field.subtype()]];\n    const simpleAxis = new Cls(axisConfig, { labelManager });\n    return simpleAxis;\n};\n\nexport const getAdjustedDomain = (max, min) => {\n    const y1ratio = max[0] / (max[0] - min[0]);\n    const y2ratio = max[1] / (max[1] - min[1]);\n\n    // adjust min/max values for positive negative values zero line etc\n    let allSameSign = false;\n\n    // if all numbers are positive set floor to zero\n    if (min[0] > 0 && min[1] > 0 && min[1] > 0 && max[1] > 0) {\n        allSameSign = true;\n        min[0] = 0;\n        min[1] = 0;\n    }\n\n    // if all numbers are negative set ceiling to zero\n    if (min[0] < 0 && min[1] < 0 && min[1] < 0 && max[1] < 0) {\n        allSameSign = true;\n        max[0] = 0;\n        max[1] = 0;\n    }\n\n    // align zero line if necessary\n    if (!allSameSign && y1ratio !== y2ratio) {\n        if (y1ratio < y2ratio) {\n                    // adjust min[1]\n            min[1] = min[0] / max[0] * max[1];\n        } else {\n                    // adjust min[0]\n            min[0] = min[1] / max[1] * max[0];\n        }\n    }\n    return [\n        [min[0], max[0]],\n        [min[1], max[1]]\n    ];\n};\n\n/**\n *\n *\n * @param {*} axisType\n * @param {*} fieldInfo\n * @param {*} axesCreators\n * @param {*} groupAxes\n *\n */\nexport const generateAxisFromMap = (axisType, fieldInfo, axesCreators, axesInfo) => {\n    let axisKey;\n    const { groupAxes, valueParser } = axesInfo;\n    const currentAxes = [];\n    const { fields, index } = fieldInfo;\n    const { cacheMaps } = axesCreators;\n    const map = cacheMaps[`${axisType}AxesMap`];\n\n    const commonAxisKey = getAxisKey(axisType, index);\n    fields.forEach((field, axisIndex) => {\n        axisKey = getAxisKey(axisType, index, axisIndex, dataTypeScaleMap[field.subtype()]);\n        const axisConfig = getAxisConfig({ index, axisIndex, axisType }, field, axesCreators);\n\n        let axis;\n        if (!map.has(axisKey)) {\n            axis = createSimpleAxis(axisConfig, field, axesCreators);\n        } else {\n            axis = map.get(axisKey);\n            axis._rotationLock = false;\n            axis.config(axisConfig);\n            axisConfig.domain ? axis.domain(axisConfig.domain) : axis.resetDomain();\n        }\n        axis.valueParser(valueParser);\n        currentAxes.push(axis);\n        map.set(axisKey, axis);\n    });\n\n    if (currentAxes.length) {\n        map.set(commonAxisKey, currentAxes);\n        groupAxes.add(commonAxisKey);\n    }\n\n    return currentAxes;\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n    const xAxes = [];\n    const yAxes = [];\n\n    xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes.push(xAxis);\n    });\n    yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes.push(yAxis);\n    });\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n * return a default mark based on predefined set of rules of type and subtype of the fields\n *\n * @param {string} colFieldType dimension/measure - temporal/ordinal/nominal\n * @param {string} rowFieldType dimension/measure - temporal/ordinal/nominal\n * @return {Object} return mark type\n */\nexport const getDefaultMark = (colFieldType, rowFieldType) => {\n    let mark;\n\n    if (colFieldType === CATEGORICAL || rowFieldType === CATEGORICAL) {\n        mark = BAR;\n    } else if (colFieldType === TEMPORAL || rowFieldType === TEMPORAL) {\n        mark = LINE;\n    } else {\n        mark = POINT;\n    }\n\n    return mark;\n};\n\n/**\n *\n *\n * @param {*} axesCreators\n * @param {*} [fieldInfo=[]]\n *\n */\nexport const createRetinalAxis = (axesCreators, fieldProps = {}) => {\n    const { axisType, fieldsConfig } = axesCreators;\n    const field = fieldProps.field;\n    const axis = [];\n    const Cls = scaleMaps[axisType];\n\n    fieldProps.type = fieldProps.type ? fieldProps.type : getAxisType(fieldsConfig, field || null);\n    axis.push(new Cls(fieldProps));\n    return axis;\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} val\n *\n */\nexport const getIndex = (arr, val) => {\n    let i = 0;\n    let arrIndex = -1;\n\n    while (arrIndex === -1 && i < arr.length) {\n        if (arr[i].toString() === val.toString()) {\n            arrIndex = i;\n        }\n        i++;\n    }\n    return arrIndex;\n};\n\n/**\n *\n *\n * @param {*} colFields\n * @param {*} rowFields\n * @param {*} userLayerConfig\n *\n * @memberof CartesianEncoder\n */\nexport const getLayerConfFromFields = (colFields, rowFields, userLayerConfig) => userLayerConfig.filter((conf) => {\n    const userConf = conf instanceof Array ? conf : [conf];\n    const encodingArr = [].concat(...userConf.map(d => d.encoding).filter(d => d !== undefined));\n\n    if (!encodingArr.length) {\n        return true;\n    }\n\n    const xFields = [].concat(...encodingArr.map(d => [d.x && d.x.field, d.x0 && d.x0.field]))\n                .filter(d => d !== undefined && d !== null);\n    const yFields = [].concat(...encodingArr.map(d => [d.y && d.y.field, d.y0 && d.y0.field]))\n                .filter(d => d !== undefined && d !== null);\n\n    if (!xFields.length && !yFields.length) {\n        return true;\n    }\n\n    const colFieldExist = xFields.length ? xFields.every(d => colFields.indexOf(d) !== -1) : false;\n    const rowFieldExist = yFields.length ? yFields.every(d => rowFields.indexOf(d) !== -1) : false;\n    if (xFields.length && yFields.length) {\n        return colFieldExist && rowFieldExist;\n    }\n    return colFieldExist || rowFieldExist;\n});\n","import { layerFactory } from '@chartshq/visual-layer';\nimport { mergeRecursive, STATE_NAMESPACES, unionDomain } from 'muze-utils';\nimport {\n    generateAxisFromMap,\n    getDefaultMark,\n    getIndex,\n    getLayerConfFromFields,\n    getAdjustedDomain\n} from './encoder-helper';\nimport { retriveDomainFromData } from '../group-helper';\n\nimport { ROW, COLUMN, COL, LEFT, TOP, CARTESIAN, MEASURE, BOTH, X, Y } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class CartesianEncoder\n * @extends {VisualEncoder}\n */\nexport default class CartesianEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     *\n     * @memberof CartesianEncoder\n     */\n    static type () {\n        return CARTESIAN;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof CartesianEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const geomCellAxes = {};\n        const {\n            axes\n        } = axesCreators;\n        const {\n            projections,\n            indices\n        } = fieldInfo;\n        const {\n            rowFields,\n            columnFields\n        } = projections;\n        const {\n             rowIndex,\n             columnIndex\n        } = indices;\n        const axisFields = [{\n            fields: rowFields,\n            index: rowIndex\n        }, {\n            fields: columnFields,\n            index: columnIndex\n        }];\n        const xAxes = axes.x || [];\n        const yAxes = axes.y || [];\n\n        [rowFields, columnFields].forEach((fields, i) => {\n            const type = i === 0 ? ROW : COLUMN;\n            const axis = i === 0 ? Y : X;\n\n            if (fields.length > 1) {\n                axesCreators.position = BOTH;\n            } else {\n                axesCreators.position = this.axisFrom()[type];\n            }\n            geomCellAxes[axis] = generateAxisFromMap(axis, axisFields[i], axesCreators, {\n                groupAxes: axis === X ? xAxes : yAxes,\n                valueParser: context.resolver.valueParser()\n            });\n        });\n        return geomCellAxes;\n    }\n\n    updateDomains (store, axes) {\n        const xAxes = axes.x;\n        const yAxes = axes.y;\n        store.model.lock();\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${0}${i}0`, xAxes[i][j].domain());\n            }\n        }\n        for (let i = 0; i < yAxes.length; i++) {\n            for (let j = 0; j < yAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${i}${0}0`, yAxes[i][j].domain());\n                yAxes[i][j]._domainLock = false;\n            }\n        }\n\n        store.model.unlock();\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const unitDomains = store.get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`);\n        const resolver = context.resolver();\n        const units = resolver.units();\n        const domains = {\n            0: {},\n            1: {}\n        };\n\n        for (let rIdx = 0, len = units.length; rIdx < len; rIdx++) {\n            const unitsArr = units[rIdx];\n            for (let cIdx = 0, len2 = unitsArr.length; cIdx < len2; cIdx++) {\n                const unit = unitsArr[cIdx];\n                const axisFields = unit.fields();\n                [axisFields.x, axisFields.y].forEach((fieldArr, axisType) => {\n                    fieldArr.forEach((field, axisIndex) => {\n                        const key = !axisType ? `0${cIdx}${axisIndex}` : `${rIdx}0${axisIndex}`;\n                        const dom = unitDomains[`${rIdx}${cIdx}`];\n                        if (dom && Object.keys(dom).length !== 0) {\n                            domains[axisType][key] = unionDomain([(domains[axisType] && domains[axisType][key]) || [],\n                                dom[`${field}`]], field.subtype());\n                        }\n                    });\n                });\n            }\n        }\n\n        const { x: xAxes, y: yAxes } = resolver.axes();\n        store.model.lock();\n        [xAxes, yAxes].forEach((axesArr, axisType) => {\n            axesArr.forEach((axes, idx) => {\n                const min = [];\n                const max = [];\n                let domain = [];\n                let adjustedDomain = [];\n                if (axes.length > 1 && axes[0].constructor.type() === 'linear' && axes[0].config().alignZeroLine) {\n                    axes.forEach((axis, i) => {\n                        const key = !axisType ? `0${idx}${i}` : `${idx}0${i}`;\n                        domain = domains[axisType][key];\n                        min[i] = domain[0];\n                        max[i] = domain[1];\n                    });\n                    adjustedDomain = getAdjustedDomain(max, min);\n                }\n\n                axes.forEach((axis, index) => {\n                    const key = !axisType ? `0${idx}${index}` : `${idx}0${index}`;\n                    domain = adjustedDomain[index] || domains[axisType][key];\n                    axis.domain(domain);\n                    const type = !axisType ? 'x' : 'y';\n                    store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type}.${idx}${index}`, domain);\n                });\n            });\n        });\n        store.model.unlock();\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields, type) {\n        let facets = [];\n        let projections = [];\n        let counter = 0;\n        const primaryFacets = [];\n        const secondaryFacets = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n        const axisFrom = this.axisFrom();\n\n        for (let i = 0; i < primaryLen; i++) {\n            let projArr = [primaryFields[i]];\n            const primaryField = primaryFields[i];\n\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter];\n                if (secondaryField && secondaryField.type() === MEASURE) {\n                    counter++;\n                    projArr = [primaryField, secondaryField];\n                }\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n                primaryFacets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                    secondaryFacets.push(secondaryField);\n                }\n            }\n        }\n        if ((primaryFacets.length || secondaryFacets.length) && !projections.length) {\n            type = type === COL ? COLUMN : type;\n            if ((axisFrom[type] === LEFT || axisFrom[type] === TOP) && primaryFacets.length) {\n                const axisFromIndex = primaryFacets.length - 1;\n                const facet = primaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(secondaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    secondaryFacets.splice(existIndex, 1);\n                }\n                primaryFacets.splice(axisFromIndex, 1);\n            } else {\n                const axisFromIndex = 0;\n                const facet = secondaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(primaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    primaryFacets.splice(existIndex, 1);\n                }\n                secondaryFacets.splice(axisFromIndex, 1);\n            }\n        }\n\n        facets = [...primaryFacets, ...secondaryFacets];\n        facets = facets.filter((el, index, self) => index === self.findIndex(t => (t.toString() === el.toString())));\n        return {\n            facets,\n            projections\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof CartesianEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        return super.fieldSanitizer(datamodel, config);\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     *\n     * @memberof CartesianEncoder\n     */\n    getRetinalFieldsDomain (dataModels, encoding) {\n        const groupedModel = dataModels.groupedModel;\n        const domains = {};\n        for (const key in encoding) {\n            if ({}.hasOwnProperty.call(encoding, key)) {\n                const encodingObj = encoding[key];\n                const field = encodingObj.field;\n                if (!encodingObj.domain && field) {\n                    const domain = retriveDomainFromData(groupedModel, field);\n                    domains[field] = domain;\n                }\n            }\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     * @memberof CartesianEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n        // let currentLayerIndex = 0;\n        layerArray.length && layerArray.forEach((layer, i) => {\n            const def = layerFactory.sanitizeLayerConfig(layer);\n            def.order = i;\n            serializedLayers.push(def);\n        });\n        return serializedLayers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof CartesianEncoder\n     */\n    getLayerConfig (fields, userLayerConfig) {\n        const layerConfig = [];\n        const {\n            columnFields,\n            rowFields\n        } = fields;\n\n        // let currentLayerIndex = 0;\n        columnFields.forEach((colField) => {\n            const colFieldName = colField.toString();\n            rowFields.forEach((rowField) => {\n                let configs = [];\n                const rowFieldName = rowField.toString();\n                const encoding = {\n                    x: {\n                        field: colFieldName\n                    },\n                    y: {\n                        field: rowFieldName\n                    }\n                };\n                const rowFieldType = rowField.subtype();\n                const colFieldType = colField.subtype();\n                const mark = getDefaultMark(colFieldType, rowFieldType);\n\n                const defConfigs = [{\n                    mark,\n                    def: {\n                        mark,\n                        encoding\n                    }\n                }];\n\n                const layerConfigs = getLayerConfFromFields(colField.getMembers(),\n                    rowField.getMembers(), userLayerConfig || []);\n                if (layerConfigs.length) {\n                    configs = layerConfigs.map((layerConf) => {\n                        const mergedLayerConf = mergeRecursive(mergeRecursive({}, defConfigs[0].def), layerConf);\n                        const serializedLayerConfig = layerFactory.getSerializedConf(mergedLayerConf.mark,\n                            mergedLayerConf);\n                        return {\n                            mark: mergedLayerConf.mark,\n                            order: mergedLayerConf.order,\n                            def: serializedLayerConfig\n                        };\n                    });\n                } else {\n                    configs = defConfigs;\n                }\n\n                layerConfig.push(...configs);\n            });\n        });\n        return layerConfig;\n    }\n}\n","import { layerFactory } from '@chartshq/visual-layer';\nimport { mergeRecursive, STATE_NAMESPACES } from 'muze-utils';\nimport VisualEncoder from './visual-encoder';\nimport { RADIUS, ANGLE, SIZE, MEASURE, ARC, POLAR, COLOR } from '../enums/constants';\n/**\n *\n *\n * @export\n * @class PolarEncoder\n * @extends {VisualEncoder}\n */\nexport default class PolarEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof PolarEncoder\n     */\n    createAxis (axesCreators, fieldInfo) {\n        const {\n            axes\n        } = axesCreators;\n        const geomCellAxes = axes;\n        const {\n            indices\n        } = fieldInfo;\n        const {\n            rowIndex,\n            columnIndex\n        } = indices;\n        // Dummy axes for polar, to create blank cells\n        const pieAxes = geomCellAxes.pie || [];\n\n        pieAxes[rowIndex] = pieAxes[rowIndex] || [];\n        pieAxes[rowIndex][columnIndex] = [];\n\n        geomCellAxes.pie = pieAxes;\n        geomCellAxes.x = null;\n        geomCellAxes.y = null;\n\n        return geomCellAxes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields) {\n        let counter = 0;\n        const facets = [];\n        const projections = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n\n        for (let i = 0; i < primaryLen; i++) {\n            const primaryField = primaryFields[i];\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter++];\n                const projArr = secondaryField ? [primaryField, secondaryField] : [primaryField];\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                }\n            }\n        }\n        return {\n            facets,\n            projections\n        };\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const domains = store.get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`);\n        const domainProps = {\n            radius: [Infinity, -Infinity]\n        };\n        Object.values(domains).forEach((domainVal) => {\n            for (const key in domainVal) {\n                domainProps[key] = [Math.min(domainVal[key][0], domainProps[key][0]),\n                    Math.min(domainVal[key][1], domainProps[key][1])];\n            }\n        });\n        store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`, domainProps.radius);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    setCommonDomain () {\n        // No domain to be set\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    static type () {\n        return POLAR;\n    }\n\n    layers (...layers) {\n        if (layers.length) {\n            this._layers = layers[0];\n            return this;\n        }\n        return this._layers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof PolarEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        let sanitizedRows = [[], []];\n        let sanitizedColumns = [[], []];\n        const fields = super.fieldSanitizer(datamodel, config);\n        const {\n            layers\n        } = config;\n        const {\n            rows,\n            columns\n        } = fields;\n        const layer = layers[0];\n        const encoding = layer.encoding;\n        const radius = encoding && encoding.radius ? encoding.radius.field : null;\n        const angle = encoding && encoding.angle ? encoding.angle.field : null;\n        const sanitizedFields = [sanitizedRows, sanitizedColumns];\n\n        [rows, columns].forEach((fieldType, typeIndex) => {\n            fieldType.forEach((fieldSet, i) => fieldSet.forEach((field) => {\n                if (field.toString() !== radius && field.toString() !== angle && field.type() !== MEASURE) {\n                    sanitizedFields[typeIndex][i].push(field);\n                }\n            }));\n        });\n        sanitizedColumns = [...new Set(sanitizedColumns)];\n        sanitizedRows = [...new Set(sanitizedRows)];\n        this.fieldInfo({ rows: sanitizedRows, columns: sanitizedColumns });\n        return this.fieldInfo();\n    }\n\n    getRetinalFieldsDomain (dataModels, encoding, facetFields, groupBy) {\n        let sizeField;\n        let colorField;\n        const fields = [];\n        const layers = this.layers();\n        const dataModel = dataModels.groupedModel;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const domains = {};\n        if (layers && layers[0]) {\n            const layer = layers[0];\n            const layerEncoding = layer.def.encoding || {};\n\n            [RADIUS, ANGLE, SIZE, COLOR].forEach((encType) => {\n                const field = layerEncoding[encType] ? layerEncoding[encType].field : '';\n                const measureField = fieldsConfig[field] && fieldsConfig[field].def.type === MEASURE;\n                if (encType === SIZE && measureField) {\n                    sizeField = field;\n                }\n                if (encType === COLOR) {\n                    colorField = field;\n                }\n                fieldsConfig[field] && !measureField && fields.push(field);\n            });\n        }\n\n        if (sizeField) {\n            domains[sizeField] = dataModel.groupBy(facetFields, {\n                [sizeField]: 'sum'\n            }).getFieldspace().fieldsObj()[sizeField].domain();\n        }\n\n        if (colorField) {\n            const dm = dataModel.groupBy([...facetFields, ...fields], groupBy.measures);\n            domains[colorField] = dm.getFieldspace().fieldsObj()[colorField].domain();\n        }\n        return domains;\n    }\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof PolarEncoder\n     */\n    getLayerConfig (fields, userLayerConfig) {\n        let layerConfig = [];\n        const {\n                columnFields,\n                rowFields\n            } = fields;\n        const allFields = [...columnFields, ...rowFields];\n\n        allFields.forEach(() => {\n            const encoding = {};\n            let config = {\n                mark: ARC,\n                def: {\n                    encoding\n                }\n            };\n            if (userLayerConfig && userLayerConfig.length > 0) {\n                config = mergeRecursive(config, userLayerConfig[0]);\n            }\n            layerConfig.push(config);\n        });\n        if (layerConfig.length === 0) {\n            layerConfig = userLayerConfig;\n        }\n\n        this.layers(layerConfig);\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     *\n     * @memberof PolarEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n\n        layerArray.length && layerArray.forEach((layer) => {\n            const def = layerFactory.getSerializedConf(layer.mark, layer);\n            serializedLayers.push({\n                mark: layer.mark,\n                def\n            });\n        });\n        return serializedLayers;\n    }\n}\n","import { createRetinalAxis } from './encoder-helper';\nimport { COLOR, SHAPE, SIZE } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class RetinalEncoder\n * @extends {VisualEncoder}\n */\nexport default class RetinalEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     *\n     * @memberof RetinalEncoder\n     */\n    createAxis (axesCreators) {\n        const { fieldsConfig, config } = axesCreators;\n        const newAxes = {};\n\n        [COLOR, SHAPE, SIZE].forEach((axisType) => {\n            newAxes[`${axisType}`] = createRetinalAxis({ axisType, fieldsConfig }, config[axisType]);\n        });\n        return newAxes;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof RetinalEncoder\n     */\n    static type () {\n        return 'retinal';\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof RetinalEncoder\n     */\n    getLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n        userLayerConfig.forEach((e) => {\n            const config = e;\n            [COLOR, SHAPE, SIZE].forEach((axis) => {\n                if (encodingConfigs[axis] && encodingConfigs[axis].field) {\n                    const def = config.def;\n                    if (config.def instanceof Array) {\n                        def.forEach((conf) => {\n                            conf.encoding = conf.encoding || {};\n                            !conf.encoding[axis] && (conf.encoding[axis] = {});\n                            conf.encoding[axis].field = encodingConfigs[axis].field;\n                        });\n                    } else {\n                        def.encoding = def.encoding || {};\n                        !def.encoding[axis] && (def.encoding[axis] = {});\n                        def.encoding[axis].field = encodingConfigs[axis].field;\n                    }\n                }\n            });\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} context\n     *\n     * @memberof RetinalEncoder\n     */\n    setCommonDomain (context) {\n        const { domains, axes, encoding } = context;\n\n        Object.entries(encoding).forEach((enc) => {\n            if (enc[1] && enc[1].field) {\n                const encType = enc[0];\n                const field = enc[1].field;\n\n                if (field) {\n                    axes[encType].forEach((axis) => {\n                        const domain = domains[field];\n                        !enc[1].domain && axis.updateDomain(domain);\n                    });\n                }\n            }\n        });\n        return axes;\n    }\n}\n","import { Store, FieldType } from 'muze-utils';\nimport { DATA_UPDATE_COUNTER } from '../enums/defaults';\nimport { Variable } from '../variable';\nimport { PolarEncoder, CartesianEncoder } from '../encoder';\nimport {\n    DIMENSION,\n    MEASURE,\n    ORDINAL,\n    LINEAR,\n    ROW,\n    COLUMN,\n    COL,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    COLOR,\n    SIZE,\n    TEMPORAL,\n    SHAPE,\n    INTERACTION,\n    GRID_LINES,\n    GRID_BANDS,\n    HEADER,\n    FACET,\n    X,\n    Y,\n    POLAR\n} from '../enums/constants';\n\n/**\n * Creates an instance of a store which contains the arguments to make the class reactive\n *\n * @return {Object} instance of store\n * @memberof VisualGroup\n */\nexport const initStore = () => new Store({\n    [DATA_UPDATE_COUNTER]: DATA_UPDATE_COUNTER\n});\n\n/**\n *\n *\n * @param {*} arr\n */\nexport const isDistributionEqual = arr => [...arr[0], ...arr[1]].reduce((isEqual, row) => {\n    const rowType = row.type();\n\n    if (rowType === MEASURE || rowType === TEMPORAL) {\n        isEqual = true;\n    }\n    return isEqual;\n}, false);\n\n/**\n *\n *\n */\nexport const initializeCacheMaps = () => ({\n    cellMap: new Map(),\n    xAxesMap: new Map(),\n    yAxesMap: new Map(),\n    entryCellMap: new Map(),\n    exitCellMap: new Map()\n});\n\n/**\n *\n *\n * @param {*} axisName\n * @param {*} id\n */\nexport const getAxisKey = (axisName, ...params) => `${axisName}-axis-${params.join('-')}`;\n\n/**\n *\n *\n * @param {*} rowId\n * @param {*} columnId\n */\nexport const getCellKey = (rowId, columnId) => `cell-${rowId}-${columnId}`;\n\n/**\n *\n *\n * @param {*} config\n *\n */\nexport const extractUnitConfig = (config) => {\n    const unitConfig = {};\n    const attrNames = [INTERACTION, GRID_LINES, GRID_BANDS];\n\n    attrNames.forEach((attr) => {\n        if (config[attr] !== undefined) {\n            unitConfig[attr] = config[attr];\n        }\n    });\n    return unitConfig;\n};\n\n/**\n *\n *\n * @param {*} headers\n * @param {*} index\n * @param {*} rowLength\n *\n * @memberof MatrixResolver\n */\nexport const getHeaderText = (headers, index, rowLength) => {\n    let header = '';\n\n    if (index === rowLength - 1 && headers.length > rowLength) {\n        for (let i = index; i < headers.length - 1; i++) {\n            header += `${headers[i].toString()} / `;\n        }\n        header += headers[headers.length - 1].toString();\n        return header;\n    } else if (headers[index]) {\n        return headers[index].toString();\n    }\n    return '';\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} fieldHeaders\n * @param {*} TextCell\n * @param {*} labelManager\n *\n */\nexport const headerCreator = (fields, fieldHeaders, TextCell, { classPrefix, labelManager }) => {\n    const headers = fields.length > 0 ? fields[0].map((cell, i) => new TextCell({\n        type: HEADER,\n        className: `${classPrefix}-grid-headers`\n    }, {\n        labelManager\n    }).source(getHeaderText(fieldHeaders, i, fields[0].length))\n                    .config({ show: cell.config().show })) : [];\n    return headers;\n};\n\n/**\n *\n *\n * @param {*} variable\n * @param {*} allFields\n *\n */\nexport const findInGroup = (variable, allFields) => {\n    let channel = null;\n\n    [COLOR, SIZE, SHAPE].forEach((e) => {\n        if (this.store.get(e) && variable === this.store.get(e)[0]) {\n            channel = e;\n        }\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    [ROW, COL].forEach((facetType) => {\n        allFields[`${facetType}Facets`].forEach((e) => {\n            if (e.toString() === variable) {\n                channel = { channel: FACET, type: facetType === COL ? COLUMN : ROW };\n            }\n        });\n    });\n\n    if (channel) {\n        return channel;\n    }\n\n    [ROW, COL].forEach((projType) => {\n        allFields[`${projType}Projections`].forEach((e) => {\n            e.forEach((m) => {\n                if (m.toString() === variable) {\n                    channel = projType === COL ? X : Y;\n                }\n            });\n        });\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    return null;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} field\n */\nexport const getAxisType = (fieldsConfig, field) => {\n    let fieldType = ORDINAL;\n\n    if (field && fieldsConfig[field].def.type !== DIMENSION) {\n        fieldType = LINEAR;\n    }\n    return fieldType;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} fieldName\n *\n */\nexport const retriveDomainFromData = (datamodel, fieldName) => {\n    const field = datamodel.getFieldspace().fields.find(d => d.name() === fieldName.toString());\n    return field.domain();\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    let xAxes = null;\n    let yAxes = null;\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n\n    xAxisSet && xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes = xAxes || [];\n        xAxes.push(xAxis);\n    });\n\n    yAxisSet && yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes = yAxes || [];\n        yAxes.push(yAxis);\n    });\n\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n *\n *\n * @param {*} layers\n *\n */\nexport const getEncoder = (layers) => {\n    let encoder = new CartesianEncoder();\n\n    if (layers.length) {\n        // Figuring out the kind of layers the group will have\n        encoder = layers.every(e => e.mark === 'arc') ? new PolarEncoder() : encoder;\n    }\n    return encoder;\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} userAxisFromConfig\n *\n */\nexport const getHeaderAxisFrom = (type, fields, userAxisFromConfig) => {\n    let axisFrom = userAxisFromConfig[type];\n    let headerFrom = '';\n    const options = type === ROW ? [LEFT, RIGHT] : [BOTTOM, TOP];\n    const [firstField, secondField] = fields;\n    const firstFieldType = i => (firstField.length ? firstField[i].type() : null);\n    const secondFieldType = i => (secondField.length ? secondField[i].type() : null);\n\n    if (firstFieldType(firstField.length - 1) === DIMENSION && secondFieldType(0) === DIMENSION) {\n        headerFrom = axisFrom ? options[1 - options.indexOf(axisFrom)] : options[1];\n\n        if (type === COLUMN && (firstField[firstField.length - 1].toString() === secondField[0].toString())) {\n            axisFrom = TOP;\n        } else {\n            axisFrom = axisFrom || options[0];\n        }\n    } else if (secondFieldType(secondField.length - 1) === DIMENSION) {\n        headerFrom = type === ROW ? RIGHT : BOTTOM;\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else {\n        headerFrom = type === ROW ? LEFT : TOP;\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    if (firstFieldType(firstField.length - 1) === MEASURE && secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    } else if (secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else if (firstFieldType(firstField.length - 1) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    return [headerFrom, axisFrom];\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} layers\n *\n * @memberof MatrixResolver\n */\nexport const setFacetsAndProjections = (context, fieldInfo, encoder) => {\n    const {\n        fields,\n        type\n    } = fieldInfo;\n    const { facets, projections } = encoder.simpleEncoder.getFacetsAndProjections(fields, type);\n\n    context.facets({ [`${type}Facets`]: facets });\n    context.projections({ [`${type}Projections`]: projections });\n\n    return { facets, projections, fields };\n};\n\nconst getRowBorders = (left, right) => {\n    const borders = {};\n    borders.top = false;\n    borders.bottom = false;\n    if (left.length > 1 || right.length > 1) {\n        borders.top = true;\n        borders.bottom = true;\n    }\n    return borders;\n};\n\nconst getColumnsBorders = (top, bottom) => {\n    const borders = {};\n    borders.left = false;\n    borders.right = false;\n    if (top.length || bottom.length) {\n        if ((top[0] && top[0].length > 1) || (bottom[0] && bottom[0].length > 1)) {\n            borders.left = true;\n            borders.right = true;\n        }\n    }\n    return borders;\n};\n\nconst getValueBorders = (rows, columns) => {\n    const borders = { top: true, left: true, bottom: true, right: true };\n    const borderTypeRow = [LEFT, RIGHT];\n    const borderTypeCol = [TOP, BOTTOM];\n    rows.forEach((e, i) => {\n        if (e[0] && e[0].length) {\n            borders[borderTypeRow[i]] = true;\n        } else {\n            borders[borderTypeRow[i]] = false;\n        }\n    });\n    columns.forEach((e, i) => {\n        if (e.length) {\n            borders[borderTypeCol[i]] = true;\n        } else {\n            borders[borderTypeCol[i]] = false;\n        }\n    });\n\n    return borders;\n};\n\nexport const getBorders = (matrices, encoder) => {\n    let showRowBorders = { top: false, bottom: false };\n    let showColBorders = { left: false, right: false };\n    let showValueBorders = { top: false, bottom: false, left: false, right: false };\n    const {\n        rows,\n        columns,\n        values: valueMatrix\n    } = matrices;\n    const [leftRows, rightRows] = rows;\n    const [topColumns, bottomColumns] = columns;\n    const {\n        rowDimensions,\n        columnDimensions,\n        rowTemporalFields,\n        columnTemporalFields,\n        columnMeasures,\n        rowMeasures\n    } = encoder.fieldInfo();\n    const allDimensionLength = rowDimensions.length + columnDimensions.length;\n    const allMeasuresLength = rowMeasures.length + columnMeasures.length;\n    const allTemporalFieldsLength = rowTemporalFields.length + columnTemporalFields.length;\n\n    if (encoder.constructor.type() === POLAR) {\n        if (!allDimensionLength) {\n            return { showRowBorders, showColBorders, showValueBorders };\n        }\n    } else if (!allMeasuresLength && !allTemporalFieldsLength && allDimensionLength <= 2) {\n        return { showRowBorders, showColBorders, showValueBorders };\n    }\n\n    showRowBorders = getRowBorders(leftRows, rightRows);\n    showColBorders = getColumnsBorders(topColumns, bottomColumns);\n    showValueBorders = getValueBorders([leftRows, rightRows], [topColumns, bottomColumns]);\n\n    if (valueMatrix.length > 1) {\n        showValueBorders.top = true;\n        showValueBorders.bottom = true;\n    }\n    if (valueMatrix.length && valueMatrix[0].length > 1) {\n        showValueBorders.left = true;\n        showValueBorders.right = true;\n    }\n    return { showRowBorders, showColBorders, showValueBorders };\n};\n\nexport const getFieldsFromSuppliedLayers = (suppliedLayerConfig, fieldsConfig) => {\n    let fields = [];\n    const encodingArr = suppliedLayerConfig.map(conf => (conf.encoding || {}));\n    fields = [...fields, [].concat(...encodingArr.map(enc => Object.values(enc).map(d => d.field)))];\n    fields = fields.filter(field => fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n    return fields;\n};\n\nexport const extractFields = (facetsAndProjections, layerFields) => {\n    const fields = Object.values(facetsAndProjections).map((arr) => {\n        const flattenArray = [].concat(...arr);\n        return [].concat(...flattenArray.map((field) => {\n            if (field instanceof Variable) {\n                return field.getMembers();\n            }\n            return field;\n        }));\n    });\n    return [].concat(...fields, ...layerFields);\n};\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: false\n    },\n    [ACTIONS.HOVER]: {\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.LONGTOUCH]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: true\n    },\n    [ACTIONS.TOUCHDRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: true\n    },\n    [ACTIONS.CLICK]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: false\n    }\n};\n","import {\n    FieldType,\n    getDependencyOrder,\n    getObjProp,\n    defaultValue,\n    objectIterator,\n    unionDomain,\n    makeElement,\n    DimensionSubtype,\n    toArray,\n    MeasureSubtype,\n    getNearestValue\n} from 'muze-utils';\nimport { layerFactory } from '@chartshq/visual-layer';\n\nexport const getDimensionMeasureMap = (layers, fieldsConfig) => {\n    const retinalEncodingsAndMeasures = {};\n\n    layers.forEach((layer) => {\n        const {\n            colorField,\n            sizeField,\n            shapeField,\n            xField,\n            yField\n        } = layer.encodingFieldsInf();\n        const measures = [xField, yField].filter(field => fieldsConfig[field] && fieldsConfig[field].def.type ===\n            FieldType.MEASURE);\n        [colorField, sizeField, shapeField].forEach((field) => {\n            if (fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                !retinalEncodingsAndMeasures[field] && (retinalEncodingsAndMeasures[field] = []);\n                retinalEncodingsAndMeasures[field].push(...measures);\n            }\n        });\n    });\n\n    for (const key in retinalEncodingsAndMeasures) {\n        if ({}.hasOwnProperty.call(retinalEncodingsAndMeasures, key)) {\n            retinalEncodingsAndMeasures[key] = [...new Set(retinalEncodingsAndMeasures[key])];\n        }\n    }\n    return retinalEncodingsAndMeasures;\n};\n\nexport const transformDataModels = (transform, dataModel) => {\n    const dataModels = {};\n    for (const key in transform) {\n        if ({}.hasOwnProperty.call(transform, key)) {\n            const transformVal = transform[key];\n            dataModels[key] = transformVal(dataModel);\n        }\n    }\n\n    return dataModels;\n};\n\nexport const getLayerFromDef = (context, definition, existingLayer, namespaces) => {\n    let instances = existingLayer;\n    const dependencies = context._layerDeps;\n    const metaInf = context.metaInf();\n    if (!existingLayer) {\n        instances = layerFactory.getLayerInstance(definition);\n        toArray(instances).forEach((inst, i) => {\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: namespaces[i]\n            });\n            inst.store(context.store());\n        });\n    }\n    const layers = {};\n    const instanceArr = toArray(instances);\n    definition = toArray(definition);\n    definition.reduce((acc, def, idx) => {\n        const instance = instanceArr[idx];\n        instance.config(def);\n        instance.valueParser(context.valueParser());\n        instance.dependencies(dependencies);\n        instance.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        if (def.name) {\n            instance.alias(def.name);\n        }\n        layers[instance.alias()] = instance;\n        return acc;\n    }, {});\n    return layers;\n};\n\nexport const resolveEncodingTransform = (layerInst, store) => {\n    const encodingTransform = layerInst.config().encodingTransform || {};\n    const resolvable = encodingTransform.resolvable;\n    let depArr = [];\n    if (resolvable) {\n        const resolved = resolvable(store);\n        depArr = resolved.depArr;\n        layerInst.encodingTransform(resolved.fn);\n    } else if (encodingTransform instanceof Function) {\n        layerInst.encodingTransform(encodingTransform);\n    }\n    return depArr;\n};\n\nexport const createLayers = (context, layerDefinitions) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    const store = {\n        layers: {},\n        components: {\n            unit: context\n        }\n    };\n    let layerIndex = 0;\n    let layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef, i) => {\n        const mark = layerDef.mark;\n        const definition = layerDef.def;\n        const markId = `${mark}-${i}`;\n        const defArr = toArray(definition);\n        defArr.forEach((def) => {\n            def.order = layerDef.order + layerIndex;\n        });\n        layerIndex += defArr.length;\n        const instances = getLayerFromDef(context, definition, layersMap[markId], i);\n        store.layers = Object.assign(store.layers, instances);\n        const instanceValues = Object.values(instances);\n        layersArr = layersArr.concat(...instanceValues);\n        layersMap[markId] = instanceValues;\n        markSet[markId] = markId;\n        return layersArr;\n    }, []);\n    store.unit = context;\n    const layerdeps = {};\n    layers.forEach((layer) => {\n        const depArr = resolveEncodingTransform(layer, store);\n        layerdeps[layer.alias()] = depArr;\n    });\n\n    const order = getDependencyOrder(layerdeps);\n    layers = order.map(name => store.layers[name]);\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n    return layers;\n};\n\nexport const sanitizeLayerDef = (layerDefs) => {\n    const sanitizedDefs = [];\n    layerDefs.forEach((layerDef, i) => {\n        const def = layerDef.def;\n        const mark = layerDef.mark;\n        if (!def) {\n            const sConf = layerFactory.getSerializedConf(layerDef.mark, layerDef);\n            if (!sConf.name) {\n                sConf.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push({\n                mark: layerDef.mark,\n                def: sConf\n            });\n        } else {\n            if (!def.name) {\n                def.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push(layerDef);\n        }\n    });\n    return sanitizedDefs;\n};\n\nexport const attachDataToLayers = (layers, dm, transformedDataModels) => {\n    layers.forEach((layer) => {\n        const dataSource = layer.config().source;\n        const dataModel = dataSource instanceof Function ? dataSource(dm) :\n            (transformedDataModels[dataSource] || dm);\n        if (layer.data() !== dataModel) {\n            layer.data(dataModel);\n        }\n    });\n};\n\nexport const attachAxisToLayers = (axes, layers, layerAxisIndex) => {\n    layers.forEach((layer) => {\n        const layerId = layer.id();\n        const axesObj = {};\n\n        objectIterator(axes, (key) => {\n            const axisInf = layerAxisIndex[layerId];\n            if (axisInf) {\n                axes[key] && (axesObj[key] = axes[key][axisInf[key] || 0]);\n            }\n        });\n        Object.keys(axesObj).length && layer.axes(axesObj);\n    });\n};\n\nexport const getLayerAxisIndex = (layers, fields) => {\n    const layerAxisIndex = {};\n    layers.forEach((layer) => {\n        const { axis, encoding } = layer.config();\n        const id = layer.id();\n        ['x', 'y'].forEach((type) => {\n            let index;\n            const field = defaultValue(getObjProp(axis, type), encoding[type] && encoding[type].field);\n            if (fields[type]) {\n                index = fields[type].findIndex(fieldInst => fieldInst.getMembers().indexOf(field) !== -1);\n            } else {\n                index = 0;\n            }\n            !layerAxisIndex[id] && (layerAxisIndex[id] = {});\n            layerAxisIndex[id][type] = index;\n        });\n    });\n    return layerAxisIndex;\n};\n\nexport const unionDomainFromLayers = (layers, axisFields, layerAxisIndex, fieldsConfig) => {\n    let domains = {};\n    layers = layers.filter(layer => layer.getDataDomain() !== null);\n    layers.forEach((layer) => {\n        let domainValues = {};\n        const config = layer.config();\n        const encoding = config.encoding;\n        const layerDomain = layer.getDataDomain();\n        const layerId = layer.id();\n\n        if (layerDomain !== null && config.calculateDomain !== false) {\n            domainValues = Object.entries(layerDomain);\n            domains = domainValues.reduce((fieldDomain, domain) => {\n                const encodingType = domain[0];\n                const field = encoding[encodingType].field;\n                const axisIndex = layerAxisIndex[layerId][encodingType];\n                if (encodingType in axisFields) {\n                    const fieldStr = `${axisFields[encodingType][axisIndex]}`;\n                    fieldDomain[fieldStr] = fieldDomain[fieldStr] || [];\n                    fieldDomain[fieldStr] = unionDomain(([fieldDomain[fieldStr], domain[1]]),\n                        fieldsConfig[field].def.subtype ? fieldsConfig[field].def.subtype :\n                                fieldsConfig[field].def.type);\n                } else {\n                    fieldDomain[encodingType] = domain[1];\n                }\n                return fieldDomain;\n            }, domains);\n        }\n    });\n    return domains;\n};\n\nexport const renderLayers = (context, container, layers, measurement) => {\n    context._lifeCycleManager.notify({ client: layers, action: 'beforedraw', formalName: 'layer' });\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const orderedLayers = context.layers().sort((a, b) => a.config().order - b.config().order);\n    const layerParentGroup = makeElement(container, 'g', [1], `${classPrefix}-layer-group`);\n    const layerDepOrder = getDependencyOrder(context._layerDepOrder);\n    const groups = {};\n    makeElement(layerParentGroup, 'g', orderedLayers, null, {\n        update: (group, layer) => {\n            groups[layer.alias()] = {\n                group,\n                layer\n            };\n        }\n    });\n    const layerSeq = layerDepOrder.map(name => groups[name]);\n    layerSeq.forEach((o) => {\n        const layer = o.layer;\n        const group = o.group;\n        layer.measurement(measurement);\n        layer.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        layer.config().render !== false && layer.mount(group.node());\n    });\n    return this;\n};\n\nexport const getNearestDimensionalValue = (context, position) => {\n    const fields = context.fields();\n    if (!fields.x.length || !fields.y.length) {\n        return null;\n    }\n    const data = context.data();\n    const axes = context.axes();\n    const fieldsConfig = data.getFieldsConfig();\n    const xField = getObjProp(fields, 'x', 0).getMembers()[0];\n    const yField = getObjProp(fields, 'y', 0).getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n\n    const entryVal = [['x', xFieldType, xField], ['y', yFieldType, yField]].find(entry =>\n        entry[1] === DimensionSubtype.CATEGORICAL || entry[1] === DimensionSubtype.TEMPORAL);\n\n    if (!entryVal || (xFieldType !== MeasureSubtype.CONTINUOUS && yFieldType !== MeasureSubtype.CONTINUOUS)) {\n        return null;\n    }\n    const field = entryVal[2];\n    const index = fieldsConfig[field].index;\n    let key = axes[entryVal[0]][0].invert(position[entryVal[0]]);\n    if (entryVal[1] === DimensionSubtype.TEMPORAL) {\n        const filterData = [...new Set(data.getData().data.map(d => d[index]))];\n        key = getNearestValue(filterData, key);\n    }\n\n    return key !== undefined ? [[field], [key]] : null;\n};\n\nexport const getLayersBy = (layers, searchBy, value) => layers.filter((layer) => {\n    const name = searchBy === 'type' ? layer.constructor.formalName() : layer.alias();\n    return name === value;\n});\n\nexport const removeLayersBy = (layers, searchBy, value) => {\n    layers.filter((inst) => {\n        const name = searchBy === 'type' ? inst.config().mark : inst.alias();\n        if (name === value) {\n            inst.remove();\n            return false;\n        }\n        return true;\n    });\n};\n\nexport const createSideEffectGroup = (container, className) => makeElement(container, 'g', [1], className).node();\n\nexport const createRenderPromise = (unit) => {\n    const renderedPromise = unit._renderedPromise;\n    renderedPromise.then(() => {\n        unit._renderedPromise = new Promise((resolve) => {\n            unit._renderedResolve = resolve;\n        });\n        createRenderPromise(unit);\n    });\n};\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const GRID_LINE_PARENT_GROUP_CLASS = 'grid-lines';\nexport const GRID_BAND_PARENT_GROUP_CLASS = 'grid-bands';\nexport const GRID_PARENT_GROUP = 'grid-parent-group';\nexport const BAND = 'band';\nexport const TICK = 'tick';\nexport const GRID_BAND = 'gridBands';\nexport const GRID_LINE = 'gridLines';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const RETINAL_FIELDS = 'retinalFields';\nexport const PARENT_ALIAS = 'parentAlias';\nexport const LAYERS = 'layers';\nexport const CACHED_DATA = 'cachedData';\nexport const STORE = 'store';\n","import { getObjProp, defaultValue, makeElement, DimensionSubtype, DataModel } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { layerFactory, LAYER_TYPES } from '@chartshq/visual-layer';\nimport {\n    GRID_BAND,\n    GRID_LINE,\n    GRID_BAND_PARENT_GROUP_CLASS,\n    GRID_LINE_PARENT_GROUP_CLASS,\n    GRID_PARENT_GROUP\n} from '../enums/constants';\n\nconst { BAR_LAYER, TICK_LAYER } = LAYER_TYPES;\n\nconst LINEAR = ScaleType.LINEAR;\n\nconst getLayerDefinition = (context, axes, type, orientation) => {\n    let encoding;\n    const config = context.config();\n    const { classPrefix, gridLines, gridBands } = config;\n    const gridLineColor = gridLines.color;\n    const zeroLineColor = gridLines.zeroLineColor;\n    const defClassName = type === GRID_BAND ? gridBands.defClassName : gridLines.defClassName;\n    const gridBandColor = gridBands[orientation].color;\n    const axis = axes[orientation][0];\n    const isLinearScale = axis.constructor.type() === LINEAR;\n\n    if (type === GRID_BAND && isLinearScale) {\n        encoding = {\n            [orientation]: `${orientation}value`,\n            [`${orientation}0`]: `${orientation}value0`\n        };\n    } else {\n        encoding = {\n            [orientation]: isLinearScale ? `${orientation}value` : `${orientation}dim`\n        };\n    }\n    encoding.color = {\n        value: (data, i) => {\n            const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n            if (type === GRID_BAND) {\n                return gridBandColor[i % 2];\n            }\n            return isNegativeDomain && data[orientation] === 0 ? zeroLineColor : gridLineColor;\n        }\n    };\n\n    return {\n        definition: {\n            defClassName: `${defClassName}-${orientation}`,\n            className: config.className,\n            name: orientation,\n            individualClassName: (data, i) => {\n                let className;\n                const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n                if (isNegativeDomain && data.y === 0 && type !== GRID_BAND) {\n                    className = `${classPrefix}-axis-zero-line`;\n                } else {\n                    className = `${classPrefix}-grid-${type}-${orientation}-${i % 2}`;\n                }\n                return className;\n            },\n            [`pad${orientation.toUpperCase()}`]: type === GRID_BAND ? 0 : undefined,\n            encoding\n        },\n        axes: {\n            [orientation]: axis\n        },\n        interactive: false\n    };\n};\n\nconst getDefaultVisibilty = (show, axis) => {\n    if (axis.constructor.type() === LINEAR) {\n        return show;\n    }\n    return false;\n};\n\nexport const getGridLayerDefinitions = (context, config, type) => ['x', 'y'].map((axisType) => {\n    const axes = context.axes();\n    if (!axes[axisType]) {\n        return null;\n    }\n    const show = defaultValue(config[axisType] && config[axisType].show,\n        getDefaultVisibilty(config.show, axes[axisType][0]));\n\n    return show ? getLayerDefinition(context, axes, type, axisType) : null;\n}).filter(d => d !== null);\n\nexport const getGridLayerData = (axes, fields, fieldsConfig) => {\n    const gridData = {};\n    ['x', 'y'].forEach((type) => {\n        let ticks = axes[type][0].getTickValues();\n        const subtype = getObjProp(fieldsConfig, getObjProp(fields, type, 0).getMembers()[0], 'def', 'subtype');\n        const jsonData = [];\n        const schema = [\n            {\n                name: 'yvalue',\n                type: 'measure'\n            }, {\n                name: 'xvalue',\n                type: 'measure'\n            },\n            {\n                name: 'yvalue0',\n                type: 'measure'\n            }, {\n                name: 'xvalue0',\n                type: 'measure'\n            }, {\n                name: 'xdim',\n                type: 'dimension',\n                subtype\n            }, {\n                name: 'ydim',\n                type: 'dimension',\n                subtype\n            }\n        ];\n        const len = Math.max(ticks.length);\n        ticks = subtype === DimensionSubtype.TEMPORAL ? ticks.map(d => d.getTime()) : ticks;\n        for (let i = 0; i < len; i += 1) {\n            jsonData.push({\n                [`${type}value`]: ticks[i],\n                [`${type}value0`]: ticks[i + 1],\n                [`${type}dim`]: ticks[i],\n                [`${type}dim`]: ticks[i]\n            });\n        }\n        gridData[type] = new DataModel(jsonData, schema);\n    });\n    return gridData;\n};\n\n// @todo Use dataSelect method to reuse instances when the method is fixed. #110\nexport const createGridLines = (instances = {}, createFn, definitions, iteratorFn) => {\n    const map = {};\n    definitions.forEach((def) => {\n        const name = def.definition.name;\n        let instance = instances[name];\n        if (!instance) {\n            instances[name] = instance = createFn(def);\n        }\n        iteratorFn(instance, def, name);\n        map[name] = 1;\n    });\n    for (const key in instances) {\n        if (!(key in map)) {\n            instances[key].remove();\n            delete instances[key];\n        }\n    }\n    return instances;\n};\n\nexport const createGridLineLayer = (context) => {\n    const vuConf = context.config();\n    const metaInf = context.metaInf();\n    const store = context.store();\n    const timeDiffs = context._timeDiffs;\n    [GRID_BAND, GRID_LINE].forEach((type) => {\n        let mark;\n        let config;\n        if (type === GRID_BAND) {\n            mark = BAR_LAYER;\n            config = vuConf.gridBands;\n        } else {\n            mark = TICK_LAYER;\n            config = vuConf.gridLines;\n        }\n        const definitions = getGridLayerDefinitions(context, config, type);\n\n        const sel = `_${type}Selection`;\n        context[sel] = createGridLines(context[sel], () => {\n            const inst = layerFactory.getLayerInstance({ mark });\n            inst.dependencies(context._layerDeps);\n            return inst;\n        }, definitions, (layer, atomicDef, key) => {\n            const definition = atomicDef.definition;\n            const sConf = layerFactory.getSerializedConf(mark, definition);\n            const axesObj = atomicDef.axes;\n            layer.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: `${metaInf.namespace}${type}${key}`\n            })\n                .store(store)\n                .config(sConf)\n                .dataProps({\n                    timeDiffs\n                })\n                .axes(axesObj);\n        });\n        context[`_${type}`] = Object.values(context[sel]);\n    });\n};\n\nexport const attachDataToGridLineLayers = (context) => {\n    const axes = context.axes();\n    const measurement = {\n        width: context.width(),\n        height: context.height()\n    };\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    const gridLayerData = getGridLayerData(axes, context.fields(), context.data().getFieldsConfig());\n    [].concat(...gridBands, ...gridLines).forEach((inst) => {\n        inst.data(inst.axes().x ? gridLayerData.x : gridLayerData.y).measurement(measurement);\n    });\n};\n\nexport const renderGridLineLayers = (context, container) => {\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n\n    const gridLineParentGroup = makeElement(container, 'g', [1], `${classPrefix}-${GRID_PARENT_GROUP}`);\n    [[gridLines, `${classPrefix}-${GRID_LINE_PARENT_GROUP_CLASS}`],\n            [gridBands, `${classPrefix}-${GRID_BAND_PARENT_GROUP_CLASS}`]].forEach((entry) => {\n                const [instances, parentGroupClass] = entry;\n                const mountPoint = makeElement(gridLineParentGroup, 'g', [1], `.${parentGroupClass}`);\n                const className = `${parentGroupClass}-group`;\n                makeElement(mountPoint, 'g', instances, `.${className}`, {\n                    update: (group, instance) => {\n                        instance.dataProps({ timeDiffs: context._timeDiffs }).mount(group.node());\n                    }\n                });\n            });\n};\n","import { CLASSPREFIX, CONSOLIDATED } from './enums/constants';\n\n/**\n * Returns the default configuration of the visual unit\n * @return {Object} Default configuration of visual unit\n */\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'visual-unit',\n    className: '',\n    trackerClassName: 'visual-unit-tracker',\n    gridLines: {\n        defClassName: 'axis-grid-lines',\n        className: '',\n        show: true,\n        color: '#efefef',\n        zeroLineColor: '#b6b6b6'\n    },\n    gridBands: {\n        defClassName: 'axis-grid-bands',\n        className: '',\n        show: false,\n        y: {\n            color: ['#fff', '#fbfbfb']\n        },\n        x: {\n            color: ['#fff', '#f9f9f9']\n        }\n    },\n    arcLayerClassName: 'layer-arc',\n    interaction: {\n        tooltip: {\n            mode: CONSOLIDATED\n        }\n    },\n    sideEffectClassName: 'side-effect-container'\n};\n","import { mergeRecursive, DataModel } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { CONFIG, LAYERDEFS, TRANSFORM, DATA, LAYERS, TRANSFORMEDDATA } from './enums/reactive-props';\nimport { sanitizeLayerDef } from './helper';\n\nexport default {\n    [CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig) => (\n                mergeRecursive(oldConfig || mergeRecursive({}, defaultConfig), config)\n            )\n        }\n    },\n    [LAYERDEFS]: {\n        value: null,\n        meta: {\n            preset: layerDef => sanitizeLayerDef(layerDef)\n        }\n    },\n    [TRANSFORM]: {\n        value: null\n    },\n    [LAYERS]: {\n        value: null\n    },\n    [DATA]: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel,\n            preset: (data, context) => {\n                if (context._cache) {\n                    const cachedData = context.cachedData();\n                    context.cachedData([...cachedData, data]);\n                } else {\n                    const oldData = context.data();\n                    oldData && oldData.unsubscribe('propagation');\n                    context.cachedData([data]);\n                }\n            }\n        }\n    },\n    [TRANSFORMEDDATA]: {\n        value: null,\n        meta: {\n            addAsMethod: false\n        }\n    }\n};\n","export const CONFIG = 'config';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNT = 'mount';\nexport const TRANSFORM = 'transform';\nexport const TRANSFORMEDDATA = 'transformedData';\nexport const DATADOMAIN = 'dataDomain';\nexport const FIELDS = 'fields';\nexport const LAYERAXISINDEX = 'layerAxisIndex';\nexport const LAYERS = 'layers';\nexport const DOMAIN = 'domain';\n\n","import { STATE_NAMESPACES, temporalFields } from 'muze-utils';\nimport * as PROPS from './enums/reactive-props';\nimport {\n    transformDataModels,\n    getDimensionMeasureMap,\n    attachDataToLayers,\n    attachAxisToLayers,\n    unionDomainFromLayers\n} from './helper';\n\nimport { createGridLineLayer, attachDataToGridLineLayers } from './helper/grid-lines';\n\nconst removeExitLayers = (layerDefs, context) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    layerDefs.forEach((layerDef, i) => {\n        const id = `${layerDef.mark}-${i}`;\n        markSet[id] = true;\n    });\n\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n};\n\nexport const calculateDomainListener = (context, namespace) => () => {\n    const domain = unionDomainFromLayers(context.layers(), context.fields(), context._layerAxisIndex,\n        context.data().getFieldsConfig());\n    context.store().commit(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${namespace}`, domain);\n};\n\nexport const listenerMap = (context, namespace, metaInf) => ([\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            config && context.firebolt().config(config.interaction);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.LAYERDEFS}`],\n        listener: ([, layerDefs]) => {\n            const fieldsVal = context.fields();\n            if (layerDefs && fieldsVal) {\n                removeExitLayers(layerDefs, context);\n                const axes = context.axes();\n                if (axes.x || axes.y) {\n                    const props = [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.rowIndex}0`,\n                        `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.colIndex}0`];\n                    const store = context.store();\n                    const listenerInf = {\n                        namespace: namespace.local,\n                        key: 'gridLineListener'\n                    };\n                    store.unsubscribe(listenerInf);\n                    store.registerChangeListener(props, () => {\n                        attachDataToGridLineLayers(context);\n                    }, false, listenerInf);\n                }\n\n                context.addLayer(layerDefs);\n                context._lifeCycleManager.notify({\n                    client: context.layers(),\n                    action: 'initialized',\n                    formalName: 'layer'\n                });\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`],\n        listener: ([, dataModel]) => {\n            const axesObj = context.axes();\n            const timeDiffs = {};\n            const timeDiffsByField = {};\n\n            Object.entries(temporalFields(dataModel)).forEach(([fieldName, fieldObj]) => {\n                timeDiffsByField[fieldName] = fieldObj.minimumConsecutiveDifference();\n            });\n\n            Object.entries(context.fields()).forEach(([type, [field]]) => {\n                if (field) {\n                    const timeDiff = timeDiffsByField[`${field}`];\n                    if (timeDiff) {\n                        timeDiffs[type] = timeDiff;\n                        axesObj[type].forEach(axis => axis.minDiff(timeDiff));\n                    }\n                }\n            });\n\n            context._timeDiffsByField = timeDiffsByField;\n            context._timeDiffs = timeDiffs;\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: () => {\n            createGridLineLayer(context);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`,\n            `${namespace.local}.${PROPS.TRANSFORM}`],\n        listener: ([, dataModel], [, transform]) => {\n            if (dataModel) {\n                const dataModels = transformDataModels(transform, dataModel);\n                context.store().commit(`${namespace.local}.${PROPS.TRANSFORMEDDATA}`, dataModels);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.TRANSFORMEDDATA}`,\n            `${namespace.local}.${PROPS.LAYERS}`],\n        listener: ([, transformedData], [, layers]) => {\n            const layerAxisIndexVal = context._layerAxisIndex;\n            const axesVal = context.axes();\n            const dataModel = context.data();\n            if (transformedData && layers && axesVal && layerAxisIndexVal) {\n                context._lifeCycleManager.notify({ client: layers, action: 'beforeupdate', formalName: 'layer' });\n                const model = context.store().model;\n                layers.forEach(lyr => lyr.disableUpdate());\n                attachDataToLayers(layers, dataModel, transformedData);\n                model.lock();\n                layers.forEach((lyr) => {\n                    lyr.enableUpdate().domain(lyr._domain);\n                });\n                model.unlock();\n                context._dimensionMeasureMap = getDimensionMeasureMap(layers,\n                    dataModel.getFieldsConfig(), context.retinalFields());\n                attachAxisToLayers(axesVal, layers, layerAxisIndexVal);\n                context._lifeCycleManager.notify({ client: layers, action: 'updated', formalName: 'layer' });\n            }\n        }\n    }\n]);\n","import { FACET_BY_FIELDS, RETINAL_FIELDS, PARENT_ALIAS, LAYERS, CACHED_DATA } from './enums/constants';\n\nexport const PROPS = {\n    [FACET_BY_FIELDS]: {},\n    [RETINAL_FIELDS]: {},\n    [PARENT_ALIAS]: {},\n    [LAYERS]: {},\n    [CACHED_DATA]: {},\n    detailFields: {},\n    axes: {\n        defaultValue: {\n            x: [],\n            y: []\n        }\n    },\n    fields: {},\n    metaInf: {},\n    registry: {},\n    width: {},\n    height: {},\n    parentContainerInf: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import { CommonProps } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { DATA } from '../enums/reactive-props';\n\nexport const initSideEffects = (sideEffects, firebolt) => {\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            sideEffects[key] instanceof SpawnableSideEffect && sideEffects[key].drawingContext(() => {\n                const context = firebolt.context;\n                return context.getDrawingContext();\n            });\n            sideEffects[key].valueParser(firebolt.context.valueParser());\n        }\n    }\n};\n\nexport const clearActionHistory = (context) => {\n    const actionHistory = context._actionHistory;\n    for (const key in actionHistory) {\n        if (actionHistory[key].isMutableAction) {\n            delete context._actionHistory[key];\n        }\n    }\n};\n\nexport const dispatchQueuedSideEffects = (context) => {\n    const queuedSideEffects = context._queuedSideEffects;\n    Object.entries(queuedSideEffects).forEach((entry) => {\n        const sideEffect = entry[1];\n        context.dispatchSideEffect(sideEffect.name, ...sideEffect.params);\n    });\n    context._queuedSideEffects = {};\n};\n\nexport const registerListeners = (firebolt) => {\n    const context = firebolt.context;\n    const store = context.store();\n\n    store.registerImmediateListener([`local.units.${context.metaInf().namespace}.${DATA}`], (dataModel) => {\n        const dm = dataModel[1];\n\n        if (dm) {\n            firebolt.createSelectionSet(firebolt.context.data().getData().uids);\n            firebolt.initializeSideEffects();\n            const originalData = firebolt.context.cachedData()[0];\n            firebolt.attachPropagationListener(originalData);\n        }\n    });\n\n    store.registerChangeListener([`local.units.${context.metaInf().namespace}.${DATA}`], () => {\n        if (!firebolt.context.mount()) {\n            const originalData = firebolt.context.cachedData()[0];\n            originalData.unsubscribe('propagation');\n        }\n    });\n\n    context._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW],\n        ([, onlayerdraw]) => {\n            if (onlayerdraw) {\n                dispatchQueuedSideEffects(firebolt);\n                clearActionHistory(firebolt);\n            }\n        });\n};\n","import { DimensionSubtype } from 'muze-utils';\n\nconst getRangeFromData = (instance, selectionDataModel, propConfig) => {\n    let criteria;\n    const dataObj = selectionDataModel[0].getData();\n    const propCriteria = propConfig.payload.criteria;\n    const sourceIdentifiers = propConfig.sourceIdentifiers;\n    const schema = dataObj.schema;\n    const fieldMap = instance.data().getFieldsConfig();\n    const data = dataObj.data;\n    const isActionSourceSame = instance.id() === propConfig.sourceId;\n\n    if (isActionSourceSame) {\n        criteria = propCriteria;\n    } else {\n        criteria = (sourceIdentifiers !== null) ? schema.reduce((acc, obj, index) => {\n            let range;\n            const field = obj.name;\n            const fieldObj = fieldMap[field];\n            const type = fieldObj && (fieldObj.def.subtype ? fieldObj.def.subtype : fieldObj.def.type);\n            const isDimension = type === DimensionSubtype.CATEGORICAL;\n\n            if (!fieldObj) {\n                return acc;\n            }\n\n            if (!isDimension) {\n                range = [Math.min(...data.map(d => d[index])), Math.max(...data.map(d => d[index]))];\n            } else {\n                range = data.map(d => d[index]);\n            }\n            acc[field] = range;\n            return acc;\n        }, {}) : null;\n    }\n    return criteria;\n};\n\nexport const payloadGenerator = {\n    brush: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const criteria = getRangeFromData(instance, selectionDataModel, propConfig);\n        const payload = Object.assign({}, propPayload);\n        payload.criteria = criteria;\n        return payload;\n    },\n\n    __default: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const sourceIdentifiers = propConfig.sourceIdentifiers;\n        const dataObj = selectionDataModel[0].getData();\n        let schema = dataObj.schema;\n        const payload = Object.assign({}, propPayload);\n        schema = dataObj.schema;\n        const data = dataObj.data;\n        const sourceFields = schema.map(d => d.name);\n        payload.criteria = !sourceIdentifiers && selectionDataModel[0].isEmpty() ? null :\n            [sourceFields, ...data];\n        payload.sourceFields = sourceIdentifiers ? sourceIdentifiers.getSchema().map(d => d.name) : [];\n        return payload;\n    }\n};\n\n","import { isSimpleObject, FieldType, DataModel } from 'muze-utils';\n\nconst getModelWithFacetData = (dm, data) => {\n    const dataObj = dm.getData();\n    const schema1 = dataObj.schema;\n    const data1 = dataObj.data;\n    const jsonData = [];\n    const schema2 = data[0].map(d => ({\n        name: `${d}`,\n        type: FieldType.DIMENSION\n    }));\n    const data2 = data[1];\n\n    data1.forEach((d) => {\n        const tuple = {};\n        schema1.forEach((obj, i) => {\n            tuple[obj.name] = d[i];\n        });\n        schema2.forEach((obj, i) => {\n            tuple[obj.name] = data2[i];\n        });\n        jsonData.push(tuple);\n    });\n\n    return new DataModel(jsonData, [...schema1, ...schema2]);\n};\n\nexport const propagateValues = (instance, action, config = {}) => {\n    let propagationData;\n    const payload = config.payload;\n    const selectionSet = config.selectionSet;\n    const propagationFieldInf = config.propagationFields[action] || {};\n    const propagationFields = propagationFieldInf.fields || [];\n    const append = propagationFieldInf.append;\n    const criteria = payload.criteria;\n    const context = instance.context;\n    const dataModel = context.cachedData()[0];\n    const sourceId = context.id();\n    const sideEfffects = instance.sideEffects();\n    const behaviourEffectMap = instance._behaviourEffectMap;\n    const mergedModel = selectionSet.mergedEnter.model;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    payload.sourceUnit = sourceId;\n    payload.action = action;\n    payload.sourceCanvas = context.parentAlias();\n    const propagationBehaviourMap = instance._propagationBehaviourMap;\n    const propagationBehaviour = propagationBehaviourMap[action] || action;\n\n    let propFields = [];\n    if (criteria === null) {\n        propagationData = null;\n    } else if (isSimpleObject(criteria)) {\n        propFields = Object.keys(criteria || {});\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    } else {\n        propFields = criteria[0];\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    }\n\n    const facetByFields = context.facetByFields();\n    if (propagationData !== null && propagationFields.length) {\n        const fields = propagationData.getData().schema.map(d => d.name);\n        propagationData = getModelWithFacetData(propagationData, facetByFields);\n        propFields = append ? [...fields, ...propagationFields] : propagationFields;\n        propagationData = propagationData.project(propFields);\n    }\n\n    let propagateInterpolatedValues = false;\n    if (propFields.length && propFields.every(field => fieldsConfig[field] &&\n        fieldsConfig[field].def.type === FieldType.MEASURE)) {\n        propagateInterpolatedValues = true;\n    }\n\n    const groupId = context.parentAlias();\n    payload.action = action;\n    const behaviourInstance = instance._actions.behavioural[propagationBehaviour];\n    const isMutableAction = behaviourInstance ? behaviourInstance.constructor.mutates() : false;\n\n    const filterFn = (entry, propagationConf) => {\n        const effects = behaviourEffectMap[entry.config.action];\n        const mutates = entry.config.groupId ?\n            effects.some(d => sideEfffects[d.name || d].constructor.mutates()) : true;\n        return entry.config.groupId !== propagationConf.groupId && mutates;\n    };\n\n    const sourceBehaviour = instance._actions.behavioural[action];\n    const mutates = sourceBehaviour ? sourceBehaviour.constructor.mutates() : false;\n    let propConfig = {\n        payload,\n        action,\n        criteria: propagationData,\n        isMutableAction: mutates,\n        propagateInterpolatedValues,\n        groupId,\n        sourceId: mutates ? groupId : sourceId,\n        filterFn,\n        enabled: (propConf, firebolt) => (action !== propagationBehaviour ?\n            propConf.payload.sourceCanvas === firebolt.context.parentAlias() : true)\n    };\n\n    dataModel.propagate(propagationData, propConfig, true);\n\n    if (action !== propagationBehaviour) {\n        propConfig = {\n            payload,\n            sourceId: isMutableAction ? groupId : sourceId,\n            criteria: propagationData,\n            isMutableAction,\n            propagateInterpolatedValues,\n            action: propagationBehaviour,\n            groupId,\n            applyOnSource: action === propagationBehaviour,\n            enabled: (propConf, firebolt) => propConf.payload.sourceCanvas !== firebolt.context.parentAlias(),\n            filterFn\n        };\n\n        dataModel.propagate(propagationData, propConfig, true, {\n            filterImmutableAction: (actionInf, propInf) => actionInf.groupId !== propInf.groupId\n        });\n    }\n};\n","import { FieldType } from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\nimport { registerListeners } from './helper';\nimport { payloadGenerator } from './payload-generator';\nimport { propagateValues } from './data-propagator';\n\n/**\n * This class manages the interactions of visual unit. It associates physical actions with\n * behavioural actions. It also propagates the behavioural actions to other datamodels.\n */\nexport default class UnitFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        registerListeners(this);\n    }\n\n    propagate (behaviour, payload, selectionSet, sideEffects) {\n        propagateValues(this, behaviour, {\n            payload,\n            selectionSet,\n            sideEffects,\n            propagationFields: this._propagationFields\n        });\n    }\n\n    getApplicableSideEffects (sideEffects, payload, propagationInf) {\n        const context = this.context;\n        const unitId = context.id();\n        const aliasName = context.parentAlias();\n        const propagationSourceCanvas = propagationInf.propPayload && propagationInf.propPayload.sourceCanvas;\n        const sourceUnitId = propagationInf.propPayload && propagationInf.propPayload.sourceUnit;\n        const sourceSideEffects = this._sourceSideEffects;\n        const sideEffectInstances = this.sideEffects();\n        const actionOnSource = sourceUnitId ? sourceUnitId === unitId : true;\n\n        const applicableSideEffects = payload.sideEffects ? [{\n            effects: payload.sideEffects,\n            behaviours: [payload.action]\n        }] : sideEffects;\n        applicableSideEffects.forEach((d) => {\n            let mappedEffects = d.effects;\n            mappedEffects = mappedEffects.filter((se) => {\n                const mutates = sideEffectInstances[se.name || se].constructor.mutates();\n                if (mutates && propagationInf.isMutableAction === false) {\n                    return false;\n                }\n                if (!actionOnSource && payload.criteria !== null) {\n                    const sideEffectChecker = sourceSideEffects[se.name || se];\n                    return sideEffectChecker ? sideEffectChecker(propagationInf.propPayload, context) : true;\n                }\n                if (propagationSourceCanvas === aliasName || actionOnSource) {\n                    return se.applyOnSource !== false;\n                }\n\n                return true;\n            });\n            d.effects = mappedEffects;\n        });\n        return applicableSideEffects;\n    }\n\n    shouldApplySideEffects (propagate) {\n        return propagate === false;\n    }\n\n    onDataModelPropagation () {\n        return (data, config) => {\n            let isSourceFieldPresent = true;\n            let isMutableAction = false;\n            const propPayload = config.payload;\n            const sourceIdentifiers = config.sourceIdentifiers;\n            const enabledFn = config.enabled;\n            const action = config.action;\n            const payloadFn = payloadGenerator[action] || payloadGenerator.__default;\n\n            if (sourceIdentifiers) {\n                const fieldsConfig = sourceIdentifiers.getFieldsConfig();\n                const sourceIdentifierFields = Object.keys(fieldsConfig);\n                const propFields = Object.keys(data[0].getFieldsConfig());\n                if (!Object.values(fieldsConfig).some(d => d.def.type === FieldType.MEASURE)) {\n                    isSourceFieldPresent = sourceIdentifierFields.some(d => propFields.indexOf(d) !== -1);\n                }\n            }\n\n            const payload = payloadFn(this.context, data, config);\n            const sourceBehaviours = this._sourceBehaviours;\n            const filterFn = sourceBehaviours[action] || sourceBehaviours['*'];\n            let enabled = true;\n\n            if (filterFn) {\n                enabled = filterFn(propPayload || {}, this.context);\n            }\n\n            if (enabledFn) {\n                enabled = enabledFn(config, this) && enabled !== false;\n            }\n\n            if (enabled) {\n                const effects = this._behaviourEffectMap[action];\n                const sideEffectInstances = this.sideEffects();\n                isMutableAction = config.groupId ?\n                    effects.some(d => sideEffectInstances[d.name || d].constructor.mutates()) : config.isMutableAction;\n\n                const propagationInf = {\n                    propagate: false,\n                    data,\n                    propPayload,\n                    sourceIdentifiers,\n                    persistent: false,\n                    isSourceFieldPresent,\n                    sourceId: config.propagationSourceId,\n                    isMutableAction: config.isMutableAction\n                };\n\n                this._actionHistory[action] = {\n                    payload,\n                    propagationInf,\n                    isMutableAction\n                };\n                this.dispatchBehaviour(action, payload, propagationInf);\n            }\n        };\n    }\n\n    prepareSelectionSets (behaviours) {\n        const data = this.context.data();\n        if (data) {\n            this.createSelectionSet(data.getData().uids, behaviours);\n        }\n        return this;\n    }\n\n    initializeSideEffects () {\n        if (this.context.data()) {\n            super.initializeSideEffects();\n        }\n        return this;\n    }\n\n    remove () {\n        this.context.cachedData()[0].unsubscribe('propagation');\n        return this;\n    }\n}\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    Store,\n    setAttrs,\n    getUniqueId,\n    getQualifiedClassName,\n    selectElement,\n    transactor,\n    makeElement,\n    registerListeners,\n    generateGetterSetters,\n    getDataModelFromIdentifiers,\n    isSimpleObject,\n    transposeArray,\n    CommonProps,\n    toArray,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { actionBehaviourMap } from './firebolt/action-behaviour-map';\nimport {\n    renderLayers,\n    getNearestDimensionalValue,\n    removeLayersBy,\n    getLayersBy,\n    getLayerFromDef,\n    getLayerAxisIndex,\n    sanitizeLayerDef,\n    createSideEffectGroup,\n    resolveEncodingTransform,\n    createRenderPromise\n} from './helper';\nimport { renderGridLineLayers } from './helper/grid-lines';\nimport localOptions from './local-options';\nimport { listenerMap, calculateDomainListener } from './listener-map';\nimport {\n    DOMAIN\n} from './enums/reactive-props';\nimport { PROPS } from './props';\nimport UnitFireBolt from './firebolt';\nimport { initSideEffects } from './firebolt/helper';\nimport './styles.scss';\n\nconst FORMAL_NAME = 'unit';\n\n/**\n * Visual Unit is hierarchical component created by {@link VisualGroup}. This component accepts layer definitions\n * and creates concrete layer instances from them, binds data and attaches axis to them. It also retreives the domain\n * from the layers and unions them and sets them on corresponding axis instances. This also creates the parent svg\n * groups for all the layers and delegates the rendering to all the layers.\n *\n * @public\n * @module VisualUnit\n * @class\n */\nexport default class VisualUnit {\n\n    /**\n     * Creates instance of visualization unit.\n     *\n     * @param {Object} registry  Component registry\n     * @param {Object} dependencies  Dependencies required by visual unit.\n     */\n    constructor (registry, dependencies) {\n        this._id = getUniqueId();\n        this._dependencies = dependencies;\n        this._layerDeps = {\n            throwback: new Store({\n                [CommonProps.ON_LAYER_DRAW]: false\n            }),\n            smartLabel: dependencies.smartLabel,\n            lifeCycleManager: dependencies.lifeCycleManager\n        };\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        createRenderPromise(this);\n        this._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW], () => {\n            this._renderedResolve();\n            this._lifeCycleManager.notify({ client: this.layers(), action: 'drawn', formalName: 'layer' });\n        });\n\n        this._lifeCycleManager = dependencies.lifeCycleManager;\n        this._layersMap = {};\n        this._gridLinesSelection = {};\n        this._gridBandsSelection = {};\n        this._gridLines = [];\n        this._gridBands = [];\n        this._layerNamespaces = {};\n        this._layerAxisIndex = {};\n        this._transformedDataModels = {};\n        layerFactory.setLayerRegistry(registry.layerRegistry);\n        generateGetterSetters(this, PROPS);\n        this.registry(registry);\n        this.cachedData([]);\n    }\n\n    static formalName () {\n        return FORMAL_NAME;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            localOptions\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            this.store().append(`${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}`, {\n                [`${metaInf.namespace}`]: null\n            });\n            const localNs = `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            transactor(this, localOptions, this.store().model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE\n            }, {\n                rowIndex: metaInf.rowIndex,\n                colIndex: metaInf.colIndex\n            });\n            this.firebolt(new UnitFireBolt(this, {\n                physical: physicalActions,\n                behavioural: behaviouralActions,\n                physicalBehaviouralMap: actionBehaviourMap\n            }, sideEffects, behaviourEffectMap));\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Static helper for creates a unit instance\n     *\n     * @param {Object} [id] optional unique identifier for a unit; , id is calculated internally\n     * @param {DataModel} data instance of datamodel\n     * @param {Array.<Layer>} layers layer configuration\n     * @param {Object} config configurtion for the visual unit\n     * @return {VisualUnit} Instance of a unit\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this visual unit. Firebolt dispatches the behavioural actions\n     * when any physical action happens on the elements of visual unit.\n     *\n     * @public\n     *\n     * @return {Firebolt} Instance of firebolt.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Returns the unique id of this visual unit.\n     *\n     * @public\n     * @return {string} Unique identifier.\n     */\n    id () {\n        return this._id;\n    }\n\n    lockModel () {\n        this._store.model.lock();\n        return this;\n    }\n\n    unlockModel () {\n        this._store.model.unlock();\n        return this;\n    }\n\n    timeDiffsByField (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._timeDiffsByField;\n    }\n\n    /**\n     * Renders the visual unit. It creates the layout and renders the axes and layers.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    render (container) {\n        const config = this.config();\n        const { className, defClassName, sideEffectClassName, classPrefix } = config;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const width = this.width();\n        const height = this.height();\n        const containerSelection = selectElement(container).style('position', 'relative');\n\n        this._rootSvg = makeElement(containerSelection, 'svg', [null], className)\n                        .style('width', `${width}px`).style('height', `${height}px`);\n\n        const node = this._rootSvg.node();\n        setAttrs(node, {\n            width,\n            height,\n            class: qualifiedClassName.join(' ')\n        });\n        renderGridLineLayers(this, node);\n        renderLayers(this, node, this.layers(), {\n            width,\n            height\n        });\n        this._sideEffectGroup = createSideEffectGroup(node, `${classPrefix}-${sideEffectClassName}`);\n        const firebolt = this.firebolt();\n        initSideEffects(firebolt.sideEffects(), firebolt);\n        return this;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Caches all the datamodels in an array from the next `data()` call on visual unit until `clearCaching()` or\n     * `resetData()` is called on it.\n     *\n     * @public\n     * @return {VisualUnit} Instance of visual unit.\n     */\n\n    enableCaching () {\n        this._cache = true;\n        return this;\n    }\n\n    /**\n     * Clears all the previous cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    clearCaching () {\n        this._cache = false;\n        this.cachedData([this.cachedData()[0]]);\n        return this;\n    }\n\n    /**\n     * Returns the drawing information from visual unit.Drawing context contains the dimensions of unit and the svg\n     * container of the visual unit.\n     *\n     * @public\n     *\n     * @return {Object} Drawing information.\n     *      ```\n     *          {\n     *              htmlContainer: // Html container of svg container of the visual unit\n     *              svgContainer: // Root svg container\n     *              width: // Width of the visual unit\n     *              height: // Height of the visual unit\n     *              sideEffectGroup: // Svg group for drawing side effect elements.\n     *              parentContainer: // Parent html container of the visual unit.\n     *              xOffset: // x offset space from the starting x position of the container,\n     *              yOffset: // y offset space from the starting y position of the container\n     *          }\n     *      ```\n     */\n    getDrawingContext () {\n        const rootSvg = this._rootSvg && this._rootSvg.node();\n        const width = this.width();\n        const height = this.height();\n        const { el, dimensions } = this.parentContainerInf();\n        return {\n            htmlContainer: this.mount(),\n            svgContainer: rootSvg,\n            width,\n            height,\n            sideEffectGroup: this._sideEffectGroup,\n            parentContainer: el,\n            parentContainerDimensions: dimensions,\n            xOffset: 0,\n            yOffset: 0\n        };\n    }\n\n    /**\n     * Returns the serialized configuration of visual unit.\n     *\n     * @return {Object} serialized configuration\n     */\n    serialize () {\n        return {\n            layers: this.layers().map(layer => layer.serialize()),\n            config: this.config(),\n            axes: this.axes().map(axis => axis.serialize())\n        };\n    }\n\n    mount (...mount) {\n        if (mount.length) {\n            this._mount = mount[0];\n            this.render(mount[0]);\n            this.firebolt().mapActionsAndBehaviour();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     * Adds a new layer to the visual unit. It takes a layer definition and creates layer instances from them. It does\n     * not render the layers. It returns the layer instances in an array. If the layer definition is a composite layer,\n     * then multiple layer instances will be returned in the array.\n     *\n     * To add a layer in the unit,\n     * ```\n     *      unit.addLayer({\n     *          name: 'bullet',\n     *          mark: 'bar',\n     *          encoding: {\n     *              x: 'Year',\n     *              y: 'Acceleration',\n     *              color: 'Origin'\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} layerDef Definition of new layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    addLayer (layerDefinition) {\n        const layerDefinitions = sanitizeLayerDef(toArray(layerDefinition));\n\n        const layersMap = this._layersMap;\n        const markSet = {};\n        const store = {\n            layers: {},\n            components: {\n                unit: this\n            }\n        };\n        let layerIndex = 0;\n        let startIndex = [].concat(...Object.values(this._layersMap)).length;\n        const metaInf = this.metaInf();\n        const props = this._layerNamespaces;\n        const layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef) => {\n            const definition = layerDef.def;\n            const markId = definition.name;\n            const defArr = toArray(definition);\n            const namespaces = [];\n            defArr.forEach((def) => {\n                def.order = layerDef.order + layerIndex;\n                const namespace = `${metaInf.namespace}${startIndex}`;\n                if (!layersMap[markId]) {\n                    startIndex++;\n                    if (definition.calculateDomain !== false) {\n                        props[`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${DOMAIN}.${namespace}`] = true;\n                    }\n                }\n                namespaces.push(namespace);\n            });\n            layerIndex += defArr.length;\n            const instances = getLayerFromDef(this, definition, layersMap[markId], namespaces);\n            store.layers = Object.assign(store.layers, instances);\n            const instanceValues = Object.values(instances);\n            layersArr = layersArr.concat(...instanceValues);\n            layersMap[markId] = instanceValues;\n            markSet[markId] = markId;\n            return layersArr;\n        }, []);\n\n        store.unit = this;\n        const layerdeps = {};\n        const layersArr = [].concat(...Object.values(this._layersMap));\n\n        layersArr.forEach((layer) => {\n            const alias = layer.alias();\n            store.layers[alias] = layer;\n            layerdeps[alias] = [];\n        });\n        layers.forEach((layer) => {\n            const depArr = resolveEncodingTransform(layer, store);\n            layerdeps[layer.alias()] = depArr;\n        });\n\n        this._layerDepOrder = layerdeps;\n        this._layerAxisIndex = Object.assign(this._layerAxisIndex, getLayerAxisIndex(layers, this.fields()));\n        const stateStore = this.store();\n\n        stateStore.unsubscribe({\n            key: 'calculateDomainListener',\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n        });\n        stateStore.registerImmediateListener(Object.keys(props), calculateDomainListener(this, metaInf.namespace),\n            false, {\n                key: 'calculateDomainListener',\n                namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n            });\n        this.layers(layersArr);\n        return layers;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    remove () {\n        const lifeCycleManager = this._dependencies.lifeCycleManager;\n        lifeCycleManager.notify({ client: this, action: 'beforeremove', formalName: 'unit' });\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        this.firebolt().remove();\n        // Remove layers\n        lifeCycleManager.notify({ client: this.layers(), action: 'beforeremove', formalName: 'layer' });\n        this.layers().forEach(layer => layer.remove());\n        lifeCycleManager.notify({ client: this.layers(), action: 'removed', formalName: 'layer' });\n        lifeCycleManager.notify({ client: this, action: 'removed', formalName: 'unit' });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof VisualUnit\n     */\n    getDataModelFromIdentifiers (identifiers, mode, parentModel) {\n        if (identifiers === null) {\n            return null;\n        }\n        const dataModel = parentModel || this.data();\n        return getDataModelFromIdentifiers(dataModel, identifiers, mode);\n    }\n\n    /**\n     * Resets the data of visual unit to original data model. It also clears the cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    resetData () {\n        this.data(this.cachedData()[0]);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getSourceInfo () {\n        return {\n            dimensionMeasureMap: this._dimensionMeasureMap,\n            fields: this.fields(),\n            data: this.data(),\n            axes: this.axes()\n        };\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getDefaultTargetContainer () {\n        const { classPrefix, defClassName } = this.config();\n        return [`.${classPrefix}-${defClassName}`];\n    }\n\n    /**\n     * Returns an array of layer instances which matches the supplied mark type.\n     *\n     * @public\n     *\n     * @param {string} type Mark type of layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    getLayersByType (type) {\n        const layers = getLayersBy(this.layers(), 'type', type);\n        return layers;\n    }\n\n    /**\n     * Returns the layer instance which matches the supplied layer name. If no layer is found, then it returns\n     * undefined.\n     *\n     * @public\n     * @param {string} name Name of layer.\n     *\n     * @return {VisualUnit} Layer instance.\n     */\n    getLayerByName (name) {\n        const layers = getLayersBy(this.layers(), 'name', name);\n        return layers[0];\n    }\n\n    /**\n     * Returns the point located nearest to the supplied x and y position. It returns the unique identifiers of the\n     * point. This function also accepts an additional configuration `getAllPoints` inside `config` object in the third\n     * argument which if set to true, then it returns the identifiers of all the points which falls on the nearest\n     * x value or y value if any one of the field is a dimension. Additionally, a target property is also returned\n     * which contains the identifier of the nearest point. If no nearest point is found, then it returns identifier\n     * as null.\n     *\n     * @public\n     *\n     * @param {number} x X Position of the point from where nearest point is to be found.\n     * @param {number} y Y Position of the point from where nearest point is to be found.\n     * @param {Object} config Additional configuration options.\n     * @param {boolean} config.getAllPoints If true, then returns all the points nearest to the x value or y value if\n     * it is dimension.\n     * @param {Object} config.data Data associated with the nearest point.\n     * @return {Object} Nearest point information\n     * ```\n     *      {\n     *          id: [['Origin'], ['USA'], ['Japan']], // Identifiers of all the points closest to the x value.\n     *          target: [['Origin'], ['Japan']] // Identifier of the nearest point.\n     *      }\n     * ```\n     */\n    getNearestPoint (x, y, config) {\n        let pointObj = {\n            id: null\n        };\n        const dimValue = getNearestDimensionalValue(this, {\n            x,\n            y\n        });\n\n        if (dimValue !== null && config.getAllPoints) {\n            pointObj.id = dimValue;\n            const pointInf = this.getMarkInfFromLayers(x, y, config);\n            pointObj.target = pointInf && pointInf.id ? pointInf.id : pointObj.id;\n            return pointObj;\n        }\n\n        const markInf = this.getMarkInfFromLayers(x, y, config) || { id: null };\n        pointObj = Object.assign({}, markInf);\n\n        pointObj.target = markInf.id;\n        return pointObj;\n    }\n\n    getMarkInfFromLayers (x, y, args) {\n        const layers = this.layers();\n        const len = layers.length;\n        let point = null;\n        // Iterate through the layers array and fetch the nearest point from each layer. If a valid\n        // nearest point is found from any layer, then return that point.\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            const config = layer.config();\n            if (config.interactive !== false) {\n                point = layer.getNearestPoint(x, y, args);\n            }\n            if (point) {\n                return point;\n            }\n        }\n        return point;\n    }\n\n    /**\n     * Get the information of all the marks such as x, y position and size from supplied identifiers. It\n     * returns an array of points whose data matches the given identifiers.\n     *\n     * @public\n     *\n     * @param {Array|Object} identifiers Field names and their corresponding values.\n     * ```\n     * identifiers can be given in an array of array,\n     *      ['Origin', 'Name'], // Names of the fields supplied in first array\n     *      ['USA', 'ford'], // Data values of each field supplied in rest of the arrays.\n     *      ['Japan', 'ford']\n     * or in an object,\n     *      {\n     *          Origin: ['USA']\n     *      }\n     * ```\n     * @param {Object} config Optional configurations which decides which information of the mark will\n     * be retrieved.\n     * @param {boolean} [config.getAllAttrs = false] If true, then returns all the information of each mark.\n     * @param {boolean} [config.getBBox = false] If true, then returns the bounding box of each mark.\n     *\n     * @return {Array} Array of objects containing the information of each point.\n     * ```\n     * By default, the method returns the array of points in this structure,\n     *      [\n     *          {\n     *              x: 20,\n     *              y: 100,\n     *              width: 200,\n     *              height: 100\n     *          }\n     *      ]\n     * If 'config.getAllAttrs' is true, then it returns all the information of each mark,\n     *      [\n     *      // Positions of mark on initial state of transition.\n     *          enter: {\n     *              x: 0,\n     *              y: 0\n     *          },\n     *          // Final positions of the mark\n     *          update: {\n     *              x: 20,\n     *              y: 10\n     *          },\n     *          style: // css styles of each mark\n     *          source: [200, 'USA'] // Row information of each mark\n     *          id: 20 // Row id of each mark\n     *      ]\n     * ```\n     */\n    getPlotPointsFromIdentifiers (identifiers, config = {}) {\n        let points = [];\n        let parsedIdentifiers = identifiers;\n        if (identifiers === null) {\n            return [];\n        }\n        const layers = this.layers();\n        const len = layers.length;\n        if (isSimpleObject(identifiers)) {\n            parsedIdentifiers = [Object.keys(identifiers)];\n            parsedIdentifiers = [...parsedIdentifiers, ...transposeArray(Object.values(identifiers))];\n        }\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            if (layer.config().interactive !== false) {\n                points = [...points, ...layer.getPointsFromIdentifiers(parsedIdentifiers, config)];\n            }\n        }\n        return points;\n    }\n\n    /**\n     * Removes the layer instance which matches the supplied layer name.\n     *\n     * @public\n     * @param {string} name Name of layer\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayerByName (name) {\n        removeLayersBy('name', name);\n        return this;\n    }\n\n    /**\n     * Removes all the layer instances which matches the supplied mark type.\n     *\n     * @public\n     * @param {string} type Mark type of layer.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayersByType (type) {\n        removeLayersBy('type', type);\n        return this;\n    }\n}\n","import { DataModel } from 'muze-utils';\n\nimport { retriveDomainFromData } from './group-utils';\n\n/**\n * Gets name of fields form the variables\n *\n * @param {*} fields1\n * @param {*} [fields2=[]]\n *\n */\nconst getFieldNames = (fields1, fields2 = []) => [fields1, fields2].map(fields => fields.reduce((acc, d) => {\n    acc = [...acc, ...d.getMembers()];\n    return acc;\n}, []));\n\n/**\n * Creates a selected datamodel from a parent datamodel and a set of field names\n *\n * @param {Object} datamodel provided as input\n * @param {Array} fieldNames schema  names\n * @param {Array} fieldValues values of those schema names to be selected\n * @return {Object} creates a new selected datamodel\n */\nconst createSelectedDataModel = (datamodel, fieldNames, fieldValues) =>\n    datamodel.select(fields => fieldNames.every((field, k) => fields[field].value === fieldValues[k]));\n\n/**\n *\n *\n * @param {*} facets\n * @param {*} keyArray\n *\n */\nconst uniqueKeyGenerator = (keyArray, context, depth = 0, val = []) => {\n    const {\n        facets,\n        dataModel,\n        uniqueValues\n    } = context;\n\n    // Get unique keys for the next depth recursively if required\n    if (facets[depth + 1]) {\n        const field = facets[depth];\n        uniqueValues.forEach((value) => {\n            const newDm = dataModel.select(fields => fields[field].value === value);\n            const nextDepthUniqueValues = retriveDomainFromData(newDm, facets[depth + 1]);\n            const newContext = {\n                facets,\n                dataModel: newDm,\n                uniqueValues: nextDepthUniqueValues\n            };\n\n            uniqueKeyGenerator(keyArray, newContext, depth + 1, [...val, value]);\n        });\n    } else {\n        uniqueValues.forEach((value) => {\n            keyArray.push([...val, value]);\n        });\n    }\n};\n\n/**\n * projects row model based on the set of row and/or column and other projection fields\n *\n * @param {Object} datamodel provided as input\n * @return {Object} Projected datamodel\n */\nconst projectRows = (datamodel, projections) => {\n    const {\n        allColumnProjections,\n        rowProjections,\n        optionalProjections\n    } = projections;\n\n    if (rowProjections.length > 0) {\n        return rowProjections.map((projectFields) => {\n            const [projFieldNames, colProjFieldNames] = getFieldNames(projectFields, allColumnProjections);\n            return datamodel.project([...projFieldNames, ...colProjFieldNames, ...optionalProjections]);\n        });\n    }\n    return [datamodel];\n};\n\n/**\n * Adds the datamodels to current row index based on column fields\n *\n * @param {Array} context current context\n * @param {Array} valueCellCreator List of facets applied to the current datamodel\n */\nconst pushToMatrix = (context, valueCellCreator) => {\n    let cells = [];\n    const {\n        matrix,\n        datamodel,\n        facetInfo,\n        fieldInfo\n    } = context;\n    // Get projected fields for current row\n    const {\n        rowProjections,\n        colProjections,\n        optionalProjections\n    } = fieldInfo;\n    const {\n        rowIndex,\n        columnIndex\n    } = facetInfo;\n    const rowProj = rowProjections[(rowIndex) % rowProjections.length] || [];\n\n    // Get the cells for the matrix from the return function of the callback on the datamodel.\n    // callback function -> (datamodel, {projections, indices}, facets)\n    if (colProjections.length > 0) {\n        cells = colProjections.map((projectFields, projIdx) => {\n            const [colProjFieldNames, rowProjFieldNames] = getFieldNames(projectFields, rowProj);\n            const projectedDm = datamodel.project([...colProjFieldNames, ...rowProjFieldNames, ...optionalProjections]);\n            const projections = { rowFields: rowProj, columnFields: projectFields };\n            const indices = { rowIndex, columnIndex: columnIndex * colProjections.length + projIdx };\n\n            return valueCellCreator(projectedDm, { projections, indices }, facetInfo);\n        });\n    } else {\n        const projections = { rowFields: rowProj, columnFields: [] };\n        const indices = { rowIndex, columnIndex };\n\n        cells = [valueCellCreator(datamodel, { projections, indices }, facetInfo)];\n    }\n\n    matrix[rowIndex] = matrix[rowIndex] || [];\n    matrix[rowIndex].push(...cells);\n};\n\n/**\n * Gets Matrixes for corresponding datamodel, facets and projections\n *\n * @param {Object} dataModel input datamodel\n * @param {Object} fieldMap corresponding fieldmap\n * @param {Array} facetsAndProjections contains the set of facets and projections for the matrices\n * @param {Function} valueCellCreator Callback executed after datamodels are prepared after sel/proj\n * @return {Object} set of matrices with the corresponding row and column keys\n */\nexport const getMatrixModel = (dataModel, facetsAndProjections, valueCellCreator) => {\n    let rowDataModels = [];\n    const rowKeys = [];\n    const columnKeys = [];\n    const allColumnProjections = [];\n    const matrix = [];\n    const facetInfo = [];\n\n    const fieldInfo = Object.assign({}, facetsAndProjections);\n    const {\n        rowFacets,\n        colFacets,\n        colProjections\n    } = fieldInfo;\n\n    colProjections.forEach((colProj) => {\n        allColumnProjections.push(...colProj);\n    });\n    fieldInfo.allColumnProjections = allColumnProjections;\n\n    // Performing row selection and projection\n    if (rowFacets.length > 0) {\n        // Get unique values for the root level of facet\n        const field = rowFacets[0].toString();\n        const firstLevelRowKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys in the form of an array of arrays for each row\n        uniqueKeyGenerator(rowKeys, { facets: rowFacets, dataModel, uniqueValues: firstLevelRowKeys });\n\n        // Apply selection -> projection -> row datamodels\n        rowKeys.forEach((val) => {\n            // Create faceted datamodel\n            const [rowFacetFieldNames] = getFieldNames(rowFacets);\n            const selectedDataModel = createSelectedDataModel(dataModel, rowFacetFieldNames, val);\n\n            // Project the datamodel based on the number of projections (based on last levels)\n            const newProjectedDataModels = projectRows(selectedDataModel, fieldInfo);\n            rowDataModels.push(...newProjectedDataModels);\n\n            newProjectedDataModels.forEach(() => {\n                facetInfo.push([rowFacets, val]);\n            });\n        });\n    } else {\n        // No row facets, hence only row projection\n        rowDataModels.push(...projectRows(dataModel, fieldInfo));\n    }\n\n    // Maintaining set of row datamodels for column resolution\n    rowDataModels = rowDataModels.length > 0 ? rowDataModels : [[]];\n\n    // Performing column selection and projection\n    if (colFacets.length > 0) {\n        const colFacetNames = colFacets.map(d => `${d}`);\n        // Get unique values for the root level of facet\n        const field = colFacetNames[0];\n        const firstLevelColumnKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys to create faceted datamodels: this time for columns\n        uniqueKeyGenerator(columnKeys, {\n            facets: colFacetNames,\n            dataModel,\n            uniqueValues: firstLevelColumnKeys\n        });\n        // For each row in the datamodel, apply selection -> projection -> push the projection to matri\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            columnKeys.forEach((val, cIndex) => {\n                matrix[rIndex] = matrix[rIndex] || [];\n\n                // If datamodel is not present in current row, choose parent datamodel\n                const datamodel = dme instanceof DataModel ? dme : dataModel;\n\n                // Selection is made on the datamodel for the current row\n                const selectedDataModel = createSelectedDataModel(datamodel, colFacetNames, val);\n                const context = {\n                    matrix,\n                    datamodel: selectedDataModel,\n                    facetInfo: {\n                        rowFacets: facetInfo[rIndex],\n                        colFacets: [colFacets, val],\n                        rowIndex: rIndex,\n                        columnIndex: cIndex\n                    },\n                    fieldInfo\n                };\n                pushToMatrix(context, valueCellCreator);\n            });\n        });\n    } else {\n        // No column facets, hence only row projection\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            const context = {\n                matrix,\n                datamodel: dme || dataModel,\n                facetInfo: {\n                    rowFacets: facetInfo[rIndex],\n                    colFacets: [[], []],\n                    rowIndex: rIndex,\n                    columnIndex: 0\n                },\n                fieldInfo\n            };\n\n            pushToMatrix(context, valueCellCreator);\n        });\n    }\n\n    // Getting column keys\n    const transposedColKeys = columnKeys.length > 0 ? columnKeys[0].map((col, i) =>\n                    columnKeys.map(row => row[i])) : columnKeys;\n\n    return { matrix, rowKeys, columnKeys: transposedColKeys };\n};\n","import { AxisOrientation } from '@chartshq/muze-axis';\nimport {\n    getObjProp,\n    FieldType,\n    STATE_NAMESPACES,\n    retrieveNearestGroupByReducers,\n    mergeRecursive,\n    createSelection\n} from 'muze-utils';\nimport { getMatrixModel } from './matrix-model';\nimport {\n    getCellKey,\n    isDistributionEqual,\n    mutateAxesFromMap,\n    getFieldsFromSuppliedLayers,\n    extractFields\n} from './group-utils';\nimport { ROW, ROWS, COLUMNS, COL, LEFT, RIGHT, TOP, BOTTOM, PRIMARY, SECONDARY, X, Y } from '../enums/constants';\n\n/**\n * Updates row and column cells with the geom cell corresponding to the facet keys\n *\n * @param {*} resolver\n * @param {*} facets\n */\nconst updateCells = (resolver, facets, geomCell) => {\n    [ROW, COL].forEach((field) => {\n        const cells = resolver[`${field}Cells`]();\n        const facetKey = facets[`${field}Facets`][1].join();\n\n        !cells[facetKey] && (cells[facetKey] = []);\n        cells[facetKey].push(geomCell);\n        resolver[`${field}Cells`](cells);\n    });\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} datamodel\n * @param {*} fieldInfo\n * @param {*} facets\n *\n */\nexport const createValueCells = (context, datamodel, fieldInfo, facets) => {\n    const {\n        projections,\n        indices\n    } = fieldInfo;\n    const {\n        rowFields,\n        columnFields\n    } = projections;\n    const {\n         rowIndex,\n         columnIndex\n    } = indices;\n    const {\n        suppliedLayers,\n        cell: GeomCell,\n        resolver,\n        config,\n        encoder,\n        detailFields\n    } = context;\n    const axes = resolver.axes();\n    const cacheMaps = resolver.cacheMaps();\n    const matrixLayers = resolver.matrixLayers();\n    const labelManager = resolver.dependencies().smartlabel;\n    const horizontalAxis = resolver.horizontalAxis();\n    const verticalAxis = resolver.verticalAxis();\n    const datamodelTransform = resolver.datamodelTransform();\n    const {\n        entryCellMap,\n        exitCellMap\n    } = cacheMaps;\n    const layerConfigArr = encoder.getLayerConfig({ columnFields, rowFields }, suppliedLayers || []);\n    const axesCreators = { config, labelManager, axes, cacheMaps };\n\n    fieldInfo.normalizedColumns = verticalAxis.fields;\n    fieldInfo.normalizedRows = horizontalAxis.fields;\n\n    const groupAxes = encoder.createAxis(axesCreators, fieldInfo, context);\n\n    matrixLayers[rowIndex] = matrixLayers[rowIndex] ? matrixLayers[rowIndex] : [];\n    matrixLayers[rowIndex][columnIndex] = layerConfigArr;\n\n    // return from map if already there otherwise create and put in map\n    const geomCellKey = getCellKey(rowIndex, columnIndex);\n    const fields = {\n        y: rowFields,\n        x: columnFields\n    };\n\n    const allFacets = [\n        [...facets.rowFacets[0], ...facets.colFacets[0]],\n        [...facets.rowFacets[1], ...facets.colFacets[1]]\n    ];\n    const geomCell = !exitCellMap.has(geomCellKey) ? new GeomCell() : exitCellMap.get(geomCellKey);\n\n    geomCell.data(datamodel)\n                    .axes(groupAxes)\n                    .fields(fields)\n                    .transform(datamodelTransform)\n                    .detailFields(detailFields)\n                    .facetByFields(allFacets);\n    entryCellMap.set(geomCellKey, geomCell);\n    exitCellMap.delete(geomCellKey);\n\n    updateCells(resolver, facets, geomCell);\n\n    return entryCellMap.get(geomCellKey);\n};\n\n/**\n * Creates axis cells based on the set of axes\n *\n * @param {Selection} selection Contains a selection of the axis units\n * @param {Array} axes Actual axis units\n * @param {number} axisIndex 0-> primary axis, 1-> secondary axis(when dual axis is made)\n * @param {Object} cells Contains a collection of the cells\n * @return {Object} return either set of axis/blank cells depending on the config\n */\n\nconst createAxisCells = (selection, axes, axisIndex, cells) =>\n    createSelection(selection, axis => axis, axes, (item, i) => i + item.reduce((e, n) => {\n        const id = n.id + axisIndex;\n        return e + id;\n    }, '')).map((axis) => {\n        if (axis && axis[axisIndex]) {\n            const axisInst = axis[axisIndex];\n            const { orientation, show } = axisInst.config();\n\n            return new cells.AxisCell().source(axisInst).config({\n                isOffset: orientation === AxisOrientation.LEFT || orientation === AxisOrientation.TOP,\n                show\n            });\n        }\n        return new cells.BlankCell().config({ show: false });\n    });\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @retur\n */\nconst axisPlaceholderGn = (context, selObj, cells) => {\n    const {\n        matrices\n    } = context;\n    const {\n        axesMatrix\n    } = matrices;\n\n    return (type, axisFrom) => {\n        const axes = axesMatrix[`${type}`];\n\n        if (axes && axes.length) {\n            if (type === X || type === Y) {\n                const fieldNames = type === Y ? ROWS : COLUMNS;\n\n                [PRIMARY, SECONDARY].forEach((fieldType, index) => {\n                    const selObjProp = `${fieldNames}${fieldType}`;\n                    let axisIndex = index;\n                    let axesForDraw = axes;\n                    if (axisFrom === RIGHT || axisFrom === BOTTOM) {\n                        axisIndex = 1 - axisIndex;\n                    }\n                    if (!getObjProp(axes, 0, axisIndex)) {\n                        axesForDraw = [];\n                    }\n                    selObj[selObjProp] = createAxisCells(selObj[selObjProp], axesForDraw, axisIndex, cells);\n                });\n            } else {\n                selObj.rowsPrimary = createAxisCells(selObj.rowPrime, axes.map(() => []), 0, cells);\n                selObj.columnsPrimary = createAxisCells(selObj.colPrime, axes[0], 0, cells);\n            }\n        }\n        return selObj;\n    };\n};\n\n/**\n * Creates header cells based on the set of headers\n *\n * @param {Object} selection Contains a selection of the header units\n * @param {string} headers Contains a list of the headers\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} return either set of header cells depending on the config\n */\nconst createTextCells = (selection, headers, cells, labelManager) => createSelection(selection,\n    label => new cells.TextCell({}, { labelManager }).source(label), headers, (key, i) => key + i);\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @param {*} labelManager\n *\n */\nconst headerPlaceholderGn = (context, selectionObj, cells, labelManager) => {\n    const {\n        axis,\n        keys,\n        type,\n        facet\n    } = context;\n    const counter = axis.length / keys.length;\n    const selectionKeys = keys.length ? axis.map((d, i) => keys[Math.floor(i / counter)]) : [];\n\n    return createSelection(selectionObj[`${type}Headers`], keySet => keySet, selectionKeys,\n        (keySet, i) => `${keySet.join(',')}-${i}`)\n                    .map(keySet => createTextCells(null, keySet, cells, labelManager)\n                                    .map((cell, k, i) => cell.source(keySet[i]).config(facet)));\n};\n\n/**\n * Creates a set of placeholders as a part of selection object\n *\n * @param {Array} normalizedOptions contains normalized rows and columns\n * @param {Array} matrices contains axis and value matrices\n * @param {aArrayny} projections contains set of row and column projections\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} Creates a set of placeholders as a part of selections\n */\nconst generatePlaceholders = (context, cells, labelManager) => {\n    let selectionObj;\n    const {\n        matrices,\n        fields,\n        facetsAndProjections,\n        selection,\n        facet,\n        encoders,\n        resolver\n    } = context;\n    const {\n        rows,\n        columns\n    } = fields;\n    const {\n        valuesMatrix\n    } = matrices;\n    const {\n        rowProjections,\n        colProjections\n    } = facetsAndProjections;\n    const {\n        rowKeys,\n        columnKeys\n    } = valuesMatrix;\n    const takeAxisFrom = encoders.simpleEncoder._axisFrom;\n    const takeHeaderFrom = encoders.simpleEncoder._headerFrom;\n\n    selectionObj = selection || {};\n\n    ['pie', X, Y].forEach((axis) => {\n        const axisFrom = axis === X ? takeAxisFrom.column : takeAxisFrom.row;\n        selectionObj = axisPlaceholderGn(context, selectionObj, cells)(axis, axisFrom);\n    });\n\n    const {\n        rowsPrimary,\n        rowsSecondary,\n        columnsPrimary,\n        columnsSecondary\n    } = selectionObj;\n\n    const rowAxis = rowsPrimary && rowsPrimary.getObjects().length ? rowsPrimary.getObjects() :\n        (rowsSecondary && rowsSecondary.getObjects().length ? rowsSecondary.getObjects() : []);\n    const colAxis = columnsPrimary && columnsPrimary.getObjects().length ? columnsPrimary.getObjects() :\n        (columnsSecondary && columnsSecondary.getObjects().length ? columnsSecondary.getObjects() : []);\n\n    const headerConfig = [\n        { type: LEFT, section: rows[0], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: RIGHT, section: rows[1], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: TOP, section: columns[0], axis: colAxis, headerFrom: takeHeaderFrom.column },\n        { type: BOTTOM, section: columns[1], axis: colAxis, headerFrom: takeHeaderFrom.column }\n    ];\n\n    headerConfig.forEach((config, index) => {\n        let keys;\n        let length;\n        const {\n            type,\n            section,\n            axis,\n            headerFrom\n        } = config;\n\n        if (index < 2) {\n            keys = rowKeys;\n            length = rowProjections.length > 0 ? rowProjections.length : 1;\n        } else {\n            keys = columnKeys;\n            length = colProjections.length > 0 ? colProjections.length : 1;\n        }\n        keys = keys.map(arr => arr.map(val => resolver.valueParser()(val)));\n        if (section.length && headerFrom === type && axis && keys.length) {\n            const hContext = { axis, length, type };\n            let headers = [];\n            if (index < 2) {\n                hContext.keys = keys;\n                hContext.facet = facet.rows;\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            } else {\n                hContext.facet = facet.columns;\n                hContext.keys = keys[0].map((key, i) => keys.map(e => e[i]));\n\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            }\n            selectionObj[`${type}Headers`] = headers;\n        } else {\n            selectionObj[`${type}Headers`] = null;\n        }\n    });\n    return selectionObj;\n};\n\n/**\n * Generates matrices\n *\n * @param {Object} config Configuration to generate matrices\n * @param {Array} matrices Matrices containing the set of visual units and axes units\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} contains a collection of matrices\n */\nexport const generateMatrices = (context, matrices, cells, labelManager) => {\n    const {\n        unitHeight,\n        unitWidth,\n        facetsAndProjections,\n        normalizedRows,\n        normalizedColumns,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n     } = context;\n    const placeholderContext = {\n        fields: {\n            rows: normalizedRows,\n            columns: normalizedColumns\n        },\n        matrices,\n        facetsAndProjections,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n    };\n    // Generate placeholders for all matrices\n    const selectionObj = generatePlaceholders(placeholderContext, cells, labelManager);\n    const {\n        columnsPrimary,\n        columnsSecondary,\n        rowsPrimary,\n        rowsSecondary,\n        leftHeaders,\n        topHeaders,\n        bottomHeaders,\n        rightHeaders\n    } = selectionObj;\n    const [rowPrime, rowSec, colPrime, colSec] = [rowsPrimary, rowsSecondary, columnsPrimary, columnsSecondary]\n        .map(d => (d ? d.getObjects() : []));\n    const [leftFacets, rightFacets] = [leftHeaders, rightHeaders]\n        .map(e => (e ? e.getObjects()\n                        .map(f => f.getObjects()) : []));\n    let rowPriority = rowSec.length ? 1 : -1;\n    rowPrime.length && rowPriority++;\n    let colPriority = colSec.length ? 1 : -1;\n    colPrime.length && colPriority++;\n\n    // Compute left matrix using left headers and the axes on the rows\n    let leftMatrix = leftFacets.length ? leftFacets.map((d, i) => {\n        rowPrime[i] = rowPrime[i] ? [rowPrime[i]] : [];\n        return [...d, ...rowPrime[i]];\n    }) : (rowPrime ? rowPrime.map(d => [d]) : []);\n\n    // Compute right matrix using right headers and the axes on the rows\n    const rightMatrix = rowSec.length ? rowSec.map((d, i) => [d, ...(rightFacets[i] || [])]) : (rightFacets.length ?\n        rightFacets.map(d => [...d]) : []);\n\n    const topMatrix = [];\n    if (topHeaders) {\n        const headers = topHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                topMatrix[i] = topMatrix[i] || [];\n                topMatrix[i].push(x);\n            });\n        });\n    }\n    // Compute top matrix using the top headers and axes on the columns\n    if (colPrime.length) {\n        topMatrix.push(colPrime);\n    }\n\n    // Bottom and right matrices are prepared using the user config.\n    let bottomMatrix = [];\n    if (colSec.length) {\n        bottomMatrix.push(colSec);\n    }\n    const currentBottomLength = bottomMatrix.length;\n    if (bottomHeaders) {\n        const headers = bottomHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                bottomMatrix[i + currentBottomLength] = bottomMatrix[i + currentBottomLength] || [];\n                bottomMatrix[i + currentBottomLength].push(x);\n            });\n        });\n    }\n\n    if (!leftMatrix.length && !rightMatrix.length) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        leftMatrix = [[cell]];\n    }\n\n    if (!topMatrix.length && (!bottomMatrix.length || !bottomMatrix[0].length)) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        bottomMatrix = [[cell]];\n    }\n\n    return {\n        rows: [leftMatrix, rightMatrix],\n        columns: [topMatrix, bottomMatrix],\n        selectionObj,\n        colPriority,\n        rowPriority\n    };\n};\n\n/**\n * Computes matrices for a group\n *\n * @param {Object} datamodel on which the matrices are to be computed\n * @param {Object} config configuration of the matrices\n * @param {Object} layerRegistry contains the registered layers\n * @return {Object} conputed matrices\n * @memberof MatrixResolver\n */\nexport const computeMatrices = (context, config) => {\n    const {\n        resolver,\n        datamodel,\n        componentRegistry,\n        encoders\n    } = context;\n    const {\n            globalConfig,\n            selection,\n            transform\n        } = config;\n    const groupBy = globalConfig.autoGroupBy;\n    const { smartlabel: labelManager } = resolver.dependencies();\n    const fieldMap = datamodel.getFieldsConfig();\n    const layerConfig = resolver.layerConfig();\n    const registry = resolver.registry();\n    const { fields: normalizedRows } = resolver.horizontalAxis();\n    const { fields: normalizedColumns } = resolver.verticalAxis();\n    const otherEncodings = resolver.optionalProjections(config, layerConfig);\n    const facetsAndProjections = resolver.getAllFields();\n    const matrixGnContext = {\n        // Configuration to be passed to generate the  different matrices.\n        // A common config is used for both value matrices and other matrices\n        normalizedColumns,\n        normalizedRows,\n        facetsAndProjections,\n        layers: layerConfig,\n        fieldMap,\n        otherEncodings,\n        encoders,\n        facet: globalConfig.facet || {},\n        axisFrom: globalConfig.axisFrom || {},\n        selection,\n        resolver\n    };\n    const cells = {\n        GeomCell: resolver.getCellDef(registry.GeomCell),\n        AxisCell: resolver.getCellDef(registry.AxisCell),\n        BlankCell: resolver.getCellDef(registry.BlankCell),\n        TextCell: resolver.getCellDef(registry.TextCell)\n    };\n    const isRowSizeEqual = isDistributionEqual(normalizedRows);\n    const isColumnSizeEqual = isDistributionEqual(normalizedColumns);\n\n    resolver.colCells({});\n    resolver.rowCells({});\n    resolver.datamodelTransform(transform || {});\n\n    // Cell creation begins here\n    resolver.resetSimpleAxes();\n\n    const {\n        entryCellMap\n    } = resolver.cacheMaps();\n    const newCacheMap = {\n        exitCellMap: entryCellMap,\n        entryCellMap: new Map()\n    };\n\n    resolver.cacheMaps(newCacheMap);\n\n    const valueCellContext = {\n        config: globalConfig,\n        suppliedLayers: encoders.simpleEncoder.serializeLayerConfig(resolver.layerConfig()),\n        resolver,\n        cell: cells.GeomCell,\n        encoder: encoders.simpleEncoder,\n        newCacheMap,\n        detailFields: config.detail\n    };\n    const fieldsConfig = datamodel.getFieldsConfig();\n    let groupedModel = datamodel;\n    if (!groupBy.disabled) {\n        const fields = getFieldsFromSuppliedLayers(valueCellContext.suppliedLayers, datamodel.getFieldsConfig());\n        const allFields = extractFields(facetsAndProjections, fields);\n\n        const dimensions = allFields.filter(field =>\n            fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n        const aggregationFns = groupBy.measures;\n        const measureNames = Object.keys(datamodel.getFieldspace().getMeasure());\n        const nearestAggFns = retrieveNearestGroupByReducers(datamodel, ...measureNames);\n        const resolvedAggFns = mergeRecursive(nearestAggFns, aggregationFns);\n\n        groupedModel = datamodel.groupBy(dimensions.length ? dimensions : [''], resolvedAggFns).project(allFields);\n    }\n\n    // return a callback function to create the cells from the matrix\n    const cellCreator = resolver.valueCellsCreator(valueCellContext);\n    // Creates value matrices from the datamodel and configs\n    const valueMatrixInfo = getMatrixModel(groupedModel, facetsAndProjections, cellCreator);\n\n    resolver.cacheMaps().exitCellMap.forEach((placeholder) => {\n        placeholder.remove();\n    });\n    resolver.cacheMaps().exitCellMap.clear();\n    resolver.valueMatrix(valueMatrixInfo.matrix);\n\n    const { xAxes, yAxes } = mutateAxesFromMap(resolver.cacheMaps(), resolver.axes());\n\n    resolver.axes({\n        x: xAxes,\n        y: yAxes\n    });\n    const store = resolver.store();\n\n    [xAxes, yAxes].forEach((axesArr, type) => {\n        const stateProps = {};\n        axesArr = axesArr || [];\n        axesArr.forEach((axes, idx) => {\n            axes.forEach((axis, axisIndex) => {\n                stateProps[`${idx}${axisIndex}`] = null;\n            });\n        });\n        store.append(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type ? 'y' : 'x'}`, stateProps);\n    });\n    resolver.createUnits(componentRegistry, config);\n\n    const matrices = {\n        valuesMatrix: valueMatrixInfo,\n        axesMatrix: resolver.axes()\n    };\n    // Create all matrices\n    const {\n        rows,\n        columns,\n        selectionObj,\n        rowPriority,\n        colPriority\n    } = generateMatrices(matrixGnContext, matrices, cells, labelManager);\n\n    resolver.rowMatrix(rows);\n    resolver.columnMatrix(columns);\n\n    return {\n        rows: resolver.rowMatrix(),\n        columns: resolver.columnMatrix(),\n        values: resolver.valueMatrix(),\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority: {\n            row: rowPriority,\n            col: colPriority\n        },\n        selection: selectionObj,\n        dataModels: {\n            groupedModel,\n            parentModel: datamodel\n        }\n    };\n};\n","export const RESOLVER_PROPS = {\n    dependencies: {},\n    units: {},\n    datamodelTransform: {},\n    layerConfig: {},\n    matrixLayers: {},\n    colCells: {},\n    rowCells: {},\n    rowMatrix: {},\n    columnMatrix: {},\n    valueMatrix: {},\n    encoder: {},\n    valueParser: {}\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { generateGetterSetters, STATE_NAMESPACES } from 'muze-utils';\nimport {\n     initializeCacheMaps,\n     headerCreator,\n     extractUnitConfig,\n     setFacetsAndProjections\n} from './group-utils';\nimport {\n     ROW, COL, LEFT, RIGHT, COLOR, SIZE, SHAPE, DETAIL, CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS, INITIALIZED,\n     AXIS, UNIT, BEFORE_UPDATE, UPDATED, VALUE_MATRIX, FACET_HEADERS\n} from '../enums/constants';\nimport { createValueCells, computeMatrices } from './cell-creator';\nimport { RESOLVER_PROPS } from './resolver-props';\n\n/**\n * Resolves the matrices from configuration provided\n *\n * @export\n * @class MatrixResolver\n */\nexport default class MatrixResolver {\n\n    /**\n     * Creates an instance of MatrixResolver.\n     * @param {Object} dependencies needed to run the resolver\n     * @memberof MatrixResolver\n     */\n    constructor (dependencies) {\n        this._registry = {};\n        this._layerConfig = [];\n        this._matrixLayers = [];\n        this._dependencies = dependencies;\n        this._rowMatrix = [];\n        this._columnMatrix = [];\n        this._valueMatrix = [];\n        this._facets = { rowFacets: [], colFacets: [] };\n        this._projections = { rowProjections: [], colProjections: [] };\n        this._datamodelTransform = {};\n        this._units = [];\n        this._cacheMaps = {};\n        this._axes = {\n            x: {},\n            y: {},\n            color: [],\n            size: [],\n            shape: []\n        };\n        generateGetterSetters(this, RESOLVER_PROPS);\n        this.cacheMaps(initializeCacheMaps());\n    }\n\n    /**\n     * Set:  Registers placeholders, Get: return {Object} those placeholders\n     *\n     * @param {Object} placeholders cells that will construct the group\n     * @return {Object} Either current instance or the set of placeholders\n     * @memberof MatrixResolver\n     */\n    registry (...placeholders) {\n        if (placeholders.length) {\n            Object.entries(placeholders[0]).forEach((val) => {\n                this._registry[val[0]] = val[1];\n            });\n            return this;\n        }\n        return this._registry;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    cacheMaps (...maps) {\n        if (maps.length) {\n            [CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS].forEach((e) => {\n                this._cacheMaps[`${e}Map`] = maps[0][`${e}Map`] || this._cacheMaps[`${e}Map`];\n            });\n            return this;\n        }\n        return this._cacheMaps;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    axes (...axes) {\n        if (axes.length) {\n            this._axes = Object.assign({}, this._axes, axes[0]);\n            return this;\n        }\n        return this._axes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} facets\n     *\n     * @memberof MatrixResolver\n     */\n    facets (...facets) {\n        if (facets.length) {\n            Object.entries(facets[0]).forEach((e) => {\n                this._facets[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._facets;\n    }\n\n    /**\n     *\n     *\n     * @param {*} projections\n     *\n     * @memberof MatrixResolver\n     */\n    projections (...projections) {\n        if (projections.length) {\n            Object.entries(projections[0]).forEach((e) => {\n                this._projections[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._projections;\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @param {*} layerConfig\n     *\n     * @memberof MatrixResolver\n     */\n    optionalProjections (config, layerConfig) {\n        const otherEncodings = {};\n        const optionalProjections = [];\n        const otherEncodingTypes = [SIZE, COLOR, SHAPE];\n\n        otherEncodingTypes.forEach((type) => {\n            if (config[type] && config[type].field) {\n                const enc = config[type];\n                otherEncodings[type] = enc.field;\n                optionalProjections.push(enc.field);\n            }\n        });\n\n        if (config[DETAIL]) {\n            optionalProjections.push(...config.detail);\n        }\n\n        if (layerConfig.length) {\n            layerConfig.forEach((layer) => {\n                if (layer.encoding) {\n                    Object.values(layer.encoding).forEach((enc) => {\n                        if (enc && optionalProjections.indexOf(enc.field) === -1) {\n                            optionalProjections.push(enc.field ? enc.field : enc);\n                        }\n                    });\n                }\n            });\n        }\n        this.projections({ optionalProjections });\n        return otherEncodings;\n    }\n\n    /**\n     * return the normalized set of rows and facets and projections\n     *\n     * @param {Object} rows parameters needed to set horizontal axis consisiting of rows\n     * @return {Object} facets, projections and normalized rows\n     * @memberof MatrixResolver\n     */\n    horizontalAxis (rows, encoder) {\n        if (rows) {\n            this._horizontalAxis = setFacetsAndProjections(this, { type: ROW, fields: rows }, encoder);\n            return this;\n        }\n        return this._horizontalAxis;\n    }\n\n    /**\n     * return the normalized set of columns and facets and projections\n     *\n     * @param {Object} columns parameters needed to set vertical axis consisiting of columns\n     * @return {Object} facets, projections and normalized columns\n     * @memberof MatrixResolver\n     */\n    verticalAxis (columns, encoder) {\n        if (columns) {\n            this._verticalAxis = setFacetsAndProjections(this, { type: COL, fields: columns }, encoder);\n            return this;\n        }\n        return this._verticalAxis;\n    }\n\n    /**\n     * Gets the class definition of a particular cell type(if the particular type has been extended, that particular\n     * definition is returned)\n     *\n     * @param {Object} cell cell whose class definition is to be retrieved\n     * @return {Object} cell definition\n     * @memberof MatrixResolver\n     */\n    getCellDef (cell) {\n        const registry = this.registry();\n\n        Object.values(registry).forEach((e) => {\n            if (e.prototype instanceof cell) {\n                cell = e;\n            }\n        });\n        return cell;\n    }\n\n    /**\n     * return a visual cell creator along with its axis information to be injected to the datamodel creation\n     * function\n     *\n     * @param {Object} GeomCell Type of cell to be created\n     * @return {Object} Created cell\n     * @memberof MatrixResolver\n     */\n    valueCellsCreator (context) {\n        // reset matrix layers\n        this.matrixLayers([]);\n\n        return (datamodel, fieldInfo, facets) => createValueCells(context, datamodel, fieldInfo, facets);\n    }\n\n    /**\n     * Callback to be applied on each cell of a matrix of a particular type\n     *\n     * @param {string} matrixType type of matrix on which callback is to be applied\n     * @param {Function} callback function to be applied to each cell\n     * @memberof MatrixResolver\n     */\n    forEach (matrixType, callback) {\n        this[matrixType]().forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                callback(rIndex, cIndex, col);\n            });\n        });\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getAllFields () {\n        const retObj = this.projections();\n\n        Object.entries(this.facets()).forEach((e) => {\n            retObj[e[0]] = e[1];\n        });\n        return retObj;\n    }\n\n    /**\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    resetSimpleAxes () {\n        return this.axes({\n            x: new Set(),\n            y: new Set()\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} componentRegistry\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createUnits (componentRegistry, config) {\n        const {\n            globalConfig,\n            alias\n        } = config;\n        const {\n            layerRegistry,\n            sideEffectRegistry\n        } = componentRegistry;\n        const {\n            smartlabel: smartLabel,\n            lifeCycleManager\n        } = this.dependencies();\n        // Provide the source for the matrix\n        const units = [[]];\n        // Setting unit configuration\n        const unitConfig = extractUnitConfig(globalConfig || {});\n        const globalState = VisualUnit.getState()[0];\n        const globalStates = {};\n        const store = this.store();\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            let unit = el.source();\n            if (!unit) {\n                const namespace = `${i}${j}`;\n\n                unit = VisualUnit.create({\n                    layerRegistry,\n                    sideEffectRegistry\n                }, {\n                    smartLabel,\n                    lifeCycleManager\n                });\n                globalStates[namespace] = null;\n                unit.metaInf({\n                    rowIndex: i,\n                    colIndex: j,\n                    namespace\n                });\n                unit.store(store);\n                el.source(unit);\n            }\n            !units[i] && (units[i] = []);\n            units[i][j] = unit;\n            unit.parentAlias(alias);\n            unit.valueParser(this.valueParser());\n            el.config(unitConfig);\n        });\n\n        for (const key in globalState) {\n            store.append(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${key}`, globalStates);\n        }\n\n        lifeCycleManager.notify({ client: units, action: INITIALIZED, formalName: UNIT });\n        return this.units(units);\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    setDomains (config, datamodel, encoders) {\n        const {\n            color,\n            shape,\n            size,\n            globalConfig\n        } = config;\n        const groupBy = globalConfig.autoGroupBy;\n        const {\n            rowFacets,\n            colFacets\n        } = this.getAllFields();\n        const encoding = {\n            color,\n            shape,\n            size\n        };\n        const facetFields = [...rowFacets.map(e => e.toString()), ...colFacets.map(e => e.toString())];\n        const retContext = {\n            domains: encoders.simpleEncoder.getRetinalFieldsDomain(datamodel, encoding, facetFields, groupBy),\n            axes: this.axes(),\n            encoding\n        };\n        encoders.retinalEncoder.setCommonDomain(retContext);\n        return this;\n    }\n\n    resetFacetsAndProjections () {\n        this._facets = {};\n        this._projections = {};\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getRetinalAxes () {\n        const {\n            color,\n            shape,\n            size\n        } = this.axes();\n\n        return {\n            color: [...color],\n            shape: [...shape],\n            size: [...size]\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     *\n     * @memberof MatrixResolver\n     */\n    getSimpleAxes (type) {\n        return this.axes()[`${type}`];\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createRetinalAxes (fieldsConfig, config, encoders) {\n        const layerConfig = this.layerConfig();\n        this.optionalProjections(config, layerConfig);\n        const retinalAxes = encoders.retinalEncoder.createAxis({\n            fieldsConfig,\n            config,\n            axes: this.axes()\n        });\n        const {\n            lifeCycleManager\n        } = this.dependencies();\n\n        [COLOR, SHAPE, SIZE].forEach((e) => {\n            this.axes()[e] = retinalAxes[e];\n        });\n\n        lifeCycleManager.notify({ client: this.axes(), action: INITIALIZED, formalName: AXIS });\n        lifeCycleManager.notify({ client: this.units(), action: BEFORE_UPDATE, formalName: UNIT });\n\n        const units = [];\n        const matrixLayers = this.matrixLayers();\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            el.axes(retinalAxes);\n            el.source() && el.source().retinalFields(config);\n            el.layerDef(encoders.retinalEncoder.getLayerConfig(config, matrixLayers[i][j]));\n            el.updateModel();\n\n            units.push(el.source());\n        });\n\n        lifeCycleManager.notify({ client: units, action: UPDATED, formalName: UNIT });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} placeholders\n     * @param {*} fieldNames\n     *\n     * @memberof MatrixResolver\n     */\n    createHeaders (placeholders, fieldNames, config) {\n        let bottomLeft = [];\n        let bottomRight = [];\n        const {\n            rows,\n            columns\n        } = placeholders;\n        const {\n            smartlabel: labelManager,\n            lifeCycleManager\n        } = this.dependencies();\n        const {\n            showHeaders,\n            classPrefix\n        } = config;\n        const TextCell = this.getCellDef(this.registry().TextCell);\n        const BlankCell = this.getCellDef(this.registry().BlankCell);\n        const [leftRows, rightRows] = rows;\n        const [topCols, bottomCols] = columns;\n        const rowHeaders = fieldNames.rows;\n        const blankCellCreator = cell => new BlankCell().config({ show: cell.config().show });\n\n        // Headers and footers are created based on the rows. Thereafter, using the column information\n        // they are tabularized into the current structure\n        const headers = {\n            left: headerCreator(leftRows, rowHeaders[0], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager }),\n            right: headerCreator(rightRows, rowHeaders[1], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager })\n        };\n        const footers = {\n            left: leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : [],\n            right: rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []\n        };\n        const [topLeft, topRight] = [LEFT, RIGHT].map(type => topCols.map((col, i) => {\n            if (i === topCols.length - 1) {\n                return headers[type];\n            }\n            return footers[type];\n        }));\n\n        // Creating only bottom matrices if there is no information on the top\n        if (topCols.length === 0) {\n            [bottomLeft, bottomRight] = [LEFT, RIGHT].map(type => bottomCols.map((col, i) => {\n                if (i === 0) {\n                    return headers[type];\n                }\n                return footers[type];\n            }));\n        } else {\n            bottomLeft = bottomCols.map(() => (leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : []));\n            bottomRight = bottomCols.map(() => (rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []));\n        }\n\n        lifeCycleManager.notify({\n            client: [topLeft, topRight, bottomLeft, bottomRight],\n            action: INITIALIZED,\n            formalName: FACET_HEADERS\n        });\n\n        return { topLeft, topRight, bottomLeft, bottomRight };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @param {*} componentRegistry\n     * @param {*} encoders\n     *\n     * @memberof MatrixResolver\n     */\n    getMatrices (datamodel, config, componentRegistry, encoders) {\n        const context = {\n            datamodel,\n            componentRegistry,\n            encoders,\n            resolver: this\n        };\n\n        return computeMatrices(context, config);\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            return this;\n        }\n        return this._store;\n    }\n}\n","/**\n * This is a wrapper class over the matrix of cells which gets created in visual group. Visual Group creates left,\n * right, bottom and top and center matrices and wraps them using this class.\n *\n * @public\n * @class ValueMatrix\n */\nclass ValueMatrix {\n\n    /**\n     * Creates an instance of ValueMatrix.\n     *\n     * @param {Array} matrixArr Matrix array.\n     */\n    constructor (matrixArr) {\n        const instancesById = {};\n\n        this.matrix(matrixArr || []);\n        this.filter(() => true);\n\n        this.each((el, rIdx, cIdx) => {\n            const cellValue = el.valueOf();\n            if (cellValue && cellValue.id) {\n                const id = cellValue.id();\n                instancesById[id] = {\n                    instance: cellValue,\n                    rowIndex: rIdx,\n                    colIndex: cIdx\n                };\n            }\n        });\n\n        this.instancesById(instancesById);\n    }\n\n    instancesById (...id) {\n        if (id.length) {\n            this._instancesById = id[0];\n            return this;\n        }\n        return this._instancesById;\n    }\n\n    /**\n     * Returns the array of matrices contained in this instance.\n     *\n     * @public\n     * @return {Array} Array of matrices.\n     */\n    matrix (...matrix) {\n        if (matrix.length) {\n            this._matrix = matrix[0];\n            return this;\n        }\n        return this._matrix;\n    }\n\n    /**\n     * Sets a filter criteria. This filter criteria gets applied when each function is called.\n     *\n     * @public\n     * @param {Function} fn Filter function.\n     *\n     * @return {ValueMatrix} Instance of value matrix.\n     */\n    filter (...fn) {\n        if (fn.length) {\n            this._filterFn = fn[0];\n            return this;\n        }\n        return this._filterFn;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    width () {\n        let rowWidth = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowWidth = 0;\n            row.forEach((cell) => {\n                currentRowWidth += cell.getLogicalSpace().width;\n            });\n            rowWidth = Math.max(rowWidth, currentRowWidth);\n        });\n        return rowWidth;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    height () {\n        let rowHeight = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowHeight = 0;\n            row.forEach((cell) => {\n                currentRowHeight = Math.max(currentRowHeight, cell.getLogicalSpace().height);\n            });\n            rowHeight += currentRowHeight;\n        });\n        return rowHeight;\n    }\n\n    /**\n     * Iterates through the two dimensional matrix array and calls the given callback function with the cell instance,\n     * row index, column index and the matrix array.\n     *\n     * @param {Function} fn Callback function which will get called for every cell.\n     * @return {ValueMatrix} Instance of the value matrix.\n     */\n    each (fn) {\n        const matrix = this.matrix();\n        const filterFn = this.filter();\n\n        matrix.forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                if (filterFn(col)) {\n                    fn(col, rIndex, cIndex, matrix);\n                }\n            });\n        });\n        return this;\n    }\n\n    findPlaceHolderById (id) {\n        return this.instancesById()[id];\n    }\n}\n\nexport default ValueMatrix;\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { getEncoder, getBorders } from '../group-helper';\nimport { RetinalEncoder } from '../encoder';\nimport { registerDomainChangeListener, unsubscribeChangeListeners } from './change-listener';\nimport ValueMatrix from './value-matrix';\n\nexport const createUnitState = (context) => {\n    const [globalState] = VisualUnit.getState();\n    const store = context.store();\n    store.append(STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const initializeGlobalState = (context) => {\n    const globalState = context.constructor.getState()[0];\n    const store = context.store();\n    store.append(STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const createLayerState = (context) => {\n    const [globalState] = BaseLayer.getState();\n    context.store().append(STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, globalState);\n};\n\nconst sanitizeRetinalConfig = (retinalConf) => {\n    const conf = {};\n    for (const key in retinalConf) {\n        const confValue = retinalConf[key];\n        if (typeof confValue === 'string' || !confValue) {\n            conf[key] = {\n                field: retinalConf[key]\n            };\n        } else {\n            conf[key] = confValue;\n        }\n    }\n    return conf;\n};\n\nexport const setMatrixInstances = (context, placeholder) => {\n    let {\n        values,\n        rows,\n        columns\n    } = placeholder;\n    values = values || [];\n    rows = rows || [];\n    columns = columns || [];\n    context._composition.matrices = {\n        value: new ValueMatrix(values),\n        left: new ValueMatrix(rows[0]),\n        right: new ValueMatrix(rows[1]),\n        top: new ValueMatrix(columns[0]),\n        bottom: new ValueMatrix(columns[1])\n    };\n\n    context._dependencies.throwback.commit(CommonProps.MATRIX_CREATED, true);\n    return context;\n};\n\nexport const createMatrices = (context) => {\n    const rows = context.rows();\n    const columns = context.columns();\n    const color = context.color();\n    const datamodel = context.data();\n    const size = context.size();\n    const detail = context.detail();\n    const layers = context.layers();\n    const transform = context.transform();\n    const config = context.config();\n    const shape = context.shape();\n\n    // Get the resolver for the matrices\n    const resolver = context.resolver();\n    resolver.store(context.store());\n    resolver.valueParser(context.valueParser());\n    // Prepare configuration for matrix preparation\n    let matrixConfig = {\n        selection: context.selection(),\n        alias: context.alias(),\n        globalConfig: config || {},\n        rows,\n        columns,\n        detail,\n        layers,\n        transform\n    };\n\n    unsubscribeChangeListeners(context);\n\n    const retinalConfig = sanitizeRetinalConfig({\n        color,\n        shape,\n        size\n    });\n\n    matrixConfig = Object.assign(matrixConfig, retinalConfig);\n    // Create the encoders for the group\n    const encoders = {};\n    encoders.retinalEncoder = new RetinalEncoder();\n    encoders.simpleEncoder = getEncoder(layers);\n    resolver.encoder(encoders.simpleEncoder);\n\n    // Set the group type\n    context.groupType(encoders.simpleEncoder.constructor.type());\n\n    // Get sanitized fields as instances of the Vars Class\n    const fields = encoders.simpleEncoder.fieldSanitizer(datamodel, matrixConfig);\n    encoders.simpleEncoder.setAxisAndHeaders(config ? config.axisFrom : {}, fields);\n    // Setting layers for the code\n    layers && resolver.layerConfig(layers);\n    // Set the row and column axes\n    resolver.horizontalAxis(fields.rows, encoders).verticalAxis(fields.columns, encoders);\n    // Getting the placeholders\n    const placeholderInfo = resolver.getMatrices(datamodel, matrixConfig, context.registry(), encoders);\n    context._groupedDataModel = placeholderInfo.dataModels.groupedModel;\n    // Set the selection object\n    context.selection(placeholderInfo.selection);\n\n    // Create retinal axes\n    resolver.createRetinalAxes(placeholderInfo.dataModels.parentModel.getFieldsConfig(), retinalConfig,\n            encoders);\n\n    // Domains are evaluated for each of the axes for commonality\n    resolver.setDomains(matrixConfig, placeholderInfo.dataModels, encoders);\n\n    // Create matrix instances\n    setMatrixInstances(context, placeholderInfo);\n\n    // Prepare corner matrices\n    context.cornerMatrices(resolver.createHeaders(placeholderInfo, fields, config));\n\n    // Set placeholder information\n    context.placeholderInfo(placeholderInfo);\n\n    context._composition.axes = resolver.axes();\n    context.metaData({\n        border: getBorders(placeholderInfo, encoders.simpleEncoder)\n    });\n\n    resolver.encoder().unionUnitDomains(context);\n\n    registerDomainChangeListener(context);\n    return context;\n};\n","import { STATE_NAMESPACES } from 'muze-utils';\n\nexport const setupChangeListeners = (context) => {\n    const store = context.store();\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.x.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.y.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n};\n\nexport const registerDomainChangeListener = (context) => {\n    const store = context.store();\n    store.registerChangeListener([`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`], () => {\n        context.resolver().encoder().unionUnitDomains(context);\n    }, false, {\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n\nexport const unsubscribeChangeListeners = (context) => {\n    context.store().unsubscribe({\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\nexport const PROPS = {\n    alias: {},\n    data: {},\n    cornerMatrices: {\n        defaultValue: {\n            topLeft: [],\n            topRight: [],\n            bottomLeft: [],\n            bottomRight: []\n        }\n    },\n    groupType: {},\n\n    metaData: {\n        defaultValue: {\n            border: {}\n        }\n    },\n    placeholderInfo: {\n        defaultValue: {}\n    },\n    resolver: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    registry: {\n        sanitization: (context, value) => {\n            if (context.resolver) {\n                context.resolver().registry(value.cellRegistry);\n            }\n            return value;\n        }\n    },\n    selection: {},\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { generateGetterSetters } from 'muze-utils';\nimport localOptions from './local-options';\nimport { SimpleGroup } from '../simple-group';\nimport {\n    MatrixResolver,\n    findInGroup\n} from '../group-helper';\nimport { createUnitState, initializeGlobalState, setMatrixInstances, createMatrices, createLayerState } from './helper';\nimport { setupChangeListeners } from './change-listener';\nimport { PROPS } from './props';\nimport {\n    CONFIG,\n    MOUNT,\n    RETINAL,\n    Y\n} from '../enums/constants';\n\n/**\n * VisualGroup is instantiated by canvas for creating {@link VisualUnit} and axes instances.It creates the\n * the matrix of visual units and axes. It also creates the layout instance which manages the allocation\n * of space of matrices.\n *\n * To get instance of visual group,\n * ```\n *      const visualGroup = canvas.composition().visualGroup;\n * ```\n * @public\n *\n * @class VisualGroup\n */\nclass VisualGroup extends SimpleGroup {\n\n    /**\n     * Creates an instance of VisualGroup. Requires dependencies and other registry options for placeholders\n     * and layers that create individual units.\n     *\n     * @param {Object} registry Key value pair of compostions for the group\n     * @param {Object} dependencies Dependencies needed to run the group\n     * @memberof VisualGroup\n     */\n    constructor (registry, dependencies) {\n        super();\n\n        const {\n            componentSubRegistry\n        } = registry;\n\n        this._dependencies = dependencies;\n        // Generate getter/setter methods for all properties of the class\n        // One can get each property by calling the method and can set it\n        // by passing paramaters for the same. Thus, one can chain setter\n        // getter methods.\n        generateGetterSetters(this, PROPS);\n        generateGetterSetters(this, localOptions);\n        // Populate the store with default values\n        // initialize group compositions\n        this._composition = {};\n        // store reference to data\n        this._data = [];\n        // store reference to mountpoint\n        this._mount = null;\n        // selection object that takes care of updating of components\n        this._selection = {};\n        // Create instance of matrix resolver\n        this.resolver(new MatrixResolver(this._dependencies));\n        // matrix instance store each of the matrices\n        setMatrixInstances(this, {});\n         // Getting indiviual registered items\n        this.registry({\n            layerRegistry: componentSubRegistry.layerRegistry.get(),\n            cellRegistry: componentSubRegistry.cellRegistry.get()\n        });\n    }\n\n    static getState () {\n        return [{\n            domain: {\n                x: {},\n                y: {},\n                radius: {}\n            }\n        }, {}];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            initializeGlobalState(this);\n            createUnitState(this);\n            createLayerState(this);\n            // Register listeners\n            setupChangeListeners(this);\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Return the instances of matrices created by the visual group.\n     *\n     * @return {Object} Instance of matrices.\n     */\n    matrixInstance (...matrices) {\n        if (matrices.length) {\n            return this;\n        }\n        return this.composition().matrices;\n    }\n\n    /**\n     * Returns the composition of visual group.\n     *\n     * @public\n     *\n     * @return {Object} Composition of visual group. It contains instance of matrices {@link ValueMatrix}\n     * and instances of axis.\n     * ```\n     *          {\n     *              matrices: {\n     *                  value: // Instance of center value matrix.\n     *                  left: // Instance of left value matrix\n     *                  right: // Instance of right value matrix\n     *                  bottom: // Instance of bottom value matrix\n     *                  top: // Instance of top value matrix.\n     *              },\n     *              axes: {\n     *                  x: // Array of x axis.\n     *                  y: // Array of y axis\n     *                  color: // Array of color axis\n     *                  shape: // Array of shape axis\n     *                  size: // Array of size axis.\n     *              }\n     *          }\n     * ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    /**\n     * Locks the model to prevent change listeners to be triggered until unlocked\n     *\n     * @return {Object} Instance of class VisualGroup\n     * @memberof VisualGroup\n     */\n    lockModel () {\n        this.store().model.lock();\n        return this;\n    }\n\n    /**\n     * Unlocks the model so that all change listeners can be triggered\n     *\n     * @return {Object} Instance of class VisualGroup\n     */\n    unlockModel () {\n        this.store().model.unlock();\n        return this;\n    }\n\n    /**\n     * Returns the channel name of the variable. Channels are rows, columns, color, shape and size.\n     *\n     * @public\n     * @param {string} variable Name of the variable.\n     *\n     * @return {string} Name of the channel.\n     */\n    where (variable) {\n        return findInGroup(variable, this.resolver().getAllFields());\n    }\n\n    /**\n     * Gets the axis instances of the visual group based on the given axis type.\n     *\n     * @public\n     * @param {string} type Type of axis. X,Y or retinal axes.\n     *\n     * @return {Array} Array of axis instances.\n     */\n    getAxes (type) {\n        if (type === RETINAL) {\n            return this.resolver().getRetinalAxes();\n        }\n        return this.resolver().getSimpleAxes(type);\n    }\n\n    /**\n     * Returns the instances of cells based on the given type. Type can be given as `row' or `col`.\n     *\n     * @public\n     * @return {Array} Two dimensional array of cells.\n     */\n    getCells (type) {\n        return this.resolver()[`${type}Cells`]();\n    }\n\n    getFieldsFromChannel (channel) {\n        const {\n            rowProjections,\n            colProjections\n        } = this.resolver().getAllFields();\n        return channel === Y ? rowProjections : colProjections;\n    }\n\n    getCellsByFacetKey (facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey] || [];\n        return cells;\n    }\n\n    getAxesByFacetKey (axisType, facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey];\n        const axes = cells[0].valueOf().axes()[axisType] || [];\n\n        return axes;\n    }\n\n    /**\n     * This method is used to return a serialized representation of the instance's properties.\n     *\n     * @return {Object} Object with config proprties.\n     * @memberof VisualGroup\n     */\n    serialize () {\n        const store = this.store();\n\n        return {\n            [CONFIG]: store.get(CONFIG),\n            [MOUNT]: store.get(MOUNT)\n        };\n    }\n\n    /**\n     * Returns the grouped datamodel prepared by visual group. If there is no group by performed, then it returns the\n     * original data model passed to visual group.\n     *\n     * @return {DataModel} Grouped data model.\n     */\n    getGroupByData () {\n        return this._groupedDataModel;\n    }\n\n    createMatrices () {\n        createMatrices(this);\n    }\n}\n\nexport default VisualGroup;\n","import { PersistentBehaviour, SELECTION } from '@chartshq/muze-firebolt';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return 'select';\n    }\n\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            // new add set\n            const existingRemoveSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_OLD_EXIT\n                || selectionSet._set[d] === SELECTION.SELECTION_NEW_EXIT);\n                // existing add set\n            if (existingRemoveSet.length) {\n                selectionSet.updateEntry();\n                selectionSet.add(existingRemoveSet);\n            } else {\n                selectionSet.updateExit();\n                selectionSet.remove(addSet);\n            }\n            const { exitSet } = selectionSet.getSets();\n            const mergedExitSet = [...new Set(exitSet[1]), ...new Set(exitSet[0])];\n            const completeSetCount = selectionSet.getCompleteSet().length;\n            if (exitSet[1].length !== completeSetCount && mergedExitSet.length === completeSetCount) {\n                selectionSet.reset();\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nconst CLASSPREFIX = 'muze';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        target: `.${CLASSPREFIX}-gradient-rect`,\n        behaviours: [BEHAVIOURS.BRUSH]\n    },\n    [ACTIONS.HOVER]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.CLICK]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.SELECT]\n    }\n};\n\nexport const propagationBehaviourMap = {\n    [BEHAVIOURS.SELECT]: BEHAVIOURS.FILTER,\n    [BEHAVIOURS.BRUSH]: BEHAVIOURS.HIGHLIGHT\n};\n","import * as BEHAVIOURS from '../enums/behaviours';\nimport * as sideEffects from '../enums/side-effects';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: [sideEffects.SELECTIONBOX, {\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [sideEffects.Highlighter],\n    select: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }]\n};\n\nexport const propagationSideEffects = {\n    [BEHAVIOURS.BRUSH]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.SELECT]: ['filter']\n};\n\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n\n","export const SELECTIONBOX = 'selectionBox';\nexport const Highlighter = 'highlighter';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const CONFIG = 'config';\nexport const DATAMODEL = 'dataModel';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const MAXWIDTH = 'max-width';\nexport const HEIGHT = 'height';\nexport const MOUNTPOINT = 'mountPoint';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const TRANSFORM = 'transform';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const DEFAULTCOLOR = '#F44336';\nexport const DEFAULTSIZE = 50;\nexport const DEFAULTSHAPE = 'circle';\nexport const STEP = 'step';\nexport const GRADIENT = 'gradient';\nexport const ORDINAL = 'ordinal';\nexport const SCALE_FUNCTIONS = {\n    size: 'getSize',\n    shape: 'getShape',\n    color: 'getColor'\n};\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nexport const CENTER = 'center';\nexport const VALUE = 'value';\nexport const PATH = 'path';\nexport const SHAPE = 'shape';\nexport const ICON = 'icon';\nexport const RECT = 'rect';\nexport const START = 'start';\nexport const UPPER = 'upper';\nexport const LOWER = 'lower';\nexport const END = 'end';\nexport const SIZE = 'size';\nexport const DISCRETE = 'discrete';\nexport const MEASURE = 'measure';\n\n","import { assembleModelFromIdentifiers, getDataModelFromRange } from 'muze-utils';\nimport { propagationBehaviourMap } from './action-behaviour-map';\nimport { propagationSideEffects } from './behaviour-effect-map';\nimport { STEP, GRADIENT, DISCRETE, MEASURE } from '../enums/constants';\n\nexport const propagate = (firebolt, action, selectionSet, config = {}) => {\n    let propagationData;\n    const type = firebolt.context.constructor.type();\n    const payload = config.payload;\n    const data = firebolt.context.data();\n    const metaData = firebolt.context.metaData();\n    const fieldType = metaData.getData().schema[0].type;\n\n    const propPayload = {};\n    const sourceId = firebolt.context._id;\n    propPayload.action = propagationBehaviourMap[action] || action;\n    propPayload.sideEffects = propagationSideEffects[action];\n    propPayload.sourceCanvas = firebolt.context.canvasAlias();\n    const isMutableAction = firebolt._actions.behavioural[propPayload.action].constructor.mutates();\n    if (payload.criteria === null) {\n        propagationData = null;\n    } else {\n        const entrySet = selectionSet.mergedEnter;\n        let values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.value);\n        if (type === STEP || (type === DISCRETE && fieldType === MEASURE)) {\n            const field = Object.keys(payload.criteria || {})[0];\n            values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.range);\n            propagationData = values.length ? metaData.select((fields) => {\n                let check = false;\n                for (let i = 0; i < values.length; i++) {\n                    check = fields[field].value >= values[i][0] && fields[field].value <= values[i][1];\n                    if (check === true) {\n                        break;\n                    }\n                }\n                return check;\n            }, {\n                saveChild: false\n            }) : null;\n        } else if (type === GRADIENT) {\n            propagationData = getDataModelFromRange(metaData, payload.criteria);\n        } else if (values.length) {\n            propagationData = assembleModelFromIdentifiers(metaData, [payload.criteria[0], ...values.map(d => [d])]);\n        } else {\n            propPayload.criteria = null;\n            propagationData = metaData.select(() => true, {\n                saveChild: false\n            });\n        }\n    }\n\n    let propagateInterpolatedValues = false;\n\n    if (propagationData) {\n        const schema = propagationData.getSchema();\n        propagateInterpolatedValues = schema.every(d => d.type === MEASURE);\n    }\n\n    const propConfig = {\n        sourceId: `legend-${sourceId}`,\n        payload: propPayload,\n        criteria: propPayload.criteria === null ? null : propagationData,\n        isMutableAction,\n        propagateInterpolatedValues,\n        action: propPayload.action\n    };\n\n    metaData.propagate(propagationData, propConfig, true);\n};\n","import { Firebolt } from '@chartshq/muze-firebolt';\nimport { propagate } from './helper';\nimport { STEP, GRADIENT } from '../enums/constants';\n\n/**\n * This class manages the interactions of legend.\n * @export\n * @class LegendFireBolt\n * @extends {Firebolt}\n */\nexport class LegendFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this.initializeSideEffects();\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet[0];\n    }\n\n    propagate (behaviourName, payload, selectionSet) {\n        propagate(this, behaviourName, selectionSet, {\n            payload\n        });\n    }\n\n    getAddSetFromCriteria (criteria) {\n        let values;\n        let uniqueIds;\n        const type = this.context.constructor.type();\n\n        if (criteria === null) {\n            uniqueIds = null;\n        } else if (type === STEP) {\n            values = Object.values(criteria);\n            uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n        } else if (type === GRADIENT) {\n            uniqueIds = [];\n        } else {\n            values = criteria[1];\n            if (values) {\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.value) !== -1).map(d => d.id);\n            } else {\n                values = Object.values(criteria);\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n            }\n        }\n        return {\n            uids: uniqueIds,\n            model: null\n        };\n    }\n\n    getFullData () {\n        return null;\n    }\n}\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\n/**\n * Adds dragging action to the target element.\n * @param {firebolt} firebolt firebolt\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let endPos = {};\n    let payload;\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const boundingBox = context.measurement().gradientDimensions;\n    const axisType = context.config().align === 'horizontal' ? 'x' : 'y';\n    const axisScale = context.axis().source().scale();\n    const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n    }).on('drag', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                    axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n            }\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }).on('end', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n        if (startPos[axisType] === endPos[axisType]) {\n            payload = {\n                criteria: {}\n            };\n        } else {\n            payload = {\n                criteria: {\n                    [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                        axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n                }\n            };\n        }\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }));\n};\n\nexport default drag;\n","import { getEvent } from 'muze-utils';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} Firebolt instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        const event = getEvent();\n                        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, {\n                            criteria: null\n                        }));\n                        event.stopPropagation();\n                    });\n};\n\nexport default hover;\n","/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nconst click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\n\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport click from './click';\nimport * as ACTIONNAMES from '../../enums/actions';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click\n};\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\n","import {\n    getMousePos,\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\nimport { HEIGHT, WIDTH, HORIZONTAL } from '../../enums/constants';\n\nconst getSelectionCriteria = (subject, axis, measures) => {\n    let criteria = [];\n    const {\n        axisScale,\n        axisType\n    } = axis;\n    const {\n        startPos,\n        endPos,\n        selectionBoxMeasure,\n        drawingInfMeasure,\n        offset\n    } = measures;\n    const subjectStartPoint = subject[axisType];\n\n    if (startPos[axisType] === endPos[axisType]) {\n        criteria = [];\n    } else if (subjectStartPoint + selectionBoxMeasure >= drawingInfMeasure + offset) {\n        criteria = [axisScale.invert(drawingInfMeasure + offset - selectionBoxMeasure),\n            axisScale.invert(drawingInfMeasure + offset)];\n    } else if (subjectStartPoint - offset < offset) {\n        criteria = [axisScale.invert(offset * 2), axisScale.invert(selectionBoxMeasure + offset * 2)];\n    } else {\n        criteria = [axisScale.invert(subjectStartPoint), axisScale.invert(subjectStartPoint + selectionBoxMeasure)];\n    }\n    axisType === 'x' ? criteria : criteria.reverse();\n    return criteria;\n};\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let payload;\n    const endPos = {};\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const axisScale = context.axis().source().scale();\n    const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n    const drawingInfMeasure = context.measurement().gradientDimensions[axisType === 'x' ?\n        WIDTH : HEIGHT];\n    const offset = axisScale.range()[axisType === 'x' ? 0 : 1];\n    const measures = {\n        drawingInfMeasure,\n        offset\n    };\n    let subject = {};\n\n    targetEl.call(d3Drag().on('start', function () {\n        const event = getEvent();\n        startPos = getMousePos(this, event.sourceEvent);\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n\n        subject.x += event.dx;\n        subject.y += event.dy;\n\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(subject, { axisScale, axisType }, measures);\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }).on('end', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(event, { axisScale, axisType }, measures);\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true,\n            config: {\n                transition: {\n                    duration: 200\n                }\n            }\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }));\n};\n\n","import { makeElement } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { CLASSPREFIX, HEIGHT, WIDTH, HORIZONTAL, RECT } from '../../../enums/constants';\nimport { SELECTIONBOX } from '../../../enums/side-effects';\nimport { selectionBoxDrag } from '../../physical/selection-box-drag';\nimport './styles.scss';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\n/* istanbul ignore next */ class SelectionBox extends SpawnableSideEffect {\n    static formalName () {\n        return SELECTIONBOX;\n    }\n\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            className: 'legend-selection-box',\n            classPrefix: CLASSPREFIX\n        };\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     */\n    /* istanbul ignore next */ apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const firebolt = this.firebolt;\n        const context = firebolt.context;\n        const config = this.config();\n        const axis = context.axis().source();\n        const className = `${config.classPrefix}-${config.className}`;\n\n        const domain = payload.criteria[firebolt.context.fieldName()];\n        const axisScale = axis.scale();\n        const range = domain ? [axis.getScaleValue(domain[0]), axis.getScaleValue(domain[1])] : [];\n\n        const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n\n        const gradientDimension = firebolt.context.measurement().gradientDimensions[axisType === 'x' ?\n            HEIGHT : WIDTH];\n\n        const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n        const legendGradContainer = context.getDrawingContext().svgContainer;\n        const legendSelGroup = makeElement(legendGradContainer, 'g', [1], `${config.classPrefix}-selection-box-group`);\n\n        if (firebolt.context.config().align === HORIZONTAL) {\n            x = range[0] - rangeShifter || 0;\n            y = 0;\n            width = range[1] - range[0] || 0;\n            height = gradientDimension;\n        } else {\n            x = 0;\n            y = range[1] - rangeShifter || 0;\n            height = range[0] - range[1] || 0;\n            width = gradientDimension;\n        }\n        const enterFn = function (el) {\n            selectionBoxDrag(firebolt)(el, ['brush']);\n        };\n        const selBox = makeElement(legendSelGroup, RECT, [{ domain, x, y, width, height }], className,\n            { enter: enterFn });\n        selBox.attr('y', y)\n                        .attr('x', x)\n                        .attr(WIDTH, width)\n                        .attr(HEIGHT, height);\n    }\n}\n\nexport default SelectionBox;\n\n","import { selectElement } from 'muze-utils';\n\nexport const strategies = (firebolt) => {\n    const context = firebolt.context;\n    const classed = (set, className, change) => {\n        const classPrefix = context.config().classPrefix;\n        selectElement(context.mount())\n                        .selectAll(`.${classPrefix}-legend-columns`)\n                        .filter(d => set.uids.indexOf(d.id) !== -1)\n                        .selectAll('div')\n                        .classed(className, change);\n    };\n\n    return {\n        fade: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-fadeout`, false);\n            } else {\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-fadeout`, true);\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-fadeout`, false);\n            }\n        },\n        brighten: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-brighten`, false);\n            } else {\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-brighten`, true);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n            }\n        }\n    };\n};\n","import { GenericSideEffect } from '@chartshq/muze-firebolt';\nimport { strategies } from './strategies';\nimport { Highlighter } from '../../../enums/side-effects';\n\nexport default class LegendHighlighter extends GenericSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategies = strategies(this.firebolt);\n        this._strategy = 'brighten';\n    }\n\n    static formalName () {\n        return Highlighter;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    data: {},\n    fieldName: {},\n    legendContainer: {},\n    measurement: {\n        sanitization: (context, value) => {\n            const measurement = mergeRecursive(context._measurement, value);\n            ['padding', 'border', 'margin'].forEach((space) => {\n                measurement[space] = Math.min(measurement[space] > 0 ? measurement[space] : 0,\n                     measurement.maxWidth * 0.1, measurement.maxHeight * 0.1);\n            });\n            return measurement;\n        }\n    },\n    logicalSpace: {},\n    metaData: {},\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.resetLogicalSpace();\n            context.store().commit('range', value);\n            return value;\n        }\n    },\n    scale: {},\n    smartTicks: {},\n    store: {},\n    title: {\n        sanitization: (context, value) => mergeRecursive(context._title || {}, value)\n    },\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import { getSymbol } from 'muze-utils';\nimport {\n    CENTER,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\nexport const ALIGN = {\n    HORIZONTAL: 'horizontal',\n    VERTICAL: 'vertical'\n};\n\nexport const DEFAULT_MEASUREMENT = {\n    height: 30,\n    width: 30,\n    maxWidth: Infinity,\n    maxHeight: Infinity,\n    padding: 2,\n    margin: 2,\n    border: 1\n};\n\nexport const LEGEND_TITLE = {\n    text: '',\n    orientation: (pos) => {\n        if (pos === LEFT || pos === RIGHT) {\n            return LEFT;\n        } return CENTER;\n    }\n};\n\nexport const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    borderStyle: 'solid',\n    borderColor: 'rgba(0,0,0,0)',\n    formatter: {\n        bounds: {\n            lower: 'less than',\n            upper: 'more than'\n        }\n    },\n    item: {\n        text: {\n            orientation: 'right',\n            width: 10,\n            formatter: (val, i, data, context) => context.valueParser()(val)\n        },\n        icon: {\n            className: 'legend-icon',\n            height: 20,\n            width: 20,\n            color: 'rgba(0,0,0,.5)',\n            type: 'square'\n        }\n    }\n};\n\n/**\n * Creates a map of pre defined icons\n *\n * @param {string} icon Accepts a icon name like 'square', 'cross', 'diamond' etc\n * @return {Object} icon object which can be used to draw the icons\n */\nexport const ICON_MAP = (icon) => {\n    if (icon && typeof (icon) === 'string') {\n        return getSymbol(icon);\n    } return icon;\n};\n","import { makeElement, numberInterpolator } from 'muze-utils';\n\nimport {\n    SCALE_FUNCTIONS,\n    WIDTH,\n    HEIGHT,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    MAXWIDTH\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} scale\n *\n */\nexport const getScaleInfo = (scale) => {\n    const scaleType = scale.constructor.type();\n    const domain = scale.uniqueValues();\n    const steps = scale.config().stops || 1;\n    const scaleFn = SCALE_FUNCTIONS[scaleType];\n\n    return { scaleType, domain, steps, scaleFn };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} steps\n *\n */\nexport const getInterpolatedData = (domain, steps) => {\n    const domainForLegend = [];\n    const interpolatedFn = numberInterpolator()(domain[0], domain[1]);\n\n    for (let i = 0; i <= steps; i++) {\n        domainForLegend[i] = interpolatedFn(i / steps);\n    }\n    return domainForLegend;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} text\n * @param {*} measurement\n * @param {*} classPrefix\n */\nexport const titleCreator = (container, title, measurement, config) => {\n    const titleWidth = Math.min(measurement.maxWidth, measurement.width);\n\n    const titleContainer = makeElement(container, 'table', [1], `${config.classPrefix}-legend-title`)\n            .style(WIDTH, `${titleWidth}px`)\n            .style(HEIGHT, `${measurement.height}px`)\n            .style('border-bottom', `${measurement.border}px ${config.borderStyle} ${config.borderColor}`)\n            .style('text-align', title.orientation instanceof Function ?\n            title.orientation(config.position) : title.orientation);\n    return makeElement(titleContainer, 'td', [1], `${config.classPrefix}-legend-title-text`)\n                    .style(WIDTH, `${titleWidth}px`)\n                    .style(MAXWIDTH, `${titleWidth}px`)\n                    .style(HEIGHT, '100%')\n                    .style('line-height', 1)\n                    .style('padding', `${measurement.padding}px`)\n                    .text(title.text)\n                    .style('overflow-x', 'scroll')\n                    .node();\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getMaxMeasures = (data, prop, labelManager) => {\n    let maxHeight = -Infinity;\n    let maxWidth = -Infinity;\n\n    data.forEach((item) => {\n        const value = prop ? item[prop] : item;\n        const space = labelManager.getOriSize(value);\n        maxHeight = Math.max(space.height + 2, maxHeight);\n        maxWidth = Math.max(space.width + 2, maxWidth);\n    });\n\n    return { height: maxHeight, width: maxWidth };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getItemMeasures = (context, prop, formatter) => {\n    const space = [];\n    const data = context.data();\n    const labelManager = context._labelManager;\n\n    data.forEach((item, index) => {\n        const value = prop ? item[prop] : item;\n        const { height, width } = labelManager.getOriSize(formatter(value, index, data, context));\n        space[index] = { height: height + 1, width: width + 1 };\n    });\n    return space;\n};\n\n/**\n *\n *\n * @param {*} textOrientation\n * @param {*} effPadding\n * @param {*} titleSpace\n *\n * @memberof Legend\n */\nexport const computeItemSpaces = (config, measures, data) => {\n    let totalHeight = 0;\n    let totalWidth = 0;\n    let maxItemSpaces = {\n        width: 0, height: 0\n    };\n    const {\n        effPadding,\n        titleWidth,\n        labelSpaces,\n        titleHeight,\n        maxWidth\n    } = measures;\n    const {\n        item,\n        align\n    } = config;\n    const {\n        icon,\n        text\n    } = item;\n    const textOrientation = text.orientation;\n    const itemSpaces = [];\n    const iconSpaces = [];\n    let maxIconWidth = 0;\n    labelSpaces.forEach((labelSpace, i) => {\n        const itemSpace = { width: 0, height: 0 };\n        const iconSpace = { width: 0, height: 0 };\n        const datum = data[i] || {};\n            // Compute each legend item height/width\n        if (textOrientation === LEFT || textOrientation === RIGHT) {\n            // Get label, icon and item widths\n            labelSpace.width += effPadding;\n            iconSpace.width = (datum.size ? 2 * Math.sqrt(datum.size / Math.PI) : icon.width) + effPadding;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n            itemSpace.width = labelSpace.width + maxIconWidth;\n\n            // Get label, icon and item heights\n            labelSpace.height = Math.max(labelSpace.height, icon.height) + effPadding;\n            iconSpace.height = labelSpace.height;\n            itemSpace.height = labelSpace.height;\n        } else {\n            // Get label, icon and item widths\n            labelSpace.width = Math.max(labelSpace.width, datum.size ? 2 * Math.sqrt(datum.size / Math.PI)\n            : icon.width) + effPadding;\n            iconSpace.width = labelSpace.width;\n            itemSpace.width = labelSpace.width;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n\n            // Get label, icon and item heights\n            labelSpace.height += effPadding;\n            iconSpace.height = icon.height + effPadding;\n            itemSpace.height = labelSpace.height + iconSpace.height;\n        }\n        // Compute height and width of legend for each alignment\n        if (align === 'horizontal') {\n            totalHeight = Math.max(totalHeight, itemSpace.height);\n        } else {\n            totalHeight += itemSpace.height;\n            totalWidth = Math.max(totalWidth, itemSpace.width, titleWidth) + effPadding;\n        }\n        maxItemSpaces = {\n            width: Math.max(itemSpace.width, maxItemSpaces.width),\n            height: Math.max(itemSpace.height, maxItemSpaces.height)\n        };\n        itemSpaces.push(itemSpace);\n        iconSpaces.push(iconSpace);\n    });\n    itemSpaces.forEach((itemSpace, i) => {\n        if (align === 'horizontal') {\n            itemSpace.height = totalHeight;\n            iconSpaces[i].width = maxIconWidth;\n            if (textOrientation === LEFT || textOrientation === RIGHT) {\n                labelSpaces[i].height = totalHeight;\n                iconSpaces[i].height = totalHeight;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n            } else {\n                labelSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = maxIconWidth;\n                labelSpaces[i].width = maxIconWidth;\n            }\n            totalWidth = Math.max(totalWidth + itemSpaces[i].width);\n        } else {\n            itemSpace.width = Math.max(totalWidth, maxWidth);\n            if (textOrientation === TOP || textOrientation === BOTTOM) {\n                labelSpaces[i].width = totalWidth;\n                iconSpaces[i].width = totalWidth;\n                maxIconWidth = totalWidth;\n            } else {\n                const labelWidth = labelSpaces[i].width;\n                const newLabelWidth = (maxItemSpaces.width - maxIconWidth);\n                iconSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n                labelSpaces[i].width = Math.max(labelWidth, newLabelWidth);\n                totalWidth = Math.max(totalWidth, itemSpace.width) + effPadding;\n            }\n        }\n    });\n    totalWidth = Math.max(totalWidth, titleWidth);\n    totalHeight += titleHeight + effPadding;\n    return { totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth };\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} scaleInfo\n * @param {*} domainInfo\n *\n */\nexport const getDomainBounds = (type, scaleInfo, domainInfo) => {\n    const {\n        scaleFn,\n        scaleType,\n        scale\n    } = scaleInfo;\n    const {\n        domain,\n        domainBounds,\n        domainLeg,\n        steps\n    } = domainInfo;\n    const ele = domain[type === 'lower' ? 0 : domain.length - 1];\n    const step = steps[type === 'lower' ? 0 : steps.length - 1];\n\n    return {\n        [scaleType]: scaleType === 'size' ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n        value: domainBounds[type],\n        id: type === 'lower' ? 0 : domainLeg.length + 2,\n        range: [ele, step]\n    };\n};\n","import {\n    makeElement,\n    selectElement,\n    getUniqueId,\n    getSmartComputedStyle,\n    generateGetterSetters,\n    mergeRecursive\n} from 'muze-utils';\nimport { behaviouralActions } from '@chartshq/muze-firebolt';\nimport * as legendBehaviours from '../firebolt/behavioural';\n\nimport { LegendFireBolt } from '../firebolt/legend-firebolt';\nimport { actionBehaviourMap } from '../firebolt/action-behaviour-map';\nimport { physicalActions } from '../firebolt/physical';\nimport * as sideEffects from '../firebolt/side-effects';\nimport { behaviourEffectMap } from '../firebolt/behaviour-effect-map';\nimport { VALUE, PATH, RIGHT, LEFT, TOP, BOTTOM } from '../enums/constants';\nimport { PROPS } from './props';\nimport { DEFAULT_MEASUREMENT, DEFAULT_CONFIG, LEGEND_TITLE } from './defaults';\nimport { getItemMeasures, titleCreator, computeItemSpaces } from './legend-helper';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class SimpleLegend\n */\nexport default class SimpleLegend {\n\n    /**\n     * Creates an instance of Legend.\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @memberof Legend\n     */\n    constructor (dependencies) {\n        this._data = [];\n        this._metaData = [];\n        this._mount = null;\n        this._fieldName = null;\n        this._title = Object.assign({}, LEGEND_TITLE);\n        this._metaData = null;\n        this._labelManager = dependencies.labelManager;\n        this._cells = dependencies.cells;\n        this._id = getUniqueId();\n        this._measurement = Object.assign({}, this.constructor.defaultMeasurement());\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n\n        generateGetterSetters(this, PROPS);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'),\n            `${this.config().classPrefix}-legend-item-info`);\n\n        this._firebolt = new LegendFireBolt(this, {\n            behavioural: Object.assign({}, behaviouralActions, legendBehaviours),\n            physical: physicalActions,\n            physicalBehaviouralMap: actionBehaviourMap\n        }, sideEffects, behaviourEffectMap);\n    }\n\n    id () {\n        return this._id;\n    }\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new SimpleLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENT;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleLegend\n     */\n    firebolt (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return PATH;\n    }\n\n    canvasAlias (...alias) {\n        if (alias.length) {\n            this._canvasAlias = alias[0];\n            return this;\n        }\n        return this._canvasAlias;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    mount (...params) {\n        if (params.length) {\n            this._mount = params[0];\n            this.render();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces () {\n        const {\n            item,\n            classPrefix\n        } = this.config();\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n            `${classPrefix}-legend-item-info`));\n        return getItemMeasures(this, VALUE, item.text.formatter);\n    }\n\n    /**\n     * Sets the height and width of a legend based on provided max\n     * height and width and based on its contents\n     *\n     * @return {Instance} Current instance\n     * @memberof Legend\n     */\n    setLegendMeasures () {\n        const {\n            width,\n            height,\n            maxWidth,\n            maxHeight,\n            padding,\n            margin,\n            border\n        } = this.measurement();\n        const {\n            align\n        } = this.config();\n\n        // Effective padding, margin and padding\n        const effPadding = padding * 2;\n        const effBorder = border * 2;\n        const effMargin = margin * 2;\n\n        this.data(this.dataFromScale(this.scale()));\n        // Get space occupied by title\n        const titleSpace = this.getTitleSpace();\n        const titleHeight = titleSpace.height > 0 ? titleSpace.height + effPadding : 0;\n        const titleWidth = titleSpace.width + effPadding;\n\n        // Get space occupied by labels\n        const labelSpaces = this.getLabelSpaces(effPadding, align);\n        const {\n            totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth\n        } = computeItemSpaces(this.config(),\n        { effPadding, titleWidth, labelSpaces, titleHeight, maxWidth, maxHeight }, this.data());\n\n        this.measurement({\n            width: Math.max(totalWidth, width) + effMargin + effBorder,\n            height: Math.max(totalHeight, height) + effMargin + effBorder,\n            labelSpaces,\n            iconSpaces,\n            itemSpaces,\n            maxItemSpaces,\n            maxIconWidth,\n            titleSpaces: {\n                width: Math.min(maxWidth, this.measurement().width) - effMargin - effBorder,\n                height: titleHeight\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Returns the space occupied by the legend title\n     *\n     * @return {Object} Space occupied by title\n     * @memberof Legend\n     */\n    getTitleSpace () {\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n                                                `${this.config().classPrefix}-legend-title`));\n        return this._labelManager.getOriSize(this.title().text ? this.title().text : '');\n    }\n\n    /**\n     * Creates the title for the legend\n     *\n     * @param {DOM} container Container made for the title\n     * @return {Selection} Title and it's node\n     * @memberof Legend\n     */\n    renderTitle (container) {\n        const { titleSpaces, border, padding, width, maxWidth } = this.measurement();\n        const { borderStyle, borderColor } = this.config();\n        return titleCreator(container, this.title(), {\n            height: titleSpaces.height,\n            width,\n            maxWidth,\n            border,\n            padding,\n            borderStyle,\n            borderColor\n        }, this.config());\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const {\n            classPrefix,\n            borderStyle,\n            borderColor,\n            position\n        } = this.config();\n        const {\n            maxWidth,\n            maxHeight,\n            width,\n            height,\n            margin,\n            border\n        } = this.measurement();\n        const legendContainer = makeElement(selectElement(this.mount()), 'div', [1], `${classPrefix}-legend-box`);\n        let marginPosition;\n        switch (position) {\n        case TOP:\n            marginPosition = `margin-${BOTTOM}`;\n            break;\n        case LEFT:\n            marginPosition = `margin-${RIGHT}`;\n            break;\n        case BOTTOM:\n            marginPosition = `margin-${TOP}`;\n            break;\n        default:\n            marginPosition = `margin-${LEFT}`;\n        }\n        legendContainer.classed(`${classPrefix}-legend-box-${this._id}`, true);\n        legendContainer.style('float', 'left');\n        // set height and width\n        legendContainer.style('width', `${Math.min(maxWidth, width) - margin * 2}px`)\n                        .style('height', `${Math.min(maxHeight, height) - margin * 2}px`)\n                        .style(`${marginPosition}`, `${margin}px`)\n                        .style('border', `${border}px ${borderStyle} ${borderColor}`);\n        this.legendContainer(legendContainer.node());\n\n        // create title\n        this.renderTitle(legendContainer);\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n  /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        const type = this.metaData().getData().schema[0].type;\n        if (type === 'measure') {\n            return {\n                [fieldName]: data.range\n            };\n        }\n        return [[fieldName], [data.value]];\n    }\n}\n","import {\n    LEFT,\n    RIGHT,\n    START,\n    END,\n    TOP,\n    BOTTOM,\n    HORIZONTAL,\n    VERTICAL,\n    CENTER,\n    SHAPE,\n    VALUE\n} from '../enums/constants';\n\nconst legendOrientation = {\n    [HORIZONTAL]: {\n        datasets: data => ({\n            row: [1],\n            column: data\n        }),\n        itemContainerMeasures: (measurement) => {\n            const {\n                itemSpaces,\n                width\n            } = measurement;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                },\n                column: {\n                    width: (d, i) => `${itemSpaces[i].width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, height } = measurement;\n            return {\n                iconHeight: height,\n                iconWidth: maxItemSpaces.width,\n                stepPadding: {\n                    horizontal: true,\n                    vertical: false\n                }\n            };\n        }\n    },\n    [VERTICAL]: {\n        datasets: data => ({\n            row: data,\n            column: d => [d]\n        }),\n        itemContainerMeasures: (measurement, config) => {\n            const {\n                width\n            } = measurement;\n            const { padding } = config;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${padding}px`\n                },\n                column: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, width } = measurement;\n            return {\n                iconHeight: maxItemSpaces.height,\n                iconWidth: width,\n                stepPadding: {\n                    horizontal: false,\n                    vertical: true\n                }\n            };\n        }\n    }\n};\n\nexport const positionConfig = {\n    [LEFT]: legendOrientation[VERTICAL],\n    [RIGHT]: legendOrientation[VERTICAL],\n    [TOP]: legendOrientation[HORIZONTAL],\n    [BOTTOM]: legendOrientation[HORIZONTAL]\n};\n\nexport const alignmentMap = {\n    [LEFT]: END,\n    [RIGHT]: START,\n    [TOP]: CENTER,\n    [BOTTOM]: CENTER\n};\n\n// Reverses data for step legend\nexport const stepData = data => ({\n    [LEFT]: data.reverse(),\n    [RIGHT]: data.reverse(),\n    [TOP]: data,\n    [BOTTOM]: data\n});\n\n// Changes the item layout based on the position of the text\nexport const itemStack = {\n    [LEFT]: [VALUE, SHAPE],\n    [RIGHT]: [SHAPE, VALUE],\n    [TOP]: [VALUE, SHAPE],\n    [BOTTOM]: [SHAPE, VALUE]\n};\n","import { makeElement, selectElement, applyStyle } from 'muze-utils';\nimport { ICON_MAP } from './defaults';\nimport { positionConfig, alignmentMap, itemStack } from './position-config';\nimport {\n    WIDTH,\n    HEIGHT,\n    CENTER,\n    VALUE,\n    RECT,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} legendInstance\n * @param {*} align\n *\n */\nexport const getItemContainers = (container, data, legendInstance) => {\n    const measurement = legendInstance.measurement();\n    const config = legendInstance.config();\n    const {\n        itemSpaces\n    } = measurement;\n    const {\n        classPrefix,\n        position\n    } = config;\n    const positionObj = positionConfig[position];\n    const datasets = positionObj.datasets(data);\n    const measures = positionObj.itemContainerMeasures(measurement, config);\n\n    const rows = makeElement(container, 'div', datasets.row, `${classPrefix}-legend-row`);\n    rows.style(HEIGHT, (d, i) => `${itemSpaces[i].height}px`);\n    rows.style(WIDTH, measures.row.width);\n    rows.style('padding', measures.row.padding);\n\n    const columns = makeElement(rows, 'div', datasets.column, `${classPrefix}-legend-columns`);\n    columns.style(WIDTH, measures.column.width);\n    columns.style('padding', measures.column.padding);\n\n    return columns;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} classPrefix\n * @param {*} data\n *\n * @memberof DiscreteLegend\n */\nexport const createLegendSkeleton = (context, container, classPrefix, data) => {\n    let gradWidth = 0;\n    let gradHeight = 0;\n    let maxGradHeight = 0;\n    let maxGradWidth = 0;\n    const measurement = context.measurement();\n    const {\n            margin,\n            border,\n            titleSpaces,\n            width,\n            height,\n            maxWidth,\n            maxHeight\n        } = measurement;\n\n    gradHeight = height - (titleSpaces.height + 2 * margin + 2 * border);\n    gradWidth = width - (margin * 2 + border * 2);\n\n    maxGradHeight = maxHeight - (titleSpaces.height + margin * 2 + border * 2);\n    maxGradWidth = maxWidth - (margin * 2 + border * 2);\n\n    let legendBody = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    legendBody.select(`.${classPrefix}-legend-overflow`).remove();\n        // Create a div with scroll when overflow\n    if (maxGradWidth && maxGradWidth < gradWidth) {\n        legendBody = legendBody.style(WIDTH, `${maxGradWidth}px`).style('overflow-x', 'scroll');\n    }\n        // Create a div with scroll when overflow\n    if (maxGradHeight && maxGradHeight < gradHeight) {\n        legendBody.style(HEIGHT, `${maxGradHeight}px`).style('overflow-y', 'scroll');\n    }\n\n    legendBody = makeElement(legendBody, 'div', [1], `${classPrefix}-legend-overflow`);\n\n    legendBody.style(WIDTH, `${gradWidth}px`);\n    legendBody.style(HEIGHT, `${gradHeight}px`);\n\n    const legendItem = getItemContainers(legendBody, data, context);\n    return { legendItem };\n};\n\n/**\n * Creates legend item based on alignment and text orientation\n *\n * @param {Selection} container Point where items are to be mounted\n * @return {Instance} Current instance\n * @memberof Legend\n */\nexport const createItemSkeleton = (context, container) => {\n    const {\n        classPrefix,\n        item\n    } = context.config();\n    const textOrientation = item.text.orientation;\n\n    const stack = itemStack[textOrientation];\n    const itemSkeleton = makeElement(container, 'div', (d, i) => stack.map(e => [e, d[e], d.color, d.size,\n        d.value, context.fieldName(), i]), `${classPrefix}-legend-item-info`);\n\n    const alignClass = alignmentMap[textOrientation];\n\n    itemSkeleton.classed(alignClass, true);\n    return { itemSkeleton };\n};\n\n/**\n *\n *\n * @param {*} measureType\n * @param {*} stepColorCheck\n */\nexport const applyItemStyle = (item, measureType, stepColorCheck, context) => {\n    const {\n        padding,\n        labelSpaces,\n        iconSpaces,\n        maxIconWidth\n    } = context.measurement();\n    const diff = stepColorCheck ? -padding * 2 : 0;\n\n    if (item[0] === VALUE) {\n        return `${labelSpaces[item[6]][measureType]}px`;\n    }\n    return `${measureType === 'width' && !stepColorCheck ? maxIconWidth : iconSpaces[item[6]][measureType] - diff}px`;\n};\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem, defaultIcon, width, height) {\n    const groupElement = elem;\n    // const { shape, size, update } = d;\n    const size = d[3] || Math.min(width, height) * Math.PI;\n    const shape = d[1] || defaultIcon;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            return createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        shapeElement.attr('transform', `scale(${size / 100})`);\n        return selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = ICON_MAP(shape).size(size)();\n        }\n        return makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    }\n    d[1] = 'circle';\n    return createShape(d, elem, 'circle');\n};\n\n/**\n * Returns the icon of the legend item\n *\n * @param {Object} datum Data property attached to the item\n * @param {number} width width of the item\n * @param {number} height height of the item\n * @return {Object|string} returns the path string or the string name of the icon\n * @memberof Legend\n */\nexport const getLegendIcon = (datum, width, height, defaultIcon) => {\n    const icon = ICON_MAP(datum[1]);\n\n    if (icon) {\n        return icon.size(datum[3] || Math.min(width, height) * Math.PI);\n    }\n    return ICON_MAP(datum[3] ? 'circle' : defaultIcon).size(datum[3] || Math.min(width, height) * Math.PI);\n};\n\n/**\n *\n *\n */\nexport const renderIcon = (icon, container, datum, context) => {\n    const {\n        classPrefix,\n        iconHeight,\n        iconWidth,\n        maxIconWidth,\n        padding,\n        color\n    } = context;\n    const svg = makeElement(container, 'svg', f => [f], `${classPrefix}-legend-icon-svg`)\n    .attr(WIDTH, maxIconWidth)\n    .attr(HEIGHT, iconHeight)\n    .style(WIDTH, `${maxIconWidth}px`)\n    .style(HEIGHT, `${iconHeight}px`);\n\n    if (icon !== RECT) {\n        const group = makeElement(svg, 'g', [datum[1]], `${classPrefix}-legend-icon`);\n        createShape(datum, group, datum[3] ? 'circle' : 'square', iconWidth, iconHeight)\n                        .attr('transform', `translate(${maxIconWidth / 2 - padding} ${iconHeight / 2})`)\n                        .attr('fill', datum[2] || color);\n    } else {\n        makeElement(svg, RECT, [datum[1]], `${classPrefix}-legend-icon`)\n                        .attr('x', 0)\n                        .attr('y', 0)\n                        .attr(WIDTH, maxIconWidth)\n                        .attr(HEIGHT, iconHeight)\n                        .attr('fill', datum[2] || color);\n    }\n};\n\n/**\n * Renders the items in the legend i.e, icon and text\n *\n * @param {DOM} container Point where item is to be mounted\n * @memberof Legend\n */\nexport const renderDiscreteItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n           item,\n           classPrefix\n    } = context.config();\n    const {\n        maxIconWidth,\n        padding\n    } = context.measurement();\n    const {\n            width: iconWidth,\n            height: iconHeight,\n            color,\n            className\n        } = item.icon;\n\n    const textOrientation = item.text.orientation;\n    const formatter = item.text.formatter;\n\n    labelManager.useEllipsesOnOverflow(true);\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, false, context),\n        height: d => applyItemStyle(d, HEIGHT, false, context),\n        'text-align': CENTER,\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context))\n                            .style(`padding-${textOrientation === RIGHT ? LEFT : RIGHT}`, '0px');\n        } else {\n            // const icon = getLegendIcon(d, iconWidth, iconHeight, type);\n            selectElement(this).classed(`${classPrefix}-${className}`, true);\n            selectElement(this).classed(`${classPrefix}-${className}-${i}`, true);\n            renderIcon('circle', selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                // iconWidth: 2 * Math.sqrt(d[3] / Math.PI) || iconWidth,\n                iconHeight,\n                maxIconWidth,\n                padding,\n                color\n            });\n        }\n    });\n};\n\n/**\n* Renders the items in the legend i.e, icon and text\n*\n* @param {DOM} container Point where item is to be mounted\n* @memberof Legend\n*/\nexport const renderStepItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n      item,\n      position,\n      classPrefix\n   } = context.config();\n    const {\n      maxItemSpaces,\n      maxIconWidth,\n      padding\n   } = context.measurement();\n    const {\n       width,\n       height,\n       color\n   } = item.icon;\n    const {\n        formatter\n   } = item.text;\n\n    labelManager.useEllipsesOnOverflow(true);\n    const { iconHeight, iconWidth, stepPadding } = positionConfig[position].getStepSpacesInfo({\n        maxItemSpaces, height, width\n    });\n\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, stepPadding.horizontal, context),\n        height: d => applyItemStyle(d, HEIGHT, stepPadding.vertical, context),\n        'text-align': 'center',\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context));\n        } else {\n            renderIcon(RECT, selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                iconHeight,\n                maxIconWidth,\n                color\n            });\n        }\n    });\n};\n","import {\n    FieldType,\n    DimensionSubtype,\n    formatTemporal\n} from 'muze-utils';\nimport SimpleLegend from './simple-legend';\nimport { DISCRETE, LEFT, SIZE } from '../enums/constants';\nimport { getScaleInfo } from './legend-helper';\nimport { createLegendSkeleton, createItemSkeleton, renderDiscreteItem } from './renderer';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class DiscreteLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new DiscreteLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof DiscreteLegend\n     */\n    static type () {\n        return DISCRETE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof DiscreteLegend\n     */\n    dataFromScale (scale) {\n        const { scaleType, domain, scaleFn } = getScaleInfo(scale);\n        let domainForLegend = [...new Set(domain)];\n        const field = this.metaData().getFieldspace().fields[0];\n        const { type, subtype } = field.schema();\n\n        domainForLegend = domainForLegend.map((ele, i) => {\n            let value = 0;\n            let range = 0;\n            if (type === FieldType.MEASURE) {\n                value = (+domainForLegend[i]).toFixed(0);\n                const nextVal = domainForLegend[i + 1] ? +domainForLegend[i + 1] : +value;\n                range = [value, nextVal.toFixed(0)];\n            } else {\n                let domainVal = domainForLegend[i];\n                if (subtype === DimensionSubtype.TEMPORAL) {\n                    domainVal = formatTemporal(domainForLegend[i], field.minimumConsecutiveDifference());\n                }\n                value = domainVal;\n                range = [domainVal];\n            }\n            return {\n                [scaleType]: scale[scaleFn](ele),\n                value,\n                id: i,\n                range\n            };\n        }).filter(d => d.value !== null);\n\n        domainForLegend = scaleType === SIZE ? domainForLegend.sort((a, b) => a[scaleType] - b[scaleType])\n            : domainForLegend;\n        return domainForLegend;\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const data = this.data();\n        const { classPrefix } = this.config();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n        renderDiscreteItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n}\n","import { makeElement, applyStyle } from 'muze-utils';\nimport { ContinousAxis } from '@chartshq/muze-axis';\nimport { BOTTOM, RIGHT } from '../enums/constants';\nimport { ALIGN } from './defaults';\nimport '../styles.scss';\n\n/**\n *\n *\n * @param {*} data\n *\n */\nexport const getGradientDomain = (data) => {\n    if (typeof data[0].value === 'number') {\n        return data.reduce((accumulator, currentValue) =>\n            [Math.min(currentValue.value, accumulator[0]), Math.max(currentValue.value, accumulator[1])],\n                [Number.MAX_VALUE, Number.MIN_VALUE]);\n    }\n    return data.map(e => e.value);\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} domain\n *\n */\nexport const makeLinearGradient = (container, data, domain) => {\n    const defs = makeElement(container, 'defs', [1]);\n    const linearGradient = makeElement(defs, 'linearGradient', [1])\n                .attr('id', 'linear-gradient')\n                .attr('x1', '0%')\n                .attr('y2', '0%');\n    makeElement(linearGradient, 'stop', data, 'stop-gradient')\n                    .attr('offset', d => `${(d.value - domain[0]) * 100 / (domain[1] - domain[0])}%`)\n                    .attr('stop-color', d => d.color);\n    return linearGradient;\n};\n\n/**\n * Creates an axis cell with a linear axis for computing space and\n * creating gradient legend\n *\n * @return {AxisCell} Instance of Axis Cell for the gradient axis\n * @memberof Legend\n */\nexport const createAxis = (context) => {\n    const data = context.data();\n    const { align } = context.config();\n    const AxisCell = context._cells.AxisCell;\n    const newAxis = new ContinousAxis({\n        id: `legend-${context._id}`,\n        orientation: align === ALIGN.VERTICAL ? RIGHT : BOTTOM,\n        style: context._computedStyle,\n        nice: false,\n        showAxisName: false,\n        tickValues: data.map(d => d.value),\n        fixedBaseline: false,\n        labels: {\n            rotation: 0\n        }\n    }, { labelManager: context._labelManager });\n\n    newAxis.domain(getGradientDomain(data));\n    newAxis.range([1, 1]);\n    return new AxisCell().source(newAxis).config({\n        margin: { left: 0, bottom: 0, top: 0, right: 0 }\n    });\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} classPrefix\n *\n * @memberof GradientLegend\n */\nconst createLegendSkeleton = (container, classPrefix, data) => {\n    const domain = getGradientDomain(data);\n    const legendContainer = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    const legendGradSvg = makeElement(legendContainer, 'svg', [1], `${classPrefix}-gradient`);\n    const legendGradCont = makeElement(legendGradSvg, 'g', [1], `${classPrefix}-gradient-group`);\n    const linearGradient = makeLinearGradient(legendGradSvg, data, domain);\n    const legendRect = makeElement(legendGradCont, 'rect', [1], `${classPrefix}-gradient-rect`);\n\n    return {\n        legendContainer,\n        legendGradCont,\n        legendGradSvg,\n        linearGradient,\n        legendRect\n    };\n};\n\n/**\n * Renders the axis for the gradient\n *\n * @param {Selection} container Point where axis is to be mounted\n * @param {number} height Height for axis\n * @param {number} width Width for axis\n * @memberof Legend\n */\nexport const renderAxis = (context, container, height, width) => {\n    const axis = context.axis();\n\n    axis.setAvailableSpace(width, height);\n    axis.render(container.node());\n    axis.source().render();\n};\n\n/**\n * Renders gradient legends\n *\n * @param {Selection} container Point where the legend is to be appended\n * @memberof GradientLegend\n */\nexport const renderGradient = (context, container) => {\n    let gradHeight = 0;\n    let gradWidth = 0;\n    const {\n        align,\n        classPrefix,\n        item\n    } = context.config();\n    const data = context.data();\n    // Create the skeleton for the legend\n    const {\n        legendContainer,\n        legendGradSvg,\n        legendGradCont,\n        linearGradient,\n        legendRect\n    } = createLegendSkeleton(container, classPrefix, data);\n    const labelDim = context.axis().source().getAxisDimensions().tickDimensions;\n    const {\n        padding,\n        margin,\n        border,\n        titleSpaces,\n        maxItemSpaces,\n        maxHeight,\n        maxWidth,\n        height,\n        width\n    } = context.measurement();\n    const gradientDimensions = {};\n\n    gradHeight = Math.floor(height - (titleSpaces.height + 2 * margin + 2 * border));\n    gradWidth = Math.floor(width - (margin * 2 + border * 2));\n\n    if (align === ALIGN.HORIZONTAL) {\n        gradientDimensions.height = item.icon.height;\n        gradientDimensions.width = gradWidth - 2 * padding - labelDim.width / 2;\n        linearGradient.attr('x2', '100%').attr('y1', '0%');\n        legendGradCont.attr('transform', `translate( ${labelDim.width / 2} 0)`);\n        renderAxis(context, legendContainer, gradHeight - item.icon.height - padding, gradWidth - 2 * padding - 1);\n        legendContainer.classed(`${classPrefix}-overflow-x`, width > maxWidth);\n\n        applyStyle(legendContainer, {\n            height: `${maxItemSpaces.height + border + padding}px`,\n            width: `${Math.min(width, maxWidth)}px`,\n            padding: `${padding}px`\n        });\n\n        legendRect.attr('height', gradientDimensions.height);\n        legendRect.attr('width', gradientDimensions.width - labelDim.width / 2);\n    } else {\n        gradientDimensions.height = gradHeight - 2 * padding - labelDim.height / 2;\n        gradientDimensions.width = item.icon.width;\n        linearGradient.attr('x2', '0%').attr('y1', '100%');\n        legendGradCont.attr('transform', `translate(0 ${labelDim.height / 2})`);\n        renderAxis(context, legendContainer, gradHeight - 2 * padding - 1, gradWidth - item.icon.width - padding * 2);\n        legendContainer.classed(`${classPrefix}-overflow-y`, height > maxHeight);\n        applyStyle(legendContainer, {\n            height: `${Math.min(height, maxHeight)}px`,\n            width: `${width}px`,\n            padding: `${padding}px`\n        });\n        legendRect.attr('height', gradientDimensions.height - labelDim.height / 2);\n        legendRect.attr('width', gradientDimensions.width);\n    }\n\n    // Apply Styles to the legend plot area\n    applyStyle(legendGradSvg, {\n        height: `${gradientDimensions.height}px`,\n        width: `${gradientDimensions.width}px`\n    });\n\n        // Apply styles to the legend rect\n    applyStyle(legendRect, {\n        fill: 'url(#linear-gradient)'\n    });\n    legendGradSvg.attr('height', gradientDimensions.height);\n    legendGradSvg.attr('width', gradientDimensions.width);\n\n    context.measurement({\n        gradientDimensions\n    });\n    context._legendGradientSvg = legendGradSvg;\n    return context;\n};\n","import SimpleLegend from './simple-legend';\nimport { getScaleInfo, getInterpolatedData } from './legend-helper';\nimport { GRADIENT, LEFT, SIZE } from '../enums/constants';\nimport { renderGradient, createAxis } from './gradient-helper';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class GradientLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new GradientLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof GradientLegend\n     */\n    static type () {\n        return GRADIENT;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axis\n     *\n     * @memberof GradientLegend\n     */\n    axis (...axis) {\n        if (axis.length) {\n            this._axis = axis[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof GradientLegend\n     */\n    dataFromScale (scale) {\n        let domainForLegend = [];\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainForLegend[0] = domain[0];\n            }\n            domainForLegend = [...domainForLegend, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainForLegend.push(domain[1]);\n            }\n        } else {\n            domainForLegend = getInterpolatedData(domain, steps - 1);\n        }\n        domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n        return domainForLegend.map((ele, i) => {\n            const value = domainForLegend[i];\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor()\n                    : scale[scaleFn](Math.floor(ele)),\n                value: +value.toFixed(2),\n                id: i\n            };\n        }).filter(d => d.value !== null);\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        const axis = createAxis(this);\n        const axisSpace = axis.getLogicalSpace();\n        const space = { width: axisSpace.width - effPadding, height: axisSpace.height - effPadding };\n        const axisDomainLength = axis.source().domain().length;\n        const labelSpaces = new Array(axisDomainLength).fill(space);\n\n        this.axis(axis);\n        return labelSpaces;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof GradientLegend\n     */\n    getDrawingContext () {\n        return {\n            svgContainer: this._legendGradientSvg\n        };\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        renderGradient(this, legendContainer);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof SimpleLegend\n     */\n    getCriteriaFromData (data) {\n        return [[this.fieldName()], [data.value]];\n    }\n}\n","import SimpleLegend from './simple-legend';\nimport {\n    getScaleInfo,\n    getInterpolatedData,\n    getDomainBounds\n} from './legend-helper';\nimport {\n    createLegendSkeleton,\n    createItemSkeleton,\n    renderStepItem\n} from './renderer';\nimport { STEP, RECT, LEFT, SIZE, UPPER, LOWER } from '../enums/constants';\nimport { stepData } from './position-config';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class StepLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new StepLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof StepLegend\n     */\n    static type () {\n        return STEP;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof StepLegend\n     */\n    dataFromScale (scale) {\n        let domainLeg = [];\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        const { formatter } = this.config();\n        const domainBounds = {\n            lower: null, upper: null\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainBounds.lower = [`${formatter.bounds.lower} ${steps[0]}`];\n            }\n            domainLeg = [...domainLeg, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainBounds.upper = [`${formatter.bounds.upper} ${steps[steps.length - 1]}`];\n            }\n        } else {\n            domainLeg = getInterpolatedData(domain, steps);\n        }\n\n        domainLeg = [...new Set(domainLeg)].sort((a, b) => a - b);\n        domainLeg = domainLeg.map((ele, i) => {\n            let value = null;\n            if (i < domainLeg.length - 1) {\n                value = `${(ele.toFixed(1))} - ${(+domainLeg[i + 1].toFixed(1))}`;\n            }\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n                value,\n                id: i + 1,\n                range: [ele, domainLeg[i + 1]]\n            };\n        }).filter(d => d.value !== null);\n\n        if (domainBounds.lower) {\n            const lowerBounds = getDomainBounds(LOWER, { scale, scaleFn, scaleType },\n                { domain, steps, domainBounds });\n            domainLeg = [lowerBounds, ...domainLeg];\n        }\n        if (domainBounds.upper) {\n            const upperBounds = getDomainBounds(UPPER, { scale, scaleFn, scaleType },\n            { domain, steps, domainBounds, domainLeg });\n            domainLeg = [...domainLeg, upperBounds];\n        }\n        return domainLeg;\n    }\n\n     /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding, align) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        return super.getLabelSpaces(effPadding, align);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return RECT;\n    }\n\n     /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const { classPrefix, position } = this.config();\n        const data = stepData(this.data())[position];\n\n        const legendContainer = super.render(this.mount());\n\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n\n        renderStepItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        return {\n            [fieldName]: data.range\n        };\n    }\n}\n","import { GradientLegend, DiscreteLegend, StepLegend } from '@chartshq/muze-legend';\n\n/**\n * Contants to be used as attr\n */\nexport const ROWS = 'rows';\nexport const COLUMNS = 'columns';\nexport const DATA = 'data';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\nexport const DETAIL = 'detail';\nexport const LAYERS = 'layers';\nexport const TRANSFORM = 'transform';\nexport const INITIALIZED = 'isInitialized';\nexport const SOURCE = 'source';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const PADDING = 'padding';\nexport const BORDER = 'border';\nexport const MARGIN = 'margin';\nexport const CONFIG = 'config';\nexport const MOUNT = 'mount';\nexport const CANVAS_UPDATED = 'canvasUpdated';\nexport const CLASSPREFIX = 'classPrefix';\nexport const POLICIES = '_policies';\nexport const LEGEND = 'legend';\nexport const TITLE = 'title';\nexport const SUB_TITLE = 'subtitle';\nexport const RESOLVE = 'resolve';\nexport const DISCRETE = 'discrete';\nexport const STEP_COLOR = 'step-color';\nexport const GRADIENT = 'gradient';\nexport const LINEAR = 'linear';\nexport const ORDINAL = 'ordinal';\nexport const MUZE_PREFIX = 'muze';\n\nexport const TITLE_TEMPLATE_NOT_ALLOWED_TAGS = [\n    'script',\n    'style'\n];\n\nexport const LEGEND_TYPE_MAP = {\n    [`${ORDINAL}-${true}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${COLOR}`]: StepLegend,\n    [`${LINEAR}-${false}-${COLOR}`]: GradientLegend\n};\n\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const GROUP = 'group';\nexport const LAYOUT = 'layout';\nexport const RETINAL = 'retinal';\nexport const DIMENSION = 'dimension';\nexport const MEASURE = 'measure';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const HORIZONTAL_CENTER = 'h-center';\nexport const VERTICAL_CENTER = 'v-center';\nexport const HIDDEN = 'hidden';\nexport const OVERFLOW_X = 'overflow-x';\nexport const OVERFLOW_Y = 'overflow-y';\n","import { ComposedVars, SimpleVariable } from '@chartshq/visual-group';\nimport { TITLE_TEMPLATE_NOT_ALLOWED_TAGS } from './constants';\n\n/**\n * This method creates a new composed variable instance from multiple variables. This is required when we have multiple\n * variables on a single axis and the union of domain of all the variables needs to be set on the axis.\n *\n * To create a new composed variable from multiple fields,\n * ```\n *  const sharedVar = share('open', 'high', 'low', 'close');\n *  canvas.rows([sharedVar])\n *      .columns(['date']);\n * ```\n *\n * @module Operators\n * @public\n * @function share\n * @param {Array} vars Variable names.\n *\n * @return {ComposedVars} Instance of composed variable\n */\nexport const share = (...vars) => new ComposedVars(...vars.map(variable => new SimpleVariable(variable)));\n\n/**\n *\n *\n * @param {*} node\n *\n */\nfunction treeShakeNode (node) {\n    if (node.nodeType !== Node.ELEMENT_NODE) { return; }\n\n    if (TITLE_TEMPLATE_NOT_ALLOWED_TAGS.indexOf(node.tagName.toLowerCase()) !== -1) {\n        node.parentNode.removeChild(node);\n    } else {\n        for (const childNode of node.childNodes) {\n            treeShakeNode(childNode);\n        }\n    }\n}\n\n/**\n * A string template tagged function which sanitizes input html formatted string according to the allowed html tags.\n * This is used to render html in canvas components like title and tooltip.\n *\n * To render html in canvas components,\n * ```\n *     canvas.title(html`<span style=font-size:20px;>TITLE</span>`);\n * ```\n *\n * @public\n * @module Operators\n * @function html\n * @param {Array.<string>} strings - The string parts of the template.\n * @param {Array} exps - The list of evaluated expression values.\n *\n * @return {Function} Returns a function which returns the sanitized html string.\n */\nexport function html (strings, ...exps) {\n    let htmlCode = '';\n    const expLn = exps.length;\n    let i = 0;\n\n    for (; i < expLn; ++i) {\n        htmlCode += strings[i] + exps[i];\n    }\n    htmlCode += strings[i];\n\n    const frag = document.createDocumentFragment();\n    const wrapper = document.createElement('div');\n\n    frag.appendChild(wrapper);\n    wrapper.innerHTML = htmlCode;\n\n    treeShakeNode(wrapper);\n    const { innerHTML } = wrapper;\n\n    return () => innerHTML;\n}\n","import { mergeRecursive, CommonProps } from 'muze-utils';\n\nconst defaultPolicy = (registrableComponents) => {\n    const aliases = registrableComponents.map(comp => comp.alias());\n    return {\n        behaviours: {\n            '*': (propagationPayload) => {\n                const propagationCanvas = propagationPayload.sourceCanvas;\n                return propagationCanvas ? aliases.indexOf(propagationCanvas) !== -1 : true;\n            }\n        }\n    };\n};\n\nconst listenerFn = (canvas, fn) => () => {\n    const valueMatrix = canvas.composition().visualGroup.matrixInstance().value;\n    valueMatrix.each(cell => fn(cell.valueOf().firebolt()));\n};\n\nconst canvasIterator = (canvases, iteratorFn, cFn) => {\n    canvases.forEach((canvas) => {\n        const matrix = canvas.composition().visualGroup.matrixInstance().value;\n        matrix.each(cell => iteratorFn(cell.valueOf().firebolt()));\n        cFn && cFn(canvas);\n        // Also register actions on canvas update\n        const throwback = canvas._throwback;\n\n        throwback.registerImmediateListener([CommonProps.MATRIX_CREATED],\n            listenerFn(canvas, iteratorFn));\n    });\n};\n\n/**\n * This class is initiated only once in lifecycle and is reponsible for regisration of physical and behavioural\n * actions and side effects and the mapping between them.\n *\n * To get the instance of action model\n * ```\n *  const ActionModel = muze.ActionModel;\n * ```\n *\n * @public\n * @module ActionModel\n */\nclass ActionModel {\n    constructor () {\n        this._registrableComponents = [];\n    }\n\n    /**\n     * Takes an array of canvases on which the physical and behavioural actions will get registered.\n     *\n     * @public\n     * @param  {Canvas} components Array of canvases\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    for (...components) {\n        this._registrableComponents = components;\n        return this;\n    }\n\n    /**\n     * Registers physical actions on the canvases. It takes an object with key as the name of action and value having\n     * the definition of the action.\n     *\n     * To register a {@link PhysicalAction},\n     * ```\n     *  const ActionModel = muze.ActionModel;\n     *  ActionModel\n     *       // Physical actions will be registered on these canvases.\n     *      .for(canvas)\n     *      .registerPhysicalActions({\n     *          // Key is the name of physical action.\n     *          ctrlClick: (firebolt) => (targetEl, behaviours) => {\n     *              targetEl.on('click', function (data) {\n     *                  const event = utils.getEvent();\n     *                  const pos = utils.getClientPoint(event, this);\n     *                  // Get the data point nearest to the mouse position.\n     *                  const nearestPoint = firebolt.context.getNearestPoint(pos, {\n     *                      data\n     *                  });\n     *                  // Prepare the payload\n     *                  const payload = {\n     *                      criteria: nearestPoint.id\n     *                  };\n     *                  behaviours.forEach((behaviour) => firebolt.dispatchBehaviour(behaviour, payload));\n     *              });\n     *          }\n     *      });\n     * ```\n     * @public\n     *\n     * @param {Object} action Names of physical actions and their definitions.\n     *\n     * @return {ActionModel} Instance of the action model.\n     */\n    registerPhysicalActions (action) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalActions(action);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalActions(action);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers behavioural actions on the canvases. It takes definitions of the behavioural actions and registers\n     * them on the canvases. Every behavioural action must inherit the {@link GenericBehaviour} class.\n     *\n     * To register a behavioural action\n     * ```\n     *  // Define a new behavioural action\n     *  class SingleSelectBehaviour extends GenericBehaviour {\n     *      static formalName () {\n     *          return 'singleSelect';\n     *      }\n     *\n     *      setSelectionSet (addSet, selectionSet) {\n     *          if (addSet === null) {\n     *              selectionSet.reset();\n     *          } else if (addSet.length) {\n     *              const existingAddSet = selectionSet.getExistingEntrySet(addSet);\n     *              if (existingAddSet.length){\n     *                  selectionSet.reset();\n     *              } else {\n     *               selectionSet.add(addSet);\n     *              }\n     *          } else {\n     *              selectionSet.reset();\n     *          }\n     *      }\n     * }\n     * muze.ActionModel.registerBehaviouralActions(SingleSelectBehaviour);\n     * ```\n     *\n     * @public\n     *\n     * @param {GenericBehaviour} actions Definition of behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerBehaviouralActions (...actions) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerBehaviouralActions(actions);\n        }, (canvas) => {\n            canvas.firebolt().registerBehaviouralActions(actions);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of physical and behavioural actions. This mapping is used to establish which behavioural\n     * actions should be dispatched on any triggering of physical actions.\n     *\n     * To map physical actions with behavioural actions,\n     * ```\n     *  muze.ActionModel.registerPhysicalBehaviouralMap({\n     *      ctrlClick: {\n     *          behaviours: ['select'] // This array must be the formal names of the behavioural actions.\n     *      }\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Contains the physical and behavioural action map.\n     * ```\n     *   {\n     *      // Name of the physical action\n     *      click: {\n     *          // Target element selector. This is an optional field. If not passed, then by default takes the\n     *          // container element of visual unit.\n     *          target: '.muze-layers-area path',\n     *          // Behaviours which should be dispatched on triggering of the mapped physical action.\n     *          behaviours: ['select']\n     *      }\n     *   }\n     * ```\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPhysicalBehaviouralMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalBehaviouralMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalBehaviouralMap(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers what behaviour to propagate on dispatch of a certain behavioural action. By default, when any\n     * behavioural action is dispatched, then the same behavioural action gets propagated to all the other canvases.\n     * This can be changed using this api.\n     *\n     * To register what behaviour should be propagated on dispatch of any behavioural action,\n     * ```\n     *  ActionModel.for(canvas1, canvas2).registerPropagationBehaviourMap({\n     *      select: 'filter',\n     *      brush: 'filter'\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Propagation behaviour map.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPropagationBehaviourMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPropagationBehaviourMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPropagationBehaviourMap(map);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of side effects and behavioural actions. It takes an object which contains key as the\n     * name of behavioural action and the side effects which will be linked to it.\n     *\n     * To map side effects to select behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: ['infoBox'] // This array must be the formal names of the side effects\n     *  });\n     * ```\n     *\n     * To map side effects to select behaviour, but disable all the default side effects attached with this behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: {\n     *          effects: ['infoBox'],\n     *          preventDefaultActions: true\n     *      }\n     *  });\n     * @public\n     * @param {Object} map Mapping of behavioural actions and side effects.\n     * ```\n     *     {\n     *          select: ['infoBox']\n     *     }\n     * ```\n     * @return {ActionModel} Instance of action model.\n     */\n    mapSideEffects (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.mapSideEffects(map);\n        }, (canvas) => {\n            canvas.firebolt().mapSideEffects(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers the side effects on the registered canvases. It takes definitions of side effects and registers them\n     * on the canvases. Every side effect must inherit the base class {@link GenericSideEffect} or\n     * {@link SpawnableSideEffect} or {@link SurrogateSideEffect} class.\n     *\n     * ```\n     * // Define a custom side effect\n     *  class InfoBox extends SpawnableSideEffect {\n     *      static formalName () {\n     *          return 'infoBox';\n     *      }\n     *\n     *      apply (selectionSet) {\n     *      }\n     *  }\n     *  muze.ActionModel.registerSideEffects(InfoBox);\n     * ```\n     * @public\n     * @param  {GenericSideEffect} sideEffects Definition of side effects.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerSideEffects (...sideEffects) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerSideEffects(sideEffects);\n        }, (canvas) => {\n            canvas.firebolt().registerSideEffects(sideEffects);\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between behavioural actions and physical actions. It takes an array of behavioural action\n     * and it's physical action.\n     *\n     * To dissociate behavioural actions from physical actions\n     * ```\n     *  muze.ActionModel.dissociateBehaviour(['select', 'click'], ['highlight', 'hover']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of behavioural action and physical action.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateBehaviour (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateBehaviour(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateBehaviour(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between side effects and behavioural actions. It takes an array of formal names of the side\n     * effects and it's linked behavioural action.\n     *\n     * To dissociate side effects from behavioural actions\n     * ```\n     *  muze.ActionModel.dissociateSideEffect(['crossline', 'highlight'], ['selectionBox', 'brush']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of side effects and behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateSideEffect (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateSideEffect(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateSideEffect(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * By default cross interactivity is disabled between canvases. This enables cross interaction between the canvases\n     * so that any action happening in one canvas gets dispatched on other canvases as well. An optional policy can also\n     * be passed in this method. The policy can be used to control on which canvases the behavioural actions and\n     * side effects gets dispatched.\n     *\n     * To just enable cross interactivity between two canvases,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity();\n     * ```\n     *\n     * To enable cross interactivity but enable any behavioural action only when it is triggered from canvas1.\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          behaviours: {\n     *              // Here * stands for any behavioural action name. We can also give any name of behavioural action\n     *              // in place of this.\n     *              '*': (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     *\n     * To enable cross interactivity but enable tooltip effect if the action is propagated from canvas1,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          sideEffects: {\n     *              tooltip: (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} policy Policy definition.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    enableCrossInteractivity (policy = {}) {\n        const registrableComponents = this._registrableComponents;\n        const mergedPolicy = mergeRecursive(mergeRecursive({}, defaultPolicy(registrableComponents)), policy);\n\n        registrableComponents.forEach((canvas) => {\n            canvas.firebolt().crossInteractionPolicy(mergedPolicy);\n        });\n\n        return this;\n    }\n}\n\nexport const actionModel = (() => new ActionModel())();\n","import { MUZE_PREFIX } from '../constants';\n\nexport const TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 4,\n    className: `${MUZE_PREFIX}-title-container`\n};\n\nexport const SUB_TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 16,\n    maxLines: 2,\n    className: `${MUZE_PREFIX}-subtitle-container`\n};\n\nexport const GRID = 'grid';\n\nexport const CANVAS = 'canvas';\n\nexport const LAYOUT_ALIGN = {\n    TOP: 'top',\n    LEFT: 'left',\n    RIGHT: 'right',\n    BOTTOM: 'bottom'\n};\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    ROWS,\n    COLUMNS,\n    COLOR,\n    SHAPE,\n    SIZE,\n    DETAIL,\n    LAYERS,\n    TRANSFORM,\n    TITLE,\n    SUB_TITLE\n} from '../constants';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG } from './defaults';\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Canvas.\n * Canvas merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module LocalOptions\n */\n\nexport const localOptions = {\n    [ROWS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLUMNS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLOR]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SHAPE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SIZE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [DETAIL]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n\n    [LAYERS]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [TRANSFORM]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object'\n        }\n    }\n};\n\nexport const canvasOptions = {\n    [TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(title) => {\n                if (typeof title === 'string') {\n                    const t = () => title;\n                    t._sanitized = true;\n                    return t;\n                }\n                return title;\n            }, (titleConfig) => {\n                const defConfig = mergeRecursive({}, TITLE_CONFIG);\n                return mergeRecursive(defConfig, titleConfig);\n            }]\n        }\n    },\n    [SUB_TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(subtitle) => {\n                if (typeof subtitle === 'string') {\n                    const sub = () => subtitle;\n                    sub._sanitized = true;\n                    return sub;\n                }\n                return subtitle;\n            }, (subtitleConfig) => {\n                const defConfig = mergeRecursive({}, SUB_TITLE_CONFIG);\n                return mergeRecursive(defConfig, subtitleConfig);\n            }]\n        }\n    }\n};\n","export default class LayoutComponent {\n    constructor (name, dimensions, seed) {\n        this._seed = seed;\n        this._boundBox = {\n            height: dimensions.height,\n            width: dimensions.width,\n            top: null,\n            left: null\n        };\n        this._renderAt = null;\n        this._alignWith = null;\n        this._alignment = null;\n        this._target = null;\n        this._position = null;\n        this._componentName = name;\n        this._className = null;\n    }\n\n    getLogicalSpace () {\n        throw new Error('getLogicalSpace is not defined');\n    }\n\n    setSpatialConfig () {\n        throw new Error('setSpatialSpace is not defined');\n    }\n\n    name (param) {\n        if (param) {\n            this._componentName = param;\n        }\n        return this._componentName;\n    }\n\n    target (param) {\n        if (param) {\n            this._target = param;\n        }\n        return this._target;\n    }\n\n    position (param) {\n        if (param) {\n            this._position = param;\n        }\n        return this._position;\n    }\n\n    alignment (param) {\n        if (param) {\n            this._alignment = param;\n        }\n        return this._alignment;\n    }\n\n    alignWith (param) {\n        if (param) {\n            this._alignWith = param;\n        }\n        return this._alignWith;\n    }\n\n    renderAt (param) {\n        if (param) {\n            this._renderAt = param;\n        }\n        return this._renderAt;\n    }\n\n    boundBox (param) {\n        if (param) {\n            Object.assign(this._boundBox, param);\n        }\n        return this._boundBox;\n    }\n\n    className (param) {\n        if (param) {\n            this._className = param;\n        }\n        return this._className;\n    }\n\n    draw () {\n        throw new Error('draw is not defined');\n    }\n  }\n\n","import LayoutComponent from './layoutComponent';\n\nclass DummyComponent extends LayoutComponent {\n    getLogicalSpace () {\n        return {\n            width: this.boundBox().width,\n            height: this.boundBox().height\n        };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n        return this;\n    }\n\n    draw () {\n        if (!this.component) {\n            throw new Error(`Component not set for ${this.componentName}`);\n        }\n        this.component.mount(document.getElementById(this.renderAt)); // Change the draw method to component draw\n        return this;\n    }\n}\n\nexport default DummyComponent;\n","export const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    interaction: {\n        sideEffect: 'individual'\n    },\n    pagination: 'scroll',\n    scrollBar: {\n        thickness: 10,\n        speed: 2,\n        vertical: {\n            align: 'right'\n        },\n        horizontal: {\n            align: 'bottom'\n        }\n    },\n    legend: {\n        position: 'right',\n        color: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        shape: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        size: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        }\n    },\n    showHeaders: false,\n    minWidth: 100,\n    minHeight: 100,\n    facet: {\n        rows: {\n            minCharacters: 3\n        },\n        columns: {\n            maxLines: 2,\n            verticalAlign: 'middle',\n            minCharacters: 1\n        }\n    },\n    border: {\n        style: 'solid',\n        color: '#d6d6d6',\n        width: 2,\n        collapse: true,\n        spacing: 0\n    },\n    autoGroupBy: {\n        disabled: false\n    },\n    invalidValues: {}\n};\n","import { DEFAULT_CONFIG } from '../../../../muze/src/defaults';\n\nconst DEFAULT_WIDTH = 600;\nconst DEFAULT_HEIGHT = 400;\nconst DEFAULT_CLASS_NAME = `${DEFAULT_CONFIG.classPrefix}-layout-container-component`;\nconst NODE_PREFIX = `${DEFAULT_CONFIG.classPrefix}-layout-container`;\n\nexport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT,\n  DEFAULT_CLASS_NAME,\n  NODE_PREFIX\n};\n","export default class DefinitionModel {\n    constructor (config) {\n        this._host = config.host || null;\n        this._cut = config.cut || null;\n        this._ratioWeight = config.ratioWeight === 0 ? 0 : config.ratioWeight || 1;\n        this._preferred = config.preferred || false;\n        this._lanes = config.lanes || [];\n        this._remainingHeight = 0;\n        this._remainingWidth = 0;\n    }\n\n    host (host) {\n        if (host) {\n            this._host = host;\n        }\n        return this._host;\n    }\n\n    preferred (preferred) {\n        if (preferred) {\n            this._preferred = preferred;\n        }\n        return this._preferred;\n    }\n\n    cut (cut) {\n        if (cut) {\n            this._cut = cut;\n        }\n        return this._cut;\n    }\n\n    ratioWeight (ratioWeight) {\n        if (ratioWeight) {\n            this._ratioWeight = ratioWeight;\n        }\n        return this._ratioWeight;\n    }\n\n    lanes (lanes) {\n        if (lanes) {\n            this._lanes = lanes;\n        }\n        return this._lanes;\n    }\n\n    remainingHeight (remainingHeight) {\n        if (remainingHeight) {\n            this._remainingHeight = remainingHeight;\n        }\n        return this._remainingHeight;\n    }\n\n    remainingWidth (remainingWidth) {\n        if (remainingWidth) {\n            this._remainingWidth = remainingWidth;\n        }\n        return this._remainingWidth;\n    }\n}\n","import { NODE_PREFIX } from '../../constants/defaults';\nimport DefinitionModel from '../definition-manager/definitionModel';\nimport DummyComponent from '../../layout-component/dummy-component';\n/**\n * Compares two strings in lowercase\n *\n * @export\n * @param {string} value the value to be compared\n * @param {string} compareTo whom the value would be compared\n * @return {boolean} true if values are equal\n */\nexport function isEqual (value, compareTo) {\n    if (typeof value !== 'string' || typeof compareTo !== 'string') {\n        throw new TypeError('value and compareTo must be string');\n    }\n    return value.toLowerCase() === compareTo.toLowerCase();\n}\n\nexport const getNodeId = (() => {\n    let _uid = 0;\n    return () => `${NODE_PREFIX}-${++_uid}`;\n})();\n\nexport function yExtraSpace (node) {\n    let smallestHeight = 0;\n    if (node.getCutType() === 'v') {\n        smallestHeight = smallestExtraHeightHorizontally(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'h') {\n        node.children().forEach((child) => {\n            smallestHeight += yExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerHeight = node.boundBox().height;\n        const hostHeight = node.model().host().getLogicalSpace().height;\n\n        smallestHeight = containerHeight - hostHeight;\n        if (smallestHeight < 0) {\n            smallestHeight = 0;\n        }\n    } else {\n        smallestHeight = 0;\n    }\n    return smallestHeight;\n}\n\nexport function smallestExtraHeightHorizontally (node) {\n    let smallestHeight = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const h = yExtraSpace(child);\n        if (h < smallestHeight) {\n            smallestHeight = h;\n        }\n    });\n    return smallestHeight;\n}\n\nexport function xExtraSpace (node) {\n    let smallestWidth = 0;\n    if (node.getCutType() === 'h') {\n        smallestWidth = smallestExtraWidthVertically(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'v') {\n        node.children().forEach((child) => {\n            smallestWidth += xExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerWidth = node.boundBox().width;\n        const hostWidth = node.model().host().getLogicalSpace().width;\n        smallestWidth = containerWidth - hostWidth;\n        if (smallestWidth < 0) {\n            smallestWidth = 0;\n        }\n    } else {\n        smallestWidth = 0;\n    }\n    return smallestWidth;\n}\n\nexport function smallestExtraWidthVertically (node) {\n    let smallestWidth = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const w = xExtraSpace(child);\n        if (w < smallestWidth) {\n            smallestWidth = w;\n        }\n    });\n    return smallestWidth;\n}\n\nexport function determineBoundBox (bb, i, arr, instance) {\n    if (i) {\n    // if not first sibling, take boundbox from previous sibling\n        const lastSibling = arr[i - 1];\n        const { top: _top, left: _left, height: _height, width: _width } = lastSibling.boundBox();\n        return {\n            width: bb.width,\n            height: bb.height,\n\n            top: instance.parentCut() === 'h'\n        ? _top + _height : _top,\n\n            left: instance.parentCut() === 'h'\n        ? _left : _left + _width\n        };\n    }\n  // if first sibling, take boundbox from parent\n    const { top: _top, left: _left } = instance.parent().boundBox();\n    return {\n        width: bb.width,\n        height: bb.height,\n        top: _top,\n        left: _left\n    };\n}\n\n// prepares the targetComponent Map for target Mapping ie. where a component should lie\nexport function prepareTargetComponentMap (context) {\n    context.targetComponentMap(new Map());\n    context.componentMap().forEach((value) => {\n        if (context.targetComponentMap().has(value.target())) {\n            context.targetComponentMap().get(value.target()).push(value);\n        } else {\n            const temp = [];\n            temp.push(value);\n            context.targetComponentMap().set(value.target(), temp);\n        }\n    });\n}\n\nexport function getComponent (canvasComponent, componentName) {\n    const comp = canvasComponent.find(component => component.name() === componentName);\n    return (comp && comp !== -1) ? comp : null;\n}\nexport function createPlaceHolderComponent (height, width, position) {\n    const comp = new DummyComponent(0, { height, width });\n    comp.name('placeHolder');\n    comp.position(position);\n    return comp;\n}\n\nexport function placeComponent (definitionModel, component, isPreferred = false, isGridComponent = false) {\n    let cut = '';\n    let componentRatioWidth = 1;\n    let leftOvercomponentRationWidth = 1;\n    let leftHeight = 0;\n    let leftWidth = 0;\n\n    if (!component) {\n        return { first: definitionModel, second: definitionModel };\n    }\n\n    const { height: componentHeight, width: componentWidth } = component.getLogicalSpace();\n    const position = component.position();\n    if (position === 'top' || position === 'bottom') {\n        cut = 'h';\n        componentRatioWidth = componentHeight / definitionModel.remainingHeight();\n        leftHeight = definitionModel.remainingHeight() - componentHeight;\n        leftWidth = definitionModel.remainingWidth();\n    } else {\n        cut = 'v';\n        componentRatioWidth = componentWidth / definitionModel.remainingWidth();\n        leftWidth = definitionModel.remainingWidth() - componentWidth;\n        leftHeight = definitionModel.remainingHeight();\n    }\n    leftOvercomponentRationWidth = 1 - componentRatioWidth;\n\n// update parentModel\n    definitionModel.cut(cut);\n    const firstLaneConfig = {\n        host: component.name(),\n        cut: null,\n        ratioWeight: componentRatioWidth,\n        preferred: isGridComponent ? false : isPreferred,\n        lanes: []\n    };\n    const firstLane = new DefinitionModel(firstLaneConfig);\n    firstLane.remainingHeight(componentHeight);\n    firstLane.remainingWidth(componentWidth);\n\n    const secondLaneConfig = {\n        host: null,\n        cut: null,\n        ratioWeight: leftOvercomponentRationWidth,\n        preferred: isGridComponent ? false : !isPreferred,\n        lanes: []\n    };\n    const secondLane = new DefinitionModel(secondLaneConfig);\n    secondLane.remainingHeight(leftHeight);\n    secondLane.remainingWidth(leftWidth);\n    if (isPreferred) {\n        definitionModel.lanes([firstLane]);\n    } else if (position === 'top' || position === 'left') {\n        definitionModel.lanes([firstLane, secondLane]);\n    } else {\n        definitionModel.lanes([secondLane, firstLane]);\n    }\n    return { first: firstLane, second: secondLane };\n}\n\nexport function placeGridComponent (definitionModel, gridComponents) {\n    let tempDefModel = definitionModel;\n    const rows = gridComponents.length;\n    const column = rows ? gridComponents[0].length : 0;\n    const height = gridComponents.reduce((acc, val) => (acc + val[0].getLogicalSpace().height), 0);\n\n    for (let i = 0; i < column; i++) {\n        const iscolumnPreffered = i === column - 1;\n        const columnPlaceHolderComponent = createPlaceHolderComponent(height,\n                                                    gridComponents[0][i].getLogicalSpace().width, 'left');\n        const { first, second } = placeComponent(tempDefModel, columnPlaceHolderComponent, iscolumnPreffered);\n        tempDefModel = first;\n        for (let j = 0; j < rows; j++) {\n            const rowpreffred = j === (rows - 1);\n            tempDefModel = placeComponent(tempDefModel, gridComponents[j][i], rowpreffred, true).second;\n        }\n        tempDefModel = second;\n    }\n    return tempDefModel;\n}\n\nexport function negotiateDimension (node) {\n    let preferred;\n    let cumultiveExtraSpaceAmt = 0;\n    let alteredDim;\n    let nonAlteredDim;\n\n    const childrenLength = node.children().length;\n\n    for (let index = 0; index < childrenLength; index++) {\n        let fn;\n        let extraSpaceAmt;\n        const child = node.children()[index];\n\n        if (child.parentCut() === 'h') {\n            fn = yExtraSpace;\n            alteredDim = 'height';\n            nonAlteredDim = 'width';\n        } else {\n            fn = xExtraSpace;\n            alteredDim = 'width';\n            nonAlteredDim = 'height';\n        }\n  // if vertical then get extra height from other node and push it to the preferred node.\n  // for horizontal cut the same thing is to be done with width\n        if (child.isPreferred()) {\n    // push extra space in sink. Execute it when all non preferred space are computed.\n            preferred = child;\n\n            continue; // eslint-disable-line no-continue\n        }\n  // reduce own height and save it in a var\n        cumultiveExtraSpaceAmt += (extraSpaceAmt = fn(child));\n        child.boundBox()[alteredDim] -= extraSpaceAmt;\n  // update nonaltered dim from parent for any change which happened during negotiation\n        child.boundBox()[nonAlteredDim] = child.parent().boundBox()[nonAlteredDim];\n\n        negotiateDimension(child);\n    }\n\n    if (preferred) {\n        preferred.boundBox()[alteredDim] += cumultiveExtraSpaceAmt;\n        preferred.boundBox()[nonAlteredDim] = preferred.parent().boundBox()[nonAlteredDim];\n        negotiateDimension(preferred);\n    }\n}\n\nexport function computePosition (node) {\n    node.children().forEach((child, i, children) => {\n        const boundBox = determineBoundBox(child.boundBox(), i, children, child);\n        child.boundBox(boundBox);\n        computePosition(child);\n    });\n}\n\nexport function allocateBoundingBox (node) {\n    const totalWeight = node.children()\n                            .map(child => child.model().ratioWeight())\n                            .reduce((carry, val) => carry + val, 0);\n\n    node.children().forEach((child, i, children) => {\n        const lastSibling = children[i - 1];\n        const ratio = child.model().ratioWeight() / totalWeight;\n\n        if (child.parentCut() === 'h') {\n            child.boundBox({\n                top: i ? lastSibling.boundBox().top + lastSibling.boundBox().height : 0,\n                left: child.parent().boundBox().left,\n                height: child.parent().boundBox().height * ratio,\n                width: child.parent().boundBox().width\n            });\n        } else {\n            child.boundBox({\n                top: child.parent().boundBox().top,\n                left: i ? lastSibling.boundBox().left + lastSibling.boundBox().width : 0,\n                height: child.parent().boundBox().height,\n                width: child.parent().boundBox().width * ratio\n            });\n        }\n        allocateBoundingBox(child);\n    });\n}\n\n","import { getNodeId } from '../helper';\nimport { LayoutComponent } from '../../layout-component';\n\nclass Node {\n    constructor (data) {\n        this._model = data;\n        this._parent = null;\n        this._children = [];\n        this._parentCut = null;\n        this._boundBox = {\n            top: null,\n            left: null,\n            height: null,\n            width: null\n        };\n\n        this._id = this._model.host() instanceof LayoutComponent && this._model.host().renderAt() ?\n                    this._model.host().renderAt() :\n                    getNodeId();\n    }\n\n    addChildren (entries) {\n        this._children.push(...entries);\n        entries.forEach((e) => { e.parent(this); });\n    }\n\n    isRoot () {\n        return this._parent === null;\n    }\n\n    isLeaf () {\n        return !this._children.length;\n    }\n\n    getCutType () {\n        return this._model.cut();\n    }\n\n    isPreferred () {\n        return !!this._model.preferred();\n    }\n\n    children (children) {\n        if (children) {\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    parent (parent) {\n        if (parent) {\n            this._parent = parent;\n        }\n        return this._parent;\n    }\n\n    parentCut (parentCut) {\n        if (parentCut) {\n            this._parentCut = parentCut;\n        }\n        return this._parentCut;\n    }\n\n    id (id) {\n        if (id) {\n            this._id = id;\n        }\n        return this._id;\n    }\n\n    model (model) {\n        if (model) {\n            this._model = model;\n        }\n        return this._model;\n    }\n\n    boundBox (bound) {\n        if (bound) {\n            this._boundBox = {\n                top: bound.top,\n                left: bound.left,\n                height: bound.height,\n                width: bound.width\n            };\n        }\n        return this._boundBox;\n    }\n  /**\n     * function to search a node and update it with the config provided.\n     * @param  {Object} nodeconfig\n     */\n    updateNode (nodeconfig) {\n        if (this._id === nodeconfig._id) {\n            this._model.cut(nodeconfig.cut);\n            this._model.ratioWeight(nodeconfig.ratioWeight);\n        } else {\n            this._children.forEach((node) => {\n                if (node._id === nodeconfig._id) {\n                    node.model.cut(nodeconfig.cut);\n                    node.model.ratioWeight(nodeconfig.ratioWeight);\n                    return;\n                }\n                this.searchNode(node, nodeconfig);\n            });\n        }\n    }\n\n  // Recursive function to search a node\n    searchNode (node, nodeconfig) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeconfig._id) {\n                childNode.model().cut(nodeconfig.cut);\n                childNode.model().ratioWeight(nodeconfig.ratioWeight);\n            } else {\n                this.searchNode(childNode, nodeconfig);\n            }\n        });\n    }\n\n  /**\n     * function to delete a node from tree Structure.\n     * @param  {String} nodeId - node Id of the Node\n     */\n    delete (nodeId) {\n        this._children.forEach((node) => {\n            if (node.id() === nodeId) {\n                const index = this._children.indexOf(node);\n                this._model.lanes().splice(index, 1);\n            }\n            this.deleteSearchNode(node, nodeId);\n        });\n    }\n\n  // Recursive function to search a node\n    deleteSearchNode (node, nodeId) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeId) {\n                const index = node.children().indexOf(childNode);\n                node.model().lanes().splice(index, 1);\n            } else {\n                this.deleteSearchNode(childNode, nodeId);\n            }\n        });\n    }\n}\n\nexport default Node;\n","import Node from '../tree';\nimport {\n    allocateBoundingBox,\n    negotiateDimension,\n    computePosition\n} from '../helper';\n\nexport default class LayoutModel {\n    constructor (measurements, config) {\n        this._measurements = measurements;\n        this._config = config;\n        this._root = this.createTree(this._config, null);\n        this.setBoundBox();\n    }\n\n    createTree (config, parent) {\n        const node = new Node(config);\n        if (parent) {\n            node.parentCut(parent.getCutType());\n            parent.addChildren([node]);\n        } else {\n            this._root = node;\n        }\n        for (const lane of config.lanes()) {\n            this.createTree(lane, node);\n        }\n\n        return this._root;\n    }\n\n    setBoundBox () {\n        this._root.boundBox({\n            top: 0,\n            left: 0,\n            width: this._measurements.width,\n            height: this._measurements.height\n        });\n        allocateBoundingBox(this._root);\n    }\n\n    setHostPosition (node) {\n        node.children().forEach((child) => {\n            LayoutModel.setHostSpatialConfig(child);\n            this.setHostPosition(child);\n        });\n    }\n\n    static setHostSpatialConfig (node) {\n        const bb = node.boundBox();\n        const host = node.model().host();\n        if (host && host.setSpatialConfig) {\n            const conf = {\n                x: bb.left,\n                y: bb.top,\n                width: bb.width,\n                height: bb.height,\n                renderAt: node.id()\n            };\n            host.setSpatialConfig(conf);\n        }\n    }\n\n    negotiate () {\n        negotiateDimension(this._root);\n        computePosition(this._root);\n        return this;\n    }\n\n    broadcast () {\n        this.setHostPosition(this._root);\n        return this;\n    }\n\n    tree () {\n        return this._root;\n    }\n}\n","/* eslint no-undef: \"off\" */\n/* eslint default-case: \"off\" */\nexport class Utils {\n    static isDOMElement (element) {\n        return element instanceof Element;\n    }\n\n    static getID (element) {\n        return element.id;\n    }\n\n    static getElement (id) {\n        return document.getElementById(id);\n    }\n\n    static findContainer (data) {\n        return data.filter(coordinate => coordinate.parent == null)[0];\n    }\n  /**\n   * static method to remove the div\n   * @param  {} divId - div ID to be removed.\n   */\n    static removeDiv (divId) {\n        if (document.getElementById(divId) !== null) { document.getElementById(divId).remove(); }\n    }\n}\n","import { DEFAULT_CLASS_NAME } from '../constants/defaults';\nimport { LayoutComponent } from '../layout-component';\n\nexport default class DataPoint {\n    constructor (node) {\n        this._node = node;\n        this._className = node.model().host() instanceof LayoutComponent ?\n                            node.model().host().className() : DEFAULT_CLASS_NAME;\n    }\n\n    node () {\n        return this._node;\n    }\n\n    hasHost () {\n        return this._node.model().host() instanceof LayoutComponent;\n    }\n\n    className () {\n        return this._className || DEFAULT_CLASS_NAME;\n    }\n}\n","import { getnodePoints } from './helper';\n\nexport class DataParser {\n    constructor (data) {\n        this._data = data;\n    }\n\n    defaultDataPointLogic () {\n        const nodepoints = [];\n        getnodePoints(this._data, nodepoints);\n        return nodepoints;\n    }\n\n}\n","import DataPoint from './data-point';\n\nexport const getnodePoints = (node, nodepoints) => {\n    const datapoint = new DataPoint(node);\n    nodepoints.push(datapoint);\n    node.children().forEach((child) => {\n        getnodePoints(child, nodepoints);\n    });\n};\n","import { DataParser } from './data-parser';\n\nexport class HTMLDataAdapter extends DataParser {\n    getCoordinates () {\n        return super.defaultDataPointLogic();\n    }\n}\n","export class Renderer {\n\n    initRenderer (node, tree) {\n        node.__logicalTree = tree;\n    }\n}\n","import { HTMLDataAdapter } from '../data-adapters/html-data';\nimport { Utils } from '../utils';\nimport { Renderer } from './renderer';\n\nexport class HTMLRenderer extends Renderer {\n    constructor (data) {\n        super();\n        this._data = data;\n        this._coordinates = new HTMLDataAdapter(this._data).getCoordinates();\n    }\n\n    createhtml (mount, className) {\n        const mainDiv = mount;\n        super.initRenderer(mainDiv, this._data); // Initialise node with layout id\n        this.parentDiv = this.createAndCustomiseParent(className);\n        this._coordinates.forEach((node) => {\n            if (node.hasHost()) {\n                const host = node.node();\n                this.parentDiv.appendChild(this.createAndPositionDiv({ ...host.boundBox(),\n                    id: host.id(),\n                    className: node.className() }));\n            }\n        });\n        mainDiv.appendChild(this.parentDiv);\n    }\n\n    createAndPositionDiv (config) {\n        const { top, left, height, width, className, id } = config;\n        const existingDiv = document.getElementById(id);\n        const div = existingDiv || document.createElement('div');\n        div.style.position = 'absolute';\n        div.style.left = `${left}px`;\n        div.style.top = `${top}px`;\n        div.style.height = `${height}px`;\n        div.style.width = `${width}px`;\n        div.id = id;\n        div.className = className;\n        return div;\n    }\n\n    createAndCustomiseParent (className) {\n        const container = Utils.findContainer(this._coordinates);\n        const host = container.node();\n        const parentDiv = this.createAndPositionDiv({ ...host.boundBox(),\n            id: host.id(),\n            className: container.className() });\n        parentDiv.className = className;\n        parentDiv.style.position = 'relative';\n        return parentDiv;\n    }\n\n    coordinates () {\n        return this._coordinates;\n    }\n}\n","import { HTMLRenderer } from '../renderers/html-renderer';\nimport { LayoutComponent } from '../layout-component';\n\nexport const getChildNode = (context, config) =>\n                        context.renderer().createAndPositionDiv(config);\n\nexport const findNode = (context, nodeID) =>\n                        context.renderer().coordinates().find(point => point.node().id() === nodeID);\n\nexport const renderHTML = (context) => {\n    context.renderer(new HTMLRenderer(context.data()));\n    context.renderer().createhtml(context.mount(), context.className());\n};\n\nexport const drawLayout = (context) => {\n    switch (context.renderer()) {\n    case 'html' :\n        renderHTML(context);\n        break;\n    default:\n        renderHTML(context);\n    }\n};\n\nexport const drawComponent = (componentData) => {\n    componentData.children().forEach((node) => {\n        const host = node.model().host();\n        if (host instanceof LayoutComponent) {\n            host.draw();\n        }\n        drawComponent(node);\n    });\n};\n\nexport const removeElement = (elemID) => {\n    document.removeElement(document.getElementById(elemID));\n};\n\nexport const resolveAligment = (context, componentData) => {\n    componentData.children().forEach((component) => {\n        const host = component.model().host();\n        if (host instanceof LayoutComponent && host.alignWith()) {\n            let newNodeConfig = {};\n            const point = findNode(context, component.id()).node();\n            const node = point.boundBox();\n            const refNode = findNode(context, context.componentMap().get(host.alignWith()).renderAt())\n                                .node()\n                                .boundBox();\n            switch (host.alignment()) {\n            case 'left':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(refNode.left - node.left))\n                };\n                break;\n\n            case 'right':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(node.left + node.width - (refNode.left + refNode.width)))\n                };\n                break;\n\n            case 'top':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: Math.abs(node.height - Math.abs(refNode.top - node.top)),\n                    width: node.width\n                };\n                break;\n\n            case 'bottom':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: Math.abs(node.top - refNode.top + refNode.height),\n                    width: node.width\n                };\n                break;\n\n            case 'h-center':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: refNode.width\n                };\n                break;\n\n            case 'v-center':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: refNode.top,\n                    width: node.width\n                };\n                break;\n            default:\n                break;\n            }\n    // check if model in parent component\n            Object.assign(newNodeConfig, { id: point.id(), className: host.className() });\n            context.renderer().createAndPositionDiv(newNodeConfig);\n            context.componentMap().get(host.name()).setSpatialConfig({\n                x: newNodeConfig.left,\n                y: newNodeConfig.top,\n                height: newNodeConfig.height,\n                width: newNodeConfig.width\n\n            });\n        }\n        resolveAligment(context, component);\n    });\n};\n","import { Utils } from '../utils';\nimport { drawLayout, resolveAligment, drawComponent } from './helper';\n\nexport class DrawingManager {\n    constructor (data, renderer, container) {\n        this._data = data.tree;\n        this._componentMap = data.componentMap;\n        this._layoutClassName = data.layoutClassName;\n        this._renderer = renderer;\n        this._mount = Utils.isDOMElement(container) ? container : Utils.getElement(container);\n    }\n\n    draw () {\n        drawLayout(this);\n        resolveAligment(this, this._data);\n        drawComponent(this._data);\n        return this;\n    }\n\n    data (data) {\n        if (data) {\n            this._data = data;\n        }\n        return this._data;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    className (param) {\n        if (param) {\n            this._layoutClassName = param;\n        }\n        return this._layoutClassName;\n    }\n\n    renderer (param) {\n        if (param) {\n            this._renderer = param;\n        }\n        return this._renderer;\n    }\n\n    mount (param) {\n        if (param) {\n            this._mount = param;\n        }\n        return this._mount;\n    }\n}\n","import DefinitionModel from './definitionModel';\nimport { prepareTargetComponentMap, getComponent, placeComponent, placeGridComponent } from '../helper';\n\nexport default class DefinitionManager {\n    constructor (componentMap, sequence, totalHeight, totalWidth) {\n        this._componentMap = componentMap;\n        this._prioritySequence = sequence;\n        this._totalHeight = totalHeight;\n        this._totalWidth = totalWidth;\n        this._targetComponentMap = null;\n    }\n\n    // create the config model\n    generateConfigModel () {\n        prepareTargetComponentMap(this);\n        const canvasComponent = this._targetComponentMap.get('canvas');\n        const definitionModel = new DefinitionModel({});\n        let tempDefModel = definitionModel;\n        definitionModel.remainingHeight(this._totalHeight);\n        definitionModel.remainingWidth(this._totalWidth);\n\n        let componentRef = null;\n\n        this._prioritySequence.forEach((name) => {\n            componentRef = getComponent(canvasComponent, name);\n            if (name !== 'grid') {\n                tempDefModel = placeComponent(tempDefModel, componentRef).second;\n            } else {\n                tempDefModel = placeGridComponent(tempDefModel, componentRef.component);\n            }\n        });\n        return definitionModel;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    targetComponentMap (param) {\n        if (param) {\n            this._targetComponentMap = param;\n        }\n        return this._targetComponentMap;\n    }\n}\n","import { sanitizeConfig } from './helper';\n\nexport class LayoutDef {\n    constructor () {\n        this._componentMap = new Map();\n        this._layoutDefinition = null;\n    }\n\n    addComponent (component) {\n        this._componentMap.set(component.name(), component);\n    }\n\n    layoutDefinition (def) {\n        if (def) {\n            this._layoutDefinition = def;\n        }\n        return this._layoutDefinition;\n    }\n\n    addMultipleComponent (componentArray) {\n        componentArray.forEach((comp) => {\n            this.addComponent(comp);\n        });\n    }\n\n    sanitizedDefinition () {\n        sanitizeConfig(this, this._layoutDefinition);\n        return this.layoutDefinition();\n    }\n\n    componentMap () {\n        return this._componentMap;\n    }\n    resetComponentMap () {\n        this._componentMap.clear();\n    }\n}\n","import DefinitionManager from '../layout-definition/definition-manager';\n\nexport function sanitizeConfig (context, hostObj) {\n    const hostID = hostObj.host();\n    if (hostObj.lanes() && hostObj.lanes().length) {\n        hostObj.lanes().forEach(childHost => sanitizeConfig(context, childHost));\n    }\n    if (hostID != null && typeof (hostID) === 'string') {\n        if (context.componentMap().get(hostID) !== undefined) {\n            hostObj.host(context.componentMap().get(hostID));\n        }\n    }\n}\n\nexport function calLayOutDef (context) {\n    const { height, width } = context.dimension();\n    const defManager = new DefinitionManager(context.layoutDef().componentMap(),\n                                              context.prioritySequence(),\n                                              height,\n                                              width);\n    const genLayoutdef = defManager.generateConfigModel();\n    return genLayoutdef;\n}\n","import {\n  LayoutModel\n} from '../layout-definition';\n\nimport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT\n} from '../constants/defaults';\n\nimport { DrawingManager } from '../drawing-manager';\nimport { Utils } from '../utils';\nimport { LayoutDef } from './layout-def';\nimport { calLayOutDef } from './helper';\n\nexport default class LayoutManager {\n    constructor (conf) {\n        this._renderAt = conf.renderAt;\n        this._layoutClassName = conf.className;\n        this._dimension = {\n            width: conf.width || DEFAULT_WIDTH,\n            height: conf.height || DEFAULT_HEIGHT\n        };\n\n        this._skeletonType = conf.skeletonType || 'html';\n        this._layoutDefinition = null;\n        this._layoutDef = new LayoutDef();\n        this._drawingManager = null;\n        this._prioritySequence = [];\n        this.tree = null;\n        this._rootNodeID = null;\n    }\n\n    layoutDef (param) {\n        if (param) {\n            this._layoutDef = param;\n        }\n        return this._layoutDef;\n    }\n\n    prioritySequence (param) {\n        if (param) {\n            this._prioritySequence = param;\n        }\n        return this._prioritySequence;\n    }\n\n    dimension (param) {\n        if (param) {\n            Object.assign(this._dimension, param);\n        }\n        return this._dimension;\n    }\n\n    addComponent (component) {\n        this._layoutDef.addComponent(component);\n    }\n\n    addMultipleComponent (componentArray) {\n        this._layoutDef.addMultipleComponent(componentArray);\n    }\n\n    resetNode (node) {\n        if (this.con) {\n            this.con.resetNode(node);\n        }\n    }\n\n  /**\n   * function to update the node and rerender the layout.\n   * @param  {} config - node configuration to change.\n   */\n    updateNode (config) {\n        this.tree.updateNode(config);\n        this._layoutDefinition = this.tree.model;\n        this.compute();\n    }\n\n    compute () {\n        //----\n        if (Utils.isDOMElement(this._renderAt)) {\n            this._renderAt._layout = this;\n        } else {\n            document.getElementById(this._renderAt)._layout = this;\n        }\n        //-----\n        this._layoutDefinition = calLayOutDef(this);\n        this._layoutDef.layoutDefinition(this._layoutDefinition);\n        this._layoutDefinition = this._layoutDef.sanitizedDefinition();\n        this._layout = new LayoutModel({\n            width: this._dimension.width,\n            height: this._dimension.height\n        },\n            this._layoutDefinition);\n        this.tree = this._layout.negotiate().tree();\n        this._layout.broadcast();\n        this._drawingManager = new DrawingManager({\n            tree: this.tree,\n            componentMap: this._layoutDef.componentMap(),\n            layoutClassName: this._layoutClassName\n        }, this._skeletonType, this._renderAt);\n\n        if (this._rootNodeID) {\n            this.tree.id(this._rootNodeID);\n        } else {\n            this._rootNodeID = this.tree.id();\n        }\n    // this will draw all the components by calling their draw method\n        this._drawingManager.draw();\n    }\n\n    getRootNodeId () {\n        return this._rootNodeID;\n    }\n\n  /**\n  * This function takes the LayoutComponents and Register them in component store\n  * @param {Array<LayoutComponent>} layoutComponents\n  */\n    registerComponents (layoutComponents) {\n        this._prioritySequence.length = 0;\n        this._layoutDef.resetComponentMap();\n        layoutComponents.forEach((container) => {\n            if (container) {\n                this._prioritySequence.push(container.name());\n                this.addComponent(container);\n                if (container.name() === 'grid') {\n                    container.component.forEach((componentArr) => {\n                        componentArr.forEach((compo) => {\n                            this.addComponent(compo);\n                        });\n                    });\n                }\n            }\n        });\n        return this;\n    }\n\n    getComponent (componentName) {\n        return this._layoutDef.componentMap().get(componentName);\n    }\n\n    renderAt (mount) {\n        if (mount) {\n            this._renderAt = mount;\n        }\n        return this._renderAt;\n    }\n}\n","import { isEqual, STATE_NAMESPACES, selectElement, getValueParser } from 'muze-utils';\nimport { VisualGroup } from '@chartshq/visual-group';\nimport { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, DATA, CONFIG }\n    from '../constants';\nimport { canvasOptions } from './local-options';\nimport { LayoutManager } from '../../../layout/src/tree-layout';\n\n/**\n * Instantiate high level components. Canvas knows what all high level component it has.\n * @nice-to-have dynamic high level components.\n *  - Is it even required ?\n *  - Reactive to source (canvas) streaming ?\n * @param {*} context Canvas instance\n * @return {Object.<Array>} Arrays of Title, visualGroup, Legend\n */\nexport const initCanvas = (context) => {\n    const reg = context._registry.components;\n\n    return [new reg.VisualGroup(context._registry, Object.assign({\n        throwback: context._throwback\n    }, context.dependencies()))];\n};\n\nexport const fixScrollBarConfig = (config) => {\n    config.scrollBar.thickness = Math.min(50, Math.max(10, config.scrollBar.thickness));\n    return config;\n};\n\nexport const setLayoutInfForUnits = (context) => {\n    const layoutManager = context._layoutManager;\n    const boundBox = layoutManager.getComponent('grid').getBoundBox();\n    const valueMatrix = context.composition().visualGroup.matrixInstance().value;\n    const parentContainer = selectElement(`#${layoutManager.getRootNodeId()}`).node();\n    valueMatrix.each((cell) => {\n        cell.valueOf().parentContainerInf({\n            el: parentContainer,\n            dimensions: boundBox\n        });\n    });\n};\n\n/**\n *\n *\n * @memberof Canvas\n */\nexport const dispatchProps = (context) => {\n    const lifeCycleManager = context.dependencies().lifeCycleManager;\n    lifeCycleManager.notify({ client: context, action: 'beforeupdate' });\n    const visualGroup = context.composition().visualGroup;\n\n    const allOptions = context._allOptions;\n    for (const key in allOptions) {\n        const value = context[key]();\n        if (value !== null) {\n            visualGroup[key] && visualGroup[key](value);\n        }\n    }\n    const { invalidValues } = context.config();\n\n    visualGroup.valueParser(getValueParser(invalidValues));\n    visualGroup.createMatrices();\n    context._cachedProps = {};\n    lifeCycleManager.notify({ client: context, action: 'initialized' });\n    lifeCycleManager.notify({ client: context, action: 'updated' });\n};\n\nconst equalityChecker = (props, params) => {\n    let checker = () => false;\n    return !props.every((option, i) => {\n        switch (option) {\n        case ROWS:\n        case COLUMNS:\n        case DETAIL:\n            checker = isEqual('Array');\n            break;\n\n        case SHAPE:\n        case SIZE:\n        case COLOR:\n        case DATA:\n        case CONFIG:\n            checker = isEqual('Object');\n            break;\n        default:\n            checker = () => true;\n            break;\n        }\n        const oldVal = params[i][0];\n        const newVal = params[i][1];\n\n        return checker(oldVal, newVal);\n    });\n};\n\nconst updateChecker = (props, params) => props.every((option, i) => {\n    const val = params[i][1];\n    switch (option) {\n    case ROWS:\n    case COLUMNS:\n        return val !== null;\n\n    case DATA:\n        return val && !val.isEmpty();\n\n    default:\n        return true;\n\n    }\n});\n\nexport const notifyAnimationEnd = (context) => {\n    const centerMatrix = context.layout().viewInfo().viewMatricesInfo.matrices.center[1] || [];\n    const promises = [];\n    centerMatrix.forEach((cellArr) => {\n        cellArr.forEach((cell) => {\n            promises.push(cell.valueOf().done());\n        });\n    });\n    const lifeCycleManager = context.lifeCycle();\n    if (promises.length) {\n        Promise.all(promises).then(() => {\n            // Update life cycle\n            lifeCycleManager.notify({ client: context, action: 'drawn' });\n            const animDonePromises = [];\n\n            centerMatrix.forEach((cellArr) => {\n                cellArr.forEach((cell) => {\n                    cell.valueOf().layers().forEach((layer) => {\n                        animDonePromises.push(layer.animationDone());\n                    });\n                });\n            });\n\n            [context.xAxes(), context.yAxes()].forEach((axisArr) => {\n                axisArr = axisArr || [];\n                axisArr.forEach((axes) => {\n                    axes.forEach((axisInst) => {\n                        animDonePromises.push(axisInst.animationDone());\n                    });\n                });\n            });\n\n            Promise.all(animDonePromises).then(() => {\n                lifeCycleManager.notify({ client: context, action: 'animationend' });\n            });\n        });\n    } else {\n        lifeCycleManager.notify({ client: context, action: 'animationend' });\n    }\n};\n\nexport const setupChangeListener = (context) => {\n    const store = context._store;\n\n    const allOptions = Object.keys(context._allOptions);\n    const props = [...allOptions, ...Object.keys(canvasOptions)];\n    const nameSpaceProps = [...allOptions, ...Object.keys(canvasOptions)].map(prop =>\n        `${STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE}.${prop}`);\n    store.registerChangeListener(nameSpaceProps, (...params) => {\n        let updateProps = equalityChecker(props, params);\n        updateProps = updateChecker(props, params);\n\n        // inform attached board to rerender\n        if (updateProps && context.mount()) {\n            dispatchProps(context);\n            context.render();\n        }\n        notifyAnimationEnd(context);\n    }, true);\n};\n\nexport const applyInteractionPolicy = (firebolt) => {\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    if (visualGroup) {\n        const valueMatrix = visualGroup.matrixInstance().value;\n        const interactionPolicy = firebolt._interactionPolicy;\n        interactionPolicy(valueMatrix, firebolt);\n        const crossInteractionPolicy = firebolt._crossInteractionPolicy;\n        const behaviours = crossInteractionPolicy.behaviours;\n        const sideEffects = crossInteractionPolicy.sideEffects;\n        valueMatrix.each((cell) => {\n            const unitFireBolt = cell.valueOf().firebolt();\n            for (const key in behaviours) {\n                unitFireBolt.changeBehaviourStateOnPropagation(key, behaviours[key]);\n            }\n            for (const key in sideEffects) {\n                unitFireBolt.changeSideEffectStateOnPropagation(key, sideEffects[key]);\n            }\n        });\n    }\n};\n\n/**\n * Sets the rotation for all x axes if any axis has the rotation config set in the\n * entire view\n *\n * @param {Array} columns Column cells that contain the axes cells\n */\nexport const setLabelRotationForAxes = (context) => {\n    let rotation = 0;\n\n    const xAxes = context.xAxes() || [];\n\n    (() => {\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                const rotationVal = xAxes[i][j].renderConfig().labels.rotation;\n                if (rotationVal && rotationVal !== 0) {\n                    rotation = rotationVal;\n                    return;\n                }\n            }\n        }\n    })();\n\n    if (rotation) {\n        xAxes.forEach((axes) => {\n            axes.forEach((axis) => {\n                axis.renderConfig({ labels: { rotation } });\n                axis.smartTicks(axis.setTickConfig());\n            });\n        });\n    }\n};\n\nexport const createGroupState = (context) => {\n    const [globalState, localState] = VisualGroup.getState();\n    const store = context._store;\n    store.append('app.group', globalState);\n    store.append('local.group', localState);\n};\n\nexport const removeChild = (mount) => {\n    while (mount.firstChild) {\n        mount.removeChild(mount.firstChild);\n    }\n};\n\nexport const createLayoutManager = () => {\n    const layoutManager = new LayoutManager({\n        className: 'muze-group-container'\n    });\n    return layoutManager;\n};\n","/**\n * This is the global options semantics based on which setters getters are created and reactivity is initiated.\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n * @module GlobalOptions\n */\n\nimport { intSanitizer, mergeRecursive, DataModel } from 'muze-utils';\nimport { fixScrollBarConfig } from './canvas/helper';\nimport { DEFAULT_CONFIG } from './defaults';\n\nexport default {\n    data: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel\n        }\n    },\n    width: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    height: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitWidth: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitHeight: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    config: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config, oldConfig) => {\n                // Reset the configuration when null is passed\n                const oldConf = mergeRecursive({}, config === null ? {} : oldConfig);\n                const defConfig = mergeRecursive(oldConf, DEFAULT_CONFIG);\n                let newConf = mergeRecursive(defConfig, config);\n                newConf = fixScrollBarConfig(newConf);\n\n                return newConf;\n            }\n\n        }\n    }\n};\n","/**\n * This file exports constants that will be used to\n * create the state store of the table layout.\n */\n/**\n * The index of top, bottom and center in the matrix\n */\nexport const VIEW_INDEX = {\n    top: 0,\n    center: 1,\n    bottom: 2\n};\n\nexport const ROW_MATRIX_INDEX = {\n    0: 'top',\n    1: 'center',\n    2: 'bottom'\n};\n\nexport const COLUMN_MATRIX_INDEX = {\n    0: 'left',\n    1: 'middle',\n    2: 'right'\n};\n\n/**\n * The width of the grid suppied by the user.\n */\nexport const GRID_WIDTH = 'width';\n\n/**\n * The height of the grid supplied by the user.\n */\nexport const GRID_HEIGHT = 'height';\n\n/**\n  * The border for the grid\n  */\nexport const BORDER = 'border';\n\n /**\n  *  The index of the first visible row in view matrix.\n  */\nexport const ROW_POINTER = 'rowPointer';\n\n/**\n * The index of the first visible column in the view matrix.\n */\nexport const COLUMN_POINTER = 'columnPointer';\n\n/**\n * Flag to specify whether row sizes should be equal.\n */\nexport const ROW_SIZE_IS_EQUAL = 'isRowSizeEqual';\n\n/**\n * Flag to specify whether column sizes are equal.\n */\nexport const COLUMN_SIZE_IS_EQUAL = 'isColumnSizeEqual';\n\n/**\n * Field to store an array an of the widths of visible columns.\n * @computed\n */\nexport const COLUMN_WIDTHS = 'visibleColumnWidths';\n\n/**\n * Field to store an array of heights of visible rows.\n * @computed\n */\nexport const ROW_HEIGHTS = 'visibleRowHeights';\n\n/**\n * Field to store the width of the left matrix.\n * @computed\n */\nexport const LEFT_MATRIX_WIDTH = 'leftMatrixWidth';\n\n/**\n * Field to store the width of the right matrix.\n * @computed\n */\nexport const RIGHT_MATRIX_WIDTH = 'rightMatrixWidth';\n\n/**\n * Field to store the height of the top matrix.\n * @computed\n */\nexport const TOP_MATRIX_HEIGHT = 'topMatrixHeight';\n\n/**\n * Field to store the height of the bottom matrix.\n * @computed\n */\nexport const BOTTOM_MATRIX_HEIGHT = 'bottomMatrixHeight';\n\n/**\n * The dom element to render the layout inside.\n */\nexport const MOUNT_POINT = 'mount';\n\n/**\n * The id attribute of the left table element.\n */\nexport const LEFT_TABLE_ID = 'grid-left';\n\n/**\n * The id attribute of the right table element.\n */\nexport const RIGHT_TABLE_ID = 'grid-right';\n\n/**\n * The id attribute of the top table.\n */\nexport const TOP_TABLE_ID = 'grid-top';\n\n/**\n * The id attribute of the bottom table.\n */\nexport const BOTTOM_TABLE_ID = 'grid-bottom';\n\n/**\n * The id attribute of the center table.\n */\nexport const CENTER_TABLE_ID = 'grid-center';\n\n/**\n * The id attribute of the top div.\n */\nexport const TOP_DIV_ID = 'muze-div-top';\n\n/**\n * The id attribute of the bottom div.\n */\nexport const BOTTOM_DIV_ID = 'muze-div-bottom';\n\n/**\n * The id attribute of the center div.\n */\nexport const CENTER_DIV_ID = 'muze-div-center';\n\n/**\n * Field that indicates if the row configuration has changed\n */\nexport const HAVE_ROWS_CHANGED = 'haveRowsChanged';\n\n/**\n * Field that indicates if the column configuration has changed\n */\nexport const HAVE_COLUMNS_CHANGED = 'haveColumnsChanged';\n\n/**\n * Field that indicates if the values configuration for the center matrix has changed\n */\nexport const HAVE_VALUES_CHANGED = 'haveValuesChanged';\n\n/**\n * Field that indicates the width of row matrix\n */\nexport const ROW_MATRIX_WIDTH = 'rowMatrixWidth';\n\n/**\n * Field that indicates the height of row matrix\n */\nexport const COLUMN_MATRIX_HEIGHT = 'columnMatrixHeight';\n\n/**\n * Field that indicates the unit width of layout\n */\nexport const UNIT_WIDTH = 'unitWidth';\n\n/**\n * Field that indicates the unit height of layout\n */\nexport const UNIT_HEIGHT = 'unitHeight';\n\n/**\n * Field that indicates the style object\n */\nexport const STYLE = 'style';\n\n/**\n * Field that indicates the color configuration\n */\nexport const COLOR = 'color';\n\n/**\n * Field that indicates width\n */\nexport const WIDTH = 'width';\n\n/**\n * Field that indicates collpase property for border\n */\nexport const COLLAPSE = 'collapse';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SPACING = 'spacing';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const DISTRIBUTION = 'distribution';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const GUTTERSPACE = 'gutterSpace';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const BREAK_PAGE = 'breakPage';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_ROW_BORDERS = 'showRowBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_COL_BORDERS = 'showColBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_VALUE_BORDERS = 'showValueBorders';\n\nexport const HEIGHT = 'height';\nexport const COLUMN = 'column';\nexport const ROW = 'row';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const CENTER = 'center';\nexport const CLICK = 'click';\nexport const ROW_LEFT = 'rowLeft';\nexport const ROW_RIGHT = 'rowRight';\nexport const COLUMN_BOTTOM = 'colBottom';\nexport const COLUMN_TOP = 'colTop';\nexport const AUTO = 'auto';\nexport const ROW_SPAN = 'rowSpan';\nexport const COL_SPAN = 'colSpan';\nexport const ROW_ROOT = 'rowRoot';\nexport const COLUMN_ROOT = 'columnRoot';\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n\nexport const PAGINATION = 'pagination';\nexport const BUFFER = 'buffer';\nexport const HOLISTIC = 'holistic';\nexport const SCROLL = 'scroll';\nexport const MIDDLE = 'middle';\nexport const NO_BORDERS = null;\n\nexport const MAX_WIDTH_AVAIL_FOR_COL_MATRIX = 'maxWidthAvailableForColumnMatrix';\nexport const COLUMN_MATRIX = 'columnMatrix';\nexport const MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX = 'maxHeightAvailableForRowMatrix';\nexport const ROW_MATRIX = 'rowMatrix';\n","import { sanitizeIP, mergeRecursive } from 'muze-utils';\nimport { TOP, CENTER, BOTTOM } from '../enums/constants';\n\n/*\n * This is the abstract implementation of the root layout. This takes care of common work which all the layouts\n * has to handle. The common work includes sanitizaion of inputs, update, rerender, dispose etc. This class can't be\n * used directly (as ofcourse this is an abstract implementaiton), the class which is implementing it has to implement\n * the necessary methods and gives its on visual.\n */\n\n/**\n * This class is used to create a generic layout. It can be extended to create layouts\n * of different types\n * @class GenericLayout\n */\nexport default class GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config configuration to be given for the layout\n     * @param {Object} dependencies external dependencies.\n     *\n     * @memberof GenericLayout\n     *\n     */\n    constructor (mountPoint, measurement, config, dependencies) {\n        this._config = {};\n        this._measurement = {};\n        this._matrices = [];\n        // External dependencies to be included for the layout. This includes the ext global dependencies like\n        // smartlabel which has one single implementation of throughout the page or per isntance\n        this._dependencies = dependencies;\n\n        this.measurement(measurement);\n        this.mountPoint(mountPoint);\n        this.config(config);\n    }\n\n    /**\n     * Returns an object which is used to recreate the layout.\n     * @return {Object} the serialized components\n     */\n    serialize () {\n        return {\n            measurement: this.measurement(),\n            config: this.config(),\n            matrices: this.matrices()\n        };\n    }\n\n     /**\n     * Sets/Gets the config for the layout\n     * @param {Object} config configuration for the layout\n     * @return {Layout|Object} Gets the Config/ Returns this instance when set\n     */\n    config (config) {\n        if (config) {\n            this._config = mergeRecursive(this._config || {}, config);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Sets/Gets the measurement for the layout\n     * @param {Object} measurement measurement for the layout\n     * @return {Layout|Object} Gets the measurement/ Returns this instance when set\n     */\n    measurement (measurement) {\n        if (measurement) {\n            this._measurement = mergeRecursive(this._measurement || {}, measurement);\n\n            return this;\n        }\n        return this._measurement;\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     * @param {Object} matrices matrices for the layout\n     * @return {Layout|Object} Gets the matrices/ Returns this instance when set\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = sanitizeIP.typeObj([TOP, CENTER, BOTTOM], matrices);\n\n            return this;\n        }\n        return this._matrices;\n    }\n\n    /**\n     * Sets/Gets the matrix for row\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    rowMatrix (matrix) {\n        if (matrix) {\n            this._rowMatrix = matrix;\n            return this;\n        }\n        return this._rowMatrix;\n    }\n\n    /**\n     * Sets/Gets the matrix for columns\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    columnMatrix (matrix) {\n        if (matrix) {\n            this._columnMatrix = matrix;\n            return this;\n        }\n        return this._columnMatrix;\n    }\n\n   /**\n     * Sets/Gets the matrix for value\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    centerMatrix (matrix) {\n        if (matrix) {\n            this._centerMatrix = matrix;\n            return this;\n        }\n        return this._centerMatrix;\n    }\n\n    /**\n     * Sets/Gets the mountPoint for the layout\n     * @param {Object} mountPoint mountPoint for the layout\n     * @return {Layout|Object} Gets the mountPoint/ Returns this instance when set\n     */\n    mountPoint (mountPoint) {\n        if (mountPoint) {\n            this._mountPoint = mountPoint;\n\n            return this;\n        }\n        return this._mountPoint;\n    }\n}\n","import * as FieldNames from '../enums/constants';\n\n/**\n * Default configuration of the layout\n * @return {Object} returns the default configuration\n */\nexport const DEFAULT_CONFIGURATION = {\n    [FieldNames.BORDER]: {\n        [FieldNames.STYLE]: 'solid',\n        [FieldNames.COLOR]: '#d6d6d6',\n        [FieldNames.WIDTH]: 2,\n        [FieldNames.COLLAPSE]: true,\n        [FieldNames.SPACING]: 0\n    },\n    [FieldNames.PAGINATION]: 'scroll',\n    [FieldNames.BUFFER]: 20,\n    [FieldNames.GUTTERSPACE]: { rows: [], columns: [] },\n    [FieldNames.DISTRIBUTION]: { rows: [], columns: [] },\n    [FieldNames.BREAK_PAGE]: { rows: [], columns: [] },\n    [FieldNames.ROW_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_POINTER]: 0,\n    [FieldNames.ROW_POINTER]: 0\n};\n\n/**\n * Default measurements for the layout\n * @return {Object} returns the default measurements\n */\nexport const DEFAULT_MEASUREMENTS = {\n    [FieldNames.GRID_WIDTH]: 100,\n    [FieldNames.GRID_HEIGHT]: 100,\n    [FieldNames.UNIT_WIDTH]: 100,\n    [FieldNames.UNIT_HEIGHT]: 100\n};\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n","/**\n * This file exports utility functions that are used across the layout module\n */\nimport { Symbols } from 'muze-utils';\nimport { PRIMARY, SECONDARY, HEIGHT, WIDTH } from '../enums/constants';\n\nconst nest = Symbols.nest;\n/**\n *\n *\n * @param {*} isTransposed\n *\n */\nconst getMeasureInfo = (isTransposed) => {\n    if (isTransposed) {\n        return {\n            firstMeasure: HEIGHT,\n            secondMeasure: WIDTH\n        };\n    }\n    return {\n        firstMeasure: WIDTH,\n        secondMeasure: HEIGHT\n    };\n};\n\n/**\n *\n *\n * @param {*} i\n * @param {*} page\n *\n */\nconst findInPage = (i, page) => {\n    let count = 0;\n    for (const x in page) {\n        if (i < page[x]) {\n            count = x;\n            break;\n        }\n    }\n    return count;\n};\n\n/**\n * Creates a single matrix from two matrices\n *\n * @param {Array<Array>} matrix Input matrix\n * @return {Array<Array>} Joined matrix\n * @memberof VisualMatrix\n */\nexport const combineMatrices = (matrix, config) => {\n    const { isTransposed } = config;\n    let joinedMatrix = matrix[0].length > 0 ? matrix[0] : matrix[1];\n    if (isTransposed) {\n        joinedMatrix = matrix[0].length > 0 ? [...matrix[0]] : [];\n        joinedMatrix = matrix[1].length > 0 ? [...joinedMatrix, ...matrix[1]] : joinedMatrix;\n    } else {\n        joinedMatrix = joinedMatrix.map((row, rowIndex) => {\n            let rowData = [];\n            if (matrix[0].length > 0) {\n                rowData = [...matrix[0][rowIndex]];\n            }\n            if (matrix[1].length > 0) {\n                rowData = [...rowData, ...matrix[1][rowIndex]];\n            }\n            return rowData;\n        });\n    }\n    return joinedMatrix;\n};\n\n/**\n * Creates a hirachical tree from the context\n *\n * @param {Object} context context for creating tree\n * @return {Object} nested tree\n */\nexport const createTree = (context) => {\n    let matrixTree = {};\n    let lastLevelKey = 0;\n    let facet = PRIMARY;\n    const nestFn = nest();\n    const keys = [];\n    const layoutMatrix = context._layoutMatrix;\n    const primaryMatrix = context.primaryMatrix();\n    const secondaryMatrix = context.secondaryMatrix();\n    const { isTransposed, breakPage } = context.config();\n\n    if (!isTransposed) {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix[0].length - 1; i++) {\n                keys.push(i);\n            }\n            keys.push(primaryMatrix[0].length - 1);\n            if (facet === SECONDARY || secondaryMatrix.length === 0) {\n                lastLevelKey = primaryMatrix[0].length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const keyLength = primaryMatrix.length > 0 ? primaryMatrix[0].length : 0;\n            for (let i = secondaryMatrix[0].length - 1; i > 0; i--) {\n                keys.push(i + keyLength);\n            }\n            keys.push(keyLength);\n\n            if (facet === PRIMARY) {\n                lastLevelKey = keyLength;\n            }\n        } else {\n            lastLevelKey = primaryMatrix.length > 0 ? primaryMatrix[0].length - 1 : 0;\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        matrixTree = nestFn.entries(layoutMatrix);\n    } else {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix.length - 1; i++) {\n                keys.push(i);\n            }\n            // if (facet === PRIMARY) {\n            keys.push(primaryMatrix.length - 1);\n            // } else {\n            if (facet === SECONDARY) {\n                lastLevelKey = primaryMatrix.length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const primaryMatrixLength = primaryMatrix.length;\n            for (let i = secondaryMatrix.length - 1; i > 0; i--) {\n                keys.push(i + primaryMatrixLength);\n            }\n            // if (facet === SECONDARY) {\n            keys.push(primaryMatrixLength);\n            // }\n            if (facet === PRIMARY) {\n                lastLevelKey = primaryMatrixLength;\n            }\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        let newMatrix = [];\n        newMatrix = layoutMatrix[0].map((col, colIndex) => layoutMatrix.map(row => row[colIndex]));\n        matrixTree = nestFn.entries(newMatrix);\n    }\n    return { tree: matrixTree, lastLevelKey };\n};\n\n/**\n * Gives the min measues\n *\n * @param {boolean} isTransposed is column matrix\n * @param {Object} unitMeasures min measures to be given to cells\n * @return {Object} dimension min cell\n */\nexport const getMinMeasures = (isTransposed, unitMeasures) => {\n    if (!isTransposed) {\n        return {\n            height: unitMeasures.height,\n            width: 0\n        };\n    }\n    return {\n        height: 0,\n        width: unitMeasures.width\n    };\n};\n\n/**\n * Get the logical space from the tree\n *\n * @param {Node} item tree to be calculated\n * @param {number} measures width and height\n * @param {Array} minMeasures min measures for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} dimension\n */\nexport const getLogicalSpace = (item, measures, minMeasures, maxMeasure = []) => {\n    const { firstMeasure, secondMeasure } = measures;\n    let firstMeasureValue = 0;\n    let secondMeasureValue = 0;\n    item.values.forEach((valueArray) => {\n        let fMeasure = 0;\n        let sMeasure = 0;\n        valueArray.forEach((placeholder, colIndex) => {\n            placeholder.setAvailableSpace();\n            const space = placeholder.getLogicalSpace();\n\n            sMeasure = Math.max(sMeasure, +space[secondMeasure], minMeasures[secondMeasure]);\n            maxMeasure[colIndex] = Math.max(maxMeasure[colIndex] || 0, space[firstMeasure]);\n            fMeasure += +maxMeasure[colIndex];\n        });\n        secondMeasureValue += sMeasure;\n        firstMeasureValue = Math.max(firstMeasureValue, fMeasure);\n        item.space = {\n            [secondMeasure]: Math.ceil(secondMeasureValue),\n            [firstMeasure]: Math.ceil(firstMeasureValue)\n        };\n    });\n    return {\n        [secondMeasure]: secondMeasureValue,\n        [firstMeasure]: firstMeasureValue\n    };\n};\n\n/**\n * Computes the logical spcae taken by the matrix tree\n *\n * @param {*} [item={}] tree to be viewed\n * @param {boolean} [isTransposed=false] is column matrix\n * @param {*} unitMeasures min measues for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} logical space taken\n */\nexport const computeLogicalSpace = (item = {}, config, maxMeasures) => {\n    const { isTransposed = false, unitMeasures } = config;\n    const { firstMeasure, secondMeasure } = getMeasureInfo(isTransposed);\n    const { values } = item;\n    const minMeasures = getMinMeasures(isTransposed, unitMeasures);\n    if (values[0].key) {\n        const logicalSpace = { [firstMeasure]: 0, [secondMeasure]: 0 };\n\n        values.forEach((valueItem) => {\n            // Compute logical space for lowest level\n            const space = computeLogicalSpace(valueItem, config, maxMeasures);\n            // Set logical space for first measure\n            logicalSpace[firstMeasure] = Math.max(logicalSpace[firstMeasure], space[firstMeasure],\n                minMeasures[firstMeasure]);\n            // Set logical space for second measure\n            logicalSpace[secondMeasure] += +space[secondMeasure];\n        });\n        item.space = logicalSpace;\n        return logicalSpace;\n    }\n    return getLogicalSpace(item, { firstMeasure, secondMeasure }, minMeasures, maxMeasures);\n};\n\n/**\n * Gives the space taken by a row\n *\n * @param {Array} row matrix array of rows\n * @return {Object} dimension of the row\n */\nexport const spaceTakenByRow = (row) => {\n    let height = 0;\n    let width = 0;\n    row.forEach((col) => {\n        const spaces = col.getLogicalSpace();\n        height = Math.max(height, spaces.height);\n        width += spaces.width;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Gives the space taken by a column\n *\n * @param {Array<Array>} matrix column matrix\n * @param {number} colIndex column index\n * @return {Object} dimension of the column\n */\nexport const spaceTakenByColumn = (matrix, colIndex) => {\n    let height = 0;\n    let width = 0;\n    matrix.forEach((row) => {\n        const col = row[colIndex];\n        const spaces = col.getLogicalSpace();\n        width = Math.max(width, spaces.width);\n        height += spaces.height;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Creates different level matrices\n *\n * @param {Object} item matrix tree\n * @param {boolean} isTransposed is column matrix\n * @return {Object} matrix of each level\n */\nexport const createMatrixEachLevel = (item, isTransposed) => {\n    if (item.values[0].key) {\n        const arr = [];\n        item.values.forEach((child) => {\n            if (!isTransposed) {\n                arr.push(...createMatrixEachLevel(child, isTransposed));\n            } else {\n                const eachLevel = createMatrixEachLevel(child, isTransposed);\n                eachLevel.forEach((e, i) => {\n                    arr[i] = arr[i] || [];\n                    arr[i].push(...e);\n                });\n            }\n        });\n        item.matrix = arr;\n        return arr;\n    }\n    if (!isTransposed) {\n        item.matrix = item.values;\n    } else {\n        item.matrix = item.values[0].map((col, colIndex) => item.values.map(row => row[colIndex]));\n    }\n    return item.matrix;\n};\n\n/**\n * Breaks the matrix into two part\n *\n * @param {Array<Array>} matrix input matrix\n * @param {boolean} isTransposed is column matrix\n * @param {number} breakPointer point in matrix where it is to be broken\n * @return {Array} two broken matrix\n */\nexport const breakMatrix = (matrix, isTransposed, breakPointer) => {\n    const primaryMatrix = [];\n    const secondaryMatrix = [];\n    if (isTransposed) {\n        matrix.forEach((row, rowIndex) => {\n            if (rowIndex >= breakPointer) {\n                secondaryMatrix.push(row);\n            } else {\n                primaryMatrix.push(row);\n            }\n        });\n    } else {\n        matrix.forEach((row, rowIndex) => {\n            row.forEach((column, columnIndex) => {\n                if (columnIndex >= breakPointer) {\n                    secondaryMatrix[rowIndex] = secondaryMatrix[rowIndex] || [];\n                    secondaryMatrix[rowIndex].push(column);\n                } else {\n                    primaryMatrix[rowIndex] = primaryMatrix[rowIndex] || [];\n                    primaryMatrix[rowIndex].push(column);\n                }\n            });\n        });\n    }\n    return [primaryMatrix, secondaryMatrix];\n};\n\n/**\n * Distributed width returned\n *\n * @param {Object} context context for the width distibution\n * @return {number} distributed widths\n */\nexport const getDistributedWidth = (context, layoutConfig) => {\n    const {\n        availableWidth,\n        width,\n        row\n    } = context;\n    const {\n        isDistributionEqual,\n        isTransposed,\n        distribution\n    } = layoutConfig;\n    let distSum = 0;\n    if (distribution && distribution[0]) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    return row.map((col, colIndex) => {\n        const space = col.getLogicalSpace().width;\n        let distWidth = (space + (availableWidth - width) * (space / width));\n        if (isTransposed) {\n            if (distribution.length > 0) {\n                distWidth = (availableWidth * distribution[colIndex] / distSum);\n            } else if (isDistributionEqual || width === 0) {\n                const rowLen = row.length;\n                distWidth = (availableWidth / rowLen);\n            }\n        }\n        return Math.floor(distWidth);\n    });\n};\n\n/**\n * Distributeed heights returned\n *\n * @param {Object} context input for the height distribution\n * @return {Object} distribured heights\n */\nexport const getDistributedHeight = (context) => {\n    let distSum = 0;\n    let gutterSum = 0;\n    let heightWithoutGutter = 0;\n    const {\n        isTransposed,\n        distribution,\n        availableHeight,\n        height,\n        isDistributionEqual,\n        gutter,\n        matrix,\n        cIdx\n    } = context;\n\n    if (distribution && distribution[0] !== undefined) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    if (gutter && gutter[0] !== undefined) {\n        gutterSum = gutter.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    heightWithoutGutter = availableHeight - Math.floor(availableHeight * gutterSum);\n\n    const colLen = matrix.length;\n    return matrix.map((row, rIdx) => {\n        const col = row[cIdx];\n        const space = col.getLogicalSpace().height;\n        let distHeight = (space + (heightWithoutGutter - height) * (space / height));\n\n        if (!isTransposed) {\n            if (distribution.length > 0 && colLen === distribution.length) {\n                distHeight = (heightWithoutGutter * distribution[rIdx] / distSum);\n            } else if (isDistributionEqual || context.height === 0) {\n                distHeight = (heightWithoutGutter / colLen);\n            }\n        }\n        return Math.floor(distHeight);\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} beg\n * @param {*} end\n */\nexport const extraCellsRemover = (arr, beg, end) => arr.slice(beg, -end);\n\n/**\n * Creates matrix instancess\n *\n * @param {Array} [arr=[]] mutated arry\n * @param {number} depth depth of the tree\n * @param {Array} matrixInfo Details about the matrix(tree, etc) to be inserted\n * @param {boolean} layout Instance of layout\n */\nexport const createMatrixInstances = (arr = [], depth, matrixInfo, layout) => {\n    const breakPointer = layout._breakPointer;\n    const config = layout.config();\n    const {\n        isTransposed\n    } = config;\n    const {\n        tree,\n        layoutMatrix\n    } = matrixInfo;\n\n    if (depth === 0) {\n        const brokenMatrix = breakMatrix(tree.matrix, isTransposed, breakPointer);\n        arr.push({\n            matrix: tree.matrix,\n            primaryMatrix: brokenMatrix[0],\n            secondaryMatrix: brokenMatrix[1],\n            space: tree.space\n        });\n        return arr;\n    }\n    const nextLevel = depth - 1;\n    tree.values.forEach((e) => {\n        createMatrixInstances(arr, nextLevel, {\n            tree: e,\n            layoutMatrix\n        }, layout);\n    });\n    return arr;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    maxMeasures: {},\n    availableSpace: {},\n    logicalSpace: {}\n};\n","import { PRIMARY } from '../enums/constants';\n/**\n *\n *\n */\nexport const defaultConfig = {\n    distribution: [],\n    classPrefix: 'muze',\n    isDistributionEqual: true,\n    unitMeasures: {\n        height: 100,\n        width: 100,\n        border: 1\n    },\n    isTransposed: false,\n    facet: PRIMARY,\n    extraCellLengths: []\n};\n","import { mergeRecursive, generateGetterSetters, ERROR_MSG } from 'muze-utils';\nimport {\n    createTree,\n    combineMatrices,\n    createMatrixInstances\n  } from '../utils';\nimport { PROPS } from './props';\nimport { HEIGHT, WIDTH } from '../enums/constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        // Prepare matrices\n        this._lastLevelKey = 0;\n        this._primaryMatrix = matrix[0] || [];\n        this._secondaryMatrix = matrix[1] || [];\n        this._maxMeasures = [];\n        this._availableSpace = {};\n\n        // Store the config\n        generateGetterSetters(this, PROPS);\n        const defCon = Object.assign({}, this.constructor.defaultConfig());\n        this.config(mergeRecursive(defCon, config));\n\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n    }\n\n     /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    computeViewableSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getPriorityDistribution () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    primaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._primaryMatrix;\n    }\n\n    secondaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._secondaryMatrix;\n    }\n\n    tree (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._tree;\n    }\n\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    createTree () {\n        const { tree, lastLevelKey } = createTree(this);\n        this._lastLevelKey = lastLevelKey;\n        return tree;\n    }\n\n    /**\n     * Returns the space taken by visual matrix\n     *\n     * @return {Object} space taken by the matrix\n     * @memberof VisualMatrix\n     */\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    /**\n     * Sets the provied space to the visual matrix\n     *\n     * @param {number} width width provided\n     * @param {number} height height provided\n     * @memberof VisualMatrix\n     */\n    setAvailableSpace (width, height) {\n        this.availableSpace({ width, height });\n        const tree = this.tree();\n        const heightMeasures = this.populateMaxMeasures(HEIGHT, tree);\n        const widthMeasures = this.populateMaxMeasures(WIDTH, tree);\n        const depth = this.calculateDepth(widthMeasures, heightMeasures);\n\n        this.viewableMatrix = this.createViewPortMatrix(depth);\n        this.viewableMeasures = this.redistributeSpaces(width, height);\n        return this;\n    }\n\n    /**\n     * Populate the max measures in the array\n     *\n     * @param {Array} measures array to be filled with max measures\n     * @param {Object} matrixTree matrix tree of visual matrix\n     * @param {number} measure width or height\n     * @param {number} [depth=0] depth of the tree that to be calculated\n     * @memberof VisualMatrix\n     */\n    populateMaxMeasures (type, matrixTree, depth = 0, measures = []) {\n        measures[depth] = Math.max(measures[depth] || 0, matrixTree.space[type]);\n        if (matrixTree.values) {\n            const childDepth = depth + 1;\n            matrixTree.values.forEach((child) => {\n                if (child.space) {\n                    measures = this.populateMaxMeasures(type, child, childDepth, measures);\n                }\n            });\n        }\n        return measures;\n    }\n\n    /**\n     * Gets the viewable measures for the current viewable matrix\n     *\n     * @return {Object} Set of viewable measures\n     * @memberof VisualMatrix\n     */\n    getViewableSpaces () {\n        return this.viewableMeasures;\n    }\n\n    /**\n     * Returns the matrix that can be viewed in the current viewport\n     *\n     * @return {Array} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    getViewableMatrices () {\n        return this.viewableMatrix;\n    }\n\n    /**\n     * Creates the viewport that can be viewed together\n     *\n     * @param {number} depth maxDepth that can be viewed in the viewport\n     * @return {Array<Object>} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    createViewPortMatrix (depth) {\n        const arr = [];\n        createMatrixInstances(arr, depth, this.removeExtraCells(), this);\n        return arr;\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    combineMatrices,\n    spaceTakenByColumn,\n    getDistributedHeight,\n    computeLogicalSpace,\n    createMatrixEachLevel\n  } from '../utils';\nimport { ROW_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class RowVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = (matrix[0].length > 0 ? matrix[0][0].length : 0);\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n\n        // Create Tree\n        this._tree = {\n            key: ROW_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, false);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height\n        } = measures;\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i };\n            const { widths, rowHeights, columnWidths } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = [height, height];\n            const columnMeasures = widths;\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n        tree.matrix = extraCellsRemover(tree.matrix, begCellLen, endCellLen);\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        let remainaingAvailWidth;\n        let remainaingWidth;\n        let cWidths = [];\n        let conditions = [];\n        let maxPrioritySpace = 0;\n        const {\n            matrix,\n            width: availableWidth,\n            maxMeasures: maxWidths,\n            maxWidth: currentWidth,\n            height\n        } = measures;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length ? this.primaryMatrix()[0].length : 0;\n\n        const dist = [];\n\n        remainaingAvailWidth = availableWidth;\n        remainaingWidth = currentWidth;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            // divider = Math.min(2, matrixLen);\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            // divider = Math.min(1, matrixLen);\n        }\n        conditions.forEach((i) => {\n            dist[i] = maxWidths[i];\n            maxPrioritySpace += maxWidths[i];\n            remainaingAvailWidth -= dist[i];\n            remainaingWidth -= dist[i];\n        });\n        matrix[0].forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                dist[i] = remainaingAvailWidth * (maxWidths[i] / remainaingWidth);\n            }\n        });\n        matrix.forEach(row => row.forEach((col, cIdx) => {\n            if (conditions.indexOf(cIdx) === -1) {\n                col.setAvailableSpace(dist[cIdx], height);\n\n                cWidths[cIdx] = Math.max(cWidths[cIdx] || 0, Math.floor(col.getLogicalSpace().width));\n            } else {\n                cWidths[cIdx] = 0;\n            }\n        }));\n\n        const prioritySpace = availableWidth - cWidths.reduce((t, n) => t + n);\n        if (prioritySpace < 0) {\n            cWidths = cWidths.map(() => 0);\n        } else {\n            conditions.forEach((i) => {\n                cWidths[i] = Math.floor(prioritySpace * (dist[i] / maxPrioritySpace || 1));\n            });\n        }\n        return cWidths;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures, heightMeasures) {\n        let i;\n        const { height } = this.availableSpace();\n\n        for (i = 0; i < heightMeasures.length; i++) {\n            if (heightMeasures[i] <= height) break;\n        }\n\n        return Math.min(widthMeasures.length - 1, i);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n        const maxMeasures = this.maxMeasures();\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        const logicalWidths = this.getPriorityDistribution({\n            matrix: this._layoutMatrix,\n            maxWidth,\n            maxMeasures,\n            width,\n            height\n        });\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths, logicalWidths };\n            const measures = this.redistributeViewSpaces(options);\n            maxWidths = measures.maxWidths;\n            maxHeights = measures.maxHeights;\n        });\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let cWidths = [];\n        let rHeights = [];\n        let mHeight = 0;\n        const maxMeasures = this.maxMeasures();\n\n        const {\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        } = this.config();\n        const { matrix, height, maxHeights, maxWidths, logicalWidths } = measures;\n        mHeight = spaceTakenByColumn(matrix, this._lastLevelKey).height;\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        measures.maxMeasures = maxMeasures;\n        measures.maxWidth = maxWidth;\n        if (maxWidth > 0) {\n            cWidths = logicalWidths;\n        } else {\n            cWidths = maxMeasures.map(() => 0);\n        }\n        rHeights = getDistributedHeight({\n            matrix,\n            cIdx: this._lastLevelKey,\n            height: mHeight,\n            availableHeight: height,\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        });\n        if (maxWidths.length > 0) {\n            cWidths = cWidths.map((e, i) => Math.max(e, maxWidths[0][i] || 0));\n        }\n        maxWidths.push(cWidths);\n        for (let x = 0; x < maxWidths.length; x++) {\n            maxWidths[x] = cWidths;\n        }\n        maxHeights.push(rHeights);\n        return { maxWidths, maxHeights };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = maxHeights[matrixIndex][rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth, colHeight - borderWidth);\n\n                if (rIdx === 0 && cIdx < breakPointer) {\n                    columnWidths[0][cIdx] = colWidth;\n                    widths[0] = (widths[0] || 0) + colWidth;\n                } else if (rIdx === 0 && cIdx >= breakPointer) {\n                    columnWidths[1][cIdx - breakPointer] = colWidth;\n                    widths[1] = (widths[1] || 0) + colWidth;\n                }\n                if (cIdx === this._lastLevelKey) {\n                    rowHeights[0][rIdx] = colHeight;\n                    rowHeights[1][rIdx] = colHeight;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    getDistributedWidth,\n    spaceTakenByRow,\n    createMatrixEachLevel,\n    computeLogicalSpace\n  } from '../utils';\nimport { COLUMN_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class ColumnVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = matrix[0].length;\n\n        // Create Tree\n        this._tree = {\n            key: COLUMN_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, true);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height,\n            width\n        } = measures;\n\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i, height };\n            const {\n                heights,\n                rowHeights,\n                columnWidths\n            } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = heights;\n            const columnMeasures = [width, width];\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n\n        tree.matrix = tree.matrix.map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        const {\n            height,\n            maxHeights\n        } = measures;\n        let remainaingHeight = height;\n        let heightDist = [];\n        let conditions = [];\n        let divider = 2;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            divider = 2;\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            divider = 1;\n        }\n        maxHeights.forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                heightDist[i] = e;\n                remainaingHeight -= e;\n            }\n        });\n        if (remainaingHeight < 0) {\n            heightDist = heightDist.map(() => 0);\n        } else {\n            conditions.forEach((e) => {\n                if (remainaingHeight / divider < maxHeights[e]) {\n                    heightDist[e] = 0;\n                } else {\n                    heightDist[e] = Math.min(maxHeights[e], (remainaingHeight) / divider);\n                }\n            });\n        }\n        return heightDist;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures) {\n        let j;\n        const { width } = this.availableSpace();\n\n        for (j = 0; j < widthMeasures.length; j++) {\n            if (widthMeasures[j] <= width) break;\n        }\n        return Math.min(widthMeasures.length - 1, j);\n    }\n\n     /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths };\n            const maxMeasures = this.redistributeViewSpaces(options);\n            maxWidths = maxMeasures.maxWidths;\n            maxHeights = maxMeasures.maxHeights;\n        });\n\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space column wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let rHeights = [];\n        const {\n            matrix,\n            width,\n            maxHeights,\n            maxWidths\n        } = measures;\n        const borderWidth = this.config().unitMeasures.border;\n\n        const mWidth = spaceTakenByRow(matrix[this._lastLevelKey]).width;\n        const cWidths = getDistributedWidth({\n            row: matrix[this._lastLevelKey],\n            width: mWidth,\n            availableWidth: width\n        }, this.config());\n\n        matrix.forEach((row, rIdx) => row.forEach((col, cIdx) => {\n            const oldLogicalSpace = col.getLogicalSpace();\n\n            col.setAvailableSpace(cWidths[cIdx] - borderWidth, oldLogicalSpace.height);\n            rHeights[rIdx] = Math.max(rHeights[rIdx] || 0, Math.floor(col.getLogicalSpace().height));\n        }));\n        if (maxHeights.length > 0) {\n            rHeights = rHeights.map((e, i) => Math.max(e, maxHeights[0][i]));\n        }\n        maxHeights.push(rHeights);\n        for (let x = 0; x < maxHeights.length; x++) {\n            maxHeights[x] = rHeights;\n        }\n        maxWidths.push(cWidths);\n        return { maxHeights, maxWidths };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, height, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        const heightDistribution = this.getPriorityDistribution({ height, maxHeights: maxHeights[0] || [] });\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = heightDistribution[rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth - borderWidth, colHeight);\n\n                if (cIdx === 0 && rIdx < breakPointer) {\n                    rowHeights[0][rIdx] = colHeight;\n                    heights[0] = (heights[0] || 0) + colHeight;\n                } else if (cIdx === 0 && rIdx >= breakPointer) {\n                    rowHeights[1][rIdx - breakPointer] = colHeight;\n                    heights[1] = (heights[1] || 0) + colHeight;\n                }\n                if (rIdx === this._lastLevelKey) {\n                    columnWidths[0][cIdx] = colWidth;\n                    columnWidths[1][cIdx] = colWidth;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import {\n    HEIGHT, WIDTH, COLUMN, ROW, HORIZONTAL, VERTICAL, HOLISTIC,\n    MAX_WIDTH_AVAIL_FOR_COL_MATRIX, COLUMN_MATRIX, MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX, ROW_MATRIX, SCROLL\n} from '../enums/constants';\n\n/**\n * Gets measurement for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @return {Object} Logical height/width of the matrix\n */\nexport function getMatrixMeasurement (matrix, type) {\n    if (matrix) {\n        return matrix.getLogicalSpace()[type];\n    }\n    return 0;\n}\n\n/**\n * Sets available space for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @param {number} value Value of measurement\n */\nexport function setMatrixMeasurement (matrix, type, value) {\n    if (matrix) {\n        const spaces = matrix.getLogicalSpace();\n        if (value && spaces[type] !== value) {\n            type === HEIGHT ? matrix.setAvailableSpace(spaces.width, value) :\n                matrix.setAvailableSpace(value, spaces.height);\n        }\n    }\n}\n\nconst setAvailableSpace = (matrix, widths, heights) => {\n    matrix.forEach((row, rIdx) => {\n        row.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(widths[cIdx], heights[rIdx]);\n        });\n    });\n};\n\nconst setViewSpaces = (layout, pointerType, viewSpaces) => {\n    let pointer = layout.config()[`${pointerType}Pointer`];\n    if (viewSpaces.length - 1 < pointer) {\n        pointer = 0;\n        layout.config({ [`${pointerType}Pointer`]: pointer });\n    }\n    return pointer;\n};\n\nconst paginationDetailsMap = {\n    column: {\n        maxMeasure: MAX_WIDTH_AVAIL_FOR_COL_MATRIX,\n        matrix: COLUMN_MATRIX,\n        measureType: WIDTH,\n        scrollType: HORIZONTAL\n    },\n    row: {\n        maxMeasure: MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX,\n        matrix: ROW_MATRIX,\n        measureType: HEIGHT,\n        scrollType: VERTICAL\n    }\n};\n\n/**\n * This method provides the required width/height in the different pagination stages.\n * If the pagination is holistic, then only the max width/height will be provided for layouting\n * If scroll is enabled, then the entire width/height shall be provided for layouting\n * Note: width is required for scrolling the columns while height is required for scrolling rows\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {Object} measureDetails different measure details for row/column\n * @param {number} maxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst getMatrixMeasureForPagination = (layout, measureDetails, maxMeasure) => {\n    const {\n        pagination\n    } = layout.config();\n    const {\n        matrix,\n        measureType,\n        scrollType\n    } = measureDetails;\n\n    switch (pagination) {\n    case HOLISTIC:\n        return maxMeasure;\n    default: {\n        const actualMeasure = getMatrixMeasurement(layout[matrix](), measureType);\n\n        if (actualMeasure > maxMeasure) {\n            layout.scrollInfo({ [scrollType]: true });\n        }\n        return Math.max(maxMeasure, actualMeasure);\n    }\n    }\n};\n\n/**\n * This method uses the getMatrixMeasureForPagination function to calculate maximum measure\n * depending on the layouting algorithm used\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {string} matrixType row/column\n * @param {number} relatedMaxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst paginationMeasureGetter = (layout, matrixType, relatedMaxMeasure) =>\n    getMatrixMeasureForPagination(layout, paginationDetailsMap[matrixType], relatedMaxMeasure);\n\nconst getMatrixWidthDetails = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const {\n        width\n    } = layout.measurement();\n    const {\n        border,\n        buffer\n    } = layout.config();\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get width of row matrix\n    const rowMatrixWidth = getMatrixMeasurement(rowMatrix, WIDTH);\n\n    // Get maximum width allowed for the row matrix\n    const maxRowMatrixWidth = Math.min(rowMatrixWidth, (width - buffer) / 2);\n\n    // Get maximum width available for the column matrix\n    const maxWidthAvailableForColumnMatrix = width - maxRowMatrixWidth - borderWidth;\n\n    // Set width for column matrix\n    const columnMatrixWidth = paginationMeasureGetter(layout, COLUMN, maxWidthAvailableForColumnMatrix);\n\n    return {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n\nconst getHeightRequiredByColMatrix = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const columnMatrix = layout.columnMatrix();\n\n    // Get maximum allowed height for colum matrix\n    const maxColumnMatrixHeight = Math.min(columnMatrix.getLogicalSpace().height, height / 2);\n\n    // Set the computed width and max height to column matrix to determine the actual height\n    // that will be taken by the column matrix\n    columnMatrix.setAvailableSpace(columnMatrixWidth, maxColumnMatrixHeight);\n\n    // Get the set of pages column view\n    const columnViewPages = columnMatrix.getViewableSpaces();\n\n    // Figuring out total space needed by current view space\n    const columnViewSpace = columnViewPages[layout.config().columnPointer];\n\n    // Getting height of column matrix\n    const columnMatrixHeight = columnViewSpace.height.primary + columnViewSpace.height.secondary;\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight\n    };\n};\n\nconst getMatrixHeightDetails = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n\n    // Get actual height required by column matrix\n    const { columnMatrixHeight, maxColumnMatrixHeight } = getHeightRequiredByColMatrix(layout, columnMatrixWidth);\n\n    // Based on column height, compute max height available for row matrix\n    const maxHeightAvailableForRowMatrix = height - Math.min(maxColumnMatrixHeight, columnMatrixHeight);\n\n    // Get height for row matrix\n    const rowMatrixHeight = paginationMeasureGetter(layout, ROW, maxHeightAvailableForRowMatrix);\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    };\n};\n\nconst setValueMatrixMeasurements = (layout, rowViewableSpaces, columnViewableSpaces) => {\n    const centerMatrix = layout.centerMatrix();\n\n    const {\n        border\n    } = layout.config();\n    const matrices = layout.matrices();\n    const {\n        top,\n        bottom\n    } = matrices;\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get the heights for each cell in the row matrix\n    const rowHeights = [].concat(...rowViewableSpaces.map(e => e.rowHeights.primary));\n\n    // Get the widths for each of the row matrix cells(primary and secondary)\n    const rowWidthsPrimary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.primary));\n    const rowWidthsSecondary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.secondary));\n\n    // Get the widths for each cell in the column matrix\n    const columnWidths = [].concat(...columnViewableSpaces.map(e => e.columnWidths.primary));\n\n    // Get the widths for each of the column matrix cells(primary and secondary)\n    const columnHeightsPrimary = columnViewableSpaces[0].rowHeights.primary;\n    const columnHeightsSecondary = [].concat(...columnViewableSpaces.map(e => e.rowHeights.secondary));\n\n    // Setting the available space for each cell in the centre matrix computed throught the row and\n    // column matrices\n    centerMatrix.forEach((matrix, rIdx) => {\n        matrix.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(columnWidths[cIdx] - borderWidth, rowHeights[rIdx] - borderWidth);\n        });\n    });\n\n    // Set the heights and widths for the corner matrices namely:\n    // TOP_LEFT\n    setAvailableSpace(top[0], rowWidthsPrimary, columnHeightsPrimary);\n    // TOP_RIGHT\n    setAvailableSpace(top[2], rowWidthsSecondary, columnHeightsPrimary);\n    // BOTTOM_LEFT\n    setAvailableSpace(bottom[0], rowWidthsPrimary, columnHeightsSecondary);\n     // BOTTOM_RIGHT\n    setAvailableSpace(bottom[2], rowWidthsSecondary, columnHeightsSecondary);\n};\n\nconst bufferCondition = {\n    isScroll: true,\n    pagination: SCROLL\n};\n\nconst getBufferFromCondition = (layout, type) => {\n    const scrollInfo = layout.scrollInfo();\n    const {\n        pagination\n    } = layout.config();\n\n    const currentBufferType = {\n        pagination,\n        isScroll: scrollInfo[type]\n    };\n\n    return Object.keys(bufferCondition).every(e => bufferCondition[e] === currentBufferType[e]);\n};\n\nconst getActualBufferFromConfig = (layout) => {\n    const {\n        buffer\n    } = layout.config();\n    const [horizontalBuffer, verticalBuffer] = [HORIZONTAL, VERTICAL].map((type) => {\n        if (getBufferFromCondition(layout, type)) {\n            return buffer;\n        }\n        return 0;\n    });\n\n    return {\n        horizontalBuffer,\n        verticalBuffer\n    };\n};\n/**\n * Computes the measurements of space for all matrices in the\n * layout\n *\n * @param {Object} layout Instance of grid layout\n * @return {Object} set of measurements for the layout\n */\nexport const computeLayoutMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n\n    // Compute the widths of the row and column matrices\n    const {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        maxWidthAvailableForColumnMatrix,\n        columnMatrixWidth\n    } = getMatrixWidthDetails(layout);\n\n    // Compute the heights of the row and column matrices\n    const {\n        columnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    } = getMatrixHeightDetails(layout, columnMatrixWidth);\n\n    const {\n        horizontalBuffer,\n        verticalBuffer\n    } = getActualBufferFromConfig(layout);\n\n    rowMatrix.setAvailableSpace(maxRowMatrixWidth, rowMatrixHeight - horizontalBuffer);\n    columnMatrix.setAvailableSpace(columnMatrixWidth - verticalBuffer, columnMatrixHeight);\n\n    // Get row and columns viewable spaces\n    const rowViewableSpaces = rowMatrix.getViewableSpaces();\n    const columnViewableSpaces = columnMatrix.getViewableSpaces();\n\n    // Set view spaces for row and columns\n    setViewSpaces(layout, ROW, rowViewableSpaces);\n    setViewSpaces(layout, COLUMN, columnViewableSpaces);\n\n    // Set measures for each cell of the value matrix\n    setValueMatrixMeasurements(layout, rowViewableSpaces, columnViewableSpaces);\n\n    return {\n        rowMatrixHeight: rowMatrixHeight - horizontalBuffer,\n        rowMatrixWidth,\n        maxHeightAvailableForRowMatrix: maxHeightAvailableForRowMatrix - horizontalBuffer,\n\n        columnMatrixHeight,\n        columnMatrixWidth: columnMatrixWidth - verticalBuffer,\n        maxWidthAvailableForColumnMatrix: maxWidthAvailableForColumnMatrix - verticalBuffer\n    };\n};\n","/**\n * Gets view matrices based on current pointers for row and column\n *\n * @param {Object} layout instance of layout\n * @param {number} rowPointer current row pointer\n * @param {number} columnPointer current column pointer\n * @return {Object} returns the view matrix and its relevant information\n */\nexport const getViewMatrices = (layout, rowPointer, columnPointer) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const matrices = layout.matrices();\n    const rowMatrices = rowMatrix.getViewableMatrices();\n    const columnMatrices = columnMatrix.getViewableMatrices();\n    const centralMatrixPointer = {\n        row: 0,\n        column: 0\n    };\n\n    for (let i = rowPointer - 1; i >= 0; i--) {\n        const length = Math.max(rowMatrices[i].primaryMatrix.length,\n            rowMatrices[i].secondaryMatrix.length);\n        centralMatrixPointer.row += length;\n    }\n     /* istanbul ignore next */\n    for (let i = columnPointer - 1; i >= 0; i--) {\n        const matrix = columnMatrices[i];\n        const { primaryMatrix, secondaryMatrix } = matrix;\n        const length = Math.max(primaryMatrix[0] ? primaryMatrix[0].length : 0,\n            secondaryMatrix[0] ? secondaryMatrix[0].length : 0);\n        centralMatrixPointer.column += length;\n    }\n\n    matrices.top[1] = columnMatrices[columnPointer].primaryMatrix;\n    matrices.bottom[1] = columnMatrices[columnPointer].secondaryMatrix;\n\n    matrices.center[0] = rowMatrices[rowPointer].primaryMatrix;\n    matrices.center[2] = rowMatrices[rowPointer].secondaryMatrix;\n\n    const rowMatrixLen = Math.max(matrices.center[0].length, matrices.center[2].length);\n     /* istanbul ignore next */\n    const columnMatrixLen = Math.max(matrices.top[1][0] ? matrices.top[1][0].length : 0, matrices.bottom[1][0] ?\n            matrices.bottom[1][0].length : 0);\n    matrices.center[1] = centerMatrix.slice(centralMatrixPointer.row, centralMatrixPointer.row + rowMatrixLen)\n        .map(matrix => matrix.slice(centralMatrixPointer.column, centralMatrixPointer.column + columnMatrixLen));\n\n    return {\n        matrices,\n        rowPages: rowMatrices.length,\n        columnPages: columnMatrices.length\n    };\n};\n\nconst measureSum = measureArr => measureArr.reduce((total, measure) => total + measure, 0);\n/**\n * Returns measurements of the cells of the current matrix\n *\n * @param {Object} layout instance of layout\n * @return {Object} returns the measurements for current view matrix\n */\nexport const getViewMeasurements = (layout, maxRowHeight, maxColWidth) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const {\n        columnPointer,\n        rowPointer\n    } = layout.config();\n\n    const rowSpaces = rowMatrix.getViewableSpaces()[rowPointer];\n    const colSpaces = columnMatrix.getViewableSpaces()[columnPointer];\n\n    const {\n        rowHeights,\n        width: rowMatrixWidth\n    } = rowSpaces;\n    const {\n        columnWidths,\n        height: columnMatrixHeight\n    } = colSpaces;\n\n    const { primary: leftWidth, secondary: rightWidth } = rowMatrixWidth;\n    const { primary: topHeight, secondary: bottomHeight } = columnMatrixHeight;\n\n    const centerHeight = measureSum(rowHeights.primary);\n    const centerWidth = measureSum(columnWidths.primary);\n    const viewWidth = [leftWidth, Math.min(centerWidth, maxColWidth), rightWidth];\n    const viewHeight = [topHeight, Math.min(centerHeight, maxRowHeight), bottomHeight];\n\n    return {\n        viewWidth,\n        viewHeight,\n        actualCenterMeasures: {\n            height: centerHeight,\n            width: centerWidth\n        },\n        totalMeasures: {\n            width: measureSum(viewWidth),\n            height: measureSum(viewHeight)\n        },\n        unitHeights: rowHeights,\n        unitWidths: columnWidths\n    };\n};\n","/**\n * This file declares a table that can be extended to create a Datagrid, crosstab\n * and man other visualzations that require a tabular structure.\n */\n\nimport { getUniqueId, mergeRecursive } from 'muze-utils';\nimport GenericLayout from '../generic-layout';\nimport { DEFAULT_CONFIGURATION, DEFAULT_MEASUREMENTS } from './defaults';\nimport { generateVisualMatrices } from './layout-helper';\nimport { computeLayoutMeasurements } from './computations';\nimport { getViewMeasurements, getViewMatrices } from './view-info-getter';\n/**\n * This class is used to create a tabular structure that\n * can house charts and values.\n *\n * @class GridLayout\n */\nexport default class GridLayout extends GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} matrices Set of upto 9 matrices containing the cells to be rendered\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config external configurations.\n     * @memberof GenericLayout\n     */\n    constructor (matrices, mountPoint, measurement, config) {\n        super(mountPoint, measurement, config);\n        this.matrices(matrices);\n        this.config(this.constructor.defaultConfig());\n        this._layoutId = getUniqueId();\n        this._viewInfo = this.constructor.defaultViewInfo();\n        this._scrollInfo = { horizontal: false, vertical: false };\n    }\n\n    static defaultViewInfo () {\n        return Object.assign({}, {\n            layoutDimensions: {\n                border: this.defaultConfig().border,\n                viewHeight: [0, 0, 0],\n                viewWidth: [0, 0, 0]\n            },\n            viewMatricesInfo: {\n                columnPages: 0,\n                rowPages: 0,\n                matrices: { top: [], center: [], bottom: [] }\n            }\n        });\n    }\n\n    /**\n     * Returns initial set of measurements for the grid layout\n     *\n     * @static\n     * @return {Object} Returns initial set of measurements\n     * @memberof GridLayout\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENTS;\n    }\n\n    /**\n     * Returns initialconfiguration for grid layout\n     *\n     * @static\n     * @return {Object} Returns initial configuration for grid layout\n     * @memberof GridLayout\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIGURATION;\n    }\n\n    /**\n     * This function is used to return an instance of GridLayout\n     *\n     * @return {GridLayout} Instance of grid layout.\n     * @static\n     * @memberof GridLayout\n     */\n    static create () {\n        return new GridLayout(null, null, this.defaultMeasurement(), this.defaultConfig());\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     *\n     * @param {Array} matrices Set of matrices\n     * @return {Object} Getter/Setter\n     * @memberof GridLayout\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = generateVisualMatrices(this, matrices);\n            return this;\n        }\n        return super.matrices(matrices);\n    }\n\n    /**\n     * Triggers the computations for the layout based on the matrices available\n     * This causes a reflow in the entire layout system.\n     *\n     * @return {Object} Layout instance\n     * @memberof GridLayout\n     */\n    triggerReflow () {\n        const {\n            maxHeightAvailableForRowMatrix,\n            maxWidthAvailableForColumnMatrix\n        } = computeLayoutMeasurements(this);\n        this.setViewInformation(maxHeightAvailableForRowMatrix, maxWidthAvailableForColumnMatrix);\n        return this;\n    }\n\n    gotoPage (type, pageNumber) {\n        const pageType = type.toLowerCase();\n        const { viewMatricesInfo } = this.viewInfo();\n        const totalPages = viewMatricesInfo[`${pageType}Pages`];\n        const pointer = Math.min(Math.max(1, pageNumber), totalPages);\n        this.config({\n            [`${pageType}Pointer`]: pointer - 1\n        });\n        this.setViewInformation();\n        this.renderGrid();\n        return this;\n    }\n\n    pages (type) {\n        const { viewMatricesInfo } = this.viewInfo();\n        const pageType = type.toLowerCase();\n        return {\n            totalPages: viewMatricesInfo[`${pageType}Pages`],\n            currentPage: this.config()[`${pageType}Pointer`] + 1\n        };\n    }\n\n    viewInfo (...viewInfo) {\n        if (viewInfo.length) {\n            this._viewInfo = viewInfo[0];\n            return this;\n        }\n        return this._viewInfo;\n    }\n\n    scrollInfo (...scrollInfo) {\n        if (scrollInfo.length) {\n            this._scrollInfo = mergeRecursive(this._scrollInfo, scrollInfo[0]);\n            return this;\n        }\n        return this._scrollInfo;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GridLayout\n     */\n    setViewInformation (maxRowHeight, maxColWidth) {\n        const {\n            rowPointer,\n            columnPointer,\n            border\n        } = this.config();\n        const viewMatricesInfo = getViewMatrices(this, rowPointer, columnPointer);\n        const layoutDimensions = getViewMeasurements(this, maxRowHeight, maxColWidth);\n        layoutDimensions.border = border;\n        this.viewInfo({\n            viewMatricesInfo,\n            layoutDimensions\n        });\n        return this;\n    }\n}\n","import RowMatrix from '../visual-matrix/row-matrix';\nimport ColumnMatrix from '../visual-matrix/column-matrix';\n\nexport const generateVisualMatrices = (context, matrices) => {\n    // Set of matrices for layout is generated starting with the left matrix\n    let leftMatrix = [];\n    let rightMatrix = [];\n    let topMatrix = [];\n    let bottomMatrix = [];\n    let begColCells;\n    let endColCells;\n    const {\n        isRowSizeEqual,\n        isColumnSizeEqual,\n        gutterSpace,\n        distribution,\n        border,\n        breakPage,\n        priority\n    } = context.config();\n    const {\n        minUnitHeight,\n        minUnitWidth\n    } = context.measurement();\n    const { top, center, bottom } = matrices;\n    const [topLeft, topColumns, topRight] = top;\n    const [leftRows, valueMatrix, rightRows] = center;\n    const [bottomLeft, bottomColumns, bottomRight] = bottom;\n\n    if (leftRows.length > 0) {\n        // If no left matrix is present, context will be empty\n        leftMatrix = [...topLeft, ...leftRows, ...bottomLeft];\n    }\n    if (rightRows.length > 0) {\n        // If no right matrix is present, context will be empty\n        rightMatrix = [...topRight, ...rightRows, ...bottomRight];\n    }\n    if (topColumns.length > 0 && topColumns[0].length > 0) {\n        // If no top matrix is present, context will be empty\n        topMatrix = topColumns.map((d, i) => [...topLeft[i], ...d, ...topRight[i]]);\n    }\n    if (bottomColumns.length > 0 && bottomColumns[0].length > 0) {\n        // If no bottom matrix is present, context will be empty\n        bottomMatrix = bottomColumns.map((d, i) => [...bottomLeft[i], ...d, ...bottomRight[i]]);\n    }\n\n    context.rowMatrix(new RowMatrix([leftMatrix, rightMatrix], {\n        isDistributionEqual: isRowSizeEqual,\n        distribution: distribution.rows,\n        gutter: gutterSpace.rows,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.row,\n        breakPage: breakPage.rows.map(e => e + Math.max(topLeft.length, topRight.length)),\n        extraCellLengths: [topLeft.length, bottomLeft.length]\n    }));\n\n    if (topLeft.length > 0) {\n        begColCells = topLeft[0].length;\n    } else {\n        begColCells = bottomLeft.length > 0 ? bottomLeft[0].length : 0;\n    }\n\n    if (topRight.length > 0) {\n        endColCells = topRight[0].length;\n    } else {\n        endColCells = bottomRight.length > 0 ? bottomRight[0].length : 0;\n    }\n\n    context.columnMatrix(new ColumnMatrix([topMatrix, bottomMatrix], {\n        isDistributionEqual: isColumnSizeEqual,\n        distribution: distribution.columns,\n        gutter: gutterSpace.columns,\n        isTransposed: true,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.col,\n        breakPage: breakPage.columns,\n        extraCellLengths: [begColCells, endColCells]\n    }));\n    context.centerMatrix(valueMatrix);\n\n    return matrices;\n};\n","import {\n    TOP, BOTTOM, LEFT, RIGHT, CENTER, BLANK_BORDERS, COLUMN, ROW,\n    VIEW_INDEX, ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, MIDDLE, NO_BORDERS\n} from '../enums/constants';\n\nconst borderMap = {\n    [`${TOP}-${LEFT}`]: NO_BORDERS,\n    [`${TOP}-${MIDDLE}`]: COLUMN,\n    [`${TOP}-${RIGHT}`]: NO_BORDERS,\n    [`${CENTER}-${LEFT}`]: ROW,\n    [`${CENTER}-${MIDDLE}`]: CENTER,\n    [`${CENTER}-${RIGHT}`]: ROW,\n    [`${RIGHT}-${LEFT}`]: NO_BORDERS,\n    [`${RIGHT}-${MIDDLE}`]: COLUMN,\n    [`${RIGHT}-${RIGHT}`]: NO_BORDERS\n};\n\nconst applySpecificBorder = (cells, color, type, style) => {\n    cells.style(`border-${type}`, `${style} ${color}`);\n};\n\nconst specificBorderApplier = (borderTypes, showBorders, cells, borderInfo) => {\n    const {\n        color,\n        width,\n        style\n    } = borderInfo;\n    const borderStyle = `${width}px ${style}`;\n\n    borderTypes.forEach((borderType) => {\n        applySpecificBorder(cells, showBorders[borderType] ? color : BLANK_BORDERS, borderType, borderStyle);\n    });\n};\n\nconst borderApplier = (cells, borderInfo) => {\n    const {\n       showRowBorders,\n      showColBorders,\n      showValueBorders\n  } = borderInfo;\n    return {\n        row: () => specificBorderApplier([TOP, BOTTOM], showRowBorders, cells, borderInfo),\n        column: () => specificBorderApplier([LEFT, RIGHT], showColBorders, cells, borderInfo),\n        center: () => specificBorderApplier([LEFT, RIGHT, TOP, BOTTOM], showValueBorders, cells, borderInfo)\n    };\n};\n\nexport const applyBorders = (cells, border, row, column) => {\n    const borderApplierFn = borderApplier(cells, border);\n    const borderMapVal = borderMap[`${ROW_MATRIX_INDEX[VIEW_INDEX[row]]}-${COLUMN_MATRIX_INDEX[column]}`];\n    if (borderMapVal) {\n        borderApplierFn[borderMapVal]();\n    }\n};\n","import { selectElement } from 'muze-utils';\nimport {\n     TOP, BOTTOM, ROW_SPAN, COL_SPAN, CENTER, ROW, COLUMN\n} from '../enums/constants';\n\nconst orderMaker = arr => Array.from(Array(arr.length).keys());\n\nconst nestByStack = (stack, updateArr, optionalParams = {}) => {\n    let {\n        order,\n        keyFn\n    } = optionalParams;\n    const arr = updateArr.slice();\n    const currStack = stack.slice();\n    const prevStack = currStack.slice();\n    // Order in which element are to be checked for nesting, default normal looping\n    // Order is always in the order of nest, i.e., left to right\n    order = order || Array.from(Array(arr.length).keys());\n\n    // Key function, if array of objects\n    keyFn = keyFn || (v => v);\n\n    // Return same array if stack is empty\n    if (currStack.length === 0) {\n        const newArr = [];\n        order.forEach((e) => {\n            newArr.push(arr[e]);\n        });\n        return { prevStack, currStack: arr, arr: newArr };\n    }\n\n    let arrVal = '';\n    let stackVal = '';\n    const newArr = [];\n\n    // Loop in order\n    for (let i = order.length - 1; i >= 0; i--) {\n        // Get current element index from the order given\n        const currElemIndex = order[i];\n\n        // Crete a hashmap for the hierarchy by joining strings of the array for both stack and input array\n        arrVal += keyFn(arr[currElemIndex]);\n        stackVal += keyFn(currStack[currElemIndex]);\n\n        // If the current value and value in stack is same, convert it to null\n        if (arrVal === stackVal) {\n            newArr[currElemIndex] = null;\n        } else {\n            stackVal = '';\n            // Loop from the current index in order to the last element in order to change the\n            // whole hierarchy\n            for (let j = i; j < order.length; j++) {\n                const newElem = order[j];\n                const arrElem = arr[newElem];\n\n                newArr[newElem] = arrElem;\n\n                // Reset stack to new stack\n                currStack[newElem] = arrElem;\n                stackVal = arrVal;\n            }\n        }\n    }\n    const returnArr = [];\n    order.forEach((e) => {\n        returnArr.push(newArr[e]);\n    });\n    return { prevStack, currStack, arr: returnArr };\n};\n\nconst spanCalculator = (colData, colIdx, matrix, rIdx) => {\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData) {\n        return () => 1;\n    }\n\n    const conditions = {\n        row: count => matrix[rIdx + count] && matrix[rIdx + count][colIdx],\n        column: count => matrix[rIdx][colIdx + count]\n    };\n\n    return (type) => {\n        let count = 1;\n        let isNull = false;\n\n        while (!isNull) {\n            if (conditions[type](count) === null) {\n                count += 1;\n            } else {\n                isNull = true;\n            }\n        }\n        return count;\n    };\n};\n\nconst maskCreator = (matrix, order) => ({\n    row: () => {\n        let stack = [];\n        return matrix.map((e) => {\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, e, { keyFn: val => val.valueOf(), order });\n\n            stack = currStack;\n            return arr;\n        });\n    },\n    column: () => {\n        let stack = [];\n        const viewMatrix = [];\n        matrix.length && matrix[0].forEach((cell, colIndex) => {\n            const hierarchy = [];\n            matrix.forEach((row) => {\n                hierarchy.push(row[colIndex]);\n            });\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, hierarchy, { keyFn: val => val.valueOf(), order });\n            stack = currStack;\n\n            matrix.forEach((row, rowIndex) => {\n                viewMatrix[rowIndex] = viewMatrix[rowIndex] || [];\n                viewMatrix[rowIndex][colIndex] = arr[rowIndex];\n            });\n        });\n        return viewMatrix;\n    }\n});\n\nconst spanGenerator = viewMatrix => ({\n    row: () => {\n        const spans = [];\n        viewMatrix.forEach((row, ridx) => {\n            spans[ridx] = spans[ridx] || [];\n            row.forEach((col, i) => {\n                if (viewMatrix[ridx][i]) {\n                    const currSpan = spanCalculator(col, i, viewMatrix, ridx)('row');\n                    currSpan && spans[ridx].push(currSpan);\n                }\n            });\n        });\n        return spans;\n    },\n    column: () => viewMatrix.map((row, ridx) => row.map((col, i) => spanCalculator(col, i, viewMatrix, ridx)('column'))\n                    .filter(col => col !== 1))\n});\n\nconst getOrder = isReverse => ({\n    row: (matrix) => {\n        if (isReverse) {\n            return orderMaker(matrix[0]).reverse();\n        }\n        return orderMaker(matrix[0]);\n    },\n    column: (matrix) => {\n        if (isReverse) {\n            return orderMaker(matrix).reverse();\n        }\n        return orderMaker(matrix);\n    }\n});\n\nconst matrixSpanGeneratorMap = {\n    [`${TOP}-1`]: {\n        orderGetter: getOrder(false)[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${BOTTOM}-1`]: {\n        orderGetter: getOrder(true)[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${CENTER}-0`]: {\n        orderGetter: getOrder(false)[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    },\n    [`${CENTER}-2`]: {\n        orderGetter: getOrder(true)[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    }\n};\n\nconst matrixSpanGenerator = (type) => {\n    const generator = matrixSpanGeneratorMap[type];\n    if (generator) {\n        return generator;\n    }\n    return {\n        orderGetter: () => null,\n        viewMatrixMaker: matrix => () => matrix,\n        spanMaker: () => () => null\n    };\n};\n\n/**\n * This function is used to set the col and row spans\n * for the matrices based on repeated/hierarchichal data\n *\n * @export\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {string} type Type of array (center, top, bottom)\n * @param {number} index Index of array in the row\n * @return {Object} containing the view matrix and their spans\n */\nexport function cellSpanMaker (matrix, type, index) {\n    let spans = null;\n    let viewMatrix = matrix;\n    const {\n        orderGetter,\n        viewMatrixMaker,\n        spanMaker\n    } = matrixSpanGenerator(`${type}-${index}`);\n\n    if (matrix.length) {\n        const order = orderGetter(matrix);\n        viewMatrix = viewMatrixMaker(matrix, order)();\n        spans = spanMaker(viewMatrix)();\n    }\n    return { viewMatrix, spans };\n}\n\nconst spaceAllocationDueToSpan = (span, placeholder, borderWidth) => {\n    const height = placeholder.availHeight();\n    const width = placeholder.availWidth();\n\n    return {\n        [ROW_SPAN] () {\n            selectElement(this).style('height', `${height + borderWidth}px`);\n            if (span > 1) {\n                selectElement(this).style('height', `${height * span + borderWidth * (span)}px`);\n                placeholder.setAvailableSpace(width, height * span);\n            }\n        },\n        [COL_SPAN] () {\n            if (span > 1) {\n                placeholder.setAvailableSpace(width * span + borderWidth * (span - 1), height);\n            }\n            selectElement(this).style('height', `${height}px`);\n        }\n    };\n};\n\nconst spanApplier = (cells, spans, config, type) => {\n    const borderWidth = config.border.width;\n\n    cells.attr(type, function (cell, colIndex) {\n        const span = spans[cell.rowIndex][colIndex];\n        const placeholder = cell.placeholder;\n\n        spaceAllocationDueToSpan(span, placeholder, borderWidth)[type].bind(this)();\n        return span;\n    });\n};\n\nconst spanApplierMap = {\n    [`${TOP}-0`]: null,\n    [`${TOP}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${TOP}-2`]: null,\n    [`${CENTER}-0`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${CENTER}-1`]: null,\n    [`${CENTER}-2`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${BOTTOM}-0`]: null,\n    [`${BOTTOM}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${BOTTOM}-2`]: null\n};\n\nexport const applySpans = (cells, spans, config, type) => {\n    const applier = spanApplierMap[type];\n    if (applier) {\n        applier(cells, spans, config);\n    }\n};\n","import { ERROR_MSG } from 'muze-utils';\n/**\n * An Interface to be implemented if the transaction support is necessary. This class ensures reactivity to\n * global properties.\n */\nexport default class TransactionSupport {\n    /**\n     * Property accessor for data member of the class. Data is passed to the system by calling this method.\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for width of the class. Width is passed as an integer.\n     */\n    width () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for height of the class. Height is passed as an integer.\n     */\n    height () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for config of the class. Config is passed as an object.\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n}\n","import { TOP, BOTTOM, LEFT, TITLE, SUB_TITLE, GROUP, LAYOUT, LEGEND } from '../constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const arrangeComponents = (context) => {\n    const legendConfig = context.config().legend;\n    const titleConfig = context.title()[1];\n    const subtitleConfig = context.subtitle()[1];\n    const titleLayouts = {\n        [`${TOP}-${TOP}`]: [TITLE, SUB_TITLE, GROUP],\n        [`${BOTTOM}-${BOTTOM}`]: [GROUP, SUB_TITLE, TITLE],\n        [`${TOP}-${BOTTOM}`]: [TITLE, GROUP, SUB_TITLE],\n        [`${BOTTOM}-${TOP}`]: [SUB_TITLE, GROUP, TITLE]\n    };\n    const legendLayouts = [\n        [LEGEND, LAYOUT],\n        [LAYOUT, LEGEND]\n    ];\n    const titlePosition = titleConfig.position || TOP;\n    const subtitlePosition = subtitleConfig.position || TOP;\n\n    return {\n        headers: titleLayouts[`${titlePosition}-${subtitlePosition}`],\n        legends: legendConfig.position === LEFT || legendConfig.position === TOP ?\n        legendLayouts[0] : legendLayouts[1]\n    };\n};\n","/**\n * Flag to specify whether direction is vertical.\n */\nexport const MARGIN = 'margin';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const SPACE_FIXER = 'spaceFixer';\nexport const CLASSPREFIX = 'muze';\nexport const VERTICAL_ALIGN = 'verticalAlign';\nexport const TEXT_ALIGN = 'textAlign';\nexport const IS_OFFSET = 'isOffset';\nexport const MIDDLE = 'middle';\nexport const BASELINE = 'baseline';\nexport const SHOW = 'show';\nexport const CENTER = 'center';\nexport const TEXT = 'text';\nexport const HEADER = 'header';\nexport const HEIGHT = 'height';\nexport const WIDTH = 'width';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const FIELDS = 'fields';\nexport const TRANSFORM = 'transform';\nexport const LAYER_DEF = 'layerDef';\nexport const CONFIG = 'config';\nexport const DETAIL_FIELDS = 'detailFields';\nexport const MAX_LINES = 'maxLines';\nexport const MIN_CHARS = 'minCharacters';\nexport const ROTATION = 'rotation';\n\nexport const TEXT_CELL = 'text-cell';\nexport const AXIS_CELL = 'axis-cell';\nexport const GEOM_CELL = 'geom-cell';\nexport const BLANK_CELL = 'blank-cell';\n","// eneum to refer to simple cell\nexport const SIMPLE = 'simple';\n// eneum to refer to header cell\nexport const TEXT = 'text';\n// enum to refer to axis cell\nexport const AXIS = 'axis';\n// enum to refer to visual cell\nexport const GEOM = 'geom';\n// enum to refer blank cell\nexport const BLANK = 'blank';\n","import {\n    ERROR_MSG,\n    getUniqueId,\n    mergeRecursive\n} from 'muze-utils';\nimport { SIMPLE } from './enums/cell-type';\n\n/**\n * This file declares a class that is used as an interface to create new\n * SimpleCell elements.\n * @module SimpleCell\n */\n/**\n * Base class for all table cells.\n *\n * @interface\n * @class SimpleCell\n */\nclass SimpleCell {\n\n    /**\n     * Creates an instance of SimpleCell.\n     *\n     * @param {*} config The input configuration.\n     * @memberof SimpleCell\n     */\n    constructor (config) {\n        this._id = getUniqueId();\n\n        const defConfig = mergeRecursive({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(defConfig, config || {});\n\n        this._mount = null;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     */\n    get type () {\n        return SIMPLE;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     * @return {Object} Default config for the placeholder\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the value contained by the SimpleCell.\n     *\n     * @memberof SimpleCell\n     */\n    valueOf () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a unique identifier for the instance used\n     * to control selective rendering.\n     *\n     * @memberof SimpleCell\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized representation of the instance.\n     *\n     * @memberof SimpleCell\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns an object with width and height fields\n     * specifying the space taken up by this metod.\n     *\n     * @memberof SimpleCell\n     */\n    getLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Method used to set the space available to render the SimpleCell\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @memberof SimpleCell\n     */\n    setAvailableSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    remove () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n\nexport default SimpleCell;\n","/**\n * This file exports variables that are used as defaults for\n * the placeholders\n */\nimport * as CONSTANTS from './constants';\n\n /**\n * Default Configuration for the cells\n * @return {Object} Default configuration\n */\nexport const DEFAULT_CONFIG = {\n    [CONSTANTS.MARGIN]: {\n        [CONSTANTS.LEFT]: 0,\n        [CONSTANTS.RIGHT]: 0,\n        [CONSTANTS.TOP]: 0,\n        [CONSTANTS.BOTTOM]: 0\n    },\n    [CONSTANTS.SPACE_FIXER]: 2,\n    [CONSTANTS.IS_OFFSET]: false,\n    [CONSTANTS.VERTICAL_ALIGN]: null,\n    [CONSTANTS.TEXT_ALIGN]: CONSTANTS.CENTER,\n    [CONSTANTS.SHOW]: true,\n    [CONSTANTS.MAX_LINES]: 0,\n    [CONSTANTS.MIN_CHARS]: 0,\n    [CONSTANTS.ROTATION]: null\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { GEOM, TEXT, AXIS, BLANK } from './enums/cell-type';\n\nconst DEFAULT_PROPS = {\n    mount: {},\n    availHeight: {},\n    availWidth: {},\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config, value)\n    },\n    logicalSpace: {},\n    minSpacing: {},\n    source: {}\n};\n\nconst geomProps = {\n    data: {},\n    caption: {},\n    config: {},\n    axes: {\n        sanitization: (context, value) => Object.assign(context._axes, value)\n    },\n    facetByFields: {},\n    fields: {},\n    transform: {},\n    layerDef: {},\n    detailFields: {}\n};\n\nconst textProps = {\n    smartText: {}\n};\nexport const PROPS = {\n    [GEOM]: mergeRecursive(geomProps, DEFAULT_PROPS),\n    [TEXT]: mergeRecursive(textProps, DEFAULT_PROPS),\n    [AXIS]: DEFAULT_PROPS,\n    [BLANK]: DEFAULT_PROPS\n};\n","/**\n * This file declares a class that represents a table cell\n * used to house an axis.\n * @module VisualCell\n */\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport { CLASSPREFIX, HEIGHT, WIDTH, AXIS_CELL } from './enums/constants';\nimport SimpleCell from './simple-cell';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { AXIS } from './enums/cell-type';\nimport { PROPS } from './props';\n\n/**\n * Computes the logical space of the an axis instance within an axis cell\n *\n * @param {Object} context Required to get the needed parameters to compute axis space\n * @return {Object} Returns the logical space for axis\n */\nconst computeAxisSpace = (context) => {\n    let logicalWidth;\n    let logicalHeight;\n    const axis = context.source();\n    const {\n        spaceFixer,\n        margin\n    } = context.config();\n    const {\n        width,\n        height\n    } = axis.getLogicalSpace();\n    const {\n            show\n        } = axis.config();\n    if (show === true) {\n        logicalHeight = Math.floor(height + margin.top + margin.bottom + spaceFixer);\n        logicalWidth = Math.floor(width + margin.left + margin.right + spaceFixer);\n    } else {\n        [logicalWidth, logicalHeight] = [width, height];\n    }\n    return {\n        width: logicalWidth,\n        height: logicalHeight\n    };\n};\n\n/**\n * Represents an axis cell.\n *\n * @class Axis\n */\nclass AxisCell extends SimpleCell {\n\n    /**\n     * Creates an instance of AxisCell.\n     *\n     * @param {Object} config The input config.\n     * @memberof AxisCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._axis = null;\n        this._availHeight = null;\n        this._availWidth = null;\n        this._logicalSpace = null;\n\n        generateGetterSetters(this, PROPS[AXIS]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof AxisCell\n     */\n    get type () {\n        return AXIS;\n    }\n\n    /**\n     * This method return the value conatined by this SimpleCell.\n     *\n     * @return {SimpleAxis | ColorAxis} Instance of SimpleAxis or ColorAxis.\n     * @memberof AxisCell\n     */\n    valueOf () {\n        return this.source().id;\n    }\n\n    /**\n     * This method return the unique identififer of the axis\n     *\n     * @return {string} Id of the axis.\n     * @memberof AxisCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Retrns the serialized representation of this cell.\n     *\n     * @return {Object}Object with serializable props.\n     * @memberof AxisCell\n     */\n    serialize () {\n        return {\n            type: AXIS,\n            axis: this.source().serialize()\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof AxisCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * return the space taken up by an axis element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof AxisCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeAxisSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @return {Instance} Returns current Instance\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        const {\n            margin,\n            isOffset\n        } = this.config();\n\n        if (width || height) {\n            this.source().setAvailableSpace(width, height, margin, isOffset);\n            this.source().logicalSpace(null);\n        } else {\n            this.source().resetLogicalSpace();\n        }\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the axis inside the axis cell.\n     *\n     * @param {HTMLElement} mount The mount point.\n     * @return {Selection} node where axis mounted\n     * @memberof AxisCell\n     */\n    /* istanbul ignore next */render (mount) {\n        if (!mount) {\n            return this;\n        }\n        const axis = this.source();\n        const availHeight = this.availHeight();\n        const availWidth = this.availWidth();\n        const {\n            margin\n        } = this.config();\n        const {\n            top,\n            bottom,\n            left,\n            right\n        } = margin;\n        const {\n            show,\n            orientation\n        } = axis.config();\n        const wrapperDiv = makeElement(selectElement(mount), 'div', [this], `${CLASSPREFIX}-${AXIS_CELL}`);\n        const selection = makeElement(wrapperDiv, 'svg', [1], `${CLASSPREFIX}-axis-container`);\n        selection.classed(`${CLASSPREFIX}-axis-container-${orientation}`, true);\n\n        this.mount(mount);\n        if (!availWidth) {\n            selection.attr(WIDTH, `${0}px`);\n        }\n        if (!availHeight) {\n            selection.attr(HEIGHT, `${0}px`);\n        }\n        wrapperDiv.style(WIDTH, `${show ? Math.floor(availWidth) : 0}px`)\n                        .style(HEIGHT, `${show ? Math.floor(availHeight) : 0}px`)\n                        .style('margin-top', top)\n                        .style('margin-bottom', bottom)\n                        .style('margin-left', left)\n                        .style('margin-right', right);\n\n        axis.mount(selection.node());\n        return selection;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Current instance of AxisCell\n     * @memberof AxisCell\n     */\n    remove () {\n        this.source() && this.source().remove();\n        this.mount() && this.mount().remove();\n        return this;\n    }\n}\n\nexport default AxisCell;\n\n","/**\n * This file declares a class that represents a BLANK element in a  table.\n * @module VisualCell\n */\nimport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    generateGetterSetters\n    } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { CLASSPREFIX, BLANK_CELL } from './enums/constants';\nimport { BLANK } from './enums/cell-type';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { PROPS } from './props';\n\n/**\n * Represents a table haeder.\n *\n * @class BLANK\n */\nclass BlankCell extends SimpleCell {\n\n    /**\n     * Creates an instance of BLANK.\n     * @param {Object} config The input configuration.\n     * @memberof BLANK\n     */\n    constructor (config) {\n        super(config);\n\n        generateGetterSetters(this, PROPS[BLANK]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof BlankCell\n     */\n    get type () {\n        return BLANK;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof BlankCell\n     */\n    valueOf () {\n        return this.id;\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof BlankCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the BLANK cell.\n     *\n     * @return {string} The unique identifier for the BLANK.\n     * @memberof BlankCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof BLANK\n     */\n    serialize () {\n        return {\n            type: BLANK\n        };\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof BLANK\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            return {\n                width: this.width || 0,\n                height: this.height || 0\n            };\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the BLANK cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof BLANK\n     */\n    /* istanbul ignore next */render (mount) {\n        if (mount) {\n            const { style } = this.config();\n            // append span element to mount point\n            this.mount(mount);\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id]);\n            elem.classed(`${CLASSPREFIX}-${BLANK_CELL}`, true);\n            elem.style('width', `${this.availWidth()}px`);\n            elem.style('height', `${this.availHeight()}px`);\n            elem.html('');\n            // apply style on the returned element\n            if (style) {\n                applyStyle(elem, style);\n            }\n        } return this;\n    }\n\n    /**\n     * Removes the cell(Disposal)\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\nexport default BlankCell;\n","/**\n * This file declares a class that represents a Text element in a  table.\n * @module VisualCell\n */\n\nimport {\n    selectElement,\n    makeElement,\n    getSmartComputedStyle,\n    generateGetterSetters\n} from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { TEXT } from './enums/cell-type';\nimport { PROPS } from './props';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { CLASSPREFIX, TOP, BOTTOM, LEFT, RIGHT, HEADER, WIDTH, TEXT_CELL } from './enums/constants';\nimport './text-cell.scss';\n\nconst setSmartText = (context) => {\n    const source = context.source();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       rotation\n   } = context.config();\n    const {\n        left,\n        right,\n        top,\n        bottom\n     } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const labelManager = context.dependencies().labelManager;\n\n    labelManager.setStyle(context._computedStyle);\n\n    !rotation && context.smartText(labelManager.getSmartText(source, availWidth, availHeight, false));\n    rotation && context.smartText(labelManager.getSmartText(source, availHeight, availWidth, true));\n\n    return context;\n};\n\n/**\n* Computes the Logical Space for the text\n*\n* @param {Object} context Required to get the needed parameters to compute text space\n* @return {Object} Logical space taken up by text\n* @memberof TextCell\n*/\nconst computeTextSpace = (context) => {\n    const { labelManager } = context.dependencies();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       show,\n       maxLines,\n       minCharacters\n   } = context.config();\n    const {\n       left,\n       right,\n       top,\n       bottom\n    } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const source = context.source();\n    const space = context.smartText();\n    const minText = new Array(minCharacters).fill('W').join('');\n    const _minTextSpace = labelManager.getOriSize(minText);\n\n    context.config({ rotation: false });\n    if (space.width > (availWidth || 0) && maxLines) {\n        space.height = space.oriTextHeight * maxLines;\n    }\n    if (availWidth && availWidth < space.width) {\n        space.width = _minTextSpace.width;\n    }\n    if (availWidth && availWidth < Math.min(_minTextSpace.width, space.oriTextWidth)) {\n        const smartSpace = labelManager.getSmartText(source, availHeight, _minTextSpace.height, true);\n        space.width = smartSpace.height;\n        space.height = smartSpace.width;\n        context.config({ rotation: true });\n        context.smartText(smartSpace);\n    }\n\n    if (show) {\n        return {\n            width: Math.ceil(space.width) + paddedWidth,\n            height: Math.ceil(space.height) + paddedHeight\n        };\n    } return {\n        width: 0,\n        height: 0\n    };\n};\n\n/**\n * Represents a table haeder.\n *\n * @class Text\n */\nclass TextCell extends SimpleCell {\n\n    /**\n     * Creates an instance of Text.\n     * @param {Object} config The input configuration.\n     * @param {string} dependencies Dependencies for the class(labelManager)\n     * @memberof Text\n     */\n    constructor (config, dependencies) {\n        super(config);\n\n        this._dependencies = dependencies;\n        this._className = this._config.className ||\n                    (this._config.type === HEADER ? `${CLASSPREFIX}-${HEADER}-cell` : `${CLASSPREFIX}-${TEXT}-cell`);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'), this._className);\n        this._dependencies.labelManager.setStyle(this._computedStyle);\n        generateGetterSetters(this, PROPS[TEXT]);\n        const space = this._dependencies.labelManager.getOriSize('w');\n        this.minSpacing({ width: Math.floor(space.width * 3 / 4), height: Math.floor(space.height / 2) });\n        setSmartText(this);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof TextCell\n     */\n    get type () {\n        return TEXT;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof TextCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the Text cell.\n     *\n     * @return {string} The unique identifier for the Text.\n     * @memberof TextCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the dependencies of the instance\n     *\n     * @return {Object} Dependencies needed by the class\n     * @memberof TextCell\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof TextCell\n     */\n    serialize () {\n        return {\n            text: this.source(),\n            type: TEXT\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof TextCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof Text\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeTextSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        setSmartText(this);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the Text cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof Text\n     */\n    render (mount) {\n        const availWidth = this.availWidth();\n        const availHeight = this.availHeight();\n        const {\n            margin,\n            show,\n            verticalAlign,\n            textAlign,\n            rotation\n        } = this.config();\n\n        this.mount(mount);\n        if (show) {\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id], `${CLASSPREFIX}-${TEXT_CELL}`);\n            const vAlign = verticalAlign || rotation ? 'middle' : 'top';\n            const {\n                width,\n                height\n            } = this.smartText();\n            const {\n                height: minHeightSpace\n            } = this.minSpacing();\n            const translation = {\n                top: width + minHeightSpace / 2,\n                middle: width / 2 + minHeightSpace,\n                bottom: minHeightSpace\n            };\n\n            container.style('vertical-align', vAlign);\n\n            // Set class name\n            elem.classed(this._className, true);\n\n            // Apply styles\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            elem.style('transform', rotation ? `translate(${height / 2}px,\n                ${translation[vAlign]}px) rotate(-90deg)` : '');\n            elem.style(WIDTH, availWidth ? `${availWidth}px` : '100%');\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((type) => {\n                container.style(`margin-${type}`, `${margin[type]}px`);\n            });\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            // set the text as the innerHTML\n            this._dependencies.labelManager.setStyle(this._computedStyle);\n            elem.html(this._dependencies.labelManager.getSmartText(this.source(), availWidth, availHeight, true).text);\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\n\nexport default TextCell;\n","/**\n * This file declares a class that is used to represent a table cell\n * that houses a visual unit.\n * @module VisualCell\n */\n\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { GEOM } from './enums/cell-type';\nimport { PROPS } from './props';\nimport {\n    CLASSPREFIX, HEIGHT, WIDTH, DATA, AXES, FACET_BY_FIELDS, FIELDS, TRANSFORM, LAYER_DEF, CONFIG, GEOM_CELL,\n    DETAIL_FIELDS\n} from './enums/constants';\nimport { DEFAULT_CONFIG } from './enums/defaults';\n\n/**\n * Calculates the logical space of the cell\n *\n * @param {Object} context Required to get the needed parameters to compute unit space\n * @return {Object} Logical space taken up by the unit\n * @memberof GeomCell\n */\nconst computeGeomSpace = (context) => {\n    const config = context.source().config();\n    const { width, height } = config;\n    return {\n        width: Math.ceil(width),\n        height: Math.ceil(height + context.getCaptionSpace().height)\n    };\n};\n\n /**\n * This class represents a SimpleCell for visual unit.\n *\n * @class GeomCell\n */\nclass GeomCell extends SimpleCell {\n\n    /**\n     * Creates an instance of GeomCell.\n     * @param {Object} config The input configuration.\n     * @memberof GeomCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._unit = null;\n        this._layers = null;\n        this._axes = {};\n        this._datamodel = {};\n        this._facetByFields = {};\n        this._fields = null;\n        this._transform = null;\n        this._caption = null;\n\n        generateGetterSetters(this, PROPS[GEOM]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof GeomCell\n     */\n    get type () {\n        return GEOM;\n    }\n\n    /**\n     * This method return the value contained by this cell.\n     *\n     * @return {VisualUnit} Instance of visual unit contained by visual unit.\n     * @memberof GeomCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return the id of the\n     * visual unit housed by this cell.\n     *\n     * @return {string} The unique id of the visual unit.\n     * @memberof GeomCell\n     */\n    get id () {\n        return this.source().id();\n    }\n\n    /**\n     * This method return a serialized representation of\n     * this instance.\n     *\n     * @return {Object} Object with serializable props.\n     * @memberof GeomCell\n     */\n    serialize () {\n        return {\n            type: GEOM,\n            unit: this.source().serialize(),\n            caption: this.caption()\n        };\n    }\n\n    /**\n     * return the default configuration for the geom cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof GeomCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * Updates the model based on the changed parameters\n     *\n     * @return {Instance} return instance\n     * @memberof GeomCell\n     */\n    updateModel () {\n        const unit = this.source();\n        unit.lockModel();\n        [LAYER_DEF, TRANSFORM, AXES, FIELDS, CONFIG, DATA, AXES, FACET_BY_FIELDS, DETAIL_FIELDS].forEach((prop) => {\n            this[prop]() && unit[prop](this[prop]());\n        });\n        unit.unlockModel();\n        return this;\n    }\n\n    /**\n     * It gives the space taken by the caption of the unit\n     *\n     * @return {Object} return the space taken by caption\n     * @memberof GeomCell\n     */\n    getCaptionSpace () {\n        const caption = this.caption();\n\n        let captionSpace = { width: 0, height: 0 };\n        if (caption) {\n            captionSpace = caption.getLogicalSpace();\n        }\n        return captionSpace;\n    }\n\n    /**\n     * return the space taken up by the element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof GeomCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeGeomSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space available to\n     * render the SimpleCell.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    setAvailableSpace (width, height) {\n        const unit = this.source();\n\n        this.availWidth(width);\n        this.availHeight(height);\n        unit.lockModel();\n        unit.width(width).height(height - this.getCaptionSpace().height);\n        unit.unlockModel();\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * his method is used to render the visual unit inside the provided cell.\n     *\n     * @param {HTMLElement} mount The mountpoint in the table.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    render (mount) {\n        if (mount) {\n            this.mount(mount);\n            const availHeight = this.availHeight();\n            const availWidth = this.availWidth();\n            const caption = this.caption();\n            const wrapperDiv = makeElement(selectElement(mount), 'div', [1], `${CLASSPREFIX}-${GEOM_CELL}`);\n\n            if (caption) {\n                const captionDom = makeElement(wrapperDiv, 'div', [caption], `${CLASSPREFIX}-unit-caption`).node();\n                caption.render(captionDom);\n            }\n            const selection = makeElement(wrapperDiv, 'div', [1], `${CLASSPREFIX}-unit`);\n            wrapperDiv.style(WIDTH, `${availWidth}px`).style(HEIGHT, `${availHeight}px`);\n            selection.style(WIDTH, `${availWidth}px`)\n                            .style(HEIGHT, `${availHeight - this.getCaptionSpace().height}px`);\n            this.source().mount(selection.node());\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Object} Current instance\n     * @memberof GeomCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        this.source().remove();\n        return this;\n    }\n}\n\nexport default GeomCell;\n","import AxisCell from './axis-cell';\nimport BlankCell from './blank-cell';\nimport TextCell from './text-cell';\nimport GeomCell from './geom-cell';\nimport SimpleCell from './simple-cell';\n\nimport * as CONSTANTS from './constants';\n\nexport const DEFAULT_PLACEHOLDERS = {\n    [CONSTANTS.SIMPLE_CELL]: SimpleCell,\n    [CONSTANTS.TEXT_CELL]: TextCell,\n    [CONSTANTS.AXIS_CELL]: AxisCell,\n    [CONSTANTS.GEOM_CELL]: GeomCell,\n    [CONSTANTS.BLANK_CELL]: BlankCell\n};\n\n","export const SIMPLE_CELL = 'SimpleCell';\nexport const TEXT_CELL = 'TextCell';\nexport const AXIS_CELL = 'AxisCell';\nexport const BLANK_CELL = 'BlankCell';\nexport const GEOM_CELL = 'GeomCell';\n\n","import { DEFAULT_PLACEHOLDERS } from './defaults';\n\n/**\n * Creates a registry for the cells, which can be used for\n * setting a new cell or getting the registered cells\n *\n * @return {Object} Setters and getters for registered cells\n */\nconst cellRegistry = () => {\n    const reg = DEFAULT_PLACEHOLDERS;\n    return {\n        set: (key, def) => {\n            if (key in reg) {\n                reg[key] = def;\n            }\n            return cellRegistry;\n        },\n        get: () => reg\n    };\n};\nexport default cellRegistry;\n","import { TextCell } from '@chartshq/visual-cell';\nimport { escapeHTML } from 'muze-utils';\nimport { TOP } from '../constants';\n\n/**\n *\n *\n * @param {*} rawContent\n *\n */\nconst resolveTitleSubTitleContent = (rawContent) => {\n    if (typeof rawContent === 'function' && !rawContent._sanitize) {\n        return rawContent();\n    }\n    return escapeHTML(rawContent());\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} cellType\n * @param {*} labelManager\n * @param {*} prevCell\n *\n */\nconst headerCreator = (config, cellType, labelManager, prevCell) => {\n    let margin = {};\n    const {\n        content,\n        classPrefix,\n        maxLines\n    } = config;\n    const cell = prevCell || new TextCell(\n        {\n            type: cellType === 'title' ? 'header' : 'text',\n            className: `${classPrefix}-${cellType}-cell`\n        }, {\n            labelManager\n        })\n     .config({ maxLines }).minSpacing({ width: 0, height: 0 });\n\n    cell.source(content);\n    cell._minTickDiff = { height: 0, width: 0 };\n\n    if (config.position === TOP) {\n        margin = { top: 0, bottom: config.padding };\n    } else {\n        margin = { top: config.padding, bottom: 0 };\n    }\n    cell.config({ margin });\n\n    return {\n        height: cell.getLogicalSpace().height,\n        cell\n    };\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} type\n * @param {*} labelManager\n * @param {*} cell\n *\n */\nconst createHeading = (config, type, labelManager, prevCell) => {\n    if (!config) { return ''; }\n\n    return headerCreator(\n        config,\n        type,\n        labelManager,\n        prevCell\n    );\n};\n\n/**\n *\n *\n * @param {*} context\n */\nexport const createHeaders = (context, canvasHeight, canvasWidth) => {\n    let headerHeight = 0;\n    const headers = {};\n    const subtitle = context.subtitle();\n    const isSubtitle = resolveTitleSubTitleContent(subtitle[0]);\n\n    canvasHeight >= 200 && canvasWidth >= 200 && ['title', 'subtitle'].forEach((type) => {\n        const headerOptions = context[type]();\n        const content = resolveTitleSubTitleContent(headerOptions[0]);\n        if (content.length) {\n            const config = headerOptions[1];\n\n            config.width = context.width();\n            config.height = context.height();\n            config.classPrefix = context.config().classPrefix;\n            config.content = content;\n            config.padding = (type === 'title' && !isSubtitle.length) ? subtitle[1].padding : config.padding;\n\n            const { height, cell } = createHeading(config, type, context.dependencies().smartlabel,\n                context[`${type}Cell`]);\n\n            headers[`${type}Cell`] = cell;\n            context._composition[type] = cell;\n            headerHeight += height;\n        }\n    });\n    return { headerHeight, headers };\n};\n\n","import { TextCell, AxisCell } from '@chartshq/visual-cell';\nimport { getValueParser } from 'muze-utils';\nimport {\n    VERTICAL, HORIZONTAL, LEFT, RIGHT, LEGEND_TYPE_MAP, PADDING, BORDER, MARGIN\n} from '../constants';\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n *\n */\nexport const legendCreator = (canvas) => {\n    let LegendCls;\n    const dataset = [];\n    const axes = canvas.getRetinalAxes();\n\n    Object.entries(axes).forEach((axisInfo) => {\n        const scale = axisInfo[1][0];\n        const scaleType = axisInfo[0];\n        const scaleProps = canvas[scaleType]();\n\n        if (scaleProps.field && scale) {\n            const {\n                type,\n                step\n            } = scale.config();\n\n            const stepMapper = typeof step === 'boolean' ? step : false;\n            LegendCls = LEGEND_TYPE_MAP[`${type}-${stepMapper}-${scaleType}`];\n            dataset.push({ scale, canvas, fieldName: scaleProps.field, LegendCls, scaleType });\n        }\n    });\n\n    return dataset;\n};\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n * @param {*} measurement\n * @param {*} prevLegends\n *\n */\nexport const legendInitializer = (legendConfig, canvas, measurement, prevLegends) => {\n    const legends = [];\n    const {\n        height,\n        width,\n        headerHeight\n    } = measurement;\n    const {\n        position,\n        align\n    } = legendConfig;\n\n    const legendInfo = legendCreator(canvas);\n    const { invalidValues } = canvas.config();\n\n    const parser = getValueParser(invalidValues);\n    legendInfo.forEach((dataInfo, index) => {\n        let legend = {};\n\n        const legendMeasures = {};\n        const {\n                LegendCls,\n                scale,\n                fieldName,\n                scaleType\n            } = dataInfo;\n        const config = legendConfig[scaleType] || {};\n        const title = config.title || {};\n        title.text = title.text || fieldName;\n        if (config.show) {\n            config.position = position;\n            config.align = align;\n\n            if (prevLegends[index]) {\n                legend = prevLegends[index].legend;\n            } else {\n                legend = LegendCls.create({\n                    labelManager: canvas._dependencies.smartlabel,\n                    cells: {\n                        AxisCell, TextCell\n                    }\n                });\n            }\n            legendMeasures.maxHeight = align === VERTICAL ? (height - headerHeight) : height * 0.2;\n            legendMeasures.maxWidth = align === HORIZONTAL ? width : width * 0.2;\n            legendMeasures.width = Math.min(legendMeasures.maxWidth, config.width);\n            legendMeasures.height = Math.min(legendMeasures.maxHeight, config.height);\n\n            [PADDING, BORDER, MARGIN].forEach((e) => {\n                legendMeasures[e] = config[e];\n            });\n\n            legend.scale(scale)\n                            .valueParser(parser)\n                            .title(title)\n                            .fieldName(fieldName)\n                            .config(config)\n                            .metaData(canvas.composition().visualGroup.getGroupByData().project([fieldName]))\n                            .measurement(legendMeasures)\n                            .canvasAlias(canvas.alias())\n                            .setLegendMeasures();\n\n            legends.push({ canvas, legend, scaleType });\n        }\n    });\n    return legends;\n};\n\n/**\n *\n *\n * @param {*} legends\n * @param {*} legendConfig\n * @param {*} availableHeight\n * @param {*} availableWidth\n *\n */\nexport const getLegendSpace = (legends, legendConfig, availableHeight, availableWidth) => {\n    const legendMeasures = legends.map(legendInfo => legendInfo.legend.measurement());\n    const legendSpace = { width: 0, height: 0 };\n\n    legendMeasures.forEach((space) => {\n        let height = 0;\n        let width = 0;\n        width = Math.min(space.width, space.maxWidth);\n        height = Math.min(space.height, space.maxHeight);\n\n        if (legendConfig.align === HORIZONTAL) {\n            if (legendSpace.width + width > availableWidth) {\n                legendSpace.width = availableWidth;\n                legendSpace.height += height;\n            } else {\n                legendSpace.width += width;\n                legendSpace.height = Math.max(legendSpace.height, height);\n            }\n        } else if (legendSpace.height + height > availableHeight) {\n            legendSpace.height = height;\n            legendSpace.width += width;\n        } else {\n            legendSpace.height += height;\n            legendSpace.width = Math.max(legendSpace.width, width);\n        }\n    });\n    if (legendConfig.align === HORIZONTAL) {\n        legendSpace.width = availableWidth;\n    }\n    return legendSpace;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} headerHeight\n *\n */\nexport const createLegend = (context, headerHeight, height, width) => {\n    const measurement = {\n        height,\n        width,\n        headerHeight\n    };\n    const { legend } = context.config();\n    const { show, position } = legend;\n\n    legend.classPrefix = context.config().classPrefix;\n    const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n\n    legend.show = show ? ((align === VERTICAL && width > 200) || (align === HORIZONTAL && height > 200)) : show;\n    legend.align = align;\n    return legendInitializer(legend, context, measurement, context.legends || []);\n};\n","import { LayoutComponent } from '../../../../layout/src/tree-layout';\n\nexport default class MuzeComponent extends LayoutComponent {\n    getLogicalSpace () {\n        const { width, height } = this.boundBox();\n        return { width, height };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n    }\n\n    getBoundBox () {\n        return this.boundBox();\n    }\n\n    updateWrapper () {\n        throw Error('Update is not implemented');\n    }\n\n    setParams () {\n        throw Error('set params is not implemented');\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport { LEFT } from '../../constants';\n\nexport default class HeaderComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    renderHeader (container) {\n        const layoutConfig = this.params.config;\n        container = selectElement(container);\n        const { align } = layoutConfig;\n        const sel = container\n          .selectAll(`.${layoutConfig.classPrefix}-inner-container`)\n          .data([this.name]);\n        sel.exit().remove();\n        const selEnter = sel.enter().append('div');\n\n        const cont = selEnter.merge(sel);\n        cont.classed(`${layoutConfig.classPrefix}-inner-container`, true);\n        const { height, width } = this.boundBox();\n        this.component.setAvailableSpace(width, height);\n\n        this.component && this.component.render(cont.node());\n\n        cont.selectAll('div').classed(`${layoutConfig.classPrefix}-inner-content`, true);\n        cont.style('width', `${100}%`);\n\n        if (layoutConfig && this.component) {\n            cont.style('float', LEFT)\n                            .style('text-align', align);\n                            // .style(`padding-${position === TOP ? BOTTOM : TOP}`, `${padding}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderHeader(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.component.getLogicalSpace());\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y,\n            left: conf.x,\n            width: conf.width,\n            height: conf.height });\n        this.renderAt(conf.renderAt);\n    }\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport {\n     LEFT, RIGHT, VERTICAL, HORIZONTAL, TOP, BOTTOM, HORIZONTAL_CENTER, VERTICAL_CENTER\n} from '../../constants';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\nfunction defaultAlignmentHelper (position) {\n    let alignment = null;\n    const alignWith = `${ROW_MATRIX_INDEX[1]}-${COLUMN_MATRIX_INDEX[1]}`;\n    switch (position) {\n    case TOP:\n    case BOTTOM:\n        alignment = HORIZONTAL_CENTER;\n        break;\n    case LEFT:\n    case RIGHT:\n        alignment = VERTICAL_CENTER;\n        break;\n    default:\n        alignment = VERTICAL_CENTER;\n    }\n    return { alignment, alignWith };\n}\nexport default class LegendComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.measurement.legendSpace, 0);\n        this.setParams(params);\n    }\n\n    renderLegend (container) {\n        container = selectElement(container);\n        const sectionComponents = [];\n        const { position, classPrefix } = this.params.config;\n        const legendMount = makeElement(container, 'div', [this.components],\n                                        `${classPrefix}-inner-content`, {}, d => d);\n        legendMount.classed(`${classPrefix}-legend`, true);\n        const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n        const legWidth = this.newDimensions.width;\n        const legHeight = this.newDimensions.height;\n\n        [container, legendMount].forEach((elem) => {\n            elem.style('width', `${Math.floor(legWidth)}px`)\n                            .style('height', `${legHeight}px`)\n                            .style('float', LEFT);\n        });\n\n        if (align === VERTICAL) {\n            let sections = -1;\n            let currHeight = legHeight;\n            let currWidth = 0;\n\n            this.components.forEach((legendInfo) => {\n                const leg = legendInfo.legend;\n                if (leg.measurement().height > currHeight) {\n                    sections++;\n                    currWidth = 0;\n                    currHeight = legHeight;\n                } else {\n                    sections < 0 && sections++;\n                }\n                sectionComponents[sections] = sectionComponents[sections] || [];\n                currHeight -= Math.min(leg.measurement().height, currHeight);\n                currWidth = Math.max(Math.min(leg.measurement().width, leg.measurement().maxWidth), currWidth);\n                sectionComponents[sections].push({\n                    legend: leg,\n                    legendHeight: legHeight,\n                    legendWidth: currWidth\n                });\n            });\n\n            const mount = makeElement(legendMount, ['div'], sectionComponents, `${classPrefix}-legend-section`);\n            // mount.each((d, i) => selectElement(this).classed(`${classPrefix}-legend-section-${i}`, true));\n            mount.classed(`${classPrefix}-legend-vertical-section`, true)\n                            .style('width', d => `${d[0].legendWidth}px`);\n            makeElement(mount, ['div'], d => d, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) {\n                                d.legend.mount(this);\n                            })\n                            .style('width', d => `${d.legendWidth}px`);\n        } else {\n            const mount = makeElement(legendMount, 'div', [1], `${classPrefix}-legend-section`);\n            mount.classed(`${classPrefix}-legend-horizontal-section`, true);\n            mount.classed(`${classPrefix}-legend-section-${0}`, true)\n                            .style('width', `${legWidth}px`);\n\n            makeElement(mount, 'div', this.components, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) { d.legend.mount(this); })\n                            .style('width', d => `${d.legend.measurement().width}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderLegend(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.measurement.legendSpace);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.components = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        const { alignWith, alignment } = defaultAlignmentHelper(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith || alignWith);\n        this.alignment(params.config.alignment || alignment);\n    }\n\n}\n","import {\n    selectElement,\n    makeElement,\n    getD3Drag,\n    getEvent,\n    getWindow,\n    hasTouch\n} from 'muze-utils';\nimport './scroll-bar.scss';\nimport { WIDTH, HEIGHT } from '../../../constants';\n\nconst d3Drag = getD3Drag();\n\nconst arrowSizeMap = {\n    left: WIDTH,\n    right: WIDTH,\n    top: HEIGHT,\n    bottom: HEIGHT\n};\n\nexport const getUnitPositions = (unitMeasures, totalLength, viewLength) => {\n    let currentLen = 0;\n    const measures = unitMeasures.primary && unitMeasures.primary.length ?\n        unitMeasures.primary : unitMeasures.secondary;\n\n    return measures.map((e) => {\n        const unitPosition = currentLen * 100 / (totalLength - viewLength);\n        currentLen += e;\n        return unitPosition;\n    });\n};\n\nexport const createScrollBarArrow = (mount, type, config) => {\n    const {\n        classPrefix,\n        thickness\n    } = config;\n    const arrow = makeElement(mount, 'div', [type], `${classPrefix}-scroll-arrow-${type}`);\n\n    arrow.classed(`${classPrefix}-scroll-arrow`, true);\n    arrow.style(arrowSizeMap[type], `${thickness}px`);\n\n    const chevron = makeElement(arrow, 'div', [1], `${classPrefix}-scroll-arrow-chevron`);\n\n    chevron.attr('id', `${classPrefix}-scroll-arrow-chevron-${type}`);\n\n    return arrow;\n};\n\nexport const createScrollBarRect = (mount, config) => {\n    const {\n        classPrefix\n    } = config;\n    const rect = makeElement(mount, 'div', [1], `${classPrefix}-scroll-rect`);\n    const mover = makeElement(rect, 'div', [1], `${classPrefix}-scroll-mover`);\n\n    return { rect, mover };\n};\n\nexport const applyRectClick = (scrollMaker, moverRect) => {\n    const {\n        rect\n    } = moverRect;\n\n    rect.on('click', () => {\n        const event = getEvent();\n        scrollMaker.emptyScrollAreaClick(event);\n    });\n};\n\nconst applyMoverDrag = (scrollMaker, moverRect) => {\n    let startPos = {};\n    let moverStartPos = 0;\n    let endPos = {};\n    const {\n        mover,\n        rect\n    } = moverRect;\n    const rectStartPos = rect.node().getBoundingClientRect();\n\n    mover.call(d3Drag()\n                    .on('start', () => {\n                        const event = getEvent();\n\n                        moverStartPos = mover.node().getBoundingClientRect();\n                        startPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                    })\n                    .on('drag', () => {\n                        const event = getEvent();\n                        const window = getWindow();\n\n                        endPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                        const distanceMoved = {\n                            x: endPos.x - startPos.x,\n                            y: endPos.y - startPos.y\n                        };\n                        const actualPosition = {\n                            x: moverStartPos.x + distanceMoved.x - rectStartPos.x + window.pageXOffset,\n                            y: moverStartPos.y + distanceMoved.y - rectStartPos.y + window.pageYOffset\n                        };\n\n                        scrollMaker.changeMoverPosition(actualPosition);\n                    }));\n};\n\nconst applyScrollMouseDownAction = (moverRect, scrollMaker, speed) => {\n    const {\n        mover,\n        rect\n    } = moverRect;\n    const { x, y } = mover.node().getBoundingClientRect();\n    const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n    scrollMaker.changeMoverPosition({ x: x - rectX + speed, y: y - rectY + speed });\n};\n\nconst registerListenerOnArrow = (scrollMaker, moverRect, arrowType, speed) => {\n    let timer = '';\n    const arrow = scrollMaker._components[arrowType];\n    const isTouchDevice = hasTouch();\n\n    arrow.on(isTouchDevice ? 'touchstart' : 'mousedown', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        timer = setInterval(() => {\n            applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n        }, 100);\n    }).on(isTouchDevice ? 'touchend' : 'mouseup', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        clearInterval(timer);\n    }).on('click', () => {\n        applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n    });\n};\n\nexport const registerListeners = (scrollMaker) => {\n    const {\n        moverRect\n    } = scrollMaker._components;\n\n    const speed = scrollMaker.config().speed;\n\n    registerListenerOnArrow(scrollMaker, moverRect, 'prevArrow', -speed);\n    applyMoverDrag(scrollMaker, moverRect);\n    applyRectClick(scrollMaker, moverRect);\n    registerListenerOnArrow(scrollMaker, moverRect, 'nextArrow', speed);\n};\n\nexport const scrollContainerHelper = (mountPoint, config, dimensions, type) => {\n    const {\n        classPrefix\n    } = config;\n    const scrollBarContainer = makeElement(selectElement(mountPoint), 'div', [1], `#${classPrefix}-scroll-bar-${type}`);\n\n    scrollBarContainer.classed(`${classPrefix}-scroll-bar`, true);\n    scrollBarContainer.style(WIDTH, `${dimensions.width}px`);\n    scrollBarContainer.style(HEIGHT, `${dimensions.height}px`);\n    return scrollBarContainer;\n};\n\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n\n    config: {\n        sanitization: (context, value) => {\n            value = mergeRecursive(context._config, value);\n            return value;\n        }\n    },\n    manager: {},\n    unitPositions: {},\n    logicalSpace: {}\n};\n\n","import { ERROR_MSG, generateGetterSetters } from 'muze-utils';\nimport {\n    scrollContainerHelper,\n    registerListeners\n} from './helper';\nimport { PROPS } from './props';\n\nexport class ScrollMaker {\n\n    constructor () {\n        this._components = {};\n        this._logicalSpace = {};\n        this._attachedScrollAction = () => {};\n        this._config = {\n            thickness: 10,\n            speed: 2\n        };\n        this._unitPositions = null;\n\n        generateGetterSetters(this, PROPS);\n    }\n\n    static type () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    emptyScrollAreaClick () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    changeMoverPosition () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollDeltaTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    createScroll (mountPoint) {\n        const config = this.config();\n\n        return {\n            scrollBarContainer: scrollContainerHelper(mountPoint, config, this.logicalSpace(), this.constructor.type())\n        };\n    }\n\n    attachScrollAction (externalScrollAction) {\n        this._attachedScrollAction = externalScrollAction;\n        return this;\n    }\n\n    detachScrollAction () {\n        this._attachedScrollAction = () => {};\n        return this;\n    }\n\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    registerListeners () {\n        registerListeners(this);\n        return this;\n    }\n\n    remove () {\n        this._components.scrollBarContainer.remove();\n        return this;\n    }\n}\n\n","import MuzeComponent from './muze-chart-component';\nimport { HorizontalScrollMaker } from './scroll-bar-maker/horizontal-scroll-maker';\nimport { VerticalScrollMaker } from './scroll-bar-maker/vertical-scroll-maker';\n\nconst scrollMakerMap = {\n    horizontal: HorizontalScrollMaker,\n    vertical: VerticalScrollMaker\n};\n\n/**\n * Scroll Component acts as a wrapper over the scoll bars created using the respective Scroll Makers\n * This provides a consistent API for layouting using the tree layout system.\n *\n *\n * @class\n * @public\n * @module ScrollComponent\n */\nexport default class ScrollComponent extends MuzeComponent {\n\n    constructor (params) {\n        const ScrollMaker = scrollMakerMap[params.config.type];\n\n        params.component = new ScrollMaker();\n        params.component.config(params.config.scrollBarComponentConfig);\n        params.component.logicalSpace(params.dimensions);\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    manager (...manager) {\n        if (manager.length) {\n            this.component.manager(manager[0]);\n            return this;\n        }\n        return this.component.manager();\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollDeltaTo (delta) {\n        this.component.scrollDeltaTo(delta);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollTo (scrollPercentage) {\n        this.component.scrollTo(scrollPercentage);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page based on the unit index.\n     * The input is provided as a number represting the index for the unit.\n     * For vertical scroll, it's the row index that will be required.\n     * For horizontal scroll, it's the column index that will be required\n     *\n     * @public\n     *\n     * @param {number} unitIndex Index of the unit appearing in the grid\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollToUnitIndex (unitIndex) {\n        const unitPositions = this.component.unitPositions();\n        const sanitizedUnitIndex = Math.min(Math.max(0, unitIndex), unitPositions.length - 1);\n        this.component.scrollTo(unitPositions[sanitizedUnitIndex]);\n        return this;\n    }\n\n    /**\n     * Provides the positions of the units(either horizontal or vertical based on the type\n     * of scroll bar it wraps) relative to it's container. The position of the first unit starts at 0\n     *\n     *\n     * @public\n     *\n     * @return {Array} Positions of units either horizontal or vertical\n     */\n    getScrollPositionsForUnits () {\n        return this.component.unitPositions();\n    }\n\n    draw (container) {\n        this.component.createScroll(container || document.getElementById(this.renderAt()));\n        return this;\n    }\n\n    /**\n     * Can be used to attach a scroll action whenever scrolling occurs in the canvas\n     *\n     * @public\n     * @param {number} externalAction Action to be attached during scroll\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    attachScrollAction (externalAction) {\n        this.component.attachScrollAction(externalAction);\n        return this;\n    }\n\n    /**\n     * Can be used to detach the scroll action already bound to the scroll bar\n     *\n     * @public\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    detachScrollAction () {\n        this.component.detachScrollAction();\n        return this;\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.component.config(params.config.scrollBarComponentConfig);\n        this.component.logicalSpace(params.dimensions);\n        this.boundBox(this.component.getLogicalSpace());\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component || this.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    remove () {\n        this.component.remove();\n    }\n}\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { HORIZONTAL, HEIGHT, WIDTH, LEFT } from '../../../constants';\n\nexport class HorizontalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: horizontal\n     */\n    static type () {\n        return HORIZONTAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, config, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'left', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'right', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n\n        const { height, width, totalLength, viewLength, unitWidths } = this.logicalSpace();\n        const scrollBarWithouArrowLength = width - height * 2;\n\n        rect.style(WIDTH, `${dimensions.width - height * 2}px`);\n        rect.style(HEIGHT, `${100}%`);\n        mover.style(WIDTH, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(HEIGHT, `${100}%`);\n        mover.style(LEFT, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n        this.unitPositions(getUnitPositions(unitWidths, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n        let positionAdjuster = speed * 10;\n        if (event.x < x) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n        const {\n            totalLength\n         } = this.logicalSpace();\n\n        if (newPosition.x < 0) {\n            currentPos = 0;\n        } else if (newPosition.x + moverPos.width > rectStartPos.width) {\n            currentPos = rectStartPos.width - moverPos.width;\n        } else {\n            currentPos = newPosition.x;\n        }\n\n        mover.style(LEFT, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: 0, x: moverPos.x - rectStartPos.x - delta });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {HorizontalScrollMaker} Instance of the HorizontalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.width)) / 100;\n\n        this.changeMoverPosition({ y: 0, x: movement });\n        return this;\n    }\n\n}\n\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { VERTICAL, TOP, HEIGHT, WIDTH } from '../../../constants';\n\nexport class VerticalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: vertical\n     */\n    static type () {\n        return VERTICAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'top', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'bottom', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n        const { height, width, totalLength, viewLength, unitHeights } = this.logicalSpace();\n        const scrollBarWithouArrowLength = height - width * 2;\n\n        rect.style(HEIGHT, `${scrollBarWithouArrowLength}px`);\n        rect.style(WIDTH, `${100}%`);\n        mover.style(WIDTH, `${100}%`);\n        mover.style(HEIGHT, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(TOP, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n\n        this.unitPositions(getUnitPositions(unitHeights, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n        let positionAdjuster = speed * 10;\n        if (event.y < y) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const {\n            totalLength\n         } = this.logicalSpace();\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n\n        if (newPosition.y < 0) {\n            currentPos = 0;\n        } else if (newPosition.y + moverPos.height > rectStartPos.height) {\n            currentPos = rectStartPos.height - moverPos.height;\n        } else {\n            currentPos = newPosition.y;\n        }\n        mover.style(TOP, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: moverPos.y - rectStartPos.y - delta, x: 0 });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.height)) / 100;\n\n        this.changeMoverPosition({ x: 0, y: movement });\n        return this;\n    }\n\n}\n","import { makeElement } from 'muze-utils';\nimport { cellSpanMaker, applySpans } from '../../../../layout/src/grid-layout/span-maker';\nimport { applyBorders } from '../../../../layout/src/grid-layout/border-helper';\n\nimport {\n     TOP, CENTER\n} from '../../../../layout/src/enums/constants';\nimport MuzeComponent from './muze-chart-component';\nimport { WIDTH, HEIGHT, HIDDEN, OVERFLOW_X, OVERFLOW_Y } from '../../constants';\n\nconst renderPlaceholders = (cells) => {\n    // Rendering content within placeholders\n    cells.each(function (cell) {\n        cell.placeholder.render(this);\n    });\n};\n\nexport default class MatrixComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n        this.className(params.config.className);\n    }\n\n    applyScroll (container) {\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const { horizontal, vertical } = this.params.config.scrollInfo;\n\n        if (horizontal && column === 1) {\n            container.style(OVERFLOW_X, HIDDEN);\n            container.style(WIDTH, '100%');\n        }\n\n        if (vertical && row === CENTER) {\n            container.style(OVERFLOW_Y, HIDDEN);\n            container.style(HEIGHT, '100%');\n        }\n    }\n\n    renderMatrix (mountPoint) {\n        // Creating containers for each matrix individually\n        const classPrefix = this.params.config.classPrefix;\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const dimensions = this.params.config.dimensions;\n        const border = this.params.config.border;\n\n        // Creating containers for each matrix individually\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${row}-${column + 1}`)\n            .classed(`${classPrefix}-grid-${row}`, true)\n            .classed(`${classPrefix}-grid`, true);\n\n        this.applyScroll(containerForMatrix);\n\n        const {\n            viewMatrix,\n            spans\n        } = cellSpanMaker(this.component, row, column);\n\n            // Rendering the table components\n        const { cells } = this.renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        applySpans(cells, spans, { dimensions, border }, `${row}-${column}`);\n        renderPlaceholders(cells);\n\n        cells.exit().each((cell) => {\n            cell.placeholder.remove();\n        });\n\n        applyBorders(cells, border, row, column);\n    }\n\n    renderTable (mount, className, rowData) {\n        const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n        const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n        const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n        const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null).map(e =>\n                                  ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n        return { table, body, rows, cells };\n    }\n\n    draw (container) {\n        this.renderMatrix(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(TOP);\n        this.className(params.config.className);\n    }\n}\n","import { selectElement, getEvent } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport MatrixComponent from './matrix-component';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\n/**\n * Based on the type of scroll, it changes the scrollLeft/scrollTop property of the specific\n * elements based on the scroll distance provided\n *\n *\n */\nconst applyScrollAction = (elem, classPrefix, scollDistance, type) => {\n    selectElement(elem)\n                    .selectAll(`.${classPrefix}-grid`)\n                    .property(type, scollDistance);\n};\n\n/**\n * Applies the action of the scroll by actually scrolling the respective matrices based on the\n * type of scroll. It returns a function which has both the scroll methods available\n *\n * @return {Object} contains the horizontal and vertical scroll actions on the grid component\n */\nconst scrollActionApplier = (movement, context) => {\n    const classPrefix = context.params.config.classPrefix;\n\n    return {\n        horizontal: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[e][1].renderAt()}`, classPrefix, movement, 'scrollLeft'));\n        },\n        vertical: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[1][e].renderAt()}`, classPrefix, movement, 'scrollTop'));\n        }\n    };\n};\n\nexport default class GridComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.gridComponents = [];\n        this.setParams(params);\n    }\n\n    sanitizeGrid () {\n        let height = 0;\n        let width = 0;\n        const { viewMatricesInfo, layoutDimensions } = this.component.viewInfo();\n        const scrollInfo = this.component.scrollInfo();\n\n        for (let i = 0; i < 3; i++) {\n            if (!(this.gridComponents.length && this.gridComponents[i] instanceof Array)) {\n                this.gridComponents[i] = [];\n            }\n            for (let j = 0; j < 3; j++) {\n                const matrixDim = { height: layoutDimensions.viewHeight[i], width: layoutDimensions.viewWidth[j] };\n                const matrix = viewMatricesInfo.matrices[`${ROW_MATRIX_INDEX[i]}`][j];\n                const matrixName = `${ROW_MATRIX_INDEX[i]}-${COLUMN_MATRIX_INDEX[j]}`;\n                const matrixConfig = {\n                    dimensions: matrixDim,\n                    border: layoutDimensions.border,\n                    classPrefix: this.params.config.classPrefix,\n                    scrollInfo,\n                    row: ROW_MATRIX_INDEX[i],\n                    column: j\n                };\n                if (this.gridComponents[i][j] instanceof MuzeComponent) {\n                    this.gridComponents[i][j].updateWrapper({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                } else {\n                    const matrixWrapper = new MatrixComponent({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                    this.gridComponents[i].push(matrixWrapper);\n                }\n                if (i === 0) {\n                    width += matrixDim.width;\n                }\n                if (j === 0) {\n                    height += matrixDim.height;\n                }\n            }\n        }\n        this.boundBox({ height, width });\n\n        this.component = this.gridComponents;\n        this.allComponents = this.gridComponents;\n    }\n\n    scrollBarManager (...manager) {\n        if (manager.length) {\n            this._scrollBarManager = manager[0];\n            return this;\n        }\n        return this._scrollBarManager;\n    }\n\n    /**\n     * Attaches a mousewheel listener to the center matrix, based on which the scrolling can occur.\n     * It uses the scroll component to change the position of the scroller, which ultimately scrolls the center matrix\n     *\n     *\n     * @return {GridComponent} Instance of the GridComponent\n     */\n    attachScrollListener () {\n        selectElement(`#${this.component[1][1].renderAt()}`)\n                        .on('wheel', () => {\n                            const event = getEvent();\n                            const {\n                                wheelDeltaX,\n                                wheelDeltaY\n                            } = event;\n\n                            // Prevent default behaviour and stop propagating\n                            event.preventDefault();\n                            event.stopPropagation();\n\n                            // Scrolling horizontally\n                            if (wheelDeltaX !== 0 && Math.abs(wheelDeltaX) > Math.abs(wheelDeltaY)) {\n                                this.scrollBarManager().triggerScrollBarAction('horizontal', wheelDeltaX);\n                            }\n\n                            // Scrolling Vertically\n                            if (wheelDeltaY !== 0 && Math.abs(wheelDeltaX) < Math.abs(wheelDeltaY)) {\n                                this.scrollBarManager().triggerScrollBarAction('vertical', wheelDeltaY);\n                            }\n                        });\n        return this;\n    }\n\n    performScrollAction (direction, movedView) {\n        scrollActionApplier(movedView, this)[direction]();\n        return this;\n    }\n\n    getBoundBox () {\n        const { top, left } = this.component[0][0].boundBox();\n        const { height, width } = this.boundBox();\n\n        return {\n            top,\n            left,\n            height,\n            width\n        };\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.className(params.config.className);\n        this.sanitizeGrid();\n        return this;\n    }\n}\n","import { TITLE, SUB_TITLE, LEGEND, VERTICAL, HORIZONTAL, WIDTH, HEIGHT, TOP, LEFT } from '../constants';\nimport HeaderComponent from './components/headerComponent';\nimport LegendComponent from './components/legendComponent';\nimport ScrollComponent from './components/scroll-component';\nimport GridComponent from './components/grid-component';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG, GRID, CANVAS, LAYOUT_ALIGN } from './defaults';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../layout/src/enums/constants';\n\n// Mapping between types of headers and their required configs for wrapper creation\nconst headerMap = {\n    title: {\n        headerCell: 'titleCell',\n        configType: TITLE_CONFIG\n    },\n    subtitle: {\n        headerCell: 'subtitleCell',\n        configType: SUB_TITLE_CONFIG\n    }\n};\n\n/**\n * Creates the wrapper for the header, i.e., title and subtitle to be used in the tree layout\n *\n *\n * @param {string} headerType type of header: title/subtite\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createHeaderWrapper = (headerType, layoutManager, renderDetails) => {\n    let wrapper = null;\n\n    const { components, layoutConfig } = renderDetails;\n    const { headerCell, configType } = headerMap[headerType];\n    const target = { target: CANVAS };\n\n    if (components.headers && components.headers[headerCell]) {\n        let headerConfig = layoutConfig[headerType];\n        const header = components.headers[headerCell];\n\n        headerConfig = Object.assign({}, headerConfig, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: LAYOUT_ALIGN.LEFT,\n            className: configType.className\n        });\n\n        const wrapperParams = {\n            name: headerType,\n            component: header,\n            config: headerConfig\n        };\n        if (layoutManager.getComponent(headerType)) {\n            wrapper = layoutManager\n                      .getComponent(headerType)\n                      .updateWrapper(wrapperParams);\n        } else {\n            wrapper = new HeaderComponent(wrapperParams);\n        }\n    }\n    return wrapper;\n};\n\n// Mapping between types of scrollBars and their required configs for wrapper creation\nconst scrollBarMap = config => ({\n    vertical: {\n        componentName: 'verticalScrollBar',\n        width: 'thickness',\n        height: 'layoutBasedMeasure',\n        layoutBasedMeasure: HEIGHT,\n        viewMeasure: 'viewHeight',\n        rowAlign: 1,\n        colAlign: config.align === 'right' ? 2 : 0,\n        position: config.align,\n        alignment: TOP\n    },\n    horizontal: {\n        componentName: 'horizontalScrollBar',\n        width: 'layoutBasedMeasure',\n        layoutBasedMeasure: WIDTH,\n        viewMeasure: 'viewWidth',\n        height: 'thickness',\n        rowAlign: config.align === 'top' ? 0 : 2,\n        colAlign: 1,\n        position: config.align,\n        alignment: LEFT\n    }\n});\n\n/**\n * Creates the wrapper for the scroller, i.e., horizontal and vertical to be used in the tree layout\n *\n *\n * @param {string} scrollBarType type of scrollbar: horizontal/vertical\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst createScrollBarWrapper = (scrollBarType, layoutManager, renderDetails, grid) => {\n    let scrollBarWrapper = null;\n    const { layoutConfig } = renderDetails;\n    const target = { target: CANVAS };\n    const { scrollBar } = layoutConfig;\n    const { layoutDimensions } = grid.viewInfo();\n    const {\n        actualCenterMeasures,\n        unitHeights,\n        unitWidths\n    } = layoutDimensions;\n    const {\n        componentName, layoutBasedMeasure, width, height, rowAlign, colAlign,\n        viewMeasure, position, alignment\n    } = scrollBarMap(scrollBar[scrollBarType])[scrollBarType];\n    const dimensions = {\n        thickness: scrollBar.thickness,\n        layoutBasedMeasure: layoutDimensions[viewMeasure][1]\n    };\n    const totalLength = actualCenterMeasures[layoutBasedMeasure];\n    const viewLength = layoutDimensions[viewMeasure][1];\n\n    const scrollConfig = Object.assign({}, {\n        classPrefix: layoutConfig.classPrefix,\n        ...target,\n        scrollBarComponentConfig: {\n            ...scrollBar,\n            classPrefix: layoutConfig.classPrefix\n        },\n\n        type: scrollBarType,\n        alignWith: `${ROW_MATRIX_INDEX[rowAlign]}-${COLUMN_MATRIX_INDEX[colAlign]}`,\n        alignment,\n        position\n    });\n\n    const wrapperParams = {\n        name: componentName,\n        config: scrollConfig,\n        dimensions: {\n            width: dimensions[width],\n            height: dimensions[height],\n            totalLength,\n            viewLength,\n            unitHeights,\n            unitWidths\n        }\n    };\n\n    if (layoutManager.getComponent(componentName)) {\n        scrollBarWrapper = layoutManager\n                                .getComponent(componentName)\n                                .updateWrapper(wrapperParams);\n        if (viewLength >= totalLength) {\n            layoutManager\n                            .getComponent(componentName)\n                            .remove();\n        }\n    } else {\n        scrollBarWrapper = new ScrollComponent(wrapperParams);\n    }\n    if (viewLength >= totalLength) {\n        return null;\n    }\n\n    return scrollBarWrapper;\n};\n\n/**\n * Creates the wrapper for the legend to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createLegendWrapper = (layoutManager, renderDetails) => {\n    let legendWrapper = null;\n    const { components, layoutConfig, measurement } = renderDetails;\n    const target = { target: CANVAS };\n\n    if (components.legends && components.legends.length) {\n        const legendConfig = { ...layoutConfig.legend, ...target, measurement };\n        const wrapperParams = {\n            name: LEGEND,\n            component: components.legends,\n            config: legendConfig\n        };\n\n        if (layoutManager.getComponent(LEGEND)) {\n            legendWrapper = layoutManager\n                       .getComponent(LEGEND)\n                       .updateWrapper(wrapperParams);\n        } else {\n            legendWrapper = new LegendComponent(wrapperParams);\n        }\n    }\n    return legendWrapper;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst gridLayoutWrapper = (layoutManager, renderDetails, grid) => {\n    let gridWrapper = null;\n    const target = { target: CANVAS };\n    const { layoutConfig } = renderDetails;\n\n    const config = {\n        ...target,\n        pagination: layoutConfig.pagination,\n        classPrefix: layoutConfig.classPrefix,\n        dimensions: { height: 0, width: 0 }\n    };\n    const wrapperParams = {\n        name: GRID,\n        component: grid,\n        config\n    };\n\n    if (layoutManager.getComponent(GRID)) {\n        gridWrapper = layoutManager\n                    .getComponent(GRID)\n                    .updateWrapper(wrapperParams);\n    } else {\n        gridWrapper = new GridComponent(wrapperParams);\n    }\n    return gridWrapper;\n};\n\n/**\n * Responsible for providing the wrapper creators for every component in Muze.\n * This function, when called, returns the set of components and their respective wrappers.\n *\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} grid Instance of the grid layout\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers for each component\n */\nexport const componentWrapperMaker = (layoutManager, grid, renderDetails) => ({\n    title: createHeaderWrapper(TITLE, layoutManager, renderDetails),\n    subtitle: createHeaderWrapper(SUB_TITLE, layoutManager, renderDetails),\n    legend: createLegendWrapper(layoutManager, renderDetails),\n    grid: gridLayoutWrapper(layoutManager, renderDetails, grid),\n    verticalScrollBar: createScrollBarWrapper(VERTICAL, layoutManager, renderDetails, grid),\n    horizontalScrollBar: createScrollBarWrapper(HORIZONTAL, layoutManager, renderDetails, grid)\n});\n","export class ScrollManager {\n\n    constructor () {\n        this._scrollBarComponents = {};\n        this._attachedComponents = {};\n    }\n\n    scrollBarComponents (...sbc) {\n        if (sbc.length) {\n            this._scrollBarComponents = sbc[0];\n            return this;\n        }\n        return this._scrollBarComponents;\n    }\n\n    attachedComponents (...abc) {\n        if (abc.length) {\n            this._attachedComponents = abc[0];\n            return this;\n        }\n        return this._attachedComponents;\n    }\n\n    performAttachedScrollFunction (type, movedViewLength) {\n        Object.values(this.attachedComponents()).forEach((e) => {\n            e.performScrollAction(type, movedViewLength);\n        });\n    }\n\n    triggerScrollBarAction (type, delta) {\n        this.scrollBarComponents()[type] && this.scrollBarComponents()[type].scrollDeltaTo(delta);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\nimport { arrangeComponents } from './component-resolver';\nimport { createHeaders } from './title-maker';\nimport { createLegend, getLegendSpace } from './legend-maker';\nimport { componentWrapperMaker } from './component-wrapper-maker';\nimport { TOP, BOTTOM, LEFT, RIGHT } from '../constants';\nimport { ScrollManager } from './scroll-manager';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const prepareLayout = (layout, renderDetails) => {\n    const { components, layoutConfig, measurement } = renderDetails;\n    const {\n        rows,\n        columns,\n        values,\n        cornerMatrices\n    } = components;\n    const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n    } = cornerMatrices;\n    if (rows && columns) {\n        layout.measurement(measurement)\n                        .config(layoutConfig)\n                        .matrices({\n                            top: [topLeft, columns[0], topRight],\n                            center: [rows[0], values, rows[1]],\n                            bottom: [bottomLeft, columns[1], bottomRight]\n                        })\n                        .triggerReflow();\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} mount\n *\n */\nexport const getRenderDetails = (context, mount) => {\n    let layoutConfig = mergeRecursive({}, context.config());\n    // Get height width of the mount point\n    let { height, width } = mount.getBoundingClientRect();\n    const heightAttr = context.height();\n    const widthAttr = context.width();\n    const visGroup = context.composition().visualGroup;\n    const {\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority,\n        rows,\n        columns,\n        values\n    } = visGroup.placeholderInfo();\n    const {\n        minWidth,\n        minHeight,\n        classPrefix,\n        showHeaders,\n        legend,\n        pagination,\n        scrollBar\n    } = context.config();\n\n    // Get title configuration\n    const titleConfig = context.title()[1];\n     // Get subtitle configuration\n    const subtitleConfig = context.subtitle()[1];\n    // Get legend position\n    const legendPosition = legend.position;\n    // Arrange components according to config\n    const layoutArrangement = arrangeComponents(context);\n\n    height = Math.floor(height);\n    width = Math.floor(width);\n\n    const availableHeightForCanvas = Math.max(heightAttr > 0 ? heightAttr : height, minHeight);\n    const availableWidthForCanvas = Math.max(widthAttr > 0 ? widthAttr : width, minWidth);\n\n    // Create headers and determine header height\n    const { headers, headerHeight } = createHeaders(context, availableHeightForCanvas, availableWidthForCanvas);\n\n    // Create legends and determine legend space\n    const legends = createLegend(context, headerHeight, availableHeightForCanvas, availableWidthForCanvas);\n    context._composition.legend = {};\n    legends.forEach((e) => {\n        context._composition.legend[e.scaleType] = e.legend;\n    });\n\n    const legendSpace = getLegendSpace(legends, legend, availableHeightForCanvas, availableWidthForCanvas);\n    const legendWidth = (legendPosition === LEFT || legendPosition === RIGHT) ? legendSpace.width : 0;\n    const legendHeight = (legendPosition === TOP || legendPosition === BOTTOM) ? legendSpace.height : 0;\n\n    // Set components for layouting\n    const components = {\n        headers,\n        legends,\n        canvases: [context],\n        rows,\n        columns,\n        values,\n        cornerMatrices: visGroup.cornerMatrices()\n    };\n\n    const measurement = {\n        mountSpace: {\n            height,\n            width\n        },\n        headerHeight,\n        legendSpace,\n        canvasWidth: availableWidthForCanvas,\n        canvasHeight: availableHeightForCanvas,\n        width: availableWidthForCanvas - legendWidth,\n        height: availableHeightForCanvas - headerHeight - legendHeight,\n        minUnitHeight: context.minUnitHeight(),\n        minUnitWidth: context.minUnitWidth()\n    };\n    layoutConfig = mergeRecursive(layoutConfig, {\n        classPrefix,\n        showHeaders,\n        border: mergeRecursive(visGroup.metaData().border, context.config().border),\n        layoutArrangement,\n        legend,\n        buffer: scrollBar.thickness,\n        pagination,\n        title: titleConfig,\n        subtitle: subtitleConfig,\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        mount,\n        priority\n    });\n    return {\n        layoutConfig,\n        components,\n        measurement\n    };\n};\n\nconst componentIndexes = {\n    title: 0,\n    subtitle: 1,\n    legend: 2,\n    verticalScrollBar: 3,\n    horizontalScrollBar: 4,\n    grid: 5\n};\n\n/**\n * Responsible for creating a scroll manager that manages interactions between the grid\n * component and the scroll bar components\n *\n * @param {Array} componentWrappers Contains the wrappers for all the components\n * @param {Canvas} canvas Instance of the current canvas\n * @return {Array} Positions of units either horizontal or vertical\n */\nconst createScrollManager = (componentWrappers, canvas) => {\n    const {\n        horizontalScrollBar,\n        verticalScrollBar,\n        grid\n    } = componentIndexes;\n\n    const horizontalScrollWrapper = componentWrappers[horizontalScrollBar];\n    const verticalScrollWrapper = componentWrappers[verticalScrollBar];\n    const gridWrapper = componentWrappers[grid];\n    const scrollBarManager = new ScrollManager();\n    const scrollBarComponents = {};\n\n    verticalScrollWrapper && (scrollBarComponents.vertical = verticalScrollWrapper);\n    horizontalScrollWrapper && (scrollBarComponents.horizontal = horizontalScrollWrapper);\n\n    scrollBarManager\n                    .scrollBarComponents(scrollBarComponents)\n                    .attachedComponents({\n                        grid: gridWrapper\n                    });\n    canvas.composition().hScrollBar = horizontalScrollWrapper;\n    canvas.composition().vScrollBar = verticalScrollWrapper;\n\n    [horizontalScrollWrapper, verticalScrollWrapper].forEach((wrapper) => {\n        wrapper && wrapper.manager(scrollBarManager);\n    });\n\n    gridWrapper.scrollBarManager(scrollBarManager);\n};\n\nexport const renderLayout = (canvas, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const gridLayout = canvas.layout();\n    const {\n\n        grid\n    } = componentIndexes;\n\n    // Get the component wrappers\n    const compWrappers = componentWrapperMaker(layoutManager, gridLayout, renderDetails);\n    const componentWrappers = Object.keys(componentIndexes).map(e => compWrappers[e]);\n    const gridWrapper = componentWrappers[grid];\n    createScrollManager(componentWrappers, canvas);\n\n    layoutManager.registerComponents(componentWrappers).compute();\n    gridWrapper.attachScrollListener();\n};\n\n","import {\n    getDataModelFromIdentifiers,\n    FieldType,\n    mergeRecursive,\n    isSimpleObject,\n    CommonProps\n} from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\n\nimport { applyInteractionPolicy } from '../helper';\n\nconst defaultInteractionPolicy = (valueMatrix, firebolt) => {\n    const isMeasure = field => field.type() === FieldType.MEASURE;\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    const xFields = [].concat(...visualGroup.getFieldsFromChannel('x'));\n    const yFields = [].concat(...visualGroup.getFieldsFromChannel('y'));\n    const colDim = xFields.every(field => field.type() === FieldType.DIMENSION);\n    const fieldInf = visualGroup.resolver().getAllFields();\n    const rowFacets = fieldInf.rowFacets;\n    const colFacets = fieldInf.colFacets;\n    valueMatrix.each((cell) => {\n        const unitFireBolt = cell.valueOf().firebolt();\n        if (!(xFields.every(isMeasure) && yFields.every(isMeasure))) {\n            const facetFields = cell.valueOf().facetByFields()[0];\n            const unitColFacets = facetFields.filter(d => colFacets.findIndex(v => v.equals(d)) !== -1);\n            const unitRowFacets = facetFields.filter(d => rowFacets.findIndex(v => v.equals(d)) !== -1);\n            let propFields;\n            if (colDim) {\n                propFields = unitColFacets.map(d => `${d}`);\n            } else {\n                propFields = unitRowFacets.map(d => `${d}`);\n            }\n\n            unitFireBolt.propagateWith('*', propFields, true);\n        }\n    });\n};\n\nconst defaultCrossInteractionPolicy = {\n    behaviours: {\n        '*': (propagationPayload, context) => {\n            const propagationCanvasAlias = propagationPayload.sourceCanvas;\n            const canvasAlias = context.parentAlias();\n            return propagationCanvasAlias ? canvasAlias === propagationCanvasAlias : true;\n        }\n    },\n    sideEffects: {\n        tooltip: (propagationPayload, context) => {\n            const propagationUnit = propagationPayload.sourceUnit;\n            const propagationCanvas = propagationPayload.sourceCanvas;\n            const unitId = context.id();\n            const canvasAlias = context.parentAlias();\n            if (propagationCanvas) {\n                return propagationCanvas !== canvasAlias ? true : unitId === propagationUnit;\n            }\n            return true;\n        }\n    }\n};\n\n/**\n * This class is responsible for dispatching any behavioural action to all the visual units housed by the canvas.\n * It is created by {@link Canvas}. This class does not handle any physical actions. Physical actions get triggered\n * in {@link VisualUnit} which is managed by it's own firebolt instance. The firebolt instance of canvas only\n * propagates the action to all the visual units in it's composition.\n *\n * To get the firebolt instance of {@link Canvas}\n * ```\n *  const firebolt = canvas.firebolt();\n * ```\n *\n * @class GroupFireBolt\n * @public\n */\nexport default class GroupFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this._interactionPolicy = this.constructor.defaultInteractionPolicy();\n        this.crossInteractionPolicy(this.constructor.defaultCrossInteractionPolicy());\n    }\n\n    static defaultInteractionPolicy () {\n        return defaultInteractionPolicy;\n    }\n\n    static defaultCrossInteractionPolicy () {\n        return defaultCrossInteractionPolicy;\n    }\n\n    interactionPolicy (...policy) {\n        if (policy.length) {\n            this._interactionPolicy = policy[0] || this.constructor.defaultInteractionPolicy();\n            return this;\n        }\n        return this._interactionPolicy;\n    }\n\n    crossInteractionPolicy (...policy) {\n        if (policy.length) {\n            this._crossInteractionPolicy = mergeRecursive(mergeRecursive({},\n                this.constructor.defaultCrossInteractionPolicy()), policy[0] || {});\n            const context = this.context;\n            applyInteractionPolicy(this);\n            context._throwback.registerImmediateListener([CommonProps.MATRIX_CREATED], () => {\n                applyInteractionPolicy(this);\n            });\n            return this;\n        }\n        return this._crossInteractionPolicy;\n    }\n\n    /**\n     * Dispatches a behavioural action with a payload. It takes the name of the behavioural action and a payload\n     * object which contains the criteria aend an array of side effects which determines what side effects are\n     * going to be shown in each visual unit of the canvas. It prepares the datamodel from the given criteria\n     * and initiates a propagation from the datamodel of canvas. Then all the visual units of canvas which listens\n     * to the propagation gets informed on which rows got selected and dispatches the behavioural action sent during\n     * propagation.\n     *\n     * To dispatch a behavioural action on the canvas\n     * ```\n     *  // Get the firebolt instance of the canvas\n     *  const firebolt = canvas.firebolt();\n     *  // Dispatch a brush behaviour\n     *  firebolt.dispatchBehaviour('brush', {\n     *      // Selects all the rows with Horsepower having range between 100 and 200.\n     *      criteria: {\n     *          Horsepower: [100, 200]\n     *      }\n     *  });\n     * // On dispatch of this behavioural action, a selection box gets created and plots gets faded out which are the\n     * // default side effects mapped to this behavioural action.\n     * ```\n     *\n     * ```\n     * Additionally, it can also be passed an array of side effects in the payload.\n     *  // Dispatch a select behaviour with only crossline as side effect.\n     *  firebolt.dispatchBehaviour('select', {\n     *      criteria: {\n     *          Cylinders: ['8']\n     *      },\n     *      sideEffects: ['crossline']\n     *  });\n     * ```\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of the behavioural action\n     * @param {Object} payload Object which contains the interaction information.\n     * @param {Object | Array.<Array>} payload.criteria Identifiers by which the selection happens.\n     * @param {Array.<string|Object>} payload.sideEffects Side effects which needs to be shown.\n     *\n     * @return {GroupFireBolt} Instance of firebolt.\n     */\n    dispatchBehaviour (behaviour, payload) {\n        const propPayload = Object.assign(payload);\n        const criteria = propPayload.criteria;\n        const data = this.context.composition().visualGroup.getGroupByData();\n        const fieldsConfig = data.getFieldsConfig();\n        const model = getDataModelFromIdentifiers(data, criteria);\n        const behaviouralAction = this._actions.behavioural[behaviour];\n\n        if (behaviouralAction) {\n            const fields = isSimpleObject(criteria) ? Object.keys(criteria) : (criteria ? criteria[0] : []);\n            const validFields = fields.filter(field => field in fieldsConfig);\n            const mutates = behaviouralAction.constructor.mutates();\n            const propConfig = {\n                payload: propPayload,\n                action: behaviour,\n                criteria: model,\n                sourceId: this.context.alias(),\n                isMutableAction: mutates,\n                propagateInterpolatedValues: validFields.every(field => fieldsConfig[field].def.type ===\n                    FieldType.MEASURE)\n            };\n            data.propagate(model, propConfig, true);\n        }\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        return this;\n    }\n}\n","import GroupFireBolt from './group-firebolt';\n\nexport default GroupFireBolt;\n","export const APP_INITIAL_STATE = {\n    app: {\n        group: {},\n        units: {},\n        layers: {},\n        canvas: {}\n    },\n    local: {\n        canvas: {},\n        group: {},\n        units: {},\n        layers: {}\n    }\n};\n\n","import { GridLayout } from '@chartshq/layout';\nimport { transactor, Store, getUniqueId, selectElement, STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { RETINAL } from '../constants';\nimport TransactionSupport from '../transaction-support';\nimport { getRenderDetails, prepareLayout, renderLayout } from './layout-maker';\nimport { localOptions, canvasOptions } from './local-options';\nimport GroupFireBolt from './firebolt';\nimport options from '../options';\nimport { APP_INITIAL_STATE } from './app-state';\nimport { initCanvas,\n        setupChangeListener,\n        setLabelRotationForAxes,\n        createGroupState,\n        createLayoutManager,\n        setLayoutInfForUnits\n} from './helper';\n/**\n * Canvas is a logical component which houses a visualization by taking multiple variable in different encoding channel.\n * Canvas manages lifecycle of many other logical component and exposes one consistent interface for creation of chart.\n * Canvas is intialized from environment with settings from environment and singleton dependencies.\n *\n * To create an instance of canvas\n * ```\n *  const env = Muze();\n *  const canvas = env.canvas()\n * ```\n *\n *\n * @class\n * @public\n * @module Canvas\n */\nexport default class Canvas extends TransactionSupport {\n\n    /**\n     * Creates reactive property accessors.\n     * - data\n     * - height\n     * - width\n     * - config\n     * This configs are retrieved from options.\n     */\n    constructor (globalDependencies) {\n        super();\n\n        this._allOptions = Object.assign({}, options, localOptions);\n        this._registry = {};\n        this._composition = {};\n        this._cachedProps = {};\n        this._alias = null;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        this._composition.layout = new GridLayout();\n        this._store = new Store(APP_INITIAL_STATE);\n\n        this._throwback = new Store({\n            [CommonProps.MATRIX_CREATED]: false\n        });\n\n        // Setters and getters will be mounted on this. The object will be mutated.\n        const namespace = STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE;\n        const [, store] = transactor(this, options, this._store.model, {\n            namespace\n        });\n        transactor(this, localOptions, store, {\n            namespace\n        });\n        transactor(this, canvasOptions, store, {\n            namespace\n        });\n\n        this.dependencies(Object.assign({}, globalDependencies, this._dependencies));\n        this.firebolt(new GroupFireBolt(this, {\n            behavioural: behaviouralActions,\n            physical: physicalActions,\n            physicalBehaviouralMap: {}\n        }, sideEffects, behaviourEffectMap));\n        this.alias(`canvas-${getUniqueId()}`);\n        this.title('', {});\n        this.subtitle('', {});\n        this.legend({});\n        this.color({});\n        this.shape({});\n        this.size({});\n        setupChangeListener(this);\n         // init layoutManager\n        this._layoutManager = createLayoutManager();\n    }\n\n    /**\n     * Retrieves an instance of layout which is responsible for layouting. Layout is responsible for creating faceted\n     * presentation using table layout.\n     *\n     * @public\n     *\n     * @return {GridLayout} Instance of layout attached to canvas.\n     */\n    layout (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().layout;\n    }\n\n    /**\n     * Retrieves the composition for a canvas\n     *\n     * @public\n     *\n     * @return {object} Instances of the components which canvas requires to draw the full visualization.\n     *      ```\n     *          {\n     *              layout: // Instance of {@link GridLayout}\n     *              legend: // Instance of {@link Legend}\n     *              subtitle: // Instance of {@link TextCell} using which the title is rendered\n     *              title: // Instance of {@link TextCell} using which the title is rendered\n     *              visualGroup: // Instance of {@link visualGroup}\n     *          }\n     *      ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Sets or gets the alias of the canvas. Alias is a name by which the canvas can be referred.\n     *\n     * When setter\n     * @param {string} alias Name of the alias.\n     *\n     * @return {Canvas} Instance of the canvas.\n     *\n     * When getter\n     *\n     * @return {string} Alias of canvas.\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            const visualGroup = this.composition().visualGroup;\n            this._alias = params[0];\n            visualGroup && visualGroup.alias(this.alias());\n            return this;\n        }\n        return this._alias;\n    }\n\n    /**\n     * Creates an instance initiated with given settings.\n     *\n     * @param {Object} initialSettings Initial settings to be populated in the model\n     * @param {Object} regEntry newly created instance with the initial settings\n     * @param {Object} globalDependencies dependencies which will be created only once in the page\n     *\n     * @return {Object} newly created instance with the initial settings\n     */\n    static withSettings (initialSettings, regEntry, globalDependencies) {\n        const instance = new Canvas(globalDependencies);\n\n        for (const key in initialSettings) {\n            instance[key](initialSettings[key]);\n        }\n        // set registry for instance\n        instance.registry(regEntry);\n        return instance;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof Canvas\n     */\n    static formalName () {\n        return 'canvas';\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this canvas. The firebolt instance can be used to dispatch a\n     * behaviour dynamically on the canvas. This firebolt does not handle any physical actions. It is just used to\n     * propagate the action to all the visual units in it's composition.\n     *\n     * @public\n     *\n     * @return {GroupFireBolt} Instance of firebolt associated with canvas.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Registry peoperty accessor\n     *\n     * @param {Object} reg plain old javascript object keyvalue pairs. Key containing module name and value contains\n     * module definition class. The reg object has to be flat object of level 1.\n     */\n    registry (...params) {\n        if (params.length) {\n            const components = Object.assign({}, params[0].components);\n            const componentSubRegistry = Object.assign({}, params[0].componentSubRegistry);\n\n            this._registry = { components, componentSubRegistry };\n            const initedComponents = initCanvas(this);\n            // @todo is it okay to continue this tight behaviour? If not use a resolver to resolve diff component type.\n            this._composition.visualGroup = initedComponents[0];\n            createGroupState(this);\n            this.composition().visualGroup.alias(this.alias()).store(this._store);\n            return this;\n        }\n        return this._registry;\n    }\n\n    /*\n     * Prepare dependencies for top level elements\n     */\n    dependencies (...param) {\n        if (param.length) {\n            this._dependencies = param[0];\n            return this;\n        }\n        // @todo prepare dependencies here.\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     * @param {*} lifeCycles\n     *\n     * @memberof Canvas\n     */\n    lifeCycle (lifeCycles) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        if (lifeCycles) {\n            lifeCycleManager.register(lifeCycles);\n            return this;\n        }\n        return lifeCycleManager;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    legend (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().legend;\n    }\n\n    /**\n     * Returns a promise for various {@link LifecycleEvents} of the various components of canvas. The promise gets\n     * resolved once the particular event gets completed.\n     *\n     * To use this,\n     * ```\n     *      canvas.once('layer.drawn').then(() => {\n     *          // Do any post drawing work here.\n     *      });\n     * ```\n     * @public\n     *\n     * @param {string} eventName Name of the lifecycle event.\n     *\n     * @return {Promise} A pending promise waiting for resolve to be called.\n     */\n    once (eventName) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        return lifeCycleManager.retrieve(eventName);\n    }\n\n    /**\n     * Internal function to trigger render, this method is cognizant of all the properties of the core modules and\n     * establish a passive reactivity. Passive reactivity is not always a bad thing :)\n     * @internal\n     */\n    render () {\n        const mount = this.mount();\n        // removeChild(mount);\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        // Get render details including arrangement and measurement\n        const renderDetails = getRenderDetails(this, mount);\n        lifeCycleManager.notify({ client: this, action: 'beforedraw' });\n        // Prepare the layout by triggering the matrix calculation\n        prepareLayout(this.layout(), renderDetails);\n\n        this._layoutManager.dimension({\n            height: renderDetails.measurement.canvasHeight,\n            width: renderDetails.measurement.canvasWidth\n        });\n\n        this._layoutManager.renderAt(mount);\n\n        // Render each component\n        renderLayout(this, renderDetails);\n\n        setLayoutInfForUnits(this);\n\n        // setLabelRotation\n        setLabelRotationForAxes(this);\n    }\n\n    /**\n     * Returns the instances of x axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the top axis and the second element represents the bottom\n     *   // axis.\n     *   [\n     *      [X1, X2],\n     *      [X3, X4]\n     *   ]\n     * ```\n     * @public\n     *\n     * @return {Array.<Array>} Instances of x axis.\n     */\n    xAxes () {\n        return this.composition().visualGroup.getAxes('x');\n    }\n\n    /**\n     * Returns the instances of y axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the left axis and the second element represents the right\n     *   // axis.\n     *   [\n     *      [Y1, Y2],\n     *      [Y3, Y4]\n     *   ]\n     * ```\n     * @public\n     * @return {Array.<Array>} Instances of y axis.\n     */\n    yAxes () {\n        return this.composition().visualGroup.getAxes('y');\n    }\n\n    /**\n     * Returns all the retinal axis of the canvas. Color, shape and size axis are combinedly called retinal axis.\n     *\n     * @public\n     * @return {Object} Instances of retinal axis.\n     *          ```\n     *              {\n     *                  color: [ColorAxis], // Array of color axis.\n     *                  shape: [ShapeAxis], // Array of shape axis.\n     *                  size: [SizeAxis] // Array of size axis.\n     *              }\n     *          ```\n     */\n    getRetinalAxes () {\n        const visualGroup = this.composition().visualGroup;\n        return visualGroup.getAxes(RETINAL);\n    }\n\n    mount (...params) {\n        if (params.length) {\n            let value = params[0];\n            if (typeof params[0] === 'string') {\n                value = selectElement(params[0]).node();\n            }\n            this._mount = value;\n            return this;\n        }\n        return this._mount;\n    }\n}\n","import { cellRegistry, SimpleCell } from '@chartshq/visual-cell';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { layerRegistry } from '@chartshq/visual-layer';\nimport { SimpleGroup, VisualGroup } from '@chartshq/visual-group';\n\nexport const COMPONENTS = {\n    VisualGroup,\n    VisualUnit\n};\nexport const SUBREGISTRIES = {\n    cellRegistry,\n    layerRegistry\n};\nexport const INTERFACES = {\n    SimpleGroup,\n    SimpleCell\n};\n\n","import { DEFAULT_LAYERS } from './defaults';\n\nexport default () => {\n    const reg = DEFAULT_LAYERS;\n    const regObj = {\n        set: (key, def) => {\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n    return regObj;\n};\n","import {\n    transactor,\n    Smartlabel,\n    enableChainedTransaction,\n    LifeCycleManager,\n    DataModel,\n    makeElement,\n    getClientPoint,\n    selectElement,\n    getEvent,\n    require,\n    DateTimeFormatter\n} from 'muze-utils';\n\nimport {\n    SurrogateSideEffect,\n    SpawnableSideEffect,\n    sideEffects,\n    PersistentBehaviour,\n    GenericBehaviour,\n    VolatileBehaviour,\n    behaviouralActions,\n    GenericSideEffect\n} from '@chartshq/muze-firebolt';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport pkg from '../package.json';\nimport * as operators from './operators';\nimport { actionModel as ActionModel } from './action-model';\nimport options from './options';\nimport { Canvas } from './canvas';\nimport { COMPONENTS, SUBREGISTRIES } from './default-registry';\nimport './muze.scss';\n\n// Cache singleton instances which should be included only once in a page\nconst globalCache = {};\nconst defaultRegistry = COMPONENTS;\n\nconst overrideRegistryDefinitions = (overrideRegistry, registry) => {\n    for (const prop in overrideRegistry) {\n        registry.set(prop, overrideRegistry[prop]);\n    }\n};\n\n/**\n * Entry point to renderer. Initializes an environment with settings and registries for canvas. This is a simple wrapper\n * over {@link Canvas} which enables common configuration passing to multiple such canvases.\n *\n * Everytime `muze()` is called it creates an environment. These environment supports subset of APIs of Canvas. If\n * common configuration is used to render multiple canvases then it can be set directly in the env. Like if data is\n * common across all the visulization then its better to set the data in env. When a canvas is created it receives all\n * those configuration from env.\n *\n * ```\n *  // Creates an environment\n *  const env = muze()\n *  // Set data property in environment, so that all the canvas created from the same environment gets this data\n *  // automatically\n *  env.data(dm);\n *  // Creates canvas, by default env pushes data to canvas instance\n *  const canvas = env.canvas();\n * ```\n *\n * If a property is set on both environment and canvas instance, property set on canvas instance gets more priority.\n *\n * @public\n * @module muze\n * @namespace Muze\n *\n * @return {Env} Instance of an environment\n */\nconst muze = () => {\n    // Setters and getters will be mounted on this. Object will be mutated.\n    const [env, globalStore] = transactor({}, options);\n    const components = Object.assign({}, COMPONENTS);\n    const componentSubRegistryDef = Object.assign(SUBREGISTRIES);\n    const componentSubRegistry = {};\n\n    for (const prop in componentSubRegistryDef) {\n        componentSubRegistry[prop] = componentSubRegistryDef[prop]();\n    }\n\n    // Apart form the setter getter, an instance method is injected to create real renderer instances\n    env.canvas = () => {\n        // Create a canvas instance with this settings\n        const settings = globalStore.serialize();\n        const canvas = Canvas.withSettings(settings, { /* registry */\n            components,\n            componentSubRegistry\n        }, env.globalDependencies());\n\n        // Whenever settings is changed canvas is updated\n        enableChainedTransaction(globalStore, canvas, Object.keys(settings));\n\n        return canvas;\n    };\n\n    // Global dependencies for for compositions. Only one copy of the same should be in the page\n    env.globalDependencies = () => {\n        if (!globalCache.smartlabel) {\n            globalCache.smartlabel = new Smartlabel(1, 'body');\n        }\n        return {\n            smartlabel: globalCache.smartlabel,\n            lifeCycleManager: new LifeCycleManager()\n        };\n    };\n\n    // Retrieves global settings. This getter is readonly so that user can't change this as change should happen\n    // only from setter to avoid unwanted sync issues.\n    env.settings = () => globalStore.serialize();\n\n    env.registry = (...overrideRegistry) => {\n        // Selectively copy the properties from COMPONENTS\n        if (overrideRegistry.length) {\n            for (const prop in overrideRegistry) {\n                if (prop in defaultRegistry) {\n                    components[prop] = overrideRegistry[prop];\n                }\n            }\n            return env;\n        }\n        return components;\n    };\n\n    env.cellRegistry = (...overrideRegistry) => {\n        const cellRegistry = componentSubRegistry.cellRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], cellRegistry);\n            return env;\n        }\n        return cellRegistry.get();\n    };\n\n    env.layerRegistry = (...overrideRegistry) => {\n        const layerRegistry = componentSubRegistry.layerRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], layerRegistry);\n            return env;\n        }\n        return layerRegistry.get();\n    };\n\n    return env;\n};\n\nconst SideEffects = {\n    sideEffects,\n    standards: {\n        SurrogateSideEffect,\n        SpawnableSideEffect,\n        GenericSideEffect\n    }\n};\n\nconst Behaviours = {\n    behaviouralActions,\n    standards: {\n        GenericBehaviour,\n        PersistentBehaviour,\n        VolatileBehaviour\n    }\n};\n\nmuze.DataModel = DataModel;\nmuze.version = pkg.version;\nmuze.SideEffects = SideEffects;\nmuze.ActionModel = ActionModel;\nmuze.layerFactory = layerFactory;\nmuze.Operators = operators;\nmuze.Behaviours = Behaviours;\nmuze.utils = {\n    getClientPoint,\n    getEvent,\n    makeElement,\n    selectElement,\n    DateTimeFormatter,\n    require\n};\n\nexport default muze;\n"],"sourceRoot":""}