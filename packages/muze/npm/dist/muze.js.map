{"version":3,"sources":["webpack://muze/webpack/universalModuleDefinition","webpack://muze/webpack/bootstrap","webpack://muze/webpack://DataModel/webpack/universalModuleDefinition","webpack://muze/webpack://DataModel/webpack/bootstrap","webpack://muze/webpack://DataModel/src/index.js","webpack://muze/webpack://DataModel/src/enums/data-format.js","webpack://muze/webpack://DataModel/src/enums/dimension-subtype.js","webpack://muze/webpack://DataModel/src/enums/measure-subtype.js","webpack://muze/webpack://DataModel/src/enums/field-type.js","webpack://muze/webpack://DataModel/src/enums/filtering-mode.js","webpack://muze/webpack://DataModel/src/utils/date-time-formatter.js","webpack://muze/webpack://DataModel/src/utils/column-major.js","webpack://muze/webpack://DataModel/src/utils/extend2.js","webpack://muze/webpack://DataModel/src/utils/helper.js","webpack://muze/webpack://DataModel/src/field-store.js","webpack://muze/webpack://DataModel/src/value.js","webpack://muze/webpack://DataModel/src/operator/row-diffset-iterator.js","webpack://muze/webpack://DataModel/src/operator/get-common-schema.js","webpack://muze/webpack://DataModel/src/constants/index.js","webpack://muze/webpack://DataModel/src/operator/cross-product.js","webpack://muze/webpack://DataModel/src/operator/merge-sort.js","webpack://muze/webpack://DataModel/src/operator/data-builder.js","webpack://muze/webpack://DataModel/src/operator/difference.js","webpack://muze/webpack://DataModel/src/operator/group-by-function.js","webpack://muze/webpack://DataModel/src/utils/reducer-store.js","webpack://muze/webpack://DataModel/src/operator/natural-join-filter-function.js","webpack://muze/webpack://DataModel/src/operator/union.js","webpack://muze/webpack://DataModel/src/operator/outer-join.js","webpack://muze/webpack://DataModel/src/fields/field/index.js","webpack://muze/webpack://DataModel/src/fields/dimension/index.js","webpack://muze/webpack://DataModel/src/fields/categorical/index.js","webpack://muze/webpack://DataModel/src/fields/temporal/index.js","webpack://muze/webpack://DataModel/src/fields/binned/index.js","webpack://muze/webpack://DataModel/src/fields/measure/index.js","webpack://muze/webpack://DataModel/src/fields/continuous/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/field-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/categorical-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/temporal-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/binned-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/continuous-parser/index.js","webpack://muze/webpack://DataModel/src/fields/partial-field/index.js","webpack://muze/webpack://DataModel/src/field-creator.js","webpack://muze/webpack://DataModel/src/default-config.js","webpack://muze/webpack://DataModel/src/converter/dsv-arr.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/dsv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/csv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/tsv.js","webpack://muze/webpack://DataModel/src/converter/dsv-str.js","webpack://muze/webpack://DataModel/src/converter/flat-json.js","webpack://muze/webpack://DataModel/src/converter/auto-resolver.js","webpack://muze/webpack://DataModel/src/helper.js","webpack://muze/webpack://DataModel/src/relation.js","webpack://muze/webpack://DataModel/src/datamodel.js","webpack://muze/webpack://DataModel/src/operator/group-by.js","webpack://muze/webpack://DataModel/src/operator/bucket-creator.js","webpack://muze/webpack://DataModel/src/stats/index.js","webpack://muze/webpack://DataModel/src/export.js","webpack://muze/webpack://DataModel/src/operator/compose.js","webpack://muze/webpack://DataModel/src/operator/pure-operators.js","webpack://muze/webpack://DataModel/src/operator/natural-join.js","webpack://muze/webpack://hyperdis/webpack/universalModuleDefinition","webpack://muze/webpack://hyperdis/webpack/bootstrap","webpack://muze/webpack://hyperdis/src/utils/set.js","webpack://muze/webpack://hyperdis/src/utils/index.js","webpack://muze/webpack://hyperdis/src/graph-node.js","webpack://muze/webpack://hyperdis/src/electric-node.js","webpack://muze/webpack://hyperdis/src/graph.js","webpack://muze/webpack://hyperdis/src/model.js","webpack://muze/webpack://hyperdis/src/index.js","webpack://muze/(webpack)/buildin/module.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/SmartlabelManager.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/lib.js","webpack://muze/./packages/muze/src/index.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/container-manager.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisector.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisect.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/range.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ticks.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/threshold/sturges.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/map.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/nest.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/set.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/ordinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/band.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/define.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/lab.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/rgb.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/object.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/string.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/value.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/parse.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/date.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/round.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/decompose.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/zoom.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hsl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hcl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/piecewise.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/continuous.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatDecimal.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/exponent.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatSpecifier.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTrim.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatPrefixAuto.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatRounded.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTypes.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatGroup.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatNumerals.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionFixed.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/tickFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionPrefix.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionRound.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/nice.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/log.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/pow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/threshold.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/interval.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/millisecond.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/second.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/minute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/hour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/day.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/week.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/month.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/year.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMinute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcHour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcDay.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcWeek.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMonth.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcYear.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoParse.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/time.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20b.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20c.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/viridis.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/sequential.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/ramp.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://muze/./packages/muze-utils/src/enums/namespace.js","webpack://muze/./packages/muze-utils/src/enums/reserved-fields.js","webpack://muze/./packages/muze-utils/src/enums/common-props.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/axis.js","webpack://muze/./packages/muze-utils/node_modules/d3-path/src/path.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/arc.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/line.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/area.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/radial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/lineRadial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/diamond.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/star.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/square.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/triangle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/wye.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/noop.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/bundle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRom.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linearClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/monotone.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/natural.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/step.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/stack.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/cubic.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/poly.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/sin.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/bounce.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/back.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/elastic.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/RedBlackTree.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Edge.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Cell.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Beach.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Diagram.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/voronoi.js","webpack://muze/./packages/muze-utils/src/common-utils.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol.js","webpack://muze/./packages/muze-utils/src/enums/stack-config.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/diverging.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/expand.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/wiggle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/pie.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespaces.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespace.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/creator.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selector.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selectorAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/matcher.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sparse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/enter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/data.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sort.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/window.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/classed.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/html.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/raise.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/lower.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/insert.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/clone.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/exit.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/order.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/call.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/nodes.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/node.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/size.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/empty.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/each.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/property.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/append.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/datum.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/local.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/sourceEvent.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/mouse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/touch.js","webpack://muze/./packages/muze-utils/node_modules/d3-dispatch/src/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/noevent.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/nodrag.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/event.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/drag.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timer.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timeout.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/schedule.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/tween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/interpolate.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selection.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attrTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/styleTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/delay.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/ease.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/interrupt.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/interrupt.js","webpack://muze/./packages/muze-utils/src/renderer-utils.js","webpack://muze/./packages/muze-utils/src/DataSystem/selection.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/event-list.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/lifecycle-manager.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/index.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/helper.js","webpack://muze/./packages/muze-firebolt/src/enums/actions.js","webpack://muze/./packages/muze-firebolt/src/enums/selection.js","webpack://muze/./packages/muze-firebolt/src/selection-set/index.js","webpack://muze/./packages/muze-firebolt/src/selection-set/selection-set.js","webpack://muze/./packages/muze-firebolt/src/helper/index.js","webpack://muze/./packages/muze-firebolt/src/firebolt.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/generic.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/volatile.js","webpack://muze/./packages/muze-firebolt/src/enums/behaviours.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/highlight.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/brush.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/filter.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/persistent.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/select.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-action-config.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-event.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/hover.js","webpack://muze/./packages/muze-firebolt/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/click.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/drag.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/longtouch.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/touch-drag.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/generic-sideeffect.js","webpack://muze/./packages/muze-firebolt/src/side-effects/surrogate.js","webpack://muze/./packages/muze-firebolt/src/side-effects/spawnable.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/helper.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/selection-box-drag.js","webpack://muze/./packages/muze-tooltip/src/constants.js","webpack://muze/./packages/muze-tooltip/src/default-config.js","webpack://muze/./packages/muze-tooltip/src/helper.js","webpack://muze/./packages/muze-tooltip/src/strategy.js","webpack://muze/./packages/muze-tooltip/src/content.js","webpack://muze/./packages/muze-tooltip/src/tooltip.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/helper/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/crossline/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/strategy.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/filter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/anchors/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/persistent-anchors.js","webpack://muze/./packages/muze-firebolt/src/side-effects/brush-anchors.js","webpack://muze/./packages/muze-firebolt/src/behaviour-effect-map.js","webpack://muze/./packages/visual-layer/src/enums/constants.js","webpack://muze/./packages/visual-layer/src/layers/area/default-config.js","webpack://muze/./packages/visual-layer/src/simple-layer/simple-layer.js","webpack://muze/./packages/visual-layer/src/base-layer/props.js","webpack://muze/./packages/muze-axis/src/enums/axis-orientation.js","webpack://muze/./packages/muze-axis/src/enums/scale-type.js","webpack://muze/./packages/muze-axis/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/scale-creator.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/default-config.js","webpack://muze/./packages/muze-axis/src/axis-renderer.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/space-setter.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/helper.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/props.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/simple-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/linear.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/log.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/pow.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/continous-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/band-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/time-axis.js","webpack://muze/./packages/muze-axis/src/color-axis/color-maps.js","webpack://muze/./packages/muze-axis/src/color-axis/defaults.js","webpack://muze/./packages/muze-axis/src/color-axis/props.js","webpack://muze/./packages/muze-axis/src/color-axis/color-strategy.js","webpack://muze/./packages/muze-axis/src/color-axis/color-axis.js","webpack://muze/./packages/muze-axis/src/size-axis/defaults.js","webpack://muze/./packages/muze-axis/src/size-axis/size-strategy.js","webpack://muze/./packages/muze-axis/src/size-axis/props.js","webpack://muze/./packages/muze-axis/src/size-axis/size-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/defaults.js","webpack://muze/./packages/muze-axis/src/shape-axis/props.js","webpack://muze/./packages/muze-axis/src/shape-axis/shape-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/helper.js","webpack://muze/./packages/muze-axis/src/data-type-scale-map.js","webpack://muze/./packages/transform/src/group-transform/index.js","webpack://muze/./packages/transform/src/identity-transform/index.js","webpack://muze/./packages/transform/src/transform-factory/index.js","webpack://muze/./packages/transform/src/enums/transform-type.js","webpack://muze/./packages/transform/src/stack-transform/index.js","webpack://muze/./packages/visual-layer/src/helpers/index.js","webpack://muze/./packages/visual-layer/src/base-layer/listener-map.js","webpack://muze/./packages/visual-layer/src/enums/props.js","webpack://muze/./packages/visual-layer/src/base-layer/default-options.js","webpack://muze/./packages/visual-layer/src/base-layer/base-layer.js","webpack://muze/./packages/visual-layer/src/layers/line/renderer.js","webpack://muze/./packages/visual-layer/src/layers/line/default-config.js","webpack://muze/./packages/visual-layer/src/layers/line/line.js","webpack://muze/./packages/visual-layer/src/layers/area/renderer.js","webpack://muze/./packages/visual-layer/src/layers/area/area.js","webpack://muze/./packages/visual-layer/src/layers/arc/default-config.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-helper.js","webpack://muze/./packages/visual-layer/src/layers/text/renderer.js","webpack://muze/./packages/visual-layer/src/layers/text/default-config.js","webpack://muze/./packages/visual-layer/src/layers/text/text.js","webpack://muze/./packages/visual-layer/src/layers/point/renderer.js","webpack://muze/./packages/visual-layer/src/layers/point/default-config.js","webpack://muze/./packages/visual-layer/src/layers/point/point.js","webpack://muze/./packages/visual-layer/src/layers/bar/renderer.js","webpack://muze/./packages/visual-layer/src/layers/bar/default-config.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-helper.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar.js","webpack://muze/./packages/visual-layer/src/layers/tick/default-config.js","webpack://muze/./packages/visual-layer/src/layers/tick/renderer.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick.js","webpack://muze/./packages/visual-layer/src/layer-factory/layer-factory.js","webpack://muze/./packages/visual-layer/src/layer-factory/index.js","webpack://muze/./packages/visual-layer/src/defaults.js","webpack://muze/./packages/visual-group/src/enums/constants.js","webpack://muze/./packages/visual-group/src/visual-group/local-options.js","webpack://muze/./packages/visual-group/src/simple-group/simple-group.js","webpack://muze/./packages/visual-group/src/variable/variable.js","webpack://muze/./packages/visual-group/src/variable/composed-vars.js","webpack://muze/./packages/visual-group/src/variable/simple-var.js","webpack://muze/./packages/visual-group/src/encoder/field-sanitizer.js","webpack://muze/./packages/visual-group/src/encoder/visual-encoder.js","webpack://muze/./packages/visual-group/src/enums/scale-maps.js","webpack://muze/./packages/visual-group/src/data-type-scale-map.js","webpack://muze/./packages/visual-group/src/encoder/encoder-helper.js","webpack://muze/./packages/visual-group/src/encoder/cartesian-encoder.js","webpack://muze/./packages/visual-group/src/encoder/polar-encoder.js","webpack://muze/./packages/visual-group/src/encoder/retinal-encoder.js","webpack://muze/./packages/visual-group/src/group-helper/group-utils.js","webpack://muze/./packages/muze-utils/src/DataSystem/dataSelect.js","webpack://muze/./packages/visual-unit/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/visual-unit/src/helper/index.js","webpack://muze/./packages/visual-unit/src/helper/grid-lines.js","webpack://muze/./packages/visual-unit/src/default-config.js","webpack://muze/./packages/visual-unit/src/enums/constants.js","webpack://muze/./packages/visual-unit/src/local-options.js","webpack://muze/./packages/visual-unit/src/enums/reactive-props.js","webpack://muze/./packages/visual-unit/src/listener-map.js","webpack://muze/./packages/visual-unit/src/props.js","webpack://muze/./packages/visual-unit/src/firebolt/helper.js","webpack://muze/./packages/visual-unit/src/firebolt/payload-generator.js","webpack://muze/./packages/visual-unit/src/firebolt/data-propagator.js","webpack://muze/./packages/visual-unit/src/firebolt/index.js","webpack://muze/./packages/visual-unit/src/visual-unit.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-model.js","webpack://muze/./packages/visual-group/src/group-helper/cell-creator.js","webpack://muze/./packages/visual-group/src/group-helper/resolver-props.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-resolver.js","webpack://muze/./packages/visual-group/src/visual-group/value-matrix.js","webpack://muze/./packages/visual-group/src/visual-group/helper.js","webpack://muze/./packages/visual-group/src/visual-group/change-listener.js","webpack://muze/./packages/visual-group/src/visual-group/props.js","webpack://muze/./packages/visual-group/src/visual-group/visual-group.js","webpack://muze/./packages/muze-legend/src/firebolt/behavioural/select.js","webpack://muze/./packages/muze-legend/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/muze-legend/src/firebolt/behaviour-effect-map.js","webpack://muze/./packages/muze-legend/src/enums/behaviours.js","webpack://muze/./packages/muze-legend/src/enums/side-effects.js","webpack://muze/./packages/muze-legend/src/enums/constants.js","webpack://muze/./packages/muze-legend/src/firebolt/helper.js","webpack://muze/./packages/muze-legend/src/firebolt/legend-firebolt.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/drag.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/hover.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/click.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/index.js","webpack://muze/./packages/muze-legend/src/enums/actions.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/selection-box-drag.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/selection-box/index.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/strategies.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/index.js","webpack://muze/./packages/muze-legend/src/legend/props.js","webpack://muze/./packages/muze-legend/src/legend/defaults.js","webpack://muze/./packages/muze-legend/src/legend/legend-helper.js","webpack://muze/./packages/muze-legend/src/legend/simple-legend.js","webpack://muze/./packages/muze-legend/src/legend/position-config.js","webpack://muze/./packages/muze-legend/src/legend/renderer.js","webpack://muze/./packages/muze-legend/src/legend/discrete-legend.js","webpack://muze/./packages/muze-legend/src/legend/gradient-helper.js","webpack://muze/./packages/muze-legend/src/legend/gradient-legend.js","webpack://muze/./packages/muze-legend/src/legend/step-legend.js","webpack://muze/./packages/muze/src/constants.js","webpack://muze/./packages/muze/src/operators.js","webpack://muze/./packages/muze/src/action-model.js","webpack://muze/./packages/muze/src/defaults.js","webpack://muze/./packages/muze/src/options.js","webpack://muze/./packages/layout/src/enums/constants.js","webpack://muze/./packages/layout/src/generic-layout/index.js","webpack://muze/./packages/layout/src/grid-layout/defaults.js","webpack://muze/./packages/layout/src/grid-layout/span-maker.js","webpack://muze/./packages/layout/src/grid-layout/renderer.js","webpack://muze/./packages/layout/src/utils/index.js","webpack://muze/./packages/layout/src/visual-matrix/props.js","webpack://muze/./packages/layout/src/visual-matrix/default-config.js","webpack://muze/./packages/layout/src/visual-matrix/visual-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/row-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/column-matrix.js","webpack://muze/./packages/layout/src/grid-layout/computations.js","webpack://muze/./packages/layout/src/grid-layout/layout.js","webpack://muze/./packages/layout/src/grid-layout/layout-helper.js","webpack://muze/./packages/muze/src/transaction-support.js","webpack://muze/./packages/muze/src/canvas/component-resolver.js","webpack://muze/./packages/visual-cell/src/enums/constants.js","webpack://muze/./packages/visual-cell/src/enums/cell-type.js","webpack://muze/./packages/visual-cell/src/simple-cell.js","webpack://muze/./packages/visual-cell/src/enums/defaults.js","webpack://muze/./packages/visual-cell/src/props.js","webpack://muze/./packages/visual-cell/src/axis-cell.js","webpack://muze/./packages/visual-cell/src/blank-cell.js","webpack://muze/./packages/visual-cell/src/text-cell.js","webpack://muze/./packages/visual-cell/src/geom-cell.js","webpack://muze/./packages/visual-cell/src/defaults.js","webpack://muze/./packages/visual-cell/src/constants.js","webpack://muze/./packages/visual-cell/src/cell-registry.js","webpack://muze/./packages/muze/src/canvas/title-maker.js","webpack://muze/./packages/muze/src/canvas/legend-maker.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/layoutComponent.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/dummy-component.js","webpack://muze/./packages/layout/src/tree-layout/constants/defaults.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/definitionModel.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/helper/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/tree/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/layout-model/index.js","webpack://muze/./packages/layout/src/tree-layout/utils/index.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-point.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-parser.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/helper.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/html-data.js","webpack://muze/./packages/layout/src/tree-layout/renderers/renderer.js","webpack://muze/./packages/layout/src/tree-layout/renderers/html-renderer.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/layout-def.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/index.js","webpack://muze/./packages/muze/src/canvas/components/muze-chart-component.js","webpack://muze/./packages/muze/src/canvas/components/headerComponent.js","webpack://muze/./packages/muze/src/canvas/components/legendComponent.js","webpack://muze/./packages/muze/src/canvas/components/matrix-component.js","webpack://muze/./packages/muze/src/canvas/components/grid-component.js","webpack://muze/./packages/muze/src/canvas/defaults.js","webpack://muze/./packages/muze/src/canvas/layout-maker.js","webpack://muze/./packages/muze/src/canvas/local-options.js","webpack://muze/./packages/muze/src/canvas/helper.js","webpack://muze/./packages/muze/src/canvas/firebolt/group-firebolt.js","webpack://muze/./packages/muze/src/canvas/firebolt/index.js","webpack://muze/./packages/muze/src/canvas/app-state.js","webpack://muze/./packages/muze/src/canvas/canvas.js","webpack://muze/./packages/muze/src/default-registry.js","webpack://muze/./packages/visual-layer/src/layer-registry.js","webpack://muze/./packages/muze/src/muze.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","e","_typeof","a","default","description","homepage","version","license","main","author","keywords","repository","type","url","contributors","email","dependencies","d3-dsv","devDependencies","babel-cli","babel-core","babel-eslint","babel-loader","babel-plugin-transform-runtime","babel-preset-env","babel-preset-es2015","babel-preset-flow","chai","cross-env","eslint","eslint-config-airbnb","eslint-plugin-import","eslint-plugin-jsx-a11y","eslint-plugin-react","istanbul-instrumenter-loader","jsdoc","json2yaml","karma","karma-chai","karma-chrome-launcher","karma-coverage-istanbul-reporter","karma-mocha","karma-spec-reporter","karma-webpack","marked","mocha","mocha-webpack","transform-runtime","webpack","webpack-cli","webpack-dev-server","scripts","test","ut","utd","build","start","lint","lint-errors","docs","DataModel","require","DataFormat","FLAT_JSON","DSV_STR","DSV_ARR","AUTO","DimensionSubtype","CATEGORICAL","TEMPORAL","GEO","BINNED","MeasureSubtype","CONTINUOUS","FieldType","MEASURE","DIMENSION","FilteringMode","NORMAL","INVERSE","ALL","convertToNativeDate","date","Date","pad","DateTimeFormatter","format","this","dtParams","nativeDate","RegExp","escape","text","replace","TOKEN_PREFIX","DATETIME_PARAM_SEQUENCE","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","defaultNumberParser","defVal","val","parsedVal","isFinite","parseInt","defaultRangeParser","range","nVal","toLowerCase","length","getTokenDefinitions","daysDef","short","long","monthsDef","H","index","extract","parser","formatter","getHours","toString","hours","P","M","getMinutes","S","getSeconds","K","getMilliseconds","join","day","getDay","A","getDate","b","month","getMonth","B","y","substring","year","getFullYear","Y","getTokenFormalNames","definitions","HOUR_12","AMPM_UPPERCASE","AMPM_LOWERCASE","SHORT_DAY","LONG_DAY","DAY_OF_MONTH","DAY_OF_MONTH_CONSTANT_WIDTH","SHORT_MONTH","LONG_MONTH","MONTH_OF_YEAR","SHORT_YEAR","LONG_YEAR","tokenResolver","defaultResolver","arg","targetParam","arguments","hourFormat24","hourFormat12","ampmLower","ampmUpper","amOrpm","isPM","findTokens","tokenPrefix","tokenLiterals","keys","occurrence","forwardChar","indexOf","push","token","formatAs","nDate","formattedStr","String","formattedVal","parse","dateTimeStamp","options","extractTokenValue","dtParamSeq","noBreak","dtParamArr","args","resolverKey","resolverParams","resolverFn","param","resolvedVal","splice","apply","tokenObj","lastOccurrenceIndex","occObj","occIndex","targetText","regexFormat","tokenArr","map","obj","occurrenceLength","extractValues","match","shift","getNativeDate","unshift","Function","h","store","fields","Array","forEach","fieldIndex","from","OBJECTSTRING","objectToStrFn","objectToStr","arrayToStr","checkCyclicRef","parentArr","bIndex","extend2","obj1","obj2","skipUndef","v","merge","tgtArr","srcArr","item","srcVal","tgtVal","str","cRef","isArray","getUniqueId","getTime","Math","round","random","isArrEqual","arr1","arr2","formatNumber","detectDataFormat","data","fieldStore","createNamespace","fieldArr","dataId","fieldsObj","_cachedFieldsObj","field","getMeasure","measureFields","_cachedMeasure","schema","getDimension","dimensionFields","_cachedDimension","Value","_classCallCheck","configurable","writable","_value","rowDiffsetIterator","rowDiffset","callback","split","diffStr","diffStsArr","end","getCommonSchema","fs1","fs2","retArr","fs1Arr","DM_DERIVATIVES","JOINS","CROSS","LEFTOUTER","RIGHTOUTER","NATURAL","FULLOUTER","defaultFilterFn","crossProduct","dm1","dm2","filterFn","replaceCommonSchema","jointype","applicableFilterFn","dm1FieldStore","getFieldspace","dm2FieldStore","dm1FieldStoreName","dm2FieldStoreName","commonSchemaList","Error","tmpSchema","_rowDiffset","rowAdded","rowPosition","ii","tuple","userArg","partialField","dm1Fields","prepareJoinData","dm2Fields","detachedRoot","tupleObj","cellVal","iii","len","defSortFn","a1","b1","mergeSort","arr","sortFn","sort","lo","hi","mid","floor","mainArr","auxArr","getSortFn","dataType","sortType","retFunc","groupData","hashMap","Map","groupedData","datum","fieldVal","has","set","createSortingFnArg","groupedDatum","targetFields","targetFieldDetails","label","reduce","acc","next","idx","difference","hashTable","schemaNameArr","dm1FieldStoreFieldObj","dm2FieldStoreFieldObj","_colIdentifier","prepareDataHelper","dm","addData","hashData","schemaName","fieldName","sum","totalSum","curr","Number","isNaN","avg","fnList","min","filteredValues","filter","num","max","first","last","count","std","sqrt","mean","pow","defaultReducerName","ae","ReducerStore","TypeError","defReducer","entries","_this","reducer","_this2","__unregister","delete","reducerStore","ue","iterator","u","done","return","naturalJoinFilter","commonSchemaArr","retainTuple","union","leftOuterJoin","dataModel1","dataModel2","rightOuterJoin","Field","field_classCallCheck","subtype","displayName","ve","Dimension","_cachedDomain","calculateDataDomain","Categorical","hash","Set","domain","add","Temporal","temporal_classCallCheck","_cachedMinDiff","sortedData","arrLn","minDiff","POSITIVE_INFINITY","prevDatum","nextDatum","processedCount","_this3","Binned","binsArr","bins","Measure","unit","defAggFn","numberFormat","Continuous","NEGATIVE_INFINITY","FieldParser","Ne","CategoricalParser","trim","TemporalParser","temporal_parser_classCallCheck","_dtf","BinnedParser","matched","parseFloat","xe","ContinuousParser","PartialField","partial_field_classCallCheck","_sanitize","createFields","dataColumn","headers","headersObj","header","He","dataFormat","DSVArr","assign","firstRowHeader","columns","columnMajor","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","JSON","stringify","ze","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","f","rows","N","I","eof","eol","j","slice","row","formatRow","formatValue","convert","columnSet","column","concat","formatRows","csv","dsv","tsv","DSVStr","fieldSeparator","d3Dsv","FlatJSON","insertionIndex","Auto","converters","resp","persistDerivation","model","operation","_model$_derivation","config","criteriaFn","derivative","op","meta","criteria","_derivation","filterPropagationModel","propModels","filterByMeasure","fns","dataObj","dataModel","propModel","getData","fieldsConfig","getFieldsConfig","fieldsSpace","values","def","some","every","propField","valueOf","clone","select","fn","saveChild","cloneWithSelect","sourceDm","selectFn","selectConfig","cloneConfig","cloned","selectHelper","newRowDiffSet","lastInsertedValue","li","cachedStore","cloneProvider","selectorHelperFn","_iteratorNormalCompletion","checker","getPartialFieldspace","__calculateFieldspace","calculateFieldsConfig","cloneWithProject","projField","allFields","projectionSet","actualProjField","sanitizeUnitSchema","unitSchema","updateData","relation","defaultConfig","converterFn","converter","et","formattedData","nameSpace","_partialFieldspace","_","_dataFormat","fieldInSchema","applyExistingOperationOnModel","_propModel$","child","derivation","params","groupByString","selectionModel","rejectionModel","_propModel$2","propagateIdentifiers","propModelInf","nonTraversingModel","excludeModels","handlePropagation","_children","propagateToAllDataModels","identifiers","rootModels","propagationInf","propagationNameSpace","propagateToSource","propagationSourceId","sourceId","propagateInterpolatedValues","criterias","persistent","actionCriterias","mutableActions","filteredCriteria","entry","action","sourceActionCriterias","actionInf","actionConf","applyOnSource","models","path","getPathToRootModel","_parent","_ref3","rootModel","propConfig","sourceIdentifiers","rootGroupByModel","groupByModel","inf","propagationModel","filteredModel","reverse","Relation","relation_classCallCheck","source","_fieldStoreName","_propagationNameSpace","immutableActions","mt","_fieldspace","updateFields","partialFieldspace","fieldStoreName","colIdentifier","collID","partialFieldMap","newFields","coll","joinWith","unionWith","differenceWith","defConfig","oDm","retDataModel","getAllFields","jsonData","rowObj","constructor","fieldConfig","normalizedProjField","search","_fieldConfig","fieldDef","removeChild","findIndex","sibling","parent","criteriaQueue","ReferenceError","__proto__","getPrototypeOf","_onPropagation","_sortingDetails","setPrototypeOf","order","withUid","dataGenerated","dataBuilder","sortingDetails","retObj","uids","addUid","columnWise","reqSorting","tmpDataArr","colName","insertInd","sortMeta","fDetails","sortingFn","pop","tmpData","fieldNames","fmtFieldIdx","elem","fIdx","fmtFn","datumIdx","fieldsArr","reducers","newDataModel","groupBy","existingDataModel","sFieldArr","dimensions","reducerObj","measures","defaultReducer","measureName","reducerFn","resolve","fieldStoreObj","dbName","dimensionArr","measureArr","rowCount","rawData","dataInCSVArr","sortedDm","colData","rowsCount","serializedData","rowIdx","colIdx","fieldinst","dependency","replaceVar","depVars","retrieveFn","depFieldIndices","fieldSpec","fs","suppliedFields","computedValues","fieldsData","bt","addField","addToNameSpace","isMutableAction","payload","getRootDataModel","getRootGroupByModel","find","sourceNamespace","filterImmutableAction","criteriaModel","eventName","measureFieldName","binFieldName","_createBinnedFieldDat","measureField","buckets","binsCount","binSize","T","dMin","dMax","ceil","abs","generateBuckets","bucketRanges","binnedData","findBucketRange","leftIdx","rightIdx","midIdx","binField","serialize","getSchema","sd","Operators","compose","operations","currentDM","frstChild","derivations","addParent","dispose","bin","project","calculateVariable","naturalJoin","fullOuterJoin","Stats","enums","pkg","makeEntry","sCon","_set","set1","set2","filteredKeys","s1","s2","ForeignSet","isSimpleObject","win","reqAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","getTimeBasedId","__lastTime","__id","flat","res","scheduler","onFinishCallback","queue","animationFrame","listeners","tempQ","unique","fetch","node","namedNode","qualifiedName","seed","fetchAggregator","getUpstreamNodes","list","rec","qname","placedIndex","preArr","postArr","outgoingEdges","resolver","accumulate","nodeDetails","identity","CustomResolver","utils_classCallCheck","dep","_dep","graph_node_classCallCheck","edges","_seed","requireResolve","retriever","history","electricEdges","_edges","retrieveDetails","edge","head","hist","electric_node_classCallCheck","nextFrame","currentFrame","lstnrs","nodes","nFn","qualifiedNodeMap","graph_node","_wholeSet","_propagate","propagationOverride","currentFrameListeners","nextFrameListeners","_schedule","flushTarget","flush","mount","resolveReqList","objn","perv","addDependencies","_node","getDependencies","getResolvedList","prop","props","fnSpec","eNode","_ref","electric_node","addEdges","addElectricNode","changedSet","upstreamNodes","upstreamNode","append","__execUniqueElectricEdges","cfLstnrs","nfLstnrs","toArray","repeatHead","resetPropagationOverride","qnames","_this4","update","resolved","resolveDependencyOrder","resolveMap","neighbour","isRoot","model_classCallCheck","_graph","graph","_lockFlag","_reqQ","mountPoint","_addPropInModel","calculationConfig","customResolver","varName","fetchFn","_customResolver","createNodesFrom","instantCall","_graph$stopPropagatio","propsArr","unsub","createElectricNodeOf","stopPropagation","setPropagationOverride","resetNodeValue","_graph$stopPropagatio2","setProp","getNodeValue","getNodeFromQualifiedName","Model","__webpack_exports__","webpackPolyfill","deprecate","paths","children","_interopRequireDefault","_lib2","_containerManager2","slLib","init","undefined","doc","document","htmlSplCharSpace"," ","documentSupport","getDocumentSupport","SVG_BBOX_CORRECTION","isWebKit","SmartLabelManager","id","container","useEllipses","wrapper","prevInstance","isBrowserLess","maxCacheLimit","maxDefaultCacheLimit","getElementById","createContainer","innerHTML","testStrAvg","isHeadLess","isIE","offsetHeight","offsetWidth","parentContainerStyle","style","parentContainer","_containerManager","_showNoEllipses","_init","setStyle","textToLines","smartlabel","lines","_calCharDimWithCache","calculateDifference","size","csArr","tw","twi","cachedStyle","asymmetricDifference","maxAdvancedCacheLimit","_container","cache","_advancedCache","advancedCacheKey","_advancedCacheKey","cacheName","fontSize","fontFamily","fontWeight","fontStyle","cacheInitName","repeat","width","height","_getWidthFn","contObj","_containerObj","svgText","bbox","textContent","getBBox","_styleNotSet","setLineHeight","sCont","_context","context","_cache","charCache","_lineHeight","lineHeight","useEllipsesOnOverflow","getSmartText","maxWidth","maxHeight","noWrap","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriWidth","oriHeight","newCharIndex","nearestChar","tempChar","getWidth","initialLeft","initialTop","getOriSizeImproveObj","spanArr","x","minWidth","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","ellipsesWidth","dotWidth","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","charAt","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","xmlTagRegEx","ltgtRegex","getOriSize","substr","getNearestBreakIndex","detailObj","tooltext","lastIndexOf","spanAdditionRegx","spanAdditionReplacer","classNameWithTag","classNameWithTagBR","childRetriverFn","childRetriverString","noClassTesting","classNameReg","className","spaceIdx","dashIdx","offsetLeft","offsetTop","parentNode","insertBefore","createElement","classNameBrReg","spanRemovalRegx","error","detailedCalculationFlag","textArr","letter","lSize","cumulativeSize","indiSizeStore","lib","userAgent","navigator","clsNameSpace","containerClass","brReplaceRegex","position","top","whiteSpace","padding","overflow","supportedStyle","font","font-family","font-weight","font-size","line-height","font-style","getElementsByClassName","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","containerParent","body","appendChild","setAttribute","getElementsByTagName","sl","charLen","increment","avgWidth","styleObj","fSize","Muze","ContainerManager","maxContainers","svg","containers","rootNode","createElementNS","setAttributeNS","svgRoot","diff","containerObj","keyStr","prev","removeContainer","addContainer","avgCharWidth","display","cObj","ascending","NaN","bisector","compare","ascendingComparator","left","right","ascendingBisect","bisectRight","number","array","src_range","stop","step","e10","e5","e2","src_ticks","ticks","tickIncrement","power","log","LN10","tickStep","step0","step1","quantile","valueof","i0","value0","each","remove","clear","empty","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","result","createObject","setObject","createMap","setMap","sortKey","k","proto","implicit","ordinal","unknown","scale","copy","band","bandwidth","ordinalRange","paddingInner","paddingOuter","align","rescale","sequence","rangeRound","invertExtent","r0","r1","hiIndex","getClosestIndexOf","invert","side","highVal","d1","low","high","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","exec","Rgb","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","hex","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","C","D","E","ED","EB","BC_DA","cubehelix","cubehelixConvert","Cubehelix","bl","basis","v0","v1","v2","v3","cosh","sinh","src_constant","linear","hue","constant","gamma","nogamma","exponential","src_rgb","rgbGamma","colorRgb","rgbSpline","spline","colors","rgbBasis","src_number","reA","reB","src_string","am","bm","bs","bi","lastIndex","q","one","zero","cssNode","cssRoot","cssView","svgNode","src_value","value_typeof","string","setTime","nb","na","src_round","degrees","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","interpolateTransformCss","parseCss","documentElement","defaultView","transform","getComputedStyle","getPropertyValue","interpolateTransformSvg","parseSvg","baseVal","consolidate","matrix","SQRT2","colorHsl","hslLong","colorHcl","cubehelixGamma","colorCubehelix","cubehelixLong","piecewise","interpolate","d3_scale_src_constant","d3_scale_src_number","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","bisect","target","clamp","continuous","output","input","interpolateValue","deinterpolateClamp","reinterpolateClamp","interpolateRound","formatDecimal","toExponential","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","fill","sign","symbol","comma","precision","prefixExponent","locale","formatPrefix","formatTrim","out","i1","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","src_identity","prefixes","src_locale","group","grouping","thousands","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","Infinity","defaultLocale","formatLocale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","interval","x0","x1","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","raise","thresholds","threshold","quantiles","quantize","newInterval","floori","offseti","offset","previous","millisecond","durationMinute","durationWeek","second","getUTCSeconds","minute","hour","getTimezoneOffset","setHours","setDate","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","setMonth","setFullYear","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","localDate","L","utcDate","UTC","newYear","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","timeDay","timeYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","timeSunday","formatWeekNumberISO","timeThursday","formatWeekdayNumberSunday","formatWeekNumberMonday","timeMonday","formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatPeriod","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parsePeriod","parseLocaleDate","parseLocaleTime","newParse","newDate","week","toISOString","durationSecond","durationHour","durationDay","durationMonth","durationYear","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickIntervals","tickInterval","src_time","timeMonth","timeWeek","timeHour","timeMinute","timeSecond","timeMillisecond","src_colors","interpolateCubehelixLong","ramp","sequential","interpolator","d3_scale_chromatic_src_colors","src_ramp","scheme","interpolateRgbBasis","warm","cool","sequential_multi_rainbow","ts","magma","inferno","plasma","UNIT_GLOBAL_NAMESPACE","UNIT_LOCAL_NAMESPACE","LAYER_LOCAL_NAMESPACE","LAYER_GLOBAL_NAMESPACE","GROUP_GLOBAL_NAMESPACE","GROUP_LOCAL_NAMESPACE","CANVAS_LOCAL_NAMESPACE","CANVAS_GLOBAL_NAMESPACE","ReservedFields","ROW_ID","CommonProps","ACTION_INF","ON_LAYER_DRAW","MATRIX_CREATED","d3_axis_src_identity","bottom","epsilon","entering","__axis","axis","orient","tickArguments","tickValues","tickTransform","tickSizeInner","tickSizeOuter","tickPadding","spacing","range0","range1","center","selection","selectAll","tick","tickExit","exit","tickEnter","enter","attr","line","insert","transition","getAttribute","tickSize","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","ccw","dx","dy","cw","da","rect","d3_shape_src_constant","halfPi","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","d2","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","point","curve_linear","src_line","pointX","pointY","defined","curve","curveLinear","buffer","defined0","src_area","area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","curveRadial","Radial","_curve","radial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye","noop","that","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","beta","_basis","_beta","_x","_y","custom","bundle","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","s0","slope2","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","_t","curve_step","stepBefore","stepAfter","none","series","order_none","stackValue","order_ascending","sums","cubicInOut","polyIn","polyOut","polyInOut","b2","b3","b4","b5","b6","b7","b8","b9","b0","bounceOut","backIn","overshoot","backOut","backInOut","elasticOut","elasticIn","amplitude","period","d3_voronoi_src_constant","elasticInOut","RedBlackTree","RedBlackNode","R","RedBlackRotateLeft","tree","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","createEdge","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","epsilon2","ha","hc","circle","Circle","before","circles","detachCircle","beachPool","createBeach","beach","Beach","detachBeach","beaches","removeBeach","disappearing","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","sortCellHalfedges","clipEdges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","cover","dc","v00","v01","v11","v10","polygons","polygon","triangles","e1","links","radius","_found","vx","vy","src_voronoi","voronoi","HTMLElement","common_utils_typeof","sanitizeIP","typeObj","nonExistentKeys","checkExistence","getMax","_toConsumableArray","getMin","getDomainFromData","fieldType","domArr","firstMin","secondMin","firstMax","secondMax","unionDomain","domains","_ref2","dom","symbolFns","symbolCircle","cross","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolWye","symbolTriangle","easeFns","cubic","easeCubic","bounce","easeBounce","elastic","easeElastic","back","easeBack","poly","easePoly","circleInOut","getQualifiedClassName","cancelAnimationFrame","cls","defaultValue","getDependencyOrder","dependencyOrder","visited","visit","objectIterator","Voronoi","_voronoi","_voronoiFn","addListenerToNamespace","namespaceInf","namespace","_listeners","getObjProp","_len","_key","Store","propName","propNames","callBack","on","calculatedProp","intSanitizer","transactor","holder","conf","stateProps","addAsMethod","nameSpaceProp","nsProp","compareTo","_len2","_key2","paramsLen","prevVal","spreadParams","sanitization","typeCheck","typeExpected","preset","oldValues","generateGetterSetters","propInfo","typeChecker","isEqual","oldVal","newVal","arraysEqual","is","ERROR_MSG","INTERFACE_IMPL","mergeRecursive","sink","numberInterpolator","interpolateNumber","piecewiseInterpolator","rgbToHsv","detectColor","col","getDataModelFromRange","selFields","selFn","getDataModelFromIdentifiers","filteredDataModel","dataArr","filteredSchema","include","registerListeners","listenerMap","_len3","_key3","propListenerMap","local","mapObj","propType","listenerFn","listener","isValidValue","getSymbol","stackOrders","_defineProperty","_stackOrders","stackOrderNone","stackOrderAscending","stackOffsets","_stackOffsets","yp","yn","stackOffsetNone","si","sij0","s3","sk","stack","orderNone","offsetNone","oz","kz","sz","sij","ki","d3Stack","pathInterpolators","curveStepAfter","curveStepBefore","curveStep","curveCatmullRom","Symbols","axisLeft","axisRight","axisTop","axisBottom","pie","descending","arcs","pa","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","intersect","x3","y3","x32","y32","kc","lc","centroid","Scales","scaleBand","getSmallestDiff","points","xhtml","src_namespaces","xlink","xml","xmlns","src_namespace","namespaces","space","creator","fullname","creatorFixed","ownerDocument","creatorInherit","uri","namespaceURI","src_selector","selector","querySelector","selectorAll","querySelectorAll","matcher","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","sparse","EnterNode","_next","__data__","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","src_window","styleValue","classArray","classList","ClassList","_names","classedAdd","classedRemove","contains","textRemove","htmlRemove","nextSibling","lower","previousSibling","firstChild","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","event","mouseenter","mouseleave","filterContextListener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","Selection","groups","parents","_groups","_parents","subgroups","subnode","subgroup","enterGroup","updateGroup","_enter","_exit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","attrRemoveNS","removeAttributeNS","attrRemove","removeAttribute","attrFunctionNS","attrFunction","attrConstantNS","attrConstant","priority","styleRemove","removeProperty","styleFunction","setProperty","styleConstant","propertyRemove","propertyFunction","propertyConstant","classed","classedFunction","classedTrue","classedFalse","textFunction","textConstant","html","htmlFunction","htmlConstant","deep","typenames","parseTypenames","dispatch","dispatchFunction","dispatchConstant","src_select","nextId","Local","current","src_point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","Dispatch","types","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","d3_drag_src_constant","DragEvent","subject","active","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","touchable","gestures","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","yesdrag","noclick","clearTimeout","sublisteners","clickDistance","taskHead","taskTail","frame","timeout","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","timer_typeof","now","setFrame","clearNow","Timer","_call","_time","timer","delay","restart","wake","timerFlush","nap","sleep","poke","clearInterval","setInterval","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","duration","ease","schedule","tweenValue","_id","transition_interpolate","interpolateRgb","interpolateString","Transition","_name","newId","selection_prototype","inherit","id0","id1","onFunction","on0","on1","sit","attrTween","value00","value10","interpolate0","value1","attrTweenNS","styleTween","styleRemoveEnd","removeFunction","tweenRemove","tween0","tween1","tweenFunction","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","defaultTiming","easeCubicInOut","interrupt","selectElement","makeElement","elemType","callbacks","keyFn","SVGElement","selectorVal","selectorType","actualSelector","enterSel","mergeSel","exitSel","applyStyle","setElementAttrs","attrs","setAttrs","setStyles","styles","createElements","sel","getClientPoint","pos","clientPoint","getEvent","d3event","getD3Drag","d3drag","getSmartComputedStyle","css","textEl","mandatoryStyle","fill-opacity","renderer_utils_typeof","computedStyle","styleForSmartLabel","hasTouch","selection_classCallCheck","_data","_idMap","_mode","_enterdata","_exitdata","newData","idGetter","_idGetter","tempMap","purgedIds","purged","temp","_this5","_this6","events","EVENT_LIST","composition","resolveFn","notification","hasOwn","LifeCycleManager","lifecycle_manager_classCallCheck","_eventList","_promises","_notifiers","_lifeCycles","_unreleasedLifeCycles","_boot","_preparePromises","Promise","promise","_makeNotifierPromise","createPromise","then","prm","formalName","client","_releasePromisesFromCache","_notify","stage","_resolvePromise","retrieve","_callLifeCycleCallback","_cachePromise","_resetTargetPromise","lifeCycles","DRAG","HOVER","SELECTIONDRAG","CLICK","LONGTOUCH","TOUCHDRAG","ALL_ACTIONS","SELECTION_NEW_ENTRY","SELECTION_NEW_EXIT","SELECTION_NULL","SELECTION_OLD_ENTRY","SELECTION_OLD_EXIT","SelectionSet","completeSet","_volatile","selection_set_classCallCheck","_completeSetCount","_lockedSelection","_resetted","ids","entrySet","exitSet","lockedSel","addSet","removeSet","updateSet","changeSideEffectAvailability","toEnable","sideEffects","change","enable","disable","getMergedSet","helper_toConsumableArray","conditionsMap","newEntry","SELECTION","oldEntry","mergedEnter","newExit","oldExit","mergedExit","complete","getSetInfo","selectionSet","propagationData","resetted","getModelFromSet","condition","Firebolt","actions","behaviourEffectMap","firebolt_classCallCheck","_sideEffectDefinitions","_sideEffects","_propagationInf","_actions","behavioural","physical","_selectionSet","_volatileSelectionSet","_propagationFields","_sourceSideEffects","selectionBox","_propagationBehaviourMap","_sourceBehaviours","_actionBehaviourMap","_config","_behaviourEffectMap","_entryExitSet","_actionHistory","_queuedSideEffects","mapSideEffects","registerBehaviouralActions","registerSideEffects","registerPhysicalBehaviouralMap","physicalBehaviouralMap","registerPhysicalActions","behEffectMap","preventDefaultActions","effectNames","effects","firebolt_toConsumableArray","behaviours","initializeBehaviouralActions","dispatchableBehaviours","Action","prepareSelectionSets","initializeSideEffects","sideEffectStore","actionHistory","queuedSideEffects","sideEffect","combinedSet","unionSets","behaviour","entryExitSet","existingModel","effect","firebolt_typeof","sideEffectInstance","isEnabled","mutates","dispatchSideEffect","propagationInfo","propagate","getSideEffects","propagationSelectionSet","getPropagationSelectionSet","shouldApplySideEffects","sourceSelectionSet","applicableSideEffects","getApplicableSideEffects","applySideEffects","physicalAction","actionBehaviourMap","behaviourMap","mapActionsAndBehaviour","unsubscribe","onDataModelPropagation","propValue","dispatchBehaviour","uniqueIds","behaviouralActions","volatileSelectionSet","sideEffectDefinitions","sideEffectsMap","SideEffect","sideEffectConf","initedActions","initializePhysicalActions","physicalActions","phyAction","initedPhysicalActions","getDefaultTargetContainer","bindActionWithBehaviour","targets","behaviourList","xFields","yFields","xMeasures","yMeasures","_propModel$getData","fieldMap","getFullData","propagationSource","applicableSelectionSets","GenericBehaviour","firebolt","generic_classCallCheck","_enabled","selectionSets","getSelectionSets","_this$firebolt$getAdd","getAddSetFromCriteria","getPropagationInf","setSelectionSet","getEntryExitSet","_selectionSet$getSets","getSets","setConfig","isSourceFieldPresent","getSourceFields","VolatileBehaviour","reset","existingAddSet","updateExit","getCompleteSet","BRUSH","HIGHLIGHT","TOOLTIP","FILTER","SELECT","HighlightBehaviour","BrushBehaviour","BEHAVIOURNAMES","FilterBehaviour","PersistentBehaviour","updateEntry","mergedExitSet","completeSetCount","SelectBehaviour","getDragActionConfig","sourceInfo","axes","xAxis","yAxis","axisFields","xField","getMembers","yField","xFieldType","yFieldType","stPos","startPos","endPos","dragDim","isXDimension","isYDimension","xRange","yRange","selectedDomains","rangeObj","xdom","ydom","snap","getNearestRange","attachDragEvent","targetEl","drawingInf","touchStart","d3Drag","getDrawingContext","getSourceInfo","beh","dragEnd","hover","interaction","tooltip","svgContainer","nearestPoint","getNearestPoint","getAllPoints","showInPosition","generatePayloadFromEvent","click","physical_defineProperty","_physicalActions","ACTIONNAMES","longtouch","touchEnd","touchdrag","GenericSideEffect","generic_sideeffect_classCallCheck","_strategy","_strategies","SurrogateSideEffect","interactionType","layers","layer","interactive","applyInteractionStyle","SpawnableSideEffect","_drawingContext","changeVisibility","sideEffectGroup","visible","defClassName","classPrefix","SelectionBox","boxConf","box","drawingContext","unitWidth","unitHeight","selectionGroupClassName","hide","sourceInf","_getBoxDimensionsFrom","getBoxDimensionsFromPayload","direction","xDim","yDim","xLinear","yLinear","xCriteria","yCriteria","x1Val","x2Val","bandScale","x1DomainIndex","x2DomainIndex","_sort2","helper_slicedToArray","getScaleValue","getUnitWidth","y1Val","y2Val","y1DomainIndex","y2DomainIndex","_sort4","_xDim","_yDim","dimension","show","selectionBoxDrag","onDrag","boxClassName","INITIAL_STYLE","connectorClassName","margin","content","iconContainerSize","iconScale","iconShape","iconColor","rowMargin","separator","parentClassName","arrow","disabled","getArrowPos","dim","measurement","arrowPos","boxHeight","boxWidth","arrowWidth","plotBottom","boxBottom","plotRight","boxRight","placeArrow","tooltipArrow","_tooltipArrow","tooltipBackground","_tooltipBackground","arrowConf","_arrowOrientation","timeFormats","timeDurations","defaultTooltipFormatters","_formatters","strategy_defineProperty","nearestInterval","getNearestInterval","buildTooltipData","fieldValues","formatters","fieldspace","dimensionMeasureMap","detailFields","containsDetailField","timeDiffs","dataLen","getRowContent","formattedValue","measureIndex","formatterFn","uniqueVals","strategy_toConsumableArray","colorAxis","shapeAxis","shape","sizeAxis","isRetinalField","associatedMeasures","icon","getColor","getShape","getSize","measure","margin-left","displayFormat","getTabularData","fieldObj","allMeasures","_construct","strategy","DEFAULT_STRATEGY","Content","content_classCallCheck","_model","_formatter","ctx","_mount","table","tbody","margin-right","el","Tooltip","htmlContainer","tooltip_classCallCheck","connectorContainer","tooltipConf","contentClass","_tooltipContainer","_contentContainer","_contents","_tooltipConnectorContainer","qualifiedClassName","addClass","defConf","contentConfig","reorderContainers","contentConf","render","_target","repositionArrow","arrowDisabled","arrowOrient","outsidePlot","connector","_offset","orientation","_extent","arrowSize","topSpace","dimX","rightSpace","leftSpace","positionTop","positionRight","positionLeft","positionHorizontal","positionVertical","_position","_arrowPos","strategies","showSelectedItems","aggregatedModel","fieldsConf","measureNames","strategies_toConsumableArray","_getPrototypeOf2","side_effects_tooltip_classCallCheck","tooltip_possibleConstructorReturn","tooltip_getPrototypeOf","_tooltips","totalHeight","totalWidth","isEmpty","tooltips","boundBox","dataModels","fragmented","showVertically","tooltipPos","boxes","tooltip_toConsumableArray","sourceFields","indices","plotDimensions","getPlotPointsFromIdentifiers","plotDim","dt","dataTransform","layoutContainer","parentContainerDimensions","layoutBoundBox","unitBoundBox","tooltipInst","TooltipRenderer","timeDiffsByField","positionRelativeTo","tooltipBoundBox","getContents","spaceOutBoxes","spaceOutIfOverlap","firstBox","secondBox","opposite","Crossline","bandWidth","_this$config","bandClass","lineClass","elemData","axisIndex","fieldInst","xOffset","plotWidth","crossline_toConsumableArray","getPlotSpan","getPlotPadding","startPx","endPx","dataPoint","parentGroup","fade","fadeFn","focus","highlight","PlotHighlighter","plot_highlighter_classCallCheck","plot_highlighter_possibleConstructorReturn","plot_highlighter_getPrototypeOf","FilterEffect","entryModel","clearCaching","resetData","enableCaching","addLayer","layerDefs","layerRegistry","layerDef","mark","layerCls","shouldDrawAnchors","depLayerEncoding","encoding","defaultSizeValue","layerObj","instances","getTransitionConfig","calculateDomain","linkedLayer","AnchorEffect","anchors_classCallCheck","anchors_possibleConstructorReturn","anchors_getPrototypeOf","_layersMap","addAnchorLayers","metaInf","registry","layerDefsVal","registerImmediateListener","STATE_NAMESPACES","anchors_slicedToArray","_layers","elems","_linkedLayer$getTrans2","getLayerByName","getTransformedDataFromIdentifiers","transformedData","transformedDataModel","PersistentAnchors","BrushAnchors","behaviour_effect_map_defineProperty","BEHAVIOURS","STACK","ANGLE","RADIUS","SIZE","COLOR","SHAPE","ENCODING","X0","Y0","nearestPointThreshold","strokeOpacity","connectNullData","SimpleLayer","BOTTOM","TOP","LEFT","RIGHT","axisOrientationMap","axis_orientation_defineProperty","_axisOrientationMap","AxisOrientation","LINEAR","BAND","TIME","ORDINAL","QUANTIZE","QUANTILE","LOG","POW","IDENTITY","SEQUENTIAL","THRESHOLD","CONTINOUS","DISCRETE","HIDDEN","scaleLinear","scales","scaleThreshold","scaleLog","scalePow","scaleIdentity","scaleOrdinal","scaleSequential","scaleQuantize","scaleQuantile","scaleTime","scaleMap","scale_creator_defineProperty","_scaleMap","ScaleType","createScale","scaleFactory","axisName","axisNamePadding","fixedBaseline","labels","rotation","smartTicks","numberOfTicks","showAxisName","showInnerTicks","showOuterTicks","yOffset","rotateAxis","instance","tickText","labelManager","renderConfig","getTickSize","yShift","xShift","tickFormatter","tickLabelDim","quadrant","rotationNormalizer","angleToRadian","angle","changeTickOrientation","selectContainer","axisInstance","_smartTicks","isSmartTicks","registerAnimationDoneHook","setFixedBaseline","setAxisNamePos","textNode","axisNameHeight","labelOffset","availableSpace","setAxisRange","rangeBounds","space_setter_defineProperty","adjustRange","getAxisOffset","timeDiff","avWidth","bars","spaceSetter","spaceConfig","heightForTicks","_context$availableSpa","availWidth","availHeight","isOffset","_context$renderConfig","_context$config2","_context$getAxisDimen","getAxisDimensions","tickDimensions","allTickDimensions","axisNameDimensions","tickDimHeight","tickDimWidth","namePadding","labelConfig","minTickDistance","_minTickDistance","minTickSpace","_minTickSpace","_minDiff","tickShifter","getTickValues","maxTickSpaces","widthForTicks","continous","totalTickWidth","getRotatedSpaces","rotatedHeight","rotatedWidth","getAxisComponentDimensions","axisTicks","largestTick","largestTickDimensions","smartTick","_context$config","labelFunc","_tickLabelStyle","originalLabel","getFormattedText","_axisNameStyle","getHorizontalAxisSpace","axisDimensions","axisDimHeight","minTickDiff","getMinTickDifference","cartesian_axis_helper_toConsumableArray","getVerticalAxisSpace","_context$config3","calculateBandSpace","largestDimHeight","minTickWidth","_getHorizontalAxisSpa","_getVerticalAxisSpace","setContinousAxisDomain","_context$config6","userDom","_domain","PROPS","axisComponentDimensions","oldConfig","createAxis","_renderConfig","logicalSpace","SimpleAxis","simple_axis_classCallCheck","_dependencies","_range","_domainLock","_axisDimensions","defCon","simpleConfig","bodyElem","dist","_scale","_axis","_animationDonePromises","setAxisComponentDimensions","axisClass","getTickFormatter","setTickConfig","domainVal","computeAxisDimensions","_getAxisComponentDime","labelHeight","labelWidth","calculateContinousSpace","_context$renderConfig6","axisNameWidth","_getHorizontalAxisSpa2","_getVerticalAxisSpace2","renderAxis","labelProps","axisNameSpace","all","LinearInterpolator","LogInterpolator","PowInterpolator","interpolatorMap","continous_axis_defineProperty","_interpolatorMap","ContinousAxis","continous_axis_classCallCheck","continous_axis_possibleConstructorReturn","continous_axis_getPrototypeOf","InterpolatorCls","_interpolator","_this$renderConfig","_this$config3","getNumberOfTicks","labelDim","tickLength","numberOfValues","_this$axisComponentDi","BandAxis","_get","band_axis_getPrototypeOf","_this$maxTickSpaces","_getRotatedSpaces","setOffset","_this$renderConfig2","TimeAxis","time_axis_classCallCheck","time_axis_possibleConstructorReturn","time_axis_getPrototypeOf","time_axis_get","_this$config2","x11Colors","Pink","LightPink","HotPink","DeepPink","PaleVioletRed","MediumVioletRed","LightSalmon","Salmon","DarkSalmon","LightCoral","IndianRed","Crimson","FireBrick","DarkRed","Red","OrangeRed","Tomato","Coral","DarkOrange","Orange","Gold","Yellow","LightYellow","LemonChiffon","LightGoldenrodYellow","PapayaWhip","Moccasin","PeachPuff","PaleGoldenrod","Khaki","DarkKhaki","Cornsilk","BlanchedAlmond","Bisque","NavajoWhite","Wheat","BurlyWood","Tan","RosyBrown","SandyBrown","Goldenrod","DarkGoldenrod","Peru","Chocolate","SaddleBrown","Sienna","Brown","Maroon","DarkOliveGreen","Olive","OliveDrab","YellowGreen","LimeGreen","Lime","LawnGreen","Chartreuse","GreenYellow","SpringGreen","MediumSpringGreen","LightGreen","PaleGreen","DarkSeaGreen","MediumSeaGreen","SeaGreen","ForestGreen","Green","DarkGreen","MediumAquamarine","Aqua","Cyan","LightCyan","PaleTurquoise","Aquamarine","Turquoise","MediumTurquoise","DarkTurquoise","LightSeaGreen","CadetBlue","DarkCyan","Teal","LightSteelBlue","PowderBlue","LightBlue","SkyBlue","LightSkyBlue","DeepSkyBlue","DodgerBlue","CornflowerBlue","SteelBlue","RoyalBlue","Blue","MediumBlue","DarkBlue","Navy","MidnightBlue","Lavender","Thistle","Plum","Violet","Orchid","Fuchsia","Magenta","MediumOrchid","MediumPurple","BlueViolet","DarkViolet","DarkOrchid","DarkMagenta","Purple","Indigo","DarkSlateBlue","SlateBlue","MediumSlateBlue","White","Snow","Honeydew","MintCream","Azure","AliceBlue","GhostWhite","WhiteSmoke","Seashell","Beige","OldLace","FloralWhite","Ivory","AntiqueWhite","Linen","LavenderBlush","MistyRose","Gainsboro","LightGray","Silver","DarkGrey","Grey","DimGrey","LightSlateGrey","SlateGrey","DarkSlateGrey","Black","palette","DEFAULT_GRADIENT_COLOR","DEFAULT_CONFIG","stops","getHslString","hslArr","convertToXllString","baseString","getActualHslColor","paletteColor","hexToHsv","props_toConsumableArray","newConfig","uniqueValues","getStops","newStops","color_strategy_toConsumableArray","rangeStops","newStopsLength","newRange","hslInterpolator","interpolateHslLong","indexedDomain","scaleDomain","indexedDomainMeasure","normalDomain","steppedDomain","_getStops","continousSteppedDomain","_getStops2","uniqueRange","domainValue","indexedRange","normalRange","strategyGetter","domainType","rangeType","schemeType","color_strategy_defineProperty","domainRange","ColorAxis","color_axis_classCallCheck","_domainType","_rangeType","_schemeType","getSchemeType","_colorStrategy","setColorStrategy","updateDomain","colorStrategy","getScheme","colorSchemes","hslColorArray","getRawColor","color_axis_toConsumableArray","scaleInfo","domainRangeFn","transformationArr","newH","newS","newL","newA","size_strategy_defineProperty","pieceWiseRange","numVal","size_strategy_toConsumableArray","intervals","newIntervals","discreteRange","SizeAxis","size_axis_classCallCheck","_sizeStrategy","setStrategy","domainInfo","domainFn","generator","ShapeAxis","shape_axis_classCallCheck","_generatedShapes","shapeType","shapeGenerator","generatorFn","generatedShapes","DATA_TYPES","group_transform","data_type_scale_map_defineProperty","_dataTypeScaleMap","groupByIndices","nestCollection","nestFn","identityTransform","transformMap","transform_factory_defineProperty","_transformMap","uniqueField","valueField","normalizedData","normalizeData","uniqueFieldIndex","valueFieldIndex","seriesKeyIndex","seriesKeys","tuples","_tuple","seriesKey","newArr","orderBy","orderIndex","groupByIndex","localeCompare","stackData","seriesData","transformFactory","getLayerColor","colorEncoding","colorFieldIndex","rawColor","transfromColor","styleType","intensity","stateColor","originalColor","fillColorInfo","transformColor","interactionStyles","elements","getPlotElementsFromSet","_d$meta","colorTransform","_ref4","helpers_slicedToArray","getAxesScales","_map2","_map4","xScale","yScale","getIndividualClassName","individualClassName","classNameStr","attachDataToVoronoi","_ref5","helpers_toConsumableArray","updateStyle","positionPoints","positioner","encodingTransform","getPlotMeasurement","dimensionalValues","fieldInfo","encodingFieldsInf","transformType","_bandScale","span","groupSpan","offsetValues","actualGroupWidth","dataProps","innerPadding","getGroupSpan","isAxisBandScale","axisPadding","groupPadding","listener_map_slicedToArray","encodingValue","getEncodingFieldInf","_map6","x0Field","y0Field","colorField","shapeField","sizeField","_map8","_map10","xFieldSubType","yFieldSubType","_map12","xFieldIndex","yFieldIndex","x0FieldIndex","y0FieldIndex","getValidTransform","layerConfig","encodingFieldInf","groupByField","groupByFieldMeasure","retrieveGroupByAggFn","getDerivations","latestDerivation","getParent","_transformedData","getTransformedData","_normalizedData","getNormalizedData","calculateDomainFromData","_updateLock","getRenderProps","registerChangeListener","renderLayer","throwback","commit","defaultOptions","default_options_defineProperty","_defaultOptions","newConf","defaultPolicy","_cacheEnabled","_cachedData","BaseLayer","base_layer_classCallCheck","base_layer_possibleConstructorReturn","base_layer_getPrototypeOf","base_layer_assertThisInitialized","alias","_points","_measurement","_store","localNs","initializeGlobalState","globalState","getState","helpers_defineProperty","base_layer_defineProperty","global","unitRowIndex","unitColIndex","_encodingFieldsInf","_encodingTransform","_alias","transformData","yEnc","xEnc","encodingType","transformedDataArr","fieldsLen","pointObj","_transformType","pointMap","_pointMap","_dataProps","_this$encodingFieldsI","base_layer_slicedToArray","xMeasure","yMeasure","_identifiers$","_identifiers$2","xMeasureIndex","yMeasureIndex","getAllAttrs","filteredPoints","base_layer_toConsumableArray","sizeVal","enc","_identifiers$getData","identifierData","identifierSchema","_this$encodingFieldsI2","tupleArr","transformedVal","base_layer_construct","userConf","drawLine","curveInterpolatorFn","linepath","LineLayer","line_classCallCheck","line_possibleConstructorReturn","line_getPrototypeOf","isXDim","isYDim","xPx","yPx","_getLayerColor","stroke","rowId","cachePoint","seriesClassName","containerSelection","animateGroup","groupTransition","groupAnimateStyle","stroke-opacity","getPathStyle","translatePoints","colorValFn","colorVal","getDrawFn","searchRadius","_point$data$data","getIdentifiersFromData","layerId","drawArea","easeEffect","renderer_slicedToArray","enterAreaPath","updateAreaPath","selectionEnter","AreaLayer","area_get","area_getPrototypeOf","_getAxesScales","classNameFn","y0Px","minOuterRadius","stroke-width","stroke-linejoin","innerRadiusFixer","states","fadeout","selected","ArcLayer","arc_classCallCheck","arc_possibleConstructorReturn","arc_getPrototypeOf","_prevPieData","pieData","pieIndex","prevData","_getFieldIndices","getFieldIndices","arc_helper_slicedToArray","angleField","radiusField","angleIndex","sizeIndex","radiusIndex","colorIndex","dataVal","uid","outerRadiusValue","angleVal","_previousInfo","getPreviousPoint","currIndex","prevArc","nextArc","_dataPoint$datum","_this$measurement","chartHeight","chartWidth","qualClassName","getRadiusRange","defaultRadius","radiusDomain","rangeValueGetter","getRangeValue","domainMultiplier","sizeAxisDomain","sizeMultiplier","_chartWidth","_chartHeight","consecutiveExits","exitCounter","arcFn","tweenPie","individualClass","tweenExit","exitArr","oldExitCounter","tweenExitPie","consecutiveExitArr","gElem","pieSlices","pieSliceInf","tData","drawText","selectionMerge","backgroundVal","textanchor","textStyle","background","backgroundPadding","_smartLabel$getOriSiz","backgroundEl","TextLayer","textEncoding","textField","textFormatter","backgroundEncoding","backgroundValue","textFieldIndex","_loop","textValue","text_slicedToArray","text-anchor","drawSymbols","mergedGroups","symbolGroups","symbolEnter","createShape","groupElement","Element","newShape","nodeName","src","href","shapeElement","pathStr","checkPath","exitGroups","defColorStyle","fillOpacity","shapes","sizes","PointLayer","point_classCallCheck","point_possibleConstructorReturn","point_getPrototypeOf","sizeEncoding","shapeEncoding","sizeValue","shapeFieldIndex","sizeFieldIndex","_config$offset","offsetX","offsetY","point_slicedToArray","maxSize","generateDataPoints","point_toConsumableArray","drawFn","_maxSize","_getPlotMeasurement2","widthMetrics","heightMetrics","offsetXValues","offsetYValues","measurementConf","getMeasurementConfig","widthSpan","heightSpan","distanceLimit","drawRects","barEnterFn","transitionBars","selTransition","resolveDimByField","axesInfo","spaceType","sizeConfig","enterSpace","minVal","maxVal","diffPx","zeroPos","axisType","axisType0","resolveDimensions","_resolveDimByField","enterWidth","enterX","xPos","_resolveDimByField2","enterHeight","BarLayer","bar_classCallCheck","bar_possibleConstructorReturn","bar_getPrototypeOf","_plotPadding","_plotSpan","bar_get","getTranslatedPoints","_context$encodingFiel","normalizedDataArr","clipElement","clipPathElement","bar_slicedToArray","barWidthMetrics","barHeightMetrics","barWidthOffsets","barHeightOffsets","barWidth","barWidthOffset","barHeight","barHeightOffset","uniqueFieldType","filterData","pointFound","bar_toConsumableArray","p2","tick_renderer","ticksEnter","TickLayer","_config$span","xSpan","ySpan","x0Px","drawTicks","sanitizeEncoding","layerFactory","compositeLayers","factoryObj","setLayerRegistry","reg","_layerRegistry","getSerializedConf","serializedDefs","defs","unitLayerDef","sDef","parseLayerDefinition","layerType","strs","layer_factory_toConsumableArray","getLayerInstance","layerConstructor","getLayerClass","composeLayers","sanitizeLayerConfig","DEFAULT_LAYERS","defaults_defineProperty","_DEFAULT_LAYERS","ROWS","COLUMNS","COL","ROW","CELL","X_AXES","Y_AXES","ENTRY_CELLS","EXIT_CELLS","PRIMARY","SECONDARY","local_options","local_options_defineProperty","_CONFIG$ROWS$COLUMNS$","SimpleGroup","Variable","ComposedVars","composed_vars_classCallCheck","texts","composed_vars_possibleConstructorReturn","composed_vars_getPrototypeOf","vars","_vars","member","getMinDiff","SimpleVariable","simple_var_classCallCheck","simple_var_possibleConstructorReturn","simple_var_getPrototypeOf","oneVar","_oneVar","dtFormat","minimumConsecutiveDifference","varInst","convertToVar","datamodel","transformFields","field_sanitizer_slicedToArray","normalizedFields","normalizeFields","norFields","orderFields","fieldArray","temporalArr","categoricalArr","fieldList","numOfMeasures","allDimensions","field_sanitizer_toConsumableArray","temporal","categorical","rowsInfo","columnsInfo","rowDimensions","rowMeasures","rowTemporalFields","rowCategoricalFields","columnDimensions","columnMeasures","columnTemporalFields","columnCategoricalFields","VisualEncoder","_fieldInfo","_axisFrom","_headerFrom","__headerFrom","axisFrom","_getHeaderAxisFrom2","visual_encoder_slicedToArray","getHeaderAxisFrom","rowHeader","rowAxis","_getHeaderAxisFrom4","colHeader","colAxis","headerFrom","scaleMaps","dataTypeScaleMap","generateAxisFromMap","axesCreators","groupAxes","axisKey","currentAxes","cacheMaps","commonAxisKey","getAxisKey","axisConfig","getAxisConfig","axisInfo","axisOrientation","userAxisConfig","_rotationLock","resetDomain","createSimpleAxis","Cls","getIndex","arrIndex","CartesianEncoder","geomCellAxes","projections","rowFields","columnFields","rowIndex","columnIndex","xAxes","yAxes","lock","unlock","unitDomains","units","1","rIdx","unitsArr","_loop2","cIdx","len2","_resolver$axes","axesArr","adjustedDomain","alignZeroLine","getAdjustedDomain","y1ratio","y2ratio","allSameSign","facets","counter","primaryFacets","secondaryFacets","primaryFields","secondaryFields","primaryLen","secondaryLen","projArr","primaryField","secondaryField","facet","existIndex","axisFromIndex","cartesian_encoder_get","cartesian_encoder_getPrototypeOf","groupedModel","encodingObj","retriveDomainFromData","layerArray","serializedLayers","userLayerConfig","colField","colFieldName","rowField","configs","rowFieldName","rowFieldType","getDefaultMark","colFieldType","defConfigs","layerConfigs","getLayerConfFromFields","colFields","encodingArr","encoder_helper_toConsumableArray","colFieldExist","rowFieldExist","layerConf","mergedLayerConf","serializedLayerConfig","cartesian_encoder_toConsumableArray","PolarEncoder","pieAxes","domainProps","sanitizedRows","sanitizedColumns","polar_encoder_get","polar_encoder_getPrototypeOf","sanitizedFields","typeIndex","fieldSet","polar_encoder_toConsumableArray","facetFields","parentModel","layerEncoding","encType","polar_encoder_defineProperty","RetinalEncoder","newAxes","createRetinalAxis","fieldProps","getAxisType","encodingConfigs","isDistributionEqual","group_utils_toConsumableArray","rowType","initializeCacheMaps","cellMap","xAxesMap","yAxesMap","entryCellMap","exitCellMap","headerCreator","fieldHeaders","TextCell","getHeaderText","rowLength","userAxisFromConfig","_fields","group_utils_slicedToArray","firstField","secondField","firstFieldType","secondFieldType","setFacetsAndProjections","encoder","_encoder$simpleEncode","simpleEncoder","getFacetsAndProjections","group_utils_defineProperty","createSelection","appendObj","idFn","dataSelect","mergedSelection","getBorders","matrices","showRowBorders","showColBorders","showValueBorders","valueMatrix","_rows","leftRows","rightRows","_columns","topColumns","bottomColumns","_encoder$fieldInfo","allDimensionLength","allMeasuresLength","allTemporalFieldsLength","getRowBorders","borders","getColumnsBorders","getValueBorders","borderTypeRow","borderTypeCol","action_behaviour_map_defineProperty","ACTIONS","getLayerFromDef","existingLayer","_layerDeps","inst","colIndex","instanceArr","_timeDiffs","resolveEncodingTransform","layerInst","resolvable","depArr","sanitizeLayerDef","sanitizedDefs","sConf","getLayersBy","searchBy","removeLayersBy","createRenderPromise","_renderedPromise","_renderedResolve","getGridLayerDefinitions","getDefaultVisibilty","getLayerDefinition","_definition","_encoding","gridLines","gridBands","gridLineColor","zeroLineColor","gridBandColor","isLinearScale","grid_lines_defineProperty","isNegativeDomain","attachDataToGridLineLayers","gridLayerData","getGridLayerData","gridData","_jsonData$push","grid_lines_toConsumableArray","_gridbands","_gridlines","trackerClassName","arcLayerClassName","sideEffectClassName","src_local_options","src_local_options_defineProperty","_CONFIG$LAYERDEFS$TRA","cachedData","local_options_toConsumableArray","oldData","calculateDomainListener","unionDomainFromLayers","layerAxisIndex","getDataDomain","domainValues","layerDomain","fieldDomain","fieldStr","_layerAxisIndex","src_listener_map_slicedToArray","fieldsVal","removeExitLayers","layersMap","markSet","listenerInf","_lifeCycleManager","notify","axesObj","_timeDiffsByField","createGridLineLayer","vuConf","atomicDef","_ref7","_ref8","transformDataModels","transformVal","_ref11","_ref12","layerAxisIndexVal","axesVal","lyr","disableUpdate","attachDataToLayers","transformedDataModels","dataSource","enableUpdate","_dimensionMeasureMap","getDimensionMeasureMap","retinalEncodingsAndMeasures","_layer$encodingFields","_retinalEncodingsAndM","src_helper_toConsumableArray","retinalFields","attachAxisToLayers","axisInf","props_defineProperty","_PROPS","createSelectionSet","originalData","attachPropagationListener","firebolt_helper_slicedToArray","dispatchQueuedSideEffects","firebolt_helper_toConsumableArray","clearActionHistory","payloadGenerator","brush","selectionDataModel","propPayload","getRangeFromData","propCriteria","isDimension","payload_generator_toConsumableArray","__default","propagateValues","propagationFieldInf","propagationFields","sideEfffects","mergedModel","sourceUnit","sourceCanvas","parentAlias","propagationBehaviour","propFields","facetByFields","getModelWithFacetData","schema1","data1","schema2","data2","data_propagator_toConsumableArray","groupId","behaviourInstance","propagationConf","sourceBehaviour","enabled","propConf","propInf","UnitFireBolt","src_firebolt_classCallCheck","firebolt_possibleConstructorReturn","firebolt_getPrototypeOf","firebolt_assertThisInitialized","unitId","aliasName","propagationSourceCanvas","sourceUnitId","sourceSideEffects","sideEffectInstances","actionOnSource","mappedEffects","se","sideEffectChecker","enabledFn","payloadFn","sourceIdentifierFields","sourceBehaviours","firebolt_get","VisualUnit","visual_unit_classCallCheck","visual_unit_defineProperty","lifeCycleManager","_layerNamespaces","_transformedDataModels","localOptions","_firebolt","_rootSvg","class","renderGridLineLayers","_entry","grid_lines_slicedToArray","parentGroupClass","renderLayers","orderedLayers","layerParentGroup","layerDepOrder","_layerDepOrder","_sideEffectGroup","createSideEffectGroup","initSideEffects","rootSvg","_this$parentContainer","parentContainerInf","layerDefinition","layerDefinitions","components","layerIndex","startIndex","visual_unit_toConsumableArray","layersArr","_layersArr","markId","defArr","instanceValues","layerdeps","getLayerAxisIndex","_layer$config","stateStore","dimValue","getNearestDimensionalValue","entryVal","pointInf","getMarkInfFromLayers","markInf","parsedIdentifiers","transposeArray","getPointsFromIdentifiers","visual_unit_construct","getFieldNames","fields1","matrix_model_toConsumableArray","createSelectedDataModel","uniqueKeyGenerator","keyArray","newDm","nextDepthUniqueValues","projectRows","allColumnProjections","rowProjections","optionalProjections","projectFields","_getFieldNames2","matrix_model_slicedToArray","projFieldNames","colProjFieldNames","pushToMatrix","_matrix$rowIndex","facetInfo","colProjections","rowProj","projIdx","_getFieldNames4","rowProjFieldNames","projectedDm","createValueCells","suppliedLayers","GeomCell","matrixLayers","horizontalAxis","verticalAxis","datamodelTransform","layerConfigArr","getLayerConfig","normalizedColumns","normalizedRows","geomCellKey","getCellKey","columnId","allFacets","cell_creator_toConsumableArray","rowFacets","colFacets","geomCell","updateCells","facetKey","createAxisCells","axisInst","_axisInst$config","AxisCell","BlankCell","headerPlaceholderGn","selectionObj","selectionKeys","keySet","createTextCells","generatePlaceholders","facetsAndProjections","encoders","valuesMatrix","rowKeys","columnKeys","takeAxisFrom","takeHeaderFrom","axisPlaceholderGn","selObj","axesMatrix","selObjProp","axesForDraw","rowsPrimary","rowPrime","columnsPrimary","colPrime","_selectionObj","rowsSecondary","columnsSecondary","getObjects","section","hContext","computeMatrices","componentRegistry","globalConfig","autoGroupBy","otherEncodings","matrixGnContext","getCellDef","isRowSizeEqual","isColumnSizeEqual","colCells","rowCells","resetSimpleAxes","newCacheMap","valueCellContext","serializeLayerConfig","extractFields","layerFields","flattenArray","getFieldsFromSuppliedLayers","suppliedLayerConfig","aggregationFns","valueMatrixInfo","getMatrixModel","rowDataModels","colProj","firstLevelRowKeys","_rowDataModels","rowFacetFieldNames","selectedDataModel","_rowDataModels2","colFacetNames","firstLevelColumnKeys","dme","rIndex","cIndex","transposedColKeys","valueCellsCreator","placeholder","_mutateAxesFromMap","mutateAxesFromMap","xAxisSet","yAxisSet","axisId","createUnits","_generateMatrices","generateMatrices","leftHeaders","topHeaders","bottomHeaders","rightHeaders","cell_creator_slicedToArray","rowSec","colSec","leftFacets","rightFacets","rowPriority","colPriority","leftMatrix","rightMatrix","topMatrix","bottomMatrix","currentBottomLength","setAvailableSpace","rowMatrix","columnMatrix","RESOLVER_PROPS","MatrixResolver","matrix_resolver_classCallCheck","_registry","_layerConfig","_matrixLayers","_rowMatrix","_columnMatrix","_valueMatrix","_facets","_projections","_datamodelTransform","_units","_cacheMaps","_axes","maps","matrix_resolver_toConsumableArray","_horizontalAxis","_verticalAxis","matrixType","sideEffectRegistry","_this$dependencies","unitConfig","extractUnitConfig","globalStates","_this$getAllFields","retContext","getRetinalFieldsDomain","retinalEncoder","setCommonDomain","_this$axes","retinalAxes","updateModel","placeholders","bottomLeft","bottomRight","_this$dependencies3","matrix_resolver_slicedToArray","topCols","bottomCols","rowHeaders","blankCellCreator","showHeaders","footers","topLeft","topRight","ValueMatrix","matrixArr","value_matrix_classCallCheck","instancesById","cellValue","_instancesById","_matrix","_filterFn","rowWidth","currentRowWidth","getLogicalSpace","rowHeight","currentRowHeight","setMatrixInstances","_composition","createMatrices","matrixConfig","unsubscribeChangeListeners","retinalConfig","sanitizeRetinalConfig","retinalConf","confValue","getEncoder","groupType","fieldSanitizer","setAxisAndHeaders","placeholderInfo","getMatrices","_groupedDataModel","createRetinalAxes","setDomains","cornerMatrices","createHeaders","metaData","border","unionUnitDomains","registerDomainChangeListener","visual_group_props_defineProperty","visual_group_props_PROPS","cellRegistry","VisualGroup","visual_group_classCallCheck","visual_group_possibleConstructorReturn","visual_group_getPrototypeOf","componentSubRegistry","visual_group_assertThisInitialized","_selection","createUnitState","visual_group_helper_slicedToArray","createLayerState","setupChangeListeners","variable","findInGroup","channel","group_utils_this","facetType","projType","getRetinalAxes","getSimpleAxes","_this$resolver$getAll","visual_group_defineProperty","existingRemoveSet","select_toConsumableArray","firebolt_action_behaviour_map_defineProperty","action_behaviour_map_actionBehaviourMap","propagationBehaviourMap","_propagationBehaviour","firebolt_behaviour_effect_map_defineProperty","firebolt_behaviour_effect_map_behaviourEffectMap","propagationSideEffects","_propagationSideEffec","SCALE_FUNCTIONS","VALUE","canvasAlias","check","assembleModelFromIdentifiers","src_firebolt_helper_toConsumableArray","LegendFireBolt","_Firebolt","legend_firebolt_classCallCheck","legend_firebolt_possibleConstructorReturn","legend_firebolt_getPrototypeOf","legend_firebolt_inherits","legend_firebolt_createClass","behaviourName","getCriteriaFromData","firebolt_physical_defineProperty","physical_physicalActions","boundingBox","gradientDimensions","axisScale","rangeShifter","drag_defineProperty","getSelectionCriteria","selectionBoxMeasure","drawingInfMeasure","subjectStartPoint","gradientDimension","legendGradContainer","legendSelGroup","enterFn","getMousePos","boundingClientRect","selection_box_drag_defineProperty","fadeOut","brighten","LegendHighlighter","legend_highlighter_classCallCheck","legend_highlighter_possibleConstructorReturn","legend_highlighter_getPrototypeOf","legendContainer","resetLogicalSpace","title","_title","ALIGN","DEFAULT_MEASUREMENT","LEGEND_TITLE","borderStyle","borderColor","bounds","upper","ICON_MAP","getScaleInfo","scaleType","steps","scaleFn","getInterpolatedData","domainForLegend","interpolatedFn","getDomainBounds","domainBounds","domainLeg","ele","legend_helper_defineProperty","getScaleFactor","SimpleLegend","simple_legend_classCallCheck","_metaData","_fieldName","_labelManager","_cells","defaultMeasurement","_computedStyle","legendBehaviours","_canvasAlias","getItemMeasures","_labelManager$getOriS","effPadding","effBorder","effMargin","dataFromScale","titleSpace","getTitleSpace","titleHeight","titleWidth","labelSpaces","getLabelSpaces","_computeItemSpaces","computeItemSpaces","maxItemSpaces","textOrientation","itemSpaces","iconSpaces","maxIconWidth","labelSpace","itemSpace","iconSpace","titleSpaces","_this$measurement2","titleCreator","titleContainer","_this$config4","_this$measurement3","renderTitle","simple_legend_defineProperty","legendOrientation","position_config_defineProperty","_legendOrientation","datasets","itemContainerMeasures","getStepSpacesInfo","iconHeight","iconWidth","stepPadding","horizontal","vertical","positionConfig","_positionConfig","alignmentMap","_alignmentMap","itemStack","_itemStack","createLegendSkeleton","gradWidth","gradHeight","maxGradHeight","maxGradWidth","legendBody","legendItem","getItemContainers","legendInstance","positionObj","createItemSkeleton","itemSkeleton","alignClass","applyItemStyle","measureType","stepColorCheck","_context$measurement","renderIcon","defaultIcon","DiscreteLegend","_getScaleInfo","discrete_legend_toConsumableArray","discrete_legend_defineProperty","discrete_legend_get","discrete_legend_getPrototypeOf","renderDiscreteItem","_context$measurement2","_item$icon","text-align","getGradientDomain","accumulator","currentValue","MAX_VALUE","MIN_VALUE","legendGradSvg","legendGradCont","linearGradient","makeLinearGradient","legendRect","GradientLegend","gradient_legend_toConsumableArray","gradient_legend_defineProperty","newAxis","axisSpace","axisDomainLength","_legendGradientSvg","gradient_legend_get","gradient_legend_getPrototypeOf","renderGradient","_createLegendSkeleton","StepLegend","step_legend_toConsumableArray","step_legend_defineProperty","lowerBounds","upperBounds","step_legend_get","step_legend_getPrototypeOf","stepData","renderStepItem","_context$measurement3","_item$icon2","_positionConfig$posit","PADDING","BORDER","MARGIN","TITLE","TITLE_TEMPLATE_NOT_ALLOWED_TAGS","LEGEND_TYPE_MAP","constants_defineProperty","_LEGEND_TYPE_MAP","share","operators_construct","operators_toConsumableArray","strings","htmlCode","expLn","frag","createDocumentFragment","treeShakeNode","nodeType","Node","ELEMENT_NODE","tagName","_didIteratorError","_iteratorError","_step","_iterator","childNodes","err","canvasIterator","canvases","canvas","visualGroup","matrixInstance","_throwback","actionModel","ActionModel","action_model_classCallCheck","_registrableComponents","registerPropagationBehaviourMap","_len4","_key4","dissociateBehaviour","_len5","_key5","dissociateSideEffect","policy","registrableComponents","mergedPolicy","aliases","comp","*","propagationPayload","propagationCanvas","crossInteractionPolicy","legend","minHeight","minCharacters","maxLines","verticalAlign","collapse","src_options","isInteger","minUnitWidth","minUnitHeight","oldConf","ROW_MATRIX_INDEX","2","COLUMN_MATRIX_INDEX","WIDTH","HEIGHT","CENTER","ROW_LEFT","ROW_RIGHT","COLUMN_BOTTOM","COLUMN_TOP","ROW_SPAN","COL_SPAN","ROW_ROOT","COLUMN_ROOT","GenericLayout","generic_layout_classCallCheck","_matrices","_centerMatrix","_mountPoint","DEFAULT_CONFIGURATION","grid_layout_defaults_defineProperty","_DEFAULT_CONFIGURATIO","_FieldNames$BORDER","FieldNames","DEFAULT_MEASUREMENTS","_DEFAULT_MEASUREMENTS","BLANK_BORDERS","columnFilter","previousRow","currentRow","prevCell","nextRow","prevRow","calcRowSpan","isNull","calcColSpan","mask","filteredRow","span_maker_toConsumableArray","cellSpanMaker","viewMatrix","spans","ridx","currSpan","applyBorders","borderType","applyRowBorders","showBorders","applyColBorders","renderMatrix","containerForMatrix","_cellSpanMaker","renderTable","rowData","findInPage","page","combineMatrices","isTransposed","joinedMatrix","utils_toConsumableArray","computeLogicalSpace","maxMeasures","_config$isTransposed","unitMeasures","_getMeasureInfo","getMeasureInfo","firstMeasure","secondMeasure","minMeasures","getMinMeasures","_logicalSpace","utils_defineProperty","valueItem","maxMeasure","firstMeasureValue","secondMeasureValue","valueArray","_item$space","fMeasure","sMeasure","createMatrixEachLevel","_arr$i","extraCellsRemover","beg","distribution","extraCellLengths","VisualMatrix","visual_matrix_classCallCheck","_lastLevelKey","_primaryMatrix","_secondaryMatrix","_maxMeasures","_availableSpace","_layoutMatrix","_tree","_createTree2","createTree","matrixTree","lastLevelKey","layoutMatrix","primaryMatrix","secondaryMatrix","breakPage","primaryMatrixLength","newMatrix","keyLength","heightMeasures","populateMaxMeasures","widthMeasures","calculateDepth","viewableMatrix","createViewPortMatrix","viewableMeasures","redistributeSpaces","childDepth","createMatrixInstances","matrixInfo","layout","breakPointer","_breakPointer","brokenMatrix","breakMatrix","nextLevel","removeExtraCells","RowVisualMatrix","row_matrix_classCallCheck","row_matrix_possibleConstructorReturn","row_matrix_getPrototypeOf","maxHeights","maxWidths","matrixInst","cellDimOptions","matrixIndex","_this2$getCellDimensi","getCellDimensions","widths","rowHeights","columnWidths","primary","secondary","begCellLen","endCellLen","remainaingAvailWidth","remainaingWidth","cWidths","conditions","maxPrioritySpace","availableWidth","currentWidth","prioritySpace","logicalWidths","getPriorityDistribution","mWidth","mHeight","redistributeViewSpaces","computeViewableSpaces","rHeights","gutter","spaceTakenByColumn","spaces","getDistributedHeight","heightWithoutGutter","distSum","gutterSum","availableHeight","colLen","distHeight","borderWidth","colHeight","colWidth","heights","ColumnVisualMatrix","column_matrix_classCallCheck","column_matrix_possibleConstructorReturn","column_matrix_getPrototypeOf","remainaingHeight","heightDist","divider","spaceTakenByRow","getDistributedWidth","layoutConfig","distWidth","rowLen","oldLogicalSpace","heightDistribution","setViewSpaces","pointerType","viewSpaces","pointer","computations_defineProperty","GridLayout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","_layoutId","_viewInfo","defaultViewInfo","generateVisualMatrices","begColCells","endColCells","gutterSpace","_top","layout_helper_slicedToArray","_center","_bottom","layout_helper_toConsumableArray","RowMatrix","ColumnMatrix","centerMatrix","layout_get","computeLayoutMeasurements","_layout$measurement","rowMatrixWidth","getMatrixMeasurement","maxRowMatrixWidth","columnMatrixWidth","maxColumnMatrixHeight","columnViewPages","getViewableSpaces","columnViewSpace","columnPointer","columnMatrixHeight","rowMatrixHeight","rowViewableSpaces","computations_toConsumableArray","rowWidthsPrimary","rowWidthsSecondary","columnViewableSpaces","columnHeightsPrimary","columnHeightsSecondary","setViewInformation","pageNumber","pageType","totalPages","viewInfo","viewMatricesInfo","layout_defineProperty","renderGrid","currentPage","rowPointer","getViewMatrices","rowMatrices","getViewableMatrices","columnMatrices","centralMatrixPointer","rowMatrixLen","columnMatrixLen","rowPages","columnPages","layoutDimensions","getViewMeasurements","_layout$config3","rowSpaces","leftWidth","rightWidth","colSpaces","topHeight","bottomHeight","centerHeight","viewWidth","viewHeight","renderMatrices","TransactionSupport","INTERFACE_IMPl","CLASSPREFIX","HEADER","DATA","AXES","FACET_BY_FIELDS","FIELDS","TRANSFORM","LAYER_DEF","CONFIG","DETAIL_FIELDS","TEXT","AXIS","GEOM","BLANK","SimpleCell","simple_cell_classCallCheck","enums_defaults_defineProperty","_DEFAULT_CONFIG","_CONSTANTS$MARGIN","CONSTANTS","DEFAULT_PROPS","minSpacing","src_props_defineProperty","visual_cell_src_props_PROPS","caption","smartText","axis_cell_classCallCheck","axis_cell_possibleConstructorReturn","axis_cell_getPrototypeOf","_availHeight","_availWidth","axis_cell_assertThisInitialized","computeAxisSpace","logicalWidth","logicalHeight","spaceFixer","_axis$getLogicalSpace","wrapperDiv","blank_cell_classCallCheck","blank_cell_possibleConstructorReturn","blank_cell_getPrototypeOf","blank_cell_assertThisInitialized","setSmartText","_context$minSpacing","minHeightSpace","minWidthSpace","paddedHeight","paddedWidth","text_cell_classCallCheck","text_cell_possibleConstructorReturn","text_cell_getPrototypeOf","_className","text_cell_assertThisInitialized","computeTextSpace","_context$minSpacing2","minText","_minTextSpace","smartSpace","textAlign","vAlign","_this$smartText","translation","middle","geom_cell_classCallCheck","geom_cell_possibleConstructorReturn","geom_cell_getPrototypeOf","_unit","_datamodel","_facetByFields","_transform","_caption","geom_cell_assertThisInitialized","lockModel","unlockModel","captionSpace","computeGeomSpace","getCaptionSpace","captionDom","DEFAULT_PLACEHOLDERS","src_defaults_defineProperty","_DEFAULT_PLACEHOLDERS","createHeading","cellType","_minTickDiff","legendInitializer","legendConfig","prevLegends","legends","headerHeight","legendCreator","LegendCls","dataset","scaleProps","_scale$config","stepMapper","dataInfo","legendMeasures","getGroupByData","setLegendMeasures","LayoutComponent","layoutComponent_classCallCheck","_boundBox","_renderAt","_alignWith","_alignment","_componentName","DummyComponent","newDimensions","renderAt","component","componentName","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_CLASS_NAME","NODE_PREFIX","DefinitionModel","definitionModel_classCallCheck","_host","host","_cut","cut","_ratioWeight","ratioWeight","_preferred","preferred","_lanes","lanes","_remainingHeight","_remainingWidth","remainingHeight","remainingWidth","getNodeId","_uid","yExtraSpace","smallestHeight","getCutType","smallestExtraHeightHorizontally","MAX_SAFE_INTEGER","containerHeight","hostHeight","xExtraSpace","smallestWidth","smallestExtraWidthVertically","containerWidth","hostWidth","createPlaceHolderComponent","placeComponent","definitionModel","leftOvercomponentRationWidth","isPreferred","isGridComponent","componentRatioWidth","leftHeight","_component$getLogical","componentHeight","componentWidth","firstLaneConfig","firstLane","secondLane","tree_classCallCheck","_parentCut","_this$_children","tree_toConsumableArray","parentCut","bound","nodeconfig","searchNode","childNode","nodeId","deleteSearchNode","LayoutModel","measurements","layout_model_classCallCheck","_measurements","_root","setBoundBox","addChildren","lane","allocateBoundingBox","totalWeight","carry","lastSibling","ratio","setHostSpatialConfig","setHostPosition","negotiateDimension","alteredDim","nonAlteredDim","cumultiveExtraSpaceAmt","childrenLength","extraSpaceAmt","computePosition","determineBoundBox","bb","_lastSibling$boundBox","_left","_height","_width","_instance$parent$boun","setSpatialConfig","Utils","utils_createClass","isDOMElement","getID","getElement","findContainer","coordinate","removeDiv","divId","DataPoint","data_point_classCallCheck","DataParser","data_parser_classCallCheck","data_parser_createClass","defaultDataPointLogic","nodepoints","getnodePoints","datapoint","HTMLDataAdapter","_DataParser","html_data_classCallCheck","html_data_possibleConstructorReturn","html_data_getPrototypeOf","html_data_inherits","html_data_createClass","getCoordinates","html_data_get","Renderer","renderer_classCallCheck","renderer_createClass","initRenderer","__logicalTree","HTMLRenderer","_Renderer","html_renderer_classCallCheck","html_renderer_possibleConstructorReturn","html_renderer_getPrototypeOf","_coordinates","html_renderer_inherits","html_renderer_createClass","createhtml","mainDiv","html_renderer_get","parentDiv","createAndCustomiseParent","hasHost","createAndPositionDiv","_objectSpread","div","coordinates","findNode","nodeID","renderer","renderHTML","DrawingManager","drawing_manager_classCallCheck","_componentMap","componentMap","_layoutClassName","layoutClassName","_renderer","drawing_manager_createClass","drawLayout","resolveAligment","componentData","alignWith","newNodeConfig","refNode","alignment","drawComponent","DefinitionManager","definition_manager_classCallCheck","_prioritySequence","_totalHeight","_totalWidth","_targetComponentMap","prepareTargetComponentMap","targetComponentMap","canvasComponent","tempDefModel","componentRef","getComponent","placeGridComponent","gridComponents","iscolumnPreffered","_placeComponent","rowpreffred","LayoutDef","layout_def_classCallCheck","_layoutDefinition","layout_def_createClass","addComponent","layoutDefinition","addMultipleComponent","componentArray","sanitizedDefinition","sanitizeConfig","hostObj","hostID","childHost","resetComponentMap","LayoutManager","layout_manager_classCallCheck","_dimension","_skeletonType","skeletonType","_layoutDef","_drawingManager","_rootNodeID","con","resetNode","updateNode","compute","_layout","calLayOutDef","_context$dimension","layoutDef","prioritySequence","generateConfigModel","negotiate","broadcast","layoutComponents","componentArr","compo","MuzeComponent","_this$boundBox","HeaderComponent","headerComponent_classCallCheck","headerComponent_possibleConstructorReturn","headerComponent_getPrototypeOf","setParams","cont","renderHeader","LegendComponent","legendComponent_classCallCheck","legendComponent_possibleConstructorReturn","legendComponent_getPrototypeOf","legendSpace","sectionComponents","_this$params$config$m","_this$params$config","legendMount","legWidth","legHeight","sections","currHeight","currWidth","legendInfo","leg","legendHeight","legendWidth","renderLegend","MatrixComponent","matrix_component_classCallCheck","matrix_component_possibleConstructorReturn","matrix_component_getPrototypeOf","GridComponent","grid_component_classCallCheck","grid_component_possibleConstructorReturn","grid_component_getPrototypeOf","_this$component$viewI","matrixDim","matrixName","updateWrapper","matrixWrapper","_this$component$0$0$b","sanitizeGrid","TITLE_CONFIG","SUB_TITLE_CONFIG","LAYOUT_ALIGN","getRenderDetails","_mount$getBoundingCli","heightAttr","widthAttr","visGroup","_visGroup$placeholder","titleConfig","subtitleConfig","subtitle","legendPosition","layoutArrangement","arrangeComponents","_titleLayouts","titleLayouts","component_resolver_defineProperty","legendLayouts","titlePosition","subtitlePosition","availableHeightForCanvas","availableWidthForCanvas","_createHeaders","canvasHeight","canvasWidth","headerOptions","resolveTitleSubTitleContent","rawContent","escapeHTML","htmlEscapes","&","<",">","\"","'","/","_createHeading","createLegend","getLegendSpace","mountSpace","canvas_local_options_defineProperty","_localOptions","canvasOptions","_canvasOptions","_sanitized","sub","setupChangeListener","allOptions","_allOptions","canvas_helper_toConsumableArray","nameSpaceProps","equalityChecker","option","updateChecker","dispatchProps","_cachedProps","notifyAnimationEnd","promises","cellArr","lifeCycle","animDonePromises","animationDone","axisArr","applyInteractionPolicy","interactionPolicy","_interactionPolicy","_crossInteractionPolicy","unitFireBolt","changeBehaviourStateOnPropagation","changeSideEffectStateOnPropagation","createLayoutManager","defaultInteractionPolicy","isMeasure","group_firebolt_toConsumableArray","getFieldsFromChannel","colDim","fieldInf","unitColFacets","equals","unitRowFacets","propagateWith","defaultCrossInteractionPolicy","propagationCanvasAlias","propagationUnit","GroupFireBolt","group_firebolt_classCallCheck","APP_INITIAL_STATE","app","Canvas","globalDependencies","canvas_classCallCheck","canvas_possibleConstructorReturn","canvas_getPrototypeOf","canvas_defineProperty","canvas_slicedToArray","canvas_assertThisInitialized","_layoutManager","initedComponents","initCanvas","createGroupState","_VisualGroup$getState2","canvas_helper_slicedToArray","localState","register","renderDetails","prepareLayout","triggerReflow","renderLayout","layoutManager","grid","titleWrapper","titleCell","layout_maker_objectSpread","subtitleWrapper","subtitleCell","colorLegendWrapper","gridWrapper","registerComponents","setLayoutInfForUnits","getBoundBox","getRootNodeId","setLabelRotationForAxes","getAxes","initialSettings","regEntry","COMPONENTS","SUBREGISTRIES","regObj","globalCache","defaultRegistry","overrideRegistryDefinitions","overrideRegistry","muze","_transactor2","muze_slicedToArray","env","globalStore","componentSubRegistryDef","settings","withSettings","enableChainedTransaction","transactionModel","transactionEndpoint","transactionItems","_slicedToArray","Smartlabel","SideEffects","standards","Behaviours","operators","utils","lookupWhat","lookupDetails","lookupTarget","deps"],"mappings":"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","file":"muze.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"muze\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"muze\"] = factory();\n\telse\n\t\troot[\"muze\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DataModel\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DataModel\"] = factory();\n\telse\n\t\troot[\"DataModel\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const DataModel = require('./export');\n\nmodule.exports = DataModel.default ? DataModel.default : DataModel;\n","/**\n * DataFormat Enum defines the format of the input data.\n * Based on the format of the data the respective adapter is loaded.\n *\n * @readonly\n * @enum {string}\n */\nconst DataFormat = {\n    FLAT_JSON: 'FlatJSON',\n    DSV_STR: 'DSVStr',\n    DSV_ARR: 'DSVArr',\n    AUTO: 'Auto'\n};\n\nexport default DataFormat;\n","/**\n * DimensionSubtype enum defines the sub types of the Dimensional Field.\n *\n * @readonly\n * @enum {string}\n */\nconst DimensionSubtype = {\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    GEO: 'geo',\n    BINNED: 'binned'\n};\n\nexport default DimensionSubtype;\n","/**\n * MeasureSubtype enum defines the sub types of the Measure Field.\n *\n * @readonly\n * @enum {string}\n */\nconst MeasureSubtype = {\n    CONTINUOUS: 'continuous'\n};\n\nexport default MeasureSubtype;\n","/**\n * FieldType enum defines the high level field based on which visuals are controlled.\n * Measure in a high level is numeric field and Dimension in a high level is string field.\n *\n * @readonly\n * @enum {string}\n */\nconst FieldType = {\n    MEASURE: 'measure',\n    DIMENSION: 'dimension'\n};\n\nexport default FieldType;\n","/**\n * Filtering mode enum defines the filering modes of DataModel.\n *\n * @readonly\n * @enum {string}\n */\nconst FilteringMode = {\n    NORMAL: 'normal',\n    INVERSE: 'inverse',\n    ALL: 'all'\n};\n\nexport default FilteringMode;\n","/**\n * Creates a JS native date object from input\n *\n * @param {string | number | Date} date Input using which date object to be created\n * @return {Date} : JS native date object\n */\nfunction convertToNativeDate (date) {\n    if (date instanceof Date) {\n        return date;\n    }\n\n    return new Date(date);\n}\n/**\n * Apply padding before a number if its less than 1o. This is used when constant digit's number to be returned\n * between 0 - 99\n *\n * @param {number} n Input to be padded\n * @return {string} Padded number\n */\nfunction pad (n) {\n    return (n < 10) ? (`0${n}`) : n;\n}\n/*\n * DateFormatter utility to convert any date format to any other date format\n * DateFormatter parse a date time stamp specified by a user abiding by rules which are defined\n * by user in terms of token. It creates JS native date object from the user specified format.\n * That native date can also be displayed\n * in any specified format.\n * This utility class only takes care of format conversion only\n */\n\n/*\n * Escapes all the special character that are used in regular expression.\n * Like\n * RegExp.escape('sgfd-$') // Output: sgfd\\-\\$\n *\n * @param text {String} : text which is to be escaped\n */\nRegExp.escape = function (text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * DateTimeFormatter class to convert any user format of date time stamp to any other format\n * of date time stamp.\n *\n * @param {string} format Format of the date given. For the above date,\n * 'year: %Y, month: %b, day: %d'.\n * @class\n */\n/* istanbul ignore next */ function DateTimeFormatter (format) {\n    this.format = format;\n    this.dtParams = undefined;\n    this.nativeDate = undefined;\n}\n\n// The identifier of the tokens\nDateTimeFormatter.TOKEN_PREFIX = '%';\n\n// JS native Date constructor takes the date params (year, month, etc) in a certail sequence.\n// This defines the sequence of the date parameters in the constructor.\nDateTimeFormatter.DATETIME_PARAM_SEQUENCE = {\n    YEAR: 0,\n    MONTH: 1,\n    DAY: 2,\n    HOUR: 3,\n    MINUTE: 4,\n    SECOND: 5,\n    MILLISECOND: 6\n};\n\n/*\n * This is a default number parsing utility. It tries to parse a number in integer, if parsing is unsuccessful, it\n * gives back a default value.\n *\n * @param: defVal {Number} : Default no if the parsing to integer is not successful\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be parsed.\n */\nDateTimeFormatter.defaultNumberParser = function (defVal) {\n    return function (val) {\n        let parsedVal;\n        if (isFinite(parsedVal = parseInt(val, 10))) {\n            return parsedVal;\n        }\n\n        return defVal;\n    };\n};\n\n/*\n * This is a default number range utility. It tries to find an element in the range. If not found it returns a\n * default no as an index.\n *\n * @param: range {Array} : The list which is to be serached\n * @param: defVal {Number} : Default no if the serach and find does not return anything\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be found\n */\nDateTimeFormatter.defaultRangeParser = function (range, defVal) {\n    return (val) => {\n        let i;\n        let l;\n\n        if (!val) { return defVal; }\n\n        const nVal = val.toLowerCase();\n\n        for (i = 0, l = range.length; i < l; i++) {\n            if (range[i].toLowerCase() === nVal) {\n                return i;\n            }\n        }\n\n        if (i === undefined) {\n            return defVal;\n        }\n        return null;\n    };\n};\n\n/*\n * Defines the tokens which are supporter by the dateformatter. Using this definitation a value gets extracted from\n * the user specifed date string. This also formats the value for display purpose from native JS date.\n * The definition of each token contains the following named properties\n * {\n *     %token_name% : {\n *         name: name of the token, this is used in reverse lookup,\n *         extract: a function that returns the regular expression to extract that piece of information. All the\n *                  regex should be gouped by using ()\n *         parser: a function which receives value extracted by the above regex and parse it to get the date params\n *         formatter: a formatter function that takes milliseconds or JS Date object and format the param\n *                  represented by the token only.\n *     }\n * }\n *\n * @return {Object} : Definition of the all the supported tokens.\n */\nDateTimeFormatter.getTokenDefinitions = function () {\n    const daysDef = {\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ],\n        long: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ]\n    };\n    const monthsDef = {\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ],\n        long: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ]\n    };\n\n    const definitions = {\n        H: {\n            // 24 hours format\n            name: 'H',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n\n                return d.getHours().toString();\n            }\n        },\n        l: {\n            // 12 hours format\n            name: 'l',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours() % 12;\n\n                return (hours === 0 ? 12 : hours).toString();\n            }\n        },\n        p: {\n            // AM or PM\n            name: 'p',\n            index: 3,\n            extract () { return '(AM|PM)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'AM' : 'PM');\n            }\n        },\n        P: {\n            // am or pm\n            name: 'P',\n            index: 3,\n            extract () { return '(am|pm)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'am' : 'pm');\n            }\n        },\n        M: {\n            // Two digit minutes 00 - 59\n            name: 'M',\n            index: 4,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const mins = d.getMinutes();\n\n                return pad(mins);\n            }\n        },\n        S: {\n            // Two digit seconds 00 - 59\n            name: 'S',\n            index: 5,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const seconds = d.getSeconds();\n\n                return pad(seconds);\n            }\n        },\n        K: {\n            // Milliseconds\n            name: 'K',\n            index: 6,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const ms = d.getMilliseconds();\n\n                return ms.toString();\n            }\n        },\n        a: {\n            // Short name of day, like Mon\n            name: 'a',\n            index: 2,\n            extract () { return `(${daysDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.short[day]).toString();\n            }\n        },\n        A: {\n            // Long name of day, like Monday\n            name: 'A',\n            index: 2,\n            extract () { return `(${daysDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.long[day]).toString();\n            }\n        },\n        e: {\n            // 8 of March, 11 of November\n            name: 'e',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return day.toString();\n            }\n        },\n        d: {\n            // 08 of March, 11 of November\n            name: 'd',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return pad(day);\n            }\n        },\n        b: {\n            // Short month, like Jan\n            name: 'b',\n            index: 1,\n            extract () { return `(${monthsDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.short[month]).toString();\n            }\n        },\n        B: {\n            // Long month, like January\n            name: 'B',\n            index: 1,\n            extract () { return `(${monthsDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.long[month]).toString();\n            }\n        },\n        m: {\n            // Two digit month of year like 01 for January\n            name: 'm',\n            index: 1,\n            extract () { return '(\\\\d+)'; },\n            parser (val) { return DateTimeFormatter.defaultNumberParser()(val) - 1; },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return pad(month + 1);\n            }\n        },\n        y: {\n            // Short year like 90 for 1990\n            name: 'y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser (val) {\n                if (val) {\n                    const l = val.length;\n                    val = val.substring(l - 2, l);\n                }\n\n                return DateTimeFormatter.defaultNumberParser()(val);\n            },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                let year = d.getFullYear().toString();\n                let l;\n\n                if (year) {\n                    l = year.length;\n                    year = year.substring(l - 2, l);\n                }\n\n                return year;\n            }\n        },\n        Y: {\n            // Long year like 1990\n            name: 'Y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const year = d.getFullYear().toString();\n\n                return year;\n            }\n        }\n    };\n\n    return definitions;\n};\n\n/*\n * The tokens which works internally is not user friendly in terms of memorizing the names. This gives a formal\n * definition to the informal notations.\n *\n * @return {Object} : Formal definition of the tokens\n */\nDateTimeFormatter.getTokenFormalNames = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n\n    return {\n        HOUR: definitions.H,\n        HOUR_12: definitions.l,\n        AMPM_UPPERCASE: definitions.p,\n        AMPM_LOWERCASE: definitions.P,\n        MINUTE: definitions.M,\n        SECOND: definitions.S,\n        SHORT_DAY: definitions.a,\n        LONG_DAY: definitions.A,\n        DAY_OF_MONTH: definitions.e,\n        DAY_OF_MONTH_CONSTANT_WIDTH: definitions.d,\n        SHORT_MONTH: definitions.b,\n        LONG_MONTH: definitions.B,\n        MONTH_OF_YEAR: definitions.m,\n        SHORT_YEAR: definitions.y,\n        LONG_YEAR: definitions.Y\n    };\n};\n\n/*\n * This defines the rules and declares dependencies that resolves a date parameter (year, month etc) from\n * the date time parameter array.\n *\n * @return {Object} : An object that contains dependencies and a resolver function. The dependencies values are fed\n *                  to the resolver function in that particular sequence only.\n */\nDateTimeFormatter.tokenResolver = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const defaultResolver = (...args) => { // eslint-disable-line require-jsdoc\n        let i = 0;\n        let arg;\n        let targetParam;\n        const l = args.length;\n\n        for (; i < l; i++) {\n            arg = args[i];\n            if (args[i]) {\n                targetParam = arg;\n            }\n        }\n\n        if (!targetParam) { return null; }\n\n        return targetParam[0].parser(targetParam[1]);\n    };\n\n    return {\n        YEAR: [definitions.y, definitions.Y,\n            defaultResolver\n        ],\n        MONTH: [definitions.b, definitions.B, definitions.m,\n            defaultResolver\n        ],\n        DAY: [definitions.a, definitions.A, definitions.e, definitions.d,\n            defaultResolver\n        ],\n        HOUR: [definitions.H, definitions.l, definitions.p, definitions.P,\n            function (hourFormat24, hourFormat12, ampmLower, ampmUpper) {\n                let targetParam;\n                let amOrpm;\n                let isPM;\n                let val;\n\n                if (hourFormat12 && (amOrpm = (ampmLower || ampmUpper))) {\n                    if (amOrpm[0].parser(amOrpm[1]) === 'pm') {\n                        isPM = true;\n                    }\n\n                    targetParam = hourFormat12;\n                } else if (hourFormat12) {\n                    targetParam = hourFormat12;\n                } else {\n                    targetParam = hourFormat24;\n                }\n\n                if (!targetParam) { return null; }\n\n                val = targetParam[0].parser(targetParam[1]);\n                if (isPM) {\n                    val += 12;\n                }\n                return val;\n            }\n        ],\n        MINUTE: [definitions.M,\n            defaultResolver\n        ],\n        SECOND: [definitions.S,\n            defaultResolver\n        ]\n    };\n};\n\n/*\n * Finds token from the format rule specified by a user.\n * @param format {String} : The format of the input date specified by the user\n * @return {Array} : An array of objects which contains the available token and their occurence index in the format\n */\nDateTimeFormatter.findTokens = function (format) {\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenLiterals = Object.keys(definitions);\n    const occurrence = [];\n    let i;\n    let forwardChar;\n\n    while ((i = format.indexOf(tokenPrefix, i + 1)) >= 0) {\n        forwardChar = format[i + 1];\n        if (tokenLiterals.indexOf(forwardChar) === -1) { continue; }\n\n        occurrence.push({\n            index: i,\n            token: forwardChar\n        });\n    }\n\n    return occurrence;\n};\n\n/*\n * Format any JS date to a specified date given by user.\n *\n * @param date {Number | Date} : The date object which is to be formatted\n * @param format {String} : The format using which the date will be formatted for display\n */\nDateTimeFormatter.formatAs = function (date, format) {\n    const nDate = convertToNativeDate(date);\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    let formattedStr = String(format);\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    let token;\n    let formattedVal;\n    let i;\n    let l;\n\n    for (i = 0, l = occurrence.length; i < l; i++) {\n        token = occurrence[i].token;\n        formattedVal = definitions[token].formatter(nDate);\n        formattedStr = formattedStr.replace(new RegExp(tokenPrefix + token, 'g'), formattedVal);\n    }\n\n    return formattedStr;\n};\n\n/*\n * Parses the user specified date string to extract the date time params.\n *\n * @return {Array} : Value of date time params in an array [year, month, day, hour, minutes, seconds, milli]\n */\nDateTimeFormatter.prototype.parse = function (dateTimeStamp, options) {\n    const tokenResolver = DateTimeFormatter.tokenResolver();\n    const dtParams = this.extractTokenValue(dateTimeStamp);\n    const dtParamSeq = DateTimeFormatter.DATETIME_PARAM_SEQUENCE;\n    const noBreak = options && options.noBreak;\n    const dtParamArr = [];\n    const args = [];\n    let resolverKey;\n    let resolverParams;\n    let resolverFn;\n    let val;\n    let i;\n    let param;\n    let resolvedVal;\n    let l;\n\n    for (resolverKey in tokenResolver) {\n        if (!{}.hasOwnProperty.call(tokenResolver, resolverKey)) { continue; }\n\n        args.length = 0;\n        resolverParams = tokenResolver[resolverKey];\n        resolverFn = resolverParams.splice(resolverParams.length - 1, 1)[0];\n\n        for (i = 0, l = resolverParams.length; i < l; i++) {\n            param = resolverParams[i];\n            val = dtParams[param.name];\n\n            if (val === undefined) {\n                args.push(null);\n            } else {\n                args.push([param, val]);\n            }\n        }\n\n        resolvedVal = resolverFn.apply(this, args);\n\n        if ((resolvedVal === undefined || resolvedVal === null) && !noBreak) {\n            break;\n        }\n\n        dtParamArr[dtParamSeq[resolverKey]] = resolvedVal;\n    }\n\n    return dtParamArr;\n};\n\n/*\n * Extract the value of the token from user specified date time string.\n *\n * @return {Object} : An key value pair which contains the tokens as key and value as pair\n */\nDateTimeFormatter.prototype.extractTokenValue = function (dateTimeStamp) {\n    const format = this.format;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const tokenObj = {};\n\n    let lastOccurrenceIndex;\n    let occObj;\n    let occIndex;\n    let targetText;\n    let regexFormat;\n\n    let l;\n    let i;\n\n    regexFormat = String(format);\n\n    const tokenArr = occurrence.map(obj => obj.token);\n    const occurrenceLength = occurrence.length;\n    for (i = occurrenceLength - 1; i >= 0; i--) {\n        occIndex = occurrence[i].index;\n\n        if (occIndex + 1 === regexFormat.length - 1) {\n            lastOccurrenceIndex = occIndex;\n            continue;\n        }\n\n        if (lastOccurrenceIndex === undefined) {\n            lastOccurrenceIndex = regexFormat.length;\n        }\n\n        targetText = regexFormat.substring(occIndex + 2, lastOccurrenceIndex);\n        regexFormat = regexFormat.substring(0, occIndex + 2) +\n            RegExp.escape(targetText) +\n            regexFormat.substring(lastOccurrenceIndex, regexFormat.length);\n\n        lastOccurrenceIndex = occIndex;\n    }\n\n    for (i = 0; i < occurrenceLength; i++) {\n        occObj = occurrence[i];\n        regexFormat = regexFormat.replace(tokenPrefix + occObj.token, definitions[occObj.token].extract());\n    }\n\n    const extractValues = dateTimeStamp.match(new RegExp(regexFormat)) || [];\n    extractValues.shift();\n\n    for (i = 0, l = tokenArr.length; i < l; i++) {\n        tokenObj[tokenArr[i]] = extractValues[i];\n    }\n    return tokenObj;\n};\n\n/*\n * Give back the JS native date formed from  user specified date string\n *\n * @return {Date} : Native JS Date\n */\nDateTimeFormatter.prototype.getNativeDate = function (dateTimeStamp) {\n    if (dateTimeStamp instanceof Date) {\n        return dateTimeStamp;\n    } else if (isFinite(dateTimeStamp) && !!this.format) {\n        return new Date(dateTimeStamp);\n    }\n\n    const dtParams = this.dtParams = this.parse(dateTimeStamp);\n\n    dtParams.unshift(null);\n    this.nativeDate = new (Function.prototype.bind.apply(Date, dtParams))();\n    return this.nativeDate;\n};\n\n/*\n * Represents JS native date to a user specified format.\n *\n * @param format {String} : The format according to which the date is to be represented\n * @return {String} : The formatted date string\n */\nDateTimeFormatter.prototype.formatAs = function (format, dateTimeStamp) {\n    let nativeDate;\n\n    if (dateTimeStamp) {\n        nativeDate = this.nativeDate = this.getNativeDate(dateTimeStamp);\n    } else if (!(nativeDate = this.nativeDate)) {\n        nativeDate = this.getNativeDate(dateTimeStamp);\n    }\n\n    return DateTimeFormatter.formatAs(nativeDate, format);\n};\n\nexport { DateTimeFormatter as default };\n","/**\n * The utility function to calculate major column.\n *\n * @param {Object} store - The store object.\n * @return {Function} Returns the push function.\n */\nexport default (store) => {\n    let i = 0;\n    return (...fields) => {\n        fields.forEach((val, fieldIndex) => {\n            if (!(store[fieldIndex] instanceof Array)) {\n                store[fieldIndex] = Array.from({ length: i });\n            }\n            store[fieldIndex].push(val);\n        });\n        i++;\n    };\n};\n","/* eslint-disable */\nconst OBJECTSTRING = 'object';\nconst objectToStrFn = Object.prototype.toString;\nconst objectToStr = '[object Object]';\nconst arrayToStr = '[object Array]';\n\nfunction checkCyclicRef(obj, parentArr) {\n    let i = parentArr.length;\n    let bIndex = -1;\n\n    while (i) {\n        if (obj === parentArr[i]) {\n            bIndex = i;\n            return bIndex;\n        }\n        i -= 1;\n    }\n\n    return bIndex;\n}\n\nfunction merge(obj1, obj2, skipUndef, tgtArr, srcArr) {\n    var item,\n        srcVal,\n        tgtVal,\n        str,\n        cRef;\n    // check whether obj2 is an array\n    // if array then iterate through it's index\n    // **** MOOTOOLS precution\n\n    if (!srcArr) {\n        tgtArr = [obj1];\n        srcArr = [obj2];\n    }\n    else {\n        tgtArr.push(obj1);\n        srcArr.push(obj2);\n    }\n\n    if (obj2 instanceof Array) {\n        for (item = 0; item < obj2.length; item += 1) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (typeof tgtVal !== OBJECTSTRING) {\n                if (!(skipUndef && tgtVal === undefined)) {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                    srcVal = obj1[item] = tgtVal instanceof Array ? [] : {};\n                }\n                cRef = checkCyclicRef(tgtVal, srcArr);\n                if (cRef !== -1) {\n                    srcVal = obj1[item] = tgtArr[cRef];\n                }\n                else {\n                    merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                }\n            }\n        }\n    }\n    else {\n        for (item in obj2) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (tgtVal !== null && typeof tgtVal === OBJECTSTRING) {\n                // Fix for issue BUG: FWXT-602\n                // IE < 9 Object.prototype.toString.call(null) gives\n                // '[object Object]' instead of '[object Null]'\n                // that's why null value becomes Object in IE < 9\n                str = objectToStrFn.call(tgtVal);\n                if (str === objectToStr) {\n                    if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                        srcVal = obj1[item] = {};\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else if (str === arrayToStr) {\n                    if (srcVal === null || !(srcVal instanceof Array)) {\n                        srcVal = obj1[item] = [];\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (skipUndef && tgtVal === undefined) {\n                    continue;\n                }\n                obj1[item] = tgtVal;\n            }\n        }\n    }\n    return obj1;\n}\n\n\nfunction extend2 (obj1, obj2, skipUndef) {\n    //if none of the arguments are object then return back\n    if (typeof obj1 !== OBJECTSTRING && typeof obj2 !== OBJECTSTRING) {\n        return null;\n    }\n\n    if (typeof obj2 !== OBJECTSTRING || obj2 === null) {\n        return obj1;\n    }\n\n    if (typeof obj1 !== OBJECTSTRING) {\n        obj1 = obj2 instanceof Array ? [] : {};\n    }\n    merge(obj1, obj2, skipUndef);\n    return obj1;\n}\n\nexport { extend2 as default };\n","import { DataFormat } from '../enums';\n\n/**\n * Checks whether the value is an array.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an array otherwise returns false.\n */\nexport function isArray (val) {\n    return Array.isArray(val);\n}\n\n/**\n * Checks whether the value is an object.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an object otherwise returns false.\n */\nexport function isObject (val) {\n    return val === Object(val);\n}\n\n/**\n * Checks whether the value is a string value.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is a string value otherwise returns false.\n */\nexport function isString (val) {\n    return typeof val === 'string';\n}\n\n/**\n * Checks whether the value is callable.\n *\n * @param {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is callable otherwise returns false.\n */\nexport function isCallable (val) {\n    return typeof val === 'function';\n}\n\n/**\n * Returns the unique values from the input array.\n *\n * @param {Array} data - The input array.\n * @return {Array} Returns a new array of unique values.\n */\nexport function uniqueValues (data) {\n    return [...new Set(data)];\n}\n\nexport const getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function isArrEqual(arr1, arr2) {\n    if (!isArray(arr1) || !isArray(arr2)) {\n        return arr1 === arr2;\n    }\n\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * It is the default number format function for the measure field type.\n *\n * @param {any} val - The input value.\n * @return {number} Returns a number value.\n */\nexport function formatNumber(val) {\n    return val;\n}\n\n/**\n * Returns the detected data format.\n *\n * @param {any} data - The input data to be tested.\n * @return {string} Returns the data format name.\n */\nexport const detectDataFormat = (data) => {\n    if (isString(data)) {\n        return DataFormat.DSV_STR;\n    } else if (isArray(data) && isArray(data[0])) {\n        return DataFormat.DSV_ARR;\n    } else if (isArray(data) && (data.length === 0 || isObject(data[0]))) {\n        return DataFormat.FLAT_JSON;\n    }\n    return null;\n};\n","import { FieldType } from './enums';\nimport { getUniqueId } from './utils';\n\nconst fieldStore = {\n    data: {},\n\n    createNamespace (fieldArr, name) {\n        const dataId = name || getUniqueId();\n\n        this.data[dataId] = {\n            name: dataId,\n            fields: fieldArr,\n\n            fieldsObj () {\n                let fieldsObj = this._cachedFieldsObj;\n\n                if (!fieldsObj) {\n                    fieldsObj = this._cachedFieldsObj = {};\n                    this.fields.forEach((field) => {\n                        fieldsObj[field.name()] = field;\n                    });\n                }\n                return fieldsObj;\n            },\n            getMeasure () {\n                let measureFields = this._cachedMeasure;\n\n                if (!measureFields) {\n                    measureFields = this._cachedMeasure = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.MEASURE) {\n                            measureFields[field.name()] = field;\n                        }\n                    });\n                }\n                return measureFields;\n            },\n            getDimension () {\n                let dimensionFields = this._cachedDimension;\n\n                if (!this._cachedDimension) {\n                    dimensionFields = this._cachedDimension = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.DIMENSION) {\n                            dimensionFields[field.name()] = field;\n                        }\n                    });\n                }\n                return dimensionFields;\n            },\n        };\n        return this.data[dataId];\n    },\n};\n\nexport default fieldStore;\n","/**\n * The wrapper class on top of the primitive value of a field.\n *\n * @todo Need to have support for StringValue, NumberValue, DateTimeValue\n * and GeoValue. These types should expose predicate API mostly.\n */\nclass Value {\n\n  /**\n   * Creates new Value instance.\n   *\n   * @param {*} val - the primitive value from the field cell.\n   * @param {string | Field} field - The field from which the value belongs.\n   */\n    constructor (val, field) {\n        Object.defineProperty(this, '_value', {\n            enumerable: false,\n            configurable: false,\n            writable: false,\n            value: val\n        });\n\n        this.field = field;\n    }\n\n  /**\n   * Returns the field value.\n   *\n   * @return {*} Returns the current value.\n   */\n    get value () {\n        return this._value;\n    }\n\n  /**\n   * Converts to human readable string.\n   *\n   * @override\n   * @return {string} Returns a human readable string of the field value.\n   *\n   */\n    toString () {\n        return String(this.value);\n    }\n\n  /**\n   * Returns the value of the field.\n   *\n   * @override\n   * @return {*} Returns the field value.\n   */\n    valueOf () {\n        return this.value;\n    }\n}\n\nexport default Value;\n","/**\n * Iterates through the diffSet array and call the callback with the current\n * index.\n *\n * @param {string} rowDiffset - The row diffset string e.g. '0-4,6,10-13'.\n * @param {Function} callback - The callback function to be called with every index.\n */\nexport function rowDiffsetIterator (rowDiffset, callback) {\n    if (rowDiffset.length > 0) {\n        const rowDiffArr = rowDiffset.split(',');\n        rowDiffArr.forEach((diffStr) => {\n            const diffStsArr = diffStr.split('-');\n            const start = +(diffStsArr[0]);\n            const end = +(diffStsArr[1] || diffStsArr[0]);\n            if (end >= start) {\n                for (let i = start; i <= end; i += 1) {\n                    callback(i);\n                }\n            }\n        });\n    }\n}\n","/**\n * The helper function that returns an array of common schema\n * from two fieldStore instances.\n *\n * @param {FieldStore} fs1 - The first FieldStore instance.\n * @param {FieldStore} fs2 - The second FieldStore instance.\n * @return {Array} An array containing the common schema.\n */\nexport function getCommonSchema (fs1, fs2) {\n    const retArr = [];\n    const fs1Arr = [];\n    fs1.fields.forEach((field) => {\n        fs1Arr.push(field.schema().name);\n    });\n    fs2.fields.forEach((field) => {\n        if (fs1Arr.indexOf(field.schema().name) !== -1) {\n            retArr.push(field.schema().name);\n        }\n    });\n    return retArr;\n}\n","export { DataFormat, FilteringMode } from '../enums';\n/**\n * The event name for data propagation.\n */\nexport const PROPAGATION = 'propagation';\n\n/**\n * The name of the unique row id column in DataModel.\n */\nexport const ROW_ID = '__id__';\n\n/**\n * The enums for operation names performed on DataModel.\n */\nexport const DM_DERIVATIVES = {\n    SELECT: 'select',\n    PROJECT: 'project',\n    GROUPBY: 'group',\n    COMPOSE: 'compose',\n    CAL_VAR: 'calculatedVariable',\n    BIN: 'bin'\n};\n\nexport const JOINS = {\n    CROSS: 'cross',\n    LEFTOUTER: 'leftOuter',\n    RIGHTOUTER: 'rightOuter',\n    NATURAL: 'natural',\n    FULLOUTER: 'fullOuter'\n};\n\nexport const LOGICAL_OPERATORS = {\n    AND: 'and',\n    OR: 'or'\n};\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { getCommonSchema } from './get-common-schema';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { JOINS } from '../constants';\nimport { prepareJoinData } from '../helper';\n/**\n * Default filter function for crossProduct.\n *\n * @return {boolean} Always returns true.\n */\nfunction defaultFilterFn() { return true; }\n\n/**\n * Implementation of cross product operation between two DataModel instances.\n * It internally creates the data and schema for the new DataModel.\n *\n * @param {DataModel} dataModel1 - The left DataModel instance.\n * @param {DataModel} dataModel2 - The right DataModel instance.\n * @param {Function} filterFn - The filter function which is used to filter the tuples.\n * @param {boolean} [replaceCommonSchema=false] - The flag if the common name schema should be there.\n * @return {DataModel} Returns The newly created DataModel instance from the crossProduct operation.\n */\nexport function crossProduct (dm1, dm2, filterFn, replaceCommonSchema = false, jointype = JOINS.CROSS) {\n    const schema = [];\n    const data = [];\n    const applicableFilterFn = filterFn || defaultFilterFn;\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreName = dm1FieldStore.name;\n    const dm2FieldStoreName = dm2FieldStore.name;\n    const name = `${dm1FieldStore.name}.${dm2FieldStore.name}`;\n    const commonSchemaList = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    if (dm1FieldStoreName === dm2FieldStoreName) {\n        throw new Error('DataModels must have different alias names');\n    }\n    // Here prepare the schema\n    dm1FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1 && !replaceCommonSchema) {\n            tmpSchema.name = `${dm1FieldStore.name}.${tmpSchema.name}`;\n        }\n        schema.push(tmpSchema);\n    });\n    dm2FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1) {\n            if (!replaceCommonSchema) {\n                tmpSchema.name = `${dm2FieldStore.name}.${tmpSchema.name}`;\n                schema.push(tmpSchema);\n            }\n        } else {\n            schema.push(tmpSchema);\n        }\n    });\n\n    // Here prepare Data\n    rowDiffsetIterator(dm1._rowDiffset, (i) => {\n        let rowAdded = false;\n        let rowPosition;\n        rowDiffsetIterator(dm2._rowDiffset, (ii) => {\n            const tuple = [];\n            const userArg = {};\n            userArg[dm1FieldStoreName] = {};\n            userArg[dm2FieldStoreName] = {};\n            dm1FieldStore.fields.forEach((field) => {\n                tuple.push(field.partialField.data[i]);\n                userArg[dm1FieldStoreName][field.name()] = field.partialField.data[i];\n            });\n            dm2FieldStore.fields.forEach((field) => {\n                if (!(commonSchemaList.indexOf(field.schema().name) !== -1 && replaceCommonSchema)) {\n                    tuple.push(field.partialField.data[ii]);\n                }\n                userArg[dm2FieldStoreName][field.name()] = field.partialField.data[ii];\n            });\n\n            let cachedStore = {};\n            let cloneProvider1 = () => dm1.detachedRoot();\n            let cloneProvider2 = () => dm2.detachedRoot();\n\n            const dm1Fields = prepareJoinData(userArg[dm1FieldStoreName]);\n            const dm2Fields = prepareJoinData(userArg[dm2FieldStoreName]);\n            if (applicableFilterFn(dm1Fields, dm2Fields, cloneProvider1, cloneProvider2, cachedStore)) {\n                const tupleObj = {};\n                tuple.forEach((cellVal, iii) => {\n                    tupleObj[schema[iii].name] = cellVal;\n                });\n                if (rowAdded && JOINS.CROSS !== jointype) {\n                    data[rowPosition] = tupleObj;\n                }\n                else {\n                    data.push(tupleObj);\n                    rowAdded = true;\n                    rowPosition = i;\n                }\n            } else if ((jointype === JOINS.LEFTOUTER || jointype === JOINS.RIGHTOUTER) && !rowAdded) {\n                const tupleObj = {};\n                let len = dm1FieldStore.fields.length - 1;\n                tuple.forEach((cellVal, iii) => {\n                    if (iii <= len) {\n                        tupleObj[schema[iii].name] = cellVal;\n                    }\n                    else {\n                        tupleObj[schema[iii].name] = null;\n                    }\n                });\n                rowAdded = true;\n                rowPosition = i;\n                data.push(tupleObj);\n            }\n        });\n    });\n\n    return new DataModel(data, schema, { name });\n}\n","/**\n * The default sort function.\n *\n * @param {*} a - The first value.\n * @param {*} b - The second value.\n * @return {number} Returns the comparison result e.g. 1 or 0 or -1.\n */\nfunction defSortFn (a, b) {\n    const a1 = `${a}`;\n    const b1 = `${b}`;\n    if (a1 < b1) {\n        return -1;\n    }\n    if (a1 > b1) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * The helper function for merge sort which creates the sorted array\n * from the two halves of the input array.\n *\n * @param {Array} arr - The target array which needs to be merged.\n * @param {number} lo - The starting index of the first array half.\n * @param {number} mid - The ending index of the first array half.\n * @param {number} hi - The ending index of the second array half.\n * @param {Function} sortFn - The sort function.\n */\nfunction merge (arr, lo, mid, hi, sortFn) {\n    const mainArr = arr;\n    const auxArr = [];\n    for (let i = lo; i <= hi; i += 1) {\n        auxArr[i] = mainArr[i];\n    }\n    let a = lo;\n    let b = mid + 1;\n\n    for (let i = lo; i <= hi; i += 1) {\n        if (a > mid) {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        } else if (b > hi) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else if (sortFn(auxArr[a], auxArr[b]) <= 0) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        }\n    }\n}\n\n/**\n * The helper function for merge sort which would be called\n * recursively for sorting the array halves.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {number} lo - The starting index of the array half.\n * @param {number} hi - The ending index of the array half.\n * @param {Function} sortFn - The sort function.\n * @return {Array} Returns the target array itself.\n */\nfunction sort (arr, lo, hi, sortFn) {\n    if (hi === lo) { return arr; }\n\n    const mid = lo + Math.floor((hi - lo) / 2);\n    sort(arr, lo, mid, sortFn);\n    sort(arr, mid + 1, hi, sortFn);\n    merge(arr, lo, mid, hi, sortFn);\n\n    return arr;\n}\n\n/**\n * The implementation of merge sort.\n * It is used in DataModel for stable sorting as it is not sure\n * what the sorting algorithm used by browsers is stable or not.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {Function} [sortFn=defSortFn] - The sort function.\n * @return {Array} Returns the input array itself in sorted order.\n */\nexport function mergeSort (arr, sortFn = defSortFn) {\n    if (arr.length > 1) {\n        sort(arr, 0, arr.length - 1, sortFn);\n    }\n    return arr;\n}\n","import { DimensionSubtype, MeasureSubtype } from '../enums';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { mergeSort } from './merge-sort';\nimport { fieldInSchema } from '../helper';\nimport { isCallable, isArray, } from '../utils';\n/**\n * Generates the sorting functions to sort the data of a DataModel instance\n * according to the input data type.\n *\n * @param {string} dataType - The data type e.g. 'measure', 'datetime' etc.\n * @param {string} sortType - The sorting order i.e. 'asc' or 'desc'.\n * @param {integer} index - The index of the data which will be sorted.\n * @return {Function} Returns the the sorting function.\n */\nfunction getSortFn (dataType, sortType, index) {\n    let retFunc;\n    switch (dataType) {\n    case MeasureSubtype.CONTINUOUS:\n    case DimensionSubtype.TEMPORAL:\n        if (sortType === 'desc') {\n            retFunc = (a, b) => b[index] - a[index];\n        } else {\n            retFunc = (a, b) => a[index] - b[index];\n        }\n        break;\n    default:\n        retFunc = (a, b) => {\n            const a1 = `${a[index]}`;\n            const b1 = `${b[index]}`;\n            if (a1 < b1) {\n                return sortType === 'desc' ? 1 : -1;\n            }\n            if (a1 > b1) {\n                return sortType === 'desc' ? -1 : 1;\n            }\n            return 0;\n        };\n    }\n    return retFunc;\n}\n\n/**\n * Groups the data according to the specified target field.\n *\n * @param {Array} data - The input data array.\n * @param {number} fieldIndex - The target field index within schema array.\n * @return {Array} Returns an array containing the grouped data.\n */\nfunction groupData(data, fieldIndex) {\n    const hashMap = new Map();\n    const groupedData = [];\n\n    data.forEach((datum) => {\n        const fieldVal = datum[fieldIndex];\n        if (hashMap.has(fieldVal)) {\n            groupedData[hashMap.get(fieldVal)][1].push(datum);\n        } else {\n            groupedData.push([fieldVal, [datum]]);\n            hashMap.set(fieldVal, groupedData.length - 1);\n        }\n    });\n\n    return groupedData;\n}\n\n/**\n * Creates the argument value used for sorting function when sort is done\n * with another fields.\n *\n * @param {Array} groupedDatum - The grouped datum for a single dimension field value.\n * @param {Array} targetFields - An array of the sorting fields.\n * @param {Array} targetFieldDetails - An array of the sorting field details in schema.\n * @return {Object} Returns an object containing the value of sorting fields and the target field name.\n */\nfunction createSortingFnArg(groupedDatum, targetFields, targetFieldDetails) {\n    const arg = {\n        label: groupedDatum[0]\n    };\n\n    targetFields.reduce((acc, next, idx) => {\n        acc[next] = groupedDatum[1].map(datum => datum[targetFieldDetails[idx].index]);\n        return acc;\n    }, arg);\n\n    return arg;\n}\n\n/**\n * Sorts the data before return in dataBuilder.\n *\n * @param {Object} dataObj - An object containing the data and schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nfunction sortData(dataObj, sortingDetails) {\n    const { data, schema } = dataObj;\n    let fieldName;\n    let sortMeta;\n    let fDetails;\n    let i = sortingDetails.length - 1;\n\n    for (; i >= 0; i--) {\n        fieldName = sortingDetails[i][0];\n        sortMeta = sortingDetails[i][1];\n        fDetails = fieldInSchema(schema, fieldName);\n\n        if (!fDetails) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        if (isCallable(sortMeta)) {\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortMeta(a[fDetails.index], b[fDetails.index]));\n        } else if (isArray(sortMeta)) {\n            const groupedData = groupData(data, fDetails.index);\n            const sortingFn = sortMeta[sortMeta.length - 1];\n            const targetFields = sortMeta.slice(0, sortMeta.length - 1);\n            const targetFieldDetails = targetFields.map(f => fieldInSchema(schema, f));\n\n            groupedData.forEach((groupedDatum) => {\n                groupedDatum.push(createSortingFnArg(groupedDatum, targetFields, targetFieldDetails));\n            });\n\n            mergeSort(groupedData, (a, b) => {\n                const m = a[2];\n                const n = b[2];\n                return sortingFn(m, n);\n            });\n\n            // Empty the array\n            data.length = 0;\n            groupedData.forEach((datum) => {\n                data.push(...datum[1]);\n            });\n        } else {\n            sortMeta = String(sortMeta).toLowerCase() === 'desc' ? 'desc' : 'asc';\n            mergeSort(data, getSortFn(fDetails.type, sortMeta, fDetails.index));\n        }\n    }\n\n    dataObj.uids = [];\n    data.forEach((value) => {\n        dataObj.uids.push(value.pop());\n    });\n}\n\n\n/**\n * Builds the actual data array.\n *\n * @param {Array} fieldStore - An array of field.\n * @param {string} rowDiffset - A string consisting of which rows to be included eg. '0-2,4,6';\n * @param {string} colIdentifier - A string consisting of the details of which column\n * to be included eg 'date,sales,profit';\n * @param {Object} sortingDetails - An object containing the sorting details of the DataModel instance.\n * @param {Object} options - The options required to create the type of the data.\n * @return {Object} Returns an object containing the multidimensional array and the relative schema.\n */\nexport function dataBuilder (fieldStore, rowDiffset, colIdentifier, sortingDetails, options) {\n    const defOptions = {\n        addUid: false,\n        columnWise: false\n    };\n    options = Object.assign({}, defOptions, options);\n\n    const retObj = {\n        schema: [],\n        data: [],\n        uids: []\n    };\n    const addUid = options.addUid;\n    const reqSorting = sortingDetails && sortingDetails.length > 0;\n    // It stores the fields according to the colIdentifier argument\n    const tmpDataArr = [];\n    // Stores the fields according to the colIdentifier argument\n    const colIArr = colIdentifier.split(',');\n\n    colIArr.forEach((colName) => {\n        for (let i = 0; i < fieldStore.length; i += 1) {\n            if (fieldStore[i].name() === colName) {\n                tmpDataArr.push(fieldStore[i]);\n                break;\n            }\n        }\n    });\n\n    // Inserts the schema to the schema object\n    tmpDataArr.forEach((field) => {\n        /** @todo Need to use extend2 here otherwise user can overwrite the schema. */\n        retObj.schema.push(field.schema());\n    });\n\n    if (addUid) {\n        retObj.schema.push({\n            name: 'uid',\n            type: 'identifier'\n        });\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        retObj.data.push([]);\n        const insertInd = retObj.data.length - 1;\n        let start = 0;\n        tmpDataArr.forEach((field, ii) => {\n            retObj.data[insertInd][ii + start] = field.partialField.data[i];\n        });\n        if (addUid) {\n            retObj.data[insertInd][tmpDataArr.length] = i;\n        }\n        // Creates an array of unique identifiers for each row\n        retObj.uids.push(i);\n\n        // If sorting needed then there is the need to expose the index\n        // mapping from the old index to its new index\n        if (reqSorting) { retObj.data[insertInd].push(i); }\n    });\n\n    // Handles the sort functionality\n    if (reqSorting) {\n        sortData(retObj, sortingDetails);\n    }\n\n    if (options.columnWise) {\n        const tmpData = Array(...Array(retObj.schema.length)).map(() => []);\n        retObj.data.forEach((tuple) => {\n            tuple.forEach((data, i) => {\n                tmpData[i].push(data);\n            });\n        });\n        retObj.data = tmpData;\n    }\n\n    return retObj;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n\n/**\n * Performs the union operation between two dm instances.\n *\n * @todo Fix the conflicts between union and difference terminology here.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function difference (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n   // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     * @param {boolean} addData - If true only tuple will be added to the data.\n     */\n    function prepareDataHelper(dm, fieldsObj, addData) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                if (addData) { data.push(tuple); }\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj, false);\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj, true);\n\n    return new DataModel(data, schema, { name });\n}\n\n","import { isArray } from '../utils';\n\n/**\n * Reducer function that returns the sum of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the sum of the array.\n */\nfunction sum (arr) {\n    if (isArray(arr)) {\n        const totalSum = arr.reduce((acc, curr) =>\n            ((curr === null || curr === undefined) ? acc : acc + +curr)\n        , null);\n\n        return Number.isNaN(totalSum) ? null : totalSum;\n    }\n    return null;\n}\n\n/**\n * Reducer function that returns the average of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the mean value of the array.\n */\nfunction avg (arr) {\n    if (isArray(arr)) {\n        const totalSum = sum(arr);\n        const len = arr.length || 1;\n        return (Number.isNaN(totalSum) || totalSum === null) ? null : totalSum / len;\n    }\n    return null;\n}\n\n/**\n * Reducer function that gives the min value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the minimum value of the array.\n */\nfunction min (arr) {\n    if (isArray(arr)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = arr.filter(num =>\n            !(num === undefined || num === null || Number.isNaN(+num)));\n\n        return (filteredValues.length) ? Math.min(...filteredValues) : null;\n    }\n    return null;\n}\n\n/**\n * Reducer function that gives the max value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the maximum value of the array.\n */\nfunction max (arr) {\n    if (isArray(arr)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = arr.filter(num =>\n            !(num === undefined || num === null || Number.isNaN(+num)));\n\n        return (filteredValues.length) ? Math.max(...filteredValues) : null;\n    }\n    return null;\n}\n\n/**\n * Reducer function that gives the first value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the first value of the array.\n */\nfunction first (arr) {\n    return arr[0];\n}\n\n/**\n * Reducer function that gives the last value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the last value of the array.\n */\nfunction last (arr) {\n    return arr[arr.length - 1];\n}\n\n/**\n * Reducer function that gives the count value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the length of the array.\n */\nfunction count (arr) {\n    if (isArray(arr)) {\n        return arr.length;\n    }\n    return null;\n}\n\n/**\n * Calculates the variance of the input array.\n *\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the variance of the input array.\n */\nfunction variance (arr) {\n    let mean = avg(arr);\n    return avg(arr.map(num => (num - mean) ** 2));\n}\n\n/**\n * Calculates the square root of the variance of the input array.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the square root of the variance.\n */\nfunction std (arr) {\n    return Math.sqrt(variance(arr));\n}\n\n\nconst fnList = {\n    sum,\n    avg,\n    min,\n    max,\n    first,\n    last,\n    count,\n    std\n};\n\nconst defaultReducerName = 'sum';\n\nexport {\n    defaultReducerName,\n    sum as defReducer,\n    fnList,\n};\n","import { defReducer, fnList } from '../operator';\n\n/**\n * A page level storage which stores, registers, unregisters reducers for all the datamodel instances. There is only one\n * reducer store available in a page. All the datamodel instances receive same instance of reducer store. DataModel\n * out of the box provides handful of {@link reducer | reducers} which can be used as reducer funciton.\n *\n * @public\n * @namespace DataModel\n */\nclass ReducerStore {\n    constructor () {\n        this.store = new Map();\n        this.store.set('defReducer', defReducer);\n\n        Object.entries(fnList).forEach((key) => {\n            this.store.set(key[0], key[1]);\n        });\n    }\n\n    /**\n     * Changes the `defaultReducer` globally. For all the fields which does not have `defAggFn` mentioned in schema, the\n     * value of `defaultReducer` is used for aggregation.\n     *\n     * @public\n     * @param {string} [reducer='sum'] - The name of the default reducer. It picks up the definition from store by doing\n     * name lookup. If no name is found then it takes `sum` as the default reducer.\n     * @return {ReducerStore} Returns instance of the singleton store in page.\n     */\n    defaultReducer (...params) {\n        if (!params.length) {\n            return this.store.get('defReducer');\n        }\n\n        let reducer = params[0];\n\n        if (typeof reducer === 'function') {\n            this.store.set('defReducer', reducer);\n        } else {\n            reducer = String(reducer);\n            if (Object.keys(fnList).indexOf(reducer) !== -1) {\n                this.store.set('defReducer', fnList[reducer]);\n            } else {\n                throw new Error(`Reducer ${reducer} not found in registry`);\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     * Registers a {@link reducer | reducer}.\n     * A {@link reducer | reducer} has to be registered before it is used.\n     *\n     * @example\n     *  // find the mean squared value of a given set\n     *  const reducerStore = DataModel.Reducers();\n     *\n     *  reducers.register('meanSquared', (arr) => {\n     *      const squaredVal = arr.map(item => item * item);\n     *      let sum = 0;\n     *      for (let i = 0, l = squaredVal.length; i < l; i++) {\n     *          sum += squaredVal[i++];\n     *      }\n     *\n     *      return sum;\n     *  })\n     *\n     *  // datamodel (dm) is already prepared with cars.json\n     *  const dm1 = dm.groupBy(['origin'], {\n     *      accleration: 'meanSquared'\n     *  });\n     *\n     * @public\n     *\n     * @param {string} name formal name for a reducer. If the given name already exists in store it is overridden by new\n     *      definition.\n     * @param {Function} reducer definition of {@link reducer} function.\n     *\n     * @return {Function} function for unregistering the reducer.\n     */\n    register (name, reducer) {\n        if (typeof reducer !== 'function') {\n            throw new Error('Reducer should be a function');\n        }\n\n        name = String(name);\n        this.store.set(name, reducer);\n\n        return () => { this.__unregister(name); };\n    }\n\n    __unregister (name) {\n        if (this.store.has(name)) {\n            this.store.delete(name);\n        }\n    }\n\n    resolve (name) {\n        if (name instanceof Function) {\n            return name;\n        }\n        return this.store.get(name);\n    }\n}\n\nconst reducerStore = (function () {\n    let store = null;\n\n    function getStore () {\n        if (store === null) {\n            store = new ReducerStore();\n        }\n        return store;\n    }\n    return getStore();\n}());\n\nexport default reducerStore;\n","import { getCommonSchema } from './get-common-schema';\n\n/**\n * The filter function used in natural join.\n * It generates a function that will have the logic to join two\n * DataModel instances by the process of natural join.\n *\n * @param {DataModel} dm1 - The left DataModel instance.\n * @param {DataModel} dm2 - The right DataModel instance.\n * @return {Function} Returns a function that is used in cross-product operation.\n */\nexport function naturalJoinFilter (dm1, dm2) {\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    // const dm1FieldStoreName = dm1FieldStore.name;\n    // const dm2FieldStoreName = dm2FieldStore.name;\n    const commonSchemaArr = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    return (dm1Fields, dm2Fields) => {\n        let retainTuple = true;\n        commonSchemaArr.forEach((fieldName) => {\n            if (dm1Fields[fieldName].value ===\n                dm2Fields[fieldName].value && retainTuple) {\n                retainTuple = true;\n            } else {\n                retainTuple = false;\n            }\n        });\n        return retainTuple;\n    };\n}\n","import DataModel from '../export';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n/**\n * Performs the union operation between two dm instances.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function union (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n    // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     */\n    function prepareDataHelper (dm, fieldsObj) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                data.push(tuple);\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj);\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj);\n\n    return new DataModel(data, schema, { name });\n}\n","import { crossProduct } from './cross-product';\nimport { JOINS } from '../constants';\nimport { union } from './union';\n\n\nexport function leftOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel1, dataModel2, filterFn, false, JOINS.LEFTOUTER);\n}\n\nexport function rightOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel2, dataModel1, filterFn, false, JOINS.RIGHTOUTER);\n}\n\nexport function fullOuterJoin (dataModel1, dataModel2, filterFn) {\n    return union(leftOuterJoin(dataModel1, dataModel2, filterFn), rightOuterJoin(dataModel1, dataModel2, filterFn));\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\n\n/**\n * In {@link DataModel}, every tabular data consists of column, a column is stored as field.\n * Field contains all the data for a given column in an array.\n *\n * Each record consists of several fields; the fields of all records form the columns.\n * Examples of fields: name, gender, sex etc.\n *\n * In DataModel, each field can have multiple attributes which describes its data and behaviour.\n * A field can have two types of data: Measure and Dimension.\n *\n * A Dimension Field is the context on which a data is categorized and the measure is the numerical values that\n * quantify the data set.\n * In short a dimension is the lens through which you are looking at your measure data.\n *\n * Refer to {@link Schema} to get info about possible field attributes.\n *\n * @public\n * @class\n */\nexport default class Field {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        this.partialField = partialField;\n        this.rowDiffset = rowDiffset;\n    }\n\n    /**\n     * Generates the field type specific domain.\n     *\n     * @public\n     * @abstract\n     */\n    domain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the the field schema.\n     *\n     * @public\n     * @return {string} Returns the field schema.\n     */\n    schema () {\n        return this.partialField.schema;\n    }\n\n    /**\n     * Returns the name of the field.\n     *\n     * @public\n     * @return {string} Returns the name of the field.\n     */\n    name () {\n        return this.partialField.name;\n    }\n\n    /**\n     * Returns the type of the field.\n     *\n     * @public\n     * @return {string} Returns the type of the field.\n     */\n    type () {\n        return this.partialField.schema.type;\n    }\n\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return this.partialField.schema.subtype;\n    }\n\n    /**\n     * Returns the description of the field.\n     *\n     * @public\n     * @return {string} Returns the description of the field.\n     */\n    description () {\n        return this.partialField.schema.description;\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @public\n     * @return {string} Returns the display name of the field.\n     */\n    displayName () {\n        return this.partialField.schema.displayName || this.partialField.schema.name;\n    }\n\n    /**\n     * Returns the data associated with the field.\n     *\n     * @public\n     * @return {Array} Returns the data.\n     */\n    data () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            data.push(this.partialField.data[i]);\n        });\n        return data;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @abstract\n     */\n    formattedData () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import Field from '../field';\n\n/**\n * Represents dimension field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Dimension extends Field {\n    /**\n     * Returns the domain for the dimension field.\n     *\n     * @override\n     * @public\n     * @return {any} Returns the calculated domain.\n     */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @abstract\n     */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n     /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { DimensionSubtype } from '../../enums';\nimport Dimension from '../dimension';\n\n/**\n * Represents categorical field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Categorical extends Dimension {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return DimensionSubtype.CATEGORICAL;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum === null) {\n                return;\n            }\n\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n        return domain;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport Dimension from '../dimension';\nimport { DateTimeFormatter } from '../../utils';\n\n/**\n * Represents temporal field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Temporal extends Dimension {\n     /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        super(partialField, rowDiffset);\n\n        this._cachedMinDiff = null;\n    }\n\n     /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be\n        // occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum === null) {\n                return;\n            }\n\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n\n        return domain;\n    }\n\n\n    /**\n     * Calculates the minimum consecutive difference from the associated field data.\n     *\n     * @public\n     * @return {number} Returns the minimum consecutive diff in milliseconds.\n     */\n    minimumConsecutiveDifference () {\n        if (this._cachedMinDiff) {\n            return this._cachedMinDiff;\n        }\n\n        const sortedData = this.data().sort((a, b) => a - b);\n        const arrLn = sortedData.length;\n        let minDiff = Number.POSITIVE_INFINITY;\n        let prevDatum;\n        let nextDatum;\n        let processedCount = 0;\n\n        for (let i = 1; i < arrLn; i++) {\n            prevDatum = sortedData[i - 1];\n            nextDatum = sortedData[i];\n\n            if (nextDatum === prevDatum) {\n                continue;\n            }\n\n            minDiff = Math.min(minDiff, nextDatum - sortedData[i - 1]);\n            processedCount++;\n        }\n\n        if (!processedCount) {\n            minDiff = null;\n        }\n        this._cachedMinDiff = minDiff;\n\n        return this._cachedMinDiff;\n    }\n\n    /**\n     * Returns the format specified in the input schema while creating field.\n     *\n     * @public\n     * @return {string} Returns the datetime format.\n     */\n    format () {\n        return this.partialField.schema.format;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum === null) {\n                data.push(null);\n            } else {\n                data.push(DateTimeFormatter.formatAs(datum, this.format()));\n            }\n        });\n        return data;\n    }\n}\n\n","import Dimension from '../dimension';\n\n/**\n * Represents binned field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Binned extends Dimension {\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the last and first values of bins config array.\n     */\n    calculateDataDomain () {\n        const binsArr = this.partialField.schema.bins;\n        return [binsArr[0], binsArr[binsArr.length - 1]];\n    }\n\n    /**\n     * Returns the bins config provided while creating the field instance.\n     *\n     * @public\n     * @return {Array} Returns the bins array config.\n     */\n    bins () {\n        return this.partialField.schema.bins;\n    }\n}\n","import { formatNumber } from '../../utils';\nimport { defaultReducerName } from '../../operator/group-by-function';\nimport Field from '../field';\n\n/**\n * Represents measure field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Measure extends Field {\n  /**\n   * Returns the domain for the measure field.\n   *\n   * @override\n   * @public\n   * @return {any} Returns the calculated domain.\n   */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n  /**\n   * Returns the unit of the measure field.\n   *\n   * @public\n   * @return {string} Returns unit of the field.\n   */\n    unit () {\n        return this.partialField.schema.unit;\n    }\n\n  /**\n   * Returns the aggregation function name of the measure field.\n   *\n   * @public\n   * @return {string} Returns aggregation function name of the field.\n   */\n    defAggFn () {\n        return this.partialField.schema.defAggFn || defaultReducerName;\n    }\n\n  /**\n   * Returns the number format of the measure field.\n   *\n   * @public\n   * @return {Function} Returns number format of the field.\n   */\n    numberFormat () {\n        const { numberFormat } = this.partialField.schema;\n        return numberFormat instanceof Function ? numberFormat : formatNumber;\n    }\n\n  /**\n   * Calculates the corresponding field domain.\n   *\n   * @public\n   * @abstract\n   */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { MeasureSubtype } from '../../enums';\nimport Measure from '../measure';\n\n/**\n * Represents continuous field subtype.\n *\n * @public\n * @class\n * @extends Measure\n */\nexport default class Continuous extends Measure {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return MeasureSubtype.CONTINUOUS;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the min and max values.\n     */\n    calculateDataDomain () {\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum === null) {\n                return;\n            }\n\n            if (datum < min) {\n                min = datum;\n            }\n            if (datum > max) {\n                max = datum;\n            }\n        });\n\n        return [min, max];\n    }\n}\n","/**\n * A interface to represent a parser which is responsible to parse the field.\n *\n * @public\n * @interface\n */\nexport default class FieldParser {\n    /**\n     * Parses a single value of a field and return the sanitized form.\n     *\n     * @public\n     * @abstract\n     */\n    parse () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import FieldParser from '../field-parser';\n\n/**\n * A FieldParser which parses the categorical values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class CategoricalParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the stringified form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the stringified value.\n   */\n    parse (val) {\n        return (val === undefined || val === null) ? null : String(val).trim();\n    }\n}\n","import { DateTimeFormatter } from '../../../utils';\nimport FieldParser from '../field-parser';\n\n/**\n * A FieldParser which parses the temporal values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class TemporalParser extends FieldParser {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {Object} schema - The schema object for the corresponding field.\n     */\n    constructor (schema) {\n        super();\n        this.schema = schema;\n        this._dtf = null;\n    }\n\n    /**\n     * Parses a single value of a field and returns the millisecond value.\n     *\n     * @public\n     * @param {string|number} val - The value of the field.\n     * @return {number} Returns the millisecond value.\n     */\n    parse (val) {\n        if (val === null || val === undefined) {\n            return null;\n        }\n\n        if (this.schema.format) {\n            this._dtf = this._dtf || new DateTimeFormatter(this.schema.format);\n            return this._dtf.getNativeDate(val).getTime();\n        }\n\n        // If format is not present which means the value is such that\n        // it could be directly passed to Date constructor.\n        return +new Date(val);\n    }\n}\n","import FieldParser from '../field-parser';\n\n/**\n * A FieldParser which parses the binned values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class BinnedParser extends FieldParser {\n  /**\n   * Parses a single binned value of a field and returns the sanitized value.\n   *\n   * @public\n   * @param {string} val - The value of the field.\n   * @return {string} Returns the sanitized value.\n   */\n    parse (val) {\n        if (val === null || val === undefined) {\n            return null;\n        }\n\n        const regex = /^\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*-\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*$/;\n        val = String(val);\n\n        const matched = val.match(regex);\n        if (!matched) {\n            return null;\n        }\n\n        return `${Number.parseFloat(matched[1])}-${Number.parseFloat(matched[2])}`;\n    }\n}\n","import FieldParser from '../field-parser';\n\n/**\n * A FieldParser which parses the continuous values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class ContinuousParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the number form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the number value.\n   */\n    parse (val) {\n        val = parseFloat(val, 10);\n        return Number.isNaN(val) ? null : val;\n    }\n}\n","/**\n * Stores the full data and the metadata of a field. It provides\n * a single source of data from which the future Field\n * instance can get a subset of it with a rowDiffset config.\n *\n * @class\n * @public\n */\nexport default class PartialField {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} name - The name of the field.\n     * @param {Array} data - The data array.\n     * @param {Object} schema - The schema object of the corresponding field.\n     * @param {FieldParser} parser - The parser instance corresponding to that field.\n     */\n    constructor (name, data, schema, parser) {\n        this.name = name;\n        this.schema = schema;\n        this.parser = parser;\n        this.data = this._sanitize(data);\n    }\n\n    /**\n     * Sanitizes the field data.\n     *\n     * @private\n     * @param {Array} data - The actual input data.\n     * @return {Array} Returns the sanitized data.\n     */\n    _sanitize (data) {\n        return data.map(datum => this.parser.parse(datum));\n    }\n}\n","import { FieldType, DimensionSubtype, MeasureSubtype } from './enums';\nimport {\n    Categorical,\n    Temporal,\n    Binned,\n    Continuous,\n    CategoricalParser,\n    TemporalParser,\n    BinnedParser,\n    ContinuousParser,\n    PartialField\n} from './fields';\n\n/**\n * Creates a field instance according to the provided data and schema.\n *\n * @param {Array} data - The field data array.\n * @param {Object} schema - The field schema object.\n * @return {Field} Returns the newly created field instance.\n */\nfunction createUnitField(data, schema) {\n    data = data || [];\n    let partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.TEMPORAL:\n            partialField = new PartialField(schema.name, data, schema, new TemporalParser(schema));\n            return new Temporal(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.BINNED:\n            partialField = new PartialField(schema.name, data, schema, new BinnedParser());\n            return new Binned(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        }\n    default:\n        partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n        return new Categorical(partialField, `0-${data.length - 1}`);\n    }\n}\n\n\n/**\n * Creates a field instance from partialField and rowDiffset.\n *\n * @param {PartialField} partialField - The corresponding partial field.\n * @param {string} rowDiffset - The data subset config.\n * @return {Field} Returns the newly created field instance.\n */\nexport function createUnitFieldFromPartial(partialField, rowDiffset) {\n    const { schema } = partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            return new Continuous(partialField, rowDiffset);\n        default:\n            return new Continuous(partialField, rowDiffset);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            return new Categorical(partialField, rowDiffset);\n        case DimensionSubtype.TEMPORAL:\n            return new Temporal(partialField, rowDiffset);\n        case DimensionSubtype.BINNED:\n            return new Binned(partialField, rowDiffset);\n        default:\n            return new Categorical(partialField, rowDiffset);\n        }\n    default:\n        return new Categorical(partialField, rowDiffset);\n    }\n}\n\n/**\n * Creates the field instances with input data and schema.\n *\n * @param {Array} dataColumn - The data array for fields.\n * @param {Array} schema - The schema array for fields.\n * @param {Array} headers - The array of header names.\n * @return {Array.<Field>} Returns an array of newly created field instances.\n */\nexport function createFields(dataColumn, schema, headers) {\n    const headersObj = {};\n\n    if (!(headers && headers.length)) {\n        headers = schema.map(item => item.name);\n    }\n\n    headers.forEach((header, i) => {\n        headersObj[header] = i;\n    });\n\n    return schema.map(item => createUnitField(dataColumn[headersObj[item.name]], item));\n}\n","import { DataFormat } from './enums';\n\nexport default {\n    dataFormat: DataFormat.AUTO\n};\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in DSV array to a manageable internal format.\n *\n * @param {Array.<Array>} arr - A 2D array containing of the DSV data.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv data is header or not.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    [\"a\", \"b\", \"c\"],\n *    [1, 2, 3],\n *    [4, 5, 6],\n *    [7, 8, 9]\n * ];\n */\nfunction DSVArr (arr, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    let header;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    if (options.firstRowHeader) {\n        // If header present then mutate the array.\n        // Do in-place mutation to save space.\n        header = arr.splice(0, 1)[0];\n    } else {\n        header = [];\n    }\n\n    arr.forEach(field => push(...field));\n\n    return [header, columns];\n}\n\nexport default DSVArr;\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","import { dsvFormat as d3Dsv } from 'd3-dsv';\nimport DSVArr from './dsv-arr';\n\n/**\n * Parses and converts data formatted in DSV string to a manageable internal format.\n *\n * @todo Support to be given for https://tools.ietf.org/html/rfc4180.\n * @todo Sample implementation https://github.com/knrz/CSV.js/.\n *\n * @param {string} str - The input DSV string.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv string data is header or not.\n * @param {string} [options.fieldSeparator=\",\"] - The separator of two consecutive field.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = `\n * a,b,c\n * 1,2,3\n * 4,5,6\n * 7,8,9\n * `\n */\nfunction DSVStr (str, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n        fieldSeparator: ','\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    const dsv = d3Dsv(options.fieldSeparator);\n    return DSVArr(dsv.parseRows(str), options);\n}\n\nexport default DSVStr;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in JSON to a manageable internal format.\n *\n * @param {Array.<Object>} arr - The input data formatted in JSON.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    {\n *      \"a\": 1,\n *      \"b\": 2,\n *      \"c\": 3\n *    },\n *    {\n *      \"a\": 4,\n *      \"b\": 5,\n *      \"c\": 6\n *    },\n *    {\n *      \"a\": 7,\n *      \"b\": 8,\n *      \"c\": 9\n *    }\n * ];\n */\nfunction FlatJSON (arr) {\n    const header = {};\n    let i = 0;\n    let insertionIndex;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    arr.forEach((item) => {\n        const fields = [];\n        for (let key in item) {\n            if (key in header) {\n                insertionIndex = header[key];\n            } else {\n                header[key] = i++;\n                insertionIndex = i - 1;\n            }\n            fields[insertionIndex] = item[key];\n        }\n        push(...fields);\n    });\n\n    return [Object.keys(header), columns];\n}\n\nexport default FlatJSON;\n","import FlatJSON from './flat-json';\nimport DSVArr from './dsv-arr';\nimport DSVStr from './dsv-str';\nimport { detectDataFormat } from '../utils';\n\n/**\n * Parses the input data and detect the format automatically.\n *\n * @param {string|Array} data - The input data.\n * @param {Object} options - An optional config specific to data format.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n */\nfunction Auto (data, options) {\n    const converters = { FlatJSON, DSVStr, DSVArr };\n    const dataFormat = detectDataFormat(data);\n\n    if (!dataFormat) {\n        throw new Error('Couldn\\'t detect the data format');\n    }\n\n    return converters[dataFormat](data, options);\n}\n\nexport default Auto;\n","import { FieldType, FilteringMode, DimensionSubtype, MeasureSubtype, DataFormat } from './enums';\nimport fieldStore from './field-store';\nimport Value from './value';\nimport {\n    rowDiffsetIterator\n} from './operator';\nimport { DM_DERIVATIVES, LOGICAL_OPERATORS } from './constants';\nimport { createFields, createUnitFieldFromPartial } from './field-creator';\nimport defaultConfig from './default-config';\nimport * as converter from './converter';\nimport { extend2, detectDataFormat } from './utils';\n\n/**\n * Prepares the selection data.\n */\nfunction prepareSelectionData (fields, i) {\n    const resp = {};\n    for (let field of fields) {\n        resp[field.name()] = new Value(field.partialField.data[i], field);\n    }\n    return resp;\n}\n\nexport function prepareJoinData (fields) {\n    const resp = {};\n    Object.keys(fields).forEach((key) => { resp[key] = new Value(fields[key], key); });\n    return resp;\n}\n\nexport const updateFields = ([rowDiffset, colIdentifier], partialFieldspace, fieldStoreName) => {\n    let collID = colIdentifier.length ? colIdentifier.split(',') : [];\n    let partialFieldMap = partialFieldspace.fieldsObj();\n    let newFields = collID.map(coll => createUnitFieldFromPartial(partialFieldMap[coll].partialField, rowDiffset));\n    return fieldStore.createNamespace(newFields, fieldStoreName);\n};\n\nexport const persistDerivation = (model, operation, config = {}, criteriaFn) => {\n    let derivative;\n    if (operation !== DM_DERIVATIVES.COMPOSE) {\n        derivative = {\n            op: operation,\n            meta: config,\n            criteria: criteriaFn\n        };\n        model._derivation.push(derivative);\n    }\n    else {\n        derivative = [...criteriaFn];\n        model._derivation.length = 0;\n        model._derivation.push(...derivative);\n    }\n};\n\nexport const selectHelper = (rowDiffset, fields, selectFn, config, sourceDm) => {\n    const newRowDiffSet = [];\n    let lastInsertedValue = -1;\n    let { mode } = config;\n    let li;\n    let cachedStore = {};\n    let cloneProvider = () => sourceDm.detachedRoot();\n    const selectorHelperFn = index => selectFn(\n        prepareSelectionData(fields, index),\n        index,\n        cloneProvider,\n        cachedStore\n    );\n\n    let checker;\n    if (mode === FilteringMode.INVERSE) {\n        checker = index => !selectorHelperFn(index);\n    } else {\n        checker = index => selectorHelperFn(index);\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        if (checker(i)) {\n            if (lastInsertedValue !== -1 && i === (lastInsertedValue + 1)) {\n                li = newRowDiffSet.length - 1;\n                newRowDiffSet[li] = `${newRowDiffSet[li].split('-')[0]}-${i}`;\n            } else {\n                newRowDiffSet.push(`${i}`);\n            }\n            lastInsertedValue = i;\n        }\n    });\n    return newRowDiffSet.join(',');\n};\n\nexport const filterPropagationModel = (model, propModels, config = {}) => {\n    const operation = config.operation || LOGICAL_OPERATORS.AND;\n    const filterByMeasure = config.filterByMeasure || false;\n    let fns = [];\n    if (!propModels.length) {\n        fns = [() => false];\n    } else {\n        fns = propModels.map(propModel => ((dataModel) => {\n            const dataObj = dataModel.getData();\n            const schema = dataObj.schema;\n            const fieldsConfig = dataModel.getFieldsConfig();\n            const fieldsSpace = dataModel.getFieldspace().fieldsObj();\n            const data = dataObj.data;\n            const domain = Object.values(fieldsConfig).reduce((acc, v) => {\n                acc[v.def.name] = fieldsSpace[v.def.name].domain();\n                return acc;\n            }, {});\n\n            return (fields) => {\n                const include = !data.length ? false : data.some(row => schema.every((propField) => {\n                    if (!(propField.name in fields)) {\n                        return true;\n                    }\n                    const value = fields[propField.name].valueOf();\n                    if (filterByMeasure && propField.type === FieldType.MEASURE) {\n                        return value >= domain[propField.name][0] && value <= domain[propField.name][1];\n                    }\n\n                    if (propField.type !== FieldType.DIMENSION) {\n                        return true;\n                    }\n                    const idx = fieldsConfig[propField.name].index;\n                    return row[idx] === fields[propField.name].valueOf();\n                }));\n                return include;\n            };\n        })(propModel));\n    }\n\n    let filteredModel;\n    if (operation === LOGICAL_OPERATORS.AND) {\n        const clonedModel = model.clone(false, false);\n        filteredModel = clonedModel.select(fields => fns.every(fn => fn(fields)), {\n            saveChild: false,\n            mode: FilteringMode.ALL\n        });\n    } else {\n        filteredModel = model.clone(false, false).select(fields => fns.some(fn => fn(fields)), {\n            mode: FilteringMode.ALL,\n            saveChild: false\n        });\n    }\n\n    return filteredModel;\n};\n\nexport const cloneWithSelect = (sourceDm, selectFn, selectConfig, cloneConfig) => {\n    const cloned = sourceDm.clone(cloneConfig.saveChild);\n    const rowDiffset = selectHelper(\n        cloned._rowDiffset,\n        cloned.getPartialFieldspace().fields,\n        selectFn,\n        selectConfig,\n        sourceDm\n    );\n    cloned._rowDiffset = rowDiffset;\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n    // Store reference to child model and selector function\n    if (cloneConfig.saveChild) {\n        persistDerivation(cloned, DM_DERIVATIVES.SELECT, { config: selectConfig }, selectFn);\n    }\n\n    return cloned;\n};\n\nexport const cloneWithProject = (sourceDm, projField, config, allFields) => {\n    const cloned = sourceDm.clone(config.saveChild);\n    let projectionSet = projField;\n    if (config.mode === FilteringMode.INVERSE) {\n        projectionSet = allFields.filter(fieldName => projField.indexOf(fieldName) === -1);\n    }\n    // cloned._colIdentifier = sourceDm._colIdentifier.split(',')\n    //                         .filter(coll => projectionSet.indexOf(coll) !== -1).join();\n    cloned._colIdentifier = projectionSet.join(',');\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n    // Store reference to child model and projection fields\n    if (config.saveChild) {\n        persistDerivation(\n            cloned,\n            DM_DERIVATIVES.PROJECT,\n            { projField, config, actualProjField: projectionSet },\n            null\n        );\n    }\n\n    return cloned;\n};\n\nexport const sanitizeUnitSchema = (unitSchema) => {\n    // Do deep clone of the unit schema as the user might change it later.\n    unitSchema = extend2({}, unitSchema);\n    if (!unitSchema.type) {\n        unitSchema.type = FieldType.DIMENSION;\n    }\n\n    if (!unitSchema.subtype) {\n        switch (unitSchema.type) {\n        case FieldType.MEASURE:\n            unitSchema.subtype = MeasureSubtype.CONTINUOUS;\n            break;\n        default:\n        case FieldType.DIMENSION:\n            unitSchema.subtype = DimensionSubtype.CATEGORICAL;\n            break;\n        }\n    }\n\n    return unitSchema;\n};\n\nexport const sanitizeSchema = schema => schema.map(unitSchema => sanitizeUnitSchema(unitSchema));\n\nexport const updateData = (relation, data, schema, options) => {\n    schema = sanitizeSchema(schema);\n    options = Object.assign(Object.assign({}, defaultConfig), options);\n    const converterFn = converter[options.dataFormat];\n\n    if (!(converterFn && typeof converterFn === 'function')) {\n        throw new Error(`No converter function found for ${options.dataFormat} format`);\n    }\n\n    const [header, formattedData] = converterFn(data, options);\n    const fieldArr = createFields(formattedData, schema, header);\n\n    // This will create a new fieldStore with the fields\n    const nameSpace = fieldStore.createNamespace(fieldArr, options.name);\n    relation._partialFieldspace = nameSpace;\n    // If data is provided create the default colIdentifier and rowDiffset\n    relation._rowDiffset = formattedData.length && formattedData[0].length ? `0-${formattedData[0].length - 1}` : '';\n    relation._colIdentifier = (schema.map(_ => _.name)).join();\n    relation._dataFormat = options.dataFormat === DataFormat.AUTO ? detectDataFormat(data) : options.dataFormat;\n    return relation;\n};\n\nexport const fieldInSchema = (schema, field) => {\n    let i = 0;\n\n    for (; i < schema.length; ++i) {\n        if (field === schema[i].name) {\n            return {\n                type: schema[i].subtype || schema[i].type,\n                index: i\n            };\n        }\n    }\n    return null;\n};\n\n\nexport const getOperationArguments = (child) => {\n    const derivation = child._derivation;\n    let params = [];\n    let operation;\n    if (derivation && derivation.length === 1) {\n        operation = derivation[0].op;\n        switch (operation) {\n        case DM_DERIVATIVES.SELECT:\n            params = [derivation[0].criteria];\n            break;\n        case DM_DERIVATIVES.PROJECT:\n            params = [derivation[0].meta.actualProjField];\n            break;\n        case DM_DERIVATIVES.GROUPBY:\n            operation = 'groupBy';\n            params = [derivation[0].meta.groupByString.split(','), derivation[0].criteria];\n            break;\n        default:\n            break;\n        }\n    }\n\n    return {\n        operation,\n        params\n    };\n};\n\nconst applyExistingOperationOnModel = (propModel, dataModel) => {\n    const { operation, params } = getOperationArguments(dataModel);\n    let selectionModel = propModel[0];\n    let rejectionModel = propModel[1];\n    if (operation && params.length) {\n        selectionModel = propModel[0][operation](...params, {\n            saveChild: false\n        });\n        rejectionModel = propModel[1][operation](...params, {\n            saveChild: false\n        });\n    }\n    return [selectionModel, rejectionModel];\n};\n\nconst getFilteredModel = (propModel, path) => {\n    for (let i = 0, len = path.length; i < len; i++) {\n        const model = path[i];\n        propModel = applyExistingOperationOnModel(propModel, model);\n    }\n    return propModel;\n};\n\nconst propagateIdentifiers = (dataModel, propModel, config = {}, propModelInf = {}) => {\n    const nonTraversingModel = propModelInf.nonTraversingModel;\n    const excludeModels = propModelInf.excludeModels || [];\n\n    if (dataModel === nonTraversingModel) {\n        return;\n    }\n\n    const propagate = excludeModels.length ? excludeModels.indexOf(dataModel) === -1 : true;\n\n    propagate && dataModel.handlePropagation(propModel, config);\n\n    const children = dataModel._children;\n    children.forEach((child) => {\n        let [selectionModel, rejectionModel] = applyExistingOperationOnModel(propModel, child);\n        propagateIdentifiers(child, [selectionModel, rejectionModel], config, propModelInf);\n    });\n};\n\nexport const getRootGroupByModel = (model) => {\n    if (model._parent && model._derivation.find(d => d.op !== 'group')) {\n        return getRootGroupByModel(model._parent);\n    }\n    return model;\n};\n\nexport const getRootDataModel = (model) => {\n    if (model._parent) {\n        return getRootDataModel(model._parent);\n    }\n    return model;\n};\n\nexport const getPathToRootModel = (model, path = []) => {\n    if (model._parent !== null) {\n        path.push(model);\n        getPathToRootModel(model._parent, path);\n    }\n    return path;\n};\n\nexport const propagateToAllDataModels = (identifiers, rootModels, propagationInf, config) => {\n    let criteria;\n    let propModel;\n    const { propagationNameSpace, propagateToSource } = propagationInf;\n    const propagationSourceId = propagationInf.sourceId;\n    const propagateInterpolatedValues = config.propagateInterpolatedValues;\n    const filterFn = (entry) => {\n        const filter = config.filterFn || (() => true);\n        return filter(entry, config);\n    };\n\n    let criterias = [];\n\n    if (identifiers === null && config.persistent !== true) {\n        criterias = [{\n            criteria: []\n        }];\n    } else {\n        let actionCriterias = Object.values(propagationNameSpace.mutableActions);\n        if (propagateToSource !== false) {\n            actionCriterias = actionCriterias.filter(d => d.config.sourceId !== propagationSourceId);\n        }\n\n        const filteredCriteria = actionCriterias.filter(filterFn).map(action => action.config.criteria);\n\n        const excludeModels = [];\n\n        if (propagateToSource !== false) {\n            const sourceActionCriterias = Object.values(propagationNameSpace.mutableActions);\n\n            sourceActionCriterias.forEach((actionInf) => {\n                const actionConf = actionInf.config;\n                if (actionConf.applyOnSource === false && actionConf.action === config.action &&\n                        actionConf.sourceId !== propagationSourceId) {\n                    excludeModels.push(actionInf.model);\n                    criteria = sourceActionCriterias.filter(d => d !== actionInf).map(d => d.config.criteria);\n                    criteria.length && criterias.push({\n                        criteria,\n                        models: actionInf.model,\n                        path: getPathToRootModel(actionInf.model)\n                    });\n                }\n            });\n        }\n\n\n        criteria = [].concat(...[...filteredCriteria, identifiers]).filter(d => d !== null);\n        criterias.push({\n            criteria,\n            excludeModels: [...excludeModels, ...config.excludeModels || []]\n        });\n    }\n\n    const rootModel = rootModels.model;\n\n    const propConfig = Object.assign({\n        sourceIdentifiers: identifiers,\n        propagationSourceId\n    }, config);\n\n    const rootGroupByModel = rootModels.groupByModel;\n    if (propagateInterpolatedValues && rootGroupByModel) {\n        propModel = filterPropagationModel(rootGroupByModel, criteria, {\n            filterByMeasure: propagateInterpolatedValues\n        });\n        propagateIdentifiers(rootGroupByModel, propModel, propConfig);\n    }\n\n    criterias.forEach((inf) => {\n        const propagationModel = filterPropagationModel(rootModel, inf.criteria);\n        const path = inf.path;\n\n        if (path) {\n            const filteredModel = getFilteredModel(propagationModel, path.reverse());\n            inf.models.handlePropagation(filteredModel, propConfig);\n        } else {\n            propagateIdentifiers(rootModel, propagationModel, propConfig, {\n                excludeModels: inf.excludeModels,\n                nonTraversingModel: propagateInterpolatedValues && rootGroupByModel\n            });\n        }\n    });\n};\n\nexport const propagateImmutableActions = (propagationNameSpace, rootModels, propagationInf) => {\n    const immutableActions = propagationNameSpace.immutableActions;\n\n    for (const action in immutableActions) {\n        const actionInf = immutableActions[action];\n        const actionConf = actionInf.config;\n        const propagationSourceId = propagationInf.config.sourceId;\n        const filterImmutableAction = propagationInf.propConfig.filterImmutableAction ?\n            propagationInf.propConfig.filterImmutableAction(actionConf, propagationInf.config) : true;\n        if (actionConf.sourceId !== propagationSourceId && filterImmutableAction) {\n            const criteriaModel = actionConf.criteria;\n            propagateToAllDataModels(criteriaModel, rootModels, {\n                propagationNameSpace,\n                propagateToSource: false,\n                sourceId: propagationSourceId\n            }, actionConf);\n        }\n    }\n};\n\nexport const addToPropNamespace = (propagationNameSpace, config = {}, model) => {\n    let sourceNamespace;\n    const isMutableAction = config.isMutableAction;\n    const criteria = config.criteria;\n    const key = `${config.action}-${config.sourceId}`;\n\n    if (isMutableAction) {\n        sourceNamespace = propagationNameSpace.mutableActions;\n    } else {\n        sourceNamespace = propagationNameSpace.immutableActions;\n    }\n\n    if (criteria === null) {\n        delete sourceNamespace[key];\n    } else {\n        sourceNamespace[key] = {\n            model,\n            config\n        };\n    }\n\n    return this;\n};\n","import { FilteringMode } from './enums';\nimport { getUniqueId } from './utils';\nimport { persistDerivation, updateFields, cloneWithSelect, cloneWithProject, updateData } from './helper';\nimport { crossProduct, difference, naturalJoinFilter, union } from './operator';\nimport { DM_DERIVATIVES } from './constants';\n\n/**\n * Relation provides the definitions of basic operators of relational algebra like *selection*, *projection*, *union*,\n * *difference* etc.\n *\n * It is extended by {@link DataModel} to inherit the functionalities of relational algebra concept.\n *\n * @class\n * @public\n * @module Relation\n * @namespace DataModel\n */\nclass Relation {\n\n    /**\n     * Creates a new Relation instance by providing underlying data and schema.\n     *\n     * @private\n     *\n     * @param {Object | string | Relation} data - The input tabular data in dsv or json format or\n     * an existing Relation instance object.\n     * @param {Array} schema - An array of data schema.\n     * @param {Object} [options] - The optional options.\n     */\n    constructor (...params) {\n        let source;\n\n        this._parent = null;\n        this._derivation = [];\n        this._children = [];\n\n        if (params.length === 1 && ((source = params[0]) instanceof Relation)) {\n            // parent datamodel was passed as part of source\n            this._colIdentifier = source._colIdentifier;\n            this._rowDiffset = source._rowDiffset;\n            this._dataFormat = source._dataFormat;\n            this._parent = source;\n            this._partialFieldspace = this._parent._partialFieldspace;\n            this._fieldStoreName = getUniqueId();\n            this.__calculateFieldspace().calculateFieldsConfig();\n        } else {\n            updateData(this, ...params);\n            this._fieldStoreName = this._partialFieldspace.name;\n            this.__calculateFieldspace().calculateFieldsConfig();\n            this._propagationNameSpace = {\n                mutableActions: {},\n                immutableActions: {}\n            };\n        }\n    }\n\n    /**\n     * Retrieves the {@link Schema | schema} details for every {@link Field | field} as an array.\n     *\n     * @public\n     *\n     * @return {Array.<Schema>} Array of fields schema.\n     *      ```\n     *      [\n     *          { name: 'Name', type: 'dimension' },\n     *          { name: 'Miles_per_Gallon', type: 'measure', numberFormat: (val) => `${val} miles / gallon` },\n     *          { name: 'Cylinder', type: 'dimension' },\n     *          { name: 'Displacement', type: 'measure', defAggFn: 'max' },\n     *          { name: 'HorsePower', type: 'measure', defAggFn: 'max' },\n     *          { name: 'Weight_in_lbs', type: 'measure', defAggFn: 'avg',  },\n     *          { name: 'Acceleration', type: 'measure', defAggFn: 'avg' },\n     *          { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *          { name: 'Origin' }\n     *      ]\n     *      ```\n     */\n    getSchema () {\n        return this.getFieldspace().fields.map(d => d.schema());\n    }\n\n    /**\n     * Returns the name of the {@link DataModel} instance. If no name was specified during {@link DataModel}\n     * initialization, then it returns a auto-generated name.\n     *\n     * @public\n     *\n     * @return {string} Name of the DataModel instance.\n     */\n    getName() {\n        return this._fieldStoreName;\n    }\n\n    getFieldspace () {\n        return this._fieldspace;\n    }\n\n    __calculateFieldspace () {\n        this._fieldspace = updateFields([this._rowDiffset, this._colIdentifier],\n             this.getPartialFieldspace(), this._fieldStoreName);\n        return this;\n    }\n\n    getPartialFieldspace () {\n        return this._partialFieldspace;\n    }\n\n    /**\n     * Performs {@link link_of_cross_product | cross-product} between two {@link DataModel} instances and returns a\n     * new {@link DataModel} instance containing the results. This operation is also called theta join.\n     *\n     * Cross product takes two set and create one set where each value of one set is paired with each value of another\n     * set.\n     *\n     * This method takes an optional predicate which filters the generated result rows. If the predicate returns true\n     * the combined row is included in the resulatant table.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.join(originDM)));\n     *\n     *  console.log(carsDM.join(originDM,\n     *      obj => obj.[originDM.getName()].Origin === obj.[carsDM.getName()].Origin));\n     *\n     * @text\n     * This is chained version of `join` operator. `join` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel to be joined with the current instance DataModel.\n     * @param {SelectionPredicate} filterFn - The predicate function that will filter the result of the crossProduct.\n     *\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    join (joinWith, filterFn) {\n        return crossProduct(this, joinWith, filterFn);\n    }\n\n    /**\n     * {@link natural_join | Natural join} is a special kind of cross-product join where filtering of rows are performed\n     * internally by resolving common fields are from both table and the rows with common value are included.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.naturalJoin(originDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel with which the current instance of DataModel on which the method is\n     *      called will be joined.\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    naturalJoin (joinWith) {\n        return crossProduct(this, joinWith, naturalJoinFilter(this, joinWith), true);\n    }\n\n    /**\n     * {@link link_to_union | Union} operation can be termed as vertical stacking of all rows from both the DataModel\n     * instances, provided that both of the {@link DataModel} instances should have same column names.\n     *\n     * @example\n     * console.log(EuropeanMakerDM.union(USAMakerDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} unionWith - DataModel instance for which union has to be applied with the instance on which\n     *      the method is called\n     *\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    union (unionWith) {\n        return union(this, unionWith);\n    }\n\n    /**\n     * {@link link_to_difference | Difference } operation only include rows which are present in the datamodel on which\n     * it was called but not on the one passed as argument.\n     *\n     * @example\n     * console.log(highPowerDM.difference(highExpensiveDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} differenceWith - DataModel instance for which difference has to be applied with the instance\n     *      on which the method is called\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    difference (differenceWith) {\n        return difference(this, differenceWith);\n    }\n\n    /**\n     * {@link link_to_selection | Selection} is a row filtering operation. It expects a predicate and an optional mode\n     * which control which all rows should be included in the resultant DataModel instance.\n     *\n     * {@link SelectionPredicate} is a function which returns a boolean value. For selection operation the selection\n     * function is called for each row of DataModel instance with the current row passed as argument.\n     *\n     * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n     * of rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resultant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  // with selection mode NORMAL:\n     *  const normDt = dt.select(fields => fields.Origin.value === \"USA\")\n     *  console.log(normDt));\n     *\n     * // with selection mode INVERSE:\n     * const inverDt = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.INVERSE })\n     * console.log(inverDt);\n     *\n     * // with selection mode ALL:\n     * const dtArr = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.ALL })\n     * // print the selected parts\n     * console.log(dtArr[0]);\n     * // print the inverted parts\n     * console.log(dtArr[1]);\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Function} selectFn - The predicate function which is called for each row with the current row.\n     * ```\n     *  function (row, i, cloneProvider, store)  { ... }\n     * ```\n     * @param {Object} config - The configuration object to control the inclusion exclusion of a row in resultant\n     * DataModel instance.\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection.\n     * @return {DataModel} Returns the new DataModel instance(s) after operation.\n     */\n    select (selectFn, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n\n        const cloneConfig = { saveChild: config.saveChild };\n        let oDm;\n\n        if (config.mode === FilteringMode.ALL) {\n            const selectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.NORMAL },\n                cloneConfig\n            );\n            const rejectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.INVERSE },\n                cloneConfig\n            );\n            oDm = [selectDm, rejectDm];\n        } else {\n            oDm = cloneWithSelect(\n                this,\n                selectFn,\n                config,\n                cloneConfig\n            );\n        }\n\n        return oDm;\n    }\n\n    /**\n     * Retrieves a boolean value if the current {@link DataModel} instance has data.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'CarName', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     * const data = [];\n     *\n     * const dt = new DataModel(data, schema);\n     * console.log(dt.isEmpty());\n     *\n     * @public\n     *\n     * @return {Boolean} True if the datamodel has no data, otherwise false.\n     */\n    isEmpty () {\n        return !this._rowDiffset.length || !this._colIdentifier.length;\n    }\n\n    /**\n     * Creates a clone from the current DataModel instance with child parent relationship.\n     *\n     * @private\n     * @param {boolean} [saveChild=true] - Whether the cloned instance would be recorded in the parent instance.\n     * @return {DataModel} - Returns the newly cloned DataModel instance.\n     */\n    clone (saveChild = true, linkParent = true) {\n        let retDataModel;\n        if (linkParent === false) {\n            const dataObj = this.getData({\n                getAllFields: true\n            });\n            const data = dataObj.data;\n            const schema = dataObj.schema;\n            const jsonData = data.map((row) => {\n                const rowObj = {};\n                schema.forEach((field, i) => {\n                    rowObj[field.name] = row[i];\n                });\n                return rowObj;\n            });\n            retDataModel = new this.constructor(jsonData, schema);\n        }\n        else {\n            retDataModel = new this.constructor(this);\n        }\n\n        if (saveChild) {\n            this._children.push(retDataModel);\n        }\n        return retDataModel;\n    }\n\n    /**\n     * {@link Projection} is filter column (field) operation. It expects list of fields' name and either include those\n     * or exclude those based on {@link FilteringMode} on the resultant variable.\n     *\n     * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n     * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resulatant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *\n     *  // with projection mode NORMAL:\n     *  const normDt = dt.project([\"Name\", \"HorsePower\"]);\n     *  console.log(normDt.getData());\n     *\n     *  // with projection mode INVERSE:\n     *  const inverDt = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.INVERSE })\n     *  console.log(inverDt.getData());\n     *\n     *  // with selection mode ALL:\n     *  const dtArr = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.ALL })\n     *  // print the normal parts\n     *  console.log(dtArr[0].getData());\n     *  // print the inverted parts\n     *  console.log(dtArr[1].getData());\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n     * @param {Object} [config] - An optional config to control the creation of new DataModel\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n     *\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    project (projField, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const { mode } = config;\n\n        let normalizedProjField = projField.reduce((acc, field) => {\n            if (field.constructor.name === 'RegExp') {\n                acc.push(...allFields.filter(fieldName => fieldName.search(field) !== -1));\n            } else if (field in fieldConfig) {\n                acc.push(field);\n            }\n            return acc;\n        }, []);\n\n        normalizedProjField = Array.from(new Set(normalizedProjField)).map(field => field.trim());\n        let dataModel;\n\n        if (mode === FilteringMode.ALL) {\n            let projectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.NORMAL,\n                saveChild: config.saveChild\n            }, allFields);\n            let rejectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.INVERSE,\n                saveChild: config.saveChild\n            }, allFields);\n            dataModel = [projectionClone, rejectionClone];\n        } else {\n            let projectionClone = cloneWithProject(this, normalizedProjField, config, allFields);\n            dataModel = projectionClone;\n        }\n\n        return dataModel;\n    }\n\n    getFieldsConfig () {\n        return this._fieldConfig;\n    }\n\n    calculateFieldsConfig () {\n        this._fieldConfig = this._fieldspace.fields.reduce((acc, fieldDef, i) => {\n            acc[fieldDef.name()] = {\n                index: i,\n                def: { name: fieldDef.name(), type: fieldDef.type(), subtype: fieldDef.subtype() }\n            };\n            return acc;\n        }, {});\n        return this;\n    }\n\n\n    /**\n     * Frees up the resources associated with the current DataModel instance and breaks all the links instance has in\n     * the DAG.\n     *\n     * @public\n     */\n    dispose () {\n        this._parent.removeChild(this);\n        this._parent = null;\n    }\n\n    /**\n     * Removes the specified child {@link DataModel} from the child list of the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\")\n     * dt.removeChild(dt2);\n     *\n     * @private\n     *\n     * @param {DataModel} child - Delegates the parent to remove this child.\n     */\n    removeChild (child) {\n        let idx = this._children.findIndex(sibling => sibling === child);\n        idx !== -1 ? this._children.splice(idx, 1) : true;\n    }\n\n    /**\n     * Adds the specified {@link DataModel} as a parent for the current {@link DataModel} instance.\n     *\n     * The optional criteriaQueue is an array containing the history of transaction performed on parent\n     *  {@link DataModel} to get the current one.\n     *\n     * @param {DataModel} parent - The datamodel instance which will act as parent.\n     * @param {Array} criteriaQueue - Queue contains in-between operation meta-data.\n     */\n    addParent (parent, criteriaQueue = []) {\n        persistDerivation(this, DM_DERIVATIVES.COMPOSE, null, criteriaQueue);\n        this._parent = parent;\n        parent._children.push(this);\n    }\n\n    /**\n     * Returns the parent {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const parentDm = dt2.getParent();\n     *\n     * @return {DataModel} Returns the parent DataModel instance.\n     */\n    getParent () {\n        return this._parent;\n    }\n\n    /**\n     * Returns the immediate child {@link DataModel} instances.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const childDm1 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const childDm2 = dt.select(fields => fields.Origin.value === \"Japan\");\n     * const childDm3 = dt.groupBy([\"Origin\"]);\n     *\n     * @return {DataModel[]} Returns the immediate child DataModel instances.\n     */\n    getChildren() {\n        return this._children;\n    }\n\n    /**\n     * Returns the in-between operation meta data while creating the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const derivations = dt3.getDerivations();\n     *\n     * @return {Any[]} Returns the derivation meta data.\n     */\n    getDerivations() {\n        return this._derivation;\n    }\n}\n\nexport default Relation;\n","/* eslint-disable default-case */\n\nimport { FieldType, DimensionSubtype, DataFormat } from './enums';\nimport {\n    persistDerivation,\n    getRootGroupByModel,\n    propagateToAllDataModels,\n    getRootDataModel,\n    propagateImmutableActions,\n    addToPropNamespace,\n    sanitizeUnitSchema\n} from './helper';\nimport { DM_DERIVATIVES, PROPAGATION } from './constants';\nimport {\n    dataBuilder,\n    rowDiffsetIterator,\n    groupBy\n} from './operator';\nimport { createBinnedFieldData } from './operator/bucket-creator';\nimport Relation from './relation';\nimport reducerStore from './utils/reducer-store';\nimport { createFields } from './field-creator';\n\n/**\n * DataModel is an in-browser representation of tabular data. It supports\n * {@link https://en.wikipedia.org/wiki/Relational_algebra | relational algebra} operators as well as generic data\n * processing opearators.\n * DataModel extends {@link Relation} class which defines all the relational algebra opreators. DataModel gives\n * definition of generic data processing operators which are not relational algebra complient.\n *\n * @public\n * @class\n * @extends Relation\n * @memberof Datamodel\n */\nclass DataModel extends Relation {\n    /**\n     * Creates a new DataModel instance by providing data and schema. Data could be in the form of\n     * - Flat JSON\n     * - DSV String\n     * - 2D Array\n     *\n     * By default DataModel finds suitable adapter to serialize the data. DataModel also expects a\n     * {@link Schema | schema} for identifying the variables present in data.\n     *\n     * @constructor\n     * @example\n     * const data = loadData('cars.csv');\n     * const schema = [\n     *      { name: 'Name', type: 'dimension' },\n     *      { name: 'Miles_per_Gallon', type: 'measure', unit : 'cm', scale: '1000', numberformat: val => `${val}G`},\n     *      { name: 'Cylinders', type: 'dimension' },\n     *      { name: 'Displacement', type: 'measure' },\n     *      { name: 'Horsepower', type: 'measure' },\n     *      { name: 'Weight_in_lbs', type: 'measure' },\n     *      { name: 'Acceleration', type: 'measure' },\n     *      { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *      { name: 'Origin', type: 'dimension' }\n     * ];\n     * const dm = new DataModel(data, schema, { name: 'Cars' });\n     * table(dm);\n     *\n     * @public\n     *\n     * @param {Array.<Object> | string | Array.<Array>} data Input data in any of the mentioned formats\n     * @param {Array.<Schema>} schema Defination of the variables. Order of the variables in data and order of the\n     *      variables in schema has to be same.\n     * @param {object} [options] Optional arguments to specify more settings regarding the creation part\n     * @param {string} [options.name] Name of the datamodel instance. If no name is given an auto generated name is\n     *      assigned to the instance.\n     * @param {string} [options.fieldSeparator=','] specify field separator type if the data is of type dsv string.\n     */\n    constructor (...args) {\n        super(...args);\n\n        this._onPropagation = [];\n        this._sortingDetails = [];\n    }\n\n    /**\n     * Reducers are simple functions which reduces an array of numbers to a representative number of the set.\n     * Like an array of numbers `[10, 20, 5, 15]` can be reduced to `12.5` if average / mean reducer function is\n     * applied. All the measure fields in datamodel (variables in data) needs a reducer to handle aggregation.\n     *\n     * @public\n     *\n     * @return {ReducerStore} Singleton instance of {@link ReducerStore}.\n     */\n    static get Reducers () {\n        return reducerStore;\n    }\n\n    /**\n     * Retrieve the data attached to an instance in JSON format.\n     *\n     * @example\n     * // DataModel instance is already prepared and assigned to dm variable\n     *  const data = dm.getData({\n     *      order: 'column',\n     *      formatter: {\n     *          origin: (val) => val === 'European Union' ? 'EU' : val;\n     *      }\n     *  });\n     *  console.log(data);\n     *\n     * @public\n     *\n     * @param {Object} [options] Options to control how the raw data is to be returned.\n     * @param {string} [options.order='row'] Defines if data is retieved in row order or column order. Possible values\n     *      are `'rows'` and `'columns'`\n     * @param {Function} [options.formatter=null] Formats the output data. This expects an object, where the keys are\n     *      the name of the variable needs to be formatted. The formatter function is called for each row passing the\n     *      value of the cell for a particular row as arguments. The formatter is a function in the form of\n     *      `function (value, rowId, schema) => { ... }`\n     *      Know more about {@link Fomatter}.\n     *\n     * @return {Array} Returns a multidimensional array of the data with schema. The return format looks like\n     *      ```\n     *          {\n     *              data,\n     *              schema\n     *          }\n     *      ```\n     */\n    getData (options) {\n        const defOptions = {\n            order: 'row',\n            formatter: null,\n            withUid: false,\n            getAllFields: false,\n            sort: []\n        };\n        options = Object.assign({}, defOptions, options);\n        const fields = this.getPartialFieldspace().fields;\n\n        const dataGenerated = dataBuilder.call(\n            this,\n            this.getPartialFieldspace().fields,\n            this._rowDiffset,\n            options.getAllFields ? fields.map(d => d.name()).join() : this._colIdentifier,\n            options.sort,\n            {\n                columnWise: options.order === 'column',\n                addUid: !!options.withUid\n            }\n        );\n\n        if (!options.formatter) {\n            return dataGenerated;\n        }\n\n        const { formatter } = options;\n        const { data, schema, uids } = dataGenerated;\n        const fieldNames = schema.map((e => e.name));\n        const fmtFieldNames = Object.keys(formatter);\n        const fmtFieldIdx = fmtFieldNames.reduce((acc, next) => {\n            const idx = fieldNames.indexOf(next);\n            if (idx !== -1) {\n                acc.push([idx, formatter[next]]);\n            }\n            return acc;\n        }, []);\n\n        if (options.order === 'column') {\n            fmtFieldIdx.forEach((elem) => {\n                const fIdx = elem[0];\n                const fmtFn = elem[1];\n\n                data[fIdx].forEach((datum, datumIdx) => {\n                    data[fIdx][datumIdx] = fmtFn.call(\n                        undefined,\n                        datum,\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        } else {\n            data.forEach((datum, datumIdx) => {\n                fmtFieldIdx.forEach((elem) => {\n                    const fIdx = elem[0];\n                    const fmtFn = elem[1];\n\n                    datum[fIdx] = fmtFn.call(\n                        undefined,\n                        datum[fIdx],\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        }\n\n        return dataGenerated;\n    }\n\n    /**\n     * Groups the data using particular dimensions and by reducing measures. It expects a list of dimensions using which\n     * it projects the datamodel and perform aggregations to reduce the duplicate tuples. Refer this\n     * {@link link_to_one_example_with_group_by | document} to know the intuition behind groupBy.\n     *\n     * DataModel by default provides definition of few {@link reducer | Reducers}.\n     * {@link ReducerStore | User defined reducers} can also be registered.\n     *\n     * This is the chained implementation of `groupBy`.\n     * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n     *\n     * @example\n     * const groupedDM = dm.groupBy(['Year'], { horsepower: 'max' } );\n     * console.log(groupedDm);\n     *\n     * @public\n     *\n     * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n     * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n     *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n     *      schema of the variable.\n     *\n     * @return {DataModel} Returns a new DataModel instance after performing the groupby.\n     */\n    groupBy (fieldsArr, reducers = {}, config = { saveChild: true }) {\n        const groupByString = `${fieldsArr.join()}`;\n        let params = [this, fieldsArr, reducers];\n        const newDataModel = groupBy(...params);\n\n        if (config.saveChild) {\n            this._children.push(newDataModel);\n            persistDerivation(\n                newDataModel,\n                DM_DERIVATIVES.GROUPBY,\n                { fieldsArr, groupByString, defaultReducer: reducerStore.defaultReducer() },\n                reducers\n            );\n        }\n\n        newDataModel._parent = this;\n        return newDataModel;\n    }\n\n    /**\n     * Performs sorting operation on the current {@link DataModel} instance according to the specified sorting details.\n     * Like every other operator it doesn't mutate the current DataModel instance on which it was called, instead\n     * returns a new DataModel instance containing the sorted data.\n     *\n     * DataModel support multi level sorting by listing the variables using which sorting needs to be performed and\n     * the type of sorting `ASC` or `DESC`.\n     *\n     * In the following example, data is sorted by `Origin` field in `DESC` order in first level followed by another\n     * level of sorting by `Acceleration` in `ASC` order.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * let sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\"] // Default value is ASC\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * // Sort with a custom sorting function\n     * sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\", (a, b) => a - b] // Custom sorting function\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @text\n     * DataModel also provides another sorting mechanism out of the box where sort is applied to a variable using\n     * another variable which determines the order.\n     * Like the above DataModel contains three fields `Origin`, `Name` and `Acceleration`. Now, the data in this\n     * model can be sorted by `Origin` field according to the average value of all `Acceleration` for a\n     * particular `Origin` value.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * const sortedDm = dm.sort([\n     *     ['Origin', ['Acceleration', (a, b) => avg(...a.Acceleration) - avg(...b.Acceleration)]]\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @public\n     *\n     * @param {Array.<Array>} sortingDetails - Sorting details based on which the sorting will be performed.\n     * @return {DataModel} Returns a new instance of DataModel with sorted data.\n     */\n    sort (sortingDetails) {\n        const rawData = this.getData({\n            order: 'row',\n            sort: sortingDetails\n        });\n        const header = rawData.schema.map(field => field.name);\n        const dataInCSVArr = [header].concat(rawData.data);\n\n        const sortedDm = new this.constructor(dataInCSVArr, rawData.schema, { dataFormat: 'DSVArr' });\n        sortedDm._sortingDetails = sortingDetails;\n        return sortedDm;\n    }\n\n    /**\n     * Performs the serialization operation on the current {@link DataModel} instance according to the specified data\n     * type. When an {@link DataModel} instance is created, it de-serializes the input data into its internal format,\n     * and during its serialization process, it converts its internal data format to the specified data type and returns\n     * that data regardless what type of data is used during the {@link DataModel} initialization.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance.\n     * const csvData = dm.serialize(DataModel.DataFormat.DSV_STR, { fieldSeparator: \",\" });\n     * console.log(csvData); // The csv formatted data.\n     *\n     * const jsonData = dm.serialize(DataModel.DataFormat.FLAT_JSON);\n     * console.log(jsonData); // The json data.\n     *\n     * @public\n     *\n     * @param {string} type - The data type name for serialization.\n     * @param {Object} options - The optional option object.\n     * @param {string} options.fieldSeparator - The field separator character for DSV data type.\n     * @return {Array|string} Returns the serialized data.\n     */\n    serialize (type, options) {\n        type = type || this._dataFormat;\n        options = Object.assign({}, { fieldSeparator: ',' }, options);\n\n        const fields = this.getFieldspace().fields;\n        const colData = fields.map(f => f.formattedData());\n        const rowsCount = colData[0].length;\n        let serializedData;\n        let rowIdx;\n        let colIdx;\n\n        if (type === DataFormat.FLAT_JSON) {\n            serializedData = [];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = {};\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row[fields[colIdx].name()] = colData[colIdx][rowIdx];\n                }\n                serializedData.push(row);\n            }\n        } else if (type === DataFormat.DSV_STR) {\n            serializedData = [fields.map(f => f.name()).join(options.fieldSeparator)];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row.join(options.fieldSeparator));\n            }\n            serializedData = serializedData.join('\\n');\n        } else if (type === DataFormat.DSV_ARR) {\n            serializedData = [fields.map(f => f.name())];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row);\n            }\n        } else {\n            throw new Error(`Data type ${type} is not supported`);\n        }\n\n        return serializedData;\n    }\n\n    addField (field) {\n        const fieldName = field.name();\n        this._colIdentifier += `,${fieldName}`;\n        const partialFieldspace = this._partialFieldspace;\n\n        if (!partialFieldspace.fieldsObj()[field.name()]) {\n            partialFieldspace.fields.push(field);\n        } else {\n            const fieldIndex = partialFieldspace.fields.findIndex(fieldinst => fieldinst.name() === fieldName);\n            fieldIndex >= 0 && (partialFieldspace.fields[fieldIndex] = field);\n        }\n\n        // flush out cached namespace values on addition of new fields\n        partialFieldspace._cachedFieldsObj = null;\n        partialFieldspace._cachedDimension = null;\n        partialFieldspace._cachedMeasure = null;\n\n        this.__calculateFieldspace().calculateFieldsConfig();\n        return this;\n    }\n\n    /**\n    * Creates a new variable calculated from existing variables. This method expects the definition of the newly created\n    * variable and a function which resolves the value of the new variable from existing variables.\n    *\n    * Can create a new measure based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const newDm = dataModel.calculateVariable({\n    *      name: 'powerToWeight',\n    *      type: 'measure'\n    *  }, ['horsepower', 'weight_in_lbs', (hp, weight) => hp / weight ]);\n    *\n    *\n    * Can create a new dimension based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const child = dataModel.calculateVariable(\n    *     {\n    *       name: 'Efficiency',\n    *       type: 'dimension'\n    *     }, ['horsepower', (hp) => {\n    *      if (hp < 80) { return 'low'; },\n    *      else if (hp < 120) { return 'moderate'; }\n    *      else { return 'high' }\n    *  }]);\n    *\n    * @public\n    *\n    * @param {Object} schema - The schema of newly defined variable.\n    * @param {Array.<string|function>} dependency - An array containing the dependency variable names and a resolver\n    * function as the last element.\n    * @param {Object} config - An optional config object.\n    * @param {boolean} [config.saveChild] - Whether the newly created DataModel will be a child.\n    * @param {boolean} [config.replaceVar] - Whether the newly created variable will replace the existing variable.\n    * @return {DataModel} Returns an instance of DataModel with the new field.\n    */\n    calculateVariable (schema, dependency, config) {\n        schema = sanitizeUnitSchema(schema);\n        config = Object.assign({}, { saveChild: true, replaceVar: false }, config);\n\n        const fieldsConfig = this.getFieldsConfig();\n        const depVars = dependency.slice(0, dependency.length - 1);\n        const retrieveFn = dependency[dependency.length - 1];\n\n        if (fieldsConfig[schema.name] && !config.replaceVar) {\n            throw new Error(`${schema.name} field already exists in datamodel`);\n        }\n\n        const depFieldIndices = depVars.map((field) => {\n            const fieldSpec = fieldsConfig[field];\n            if (!fieldSpec) {\n                // @todo dont throw error here, use warning in production mode\n                throw new Error(`${field} is not a valid column name.`);\n            }\n            return fieldSpec.index;\n        });\n\n        const clone = this.clone();\n\n        const fs = clone.getFieldspace().fields;\n        const suppliedFields = depFieldIndices.map(idx => fs[idx]);\n\n        let cachedStore = {};\n        let cloneProvider = () => this.detachedRoot();\n\n        const computedValues = [];\n        rowDiffsetIterator(clone._rowDiffset, (i) => {\n            const fieldsData = suppliedFields.map(field => field.partialField.data[i]);\n            computedValues[i] = retrieveFn(...fieldsData, i, cloneProvider, cachedStore);\n        });\n        const [field] = createFields([computedValues], [schema], [schema.name]);\n        clone.addField(field);\n\n        if (config.saveChild) {\n            persistDerivation(clone, DM_DERIVATIVES.CAL_VAR, { config: schema, fields: depVars }, retrieveFn);\n        }\n\n        return clone;\n    }\n\n    /**\n     * Propagates changes across all the connected DataModel instances.\n     *\n     * @param {Array} identifiers - A list of identifiers that were interacted with.\n     * @param {Object} payload - The interaction specific details.\n     *\n     * @return {DataModel} DataModel instance.\n     */\n    propagate (identifiers, config = {}, addToNameSpace, propConfig = {}) {\n        const isMutableAction = config.isMutableAction;\n        const propagationSourceId = config.sourceId;\n        const payload = config.payload;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const rootGroupByModel = getRootGroupByModel(this);\n        const rootModels = {\n            groupByModel: rootGroupByModel,\n            model: rootModel\n        };\n\n        addToNameSpace && addToPropNamespace(propagationNameSpace, config, this);\n        propagateToAllDataModels(identifiers, rootModels, { propagationNameSpace, sourceId: propagationSourceId },\n            Object.assign({\n                payload\n            }, config));\n\n        if (isMutableAction) {\n            propagateImmutableActions(propagationNameSpace, rootModels, {\n                config,\n                propConfig\n            }, this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Associates a callback with an event name.\n     *\n     * @param {string} eventName - The name of the event.\n     * @param {Function} callback - The callback to invoke.\n     * @return {DataModel} Returns this current DataModel instance itself.\n     */\n    on (eventName, callback) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation.push(callback);\n            break;\n        }\n        return this;\n    }\n\n    /**\n     * Unsubscribes the callbacks for the provided event name.\n     *\n     * @param {string} eventName - The name of the event to unsubscribe.\n     * @return {DataModel} Returns the current DataModel instance itself.\n     */\n    unsubscribe (eventName) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation = [];\n            break;\n\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to invoke the method associated with propagation.\n     *\n     * @param {Object} payload The interaction payload.\n     * @param {DataModel} identifiers The propagated DataModel.\n     * @memberof DataModel\n     */\n    handlePropagation (propModel, payload) {\n        let propListeners = this._onPropagation;\n        propListeners.forEach(fn => fn.call(this, propModel, payload));\n    }\n\n    /**\n     * Performs the binning operation on a measure field based on the binning configuration. Binning means discretizing\n     * values of a measure. Binning configuration contains an array; subsequent values from the array marks the boundary\n     * of buckets in [inclusive, exclusive) range format. This operation does not mutate the subject measure field,\n     * instead, it creates a new field (variable) of type dimension and subtype binned.\n     *\n     * Binning can be configured by\n     * - providing custom bin configuration with non-uniform buckets,\n     * - providing bins count,\n     * - providing each bin size,\n     *\n     * When custom `buckets` are provided as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', buckets: [30, 80, 100, 110] }\n     *  const binnedDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binsCount` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', binsCount: 5, start: 0, end: 100 }\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binSize` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHorsepower', binSize: 20, start: 5}\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @public\n     *\n     * @param {string} measureFieldName - The name of the target measure field.\n     * @param {Object} config - The config object.\n     * @param {string} [config.name] - The name of the new field which will be created.\n     * @param {string} [config.buckets] - An array containing the bucket ranges.\n     * @param {string} [config.binSize] - The size of each bin. It is ignored when buckets are given.\n     * @param {string} [config.binsCount] - The total number of bins to generate. It is ignored when buckets are given.\n     * @param {string} [config.start] - The start value of the bucket ranges. It is ignored when buckets are given.\n     * @param {string} [config.end] - The end value of the bucket ranges. It is ignored when buckets are given.\n     * @return {DataModel} Returns a new {@link DataModel} instance with the new field.\n     */\n    bin (measureFieldName, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        if (!fieldsConfig[measureFieldName]) {\n            throw new Error(`Field ${measureFieldName} doesn't exist`);\n        }\n\n        const binFieldName = config.name || `${measureFieldName}_binned`;\n\n        if (fieldsConfig[binFieldName]) {\n            throw new Error(`Field ${binFieldName} already exists`);\n        }\n\n        const measureField = this.getFieldspace().fieldsObj()[measureFieldName];\n        const { binnedData, bins } = createBinnedFieldData(measureField, this._rowDiffset, config);\n\n        const binField = createFields([binnedData], [\n            {\n                name: binFieldName,\n                type: FieldType.DIMENSION,\n                subtype: DimensionSubtype.BINNED,\n                bins\n            }], [binFieldName])[0];\n\n        const clone = this.clone();\n        clone.addField(binField);\n\n        persistDerivation(clone, DM_DERIVATIVES.BIN, { measureFieldName, config, binFieldName }, null);\n\n        return clone;\n    }\n\n    /**\n     * Creates a new {@link DataModel} instance with completely detached root from current {@link DataModel} instance,\n     * the new {@link DataModel} instance has no parent-children relationship with the current one, but has same data as\n     * the current one.\n     * This API is useful when a completely different {@link DataModel} but with same data as the current instance is\n     * needed.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *  const detachedDm = dm.detachedRoot();\n     *\n     * // has different namespace\n     * console.log(dm.getPartialFieldspace().name);\n     * console.log(detachedDm.getPartialFieldspace().name);\n     *\n     * // has same data\n     * console.log(dm.getData());\n     * console.log(detachedDm.getData());\n     *\n     * @public\n     *\n     * @return {DataModel} Returns a detached {@link DataModel} instance.\n     */\n    detachedRoot () {\n        const data = this.serialize(DataFormat.FLAT_JSON);\n        const schema = this.getSchema();\n\n        return new DataModel(data, schema);\n    }\n}\n\nexport default DataModel;\n","import { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport DataModel from '../export';\nimport reducerStore from '../utils/reducer-store';\nimport { defaultReducerName } from './group-by-function';\nimport { FieldType } from '../enums';\n\n/**\n * This function sanitize the user given field and return a common Array structure field\n * list\n * @param  {DataModel} dataModel the dataModel operating on\n * @param  {Array} fieldArr  user input of field Array\n * @return {Array}           arrays of field name\n */\nfunction getFieldArr (dataModel, fieldArr) {\n    const retArr = [];\n    const fieldStore = dataModel.getFieldspace();\n    const dimensions = fieldStore.getDimension();\n\n    Object.entries(dimensions).forEach(([key]) => {\n        if (fieldArr && fieldArr.length) {\n            if (fieldArr.indexOf(key) !== -1) {\n                retArr.push(key);\n            }\n        } else {\n            retArr.push(key);\n        }\n    });\n\n    return retArr;\n}\n\n/**\n * This sanitize the reducer provide by the user and create a common type of object.\n * user can give function Also\n * @param  {DataModel} dataModel     dataModel to worked on\n * @param  {Object|function} [reducers={}] reducer provided by the users\n * @return {Object}               object containing reducer function for every measure\n */\nfunction getReducerObj (dataModel, reducers = {}) {\n    const retObj = {};\n    const fieldStore = dataModel.getFieldspace();\n    const measures = fieldStore.getMeasure();\n    const defReducer = reducerStore.defaultReducer();\n\n    Object.keys(measures).forEach((measureName) => {\n        if (typeof reducers[measureName] !== 'string') {\n            reducers[measureName] = measures[measureName].defAggFn();\n        }\n        const reducerFn = reducerStore.resolve(reducers[measureName]);\n        if (reducerFn) {\n            retObj[measureName] = reducerFn;\n        } else {\n            retObj[measureName] = defReducer;\n            reducers[measureName] = defaultReducerName;\n        }\n    });\n    return retObj;\n}\n\n/**\n * main function which perform the group-by operations which reduce the measures value is the\n * fields are common according to the reducer function provided\n * @param  {DataModel} dataModel the dataModel to worked\n * @param  {Array} fieldArr  fields according to which the groupby should be worked\n * @param  {Object|Function} reducers  reducers function\n * @param {DataModel} existingDataModel Existing datamodel instance\n * @return {DataModel} new dataModel with the group by\n */\nfunction groupBy (dataModel, fieldArr, reducers, existingDataModel) {\n    const sFieldArr = getFieldArr(dataModel, fieldArr);\n    const reducerObj = getReducerObj(dataModel, reducers);\n    const fieldStore = dataModel.getFieldspace();\n    const fieldStoreObj = fieldStore.fieldsObj();\n    const dbName = fieldStore.name;\n    const dimensionArr = [];\n    const measureArr = [];\n    const schema = [];\n    const hashMap = {};\n    const data = [];\n    let newDataModel;\n\n    // Prepare the schema\n    Object.entries(fieldStoreObj).forEach(([key, value]) => {\n        if (sFieldArr.indexOf(key) !== -1 || reducerObj[key]) {\n            schema.push(extend2({}, value.schema()));\n\n            switch (value.schema().type) {\n            case FieldType.MEASURE:\n                measureArr.push(key);\n                break;\n            default:\n            case FieldType.DIMENSION:\n                dimensionArr.push(key);\n            }\n        }\n    });\n    // Prepare the data\n    let rowCount = 0;\n    rowDiffsetIterator(dataModel._rowDiffset, (i) => {\n        let hash = '';\n        dimensionArr.forEach((_) => {\n            hash = `${hash}-${fieldStoreObj[_].partialField.data[i]}`;\n        });\n        if (hashMap[hash] === undefined) {\n            hashMap[hash] = rowCount;\n            data.push({});\n            dimensionArr.forEach((_) => {\n                data[rowCount][_] = fieldStoreObj[_].partialField.data[i];\n            });\n            measureArr.forEach((_) => {\n                data[rowCount][_] = [fieldStoreObj[_].partialField.data[i]];\n            });\n            rowCount += 1;\n        } else {\n            measureArr.forEach((_) => {\n                data[hashMap[hash]][_].push(fieldStoreObj[_].partialField.data[i]);\n            });\n        }\n    });\n\n    // reduction\n    let cachedStore = {};\n    let cloneProvider = () => dataModel.detachedRoot();\n    data.forEach((row) => {\n        const tuple = row;\n        measureArr.forEach((_) => {\n            tuple[_] = reducerObj[_](row[_], cloneProvider, cachedStore);\n        });\n    });\n    if (existingDataModel) {\n        existingDataModel.__calculateFieldspace();\n        newDataModel = existingDataModel;\n    }\n    else {\n        newDataModel = new DataModel(data, schema, { name: dbName });\n    }\n    return newDataModel;\n}\n\nexport { groupBy, getFieldArr, getReducerObj };\n","import { rowDiffsetIterator } from './row-diffset-iterator';\n\nconst generateBuckets = (binSize, start, end) => {\n    const buckets = [];\n    let next = start;\n\n    while (next < end) {\n        buckets.push(next);\n        next += binSize;\n    }\n    buckets.push(next);\n\n    return buckets;\n};\n\nconst findBucketRange = (bucketRanges, value) => {\n    let leftIdx = 0;\n    let rightIdx = bucketRanges.length - 1;\n    let midIdx;\n    let range;\n\n    // Here use binary search as the bucketRanges is a sorted array\n    while (leftIdx <= rightIdx) {\n        midIdx = leftIdx + Math.floor((rightIdx - leftIdx) / 2);\n        range = bucketRanges[midIdx];\n\n        if (value >= range.start && value < range.end) {\n            return range;\n        } else if (value >= range.end) {\n            leftIdx = midIdx + 1;\n        } else if (value < range.start) {\n            rightIdx = midIdx - 1;\n        }\n    }\n\n    return null;\n};\n\n /**\n  * Creates the bin data from input measure field and supplied configs.\n  *\n  * @param {Measure} measureField - The Measure field instance.\n  * @param {string} rowDiffset - The datamodel rowDiffset values.\n  * @param {Object} config - The config object.\n  * @return {Object} Returns the binned data and the corresponding bins.\n  */\nexport function createBinnedFieldData (measureField, rowDiffset, config) {\n    let { buckets, binsCount, binSize, start, end } = config;\n    const [dMin, dMax] = measureField.domain();\n\n    if (!buckets) {\n        start = (start !== 0 && (!start || start > dMin)) ? dMin : start;\n        end = (end !== 0 && (!end || end < dMax)) ? (dMax + 1) : end;\n\n        if (binsCount) {\n            binSize = Math.ceil(Math.abs(end - start) / binsCount);\n        }\n\n        buckets = generateBuckets(binSize, start, end);\n    }\n\n    if (buckets[0] > dMin) {\n        buckets.unshift(dMin);\n    }\n    if (buckets[buckets.length - 1] <= dMax) {\n        buckets.push(dMax + 1);\n    }\n\n    const bucketRanges = [];\n    for (let i = 0; i < buckets.length - 1; i++) {\n        bucketRanges.push({\n            start: buckets[i],\n            end: buckets[i + 1]\n        });\n    }\n\n    const binnedData = [];\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const datum = measureField.partialField.data[i];\n        if (datum === null) {\n            binnedData.push(null);\n            return;\n        }\n\n        const range = findBucketRange(bucketRanges, datum);\n        binnedData.push(`${range.start}-${range.end}`);\n    });\n\n    return { binnedData, bins: buckets };\n}\n","import { fnList } from '../operator/group-by-function';\n\nexport const { sum, avg, min, max, first, last, count, std: sd } = fnList;\n","import DataModel from './datamodel';\nimport {\n  compose,\n  bin,\n  select,\n  project,\n  groupby as groupBy,\n  calculateVariable,\n  sort,\n  crossProduct,\n  difference,\n  naturalJoin,\n  leftOuterJoin,\n  rightOuterJoin,\n  fullOuterJoin,\n  union\n} from './operator';\nimport * as Stats from './stats';\nimport * as enums from './enums';\nimport { DateTimeFormatter } from './utils';\nimport { DataFormat, FilteringMode } from './constants';\nimport pkg from '../package.json';\n\nDataModel.Operators = {\n    compose,\n    bin,\n    select,\n    project,\n    groupBy,\n    calculateVariable,\n    sort,\n    crossProduct,\n    difference,\n    naturalJoin,\n    leftOuterJoin,\n    rightOuterJoin,\n    fullOuterJoin,\n    union\n};\nDataModel.Stats = Stats;\nObject.assign(DataModel, enums);\nDataModel.DateTimeFormatter = DateTimeFormatter;\nDataModel.DataFormat = DataFormat;\nDataModel.FilteringMode = FilteringMode;\nDataModel.version = pkg.version;\n\nexport default DataModel;\n","\n/**\n * DataModel's opearators are exposed as composable functional operators as well as chainable operators. Chainable\n * operators are called on the instances of {@link Datamodel} and {@link Relation} class.\n *\n * Those same operators can be used as composable operators from `DataModel.Operators` namespace.\n *\n * All these operators have similar behaviour. All these operators when called with the argument returns a function\n * which expects a DataModel instance.\n *\n * @public\n * @module Operators\n * @namespace DataModel\n */\n\n/**\n * This is functional version of selection operator. {@link link_to_selection | Selection} is a row filtering operation.\n * It takes {@link SelectionPredicate | predicate} for filtering criteria and returns a function.\n * The returned function is called with the DataModel instance on which the action needs to be performed.\n *\n * {@link SelectionPredicate} is a function which returns a boolean value. For selection opearation the selection\n * function is called for each row of DataModel instance with the current row passed as argument.\n *\n * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n * of rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * [Warn] Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * [Error] `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @example\n * const select = DataModel.Operators.select;\n * usaCarsFn = select(fields => fields.Origin.value === 'USA');\n * usaCarsDm = usaCarsFn(dm);\n * console.log(usaCarsDm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {SelectionPredicate} selectFn - Predicate funciton which is called for each row with the current row\n *      ```\n *          function (row, i)  { ... }\n *      ```\n * @param {Object} [config] - The configuration object to control the inclusion exclusion of a row in resultant\n *      DataModel instance\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const select = (...args) => dm => dm.select(...args);\n\n/**\n * This is functional version of projection operator. {@link link_to_projection | Projection} is a column filtering\n * operation.It expects list of fields name and either include those or exclude those based on {@link FilteringMode} on\n * the  resultant variable.It returns a function which is called with the DataModel instance on which the action needs\n * to be performed.\n *\n * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n * @param {Object} [config] - An optional config to control the creation of new DataModel\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const project = (...args) => dm => dm.project(...args);\n\n/**\n * This is functional version of binnig operator. Binning happens on a measure field based on a binning configuration.\n * Binning in DataModel does not aggregate the number of rows present in DataModel instance after binning, it just adds\n * a new field with the binned value. Refer binning {@link example_of_binning | example} to have a intuition of what\n * binning is and the use case.\n *\n * Binning can be configured by\n * - providing custom bin configuration with non uniform buckets\n * - providing bin count\n * - providing each bin size\n *\n * When custom buckets are provided as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const buckets = {\n *      start: 30\n *      stops: [80, 100, 110]\n *  };\n *  const config = { buckets, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(dm);\n *\n * @text\n * When `binCount` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binCount: 5, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @text\n * When `binSize` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binSize: 200, name: 'binnedHorsepower' }\n *  const binnedDm = dataModel.bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {String} name Name of measure which will be used to create bin\n * @param {Object} config Config required for bin creation\n * @param {Array.<Number>} config.bucketObj.stops Defination of bucket ranges. Two subsequent number from arrays\n *      are picked and a range is created. The first number from range is inclusive and the second number from range\n *      is exclusive.\n * @param {Number} [config.bucketObj.startAt] Force the start of the bin from a particular number.\n *      If not mentioned, the start of the bin or the lower domain of the data if stops is not mentioned, else its\n *      the first value of the stop.\n * @param {Number} config.binSize Bucket size for each bin\n * @param {Number} config.binCount Number of bins which will be created\n * @param {String} config.name Name of the new binned field to be created\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const bin = (...args) => dm => dm.bin(...args);\n\n/**\n * This is functional version of `groupBy` operator.Groups the data using particular dimensions and by reducing\n * measures. It expects a list of dimensions using which it projects the datamodel and perform aggregations to reduce\n * the duplicate tuples. Refer this {@link link_to_one_example_with_group_by | document} to know the intuition behind\n * groupBy.\n *\n * DataModel by default provides definition of few {@link reducer | Reducers}.\n * {@link ReducerStore | User defined reducers} can also be registered.\n *\n * This is the chained implementation of `groupBy`.\n * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n *\n * @example\n * const groupBy = DataModel.Operators.groupBy;\n * const groupedFn = groupBy(['Year'], { horsepower: 'max' } );\n * groupedDM = groupByFn(dm);\n *\n * @public\n *\n * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n *      schema of the variable.\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const groupBy = (...args) => dm => dm.groupBy(...args);\n\n/**\n * Enables composing operators to run multiple operations and save group of operataion as named opration on a DataModel.\n * The resulting DataModel will be the result of all the operation provided. The operations provided will be executed in\n * a serial manner ie. result of one operation will be the input for the next operations (like pipe operator in unix).\n *\n * Suported operations in compose are\n * - `select`\n * - `project`\n * - `groupBy`\n * - `bin`\n * - `compose`\n *\n * @example\n * const compose = DataModel.Operators.compose;\n * const select = DataModel.Operators.select;\n * const project = DataModel.Operators.project;\n *\n * let composedFn = compose(\n *    select(fields => fields.netprofit.value <= 15),\n *    project(['netprofit', 'netsales']));\n *\n * const dataModel = new DataModel(data1, schema1);\n *\n * let composedDm = composedFn(dataModel);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<Operators>} operators: An array of operation that will be applied on the\n * datatable.\n *\n * @returns {DataModel} Instance of resultant DataModel\n */\nexport const compose = (...operations) =>\n    (dm, config = { saveChild: true }) => {\n        let currentDM = dm;\n        let frstChild;\n        const derivations = [];\n        const saveChild = config.saveChild;\n\n        operations.forEach((operation) => {\n            currentDM = operation(currentDM);\n            derivations.push(...currentDM._derivation);\n            if (!frstChild) {\n                frstChild = currentDM;\n            }\n        });\n\n        saveChild && currentDM.addParent(dm, derivations);\n        if (derivations.length > 1) {\n            frstChild.dispose();\n        }\n\n        return currentDM;\n    };\n","/**\n * Wrapper on calculateVariable() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const calculateVariable = (...args) => dm => dm.calculateVariable(...args);\n\n/**\n * Wrapper on sort() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const sort = (...args) => dm => dm.sort(...args);\n","import { crossProduct } from './cross-product';\nimport { naturalJoinFilter } from './natural-join-filter-function';\n\nexport function naturalJoin (dataModel1, dataModel2) {\n    return crossProduct(dataModel1, dataModel2, naturalJoinFilter(dataModel1, dataModel2), true);\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hyperdis\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hyperdis\"] = factory();\n\telse\n\t\troot[\"hyperdis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const makeEntry = (arr, sCon) => {\n    arr.forEach((elem) => {\n        if (elem === undefined || elem === null) {\n            return;\n        }\n        sCon[elem] = 1;\n    });\n};\n\nexport default class ForeignSet {\n    constructor (arr) {\n        this._set = {};\n        makeEntry(arr, this._set);\n    }\n\n    append (arr) {\n        makeEntry(arr, this._set);\n        return this;\n    }\n\n    toArray () {\n        return Object.keys(this._set);\n    }\n\n    static difference (set1, set2) {\n        let key;\n        const filteredKeys = [],\n            s1 = set1._set,\n            s2 = set2._set;\n        for (key in s1) {\n            if (!({}).hasOwnProperty.call(s1, key)) {\n                continue;\n            }\n            if (key in s2) {\n                continue;\n            }\n            filteredKeys.push(key);\n        }\n        return new ForeignSet(filteredKeys);\n    }\n}\n","/* global window */\n\nimport ForeignSet from './set';\n\nconst\n    isSimpleObject = (obj) => {\n        let token;\n        if (typeof obj === 'object') {\n            if (obj === null) { return false; }\n            token = Object.prototype.toString.call(obj);\n            if (token === '[object Object]') {\n                return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n            }\n        }\n        return false;\n    },\n    minMsThreshold = 16,\n    /* istanbul ignore next */win = typeof window === 'undefined' ? (this || {}) : window,\n    /* istanbul ignore next */ reqAnimFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame ||\n        win.mozRequestAnimationFrame || win.oRequestAnimationFrame ||\n        win.msRequestAnimationFrame ||\n        function (callback) {\n            setTimeout(callback, minMsThreshold);\n        },\n\n    getTimeBasedId = () => {\n        if (getTimeBasedId.__lastTime === new Date().getTime()) {\n            return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n        }\n\n        getTimeBasedId.__id = 0;\n        getTimeBasedId.__lastTime = new Date().getTime();\n        return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n    },\n    pullableRecent = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const\n                    hist = node.history,\n                    l = hist.length - 1;\n                return [hist[l - 1 < 0 ? 0 : l - 1], hist[l]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    pullableEnd = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const hist = node.history;\n                return [hist[0], hist[hist.length - 1]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    unique = fns => fns\n                    .reduce((store, fn) => {\n                // @warn function with side effect, it mutates the store passed during initialization\n                        if (fn.__id in store.map) {\n                            return store;\n                        }\n\n                        store.map[fn.__id] = 1;\n                        store.unique.push(fn);\n\n                        return store;\n                    }, { map: {}, unique: [] })\n                    .unique,\n    compose = fns => () => {\n        fns.forEach(fn => fn());\n    },\n    flat = (...params) => {\n        const res = [];\n        params.forEach(param => res.push(...param));\n        return res;\n    },\n    identityMap = arrays => arrays,\n    splitPathProp = (path) => {\n        const pathArr = path.split('.'),\n            len = pathArr.length;\n        return [pathArr.slice(0, len - 1), pathArr[len - 1]];\n    },\n    scheduler = (onFinishCallback) => {\n        let queue = [],\n            animationFrame = null;\n\n        onFinishCallback = onFinishCallback &&\n            typeof onFinishCallback === 'function' && onFinishCallback || (() => { });\n\n        return (listeners, payload) => {\n            [].push.apply(queue, listeners);\n            if (animationFrame === null) {\n                animationFrame = reqAnimFrame(() => {\n                    const tempQ = queue.slice(0);\n                    queue.length = 0;\n                    animationFrame = null;\n\n                    unique(tempQ).forEach(fn => fn());\n                    onFinishCallback(payload);\n                });\n            }\n        };\n    },\n    fetch = namedNode => (...params) => params.map((param) => {\n        const node = namedNode[param];\n        return {\n            name: node.name,\n            qualifiedName: node.qualifiedName,\n            value: node.seed\n        };\n    }),\n    fetchAggregator = (...params) => ({\n        dependencies: params.slice(0, params.length - 1),\n        fn: params[params.length - 1]\n    }),\n    getUpstreamNodes = (list) => {\n        let res = [];\n        const map = {};\n        list.forEach(node => map[node.qualifiedName] = -1);\n        function rec (arr) {\n            arr.forEach((node) => {\n                let qname,\n                    placedIndex,\n                    preArr,\n                    postArr;\n                if (!((qname = node.qualifiedName) in map)) {\n                    map[qname] = res.push(node) - 1;\n                } else {\n                    placedIndex = map[qname];\n                    if (placedIndex !== -1 && placedIndex !== res.length - 1) {\n                        // If not the last element, readjust the array so that the later dependency position is saved\n                        preArr = res.slice(0, placedIndex);\n                        postArr = res.slice(placedIndex + 1);\n                        res = preArr.concat(postArr);\n\n                        // reset the index in map\n                        postArr.forEach((elem, i) => map[elem.qualifiedName] = i + preArr.length);\n                        map[qname] = res.push(node) - 1;\n                    }\n                }\n                rec(node.outgoingEdges);\n            });\n        }\n        rec(list);\n        return res;\n    },\n    resolver = {\n        accumulate: (...params) => {\n            const resp = {};\n            params.forEach((nodeDetails) => {\n                Object.assign(resp, { [nodeDetails.name]: nodeDetails.value });\n            });\n            return resp;\n        },\n        identity: nodeDetails => nodeDetails.value\n    };\n\nfunction resolveDependencyOrder (node, resolved, resolveMap) {\n    let qname;\n    node.edges.forEach((neighbour) => {\n        resolveDependencyOrder(neighbour, resolved, resolveMap);\n    });\n\n    if (node.isRoot() || (qname = node.qualifiedName) in resolveMap) {\n        return;\n    }\n    resolved.push(node);\n    resolveMap[qname] = 1;\n}\n\nclass CustomResolver {\n    constructor (resolver) {\n        this.fn = resolver;\n        this.dep = [];\n    }\n\n    addDependencies(...dep) {\n        this.dep.push(...dep);\n        return this;\n    }\n\n    getDependencies () {\n        return this.dep;\n    }\n\n    get () {\n        return this.fn;\n    }\n}\n\nexport {\n    isSimpleObject,\n    scheduler,\n    compose,\n    flat,\n    identityMap,\n    pullableEnd,\n    pullableRecent,\n    unique,\n    splitPathProp,\n    resolver,\n    ForeignSet,\n    resolveDependencyOrder,\n    fetch,\n    fetchAggregator,\n    CustomResolver,\n    getUpstreamNodes\n};\n","export default class GraphNode {\n    constructor (name, qualifiedName, options) {\n        /* istanbul ignore next */options = options || {};\n        this.name = name;\n        this.qualifiedName = qualifiedName;\n        this.edges = [];\n        this.outgoingEdges = [];\n        this._seed = null;\n        this.requireResolve = true;\n        this.retriever = options.retriever;\n        this.history = [];\n        this.resolver = null;\n        this.electricEdges = [];\n    }\n\n    addDependencies (...dep) {\n        this.edges.push(...dep);\n        dep.forEach(entry => entry.outgoingEdges.push(this));\n        return this;\n    }\n\n    addElectricNode (node) {\n        this.electricEdges.push(node);\n        return this;\n    }\n\n    get seed () {\n        return this._seed;\n    }\n\n    set seed (value) {\n        this._seed = value;\n        this.requireResolve = true;\n        return this;\n    }\n\n    resolve () {\n        this.seed = this.resolver(...this.retrieveDetails());\n        this.history.push(this.seed);\n        this.requireResolve = false;\n        return this;\n    }\n\n    retrieveDetails () {\n        if (this.edges.length === 0) {\n            return [{\n                name: this.name,\n                qualifiedName: this.qualifiedName,\n                value: this.seed\n            }];\n        }\n        return this.retriever(...this.edges.map(edge => edge.qualifiedName));\n    }\n\n    repeatHead () {\n        const\n            history = this.history,\n            head = history[history.length - 1];\n        // @todo- Akash, write test case if history.length === 0 to pass code coverage\n        if (history.length === 0) {\n            return this;\n        }\n        history.push(head);\n        return this;\n    }\n\n    flush () {\n        const hist = this.history,\n            head = hist[hist.length - 1];\n        hist.length = 0;\n        hist.push(head);\n        return this;\n    }\n\n    isRoot () {\n        return this.name === null;\n    }\n}\n","import {\n    pullableRecent,\n    pullableEnd\n} from './utils';\n\nexport default class ElectricNode {\n    constructor () {\n        this.edges = [];\n        this.listeners = {\n            nextFrame: [],\n            currentFrame: []\n        };\n    }\n\n    addEdges (...nodes) {\n        this.edges.push(...nodes);\n        return this;\n    }\n\n    regListenerForCurrFrame (fn) {\n        const lstnrs = this.listeners.currentFrame;\n        let index = lstnrs.push(pullableRecent(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.currentFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    regListenerForNextFrame (fn) {\n        const lstnrs = this.listeners.nextFrame;\n        let index = lstnrs.push(pullableEnd(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.nextFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    hasNextFrameListener () {\n        return !!this.listeners.nextFrame.length;\n    }\n}\n","import {\n    isSimpleObject,\n    resolver,\n    // upstreamNodes,\n    flat,\n    resolveDependencyOrder,\n    getUpstreamNodes,\n    ForeignSet,\n    fetch,\n    CustomResolver,\n    scheduler\n} from './utils';\nimport Node from './graph-node';\nimport ElectricNode from './electric-node';\n\nexport default class Graph {\n    constructor () {\n        this.qualifiedNodeMap = {};\n        this.retriever = fetch(this.qualifiedNodeMap);\n        this.root = new Node(null, null, { retriever: this.retriever });\n        this.root.resolver = resolver.accumulate;\n\n        this._wholeSet = null;\n        this._propagate = true;\n        this.propagationOverride = {\n            currentFrameListeners: false,\n            nextFrameListeners: false\n        };\n\n        this._schedule = scheduler((payload) => {\n            let qname;\n            for (qname in payload.flushTarget) {\n                if (!({}).hasOwnProperty.call(this.qualifiedNodeMap, qname)) {\n                    return;\n                }\n                this.qualifiedNodeMap[qname].flush();\n            }\n        });\n    }\n\n    createNodesFrom (obj, mount) {\n        let val,\n            resolveReqList;\n        const qualifiedNodeMap = this.qualifiedNodeMap,\n            root = this.root,\n            retriever = this.retriever;\n\n        (function rec (objn, qualifiedName, history) {\n            let key,\n                qname,\n                perv,\n                node;\n\n            for (key in objn) {\n                if (!({}).hasOwnProperty.call(objn, key)) {\n                    continue;\n                }\n                qname = `${qualifiedName}${key}`;\n                node = new Node(key, qname, { retriever });\n                qualifiedNodeMap[qname] = node;\n\n                if ((perv = history.perv) !== undefined) {\n                    perv.addDependencies(node);\n                } else {\n                    // top most level entries\n                    root.addDependencies(node);\n                }\n\n                if (isSimpleObject(val = objn[key])) {\n                    rec(val, `${qualifiedName}${key}.`, { perv: node });\n                    node.resolver = resolver.accumulate;\n                } else if (val instanceof CustomResolver) {\n                    node.resolver = val.get();\n                    node.addDependencies(...val.getDependencies().map(qname => qualifiedNodeMap[qname]));\n                } else {\n                    node.resolver = resolver.identity;\n                    node.seed = val;\n                    // node.resolve();\n                }\n            }\n        }(obj, mount === null ? '' : `${mount}.`, {\n            perv: qualifiedNodeMap[mount]\n        }));\n\n        this._wholeSet = new ForeignSet(Object.keys(this.qualifiedNodeMap));\n\n        // Recalculate the model without firing the listeners\n        // @todo selective branch resolve. Currently resolve gets called even for a branch which was updated\n        resolveReqList = this.constructor.getResolvedList(root).concat(root).filter(node => node.requireResolve);\n        resolveReqList.forEach(node => node.resolve());\n        getUpstreamNodes(resolveReqList).forEach(node => node.resolve());\n        return this;\n    }\n\n    getNodeValue (prop) {\n        if (prop in this.qualifiedNodeMap) {\n            return this.qualifiedNodeMap[prop].seed;\n        }\n        return undefined;\n    }\n\n    createElectricNodeOf (props, fnSpec) {\n        const nodes = props.map(prop => this.qualifiedNodeMap[prop]),\n            eNode = new ElectricNode().addEdges(...nodes);\n\n        nodes.forEach(node => node.addElectricNode(eNode));\n        return eNode[`regListenerFor${fnSpec.type}`](fnSpec.fn);\n    }\n\n    update (...params) {\n        let changedSet,\n            upstreamNodes;\n        const\n            electricEdges = [],\n            nodes = params.map((entry) => {\n                entry[0].seed = entry[1];\n                return entry[0];\n            });\n        nodes.forEach(node => node.resolve());\n        electricEdges.push(...flat(...nodes.map(node => node.electricEdges)));\n        changedSet = new ForeignSet(nodes.map(node => node.qualifiedName));\n\n        if (!this._propagate) {\n            this.__execUniqueElectricEdges(electricEdges);\n            this._propagate = true;\n            return this;\n        }\n\n        upstreamNodes = getUpstreamNodes(nodes);\n        upstreamNodes.forEach(upstreamNode => upstreamNode.resolve());\n        changedSet.append(upstreamNodes.map(node => node.qualifiedName));\n        electricEdges.push(...flat(...upstreamNodes.map(node => node.electricEdges)));\n\n        this.__execUniqueElectricEdges(Array.from(new Set(electricEdges)), changedSet);\n        return this;\n    }\n\n    __execUniqueElectricEdges (electricEdges, changedSet) {\n        const\n            cfLstnrs = [], // current frame listeners\n            nfLstnrs = []; // next frame listeners\n        if (changedSet) {\n            const\n                differenceSet = ForeignSet.difference(this._wholeSet, changedSet),\n                entries = differenceSet.toArray();\n\n            entries.forEach(entry => this.qualifiedNodeMap[entry].repeatHead());\n        }\n\n        electricEdges.forEach((e) => {\n            cfLstnrs.push(...e.listeners.currentFrame);\n        });\n        electricEdges.forEach((e) => {\n            nfLstnrs.push(...e.listeners.nextFrame);\n        });\n\n        !this.propagationOverride.currentFrameListeners && cfLstnrs.forEach(fn => fn());\n        !this.propagationOverride.nextFrameListeners && this._schedule(nfLstnrs, { flushTarget: changedSet });\n        this.resetPropagationOverride();\n        return this;\n    }\n\n    resetNodeValue (...qnames) {\n        const nodes = qnames.map(qname => this.qualifiedNodeMap[qname]),\n            args = nodes.map(node => [node, node.seed]);\n        this.update(...args);\n        return this;\n    }\n\n    static getResolvedList (node) {\n        const resolved = [];\n        resolveDependencyOrder(node, resolved, {});\n        return resolved;\n    }\n\n    stopPropagation () {\n        this._propagate = false;\n        return this;\n    }\n\n    resetPropagationOverride () {\n        this.propagationOverride.currentFrameListeners = false;\n        this.propagationOverride.nextFrameListeners = false;\n        return this;\n    }\n\n    setPropagationOverride (key) {\n        this.propagationOverride[`${key}Listeners`] = true;\n        return this;\n    }\n\n    getNodeFromQualifiedName (qname) {\n        return this.qualifiedNodeMap[qname];\n    }\n}\n","import Graph from './graph';\nimport { CustomResolver, fetchAggregator } from './utils';\n\n/**\n * The container class for Hyperdis. Hyperdis is an enabler for observable object with few interesting features like,\n * calculated property, next frame and same frame listeners, multiple listeners etc with a dependency resolving system.\n * It internally uses a graph to hold the hierarchial relationship of a object. Model is merely a container which\n * ties all the components together.\n *\n * @todo Circular dependency detection is not present\n *\n * @example check src/index.spec.js\n * @class\n */\nclass Model {\n    constructor () {\n        this._graph = new Graph();\n        this._lockFlag = false;\n        this._reqQ = [];\n    }\n\n    /**\n     * Static method to create and init the model with an observable seed\n     *\n     * @param {Object} obj The target object which is required to be made observable\n     * @return {Model} instance of the observable object model\n     */\n    static create (obj) {\n        return new Model()._addPropInModel(null, obj);\n    }\n\n    /**\n     * Appends more observable property on the already observable instance. This mutates the original model.\n     *\n     * This function works in two mode. One being\n     * @param {String} mountPoint the property on which the new set of properties will be mounted. If its a nested\n     *                          property then the mountPoint has to be written such a way so it feels like you are\n     *                          accessing the object. If the mount point is not found then he obeservables are added in\n     *                          the root.\n     * @param {Object} The target object which is required to be made observable\n     *\n     * Another being\n     * @param {Object} The target object which is required to be made observable\n     *\n     * @return {Model} instance of the observable object model\n     */\n    append (...params) {\n        let mountPoint,\n            obj;\n\n        if (params.length === 1) {\n            mountPoint = null;\n            obj = params[0];\n        } else {\n            mountPoint = params[0];\n            obj = params[1];\n        }\n\n        this._addPropInModel(mountPoint, obj);\n        return this;\n    }\n\n    /**\n     * Creates a calculated variable from existing variable. This variable can't be updated from outside.\n     * @param {string} mountpoint property path on which the new variable will be placed\n     * @param {string} name name of the variable. If the variable could have hierarchy like `limits.start`\n     * @param {Function} fn funtion where the dependent variables are injected based on the dependency requirement\n     */\n    calculatedProp (...params) {\n        let calculationConfig,\n            customResolver,\n            varName,\n            mount,\n            fetchFn;\n\n        if (params.length > 2) {\n            mount = params[0];\n            varName = params[1];\n            fetchFn = params[2];\n        } else {\n            mount = null;\n            varName = params[0];\n            fetchFn = params[1];\n        }\n\n        calculationConfig = fetchFn(fetchAggregator);\n        customResolver = new CustomResolver(calculationConfig.fn);\n        customResolver.addDependencies(...calculationConfig.dependencies);\n\n        this._addPropInModel(mount, { [varName]: customResolver });\n        return this;\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    _addPropInModel (mountPoint, obj) {\n        this._graph.createNodesFrom(obj, mountPoint);\n        return this;\n    }\n\n    /**\n     * Register a listener in the current frame when a property or group of properties is changed.\n     *\n     * @example\n     * This function takes a single or group of property and handler which is called when any of the properties are\n     * changed.\n     * When a single property is changed the handler is called with two parameter, what was the old value of the state\n     * property and what is the new value.\n     * myState.on('range.start', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 9);\n     * // Output\n     * Value before prop change 1\n     * Value after prop change 9\n     *\n     * If a handler is registered on change of a property which has another state property as value, then the handler\n     * gets called whenever any state property connected to it gets changed\n     *\n     * myState.on('range', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 10);\n     * myState.prop('range.type.absolute', false);\n     *\n     * // Output\n     * Value before prop change\n     * range {\n     *      start: 9,\n     *      end: 5,\n     *      type: {\n     *          absolute: true\n     *      }\n     * }\n     * Value after prop change\n     * range: {\n     *      start: 10,\n     *      end: 5,\n     *      type: {\n     *          absolute: false\n     *      }\n     * }\n     * If a handler is registered with more than one property change then, the handler is called when any of the\n     * properties gets changed. In this cast the handler is called with more than one parameter: each for one state\n     * property which is registered for listening. Each parameter is of type array containing [oldValue, newValue]\n     *\n     * myState.on('range.start', 'range.end', (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * myState.prop('range.start', 12);\n     *\n     * // Output\n     * Start [10, 12]\n     * End [5, 5]\n     *\n     * myState.prop('range.end', 7);\n     *\n     * // Output\n     * Start [12, 12]\n     * End [5, 7]\n     *\n     * The on returns a function which is when called the listener registered gets unregistered\n     *\n     * let unsub = myState.on(['range.start', 'range.end'], (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * // Unsubscribe\n     * unsub()\n     *\n     * On takes an optional boolean value as the last parameter, which if passed as a true value the handler gets called\n     * during registration itself.\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    on (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed in the current stack frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'CurrFrame',\n                fn\n            });\n\n        if (instantCall) {\n            // Bar current next frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('nextFrame').resetNodeValue(...props);\n        }\n        return unsub;\n    }\n\n    /**\n     * Register a listener for the next frame when a property or group of properties is changed.\n     *\n     * @example\n     * See the examples for the on listener\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties. Here the oldvalue is last value of the last frame\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    next (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed at the tick of next animation frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'NextFrame',\n                fn\n            });\n\n        // @todo check support for this from the graph side\n        if (instantCall) {\n            // Bar current frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('currentFrame').resetNodeValue(...props);\n        }\n\n        return unsub;\n    }\n\n    /**\n     * Lock queues the request of property change and releases the change when unlock is called. This is helpful when\n     * multiple property is getting called and the model listeners are to be fired once at the end of update.\n     *\n     * @return {Model} instance of the model\n     */\n    lock () {\n        this._lockFlag = true;\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * Unlock unleashes the change done after the lock was called.\n\n     * @return {Model} instance of the model\n     */\n    unlock () {\n        this._lockFlag = false;\n        this.setProp(...this._reqQ);\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * This acts as getter and setter. If the function is called by passing only one argument, it retrieve the value\n     * associated with the property. If the same function is called using two parameters, first one being the property\n     * and second one being the value, then the value is set for the property and the handlers are called (if any)\n     * which got registered using the on function\n     *\n     * Getter\n     * @param {string} prop property path whose value to be retrieved\n     * @return {Object} value of the property at the time of call\n     *\n     * Setter\n     * @param {string} property property path whose value to be ser\n     * @return {Model} instance of the model\n     */\n    prop (...params) {\n        let prop,\n            val,\n            len;\n\n        switch (len = params.length) {\n        case 1:\n            prop = params[0];\n            break;\n\n        case 2:\n            prop = params[0];\n            val = params[1];\n            break;\n\n        default:\n            return this;\n        }\n\n        if (len === 2) {\n            this._lockFlag ? this._reqQ.push([prop, val]) : this.setProp([prop, val]);\n            return this;\n        }\n\n        return this._graph.getNodeValue(prop);\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    setProp (...props) {\n        // Filter out the calculated variables, so that it cant be changed from outside\n        // @todo if a node is not leafValue, and change is called, ignore it too\n        // props = props.filter(prop => !(VirtualObj.walkTill(prop[0].split('.'), this._vObj).leafValue()\n        //     instanceof CalculatedVar));\n\n        if (props.length === 0) {\n            return this;\n        }\n\n        this._graph.update(...props.map(prop => [this._graph.getNodeFromQualifiedName(prop[0]), prop[1]]));\n        return this;\n    }\n\n    /**\n     * Retrieves the graph representation of the object\n     * @return {Graph} instance of the graph associated to the model\n     */\n    graph () {\n        return this._graph;\n    }\n\n    /**\n     * Get serialized data from the model\n     *\n     * @return {Object} Serialized data\n     */\n    serialize () {\n        return this._graph.root.seed;\n    }\n}\n\nexport default Model;\n","import Model from './model';\n\nexport default Model;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar _containerManager = require('./container-manager');\n\nvar _containerManager2 = _interopRequireDefault(_containerManager);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    BLANK = '',\n    htmlSplCharSpace = { ' ': '&nbsp;' },\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\n/*\n * Create new instance of SmartLabelManager.\n *\n * SmartLabelManager controls the lifetime of the execution space where the text's metrics will be calculated.\n * This takes a string for a given style and returns the height, width.\n * If a bound box is defined it wraps the text and returns the wrapped height and width.\n * It allows to append ellipsis at the end if the text is truncated.\n *\n * @param {String | Number} id - Id of the instance. If the same id is passed, it disposes the old instance and\n *                              save the new one;\n * @param {String | HTMLElement} container - The id or the instance of the container where the intermediate dom\n *                              elements are to be attached. If not passed, it appends in div\n *\n * @param {Boolean} useEllipses - This decides if a ellipses to be appended if the text is truncated.\n * @param {Object} options - Control options\n *                          {\n *                              maxCacheLimit: No of letter to be cached. Default: 500.\n *                          }\n * @constructor\n */\nfunction SmartLabelManager(id, container, useEllipses, options) {\n    var wrapper,\n        prop,\n        max,\n        prevInstance,\n        isBrowserLess = false,\n        store = SmartLabelManager.store;\n\n    if (typeof id === 'undefined' || typeof id === 'object') {\n        return;\n    }\n\n    if (prevInstance = store[id]) {\n        prevInstance.dispose();\n    }\n\n    store[id] = this;\n    options = options || {};\n    options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n    if (typeof container === 'string') {\n        container = doc.getElementById(container);\n    }\n\n    wrapper = slLib.createContainer(container);\n    wrapper.innerHTML = slLib.testStrAvg;\n\n    if (documentSupport.isHeadLess || !documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth) {\n        isBrowserLess = true;\n    }\n\n    wrapper.innerHTML = '';\n    for (prop in slLib.parentContainerStyle) {\n        wrapper.style[prop] = slLib.parentContainerStyle[prop];\n    }\n\n    this.id = id;\n    this.parentContainer = wrapper;\n\n    this._containerManager = new _containerManager2['default'](wrapper, isBrowserLess, 10);\n    this._showNoEllipses = !useEllipses;\n    this._init = true;\n    this.style = {};\n    this.options = options;\n\n    this.setStyle();\n}\n\n/*\n * getSmartText returns the text separated by <br/> whenever a break is necessary. This is to recgonize one\n * generalized format independent of the implementation (canvas based solution, svg based solution). This method\n * converts the output of getSmartText().text to array of lines if the text is wrapped. It sets a named property\n * `lines` on the object passed as parameter.\n *\n * @param {Object} smartlabel - the object returned by getSmartText based on which line arr which to be formed.\n *\n * @return {Object} - The same object which was passed in the arguments. Also a named property `lines` is set.\n */\nSmartLabelManager.textToLines = function (smartlabel) {\n    smartlabel = smartlabel || {};\n\n    if (!smartlabel.text) {\n        smartlabel.text = '';\n    } else if (typeof smartlabel.text !== 'string') {\n        smartlabel.text = smartlabel.text.toString();\n    }\n\n    smartlabel.lines = smartlabel.text.split(/\\n|<br\\s*?\\/?>/ig);\n    return smartlabel;\n};\n\n// Saves all the instance created so far\nSmartLabelManager.store = {};\n\n// Calculates space taken by a character with an approximation value which is calculated by repeating the\n// character by string length times.\nSmartLabelManager.prototype._calCharDimWithCache = function (text, calculateDifference, length) {\n    if (!this._init) {\n        return false;\n    }\n\n    var size,\n        csArr,\n        tw,\n        twi,\n        cachedStyle,\n        asymmetricDifference,\n        maxAdvancedCacheLimit = this.options.maxCacheLimit,\n        container = this._container,\n        style = this.style || {},\n        cache = this._advancedCache || (this._advancedCache = {}),\n        advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []),\n        cacheName = text + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK),\n        cacheInitName = text + 'init' + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK);\n\n    htmlSplCharSpace[text] && (text = htmlSplCharSpace[text]);\n\n    if (!calculateDifference) {\n        asymmetricDifference = 0;\n    } else {\n        if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n            container.innerHTML = text.repeat ? text.repeat(length) : Array(length + 1).join(text); // jshint ignore:line\n            tw = container.offsetWidth;\n\n            container.innerHTML = text;\n            twi = container.offsetWidth;\n\n            asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n            advancedCacheKey.push(cacheInitName);\n            if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n                delete cache[advancedCacheKey.shift()];\n            }\n        }\n    }\n\n    if (cachedStyle = cache[cacheName]) {\n        csArr = cachedStyle.split(',');\n        return {\n            width: parseFloat(csArr[0], 10),\n            height: parseFloat(csArr[1], 10)\n        };\n    }\n\n    container.innerHTML = text;\n\n    size = {\n        height: container.offsetHeight,\n        width: container.offsetWidth + asymmetricDifference\n    };\n\n    cache[cacheName] = size.width + ',' + size.height;\n    advancedCacheKey.push(cacheName);\n    if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n    }\n\n    return size;\n};\n\n// Provide function to calculate the height and width based on the environment and available support from dom.\nSmartLabelManager.prototype._getWidthFn = function () {\n    var contObj = this._containerObj,\n        container = this._container,\n        svgText = contObj.svgText;\n\n    if (svgText) {\n        return function (str) {\n            var bbox, width;\n\n            svgText.textContent = str;\n            bbox = svgText.getBBox();\n            width = bbox.width - SVG_BBOX_CORRECTION;\n            if (width < 1) {\n                width = bbox.width;\n            }\n\n            return width;\n        };\n    } else {\n        return function (str) {\n            container.innerHTML = str;\n            return container.offsetWidth;\n        };\n    }\n};\n\n/*\n * Sets the style based on which the text's metrics to be calculated.\n *\n * @param {Object} style - The style object which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                      }\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.setStyle = function (style) {\n    if (!this._init) {\n        return this;\n    }\n\n    var sCont;\n\n    if (style === this.style && !this._styleNotSet) {\n        return;\n    }\n\n    if (!style) {\n        style = this.style;\n    }\n\n    slLib.setLineHeight(style);\n    this.style = style;\n\n    this._containerObj = sCont = this._containerManager.get(style);\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n\n    return this;\n};\n\n/*\n * Decides whether ellipses to be shown if the node is truncated\n *\n * @param {Boolean} useEllipses - decides if a ellipses to be appended if the text is truncated. Default: false\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n    if (!this._init) {\n        return this;\n    }\n    this._showNoEllipses = !useEllipses;\n    return this;\n};\n\n/*\n * Get wrapped or truncated text if a bound box is defined around it. The result text would be separated by <br/>\n * if wrapped\n *\n * @param {String} text - the subject text\n * @param {Number} maxWidth - width in px of the the bound box\n * @param {Number} maxHeight - height in px of the the bound box\n * @param {Boolean} noWrap - whether the text to be wrapped. Default false.\n *\n * @return {Object} - The metrics of the text bounded by the box\n *                  {\n *                      height : height of the wrapped text\n *                      width : width of the wrapped text\n *                      isTruncated : whether the text is truncated\n *                      maxHeight : Maximum height given\n *                      maxWidth : Maximum width given\n *                      oriText : Original text sent\n *                      oriTextHeight : Original text height\n *                      oriTextWidth : Original text width\n *                      text : SMART TEXT\n *                  }\n */\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var len,\n        trimStr,\n        tempArr,\n        tmpText,\n        maxWidthWithEll,\n        toolText,\n        oriWidth,\n        oriHeight,\n        newCharIndex,\n        nearestChar,\n        tempChar,\n        getWidth,\n        initialLeft,\n        initialTop,\n        getOriSizeImproveObj,\n        spanArr,\n        x,\n        y,\n        minWidth,\n        elem,\n        chr,\n        elemRightMostPoint,\n        elemLowestPoint,\n        lastBR,\n        removeFromIndex,\n        removeFromIndexForEllipses,\n        hasHTMLTag = false,\n        maxStrWidth = 0,\n        lastDash = -1,\n        lastSpace = -1,\n        lastIndexBroken = -1,\n        strWidth = 0,\n        strHeight = 0,\n        oriTextArr = [],\n        i = 0,\n        ellipsesStr = this._showNoEllipses ? '' : '...',\n        lineHeight = this._lineHeight,\n        context = this._context,\n        container = this._container,\n        sCont = this._containerObj,\n        ellipsesWidth = sCont.ellipsesWidth,\n        dotWidth = sCont.dotWidth,\n        characterArr = [],\n        dashIndex = -1,\n        spaceIndex = -1,\n        lastLineBreak = -1,\n        fastTrim = function fastTrim(str) {\n        str = str.replace(/^\\s\\s*/, '');\n        var ws = /\\s/,\n            i = str.length;\n        while (ws.test(str.charAt(i -= 1))) {/* jshint noempty:false */}\n        return str.slice(0, i + 1);\n    },\n        smartLabel = {\n        text: text,\n        maxWidth: maxWidth,\n        maxHeight: maxHeight,\n        width: null,\n        height: null,\n        oriTextWidth: null,\n        oriTextHeight: null,\n        oriText: text,\n        isTruncated: false\n    };\n\n    getWidth = this._getWidthFn();\n\n    // In some browsers, offsetheight of a single-line text is getting little (1 px) heigher value of the\n    // lineheight. As a result, smartLabel is unable to return single-line text.\n    // To fix this, increase the maxHeight a little amount. Hence maxHeight =  lineHeight * 1.2\n    if (maxHeight === lineHeight) {\n        maxHeight *= 1.2;\n    }\n\n    if (container) {\n        if (!documentSupport.isBrowserLess) {\n            hasHTMLTag = slLib.xmlTagRegEx.test(text);\n            if (!hasHTMLTag) {\n                // Due to support of <,> for xml we convert &lt;, &gt; to <,> respectively so to get the correct\n                // width it is required to convert the same before calculation for the new improve version of the\n                // get text width.\n                tmpText = text.replace(slLib.ltgtRegex, function (match) {\n                    return match === '&lt;' ? '<' : '>';\n                });\n                getOriSizeImproveObj = this.getOriSize(tmpText, true);\n\n                smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n                smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n            } else {\n                container.innerHTML = text;\n                smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n                smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n            }\n\n            if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n                smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n                smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n                return smartLabel;\n            }\n\n            if (lineHeight > maxHeight) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = 0;\n                smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n        }\n\n        // Calculate width with ellipses\n        text = fastTrim(text).replace(/(\\s+)/g, ' ');\n        maxWidthWithEll = this._showNoEllipses ? maxWidth : maxWidth - ellipsesWidth;\n\n        if (!hasHTMLTag) {\n            oriTextArr = text.split('');\n            len = oriTextArr.length;\n            trimStr = '', tempArr = [];\n            tempChar = oriTextArr[0];\n\n            if (this._cache[tempChar]) {\n                minWidth = this._cache[tempChar].width;\n            } else {\n                minWidth = getWidth(tempChar);\n                this._cache[tempChar] = { width: minWidth };\n            }\n\n            if (maxWidthWithEll > minWidth) {\n                tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split('');\n                i = tempArr.length;\n            } else if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            } else if (ellipsesStr) {\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            strWidth = getWidth(tempArr.join(''));\n            strHeight = this._lineHeight;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = smartLabel.oriText;\n                            smartLabel.width = getWidth(smartLabel.text);\n                            smartLabel.height = this._lineHeight;\n                            return smartLabel;\n                        }\n                    }\n                }\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = strWidth;\n                smartLabel.height = this._lineHeight;\n                return smartLabel;\n            } else {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (tempChar === ' ' && !context) {\n                        tempChar = '&nbsp;';\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            /** @todo use regular expressions for better performance. */\n                            lastSpace = text.substr(0, tempArr.length).lastIndexOf(' ');\n                            lastDash = text.substr(0, tempArr.length).lastIndexOf('-');\n                            if (lastSpace > lastIndexBroken) {\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                tempArr.splice(lastSpace, 1, '<br/>');\n                                lastIndexBroken = lastSpace;\n                                newCharIndex = lastSpace + 1;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === tempArr.length - 1) {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '<br/>-');\n                                } else {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '-<br/>');\n                                }\n                                lastIndexBroken = lastDash;\n                                newCharIndex = lastDash + 1;\n                            } else {\n                                tempArr.splice(tempArr.length - 1, 1, '<br/>' + oriTextArr[i]);\n                                lastLineBreak = tempArr.length - 2;\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastLineBreak + 1).join(''));\n                                lastIndexBroken = lastLineBreak;\n                                newCharIndex = i;\n                            }\n                            strHeight += this._lineHeight;\n                            if (strHeight > maxHeight) {\n                                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                                smartLabel.tooltext = smartLabel.oriText;\n                                // The max width among all the lines will be the width of the string.\n                                smartLabel.width = maxWidth;\n                                smartLabel.height = strHeight - this._lineHeight;\n                                return smartLabel;\n                            } else {\n                                maxStrWidth = max(maxStrWidth, strWidth);\n                                trimStr = null;\n                                nearestChar = slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                                strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n                                if (tempArr.length < newCharIndex + nearestChar) {\n                                    tempArr = tempArr.concat(text.substr(tempArr.length, newCharIndex + nearestChar - tempArr.length).split(''));\n                                    i = tempArr.length - 1;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                maxStrWidth = max(maxStrWidth, strWidth);\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = maxStrWidth;\n                smartLabel.height = strHeight;\n                return smartLabel;\n            }\n        } else {\n            toolText = text.replace(slLib.spanAdditionRegx, '$2');\n            text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n            text = text.replace(/(<br\\s*\\/*\\>)/g, '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>');\n\n            container.innerHTML = text;\n\n            spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n            for (x = 0, y = spanArr.length; x < y; x += 1) {\n                elem = spanArr[x];\n                //chech whether this span is temporary inserted span from it's class\n                if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n                    chr = elem.innerHTML;\n                    if (chr !== '') {\n                        if (chr === ' ') {\n                            spaceIndex = characterArr.length;\n                        } else if (chr === '-') {\n                            dashIndex = characterArr.length;\n                        }\n\n                        characterArr.push({\n                            spaceIdx: spaceIndex,\n                            dashIdx: dashIndex,\n                            elem: elem\n                        });\n                        oriTextArr.push(chr);\n                    }\n                }\n            }\n\n            i = 0;\n            len = characterArr.length;\n            minWidth = characterArr[0].elem.offsetWidth;\n\n            if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n\n                return smartLabel;\n            } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            initialLeft = characterArr[0].elem.offsetLeft;\n            initialTop = characterArr[0].elem.offsetTop;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n                        if (container.offsetWidth > maxWidth) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            } else {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    lastBR = null;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n\n                        if (elemRightMostPoint > maxWidth) {\n                            lastSpace = characterArr[i].spaceIdx;\n                            lastDash = characterArr[i].dashIdx;\n                            if (lastSpace > lastIndexBroken) {\n                                characterArr[lastSpace].elem.innerHTML = '<br/>';\n                                lastIndexBroken = lastSpace;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === i) {\n                                    // in case the overflowing character itself is the '-'\n                                    characterArr[lastDash].elem.innerHTML = '<br/>-';\n                                } else {\n                                    characterArr[lastDash].elem.innerHTML = '-<br/>';\n                                }\n                                lastIndexBroken = lastDash;\n                            } else {\n                                elem.parentNode.insertBefore(lastBR = doc.createElement('br'), elem);\n                            }\n\n                            //check whether this break made current element outside the area height\n                            if (elem.offsetHeight + elem.offsetTop > maxHeight) {\n                                //remove the lastly inserted line break\n                                if (lastBR) {\n                                    lastBR.parentNode.removeChild(lastBR);\n                                } else if (lastIndexBroken === lastDash) {\n                                    characterArr[lastDash].elem.innerHTML = '-';\n                                } else {\n                                    characterArr[lastSpace].elem.innerHTML = ' ';\n                                }\n                                removeFromIndex = i;\n                                //break the looping condition\n                                i = len;\n                            } else {\n                                removeFromIndexForEllipses = null;\n                            }\n                        }\n                    } else {\n                        //check whether this break made current element outside the area height\n                        if (elemLowestPoint > maxHeight) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            }\n\n            if (removeFromIndex < len) {\n                //set the trancated property of the smartlabel\n                smartLabel.isTruncated = true;\n\n                /** @todo is this really needed? */\n                removeFromIndexForEllipses = removeFromIndexForEllipses ? removeFromIndexForEllipses : removeFromIndex;\n\n                for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n                    elem = characterArr[i].elem;\n                    //chech whether this span is temporary inserted span from it's class\n                    elem.parentNode.removeChild(elem);\n                }\n\n                for (; i >= 0; i -= 1) {\n                    elem = characterArr[i].elem;\n                    if (slLib.classNameBrReg.test(elem.className)) {\n                        //chech whether this span is temporary inserted span from it's class\n                        elem.parentNode.removeChild(elem);\n                    } else {\n                        i = 0;\n                    }\n                }\n            }\n\n            //get the smart text\n            smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&');\n            if (smartLabel.isTruncated) {\n                smartLabel.text += ellipsesStr;\n                smartLabel.tooltext = toolText;\n            }\n        }\n\n        smartLabel.height = container.offsetHeight;\n        smartLabel.width = container.offsetWidth;\n\n        return smartLabel;\n    } else {\n        smartLabel.error = new Error('Body Tag Missing!');\n        return smartLabel;\n    }\n};\n\n/*\n * Get the height and width of a text.\n *\n * @param {String} text - Text whose metrics to be measured\n * @param {Boolean} Optional detailedCalculationFlag - this flag if set it calculates per letter position\n *                          information and returns it. Ideally you dont need it unless you want to post process the\n *                          string. And its an EXPENSIVE OPERATION.\n *\n * @return {Object} - If detailedCalculationFlag is set to true the returned object would be\n *                  {\n *                      height: height of the text\n *                      width: width of the text\n *                      detailObj: detail calculation of letters in the format {lettername: width}\n *                  }\n *                  If detailedCalculationFlag is set to false the returned object wont have the detailObj prop.\n */\nSmartLabelManager.prototype.getOriSize = function (text, detailedCalculationFlag) {\n    if (!this._init) {\n        return false;\n    }\n\n    var textArr,\n        letter,\n        lSize,\n        i,\n        l,\n        cumulativeSize = 0,\n        height = 0,\n        indiSizeStore = {};\n\n    if (!detailedCalculationFlag) {\n        return this._calCharDimWithCache(text);\n    }\n\n    // Calculate the width of every letter with an approximation\n    textArr = text.split('');\n    for (i = 0, l = textArr.length; i < l; i++) {\n        letter = textArr[i];\n        lSize = this._calCharDimWithCache(letter, true, textArr.length);\n        height = max(height, lSize.height);\n        cumulativeSize += lSize.width;\n        indiSizeStore[letter] = lSize.width;\n    }\n\n    return {\n        width: round(cumulativeSize),\n        height: height,\n        detailObj: indiSizeStore\n    };\n};\n\n/*\n * Dispose the container and object allocated by the smartlabel\n */\nSmartLabelManager.prototype.dispose = function () {\n    if (!this._init) {\n        return this;\n    }\n\n    this._containerManager && this._containerManager.dispose && this._containerManager.dispose();\n\n    delete this._container;\n    delete this._context;\n    delete this._cache;\n    delete this._containerManager;\n    delete this._containerObj;\n    delete this.id;\n    delete this.style;\n    delete this.parentContainer;\n    delete this._showNoEllipses;\n\n    return this;\n};\n\nexports['default'] = SmartLabelManager;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nvar lib = {\n\tinit: function init(win) {\n\t\tvar doc = win.document,\n\t\t    nav = win.navigator,\n\t\t    userAgent = nav.userAgent,\n\t\t    DIV = 'DIV',\n\t\t    ceil = Math.ceil,\n\t\t    floor = Math.floor,\n\t\t    containerInstanceCount = 0,\n\t\t    clsNameSpace = 'fusioncharts-smartlabel-',\n\t\t    containerClass = clsNameSpace + 'container',\n\t\t    classNameWithTag = clsNameSpace + 'tag',\n\t\t    classNameWithTagBR = clsNameSpace + 'br';\n\n\t\tlib = {\n\t\t\twin: win,\n\n\t\t\tcontainerClass: containerClass,\n\n\t\t\tclassNameWithTag: classNameWithTag,\n\n\t\t\tclassNameWithTagBR: classNameWithTagBR,\n\n\t\t\tmaxDefaultCacheLimit: 500,\n\n\t\t\tclassNameReg: new RegExp('\\b' + classNameWithTag + '\\b'),\n\n\t\t\tclassNameBrReg: new RegExp('\\b' + classNameWithTagBR + '\\b'),\n\n\t\t\tspanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n\n\t\t\tspanAdditionReplacer: '$1<span class=\"' + classNameWithTag + '\">$2</span>',\n\n\t\t\tspanRemovalRegx: new RegExp('\\\\<span[^\\\\>]+?' + classNameWithTag + '[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>', 'ig'),\n\n\t\t\txmlTagRegEx: new RegExp('<[^>][^<]*[^>]+>', 'i'),\n\n\t\t\tltgtRegex: /&lt;|&gt;/g,\n\n\t\t\tbrReplaceRegex: /<br\\/>/ig,\n\n\t\t\ttestStrAvg: 'WgI',\n\n\t\t\t// This style is applied over the parent smartlabel container. The container is kept hidden from the viewport\n\t\t\tparentContainerStyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '-9999em',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\tpadding: '0px',\n\t\t\t\twidth: '1px',\n\t\t\t\theight: '1px',\n\t\t\t\toverflow: 'hidden'\n\t\t\t},\n\n\t\t\t// All the style which might affect the text metrics\n\t\t\tsupportedStyle: {\n\t\t\t\tfont: 'font',\n\t\t\t\tfontFamily: 'font-family',\n\t\t\t\t'font-family': 'font-family',\n\t\t\t\tfontWeight: 'font-weight',\n\t\t\t\t'font-weight': 'font-weight',\n\t\t\t\tfontSize: 'font-size',\n\t\t\t\t'font-size': 'font-size',\n\t\t\t\tlineHeight: 'line-height',\n\t\t\t\t'line-height': 'line-height',\n\t\t\t\tfontStyle: 'font-style',\n\t\t\t\t'font-style': 'font-style'\n\t\t\t},\n\n\t\t\t// Get the support list for html the document where the text calcution is to be done.\n\t\t\tgetDocumentSupport: function getDocumentSupport() {\n\t\t\t\tvar childRetriverFn, childRetriverString, noClassTesting;\n\n\t\t\t\tif (doc.getElementsByClassName) {\n\t\t\t\t\tchildRetriverFn = 'getElementsByClassName';\n\t\t\t\t\tchildRetriverString = classNameWithTag;\n\t\t\t\t\tnoClassTesting = true;\n\t\t\t\t} else {\n\t\t\t\t\tchildRetriverFn = 'getElementsByTagName';\n\t\t\t\t\tchildRetriverString = 'span';\n\t\t\t\t\tnoClassTesting = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisIE: /msie/i.test(userAgent) && !win.opera,\n\t\t\t\t\thasSVG: Boolean(win.SVGAngle || doc.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n\t\t\t\t\tisHeadLess: new RegExp(' HtmlUnit').test(userAgent),\n\t\t\t\t\tisWebKit: new RegExp(' AppleWebKit/').test(userAgent),\n\t\t\t\t\tchildRetriverFn: childRetriverFn,\n\t\t\t\t\tchildRetriverString: childRetriverString,\n\t\t\t\t\tnoClassTesting: noClassTesting\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n    * Create a html div element and attach it with a parent. All the subsequent operations are performed\n    * by upding this dom tree only.\n    *\n    * @param {HTMLElement} - The html element where the newly created div is to be attached. If not passed,\n    *                      the new div is appended on the body.\n    */\n\t\t\tcreateContainer: function createContainer(containerParent) {\n\t\t\t\tvar body, container;\n\n\t\t\t\tif (containerParent && (containerParent.offsetWidth || containerParent.offsetHeight)) {\n\t\t\t\t\tif (containerParent.appendChild) {\n\t\t\t\t\t\tcontainerParent.appendChild(container = doc.createElement(DIV));\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbody = doc.getElementsByTagName('body')[0];\n\n\t\t\t\t\tif (body && body.appendChild) {\n\t\t\t\t\t\tcontainer = doc.createElement(DIV);\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\tcontainerInstanceCount += 1;\n\t\t\t\t\t\tbody.appendChild(container);\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Finds a approximate position where the text is to be broken\n\t\t\tgetNearestBreakIndex: function getNearestBreakIndex(text, maxWidth, sl) {\n\t\t\t\tif (!text || !text.length) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar difference,\n\t\t\t\t    getWidth = sl._getWidthFn(),\n\t\t\t\t    charLen = 0,\n\t\t\t\t    increment = 0,\n\t\t\t\t    oriWidth = getWidth(text),\n\t\t\t\t    avgWidth = oriWidth / text.length;\n\n\t\t\t\tdifference = maxWidth;\n\t\t\t\tcharLen = ceil(maxWidth / avgWidth);\n\n\t\t\t\tif (oriWidth < maxWidth) {\n\t\t\t\t\treturn text.length - 1;\n\t\t\t\t}\n\n\t\t\t\tif (charLen > text.length) {\n\t\t\t\t\tdifference = maxWidth - oriWidth;\n\t\t\t\t\tcharLen = text.length;\n\t\t\t\t}\n\n\t\t\t\twhile (difference > 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (difference < 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn charLen;\n\t\t\t},\n\n\t\t\t/*\n    * Determine lineheight of a text for a given style. It adds propery lineHeight to the style passed\n    *\n    * @param {Object} - The style based on which the text's metric needs to be calculated. The calculation happens\n    *                  based on fontSize property, if its not present a default font size is assumed.\n    *\n    * @return {Object} - The style that was passed with lineHeight as a named propery set on the object.\n    */\n\t\t\tsetLineHeight: function setLineHeight(styleObj) {\n\t\t\t\tvar fSize = styleObj.fontSize = styleObj.fontSize || '12px';\n\t\t\t\tstyleObj.lineHeight = styleObj.lineHeight || styleObj['line-height'] || parseInt(fSize, 10) * 1.2 + 'px';\n\t\t\t\treturn styleObj;\n\t\t\t}\n\t\t};\n\n\t\treturn lib;\n\t}\n};\n\nexports['default'] = lib;\nmodule.exports = exports['default'];","const Muze = require('./muze');\n\nmodule.exports = Muze.default ? Muze.default : Muze;\n","'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction ContainerManager(parentContainer, isBrowserLess, maxContainers) {\n    var svg;\n\n    maxContainers = maxContainers > 5 ? maxContainers : 5;\n    maxContainers = maxContainers < 20 ? maxContainers : 20;\n\n    this.maxContainers = maxContainers;\n    this.first = null;\n    this.last = null;\n    this.containers = {};\n    this.length = 0;\n    this.rootNode = parentContainer;\n\n    if (isBrowserLess) {\n        svg = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'height', '0');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'width', '0');\n        this.svgRoot = svg;\n        this.rootNode.appendChild(svg);\n    }\n}\n\nContainerManager.prototype.get = function (style) {\n    var diff,\n        key,\n        containerObj,\n        containers = this.containers,\n        len = this.length,\n        max = this.maxContainers,\n        keyStr = '';\n\n    for (key in slLib.supportedStyle) {\n        if (style[key] !== undefined) {\n            keyStr += slLib.supportedStyle[key] + ':' + style[key] + ';';\n        }\n    }\n\n    if (!keyStr) {\n        return false;\n    }\n\n    if (containerObj = containers[keyStr]) {\n        if (this.first !== containerObj) {\n            containerObj.prev && (containerObj.prev.next = containerObj.next);\n            containerObj.next && (containerObj.next.prev = containerObj.prev);\n            containerObj.next = this.first;\n            containerObj.next.prev = containerObj;\n            this.last === containerObj && (this.last = containerObj.prev);\n            containerObj.prev = null;\n            this.first = containerObj;\n        }\n    } else {\n        if (len >= max) {\n            diff = len - max + 1;\n            // +1 is to remove an extra entry to make space for the new container to be added.\n            while (diff--) {\n                this.removeContainer(this.last);\n            }\n        }\n        containerObj = this.addContainer(keyStr);\n    }\n\n    return containerObj;\n};\n\nContainerManager.prototype.addContainer = function (keyStr) {\n    var node, container;\n\n    this.containers[keyStr] = container = {\n        next: null,\n        prev: null,\n        node: null,\n        ellipsesWidth: 0,\n        lineHeight: 0,\n        dotWidth: 0,\n        avgCharWidth: 4,\n        keyStr: keyStr,\n        charCache: {}\n    };\n\n    // Since the container objects are arranged from most recent to least recent order, we need to add the new\n    // object at the beginning of the list.\n    container.next = this.first;\n    container.next && (container.next.prev = container);\n    this.first = container;\n    if (!this.last) {\n        this.last = container;\n    }\n    this.length += 1;\n\n    node = container.node = doc.createElement('div');\n    this.rootNode.appendChild(node);\n\n    if (documentSupport.isIE && !documentSupport.hasSVG) {\n        node.style.setAttribute('cssText', keyStr);\n    } else {\n        node.setAttribute('style', keyStr);\n    }\n\n    node.setAttribute('aria-hidden', 'true');\n    node.setAttribute('role', 'presentation');\n    node.style.display = 'inline-block';\n\n    node.innerHTML = slLib.testStrAvg; // A test string.\n    container.lineHeight = node.offsetHeight;\n    container.avgCharWidth = node.offsetWidth / 3;\n\n    if (documentSupport.isBrowserLess) {\n        node = container.svgText = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n        node.setAttribute('style', keyStr);\n        this.svgRoot.appendChild(node);\n\n        node.textContent = slLib.testStrAvg; // A test string.\n        container.lineHeight = node.getBBox().height;\n        container.avgCharWidth = (node.getBBox().width - SVG_BBOX_CORRECTION) / 3;\n\n        node.textContent = '...';\n        container.ellipsesWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n        node.textContent = '.';\n        container.dotWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n    } else {\n        node.innerHTML = '...';\n        container.ellipsesWidth = node.offsetWidth;\n        node.innerHTML = '.';\n        container.dotWidth = node.offsetWidth;\n        node.innerHTML = '';\n    }\n\n    return container;\n};\n\nContainerManager.prototype.removeContainer = function (cObj) {\n    var keyStr = cObj.keyStr;\n\n    if (!keyStr || !this.length || !cObj) {\n        return;\n    }\n    this.length -= 1;\n\n    cObj.prev && (cObj.prev.next = cObj.next);\n    cObj.next && (cObj.next.prev = cObj.prev);\n    this.first === cObj && (this.first = cObj.next);\n    this.last === cObj && (this.last = cObj.prev);\n\n    cObj.node.parentNode.removeChild(cObj.node);\n\n    delete this.containers[keyStr];\n};\n\nContainerManager.prototype.dispose = function () {\n    var key,\n        containers = this.containers;\n\n    this.maxContainers = null;\n    for (key in containers) {\n        this.removeContainer(containers[key]);\n    }\n\n    this.rootNode.parentNode.removeChild(this.rootNode);\n\n    this.rootNode = null;\n    this.first = null;\n    this.last = null;\n};\n\nmodule.exports = ContainerManager;","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  scale.invertExtent = function(r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1, a, b, t,\n        hiIndex;\n    values.push(values[n] + this.step());\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo));\n    hiIndex = getClosestIndexOf(values, hi);\n    b = lo===hi ? a : Math.max(a, hiIndex - 1);\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) t = a, a = n - b, b = n - t; // map + swap\n    return (a > b) ? undefined : domain().slice(a, b+1);\n  };\n\n  scale.invert = function (r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1,\n        a,\n        t;\n\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo, 'left'));\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    return domain()[reverse ? n - a : a];\n  }\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction getClosestIndexOf (arr, value, side) {\n  var low = 0,\n      arrLen = arr.length,\n      high = arrLen - 1,\n      highVal,\n      mid,\n      d1,\n      d2;\n\n  while (low < high) {\n      mid = Math.floor((low + high) / 2);\n      d1 = Math.abs(arr[mid] - value);\n      d2 = Math.abs(arr[mid + 1] - value);\n\n      if (d2 <= d1) {\n          low = mid + 1;\n      }\n      else {\n          high = mid;\n      }\n  }\n\n  if (!side) {\n      return high;\n  }\n\n  highVal = arr[high];\n  if (highVal === value) {\n      return high;\n  } else if (highVal > value) {\n      if (high === 0) { return high; }\n      return side === 'left'? high - 1 : high;\n  } else {\n      if (high === arr.length - 1) { return high; }\n      return side === 'left'? high : high + 1;\n  }\n}","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute} from \"./duration\";\n\nvar hour = interval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export const UNIT_GLOBAL_NAMESPACE = 'app.units';\nexport const UNIT_LOCAL_NAMESPACE = 'local.units';\nexport const LAYER_LOCAL_NAMESPACE = 'local.layers';\nexport const LAYER_GLOBAL_NAMESPACE = 'app.layers';\nexport const GROUP_GLOBAL_NAMESPACE = 'app.group';\nexport const GROUP_LOCAL_NAMESPACE = 'local.group';\nexport const CANVAS_LOCAL_NAMESPACE = 'local.canvas';\nexport const CANVAS_GLOBAL_NAMESPACE = 'app.canvas';\n\n","const ReservedFields = {\n    ROW_ID: '__id__'\n};\n\nexport default ReservedFields;\n","const CommonProps = {\n    ACTION_INF: 'actionInf',\n    ON_LAYER_DRAW: 'onLayerDraw',\n    MATRIX_CREATED: 'matrixCreated'\n};\n\nexport default CommonProps;\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickTransform = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"))\n        .style('transform', tickTransform);\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.tickTransform = function(_) {\n    return arguments.length ? (tickTransform = _, axis) : tickTransform;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","export var slice = Array.prototype.slice;\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","/* global window, requestAnimationFrame, cancelAnimationFrame */\nimport { FieldType, DimensionSubtype } from 'datamodel';\nimport {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom\n} from 'd3-axis';\nimport {\n    symbolCircle,\n    symbolCross,\n    symbolDiamond,\n    symbolSquare,\n    symbolStar,\n    symbolWye,\n    symbolTriangle,\n    symbol,\n    stack as d3Stack,\n    stackOffsetDiverging,\n    stackOrderNone,\n    stackOrderAscending,\n    stackOrderDescending,\n    stackOffsetNone,\n    stackOffsetExpand,\n    stackOffsetWiggle,\n    pie,\n    arc,\n    line,\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    area\n} from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport {\n    interpolate,\n    interpolateRgb,\n    piecewise,\n    interpolateNumber,\n    interpolateHslLong\n} from 'd3-interpolate';\nimport {\n    easeCubic,\n    easeBounce,\n    easePoly,\n    easeBack,\n    easeCircle,\n    easeLinear,\n    easeElastic\n} from 'd3-ease';\nimport {\n   color,\n   rgb,\n   hsl\n} from 'd3-color';\nimport { voronoi } from 'd3-voronoi';\nimport Model from 'hyperdis';\nimport * as STACK_CONFIG from './enums/stack-config';\n\nconst HTMLElement = window.HTMLElement;\n\nconst isSimpleObject = (obj) => {\n    let token;\n    if (typeof obj === 'object') {\n        if (obj === null) { return false; }\n        token = Object.prototype.toString.call(obj);\n        if (token === '[object Object]') {\n            return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n        }\n    }\n    return false;\n};\n\n/**\n * Returns unique id\n * @return {string} Unique id string\n */\nconst\n    getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Deep copies an object and returns a new object.\n * @param {Object} o Object to clone\n * @return {Object} New Object.\n */\nconst clone = (o) => {\n    const output = {};\n    let v;\n    for (const key in o) {\n        if ({}.hasOwnProperty.call(o, key)) {\n            v = o[key];\n            output[key] = isSimpleObject(v) ? clone(v) : v;\n        }\n    }\n    return output;\n};\n\n/**\n* Checks the existence of keys in an object\n* @param {Array} keys Set of keys which are to be checked\n* @param {Object} obj whose keys are checked from the set of keys provided\n* @return {Object} Error if the keys are absent, or the object itself\n*/\nconst checkExistence = (keys, obj) => {\n    const nonExistentKeys = [];\n    keys.forEach((key) => {\n        if (key in obj) {\n            return;\n        }\n        nonExistentKeys.push(key);\n    });\n    return nonExistentKeys;\n};\n\nconst sanitizeIP = {\n    typeObj: (keys, obj) => {\n        if (typeof obj !== 'object') {\n            return Error('Argument type object expected');\n        }\n\n        const nonExistentKeys = checkExistence(keys, obj);\n        if (nonExistentKeys.length) {\n            return Error(`Missing keys from parameter ${nonExistentKeys.join(', ')}`);\n        }\n        return obj;\n    },\n\n    /* istanbul ignore next */ htmlElem: (elem) => {\n        if (!(elem instanceof HTMLElement)) {\n            return Error('HTMLElement required');\n        }\n        return elem;\n    }\n};\n\n/**\n * Gets the maximum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Maximum value\n */\nconst getMax = (data, field) => Math.max(...data.filter(d => !isNaN(d[field])).map(d => d[field]));\n\n/**\n * Gets the minimum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Minimum value\n */\nconst getMin = (data, field) => Math.min(...data.filter(d => !isNaN(d[field])).map(d => d[field]));\n\n/**\n * Gets the domain from the data based on the field name and type of field\n * @param  {Array.<Object> | Array.<Array>} data       Data Array\n * @param  {Array.<string>} fields    Array of fields from where the domain will be calculated\n * @param {string} fieldType Type of field - nominal, quantitiative, temporal.\n * @return {Array} Usually contains a min and max value if field is quantitative or\n * an array of values if field type is nominal or ordinal\n */\nconst getDomainFromData = (data, fields, fieldType) => {\n    let domain;\n    let domArr;\n    data = data[0] instanceof Array ? data : [data];\n    switch (fieldType) {\n    case DimensionSubtype.CATEGORICAL:\n        domain = [].concat(...data.map(arr => arr.map(d => d[fields[0]]).filter(d => d !== undefined)));\n        break;\n    default:\n        domArr = data.map((arr) => {\n            const firstMin = getMin(arr, fields[0]);\n            const secondMin = getMin(arr, fields[1]);\n            const firstMax = getMax(arr, fields[0]);\n            const secondMax = getMax(arr, fields[1]);\n            return [Math.min(firstMin, secondMin), Math.max(firstMax, secondMax)];\n        });\n        domain = [Math.min(...domArr.map(d => d[0])), Math.max(...domArr.map(d => d[1]))];\n        break;\n    }\n    return domain;\n};\n\n/**\n * Union Domain values\n * @param {Array.<Array>} domains Array of domain values\n * @param {string} fieldType type of field - dimension,measure or datetime.\n * @return {Array} Unioned domain of all domain values.\n */\nconst unionDomain = (domains, fieldType) => {\n    let domain;\n    domains = domains.filter(dom => dom && dom.length);\n    if (fieldType === DimensionSubtype.CATEGORICAL) {\n        domain = domain = [].concat(...domains);\n    } else {\n        domain = [Math.min(...domains.map(d => d[0])), Math.max(...domains.map(d => d[1]))];\n    }\n\n    return domain;\n};\n\nconst symbolFns = {\n    circle: symbolCircle,\n    cross: symbolCross,\n    diamond: symbolDiamond,\n    square: symbolSquare,\n    star: symbolStar,\n    wye: symbolWye,\n    triangle: symbolTriangle\n};\n\nconst easeFns = {\n    cubic: easeCubic,\n    bounce: easeBounce,\n    linear: easeLinear,\n    elastic: easeElastic,\n    back: easeBack,\n    poly: easePoly,\n    circle: easeCircle\n};\n\n/**\n * Returns the maximum or minimum points of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @param {string} minOrMax minimum or maximum.\n * @return {Object} Minimum or maximum point.\n */\nconst getExtremePoint = (points, compareValue, minOrMax) => {\n    let extremePoint;\n    let point;\n    const len = points.length;\n    let minOrMaxVal = minOrMax === 'max' ? -Infinity : Infinity;\n    let val;\n\n    for (let i = 0; i < len; i++) {\n        point = points[i];\n        val = point[compareValue];\n        if (minOrMax === 'min' ? val < minOrMaxVal : val > minOrMaxVal) {\n            minOrMaxVal = val;\n            extremePoint = point;\n        }\n    }\n\n    return extremePoint;\n};\n\n/**\n * Returns the minimum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Minimum point.\n */\nconst getMinPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'min');\n\n/**\n * Returns the maximum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Maximum point.\n */\nconst getMaxPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'max');\n\n/**\n * Gets the index of the closest value of the given value from the array.\n * @param {Array} arr Array of values\n * @param {number} value Value from which the nearest value will be calculated.\n * @param {string} side side property.\n * @return {number} index of the closest value\n */\n/* istanbul ignore next */const getClosestIndexOf = (arr, value, side) => {\n    let low = 0;\n    const arrLen = arr.length;\n    let high = arrLen - 1;\n\n    let mid;\n    let d1;\n    let d2;\n\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        d1 = Math.abs(arr[mid] - value);\n        d2 = Math.abs(arr[mid + 1] - value);\n\n        if (d2 <= d1) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n\n    if (!side) {\n        return high;\n    }\n\n    const highVal = arr[high];\n    if (highVal === value) {\n        return high;\n    } else if (highVal > value) {\n        if (high === 0) { return high; }\n        return side === 'left' ? high - 1 : high;\n    }\n    if (high === arr.length - 1) { return high; }\n    return side === 'left' ? high : high + 1;\n};\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst getWindow = () => window;\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst reqAnimFrame = (() => requestAnimationFrame)();\n\nconst cancelAnimFrame = (() => cancelAnimationFrame)();\n\n/**\n * Capitalizes the first letter of the word\n * @param {string} text word\n * @return {string} Capitalized word\n */\nconst capitalizeFirst = (text) => {\n    text = text.toLowerCase();\n\n    return text.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1));\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\n/* istanbul ignore next */ const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Returns the class name appended with a given id.\n * @param {string} cls class name\n * @param {string} id unique identifier\n * @param {string} prefix string needed to add before the classname\n * @return {string} qualified class name\n */\n/* istanbul ignore next */const getQualifiedClassName = (cls, id, prefix) => {\n    cls = cls.replace(/^\\.*/, '');\n    return [`${prefix}-${cls}`, `${prefix}-${cls}-${id}`];\n};\n\n/**\n * This method is used to set the default value for variables\n * without sullying the code with conditional statements.\n *\n * @export\n * @param {any} param The parameter to test.\n * @param {any} value The default value to assign.\n * @return {any} The value.\n */\n/* istanbul ignore next */ const defaultValue = (param, value) => {\n    if (typeof param === 'undefined' || (typeof param === 'object' && !param)) {\n        return value;\n    }\n    return param;\n};\n\n/**\n * DESCRIPTION TODO\n *\n * @export\n * @param {Object} graph graph whose dependency order has to be generated\n * @return {Object}\n */\nconst getDependencyOrder = (graph) => {\n    const dependencyOrder = [];\n    const visited = {};\n    const keys = Object.keys(graph);\n    /**\n     * DESCRIPTION TODO\n     *\n     * @export\n     * @param {Object} name\n     * @return {Object}\n     */\n    const visit = (name) => {\n        if (dependencyOrder.length === keys.length) {\n            return true;\n        }\n        visited[name] = true;\n        const edges = graph[name];\n        for (let e = 0; e < edges.length; e++) {\n            const dep = edges[e];\n            if (!visited[dep]) {\n                visit(dep);\n            }\n        }\n\n        dependencyOrder.push(name);\n        return false;\n    };\n\n    for (let i = 0; i < keys.length; i++) {\n        if (visit(keys[i], i)) break;\n    }\n\n    return dependencyOrder;\n};\n\n/**\n * Iterates over the properties of an object and applies the function\n *\n * @param {any} obj object to be iterated upon\n * @param {any} fn  function to be applied on it\n */\nconst objectIterator = (obj, fn) => {\n    for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            fn(key, obj);\n        }\n    }\n};\n\n/**\n * This class creates a d3 voronoi for retrieving the nearest neighbour of any point from a set of two\n * dimensional points\n * @class Voronoi\n */\n/* istanbul ignore next */ class Voronoi {\n    /**\n     * Initialize the voronoi with the data given.\n     * @param {Array.<Object>} data Array of points.\n     */\n    constructor (data) {\n        this._voronoi = voronoi().x(d => d.x).y(d => d.y);\n        this.data(data);\n    }\n\n    /**\n     * Sets the data to voronoi\n     * @param {Array.<Object>} data Array of objects.\n     * @return {Voronoi} Instance of voronoi.\n     */\n    data (data) {\n        if (data) {\n            this._voronoiFn = this._voronoi(data);\n        }\n        return this;\n    }\n\n    /**\n     * Finds the closest point to the x and y position given.\n     * @param {number} x x value\n     * @param {number} y y value\n     * @param {number} radius search radius.\n     * @return {Object} Details of the nearest point.\n     */\n    find (x, y, radius) {\n        return this._voronoiFn.find(x, y, radius);\n    }\n}\n\nconst addListenerToNamespace = (namespaceInf, fn, context) => {\n    let key = namespaceInf.key;\n    const namespace = namespaceInf.namespace;\n    if (namespace) {\n        !context._listeners[namespace] && (context._listeners[namespace] = []);\n        if (!key) {\n            key = Object.keys(context._listeners[namespace]).length;\n        }\n        context._listeners[namespace][key] = fn;\n    } else {\n        key = Object.keys(context._listeners).length;\n        context._listeners[key] = fn;\n    }\n};\n\n/**\n *\n *\n * @param {*} obj\n * @param {*} fields\n *\n */\nconst getObjProp = (obj, ...fields) => {\n    if (obj === undefined || obj === null) {\n        return obj;\n    }\n    let retObj = obj;\n    for (let i = 0, len = fields.length; i < len; i++) {\n        retObj = retObj[fields[i]];\n        if (retObj === undefined || retObj === null) {\n            break;\n        }\n    }\n    return retObj;\n};\n\n/**\n * Methods to handle changes to table configuration and reactivity are handled by this\n * class.\n */\n/**\n *  Common store class\n *\n * @class Store\n */\nclass Store {\n    /**\n     * Creates an instance of Store.\n     * @param {Object} config The object to create the state store with.\n     * @memberof Store\n     */\n    constructor (config) {\n        // create reactive model\n        this.model = Model.create(config);\n        this._listeners = {};\n    }\n\n    /**\n     * This method returns a plain JSON object\n     * with all the fields in the state store.\n     *\n     * @return {Object} Serialized representation of state store.\n     * @memberof Store\n     */\n    serialize () {\n        return this.model.serialize();\n    }\n\n    /**\n     * This method is used to update the value of a property in the state store.\n     *\n     * @param {string} propName The name of the property.\n     * @param {number} value The new value of the property.\n     * @memberof Store\n     */\n    commit (propName, value) {\n        // check if appropriate enum has been used\n        this.model.prop(propName, value);\n    }\n\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */registerChangeListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.next(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */ registerImmediateListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.on(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to get the name of the property\n     * from the state store.\n     *\n     * @param {string} propName The name of the field in state store.\n     * @return {any} The value of the field.\n     * @memberof Store\n     */\n    get (propName) {\n        return this.model.prop(propName);\n    }\n\n    /**\n     * This method is used to register a computed property that is computed every time\n     * the store value changes.\n     *\n     * @param {string} propName The name of the property to create.\n     * @param {Function} callBack The function to execute when depemdent props change.\n     * @memberof Store\n     */\n    computed (propName, callBack) {\n        return this.model.calculatedProp(propName, callBack);\n    }\n\n    append (propName, value) {\n        this.model.append(propName, value);\n        return this;\n    }\n\n    unsubscribeAll () {\n        Object.values(this._listeners).forEach(fn => fn());\n        return this;\n    }\n\n    unsubscribe (namespaceInf = {}) {\n        const { namespace, key } = namespaceInf;\n        const listeners = this._listeners[namespace];\n        if (key) {\n            const fn = getObjProp(listeners, key);\n            fn && fn();\n        } else {\n            Object.values(listeners).forEach(fn => fn());\n            this._listeners[namespace] = [];\n        }\n        return this;\n    }\n}\n\n/**\n * Sanitize an input number / string mixed number. Currently dot in the no is not supported.\n *\n * @param {number | string} val pure number or string mixed number\n * @return {number | null}  Number if it can be extracted. Otherwise null\n */\nconst intSanitizer = (val) => {\n    const arr = val.toString().match(/(\\d+)(px)*/g);\n    if (!arr) {\n        // If only characters are passed\n        return null;\n    }\n\n    return parseInt(arr[0], 10);\n};\n\n/**\n * Setter getter creator from config\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args. (Optional)\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @param {Object} holder an empty object on which the getters and setters will be mounted\n * @param {Object} options options config based on which the getters and setters are determined.\n * @param {Hyperdis} model optional model to attach the property. If not sent new moel is created.\n * @return {Array}\n */\nconst transactor = (holder, options, model, namespaceInf = {}) => {\n    let conf;\n    const store = model && model instanceof Model ? model : Model.create({});\n    const stateProps = {};\n    for (const prop in options) {\n        if ({}.hasOwnProperty.call(options, prop)) {\n            conf = options[prop];\n            const addAsMethod = conf.meta ? conf.meta.addAsMethod : true;\n            let nameSpaceProp;\n            const namespace = namespaceInf.namespace;\n            if (namespace) {\n                nameSpaceProp = `${namespace}.${prop}`;\n            } else {\n                nameSpaceProp = prop;\n            }\n            if (!store.prop(`${nameSpaceProp}`)) {\n                stateProps[prop] = conf.value;\n            }\n            if (addAsMethod !== false) {\n                holder[prop] = ((context, meta, nsProp) => (...params) => {\n                    let val;\n                    let compareTo;\n                    const paramsLen = params.length;\n                    const prevVal = store.prop(nsProp);\n                    if (paramsLen) {\n                        // If parameters are passed then it's a setter\n                        const spreadParams = meta && meta.spreadParams;\n                        val = params;\n                        const values = [];\n                        if (meta) {\n                            for (let i = 0; i < paramsLen; i++) {\n                                val = params[i];\n                                const sanitization = meta.sanitization && (spreadParams ? meta.sanitization[i] :\n                                    meta.sanitization);\n                                const typeCheck = meta.typeCheck && (spreadParams ? meta.typeCheck[i] : meta.typeCheck);\n                                if (sanitization && typeof sanitization === 'function') {\n                                    // Sanitize if required\n                                    val = sanitization(val, prevVal, holder);\n                                }\n\n                                if (typeCheck) {\n                                    // Checking if a setter is valid\n                                    if (typeof typeCheck === 'function') {\n                                        let typeExpected = meta.typeExpected;\n                                        if (typeExpected && spreadParams) {\n                                            typeExpected = typeExpected[i];\n                                        }\n                                        if (typeExpected) {\n                                            compareTo = typeExpected;\n                                        } else {\n                                            compareTo = true;\n                                        }\n\n                                        if (typeCheck(val) === compareTo) {\n                                            values.push(val);\n                                        }\n                                    } else if (typeof typeCheck === 'string') {\n                                        if (typeCheck === 'constructor') {\n                                            const typeExpected = spreadParams ? meta.typeExpected[i] :\n                                                meta.typeExpected;\n                                            if (val && (val.constructor.name === typeExpected)) {\n                                                values.push(val);\n                                            }\n                                        }\n                                    } else {\n                                        // context.prop(key, val);\n                                        values.push(val);\n                                    }\n                                } else {\n                                    values.push(val);\n                                }\n                            }\n                            const preset = meta.preset;\n                            const oldValues = context.prop(nsProp);\n                            preset && preset(values[0], holder);\n                            if (spreadParams) {\n                                oldValues.forEach((value, i) => {\n                                    if (values[i] === undefined) {\n                                        values[i] = value;\n                                    }\n                                });\n                            }\n                            values.length && context.prop(nsProp, spreadParams ? values : values[0]);\n                        } else {\n                            context.prop(nsProp, spreadParams ? val : val[0]);\n                        }\n                        return holder;\n                    }\n                // No parameters are passed hence its a getter\n                    return context.prop(nsProp);\n                })(store, conf.meta, nameSpaceProp);\n            }\n        }\n    }\n\n    if (namespaceInf.namespace === undefined) {\n        store.append(stateProps);\n    } else {\n        const namespace = namespaceInf.namespace;\n        store.append(namespace, stateProps);\n    }\n\n    return [holder, store];\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} props\n */\nconst generateGetterSetters = (context, props) => {\n    Object.entries(props).forEach((propInfo) => {\n        const prop = propInfo[0];\n        const typeChecker = propInfo[1].typeChecker;\n        const defVal = propInfo[1].defaultValue;\n        const sanitization = propInfo[1].sanitization;\n        const prototype = context.constructor.prototype;\n        if (!(Object.hasOwnProperty.call(prototype, prop))) {\n            if (defVal) {\n                context[`_${prop}`] = defVal;\n            }\n            context[prop] = (...params) => {\n                if (params.length) {\n                    let value = params[0];\n                    if (sanitization) {\n                        value = sanitization(context, params[0]);\n                    }\n                    if (typeChecker && !typeChecker(value)) {\n                        return context[`_${prop}`];\n                    }\n                    context[`_${prop}`] = value;\n                    return context;\n                } return context[`_${prop}`];\n            };\n        }\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} prop\n */\nconst getArraySum = (arr, prop) => arr.reduce((total, elem) => {\n    total += prop ? elem[prop] : elem;\n    return total;\n}, 0);\n\n/**\n *\n *\n * @param {*} arr1\n * @param {*} arr2\n *\n */\nconst arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) { return false; }\n    for (let i = arr1.length; i >= 0; i--) {\n        if (arr1[i] !== arr2[i]) { return false; }\n    }\n\n    return true;\n};\n\n/* eslint valid-typeof:0 */\n/**\n * Returns a validation function which can be used to validate variables against a type and value\n *\n * @param {any} type type of value that the object should have\n * @return {Object} validation function\n */\nconst isEqual = type => (oldVal, newVal) => {\n    if (type === 'Array') {\n        if (!oldVal) {\n            return false;\n        }\n        return arraysEqual(oldVal, newVal);\n    } else if (type === 'Object') {\n        return Object.is(oldVal, newVal);\n    } return oldVal === newVal;\n};\n\n/**\n * Description @todo\n *\n * @param {any} transactionModel @todo\n * @param {any} transactionEndpoint @todo\n * @param {any} transactionItems @todo\n * @return {any} @todo\n */\nconst enableChainedTransaction = (transactionModel, transactionEndpoint, transactionItems) =>\n    transactionItems.forEach(item => transactionModel.on(item, ([, newVal]) => transactionEndpoint[item](newVal)));\n\n/**\n * Chceks if the element is istanceof HTMLElement\n *\n * @param {Object} elem any JS Object\n */\nconst isHTMLElem = elem => elem instanceof HTMLElement;\n\nconst ERROR_MSG = {\n    INTERFACE_IMPL: 'Method not implemented'\n};\n\n/**\n * Merges the sink object in the source by recursively iterating through the object properties\n * @param {Object} source Source Object\n * @param {Object} sink Sink Object\n * @return {Object} Merged object\n */\nconst mergeRecursive = (source, sink) => {\n    for (const prop in sink) {\n        if (isSimpleObject(source[prop]) && isSimpleObject(sink[prop])) {\n            mergeRecursive(source[prop], sink[prop]);\n        } else if (sink[prop] instanceof Object && sink[prop].constructor === Object) {\n            source[prop] = {};\n            mergeRecursive(source[prop], sink[prop]);\n        } else {\n            source[prop] = sink[prop];\n        }\n    }\n    return source;\n};\n\nconst interpolateArray = (data, fitCount) => {\n    const linearInterpolate = function (before, after, atPoint) {\n        return before + (after - before) * atPoint;\n    };\n    const newData = [];\n    const springFactor = ((data.length - 1) / (fitCount - 1));\n    newData[0] = data[0]; // for new allocation\n    for (let i = 1; i < fitCount - 1; i++) {\n        const tmp = i * springFactor;\n        const before = (Math.floor(tmp)).toFixed();\n        const after = (Math.ceil(tmp)).toFixed();\n        const atPoint = tmp - before;\n        newData[i] = linearInterpolate(data[before], data[after], atPoint);\n    }\n    newData[fitCount - 1] = data[data.length - 1]; // for new allocation\n    return newData;\n};\n\n/**\n *\n *\n * @param {*} fn\n */\nconst nextFrame = (fn) => {\n    setTimeout(() => {\n        fn();\n    }, 0);\n};\n\n/**\n *\n *\n * @param {*} angle\n */\nconst angleToRadian = angle => angle * Math.PI / 180;\n\n/**\n *\n *\n * @param {*} newName\n * @param {*} oldName\n */\nconst replaceCSSPrefix = () => {\n    // @todo\n};\n\n/**\n * Gets the  interpolator function from d3 color\n *\n */\nconst interpolator = () => interpolate;\n\n/**\n * Gets the number interpolator from d3 color\n *\n */\nconst numberInterpolator = () => interpolateNumber;\n\n/**\n * Gets the rgb interpolator from d3 color\n *\n */\nconst colorInterpolator = () => interpolateRgb;\n\n/**\n * Gets the hsl interpolator from d3 color\n *\n */\nconst hslInterpolator = () => interpolateHslLong;\n\nconst transformColors = () => ({\n    color,\n    rgb,\n    hsl\n});\n\n/**\n * Gets the piecewise interpolator from d3 color\n *\n */\nconst piecewiseInterpolator = () => piecewise;\n\nfunction hue2rgb (p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n\n  /**\n   * Converts an HSL color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n   * Assumes h, s, and l are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  l       The lightness\n   * @return  Array           The RGB representation\n   */\nconst hslToRgb = (h, s, l, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\n  /**\n   * Converts an RGB color value to HSV. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes r, g, and b are contained in the set [0, 255] and\n   * returns h, s, and v in the set [0, 1].\n   *\n   * @param   Number  r       The red color value\n   * @param   Number  g       The green color value\n   * @param   Number  b       The blue color value\n   * @return  Array           The HSV representation\n   */\nconst rgbToHsv = (r, g, b, a = 1) => {\n    r = +r; g = +g; b = +b; a = +a;\n    r /= 255; g /= 255; b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h;\n    let s;\n    const l = (max + min) / 2;\n\n    if (max === min) {\n        h = s = 0; // achromatic\n    } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n        default: break;\n        }\n        h /= 6;\n    }\n    return [h, s, l, a];\n};\n\n  /**\n   * Converts an HSV color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes h, s, and v are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  v       The value\n   * @return  Array           The RGB representation\n   */\nconst hsvToRgb = (h, s, v, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n    default: break;\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\nconst hexToHsv = (hex) => {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n    const r = parseInt(result[1], 16);\n    const g = parseInt(result[2], 16);\n    const b = parseInt(result[3], 16);\n    const a = result[4] ? parseInt(result[4], 16) : 1;\n    return rgbToHsv(r, g, b, a);\n};\n\nconst detectColor = (col) => {\n    const matchRgb = /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/;\n    const matchHsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g;\n\n    // Source :  https://gist.github.com/sethlopezme/d072b945969a3cc2cc11\n     // eslint-disable-next-line\n    const matchRgba = /rgba?\\(((25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,\\s*?){2}(25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,?\\s*([01]\\.?\\d*?)?\\)/;\n     // eslint-disable-next-line\n    const matchHsla = /^hsla\\((0|360|35\\d|3[0-4]\\d|[12]\\d\\d|0?\\d?\\d),(0|100|\\d{1,2})%,(0|100|\\d{1,2})%,(0?\\.\\d|1(\\.0)?)\\)$/;\n    const matchHex = /^#([0-9a-f]{3}){1,2}$/i;\n\n    if (matchRgb.test(col) || matchRgba.test(col)) {\n        return 'rgb';\n    } else if (matchHsl.test(col) || matchHsla.test(col)) {\n        return 'hsl';\n    } else if (matchHex.test(col)) {\n        return 'hex';\n    } return col;\n};\n\n/**\n *\n *\n * @param {*} model\n * @param {*} propModel\n *\n */\nconst filterPropagationModel = (model, propModel, measures) => {\n    const { data, schema } = propModel.getData();\n    let filteredModel;\n    if (schema.length) {\n        const fieldMap = model.getFieldsConfig();\n        filteredModel = model.select((fields) => {\n            const include = data.some(row => schema.every((propField, idx) => {\n                if (!measures && (!(propField.name in fieldMap) ||\n                        fieldMap[propField.name].def.type === FieldType.MEASURE)) {\n                    return true;\n                }\n                return row[idx] === fields[propField.name].valueOf();\n            }));\n            return include;\n        }, {\n            saveChild: false\n        });\n    } else {\n        filteredModel = propModel;\n    }\n\n    return filteredModel;\n};\n\nconst assembleModelFromIdentifiers = (model, identifiers) => {\n    let schema = [];\n    let data;\n    const fieldMap = model.getFieldsConfig();\n    if (identifiers.length) {\n        const fields = identifiers[0];\n        const len = fields.length;\n        for (let i = 0; i < len; i++) {\n            const field = fields[i];\n            const fieldObj = fieldMap[field] && Object.assign({}, fieldMap[field].def);\n            if (fieldObj) {\n                schema.push(Object.assign(fieldObj));\n            }\n        }\n\n        data = [];\n        const header = identifiers[0];\n        for (let i = 1; i < identifiers.length; i += 1) {\n            const vals = identifiers[i];\n            const temp = {};\n            vals.forEach((fieldVal, cIdx) => {\n                temp[header[cIdx]] = fieldVal;\n            });\n            data.push(temp);\n        }\n    } else {\n        data = [];\n        schema = [];\n    }\n\n    return new model.constructor(data, schema);\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} criteria\n *\n */\nconst getDataModelFromRange = (dataModel, criteria, mode) => {\n    if (criteria === null) {\n        return null;\n    }\n    const selFields = Object.keys(criteria);\n    const selFn = fields => selFields.every((field) => {\n        const val = fields[field].value;\n        const range = criteria[field][0] instanceof Array ? criteria[field][0] : criteria[field];\n        if (typeof range[0] === 'string') {\n            return range.find(d => d === val) !== undefined;\n        }\n        return range ? val >= range[0] && val <= range[1] : true;\n    });\n\n    return dataModel.select(selFn, {\n        saveChild: false,\n        mode\n    });\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} identifiers\n *\n */\nconst getDataModelFromIdentifiers = (dataModel, identifiers, mode) => {\n    let filteredDataModel;\n    if (identifiers instanceof Array) {\n        const fieldsConfig = dataModel.getFieldsConfig();\n\n        const dataArr = identifiers.slice(1, identifiers.length);\n        if (identifiers instanceof Function) {\n            filteredDataModel = identifiers(dataModel, {}, false);\n        } else if (identifiers instanceof Array && identifiers[0].length) {\n            const filteredSchema = identifiers[0].filter(d => d in fieldsConfig);\n            filteredDataModel = dataModel.select((fields) => {\n                let include = true;\n                filteredSchema.forEach((propField, idx) => {\n                    const value = fields[propField].valueOf();\n                    const index = dataArr.findIndex(d => d[idx] === value);\n                    include = include && index !== -1;\n                });\n                return include;\n            }, {\n                saveChild: false,\n                mode\n            });\n        }\n    } else {\n        filteredDataModel = getDataModelFromRange(dataModel, identifiers, mode);\n    }\n    return filteredDataModel;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} listenerMap\n */\nconst registerListeners = (context, listenerMap, ...params) => {\n    const propListenerMap = listenerMap(context, ...params);\n    for (const key in propListenerMap) {\n        if ({}.hasOwnProperty.call(propListenerMap, key)) {\n            const namespace = params[0];\n            let ns = null;\n            if (namespace) {\n                ns = namespace.local;\n            }\n            const mapObj = propListenerMap[key];\n            const propType = mapObj.type;\n            const props = mapObj.props;\n            const listenerFn = mapObj.listener;\n            context.store()[propType](props, listenerFn, false, {\n                namespace: ns\n            });\n        }\n    }\n};\n\nconst isValidValue = value => !isNaN(value) && value !== -Infinity && value !== Infinity;\n/**\n *\n *\n * @param {*} str\n *\n */\nconst escapeHTML = (str) => {\n    const htmlEscapes = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '/': '&#x2F;'\n    };\n    const htmlEscaper = /[&<>\"'/]/g;\n    return (`${str}`).replace(htmlEscaper, match => htmlEscapes[match]);\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst transposeArray = arr => arr[0].map((col, i) => arr.map(row => row[i]));\nconst toArray = arr => (arr instanceof Array ? arr : [arr]);\nconst extendsClass = (cls, extendsFrom, found) => {\n    if (!cls) {\n        return false;\n    }\n    const prototype = cls.prototype;\n    if (prototype instanceof extendsFrom) {\n        found = true;\n    } else {\n        found = extendsClass(prototype, extendsFrom, found);\n    }\n    return found;\n};\n\n/**\n *\n * @param {*} dm1\n * @param {*} dm2\n */\nconst concatModels = (dm1, dm2) => {\n    const dataObj1 = dm1.getData();\n    const dataObj2 = dm2.getData();\n    const data1 = dataObj1.data;\n    const data2 = dataObj2.data;\n    const schema1 = dataObj1.schema;\n    const schema2 = dataObj2.schema;\n    const tuples1 = {};\n    const tuples2 = {};\n    const commonTuples = {};\n    for (let i = 0; i < data1.length; i++) {\n        for (let ii = 0; ii < data2.length; ii++) {\n            const row1 = data1[i];\n            const row2 = data2[ii];\n            const dim1Values = row1.filter((d, idx) => schema1[idx].type === FieldType.DIMENSION);\n            const dim2Values = row2.filter((d, idx) => schema2[idx].type === FieldType.DIMENSION);\n            const allDimSame = dim1Values.every(value => dim2Values.indexOf(value) !== -1);\n            if (allDimSame) {\n                const key = dim1Values.join();\n                !commonTuples[key] && (commonTuples[key] = {});\n                row1.forEach((value, idx) => {\n                    commonTuples[key][schema1[idx].name] = value;\n                });\n                row2.forEach((value, idx) => {\n                    commonTuples[key][schema2[idx].name] = value;\n                });\n            } else {\n                const dm1Key = dim1Values.join();\n                const dm2Key = dim2Values.join();\n                if (!commonTuples[dm1Key] && !commonTuples[dm2Key]) {\n                    !tuples1[dm1Key] && (tuples1[dm1Key] = {});\n                    !tuples2[dm2Key] && (tuples2[dm2Key] = {});\n                    row1.forEach((value, idx) => {\n                        tuples1[dm1Key][schema1[idx].name] = value;\n                    });\n                    row2.forEach((value, idx) => {\n                        tuples2[dm2Key][schema2[idx].name] = value;\n                    });\n                }\n            }\n        }\n    }\n\n    const commonSchema = [...schema1, ...schema2.filter(s2 => schema1.findIndex(s1 => s1.name === s2.name) === -1)];\n    const data = [...Object.values(tuples1), ...Object.values(tuples2), ...Object.values(commonTuples)];\n    return [data, commonSchema];\n};\n\nconst getSymbol = type => symbol().type(symbolFns[type]);\n\nconst stackOrders = {\n    [STACK_CONFIG.ORDER_NONE]: stackOrderNone,\n    [STACK_CONFIG.ORDER_ASCENDING]: stackOrderAscending,\n    [STACK_CONFIG.ORDER_DESCENDING]: stackOrderDescending\n};\nconst stackOffsets = {\n    [STACK_CONFIG.OFFSET_DIVERGING]: stackOffsetDiverging,\n    [STACK_CONFIG.OFFSET_NONE]: stackOffsetNone,\n    [STACK_CONFIG.OFFSET_EXPAND]: stackOffsetExpand,\n    [STACK_CONFIG.OFFSET_WIGGLE]: stackOffsetWiggle\n};\n\n// eslint-disable-next-line require-jsdoc\nconst stack = params => d3Stack().keys(params.keys).offset(stackOffsets[params.offset])\n                .order(stackOrders[params.order])(params.data);\n\n/**\n * Groups the data into a hierarchical tree structure based on one or more fields.\n * @param { Object } params Configuration properties for nesting data\n * @param { Array.<Array> } params.data Data which needs to be grouped\n * @param { Array.<number> } params.keys Field indices by which the data will be grouped\n * @return { Array.<Object> } Grouped data array\n */\nconst nestCollection = (params) => {\n    const nestFn = nest();\n    params.keys.forEach(key => nestFn.key(d => d[key]));\n    return nestFn.entries(params.data);\n};\n\nconst pathInterpolators = {\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    stepAfter: curveStepAfter,\n    catmullRom: curveCatmullRom,\n    step: curveStep,\n    stepBefore: curveStepBefore,\n    linear: curveLinear\n};\n\nconst Symbols = {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom,\n    line,\n    area,\n    pie,\n    arc,\n    nest\n};\n\nconst Scales = {\n    band: scaleBand\n};\n\nconst getSmallestDiff = (points) => {\n    points = points.sort((a, b) => a - b);\n    let minDiff = points[1] - points[0];\n    for (let i = 2; i < points.length; i++) {\n        minDiff = Math.min(minDiff, points[i] - points[i - 1]);\n    }\n\n    return minDiff;\n};\n\nconst require = (lookupWhat, lookupDetails) => ({\n    resolvable: (store) => {\n        const lookupTarget = store[lookupWhat];\n        const depArr = lookupDetails.slice(0, lookupDetails.length - 1);\n        const fn = lookupDetails[lookupDetails.length - 1]; // fn\n\n        const deps = depArr.map(str => lookupTarget[str]);\n        return {\n            fn: fn(...deps),\n            depArr\n        };\n    }\n});\n\nconst nextAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n    function (callback) {\n        setTimeout(callback, 16);\n    };\n\nexport {\n    require,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    stack,\n    nestCollection,\n    getSymbol,\n    transformColors,\n    detectColor,\n    hexToHsv,\n    hslToRgb,\n    rgbToHsv,\n    hsvToRgb,\n    concatModels,\n    toArray,\n    angleToRadian,\n    escapeHTML,\n    generateGetterSetters,\n    getArraySum,\n    interpolator,\n    piecewiseInterpolator,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    colorInterpolator,\n    numberInterpolator,\n    ERROR_MSG,\n    reqAnimFrame,\n    nextAnimFrame,\n    filterPropagationModel,\n    transposeArray,\n    cancelAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    symbolFns,\n    easeFns,\n    clone,\n    isEqual,\n    interpolateArray,\n    getMinPoint,\n    defaultValue,\n    getMaxPoint,\n    getClosestIndexOf,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    Store,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    transactor,\n    enableChainedTransaction,\n    isHTMLElem,\n    isSimpleObject,\n    nextFrame,\n    registerListeners,\n    replaceCSSPrefix,\n    getObjProp,\n    extendsClass,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    hslInterpolator,\n    getSmallestDiff\n};\n","export function linear(t) {\n  return +t;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","export const ORDER_ASCENDING = 'ascending';\nexport const ORDER_DESCENDING = 'descending';\nexport const ORDER_NONE = 'none';\nexport const OFFSET_DIVERGING = 'diverging';\nexport const OFFSET_NONE = 'none';\nexport const OFFSET_EXPAND = 'expand';\nexport const OFFSET_WIGGLE = 'wiggle';\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import { select, event as d3event, selection, clientPoint } from 'd3-selection';\nimport { drag as d3drag } from 'd3-drag';\nimport 'd3-transition';\nimport { mergeRecursive } from './common-utils';\n/**\n * This function takes a raw DOM element or\n * a string and returns a d3 selection of that element.\n *\n * @param {HTMLElement | string} element The element to wrap in d3 selection.\n * @return {Selection} Instance of d3 selection.\n */\nconst selectElement = element => select(element);\n\n/**\n * It creates a new d3 element on the parent element\n * @param  {Selection} parent Element to which the element is to be appended\n * @param  {Object} elemType Type of the new element\n * @param  {Array} data Data for the new element\n * @param  {Object} selector classname/id/tagname for the element\n * @return {HTMLElement} Newly Created Element\n */\nconst makeElement = (parent, elemType, data, selector, callbacks = {}, keyFn) => {\n    if ((parent instanceof HTMLElement || parent instanceof SVGElement)) {\n        parent = selectElement(parent);\n    }\n\n    const selectorVal = selector ? selector[0] : null;\n    let selectorType = null;\n    let actualSelector = null;\n    let element = null;\n    let enterSel = null;\n    let mergeSel = null;\n    let filter;\n    if (selectorVal) {\n        if (selectorVal === '#') {\n            selectorType = 'id';\n            actualSelector = selector;\n        } else {\n            selectorType = 'class';\n            actualSelector = selector[0] === '.' ? selector : `.${selector}`;\n        }\n    } else {\n        actualSelector = elemType;\n        filter = true;\n    }\n    element = parent.selectAll(actualSelector);\n\n    filter && (element = element.filter(function () {\n        return this.parentNode === parent.node();\n    }));\n    element = element.data(data, keyFn);\n\n    enterSel = element.enter()\n                            .append(elemType || 'div');\n    callbacks.enter && enterSel.each(function (...params) {\n        callbacks.enter(selectElement(this), ...params);\n    });\n\n    mergeSel = enterSel.merge(element);\n    callbacks.update && mergeSel.each(function (...params) {\n        callbacks.update(selectElement(this), ...params);\n    });\n    if (selectorType === 'class') {\n        mergeSel.classed(selectorVal === '.' ? selector.substring(1, selector.length) : selector, true);\n    } else if (selectorType === 'id') {\n        mergeSel.attr('id', selector.substring(1, selector.length));\n    }\n    const exitSel = element.exit();\n\n    if (callbacks.exit) {\n        exitSel.each(function (...params) {\n            callbacks.exit(selectElement(this), ...params);\n        });\n    } else {\n        exitSel.remove();\n    }\n    return mergeSel;\n};\n\n/**\n * This function applies styles to an element\n *  @param  {Object} elem Element Selection\n * @param  {Object} styleObj Style Object to be applied\n * @return {Element} Newly Created Element\n*/\nconst applyStyle = (elem, styleObj) => {\n    Object.entries(styleObj).forEach((d) => {\n        elem.style(d[0], d[1]);\n    }, this);\n    return elem;\n};\n\n/**\n * This function appends a dom element in another element.\n * @param {HTMLElement | SVGElement} element1 The element in which to append the second element\n * @param {HTMLElement | SVGElement} element2 The element which will be appended.\n */\nconst appendElement = (element1, element2) => {\n    element1.appendChild(element2);\n};\n\n/**\n * Sets the attributes to the element.\n * @param {HTMLElement | SVGElement} element Element on which attributes will be applied\n * @param {Object} attrs Attributes which need to be applied\n */\nconst setElementAttrs = (element, attrs) => {\n    for (const key in attrs) {\n        if ({}.hasOwnProperty.call(attrs, key)) {\n            element.attr(key, attrs[key]);\n        }\n    }\n};\n\n/**\n * Sets attributes in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which attrs will be applied\n * @param {Array.<Object>} attrs Array of attributes\n * @param {string} className className of elements to select.\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setAttrs = (element, attrs, className) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    className !== undefined ? element.selectAll(`.${className}`).each(function () {\n        setElementAttrs(select(this), attrs);\n    }) : setElementAttrs(element, attrs);\n    return element;\n};\n\n/**\n * Adds a css class to elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst addClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, true) :\n                elem.classed(className, true);\n    });\n};\n\n/**\n * Removes the css class from elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst removeClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, false) :\n                elem.classed(className, false);\n    });\n};\n\n/**\n * Sets styles in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which styles will be applied\n * @param {Array.<Object>} styles Array of style attributes\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setStyles = (element, styles) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            element.style(key, styles[key]);\n        }\n    }\n    return element;\n};\n\n/**\n * Creates svg or html elements by binding data to the selection.Removes extra elements\n * on exit.\n * @param {Object} params Parameter object\n * @param {SVGElement | HTMLElement} params.container Container element where all elements will be appended\n * @param {string} params.selector Selector by which elements will be selected from dom\n * @param {string} params.append Append tag\n * @param {Function} params.each Function which will be executed for each data point and element.\n */\nconst createElements = (params) => {\n    const container = select(params.container);\n    let data;\n    let sel;\n\n    data = params.data;\n    if (typeof data === 'number') {\n        data = Array(data).fill().map((d, i) => i);\n    }\n    sel = container.selectAll(params.selector).data(data);\n\n    sel = container.selectAll(params.selector).filter(function () {\n        return this.parentNode === container.node();\n    }).data(params.data);\n\n    const selectionMerge = sel.enter().append(params.append).merge(sel).each(function (d, i) {\n        params.each(d, select(this), i);\n    });\n\n    selectionMerge.attr('class', params.className || '');\n    sel.exit().remove();\n};\n\n/**\n * Clips an element with given measurement. Basically it is used to hide overflowing portions\n * of any element.\n * @param {SVGElement} container svg element which needs to be clipped.\n * @param {Object} measurement Dimensions of the clipped rectangle.\n * @param {string} id Unique id of the clip element\n */\nconst clipElement = (container, measurement, id) => {\n    const clipPathElement = makeElement(select(container), 'clipPath', [1], `#${id}`);\n    const clipPathRect = makeElement(clipPathElement, 'rect', [1]);\n    clipPathRect.attr('x', measurement.x)\n                    .attr('y', measurement.x)\n                    .attr('width', measurement.width)\n                    .attr('height', measurement.height);\n    clipPathElement.attr('clip-path', `url(#${id})`);\n};\n\n/**\n * Returns the element of the corresponding classname.\n * @param {HTMLElement | SVGElement} node html or svg node element.\n * @param {string} className css class to be applied.\n * @return {HTMLElement | SVGElement} html or svg element.\n */\nconst getElementsByClassName = (node, className) => select(node).selectAll(className).nodes();\n\n/**\n * Gets the mouse position relative to an svg type of element\n * @param {SVGElement} element Any svg element like rect, circle, etc.\n * @param {Event} event Event object.\n * @return {Object} x and y position relative to the container element passed.\n */\nconst getMousePos = (element, event) => {\n    const boundingClientRect = element.getBoundingClientRect();\n    return {\n        x: event.x - boundingClientRect.x,\n        y: event.y - boundingClientRect.y\n    };\n};\n\nconst getClientPoint = (...params) => {\n    const pos = clientPoint(...params);\n    return {\n        x: pos[0],\n        y: pos[1]\n    };\n};\n\n/** This function appends a dom element in another element.\n * @param {Object} tag The tag name of the element to append\n * @param {Object} mount Mount point fo the element\n * @return {Object} selection of the appended element\n */\nconst createElement = (tag, mount) => select(mount).append(tag).node();\n\n/**\n * Gets the d3 event function\n * @return {Object} d3 event\n */\nconst getEvent = () => d3event;\n\n/**\n * Gets the d3 drag function\n * @return {Object} d3 drag\n */\nconst getD3Drag = () => d3drag;\n\nconst getSmartComputedStyle = (group, css) => {\n    let textEl;\n    const testText = 'W';\n    const mandatoryStyle = {\n        'fill-opacity': 0\n    };\n    const className = typeof css === 'string' ? css : (css instanceof Array ? css.join(' ') : undefined);\n\n    if (group.node() instanceof HTMLElement) {\n        textEl = group.append('div').html(testText);\n    } else {\n        textEl = group.append('text').text(testText);\n    }\n\n    if (className) {\n        textEl.attr('class', className);\n    } else if (typeof css === 'object') {\n        delete css['fill-opacity'];\n        mergeRecursive(mandatoryStyle, css);\n    }\n\n    textEl.style(mandatoryStyle);\n\n    const computedStyle = window.getComputedStyle(textEl.node());\n    const styleForSmartLabel = {\n        fontSize: computedStyle.fontSize,\n        fontFamily: computedStyle.fontFamily,\n        fontWeight: computedStyle.fontWeight,\n        fontStyle: computedStyle.fontStyle\n    };\n\n    textEl.remove();\n\n    return styleForSmartLabel;\n};\n\nconst hasTouch = () => 'ontouchstart' in document.documentElement;\n\nexport {\n    hasTouch,\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint\n};\n","/**\n * This class represents a selection applied on a data array.\n *\n * @class Selection\n */\nclass Selection {\n    /**\n     * Creates an instance of Selection.\n     * @param {Array<DataObject>} data Array of DataObjects.\n     * @memberof Selection\n     */\n    constructor () {\n        this._data = [];\n        // // map of id to data\n        this._idMap = {};\n\n        this._mode = '';\n        // data.forEach((item, idx) => {\n        //     const index = item.id || idx;\n        //     this._idMap[index] = item;\n        // });\n        // // array to store data in enter phase\n        this._enterdata = [];\n        // // array to store data in exit phase\n        this._exitdata = [];\n    }\n    /**\n     *  Gets the object bound to a class\n     *\n     * @return {Object} current data set bound to the class\n     * @memberof Selection\n     */\n    getObjects () {\n        return Object.keys(this._idMap).map(e => this._idMap[e]);\n    }\n\n    /**\n     * This method is used to supply seed data to a selection.\n     *\n     * @param {Array} newData Seed data to create the enter selection.\n     * @param {Functon | undefined } idGetter This function is used to uniqely identify a data entry.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    data (newData, idGetter) {\n        if (idGetter) {\n            this._data = [];\n            this._idGetter = idGetter;\n            const tempMap = {};\n\n            newData.forEach((...params) => {\n                const index = idGetter(...params);\n                tempMap[index] = params[0];\n            });\n            // check if any data items have been removed\n            const purgedIds = [];\n\n            Object.keys(this._idMap).forEach((id) => {\n                if (!tempMap[id]) {\n                    purgedIds.push(id);\n                }\n            });\n\n            Object.keys(tempMap).forEach((id) => {\n                if (!this._idMap[id]) {\n                    this._enterdata.push(tempMap[id]);\n                } else {\n                    this._idMap[id] = tempMap[id];\n                    this._data.push(tempMap[id]);\n                }\n            });\n            // move the purged items to exit selection\n            purgedIds.forEach((id) => {\n                const purged = this._idMap[id];\n                this._exitdata.push(purged);\n                // this._data = this._data.slice(id, 1);\n                delete this._idMap[id];\n            });\n            // this._data = this._data.slice(temp, this._data.length);\n\n            return this;\n        }\n        // no id getter supplied so use indices\n        if (newData.length > this._data.length) {\n            const startIdx = this._data.length;\n            for (let i = startIdx; i < newData.length; i += 1) {\n                this._enterdata.push(newData[i]);\n            }\n        } else {\n            // push to exit selection\n            const temp = newData.length;\n            for (let i = temp; i < this._data.length; i += 1) {\n                const purged = this._data[i];\n                delete this._idMap[purged.id];\n                this._exitdata.push(purged);\n            }\n            this._data = this._data.slice(temp, this._data.length);\n        }\n        return this;\n    }\n\n    /**\n     * Applies the supplied callback to each data element\n     * and returns a new selection.\n     *\n     * @param {Function} callback Callback to execute on each item.\n     * @return {Selection} New selection with data created using callback.\n     * @memberof EnterSelection\n     */\n    append (callback) {\n        this[`_${this._mode}data`].forEach((...params) => {\n            const data = params[0];\n            const id = this._idGetter ? this._idGetter(...params) : (data.id || params[1]);\n            this._idMap[id] = callback(...params);\n        });\n        this._mode = '';\n        return this;\n    }\n\n    /**\n     * This method returns an enter selection that\n     * allows or update operations.\n     *\n     * @return {EnterSelection} Instance of enter selection.\n     * @memberof Selection\n     */\n    enter () {\n        this._mode = 'enter';\n        return this;\n        // return new EnterSelection(this._enterdata, this._idMap, this._idGetter);\n    }\n\n    /**\n     * This method is used to set key value pairs\n     * on data objects.\n     *\n     * @param {string} key Name of property.\n     * @param {any} value Value of property.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    attr (key, value) {\n        this._data.forEach(item => item.attr(key, value));\n        return this;\n    }\n\n    /**\n     * This method merges the data of one selection with another.\n     *\n     * @param {Selection} selection Instance of selection.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    merge (selection) {\n        selection._data.forEach((...params) => {\n            const id = this._idGetter ? this._idGetter(...params) : (params[0].id || params[1]);\n            this._idMap[id] = params[0];\n            this._data.push(params[0]);\n        });\n        // reset enter selection\n        this._enterdata = [];\n        return this;\n    }\n\n    /**\n     * Returns a selection with exit data.\n     *\n     * @return {Selection} Instance of selection.\n     * @memberof Selection\n     */\n    exit () {\n        this._mode = 'exit';\n        // const exitdata = this._exitdata;\n        // const exitSelection = new Selection(exitdata);\n        // this._exitdata = [];\n        return this;\n    }\n\n    each (fn) {\n        Object.keys(this._idMap).forEach((e) => {\n            fn(this._idMap[e]);\n        });\n        return this;\n    }\n\n    map (fn) {\n        Object.keys(this._idMap).forEach((...params) => {\n            this._idMap[params[0]] = fn(this._idMap[params[0]], ...params);\n        });\n        return this;\n    }\n\n    /**\n     * Executes the cleanup operation associated with data objets.\n     *\n     * @memberof Selection\n     */\n    remove () {\n        // do cleanup on DDO's\n        const data = this[`_${this._mode}data`];\n\n        data.forEach(item => item.remove());\n        if (this._mode === '') {\n            this.each(e => e.remove());\n        }\n        this[`_${this._mode}data`] = [];\n        this._mode = '';\n    }\n}\n\nexport default Selection;\n","const events = [\n    'initialized',\n    'beforeupdate',\n    'updated',\n    'beforedraw',\n    'drawn',\n    'beforeremove',\n    'removed',\n    'animationend'\n];\n\nconst compositions = [\n    'canvas',\n    'unit',\n    'layer',\n    'axis',\n    'facet-headers',\n    'legend',\n    'caption'\n];\n\nconst EVENT_LIST = [];\n\ncompositions.forEach((composition) => {\n    events.forEach((event) => {\n        EVENT_LIST.push(`${composition}.${event}`);\n    });\n});\n\nexport default EVENT_LIST;\n","import EVENT_LIST from './event-list';\nimport { createPromise } from './helper';\n\n/**\n * At first call it accepts one function\n * calling it second time accepts notification object.\n * notification object then called with first accepted function\n *\n * @param {Function} resolveFn a promise's resolve function\n * @return {Function} a function to accept notification object\n */\nconst resolver = resolveFn => notification => resolveFn(notification);\n\n/**\n * Checks if the property string is present in the source object\n *\n * @param {Object} source source object whom you want to check the property\n * @param {string} property key name that need to be checked\n * @return {boolean} returns true if the property found in the source object\n */\nconst hasOwn = (source, property) => Object.prototype.hasOwnProperty.call(source, property);\n\n/**\n * LifeCycleManager which goes as a dependendecy to a muze\n * it accepts notification from the entire library throughout\n * the exeecution life\n *\n * @export\n * @class LifeCycleManager\n */\nexport default class LifeCycleManager {\n\n    /**\n     * Creates an instance of LifeCycleManager.\n     * @memberof LifeCycleManager\n     */\n    constructor () {\n        this._eventList = EVENT_LIST;\n        this._promises = new Map();\n        this._notifiers = {};\n        this._lifeCycles = {};\n        this._unreleasedLifeCycles = {};\n        this._boot();\n    }\n\n    /**\n     * Fills all the notifiers with resolver callback\n     *\n     * @memberof LifeCycleManager\n     */\n    _boot () {\n        this._notifiers = this._eventList.reduce((acc, name) => {\n            acc[name] = resolver;\n            return acc;\n        }, {});\n        this._preparePromises();\n    }\n\n    /**\n     * Public method which gives the promise corresponding\n     * to the event name\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    retrieve (eventName) {\n        return this._promises.get(eventName);\n    }\n\n    /**\n     * Creates a promise that will be passed to user's callback\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} a pending promise waiting for resolve to be called\n     * @memberof LifeCycleManager\n     */\n    _makeNotifierPromise (eventName) {\n        return new Promise((resolve) => {\n            this._notifiers[eventName] = resolver(resolve);\n        });\n    }\n\n    /**\n     * Prepares the promise map with pending promises\n     * all the promises are in a pending state where their's\n     * resolve function waiting to be called with notification object\n     * @memberof LifeCycleManager\n     */\n    _preparePromises () {\n        this._eventList.forEach((eventName) => {\n            const promise = this._makeNotifierPromise(eventName);\n            this._promises.set(eventName, promise);\n            createPromise(promise, eventName, this);\n        });\n    }\n\n    /**\n     * Resolves the promise with notification object\n     *\n     * @param {string} eventName name of the event in the system\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     *\n     * @memberof LifeCycleManager\n     */\n    _resolvePromise (eventName, notification) {\n        this._notifiers[eventName](notification);\n    }\n\n    /**\n     * Public method which is being called by different\n     * subcompoents of the system at different execution atages\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    notify (notification) {\n        // get the composition name from notification\n        // or from static formalName() method\n        const composition = notification.formalName || notification.client.constructor.formalName();\n        notification.formalName = composition;\n        this._releasePromisesFromCache();\n        this._notify(composition, notification);\n    }\n\n    /**\n     * Notify user the with promsie in a callback\n     * if callback not found then cache it\n     *\n     * @param {string} composition\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    _notify (composition, notification) {\n        const stage = notification.action;\n        const eventName = `${composition}.${stage}`;\n\n        // resolves promise with the notification object\n        this._resolvePromise(eventName, notification);\n\n        // get the promise from the promise map\n        const promise = this.retrieve(eventName);\n\n        if (this._lifeCycles[composition]) {\n            if (this._lifeCycles[composition][stage]) {\n                // if user given call back exists, then call with promise\n                this._callLifeCycleCallback(composition, stage, promise);\n            } else {\n                // otherwise cache the promise\n                this._cachePromise(composition, stage, promise);\n            }\n        } else {\n            this._cachePromise(composition, stage, promise);\n        }\n    }\n\n    /**\n     * Calls the user's callback with callback\n     *\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _callLifeCycleCallback (composition, stage, promise) {\n        const eventName = `${composition}.${stage}`;\n        this._lifeCycles[composition][stage](promise);\n        this._resetTargetPromise(eventName);\n    }\n\n    /**\n     * Try to clear the cached promsies once we have\n     * macthed callbacks from the user\n     *\n     * @memberof LifeCycleManager\n     */\n    _releasePromisesFromCache () {\n        const compositions = Object.keys(this._unreleasedLifeCycles);\n        compositions.forEach((composition) => {\n            const stages = Object.keys(this._unreleasedLifeCycles[composition]);\n            stages.forEach((stage) => {\n                if (this._lifeCycles[composition]) {\n                    if (this._lifeCycles[composition][stage]) {\n                        // take the promise from unreleased lifeCycles\n                        const promise = this._unreleasedLifeCycles[composition][stage];\n                        // call the user given callback with that promise\n                        this._callLifeCycleCallback(composition, stage, promise);\n                        // delete promise from unreleased lifeCycles\n                        delete this._unreleasedLifeCycles[composition][stage];\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Cache the promise in the map. This cache\n     * then get consumed if we get user callbacks\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _cachePromise (composition, stage, promise) {\n        if (!hasOwn(this._unreleasedLifeCycles, composition)) {\n            this._unreleasedLifeCycles[composition] = {};\n        }\n\n        if (!hasOwn(this._unreleasedLifeCycles[composition], stage)) {\n            this._unreleasedLifeCycles[composition][stage] = {};\n        }\n        this._unreleasedLifeCycles[composition][stage] = promise;\n    }\n\n    /**\n     * It register's the callbacks gievn the user\n     *\n     * @param {Object} [lifeCycles={}] a object with list of callbacks\n     * @memberof LifeCycleManager\n     */\n    register (lifeCycles = {}) {\n        this._lifeCycles = lifeCycles;\n        // as we get all the callbacks, try to call them\n        // from unreleased promise map\n        this._releasePromisesFromCache();\n    }\n\n    /**\n     * Reset the promise into pending state\n     *\n     * @param {string} eventName name of the event happening\n     * @memberof LifeCycleManager\n     */\n    _resetTargetPromise (eventName) {\n        setTimeout(() => {\n            this._notifiers[eventName] = resolver;\n            this._promises.set(eventName, this._makeNotifierPromise(eventName));\n        }, 0);\n    }\n}\n","import LifeCycleManager from './lifecycle-manager';\n\nexport default LifeCycleManager;\n","/**\n * Creates a new promise when the given promise is resolved. This needs to be done so that after the lifecycle event\n * is completed, then again when the event gets completed, then a new promise gets resolved.\n *\n * @param {Promise} promise Instance of promise\n * @param {string} eventName name of event\n * @param {LifeCycleManager} context Instance of lifecyclemanager\n */\nexport const createPromise = (promise, eventName, context) => {\n    promise.then(() => {\n        const prm = context._makeNotifierPromise(eventName);\n        context._promises.set(eventName, prm);\n        createPromise(prm, eventName, context);\n    });\n};\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\nexport const LONGTOUCH = 'longtouch';\nexport const TOUCHDRAG = 'touchdrag';\nexport const ALL_ACTIONS = '*';\n","const SELECTION_NEW_ENTRY = 1;\nconst SELECTION_NEW_EXIT = -1;\nconst SELECTION_NULL = 0;\nconst SELECTION_OLD_ENTRY = 2;\nconst SELECTION_OLD_EXIT = -2;\n\nexport {\n    SELECTION_NEW_ENTRY,\n    SELECTION_NEW_EXIT,\n    SELECTION_NULL,\n    SELECTION_OLD_ENTRY,\n    SELECTION_OLD_EXIT\n};\n","import SelectionSet from './selection-set';\n\nexport default SelectionSet;\n","import {\n    SELECTION_NEW_ENTRY, SELECTION_NEW_EXIT, SELECTION_NULL, SELECTION_OLD_ENTRY, SELECTION_OLD_EXIT\n} from '../enums/selection';\n/* eslint-disable guard-for-in */\n\n/**\n * This component is used to keep track of the row tuples of the data which gets added and removed. This keeps\n * information of which rows are in previous and new entry set and previous and new exit set. This is initialized by\n * {@link Firebolt}.\n *\n * @public\n *\n * @class SelectionSet\n */\nclass SelectionSet {\n    /**\n     * Creates an instance of selection set\n     *\n     * @param {Array.<string>} completeSet Set of unique ids.\n     */\n    constructor (completeSet, _volatile) {\n        this.completeSet = completeSet;\n        this._set = completeSet.reduce((obj, key) => {\n            obj[key] = SELECTION_NULL;\n            return obj;\n        }, {});\n        this._volatile = _volatile;\n        this._completeSetCount = completeSet.length;\n        this._lockedSelection = {};\n        this._resetted = true;\n    }\n\n    /**\n     * Adds a set of ids to the selection set. This also moves the other rows to exit set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    add (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_ENTRY;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_ENTRY && set[key] !== SELECTION_OLD_ENTRY) {\n                set[key] = set[key] < 0 ? SELECTION_OLD_EXIT : SELECTION_NEW_EXIT;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Adds an array of ids to the old entry set.\n     *\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    update (ids) {\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_OLD_ENTRY;\n        });\n\n        return this;\n    }\n\n    /**\n     * Moves all ids which in new entry set  to old entry set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateEntry () {\n        const set = this._set;\n\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_ENTRY ? SELECTION_OLD_ENTRY : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Moves an array of ids which are in new exit set to old exit set.\n     *\n     * @public\n     *\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateExit () {\n        const set = this._set;\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_EXIT ? SELECTION_OLD_EXIT : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Removes an array of ids from the selection set. It also moves the remaining row ids to entry set.\n     *\n     * @public\n     * @param {Array.<string>} ids Array of unique ids\n     *\n     * @return {SelectionSet}  Instance of selection set\n     */\n    remove (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_EXIT;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_EXIT && set[key] !== SELECTION_OLD_EXIT) {\n                set[key] = set[key] === 0 ? SELECTION_NEW_ENTRY : SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n\n    getSets () {\n        const set = this._set;\n        const retObj = {\n            entrySet: [[], []],\n            exitSet: [[], []],\n            completeSet: []\n        };\n\n        for (const key in set) {\n            if (set[key] > 0) {\n                set[key] === SELECTION_OLD_ENTRY && retObj.entrySet[0].push(key);\n                set[key] === SELECTION_NEW_ENTRY && retObj.entrySet[1].push(key);\n            } else if (set[key] < 0) {\n                set[key] === SELECTION_OLD_EXIT && retObj.exitSet[0].push(key);\n                set[key] === SELECTION_NEW_EXIT && retObj.exitSet[1].push(key);\n            }\n            retObj.completeSet.push(key);\n        }\n\n        ['entrySet', 'exitSet'].forEach((type) => {\n            retObj[type] = retObj[type].map(e => e.map(Number));\n        });\n        retObj.completeSet = retObj.completeSet.map(Number);\n\n        return retObj;\n    }\n\n    /**\n     * Resets an array of ids in the selection set to initial state. It sets the value of every unique id value to\n     * null in the selection set which means they are neither in entry set nor in exit set. If no ids are passed,\n     * then it resets all the ids to null.\n     *\n     * @public\n     *\n     * @param {Array} ids Array of unique ids.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    reset (ids) {\n        const set = this._set;\n        if (ids) {\n            ids.forEach((i) => {\n                set[i] = SELECTION_NULL;\n            });\n        } else {\n            const lockedSel = this._lockedSelection;\n            for (const key in set) {\n                if (!(key in lockedSel)) {\n                    set[key] = SELECTION_NULL;\n                }\n            }\n        }\n        this._resetted = true;\n        return this;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     *\n     * @public\n     *\n     * @return {Array.<string>} Array of unique ids\n     */\n    getEntrySet () {\n        const set = this._set;\n        const addSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_ENTRY && addSet.push(key);\n        }\n\n        return addSet;\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in entry set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old entry set or new entry set\n     */\n    getExistingEntrySet (addSet) {\n        const set = this._set;\n        return addSet.filter(d => set[d] === SELECTION_NEW_ENTRY || set[d] === SELECTION_OLD_ENTRY);\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old exit set or new exit set\n     */\n    getExistingExitSet (removeSet) {\n        const set = this._set;\n        return removeSet.filter(d => set[d] === SELECTION_NEW_EXIT || set[d] === SELECTION_OLD_EXIT);\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldEntry () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_ENTRY && updateSet.push(key);\n        }\n        return updateSet;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldExit () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_EXIT && updateSet.push(key);\n        }\n\n        return updateSet;\n    }\n\n    /**\n     * Gets the array of ids which are in the exit set.\n     *\n     * @public\n     * @return {Array.<string>} Array of unique ids\n     */\n    getExitSet () {\n        const set = this._set;\n        const removeSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_EXIT && removeSet.push(key);\n        }\n        return removeSet;\n    }\n\n    /**\n     * Gets all the ids which are either in exit or entry set.\n     *\n     * @public\n     * @return {Array} Array of unique ids\n     */\n    getCompleteSet () {\n        const set = this._set;\n        const completeSet = [];\n\n        for (const key in set) {\n            completeSet.push(key);\n        }\n\n        return completeSet;\n    }\n\n    getCompleteSetCount () {\n        return this._completeSetCount;\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Swaps the add set and remove set in the selection set.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    toggle () {\n        const set = this._set;\n\n        for (const key in set) {\n            if (set[key] === SELECTION_NEW_ENTRY) {\n                set[key] = SELECTION_NEW_EXIT;\n            } else if (set[key] === SELECTION_NEW_EXIT) {\n                set[key] = SELECTION_NEW_ENTRY;\n            } else if (set[key] === SELECTION_OLD_ENTRY) {\n                set[key] = SELECTION_OLD_EXIT;\n            } else {\n                set[key] = SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n}\n\nexport default SelectionSet;\n","import { clone } from 'muze-utils';\nimport * as SELECTION from '../enums/selection';\n\nexport const initializeSideEffects = (context, sideEffects) => {\n    const sideEffectsMap = context._sideEffects;\n    const config = context.config();\n    sideEffects = sideEffects instanceof Array ? sideEffects : Object.values(sideEffects);\n    sideEffects.forEach((SideEffect) => {\n        const formalName = SideEffect.formalName();\n        const sideEffectInstance = sideEffectsMap[formalName];\n        sideEffectsMap[formalName] = sideEffectInstance || new SideEffect(context);\n        const sideEffectConf = config[formalName];\n        sideEffectConf && sideEffectsMap[formalName].config(sideEffectConf);\n    });\n    return sideEffectsMap;\n};\n\nexport const initializeBehaviouralActions = (context, actions) => {\n    const dispatchableBehaviours = {};\n\n    actions = actions instanceof Array ? actions : Object.values(actions);\n    actions.forEach((Action) => {\n        dispatchableBehaviours[Action.formalName()] = new Action(context);\n    });\n    return dispatchableBehaviours;\n};\n\nexport const initializePhysicalActions = (context, actions) => {\n    const physicalActions = {};\n\n    for (const name in actions) {\n        if (!({}).hasOwnProperty.call(name, actions)) {\n            physicalActions[name] = actions[name](context);\n        }\n    }\n    return physicalActions;\n};\n\nexport const changeSideEffectAvailability = (context, fn, toEnable) => {\n    const sideEffects = context.sideEffects();\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            let change = true;\n            if (fn && fn(key) === false) {\n                change = false;\n            }\n            if (change) {\n                toEnable ? sideEffects[key].enable() : sideEffects[key].disable();\n            }\n        }\n    }\n};\n\nexport const getMergedSet = set => [...new Set([...set[0], ...set[1]])];\n\nexport const getSourceFields = (propagationInf, criteria = {}) => {\n    const sourceIdentifiers = propagationInf.sourceIdentifiers;\n    let sourceFields;\n    if (sourceIdentifiers) {\n        sourceFields = sourceIdentifiers.getSchema().map(d => d.name);\n    } else if (criteria instanceof Array) {\n        sourceFields = criteria[0];\n    } else {\n        sourceFields = Object.keys(criteria || {});\n    }\n    return sourceFields;\n};\n\nconst conditionsMap = {\n    newEntry: [SELECTION.SELECTION_NEW_ENTRY],\n    oldEntry: [SELECTION.SELECTION_OLD_ENTRY],\n    mergedEnter: [SELECTION.SELECTION_NEW_ENTRY, SELECTION.SELECTION_OLD_ENTRY],\n    newExit: [SELECTION.SELECTION_NEW_EXIT],\n    oldExit: [SELECTION.SELECTION_OLD_EXIT],\n    mergedExit: [SELECTION.SELECTION_NEW_EXIT, SELECTION.SELECTION_OLD_EXIT],\n    complete: []\n};\n\nexport const getModelFromSet = (type, model, set) => {\n    if (model) {\n        return model.select((fields, i) =>\n           (conditionsMap[type].some(condition => set[i] === condition)), {\n               saveChild: false\n           });\n    }\n    return null;\n};\n\nexport const getSetInfo = (type, set, config) => {\n    let model = null;\n    const filteredDataModel = config.filteredDataModel;\n    const selectionSet = config.selectionSet;\n    if (!config.propagationData) {\n        if (selectionSet.resetted()) {\n            model = null;\n        } else {\n            model = getModelFromSet(type, config.dataModel, config.selectionSet._set);\n        }\n    } else if (filteredDataModel) {\n        model = type === 'mergedEnter' ? filteredDataModel[0] : filteredDataModel[1];\n    }\n    return {\n        uids: set,\n        length: set.length,\n        model\n    };\n};\n\nexport const getSideEffects = (behaviour, behaviourEffectMap) => {\n    const sideEffects = [];\n    for (const key in behaviourEffectMap) {\n        const behaviours = key.split(',');\n        const found = behaviours.some(d => d === behaviour);\n        if (found) {\n            sideEffects.push({\n                effects: behaviourEffectMap[key],\n                behaviours\n            });\n        }\n    }\n    return sideEffects;\n};\n\nexport const unionSets = (context, behaviours) => {\n    let combinedSet = {};\n    const models = {\n        mergedEnter: null,\n        mergedExit: null\n    };\n    behaviours.forEach((behaviour) => {\n        const entryExitSet = context._entryExitSet[behaviour];\n        if (entryExitSet) {\n            combinedSet = Object.assign(combinedSet, clone(entryExitSet));\n            ['mergedEnter', 'mergedExit'].forEach((type) => {\n                const model = entryExitSet[type].model;\n                let existingModel = models[type];\n                if (!existingModel) {\n                    existingModel = models[type] = model;\n                } else if (`${model.getSchema().map(d => d.name).sort()}` ===\n                    `${existingModel.getSchema().map(d => d.name).sort()}`) {\n                    existingModel = models[type] = model.union(existingModel);\n                } else {\n                    existingModel = model;\n                }\n                combinedSet[type].model = existingModel;\n            });\n        }\n    });\n    return combinedSet;\n};\n","import {\n    mergeRecursive,\n    hasTouch,\n    filterPropagationModel,\n    FieldType,\n    selectElement,\n    isSimpleObject\n} from 'muze-utils';\nimport { ALL_ACTIONS } from './enums/actions';\nimport SelectionSet from './selection-set';\nimport {\n    initializeBehaviouralActions,\n    initializeSideEffects,\n    changeSideEffectAvailability,\n    initializePhysicalActions,\n    unionSets,\n    getSideEffects\n} from './helper';\n\n/**\n * This class is responsible for dispatching behavioural actions and side effects. It also keeps the information of\n * registered physical actions, behavioural actions and side effects. Also, it keeps the map of physical and behavioural\n * actions and behavioural actions and side effects. Whenever any behavioural action is dispatched, it also propagates\n * the rows which got affected to the other datamodels. This class is initialized by {@link VisualUnit} and legend to\n * manage it's interaction.\n *\n * @public\n * @class Firebolt\n * @module Firebolt\n */\nexport default class Firebolt {\n    constructor (context, actions, sideEffects, behaviourEffectMap) {\n        this.context = context;\n        this._sideEffectDefinitions = {};\n        this._sideEffects = {};\n        this._propagationInf = {};\n        this._actions = {\n            behavioural: {},\n            physical: {}\n        };\n        this._selectionSet = {};\n        this._volatileSelectionSet = {};\n        this._propagationFields = {};\n        this._sourceSideEffects = {\n            selectionBox: () => false\n        };\n        this._propagationBehaviourMap = {};\n        this._sourceBehaviours = {};\n        this._actionBehaviourMap = {};\n        this._config = {};\n        this._behaviourEffectMap = {};\n        this._entryExitSet = {};\n        this._actionHistory = {};\n        this._queuedSideEffects = {};\n\n        this.mapSideEffects(behaviourEffectMap);\n        this.registerBehaviouralActions(actions.behavioural);\n        this.registerSideEffects(sideEffects);\n        this.registerPhysicalBehaviouralMap(actions.physicalBehaviouralMap);\n        this.registerPhysicalActions(actions.physical);\n    }\n\n    config (...config) {\n        if (config.length) {\n            this._config = mergeRecursive(this._config, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    mapSideEffects (behEffectMap) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        for (const key in behEffectMap) {\n            if ({}.hasOwnProperty.call(behEffectMap, key)) {\n                const sideEffects = behEffectMap[key] || [];\n                let preventDefaultActions = false;\n                let effectNames;\n                if (isSimpleObject(sideEffects)) {\n                    effectNames = sideEffects.effects;\n                    preventDefaultActions = sideEffects.preventDefaultActions;\n                } else {\n                    effectNames = sideEffects;\n                }\n                !behaviourEffectMap[key] && (behaviourEffectMap[key] = []);\n                this._behaviourEffectMap[key] = [...new Set(preventDefaultActions ? effectNames :\n                    [...behaviourEffectMap[key], ...effectNames])];\n            }\n        }\n        return this;\n    }\n\n    registerBehaviouralActions (actions) {\n        const behaviours = initializeBehaviouralActions(this, actions);\n        this.prepareSelectionSets(behaviours);\n        Object.assign(this._actions.behavioural, behaviours);\n        return this;\n    }\n\n    prepareSelectionSets () {\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        this.initializeSideEffects();\n        return this;\n    }\n\n    applySideEffects (sideEffects, selectionSet, payload) {\n        const sideEffectStore = this.sideEffects();\n        const actionHistory = this._actionHistory;\n        const queuedSideEffects = this._queuedSideEffects;\n        sideEffects.forEach((sideEffect) => {\n            let options;\n            let name;\n            const effects = sideEffect.effects;\n            const behaviours = sideEffect.behaviours;\n            const combinedSet = unionSets(this, behaviours, selectionSet);\n            effects.forEach((effect) => {\n                if (typeof effect === 'object') {\n                    name = effect.name;\n                    options = effect.options;\n                } else {\n                    name = effect;\n                }\n\n                const sideEffectInstance = sideEffectStore[name];\n                if (sideEffectInstance.isEnabled()) {\n                    if (!sideEffectInstance.constructor.mutates() &&\n                        Object.values(actionHistory).some(d => d.isMutableAction)) {\n                        queuedSideEffects[`${name}-${behaviours.join()}`] = {\n                            name,\n                            params: [combinedSet, payload, options]\n                        };\n                    } else {\n                        this.dispatchSideEffect(name, combinedSet, payload, options);\n                    }\n                }\n            });\n        });\n        return this;\n    }\n\n    dispatchSideEffect (name, selectionSet, payload, options = {}) {\n        const sideEffectStore = this.sideEffects();\n        const sideEffect = sideEffectStore[name];\n        let disable = false;\n        if (options.filter && options.filter(sideEffect)) {\n            disable = true;\n        }\n        !disable && sideEffectStore[name].apply(selectionSet, payload, options);\n    }\n\n    registerPropagationBehaviourMap (map) {\n        this._propagationBehaviourMap = Object.assign(this._propagationBehaviourMap, map || {});\n        return this;\n    }\n\n    dispatchBehaviour (behaviour, payload, propagationInfo = {}) {\n        const propagate = propagationInfo.propagate !== undefined ? propagationInfo.propagate : true;\n        const behaviouralActions = this._actions.behavioural;\n        const action = behaviouralActions[behaviour];\n        const behaviourEffectMap = this._behaviourEffectMap;\n        const sideEffects = getSideEffects(behaviour, behaviourEffectMap);\n        this._propagationInf = propagationInfo;\n\n        if (action) {\n            const selectionSet = action.dispatch(payload);\n            const propagationSelectionSet = this.getPropagationSelectionSet(selectionSet);\n            this._entryExitSet[behaviour] = propagationSelectionSet;\n            const shouldApplySideEffects = this.shouldApplySideEffects(propagate);\n\n            if (propagate) {\n                this.propagate(behaviour, payload, selectionSet.find(d => d.sourceSelectionSet), sideEffects);\n            }\n            if (shouldApplySideEffects) {\n                const applicableSideEffects = this.getApplicableSideEffects(sideEffects, payload, propagationInfo);\n                this.applySideEffects(applicableSideEffects, propagationSelectionSet, payload);\n            }\n        }\n\n        return this;\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet.find(d => !d.sourceSelectionSet);\n    }\n\n    shouldApplySideEffects () {\n        return true;\n    }\n\n    changeBehaviourStateOnPropagation (behaviour, value) {\n        if (value instanceof Function) {\n            this._sourceBehaviours[behaviour] = value;\n        } else {\n            this._sourceBehaviours[behaviour] = () => value;\n        }\n        return this;\n    }\n\n    changeSideEffectStateOnPropagation (sideEffect, value) {\n        if (value instanceof Function) {\n            this._sourceSideEffects[sideEffect] = value;\n        } else {\n            this._sourceSideEffects[sideEffect] = () => value;\n        }\n    }\n\n    propagate () {\n        return this;\n    }\n\n    sideEffects (...sideEffects) {\n        if (sideEffects.length) {\n            this._sideEffects = sideEffects[0];\n            return this;\n        }\n        return this._sideEffects;\n    }\n\n    enableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, true);\n        return this;\n    }\n\n    disableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, false);\n        return this;\n    }\n\n    dissociateBehaviour (behaviour, physicalAction) {\n        const actionBehaviourMap = this._actionBehaviourMap;\n        for (const key in actionBehaviourMap) {\n            if (key === physicalAction) {\n                const behaviourMap = actionBehaviourMap[key];\n                behaviourMap.behaviours = behaviourMap.behaviours.filter(d => d !== behaviour);\n                this.mapActionsAndBehaviour(key);\n            }\n        }\n\n        return this;\n    }\n\n    dissociateSideEffect (sideEffect, behaviour) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        behaviourEffectMap[behaviour] = behaviourEffectMap[behaviour].filter(d => (d.name || d) !== sideEffect);\n        return this;\n    }\n\n    getApplicableSideEffects (sideEffects) {\n        return sideEffects;\n    }\n\n    attachPropagationListener (dataModel) {\n        dataModel.unsubscribe('propagation');\n        dataModel.on('propagation', this.onDataModelPropagation());\n        return this;\n    }\n\n    onDataModelPropagation () {\n        return (propValue) => {\n            const payload = propValue.payload;\n            const action = payload.action;\n\n            this.dispatchBehaviour(action, payload, {\n                propagate: false\n            });\n        };\n    }\n\n    createSelectionSet (uniqueIds, behaviouralActions) {\n        const behaviours = behaviouralActions || this._actions.behavioural;\n        const selectionSet = this._selectionSet;\n        const volatileSelectionSet = this._volatileSelectionSet;\n\n        for (const key in behaviours) {\n            if ({}.hasOwnProperty.call(behaviours, key)) {\n                selectionSet[key] = new SelectionSet(uniqueIds);\n                volatileSelectionSet[key] = new SelectionSet(uniqueIds, true);\n            }\n        }\n        this._volatileSelectionSet = volatileSelectionSet;\n        this.selectionSet(selectionSet);\n        return this;\n    }\n\n    selectionSet (...selectionSet) {\n        if (selectionSet.length) {\n            this._selectionSet = selectionSet[0];\n            return this;\n        }\n        return this._selectionSet;\n    }\n\n    initializeSideEffects () {\n        const sideEffectDefinitions = this._sideEffectDefinitions;\n        this.sideEffects(initializeSideEffects(this, sideEffectDefinitions));\n        return this;\n    }\n\n    registerPhysicalActions (actions) {\n        const initedActions = initializePhysicalActions(this, actions);\n        Object.assign(this._actions.physical, initedActions);\n        return this;\n    }\n\n    /**\n     * Allows to propagate the datamodel with only the supplied fields. When propagation is done, then the fields\n     * which are supplied for the specified behavioural action is propagated.\n     *\n     * @public\n     *\n     * @param {string} action Name of behavioural action. If '*' is specified, then for all behavioural actions it is\n     * applied.\n     * @param {Array} fields Array of field names which will be propagated.\n     * @param {boolean} append If true, then it is appended to the existing propagation data model fields else only\n     * those fields are projected from propagation data model and propagated.\n     *\n     * @return {Firebolt} Instance of firebolt\n     */\n    propagateWith (action, fields, append = false) {\n        const behaviouralActions = this._actions.behavioural;\n        if (fields.length) {\n            if (action === ALL_ACTIONS) {\n                for (const key in behaviouralActions) {\n                    this._propagationFields[key] = {\n                        fields,\n                        append\n                    };\n                }\n            } else {\n                this._propagationFields[action] = {\n                    fields,\n                    append\n                };\n            }\n            return this;\n        }\n        return this._propagationFields;\n    }\n\n    /**\n     * Map actions and behaviours\n     * @return {Firebolt} Firebolt instance\n     */\n    mapActionsAndBehaviour (phyAction) {\n        const initedPhysicalActions = this._actions.physical;\n        const map = this._actionBehaviourMap;\n\n        for (const action in map) {\n            if (!({}).hasOwnProperty.call(action, map) && action === (phyAction || action)) {\n                let target;\n                const mapObj = map[action];\n                target = mapObj.target;\n                const touch = mapObj.touch;\n                if (!target) {\n                    target = this.context.getDefaultTargetContainer();\n                }\n                const bind = hasTouch() ? touch === true || touch === undefined : !touch;\n                bind && this.bindActionWithBehaviour(initedPhysicalActions[action],\n                    target, mapObj.behaviours);\n            }\n        }\n        return this;\n    }\n\n    registerPhysicalBehaviouralMap (map) {\n        this._actionBehaviourMap = mergeRecursive(this._actionBehaviourMap, map);\n        return this;\n    }\n\n    /**\n     * Binds a target element with an action.\n     *\n     * @param {Function} action Action method\n     * @param {string} target Class name of element\n     * @param {Array} behaviourList Array of behaviours\n     * @return {FireBolt} Instance of firebolt\n     */\n    bindActionWithBehaviour (action, targets, behaviourList) {\n        if (typeof (targets) === 'string') {\n            targets = [targets];\n        }\n        targets.forEach((target) => {\n            const mount = this.context.mount();\n            const nodes = target.node instanceof Function ? target : selectElement(mount).selectAll(target);\n            if (!nodes.empty()) {\n                if (nodes instanceof Array) {\n                    nodes.forEach((node) => {\n                        action(selectElement(node), behaviourList);\n                    });\n                } else {\n                    action(nodes, behaviourList);\n                }\n            }\n        });\n        return this;\n    }\n\n    getPropagationInf () {\n        return this._propagationInf;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.context;\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all');\n        const xFields = context.fields().x || [];\n        const yFields = context.fields().y || [];\n        const xMeasures = xFields.every(field => field.type() === FieldType.MEASURE);\n        const yMeasures = yFields.every(field => field.type() === FieldType.MEASURE);\n        return {\n            model: filteredDataModel,\n            uids: criteria === null ? null : (propagationInf.data ? filterPropagationModel(this.getFullData(),\n                propagationInf.data[0], xMeasures && yMeasures).getData().uids : filteredDataModel[0].getData().uids)\n        };\n    }\n\n    getSelectionSets (action) {\n        const sourceId = this.context.id();\n        const propagationInf = this._propagationInf || {};\n        const propagationSource = propagationInf.sourceId;\n        let applicableSelectionSets = [];\n        if (propagationSource !== sourceId) {\n            applicableSelectionSets = [this._volatileSelectionSet[action]];\n        }\n\n        if (propagationSource) {\n            applicableSelectionSets.push(this.selectionSet()[action]);\n        }\n        return applicableSelectionSets;\n    }\n\n    getFullData () {\n        return this.context.data();\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Returns the entry and exit set information of the specified behavioural action.\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of behavioural action.\n     *\n     * @return {Object} Entry exit set information.\n     */\n    getEntryExitSet (behaviour) {\n        return this._entryExitSet[behaviour];\n    }\n}\n","import { getSetInfo, getMergedSet, getSourceFields } from '../../helper';\n\n/**\n * This is the base class has all the common functionalities needed for all behavioural actions. Any other behavioural\n * action needs to extend this class.\n *\n * @public\n * @class GenericBehaviour\n * @module GenericBehaviour\n */\nexport default class GenericBehaviour {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n    }\n\n    /**\n     * Returns entry and exit set information. This method is called by firebolt when ```dispatchBehaviour``` is called\n     * dynamically or when any physical action is triggered on the chart.\n     *\n     * @param {Object} payload Payload information.\n     * @param {Object|Array} payload.criteria Identifiers of data interacted with.\n     *\n     * @return {Array} Entry and exit set information.\n     */\n    dispatch (payload) {\n        const criteria = payload.criteria;\n        const firebolt = this.firebolt;\n        const formalName = this.constructor.formalName();\n        const selectionSets = firebolt.getSelectionSets(formalName);\n        const {\n            model: filteredDataModel,\n            uids\n        } = this.firebolt.getAddSetFromCriteria(criteria, this.firebolt.getPropagationInf());\n        const entryExitSets = selectionSets.map((selectionSet) => {\n            this.setSelectionSet(uids, selectionSet);\n            return this.getEntryExitSet(selectionSet, filteredDataModel, payload);\n        });\n\n        return entryExitSets;\n    }\n\n    /**\n     * Updates the selection set by adding uids to the instance of {@link SelectionSet} or removing them.\n     * {@link SelectionSet} keeps the information of which rows are in the entry set and exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of row ids which got affected during interaction.\n     * @param {SelectionSet} selectionSet Instance of selection set.\n     *\n     * @return {GenericBehaviour} Instance of behaviour.\n     */\n    setSelectionSet () {\n        return this;\n    }\n\n    getEntryExitSet (selectionSet, filteredDataModel, payload) {\n        const {\n            entrySet,\n            exitSet,\n            completeSet\n        } = selectionSet.getSets();\n        const propagationInf = this.firebolt.getPropagationInf();\n        const dataModel = this.firebolt.getFullData();\n        const setConfig = {\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            dataModel,\n            filteredDataModel,\n            propagationData: propagationInf.data,\n            selectionSet\n        };\n\n        return {\n            entrySet: [getSetInfo('oldEntry', entrySet[0], setConfig),\n                getSetInfo('newEntry', entrySet[1], setConfig)],\n            exitSet: [getSetInfo('oldEntry', exitSet[0], setConfig),\n                getSetInfo('newExit', exitSet[1], setConfig)],\n            mergedEnter: getSetInfo('mergedEnter', getMergedSet(entrySet), setConfig),\n            mergedExit: getSetInfo('mergedExit', getMergedSet(exitSet), setConfig),\n            completeSet: getSetInfo('complete', completeSet, setConfig),\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            fields: getSourceFields(propagationInf, payload.criteria),\n            sourceSelectionSet: selectionSet._volatile === true\n        };\n    }\n\n    static mutates () {\n        return false;\n    }\n\n    enable () {\n        this._enabled = true;\n    }\n\n    disable () {\n        this._enabled = false;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n}\n\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class VolatileBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n                // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                    || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            selectionSet.updateExit();\n            const { entrySet } = selectionSet.getSets();\n            selectionSet.reset(getMergedSet(entrySet));\n            selectionSet.add(addSet);\n            selectionSet.update(existingAddSet);\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n    }\n}\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n","import VolatileBehaviour from './volatile';\nimport { HIGHLIGHT } from '../../enums/behaviours';\n\nexport default class HighlightBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return HIGHLIGHT;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport * as BEHAVIOURNAMES from '../../enums/behaviours';\n\n/**\n * This is the behaviour for brushing a region on the chart. It accepts a payload\n * which contains the x and y range of the data and other configuration. It will then\n * create a selection box from the range and select the points which fall within the range.\n */\nexport default class BrushBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return BEHAVIOURNAMES.BRUSH;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport { FILTER } from '../../enums/behaviours';\n\nexport default class FilterBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return FILTER;\n    }\n\n    static mutates () {\n        return true;\n    }\n}\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class PersistentBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            const propagationInf = this.firebolt.getPropagationInf();\n            // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            if (propagationInf.propagate === false) {\n                selectionSet.updateExit();\n                const { entrySet } = selectionSet.getSets();\n                selectionSet.reset(getMergedSet(entrySet));\n                selectionSet.add(addSet);\n                selectionSet.update(existingAddSet);\n            } else {\n                // existing add set\n                if (existingAddSet.length) {\n                    selectionSet.updateExit();\n                    selectionSet.remove(existingAddSet);\n                } else {\n                    selectionSet.updateEntry();\n                    selectionSet.add(addSet);\n                }\n                const { exitSet } = selectionSet.getSets();\n                const mergedExitSet = getMergedSet(exitSet);\n                const completeSetCount = selectionSet.getCompleteSet().length;\n                if (mergedExitSet.length === completeSetCount) {\n                    selectionSet.reset();\n                }\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n\n        return this;\n    }\n}\n","import PersistentBehaviour from './persistent';\nimport { SELECT } from '../../enums/behaviours';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return SELECT;\n    }\n}\n\n","import { DimensionSubtype, MeasureSubtype } from 'muze-utils';\n/**\n * Gets the drag action configuration\n * @param {VisualUnit} instance instance of visual unit\n * @param {Object} config x y positions\n * @return {Object} Payload of behaviour\n*/\n/* istanbul ignore next */ const getDragActionConfig = (sourceInfo, config, fieldsConfig) => {\n    if (!(sourceInfo.axes.x || sourceInfo.axes.y)) {\n        return {\n            criteria: null\n        };\n    }\n\n    const axes = sourceInfo.axes;\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const axisFields = sourceInfo.fields;\n    const xField = axisFields.x[0].getMembers()[0];\n    const yField = axisFields.y[0].getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n    const dimensions = {};\n    const stPos = config.startPos;\n    const endPos = config.endPos;\n\n    if (stPos.x === endPos.x && stPos.y === endPos.y) {\n        return {\n            criteria: null\n        };\n    }\n\n    const dragDim = xFieldType === MeasureSubtype.CONTINUOUS ? (yFieldType === MeasureSubtype.CONTINUOUS ?\n        ['x', 'y'] : ['y']) : ['x'];\n    const criteria = {};\n    const isXDimension = xFieldType === DimensionSubtype.CATEGORICAL;\n    const isYDimension = yFieldType === DimensionSubtype.CATEGORICAL;\n    const xRange = xAxis.constructor.type() === 'band' ? xAxis.scale().invertExtent(stPos.x, endPos.x) :\n        xAxis.invert(stPos.x, endPos.x);\n    const yRange = yAxis.constructor.type() === 'band' ? yAxis.scale().invertExtent(stPos.y, endPos.y) :\n        yAxis.invert(stPos.y, endPos.y);\n    const selectedDomains = {\n        x: stPos.x === endPos.x ? [] : (isXDimension ? xRange : xRange.sort((a, b) => a - b)),\n        y: stPos.y === endPos.y ? [] : (isYDimension ? yRange : yRange.sort((a, b) => a - b))\n    };\n    const rangeObj = {};\n\n    if (dragDim.length === 2) {\n        rangeObj[xField] = selectedDomains.x;\n        rangeObj[yField] = selectedDomains.y;\n        if (xField === yField) {\n            const xdom = selectedDomains.x;\n            const ydom = selectedDomains.y;\n            const min = xdom[0] > ydom[0] ? ydom : xdom;\n            const max = min === ydom ? xdom : ydom;\n            if (min[1] < max[0]) {\n                rangeObj[xField] = [];\n            } else {\n                rangeObj[xField] = [max[0], min[1] < max[1] ? min[1] : max[1]];\n            }\n            dimensions.x = [stPos.x, endPos.x];\n            dimensions.y = [stPos.y, endPos.y];\n        }\n    } else {\n        criteria[dragDim[0]] = selectedDomains[dragDim[0]] || [];\n\n        if (dragDim[0] === 'x') {\n            rangeObj[xField] = criteria.x;\n            if (xFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.x = (config.snap && stPos.x !== endPos.x) ? xAxis.getNearestRange(stPos.x, endPos.x) :\n                    [stPos.x, endPos.x];\n            }\n        } else {\n            rangeObj[yField] = criteria.y;\n            if (yFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.y = (config.snap && stPos.y !== endPos.y) ? yAxis.getNearestRange(stPos.y, endPos.y) :\n                    [stPos.y, endPos.y];\n            }\n        }\n    }\n\n    return {\n        criteria: rangeObj,\n        dimensions\n    };\n};\n\nexport default getDragActionConfig;\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './drag-action-config';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const attachDragEvent = (targetEl, behaviours, firebolt, touch) => {\n    let startPos = {};\n    let endPos = {};\n    let drawingInf;\n\n    const d3Drag = getD3Drag();\n    let touchStart;\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n        drawingInf = firebolt.context.getDrawingContext();\n        touchStart = new Date().getTime();\n    }).on('drag', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        if (touch && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos\n        }, firebolt.context.data().getFieldsConfig());\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }).on('end', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        const duration = new Date().getTime() - touchStart;\n\n        if (touch && duration > 100 && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos,\n            snap: true\n        }, firebolt.context.data().getFieldsConfig());\n        payload.dragEnd = true;\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }));\n};\n\n","import { getClientPoint, getEvent } from 'muze-utils';\nimport { CONSOLIDATED, FRAGMENTED } from '../../enums/constants';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} instance instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const context = firebolt.context;\n        const tooltipConf = context.config().interaction.tooltip;\n        const mode = tooltipConf.mode;\n        const pos = getClientPoint(context.getDrawingContext().svgContainer, event);\n        const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n            getAllPoints: mode === CONSOLIDATED || mode === FRAGMENTED,\n            data: args,\n            event\n        });\n        const payload = {\n            criteria: nearestPoint ? nearestPoint.id : null,\n            showInPosition: nearestPoint.showInPosition,\n            target: nearestPoint.target,\n            position: pos,\n            mode\n        };\n\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                            criteria: null\n                        }));\n                    });\n};\n\nexport default hover;\n","export const CLASSPREFIX = 'muze';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\n\n","import { getClientPoint } from 'muze-utils';\n\nexport const generatePayloadFromEvent = function (args, event, firebolt) {\n    const context = firebolt.context;\n    const pos = getClientPoint(context.getDrawingContext().svgContainer, event.touches ? event.touches[0] : event);\n    const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n        data: args,\n        event\n    });\n    return {\n        criteria: nearestPoint ? nearestPoint.id : null,\n        showInPosition: nearestPoint.showInPosition,\n        target: nearestPoint.target,\n        position: pos\n    };\n};\n","import { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport { longtouch } from './longtouch';\nimport { touchdrag } from './touch-drag';\nimport * as ACTIONNAMES from '../../enums/actions';\nimport click from './click';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click,\n    [ACTIONNAMES.LONGTOUCH]: longtouch,\n    [ACTIONNAMES.TOUCHDRAG]: touchdrag\n};\n\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt);\n};\n\nexport default drag;\n","/* global setTimeout */\nimport { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nexport const longtouch = firebolt => (targetEl, behaviours) => {\n    let event;\n    let touchEnd;\n    const dispatchBehaviour = function (args) {\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    touchEnd = false;\n    event = getEvent();\n    targetEl.on('touchstart', (args) => {\n        event = getEvent();\n        touchEnd = false;\n        setTimeout(() => {\n            if (!touchEnd) {\n                dispatchBehaviour(args);\n            } else {\n                behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                    criteria: null\n                }));\n            }\n        }, 100);\n    }).on('touchend', () => {\n        touchEnd = true;\n    });\n};\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const touchdrag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt, true);\n};\n\n","import GenericSideEffect from './generic-sideeffect';\n\nexport default GenericSideEffect;\n","import { mergeRecursive, getUniqueId } from 'muze-utils';\n\n/**\n * This is the base class of all side effects. It contains all common methods like setting configuration, disabling,\n * enabling side effect, etc. Every new side effect has to inherit this class or {@link SpawnableSideEffect} or\n * {@link SurrogateSideEffect} class. All side effects are initialized by firebolt. The instance of firebolt is\n * passed on initialization. The firebolt instance contains ```context``` which is the instance of visual unit with\n * which the firebolt is attached.\n *\n * @public\n * @class\n * @module GenericSideEffect\n */\nexport default class GenericSideEffect {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n        this._strategy = 'default';\n        this._config = {};\n        this._id = getUniqueId();\n        this._strategies = {};\n        this.config(this.constructor.defaultConfig());\n    }\n\n    /**\n     * Returns the default configuration of the side effect.\n     *\n     * @public\n     * @return {Object} Default configuration of side effect.\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the formal name of a side effect. This method must be implemented by all side effects which changes\n     * or adds any element in the visualization.\n     *\n     * @return {string} Formal name of side effect.\n     */\n    static formalName () {\n        return 'generic';\n    }\n\n    static target () {\n        return 'all';\n    }\n\n    /**\n     * Returns true if the side effects mutates the data of chart.\n     *\n     * @public\n     *\n     * @return {boolean} If the side effect mutates the data of chart.\n     */\n    static mutates () {\n        return false;\n    }\n\n    /**\n     * Sets or gets the configuration of side effect.\n     *\n     * When setter,\n     * @param {Object} config Configuration of side effect.\n     * @return {GenericSideEffect} Side effect instance.\n     *\n     * When getter,\n     * @return {Object} Side effect configuration.\n     */\n    config (...params) {\n        if (params.length) {\n            this._config = mergeRecursive(this._config, params[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    disable () {\n        this._enabled = false;\n        return this;\n    }\n\n    enable () {\n        this._enabled = true;\n        return this;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n\n    /**\n     * Applies the interaction effect on the chart. This is where the implemntation of the side effect is defined.\n     *\n     * @param {Object} selectionSet Contains the entry and exit set of data which got affected during interaction.\n     * @param {Object} selectionSet.mergedEnter Combined previous entry and new entry set.\n     * @param {DataModel} selectionSet.mergedEnter.model Instance of data model containing all rows which got\n     * affected during interaction.\n     * @param {Array} selectionSet.mergedEnter.uids Ids of all rows which were affected during interaction.\n     * @param {Object} selectionSet.mergedExit Combined previous exit and new exit set.\n     * @param {DataModel} selectionSet.mergedExit.model Instance of data model containing rows which were not affected\n     * during interaction.\n     * @param {Array} selectionSet.mergedExit.uids Ids of all rows which were not affected during interaction.\n     * @param {Object} selectionSet.entrySet Entry set information.\n     * @param {Array} selectionSet.entrySet[0].uids All row ids which got affected during previous interaction.\n     * @param {Array} selectionSet.entrySet[1].uids All row ids which got affected during current interaction.\n     * @param {Array} selectionSet.exitSet[0].uids All row ids which were not affected during previous interaction.\n     * @param {Array} selectionSet.exitSet[1].uids All row ids which were not affected during current interaction.\n     * @param {Object} payload Payload information of the behavioural action on trigger of which this side effect\n     * is applied.\n     * @param {Object} options Optional information for side effect like strategy, etc.\n     */\n    apply () {\n        return this;\n    }\n\n    /**\n     * Adds a new strategy method for this side effect. The strategy method is implemented by side effect class.\n     *\n     * @param {string} name Name of the strategy.\n     * @param {Function} fn Strategy method.\n     *\n     * @return {GenericSideEffect} Instance of side effect.\n     */\n    addStrategy (name, fn) {\n        this._strategies[name] = fn;\n        return this;\n    }\n}\n","import GenericSideEffect from './generic';\n\n/**\n * This class is inherited by all side effects which changes the look of any existing elements in the visualization.\n * For example, if a side effect wants to change the color of bar plots, then it is a surrogate side effect.\n *\n * To use this,\n * ```\n *      const SurrogateSideEffect = muze.SideEffects.standards.SurrogateSideEffect;\n *\n *      class BarColorChanger extends SurrogateSideEffect {\n *          static formalName () {\n *              return 'colorChanger';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n *\n * @module SurrogateSideEffect\n * @class\n * @extends GenericSideEffect\n */\nexport default class SurrogateSideEffect extends GenericSideEffect {\n    /**\n     * Applies or removes interaction styles from plot elements. An array of row ids needs to be passed\n     * which identifies the plot elements and applies styles to them.\n     *\n     * To apply the interaction style,\n     * ```\n     *      const entryRowIds = entrySet[0].uids;\n     *      const interactionStyle = [{\n     *          type: 'fill',\n     *          intensity: [0, 0, 15, 0] // hsla configuration\n     *      }];\n     *\n     *      this.applyInteractionStyle(entryRowIds, interactionStyle, 'brighten', true);\n     * ```\n     * @public\n     * @param {Array} set Array of row ids.\n     * @param {Array} config Style configuration.\n     * @param {Object} config[0] fill or stroke configuration.\n     * @param {string} config[0].type Type of style - fill or stroke.\n     * @param {Array} config[0].intensity hsla configuration.\n     * @param {string} interactionType Type of interaction. This is needed for storing the styles for\n     * each type of interaction in the plot elements.\n     * @param {boolean} apply Whether to apply or remove the interaction style.\n     *\n     * @return {SurrogateSideEffect} Instance of surrogate side effect.\n     */\n    applyInteractionStyle (set, config = {}, interactionType, apply) {\n        const layers = this.firebolt.context.layers();\n        layers.forEach(layer => layer.config().interactive !== false &&\n            layer.applyInteractionStyle(interactionType, set.uids, apply));\n        return this;\n    }\n}\n","import { makeElement } from 'muze-utils';\n\nimport GenericSideEffect from './generic';\n\n/**\n * Any side effect which will add any new element to the chart like drawing a rectangular box or any annotation over\n * the chart needs to inherit this class. This class has methods which returns the container where the dom elements\n * needs to be created.\n *\n * To use this,\n * ```\n *      const SpawnableSideEffect = muze.SideEffects.standards.SpawnableSideEffect;\n *\n *      class SelectionBox extends SpawnableSideEffect {\n *          static formalName () {\n *              return 'selectionBox';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n * @class\n * @extends GenericSideEffect\n * @module SpawnableSideEffect\n */\nexport default class SpawnableSideEffect extends GenericSideEffect {\n    /**\n     * Creates a html or svg element in the container.\n     *\n     * @public\n     * @param {SVGElement|HTMLElement} container Container where the dom element will be rendered.\n     * @param {string} elemType Type of dom element.\n     * @param {Array} data Array of objects with which the dom elements will be binded.\n     * @param {string} className class name of the element.\n     *\n     * @return {Selection} D3 Selection of the element.\n     */\n    createElement (container, elemType, data, className, callbacks) {\n        return makeElement(container, elemType, data, className, callbacks);\n    }\n\n    /**\n     * Returns the drawing information for side effect like svg container, dimensions of the visual unit.\n     *\n     * @public\n     * @return {Object} Drawing information for side effect.\n     * ```\n     *      sideEffectGroup: // svg container where the side effect needs to be appended.\n     *      svgContainer: // svg container of the {@link VisualUnit}.\n     *      htmlContainer: // html div container of the {@link VisualUnit}.\n     *      width: // Width of the {@link VisualUnit}\n     *      height: // Height of the {@link VisualUnit}\n     * ```\n     */\n    drawingContext (...drawingContext) {\n        if (drawingContext.length) {\n            this._drawingContext = drawingContext[0];\n            return this;\n        }\n        return this._drawingContext();\n    }\n\n    show () {\n        return this;\n    }\n\n    hide () {\n        return this;\n    }\n}\n","import { selectElement } from 'muze-utils';\n\nexport const getBoxDimensionsFromPayload = (payload, axes, axisFields) => {\n    let x1;\n    let x2;\n    let y1;\n    let y2;\n    let xRange;\n    let yRange;\n    let direction;\n    const criteria = payload.criteria;\n    const dimensions = payload.dimensions || {};\n    const xDim = dimensions.x;\n    const yDim = dimensions.y;\n\n    if (criteria === null) {\n        return null;\n    }\n\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const xLinear = xAxis.constructor.type() === 'linear';\n    const yLinear = yAxis.constructor.type() === 'linear';\n    const xField = `${axisFields.x[0]}`;\n    const yField = `${axisFields.y[0]}`;\n    const xCriteria = criteria[xField];\n    const yCriteria = criteria[yField];\n\n    if (xCriteria && xCriteria[0] instanceof Array) {\n        xRange = xCriteria[0];\n        yRange = xCriteria[1];\n    } else {\n        xRange = xCriteria || [];\n        yRange = yCriteria || [];\n    }\n    direction = xCriteria && yCriteria ? 'both' : (xCriteria ? 'vertical' : 'horizontal');\n    if (xRange && xRange.length) {\n        if ((yAxis.constructor.type() === 'band' && xLinear)) {\n            x1 = x2 = undefined;\n            direction = 'horizontal';\n        } else {\n            const domain = xAxis.domain();\n            const bandScale = xAxis.constructor.type() === 'band';\n            let x1Val;\n            let x2Val;\n            if (bandScale) {\n                let x1DomainIndex = domain.indexOf(xRange[0]);\n                let x2DomainIndex = domain.indexOf(xRange[xRange.length - 1]);\n                [x1DomainIndex, x2DomainIndex] = [x1DomainIndex, x2DomainIndex].sort((a, b) => a - b);\n                x1Val = domain[x1DomainIndex];\n                x2Val = domain[x2DomainIndex];\n            } else {\n                x1Val = xRange[0];\n                x2Val = xRange[xRange.length - 1];\n            }\n            x1 = xAxis.getScaleValue(x1Val);\n            x2 = xAxis.getScaleValue(x2Val);\n            x2 += bandScale ? xAxis.getUnitWidth() : 0;\n        }\n    } else {\n        x1 = x2 = undefined;\n    }\n    if (yRange && yRange.length) {\n        if ((xAxis.constructor.type() === 'band' && yLinear)) {\n            y1 = y2 = undefined;\n            direction = 'vertical';\n        } else {\n            const domain = yAxis.domain();\n            const bandScale = yAxis.constructor.type() === 'band';\n            let y1Val;\n            let y2Val;\n            if (bandScale) {\n                let y1DomainIndex = domain.indexOf(yRange[0]);\n                let y2DomainIndex = domain.indexOf(yRange[yRange.length - 1]);\n                [y1DomainIndex, y2DomainIndex] = [y1DomainIndex, y2DomainIndex].sort(((a, b) => b - a));\n                y1Val = domain[y1DomainIndex];\n                y2Val = domain[y2DomainIndex];\n            } else {\n                y1Val = yRange[0];\n                y2Val = yRange[yRange.length - 1];\n            }\n            y1 = yAxis.getScaleValue(y1Val);\n            y2 = yAxis.getScaleValue(y2Val);\n            y2 += yAxis.constructor.type() === 'band' ? yAxis.getUnitWidth() : 0;\n        }\n    } else {\n        y1 = y2 = undefined;\n    }\n\n    if ((yLinear && xLinear) || !payload.dragEnd) {\n        if (xDim) {\n            [x1, x2] = xDim;\n        }\n        if (yDim) {\n            [y1, y2] = yDim;\n        }\n    }\n\n    return {\n        dimension: {\n            x1,\n            x2,\n            y1,\n            y2\n        },\n        direction\n    };\n};\n\nexport const changeVisibility = (context, sideEffectGroup, visible) => {\n    const config = context.config();\n    const className = config.defClassName;\n    const classPrefix = config.classPrefix;\n    selectElement(sideEffectGroup).selectAll(`.${classPrefix}-${className}`)\n                    .style('display', visible ? 'block' : 'none');\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    isValidValue\n} from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport './styles.scss';\nimport SpawnableSideEffect from '../spawnable';\nimport { selectionBoxDrag } from '../../actions/physical/selection-box-drag';\nimport { getBoxDimensionsFromPayload, changeVisibility } from './helper';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\nclass SelectionBox extends SpawnableSideEffect {\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            defClassName: 'selection-box-group',\n            className: '',\n            classPrefix: CLASSPREFIX,\n            box: {\n                defClassName: 'selection-box',\n                className: ''\n            },\n            transition: {\n                duration: 200\n            }\n        };\n    }\n\n    static formalName () {\n        return 'selectionBox';\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     * @param {Object} dimension Dimensions of the selection box.\n     * @param {number} dimension.x1 Starting x position\n     * @param {number} dimension.x2 Ending x position\n     * @param {number} dimension.y1 Starting y position\n     * @param {number} dimension.y2 Ending y position\n     * @param {Object} conf Configuration needed to draw the selection box\n     * @param {number} unitWidth Width of the visual unit.\n     * @param {number} unitHeight Height of the visual unit.\n     */\n    apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const config = this._config;\n        const boxConf = config.box;\n        const firebolt = this.firebolt;\n        const drawingInf = this.drawingContext();\n        const mountPoint = drawingInf.sideEffectGroup;\n        const unitWidth = drawingInf.width;\n        const unitHeight = drawingInf.height;\n        const classPrefix = config.classPrefix;\n        const selectionGroupClassName = config.defClassName;\n\n        if (payload.criteria === null) {\n            this.hide(drawingInf);\n            return this;\n        }\n\n        const sourceInf = firebolt.context.getSourceInfo();\n        const { dimension, direction } = getBoxDimensionsFromPayload(payload, sourceInf.axes,\n            sourceInf.fields);\n        const transition = payload.dragEnd && config.transition;\n\n        if (direction === 'both' || direction === 'vertical') {\n            x = Math.min(dimension.x1, dimension.x2);\n            width = Math.abs(dimension.x2 - dimension.x1);\n        } else {\n            x = 0;\n            width = unitWidth;\n        }\n        if (direction === 'both' || direction === 'horizontal') {\n            y = Math.min(dimension.y1, dimension.y2);\n            height = Math.abs(dimension.y2 - dimension.y1);\n        } else {\n            height = unitHeight;\n            y = 0;\n        }\n        this.show(drawingInf);\n        // Create the data array for drawing the rectangle\n        const points = [\n            {\n                x,\n                y,\n                width,\n                height\n            }\n        ];\n        // Create the container group for selection box.\n        const selectionGroup = makeElement(selectElement(mountPoint), 'g', [1],\n            `.${classPrefix}-${selectionGroupClassName}`);\n        const sideEffect = this;\n        const selection = selectionGroup.selectAll('rect').data(points);\n        const selectionBox = selection.enter().append('rect')\n                        .each(function () {\n                            selectionBoxDrag(firebolt)(selectElement(this), ['brush'], sideEffect);\n                        })\n                        .merge(selection)\n                        .each(function (attrs) {\n                            let element = selectElement(this);\n                            transition && (element = element.transition().duration(transition.duration));\n                            for (const key in attrs) {\n                                if ({}.hasOwnProperty.call(attrs, key)) {\n                                    isValidValue(attrs[key]) && element.attr(key, attrs[key]);\n                                }\n                            }\n                        });\n        // Get the qualified class name for selection box rectangle\n        const boxClassName = getQualifiedClassName(boxConf.defClassName, this._id, classPrefix);\n        selectionBox.classed(boxClassName.join(' '), true);\n        selectionBox.classed(boxConf.className, true);\n\n        return this;\n    }\n\n    hide (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, false);\n    }\n\n    show (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, true);\n    }\n}\n\nexport default SelectionBox;\n\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './helpers/drag-action-config';\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let subject;\n    let drawingInf;\n    const context = firebolt.context;\n    const onDrag = (payload) => {\n        behaviours.forEach(action => firebolt.dispatchBehaviour(action, payload));\n    };\n    const d3Drag = getD3Drag();\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        drawingInf = context.getDrawingContext();\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        subject.x += event.dx;\n        subject.y += event.dy;\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            }, context.data().getFieldsConfig());\n            onDrag(payload);\n        }\n    }).on('end', () => {\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                },\n                snap: true\n            }, context.data().getFieldsConfig());\n            payload.dragEnd = true;\n            onDrag(payload);\n        }\n    }));\n};\n","export const CLASSPREFIX = 'muze';\nexport const ARROW_RIGHT = 'right';\nexport const ARROW_TOP = 'top';\nexport const ARROW_BOTTOM = 'bottom';\nexport const ARROW_LEFT = 'left';\nexport const TOOLTIP_LEFT = 'left';\nexport const TOOLTIP_RIGHT = 'right';\nexport const TOOLTIP_BOTTOM = 'bottom';\nexport const TOOLTIP_TOP = 'top';\nexport const INITIAL_STYLE = {\n    position: 'absolute',\n    width: 0,\n    height: 0\n};\n","import { CLASSPREFIX } from './constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'tooltip-box',\n    connectorClassName: 'tooltip-connectors',\n    className: '',\n    row: {\n        margin: 0\n    },\n    content: {\n        spacing: 5,\n        iconContainerSize: 10,\n        iconScale: 1,\n        iconShape: 'circle',\n        iconColor: '#ff0000',\n        rowMargin: '0px',\n        margin: 10,\n        separator: ':',\n        className: 'tooltip-content-container',\n        parentClassName: 'tooltip-content-parent-container'\n    },\n    arrow: {\n        size: 10,\n        disabled: false,\n        defClassName: 'tooltip-arrow',\n        className: '',\n        color: 'rgba(195,195,195,0.85)'\n    }\n};\n","import { getQualifiedClassName } from 'muze-utils';\nimport { TOOLTIP_LEFT, TOOLTIP_RIGHT, ARROW_RIGHT, ARROW_LEFT, TOOLTIP_BOTTOM } from './constants';\n\nexport const getArrowPos = (orient, dim, measurement, config) => {\n    let arrowPos;\n    const { x, y, boxHeight, boxWidth } = measurement;\n    const arrowDisabled = config.arrow.disabled;\n    const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n\n    if (orient === ARROW_LEFT || orient === ARROW_RIGHT) {\n        let start = 0;\n        let diff = boxHeight / 2;\n        const plotBottom = dim.y + dim.height;\n        const boxBottom = y + boxHeight;\n\n        if (dim.y > y) {\n            start = dim.y - y;\n            diff = (plotBottom >= boxBottom ? (boxBottom - dim.y) : dim.height) / 2;\n        } else if (boxBottom > plotBottom) {\n            diff = Math.abs(y - (dim.y + dim.height)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    } else {\n        let start = 0;\n        let diff = boxWidth / 2;\n        const plotRight = dim.x + dim.width;\n        const boxRight = x + boxWidth;\n\n        if (dim.x > x) {\n            start = dim.x - x;\n            diff = (plotRight >= boxRight ? (boxRight - dim.x) : dim.width) / 2;\n        } else if (boxRight > plotRight) {\n            diff = Math.abs(x - (dim.x + dim.width)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    }\n    return arrowPos;\n};\n\n/**\n * Places the arrow in the specified arrow position. It also applies appropriate arrow\n * class name to the arrow element.\n * @param {string} position Left, bottom or right position of the arrow;\n * @param {number} arrowPos position of arrow in pixels\n * @return {Tooltip} Instance of tooltip.\n */\nexport const placeArrow = (context, position, arrowPos) => {\n    const tooltipArrow = context._tooltipArrow;\n    const tooltipBackground = context._tooltipBackground;\n    const config = context._config;\n    const classPrefix = config.classPrefix;\n    const arrowConf = config.arrow;\n    const className = getQualifiedClassName(arrowConf.defClassName, context._id, config.classPrefix);\n\n    tooltipArrow.style('display', 'block');\n    tooltipArrow.attr('class', `${className.join(' ')}`);\n    if (position === TOOLTIP_LEFT || position === TOOLTIP_RIGHT) {\n        tooltipArrow.style('top', `${arrowPos}px`);\n        tooltipArrow.style('left', '');\n        tooltipBackground.style('top', `${arrowPos}px`);\n        tooltipBackground.style('left', '');\n    } else {\n        position === TOOLTIP_BOTTOM ? tooltipArrow.style('top', '100%') : tooltipArrow.style('top',\n            `-${arrowConf.size}px`);\n        tooltipArrow.style('left', `${arrowPos}px`);\n        position === TOOLTIP_BOTTOM ? tooltipBackground.style('top', '100%') : tooltipBackground.style('top',\n            `-${arrowConf.size + 3}px`);\n        tooltipBackground.style('left', `${arrowPos}px`);\n    }\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow`, true);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${context._arrowOrientation}`, false);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${position}`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${context._arrowOrientation}`, false);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${position}`, true);\n    return this;\n};\n\nexport const reorderContainers = (parentContainer, className) => {\n    parentContainer.selectAll(className).sort((a, b) => a - b);\n};\n","import {\n    getClosestIndexOf,\n    DateTimeFormatter,\n    DimensionSubtype,\n    MeasureSubtype,\n    FieldType\n} from 'muze-utils';\n\nconst timeFormats = {\n    millisecond: '%A, %b %e, %H:%M:%S.%L',\n    second: '%A, %b %e, %H:%M:%S',\n    minute: '%A, %b %e, %H:%M',\n    hour: '%A, %b %e, %H:%M',\n    day: '%A, %b %e, %Y',\n    month: '%B %Y',\n    year: '%Y'\n};\nconst timeDurations = [\n    ['millisecond', 'second', 'minute', 'hour', 'day', 'month', 'year'],\n    [1, 1000, 60000, 3600000, 86400000, 2592000000, 31536000000]\n];\nconst getNearestInterval = (interval) => {\n    const index = getClosestIndexOf(timeDurations[1], interval);\n    return timeDurations[0][index];\n};\nconst defaultTooltipFormatters = (type, formatter) => {\n    const formatters = {\n        [DimensionSubtype.TEMPORAL]: (value, interval) => {\n            const nearestInterval = getNearestInterval(interval);\n            return DateTimeFormatter.formatAs(value, timeFormats[nearestInterval]);\n        },\n        [MeasureSubtype.CONTINUOUS]: value => formatter(value ? value.toFixed(2) : value),\n        [DimensionSubtype.CATEGORICAL]: value => value\n    };\n    return formatters[type];\n};\n\nconst getTabularData = (data, schema, fieldspace, timeDiffs) => {\n    const rows = [];\n    rows.push(schema.map(d => d.name));\n    data.forEach((d) => {\n        const row = [];\n        schema.forEach((fieldObj, i) => {\n            const interval = fieldObj.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[fieldObj.name] : 0;\n            const numberFormat = fieldObj.type === FieldType.MEASURE && fieldspace.fields[i].numberFormat();\n            const formatterFn = defaultTooltipFormatters(fieldObj.subtype || fieldObj.type, numberFormat);\n            const value = formatterFn(d[i], interval);\n            row.push(value);\n        });\n        rows.push(row);\n    });\n    return rows;\n};\n\nexport const buildTooltipData = (dataModel, config = {}, context) => {\n    let fieldValues = [];\n    const dataObj = dataModel.getData();\n    const data = dataObj.data;\n    const schema = dataObj.schema;\n    const formatters = config.formatters;\n    const separator = config.separator;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const fieldspace = dataModel.getFieldspace();\n    const dimensionMeasureMap = context.dimensionMeasureMap;\n    const axes = context.axes;\n    const detailFields = context.detailFields || [];\n    const dimensions = schema.filter(d => d.type === FieldType.DIMENSION);\n    const measures = schema.filter(d => d.type === FieldType.MEASURE);\n    // const containsRetinalField = schema.find(d => d.name in dimensionMeasureMap);\n    const containsDetailField = schema.find(d => detailFields.indexOf(d.name) !== -1);\n    const timeDiffs = context.timeDiffs;\n    const dataLen = data.length;\n    const getRowContent = (field, type) => {\n        let value;\n        let formattedValue;\n        let measureIndex;\n        const values = [];\n        const index = fieldsConfig[field].index;\n        const interval = fieldsConfig[field].def.subtype === DimensionSubtype.TEMPORAL ?\n                timeDiffs[field] : 0;\n        const formatterFn = (formatters && formatters[field]) || defaultTooltipFormatters(type, val => val);\n\n        if (value !== null) {\n            let uniqueVals = type === MeasureSubtype.CONTINUOUS ? data.map(d => d[index]) :\n                [...new Set(data.map(d => d[index]))];\n            uniqueVals = uniqueVals.filter(d => d !== '');\n            const colorAxis = axes.color[0];\n            const shapeAxis = axes.shape[0];\n            const sizeAxis = axes.size[0];\n            const isRetinalField = (colorAxis || shapeAxis || sizeAxis) && dataLen > 1 &&\n                    type !== MeasureSubtype.CONTINUOUS;\n\n            uniqueVals.forEach((val, i) => {\n                let key;\n                const associatedMeasures = dimensionMeasureMap[field];\n\n                if (associatedMeasures && associatedMeasures.length && dataLen > 1) {\n                    key = val;\n                    let icon = {\n                        value: ''\n                    };\n\n                    if (isRetinalField) {\n                        icon = {\n                            type: 'icon',\n                            color: colorAxis.getColor(val),\n                            shape: shapeAxis.getShape(val),\n                            size: sizeAxis.getSize(val) * config.iconScale\n                        };\n                    }\n                    if (associatedMeasures.length > 1) {\n                        values.push([icon, `${key}`]);\n                        associatedMeasures.forEach((measure) => {\n                            measureIndex = fieldsConfig[measure].index;\n                            value = data[i][measureIndex];\n                            formattedValue = defaultTooltipFormatters(MeasureSubtype.CONTINUOUS,\n                                fieldspace.fields[measureIndex].numberFormat())(value, interval);\n                            values.push([{\n                                value: `${measure}${separator}`,\n                                style: {\n                                    'margin-left': `${config.margin}px}`\n                                },\n                                className: `${config.classPrefix}-tooltip-key`\n                            }, {\n                                value: `${formattedValue}`,\n                                className: `${config.classPrefix}-tooltip-value`\n                            }]);\n                        });\n                    } else {\n                        measureIndex = fieldsConfig[associatedMeasures[0]].index;\n                        value = data[i][measureIndex];\n                        formattedValue = defaultTooltipFormatters(MeasureSubtype.CONTINUOUS,\n                            fieldspace.fields[measureIndex].numberFormat())(value, interval);\n                        values.push([icon, {\n                            value: `${key}${separator}`,\n                            className: `${config.classPrefix}-tooltip-key`\n                        }, {\n                            value: `${formattedValue}`,\n                            className: `${config.classPrefix}-tooltip-value`\n                        }]);\n                    }\n                } else {\n                    key = field;\n                    value = val;\n                    formattedValue = formatterFn(value, interval);\n                    values.push([{\n                        value: `${key}${separator}`,\n                        className: `${config.classPrefix}-tooltip-key`\n                    }, {\n                        value: `${formattedValue}`,\n                        className: `${config.classPrefix}-tooltip-value`\n                    }]);\n                }\n            });\n        }\n        return values;\n    };\n    let displayFormat = 'keyValue';\n\n    if (dataLen > 1 && containsDetailField) {\n        fieldValues = getTabularData(data, schema, fieldspace, timeDiffs);\n        displayFormat = 'table';\n    } else {\n        dimensions.forEach((item) => {\n            const type = item.subtype ? item.subtype : item.type;\n            fieldValues = [...fieldValues, ...getRowContent(item.name, type)];\n        });\n\n        const allMeasures = [...new Set(...Object.values(dimensionMeasureMap))];\n        const filteredMeasures = dataLen > 1 ? measures.filter(d => allMeasures.indexOf(d.name) === -1)\n            : measures;\n\n        filteredMeasures.forEach((item) => {\n            const type = item.subtype ? item.subtype : item.type;\n            fieldValues = [...fieldValues, ...getRowContent(item.name, type)];\n        });\n    }\n\n    return {\n        content: fieldValues,\n        displayFormat\n    };\n};\n\n/**\n * This contains the strategy methods for showing tooltip in the chart.\n * @param {VisualUnit} context Attached instance.\n */\nexport const strategy = {\n    keyValue: (data, config, context) => {\n        const values = buildTooltipData(data, config, context);\n        return values;\n    }\n};\n\nexport const DEFAULT_STRATEGY = 'keyValue';\n","import {\n    selectElement,\n    mergeRecursive,\n    makeElement,\n    setAttrs,\n    setStyles,\n    getSymbol,\n    isSimpleObject\n} from 'muze-utils';\nimport { DEFAULT_STRATEGY, strategy } from './strategy';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class is used to manage the content of tooltip.\n */\nexport default class Content {\n    /**\n     * Creates an instance of content.\n     */\n    constructor () {\n        this._model = null;\n        this._strategy = DEFAULT_STRATEGY;\n        this._formatter = null;\n        this._config = this.constructor.defaultConfig();\n    }\n   /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        const config = defaultConfig.content;\n        config.classPrefix = defaultConfig.classPrefix;\n        return config;\n    }\n\n    config (...c) {\n        if (c.length > 0) {\n            this._config = mergeRecursive(this._config, c[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Update model. The format contains presentation strategy which determines how to show the content.\n     * If no strategy is mentioned then default is to show key value pair\n    */\n    update (item) {\n        this._model = item.model;\n        this._strategy = item.strategy !== undefined ? item.strategy : DEFAULT_STRATEGY;\n        this._formatter = item.formatter;\n        return this;\n    }\n\n    context (ctx) {\n        this._context = ctx;\n        return this;\n    }\n\n    render (mount) {\n        let data;\n        const config = this._config;\n        const iconContainerSize = config.iconContainerSize;\n        const formatter = this._formatter;\n        const rowMargin = config.rowMargin;\n        const model = this._model;\n\n        this._mount = mount;\n        if (model instanceof Array) {\n            data = model;\n        } else {\n            data = formatter instanceof Function ? formatter(this._model, this._context) :\n                strategy[this._strategy](this._model, this.config(), this._context);\n        }\n\n        if (data instanceof Function) {\n            mount.html(data());\n        } else {\n            let content = data;\n            let displayFormat = 'default';\n\n            if (isSimpleObject(data)) {\n                content = data.content;\n                displayFormat = data.displayFormat;\n            }\n\n            const body = makeElement(mount, 'div', [displayFormat], `${config.classPrefix}-tooltip-content`, {},\n                d => d);\n\n            if (displayFormat === 'table') {\n                const table = makeElement(body, 'table', [1], `${config.classPrefix}-tooltip-table`);\n                const tbody = makeElement(table, 'tbody', [1], `${config.classPrefix}-tooltip-table-tbody`);\n                const rows = makeElement(tbody, 'tr', content, `${config.classPrefix}-tooltip-table-row`);\n                rows.each(function (d, i) {\n                    selectElement(this).classed(`${config.classPrefix}-tooltip-table-row-${i}`, true);\n                });\n                const cells = makeElement(rows, 'td', d => d, `${config.classPrefix}-tooltip-table-cell`);\n                cells.each(function (d) {\n                    selectElement(this).html(d);\n                });\n            } else {\n                const rows = makeElement(body, 'div', content, `${config.classPrefix}-tooltip-row`);\n                const cells = makeElement(rows, 'span', d => d, `${config.classPrefix}-tooltip-content`);\n                cells.attr('class', `${config.classPrefix}-tooltip-content`);\n                setStyles(rows, {\n                    margin: rowMargin\n                });\n                setStyles(cells, {\n                    display: 'inline-block',\n                    'margin-right': `${config.spacing}px`\n                });\n\n                cells.each(function (d) {\n                    const el = selectElement(this);\n                    el.html('');\n                    if (d instanceof Object) {\n                        if (d.type === 'icon') {\n                            const svg = makeElement(el, 'svg', [1]);\n                            const path = makeElement(svg, 'path', [1]);\n                            const shape = d.shape instanceof Function ? d.shape : getSymbol(d.shape);\n\n                            setAttrs(svg, {\n                                x: 0,\n                                y: 0,\n                                width: iconContainerSize,\n                                height: iconContainerSize\n                            });\n                            setAttrs(path, {\n                                d: shape.size(d.size)(),\n                                transform: `translate(${iconContainerSize / 2}, ${iconContainerSize / 2})`\n                            });\n                            setStyles(path, {\n                                fill: d.color\n                            });\n                            setStyles(svg, {\n                                width: `${iconContainerSize}px`,\n                                height: `${iconContainerSize}px`\n                            });\n                        } else {\n                            el.html(d.value);\n                            d.className && el.classed(d.className, true);\n                            setStyles(el, d.style);\n                        }\n                    } else {\n                        el.html(d);\n                    }\n                });\n            }\n        }\n        return this;\n    }\n\n    clear () {\n        this._model = null;\n        return this;\n    }\n}\n","import {\n    mergeRecursive,\n    getQualifiedClassName,\n    getUniqueId,\n    selectElement,\n    setStyles,\n    makeElement\n} from 'muze-utils';\nimport { ARROW_BOTTOM, ARROW_LEFT, ARROW_RIGHT, TOOLTIP_LEFT, TOOLTIP_RIGHT, TOOLTIP_BOTTOM, TOOLTIP_TOP,\n    INITIAL_STYLE } from './constants';\nimport { defaultConfig } from './default-config';\nimport { getArrowPos, placeArrow, reorderContainers } from './helper';\nimport './styles.scss';\nimport Content from './content';\n\n/**\n * This component is responsible for creating a tooltip element. It appends the tooltip\n * in the body element.\n * @class Tooltip\n */\nexport default class Tooltip {\n    /**\n     * Initializes the tooltip with the container element and configuration\n     * @param {HTMLElement} container container where the tooltip will be mounted.\n     * @param {string} className Class name of the tooltip.\n     */\n    constructor (htmlContainer, svgContainer) {\n        let connectorContainer = svgContainer;\n        this._id = getUniqueId();\n        this._config = {};\n        this.config({});\n        const tooltipConf = this._config;\n        const classPrefix = tooltipConf.classPrefix;\n        const contentClass = tooltipConf.content.parentClassName;\n        const container = makeElement(htmlContainer, 'div', [1], `${classPrefix}-tooltip-container`);\n        this._container = container;\n        this._tooltipContainer = container.append('div').style('position', 'absolute');\n        this._contentContainer = this._tooltipContainer.append('div').attr('class', `${classPrefix}-${contentClass}`);\n        this._tooltipBackground = this._tooltipContainer.append('div').style('position', 'relative');\n        this._tooltipArrow = this._tooltipContainer.append('div');\n\n        if (!svgContainer) {\n            connectorContainer = htmlContainer.append('svg').style('pointer-events', 'none');\n        }\n        this._contents = {};\n        this._tooltipConnectorContainer = selectElement(connectorContainer)\n            .append('g')\n            .attr('class', `${tooltipConf.classPrefix}-${tooltipConf.connectorClassName}`);\n        const id = this._id;\n        const defClassName = tooltipConf.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, id, tooltipConf.classPrefix);\n\n        setStyles(this._tooltipArrow, INITIAL_STYLE);\n        setStyles(this._tooltipBackground, INITIAL_STYLE);\n        this.addClass(qualifiedClassName.join(' '));\n        this.addClass(tooltipConf.className);\n        this.hide();\n    }\n\n    /**\n     * Sets the configuration of tooltip.\n     * @param {Object} config Configuration of tooltip\n     * @return {Tooltip} Instance of tooltip\n     */\n    config (...config) {\n        if (config.length > 0) {\n            const defConf = mergeRecursive({}, this.constructor.defaultConfig());\n            this._config = mergeRecursive(defConf, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n    /**\n     * Sets the class name of tooltip\n     * @param {string} className tooltip class name\n     * @return {Tooltip} Instance of tooltip.\n     */\n    addClass (className) {\n        this._tooltipContainer.classed(className, true);\n        return this;\n    }\n\n    context (...ctx) {\n        if (ctx.length) {\n            this._context = ctx[0];\n            return this;\n        }\n        return this._context;\n    }\n\n    content (name, data, contentConfig = {}) {\n        const config = this.config();\n        const { classPrefix } = config;\n        const contentClass = config.content.className;\n        const formatter = config.formatter;\n        const className = contentConfig.className || `${classPrefix}-${contentClass}-${name}`;\n        const content = this._contents[name] = this._contents[name] || new Content();\n        const container = makeElement(this._contentContainer, 'div', [contentConfig.order], className);\n        container.attr('class', `${classPrefix}-${contentClass} ${className}`);\n        reorderContainers(this._contentContainer, `.${classPrefix}-${contentClass}`);\n        const contentConf = config.content;\n        contentConfig.classPrefix = this._config.classPrefix;\n        content.config(contentConf);\n\n        if (data === null) {\n            content.clear();\n            container.remove();\n            delete this._contents[name];\n        } else {\n            content.update({\n                model: data,\n                formatter: contentConfig.formatter || formatter\n            });\n            content.context(this._context);\n            content.render(container);\n        }\n\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n        }\n        return this;\n    }\n\n    getContents () {\n        return Object.values(this._contents);\n    }\n\n    /**\n     * Positions the tooltip at the given x and y position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Tooltip} Instance of tooltip.\n     */\n    position (x, y, conf = {}) {\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n            return this;\n        }\n        this.show();\n        const target = this._target;\n        const repositionArrow = conf.repositionArrow;\n\n        if (target && repositionArrow) {\n            const node = this._tooltipContainer.node();\n            const config = this._config;\n            const arrowDisabled = config.arrow.disabled;\n            const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n            const arrowOrient = this._arrowOrientation;\n            const outsidePlot = arrowOrient === ARROW_LEFT || arrowOrient === ARROW_RIGHT ?\n                (y + node.offsetHeight - arrowWidth) < target.y || y > (target.y + target.height) :\n                (x + node.offsetWidth - arrowWidth) < target.x || x > (target.x + target.width);\n\n            if (!arrowDisabled) {\n                if (outsidePlot) {\n                    let path;\n                    this._tooltipArrow.style('display', 'none');\n                    this._tooltipBackground.style('display', 'none');\n                    this._tooltipConnectorContainer.style('display', 'block');\n                    const connector = this._tooltipConnectorContainer.selectAll('path').data([1]);\n                    const enter = connector.enter().append('path');\n                    if (arrowOrient === ARROW_LEFT) {\n                        path = `M ${x} ${y + node.offsetHeight / 2} L ${target.x + target.width}`\n                            + ` ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_RIGHT) {\n                        path = `M ${x + node.offsetWidth} ${y + node.offsetHeight / 2}`\n                                + ` L ${target.x} ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_BOTTOM) {\n                        path = `M ${x + node.offsetWidth / 2} ${y + node.offsetHeight}`\n                            + ` L ${target.x + target.width / 2} ${target.y}`;\n                    }\n                    enter.merge(connector).attr('d', path).style('display', 'block');\n                } else {\n                    const arrowPos = getArrowPos(arrowOrient, target, {\n                        x,\n                        y,\n                        boxHeight: node.offsetHeight,\n                        boxWidth: node.offsetWidth\n                    }, this._config);\n\n                    placeArrow(this, this._arrowOrientation, arrowPos);\n                    this._tooltipConnectorContainer.style('display', 'none');\n                }\n            }\n        }\n\n        const offset = this._offset || {\n            x: 0,\n            y: 0\n        };\n        this._tooltipContainer.style('left', `${offset.x + x}px`).style('top',\n            `${offset.y + y}px`);\n\n        return this;\n    }\n\n    /**\n     * Positions the tooltip relative to a rectangular box. It takes care of tooltip overflowing the\n     * boundaries.\n     * @param {Object} dim Dimensions of the plot.\n     */\n    positionRelativeTo (dim, tooltipConf = {}) {\n        let obj;\n        let orientation = tooltipConf.orientation;\n        this.show();\n        if (!dim) {\n            this.hide();\n            return this;\n        }\n\n        const extent = this._extent;\n        const node = this._tooltipContainer.node();\n\n        this._tooltipContainer.style('top', '0px')\n                        .style('left', '0px');\n        const offsetWidth = node.offsetWidth + 2;\n        const offsetHeight = node.offsetHeight + 2;\n        const config = this._config;\n        const offset = this._offset;\n        const arrowDisabled = config.arrow.disabled;\n        const arrowSize = arrowDisabled ? 0 : config.arrow.size;\n        const draw = tooltipConf.draw !== undefined ? tooltipConf.draw : true;\n        const topSpace = dim.y;\n        // When there is no space in right\n        const dimX = dim.x + dim.width + offset.x;\n        const rightSpace = extent.width - dimX;\n        const leftSpace = dim.x + offset.x - extent.x;\n        const positionTop = topSpace > (offsetHeight + arrowSize);\n        const positionRight = rightSpace >= offsetWidth + arrowSize;\n        const positionLeft = leftSpace >= offsetWidth + arrowSize;\n\n        const positionHorizontal = () => {\n            let position;\n            let x = dim.x + dim.width;\n            let y = dim.y;\n\n            if (positionRight) {\n                position = TOOLTIP_LEFT;\n                x += arrowSize;\n            } else if (positionLeft) {\n                x = dim.x - offsetWidth;\n                position = TOOLTIP_RIGHT;\n                x -= arrowSize;\n            } else {\n                position = 'left';\n                x += arrowSize;\n            }\n            if (dim.height < offsetHeight) {\n                y = Math.max(0, dim.y + dim.height / 2 - offsetHeight / 2);\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        const positionVertical = () => {\n            let position;\n            let y;\n            // Position tooltip at the center of plot\n            let x = dim.x - offsetWidth / 2 + dim.width / 2;\n\n            // Overflows to the right\n            if ((extent.width - (dim.x + offset.x)) < offsetWidth) {\n                x = extent.width - offsetWidth - offset.x;\n            } else if ((x + offset.x) < extent.x) { // Overflows to the left\n                x = extent.x;\n            }\n\n            if (positionTop) {\n                y = dim.y - offsetHeight - arrowSize;\n                position = TOOLTIP_BOTTOM;\n            } else {\n                y = dim.y + dim.height + arrowSize;\n                position = TOOLTIP_TOP;\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        this._target = dim;\n        if (!orientation) {\n            if (positionTop) {\n                orientation = 'vertical';\n            } else if (positionRight || positionLeft) {\n                orientation = 'horizontal';\n            } else {\n                orientation = 'vertical';\n            }\n        }\n\n        if (orientation === 'horizontal') {\n            obj = positionHorizontal();\n        } else if (orientation === 'vertical') {\n            obj = positionVertical();\n        }\n\n        this._position = {\n            x: obj.x,\n            y: obj.y\n        };\n\n        this._arrowPos = obj.arrowPos;\n        if (!arrowDisabled) {\n            placeArrow(this, obj.position, obj.arrowPos);\n        } else {\n            this._tooltipArrow.style('display', 'none');\n            this._tooltipBackground.style('display', 'none');\n        }\n        this._arrowOrientation = obj.position;\n        draw && this.position(obj.x, obj.y);\n        return this;\n    }\n\n    /**\n     * Hides the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    hide () {\n        this._tooltipContainer.style('display', 'none');\n        this._tooltipConnectorContainer.style('display', 'none');\n        return this;\n    }\n\n    /**\n     * Shows the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    show () {\n        this._tooltipContainer.style('display', 'block');\n        return this;\n    }\n\n    extent (extent) {\n        this._extent = extent;\n        return this;\n    }\n\n    offset (offset) {\n        this._offset = offset;\n        return this;\n    }\n\n    remove () {\n        this._tooltipContainer.remove();\n        this._tooltipBackground.remove();\n        this._tooltipConnectorContainer.remove();\n        return this;\n    }\n}\n","import { FieldType } from 'muze-utils';\n\nexport const strategies = {\n    showSelectedItems: (dm) => {\n        const dataObj = dm.getData();\n        const measures = dataObj.schema.filter(d => d.type === FieldType.MEASURE);\n        const aggregatedModel = dm.groupBy([''], measures.reduce((acc, v) => {\n            acc[v.name] = v.defAggFn === 'count' ? 'sum' : v.defAggFn;\n            return acc;\n        }, {}));\n        const fieldsObj = dm.getFieldspace().fieldsObj();\n        const fieldsConf = aggregatedModel.getFieldsConfig();\n        let values = [{\n            value: `${dataObj.data.length}`,\n            style: {\n                'font-weight': 'bold'\n            }\n        }, 'Items Selected'];\n        const measureNames = measures.map(d => d.name);\n        if (measureNames.length) {\n            values = [...values, ...[`(${fieldsObj[measureNames[0]].defAggFn().toUpperCase()}) ${measureNames[0]}`,\n                {\n                    value: `${aggregatedModel.getData().data[0][fieldsConf[measureNames[0]].index].toFixed(2)}`,\n                    style: {\n                        'font-weight': 'bold'\n                    }\n                }]];\n        }\n        return [values];\n    }\n};\n","import { Tooltip as TooltipRenderer } from '@chartshq/muze-tooltip';\nimport { FieldType } from 'muze-utils';\nimport { spaceOutBoxes } from '../helper';\nimport { strategies } from './strategies';\nimport { FRAGMENTED } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nexport default class Tooltip extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._tooltips = {};\n        this._strategies = strategies;\n        this._strategy = 'default';\n    }\n\n    static defaultConfig () {\n        return {\n            padding: 5,\n            offset: {\n                x: 0,\n                y: 0\n            }\n        };\n    }\n\n    static formalName () {\n        return 'tooltip';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        let totalHeight = 0;\n        let totalWidth = 0;\n        const dataModel = selectionSet.mergedEnter.model;\n        const context = this.firebolt.context;\n        const drawingInf = this.drawingContext();\n        if ((dataModel.isEmpty() || payload.criteria === null) || selectionSet.isSourceFieldPresent === false) {\n            this.hide(options, null);\n            return this;\n        }\n\n        const tooltips = this._tooltips;\n        const config = this.config();\n        const boundBox = {\n            width: drawingInf.width,\n            height: drawingInf.height\n        };\n        const showInPosition = payload.showInPosition;\n        const pad = config.padding;\n        const dataModels = [];\n        const fragmented = config.mode === FRAGMENTED;\n        const sourceInf = context.getSourceInfo();\n        const fields = sourceInf.fields;\n        const xFieldDim = fields.x[0] ? fields.x[0].type() === FieldType.DIMENSION : false;\n        const showVertically = !!xFieldDim;\n        const tooltipPos = payload.position;\n        const boxes = [];\n        const enter = {};\n        const uids = dataModel.getData().uids;\n        if (fragmented) {\n            dataModels.push(...uids.map(d => dataModel.select((fieldsArr, i) => i === d, {\n                saveChild: false\n            })));\n        } else {\n            dataModels.push(dataModel);\n        }\n\n        let target = payload.target;\n        let targetFields = [];\n        if (target) {\n            targetFields = target[0] || [];\n            const sourceFields = payload.sourceFields;\n            const indices = [];\n            for (let i = 0, len = targetFields.length; i < len; i++) {\n                if (sourceFields.indexOf(targetFields[i]) !== -1) {\n                    indices.push(i);\n                }\n            }\n            target = target.map(d => d.filter((v, i) => indices.indexOf(i) !== -1));\n        }\n\n        const plotDimensions = context.getPlotPointsFromIdentifiers(target || payload.criteria, {\n            getBBox: true\n        });\n\n        // Show tooltip for each datamodel\n        for (let i = 0; i < dataModels.length; i++) {\n            let plotDim = plotDimensions[i];\n            if (fragmented) {\n                const dimensions = dataModels[i].getData().schema.filter(d => d.type === FieldType.DIMENSION)\n                    .map(d => d.name);\n                plotDim = context.getPlotPointsFromIdentifiers(dataModels[i].project(dimensions), { getBBox: true });\n                plotDim = plotDim && plotDim[0];\n            }\n\n            let dt = dataModels[i];\n            if (config.fields) {\n                dt = dt.project(config.fields, {\n                    saveChild: false\n                });\n            }\n            if (config.dataTransform) {\n                dt = config.dataTransform(dt, i);\n            }\n\n            enter[i] = true;\n            const { parentContainer: layoutContainer, parentContainerDimensions } = drawingInf;\n            const layoutBoundBox = layoutContainer.getBoundingClientRect();\n            const unitBoundBox = drawingInf.htmlContainer.getBoundingClientRect();\n\n            const offsetLeft = unitBoundBox.left - layoutBoundBox.left;\n            const offsetTop = unitBoundBox.top - layoutBoundBox.top;\n            const tooltipInst = tooltips[i] = tooltips[i] || new TooltipRenderer(layoutContainer,\n                    drawingInf.svgContainer);\n\n            sourceInf.payload = payload;\n            sourceInf.firebolt = this.firebolt;\n            sourceInf.detailFields = context.detailFields();\n            sourceInf.timeDiffs = context.timeDiffsByField();\n            tooltipInst.context(sourceInf);\n            const strategy = strategies[options.strategy];\n            tooltipInst.content(options.strategy || this._strategy, dt, {\n                formatter: strategy,\n                order: options.order\n            })\n                            .config(this.config())\n                            .extent({\n                                x: 0,\n                                y: 0,\n                                width: parentContainerDimensions.width,\n                                height: parentContainerDimensions.height\n                            })\n                            .offset({\n                                x: offsetLeft + (config.offset.x || 0),\n                                y: offsetTop + (config.offset.y || 0)\n                            });\n\n            if (showInPosition) {\n                tooltipInst.position(tooltipPos.x + pad, tooltipPos.y + pad);\n            } else if (plotDim) {\n                tooltipInst.positionRelativeTo({\n                    x: plotDim.x,\n                    y: plotDim.y,\n                    width: plotDim.width || 0,\n                    height: plotDim.height || 0\n                }, {\n                    orientation: fragmented ?\n                        (showVertically ? 'horizontal' : 'vertical') : undefined\n                });\n            } else {\n                tooltipInst.hide();\n                break;\n            }\n\n            if (fragmented) {\n                const position = tooltipInst._position;\n                const tooltipBoundBox = tooltipInst._tooltipContainer.node().getBoundingClientRect();\n\n                totalHeight += tooltipBoundBox.height + pad;\n                totalWidth += tooltipBoundBox.width + pad;\n                if (showVertically ? totalHeight > drawingInf.height : totalWidth > drawingInf.width) {\n                    break;\n                }\n                boxes.push({\n                    x: position.x,\n                    y: position.y,\n                    width: tooltipBoundBox.width,\n                    height: tooltipBoundBox.height,\n                    tooltip: tooltipInst\n                });\n            }\n        }\n\n        for (const key in tooltips) {\n            if (!enter[key]) {\n                const tooltip = tooltips[key];\n                tooltip.content(payload.action, null);\n                if (!tooltip.getContents().length) {\n                    tooltip.remove();\n                    delete tooltips[key];\n                }\n            }\n        }\n        if (fragmented) {\n            spaceOutBoxes(boxes, boundBox, showVertically);\n            boxes.forEach(box => box.tooltip.position(box.x, box.y, {\n                repositionArrow: true\n            }));\n        }\n        return this;\n    }\n\n    hide (options) {\n        const tooltips = this._tooltips;\n        for (const key in tooltips) {\n            if ({}.hasOwnProperty.call(tooltips, key)) {\n                const strategy = options.strategy || this._strategy;\n                tooltips[key].content(strategy, null);\n                tooltips[key].hide();\n            }\n        }\n    }\n}\n","export const spaceOutBoxes = (boxes, extent, showVertically) => {\n    let y;\n    let height;\n    let x;\n    let width;\n    let i;\n    const pad = 5;\n    const len = boxes.length;\n    const spaceOutIfOverlap = (firstBox, secondBox, opposite) => {\n        x = firstBox.x;\n        width = firstBox.width;\n        y = firstBox.y;\n        height = firstBox.height;\n        const bottom = y + height;\n        const right = x + width;\n\n        if (showVertically) {\n            if (opposite ? y < (secondBox.y + secondBox.height) : bottom > secondBox.y) {\n                secondBox.y = opposite ? firstBox.y - secondBox.height - pad :\n                        bottom + pad;\n            }\n        } else if (opposite ? x < (secondBox.x + secondBox.width) : right > secondBox.x) {\n            secondBox.x = opposite ? firstBox.x - secondBox.width - pad :\n                    right + pad;\n        }\n    };\n\n    boxes.sort((a, b) => (showVertically ? a.y - b.y : a.x - b.x));\n    i = 0;\n\n    for (i = 0; i < len - 1; i++) {\n        spaceOutIfOverlap(boxes[i], boxes[i + 1]);\n    }\n\n    if ((boxes[i].y + boxes[i].height) > extent.height ||\n            (boxes[i].x + boxes[i].width) > extent.width) {\n        if (showVertically) {\n            boxes[i].y -= (boxes[i].height + boxes[i].y) - extent.height;\n        } else {\n            boxes[i].x -= (boxes[i].width + boxes[i].x) - extent.width;\n        }\n        for (i = len - 1; i > 0; i--) {\n            spaceOutIfOverlap(boxes[i], boxes[i - 1], true);\n        }\n    }\n    return boxes;\n}\n;\n","import { selectElement, FieldType } from 'muze-utils';\n\nimport './styles.scss';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nexport default class Crossline extends SpawnableSideEffect {\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-crossline-group`,\n            bandClass: `${CLASSPREFIX}-crossband`,\n            lineClass: `${CLASSPREFIX}-crossline`\n        };\n    }\n\n    static formalName () {\n        return 'crossline';\n    }\n\n    apply (selectionSet, payload) {\n        let height;\n        let bandWidth;\n        let px;\n        let width;\n        const {\n            className,\n            bandClass,\n            lineClass\n        } = this.config();\n        const dataModel = selectionSet.mergedEnter.model;\n        const drawingInf = this.drawingContext();\n        if (payload.criteria && dataModel && dataModel.isEmpty()) {\n            return this;\n        }\n        if (payload.criteria === null || !dataModel) {\n            this.hide();\n            return this;\n        }\n\n        const dataObj = dataModel.getData();\n        const sourceInf = this.firebolt.context.getSourceInfo();\n        const axes = sourceInf.axes;\n        const axisFields = sourceInf.fields;\n        const fields = selectionSet.fields;\n        const data = dataObj.data;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const svgContainer = drawingInf.sideEffectGroup;\n\n        const elemData = [];\n        fields.forEach((field) => {\n            const fieldIndex = fieldsConfig[field] && fieldsConfig[field].index;\n            const dataArr = data.map(d => d[fieldIndex]);\n            const axisIndex = [['x', 0], ['x', 1], ['y', 0], ['y', 1]].find((arr) => {\n                const fieldInst = axisFields[arr[0]][arr[1]];\n                return fieldInst && fieldInst.type() === FieldType.DIMENSION &&\n                    fieldInst.getMembers().indexOf(field) !== -1;\n            });\n            if (axisIndex !== undefined && data.length) {\n                const type = axisIndex[0];\n                const axis = axes[type][axisIndex[1]];\n                const value = dataArr[0];\n                bandWidth = axis.getUnitWidth() || 0;\n                px = axis.getScaleValue(value) + bandWidth / 2 + drawingInf.xOffset;\n                const plotWidth = Math.max(...this.firebolt.context.layers().map(layer => layer.getPlotSpan()[type]));\n                const pad = Math.max(...this.firebolt.context.layers().map(layer => layer.getPlotPadding()[type]));\n                height = drawingInf.height;\n                width = drawingInf.width;\n                const startPx = px - plotWidth / 2 - pad / 2;\n                const endPx = px + plotWidth / 2 + pad / 2;\n                const dataPoint = {};\n                if (type === 'y') {\n                    dataPoint.d = `M 0 ${startPx} L 0 ${endPx} L ${width} ${endPx} L ${width} ${startPx} Z`;\n                } else {\n                    dataPoint.d = `M ${startPx} 0 L ${endPx} 0 L ${endPx} ${height} L ${startPx} ${height} Z`;\n                }\n                dataPoint.className = plotWidth ? bandClass : lineClass;\n                elemData.push(dataPoint);\n            }\n        });\n        if (elemData.length) {\n            const parentGroup = this.createElement(svgContainer, 'g', [1], className);\n            const elem = this.createElement(parentGroup, 'path', elemData);\n            elem.attr('d', d => d.d).style('pointer-events', 'none')\n                            .attr('class', d => d.className);\n        }\n        return this;\n    }\n\n    hide () {\n        const className = this.config().className;\n        const drawingInf = this.drawingContext();\n        selectElement(drawingInf.sideEffectGroup).selectAll(`.${className}`).remove();\n    }\n}\n","const fadeFn = (set, context, strategy) => {\n    const {\n        mergedEnter,\n        mergedExit,\n        exitSet,\n        completeSet\n    } = set;\n\n    if (!mergedEnter.length && !mergedExit.length) {\n        context.applyInteractionStyle(completeSet, {}, strategy, false);\n    } else {\n        context.applyInteractionStyle(exitSet[1], {}, strategy, true);\n        context.applyInteractionStyle(mergedEnter, {}, strategy, false);\n    }\n};\n\nexport const strategies = {\n    fade: fadeFn,\n    focus: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'focus', false);\n        } else {\n            context.applyInteractionStyle(mergedExit, {}, 'focus', true);\n            context.applyInteractionStyle(mergedEnter, {}, 'focus', false);\n        }\n    },\n    highlight: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            entrySet,\n            exitSet,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'highlight', false);\n        } else {\n            context.applyInteractionStyle(entrySet[1], {}, 'highlight', true);\n            context.applyInteractionStyle(exitSet[1], {}, 'highlight', false);\n        }\n    }\n};\n","import SurrogateSideEffect from '../surrogate';\nimport { strategies } from './strategy';\n\nexport default class PlotHighlighter extends SurrogateSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategy = 'highlight';\n        this._strategies = strategies;\n    }\n\n    static formalName () {\n        return 'highlighter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        if (selectionSet.isSourceFieldPresent !== false) {\n            strategy(selectionSet, this, options.strategy || this._strategy);\n        }\n\n        return this;\n    }\n}\n","import SurrogateSideEffect from '../surrogate';\n\nexport default class FilterEffect extends SurrogateSideEffect {\n    static formalName () {\n        return 'filter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static mutates () {\n        return true;\n    }\n\n    apply (selectionSet, payload) {\n        const context = this.firebolt.context;\n        const entryModel = selectionSet.mergedEnter.model;\n        if (payload.criteria === null) {\n            context.clearCaching().resetData();\n        } else {\n            context.enableCaching().data(entryModel);\n        }\n        return this;\n    }\n}\n","import { DataModel, STATE_NAMESPACES, getObjProp } from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst addLayer = (layerDefs, layerRegistry, context, sideEffect) => {\n    const layers = [];\n    if (layerDefs) {\n        layerDefs.forEach((layerDef) => {\n            const mark = layerDef.mark;\n            const layerCls = layerRegistry[mark];\n            if (layerCls && layerCls.shouldDrawAnchors()) {\n                const depLayerEncoding = layerDef.def.encoding;\n                const encoding = {\n                    x: getObjProp(depLayerEncoding, 'x', 'field'),\n                    y: getObjProp(depLayerEncoding, 'y', 'field'),\n                    color: getObjProp(depLayerEncoding, 'color', 'field'),\n                    size: {\n                        field: getObjProp(depLayerEncoding, 'size', 'field'),\n                        value: sideEffect.defaultSizeValue()\n                    }\n                };\n                const name = `${layerDef.def.name}-${sideEffect.constructor.formalName()}`;\n                const layerObj = {\n                    instances: context.addLayer({\n                        name,\n                        mark: 'point',\n                        className: sideEffect.constructor.defaultConfig().className,\n                        encoding,\n                        transform: {\n                            type: 'identity'\n                        },\n                        transition: sideEffect.getTransitionConfig(),\n                        calculateDomain: false,\n                        source: dm => dm.select(() => false, {\n                            saveChild: false\n                        }),\n                        interactive: false,\n                        render: false\n                    }),\n                    linkedLayer: layerDef.def.name\n                };\n                layers.push(layerObj);\n            }\n        });\n    }\n    return layers;\n};\n\nexport default class AnchorEffect extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._layersMap = {};\n        this.addAnchorLayers();\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-anchors-group`\n        };\n    }\n\n    static formalName () {\n        return 'anchors';\n    }\n\n    addAnchorLayers () {\n        const context = this.firebolt.context;\n        const metaInf = context.metaInf();\n        const layerRegistry = context.registry().layerRegistry;\n        const layerDefsVal = context.layerDef();\n        context.store().registerImmediateListener(\n            `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}.layerDef`, ([, layerDefs]) => {\n                this._layers = addLayer(layerDefs, layerRegistry, context, this);\n            });\n        this._layers = addLayer(layerDefsVal, layerRegistry, context, this);\n        return this;\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n\n    /**\n     * Returns the default area value of the anchor point.\n     * @return { number } Default area value of anchor.\n     */\n    defaultSizeValue () {\n        return 100;\n    }\n\n    apply (selectionSet) {\n        const self = this;\n        const dataModel = selectionSet.mergedEnter.model;\n        if (selectionSet.isSourceFieldPresent !== false) {\n            const drawingInf = this.drawingContext();\n            const sideEffectGroup = drawingInf.sideEffectGroup;\n            const className = `${this.config().className}`;\n            const layers = this._layers;\n            const parentGroup = this.createElement(sideEffectGroup, 'g', [1], `${className}-container`);\n            const anchorGroups = this.createElement(parentGroup, 'g', Object.values(layers));\n            anchorGroups.each(function (layer) {\n                const instances = layer.instances;\n                const elems = self.createElement(this, 'g', instances, className);\n                const linkedLayer = self.firebolt.context.getLayerByName(layer.linkedLayer);\n                const [transformedData, schema] = linkedLayer.getTransformedDataFromIdentifiers(dataModel);\n                const transformedDataModel = new DataModel(transformedData, schema);\n                elems.each(function (d, i) {\n                    instances[i].data(transformedDataModel).mount(this);\n                });\n            });\n        }\n        return this;\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class PersistentAnchors extends AnchorEffect {\n    static formalName () {\n        return 'persistent-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-persistent-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class BrushAnchors extends AnchorEffect {\n    static formalName () {\n        return 'brush-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-brush-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import * as BEHAVIOURS from './enums/behaviours';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: ['selectionBox', {\n        name: 'highlighter',\n        options: {\n            strategy: 'fade'\n        }\n    }, 'brush-anchors'],\n    [`${BEHAVIOURS.BRUSH},${BEHAVIOURS.SELECT}`]: [{\n        name: 'tooltip',\n        options: {\n            strategy: 'showSelectedItems',\n            order: 0,\n            filter: context => context.config().mode === 'fragmented'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'highlight'\n        }\n    }, 'crossline', {\n        name: 'tooltip',\n        options: {\n            order: 9999\n        }\n    }, 'anchors'],\n    [BEHAVIOURS.FILTER]: ['filter'],\n    [BEHAVIOURS.SELECT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'focus'\n        }\n    }, 'persistent-anchors']\n};\n","export const CLASSPREFIX = 'muze';\nexport const STACK = 'stack';\nexport const GROUP = 'group';\nexport const IDENTITY = 'identity';\nexport const ANGLE = 'angle';\nexport const RADIUS = 'radius';\nexport const SIZE = 'size';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const OUTER_RADIUS_VALUE = 'outerRadiusValue';\nexport const TEXT_ANCHOR_MIDDLE = 'middle';\nexport const ENCODING = {\n    X: 'x',\n    Y: 'y',\n    X0: 'x0',\n    Y0: 'y0'\n};\n\nexport const ASCENDING = 'asc';\n\nexport const AGG_FN_SUM = 'sum';\n\nexport const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { CLASSPREFIX, STACK } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-area',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: STACK\n    },\n    interaction: {\n\n    },\n    nearestPointThreshold: 10,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        y0: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * This is an interface class which any new layer class has to extend.\n *\n * @example\n * class BarLayer extends BaseLayer {\n *   update (params) {\n *       // super.update(params);\n *       // Update the bar layer\n *   }\n * }\n * @class\n */\nexport default class SimpleLayer {\n\n    formalName () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets or gets the dependencies.\n     * @param {Object} dependencies Dependencies needed by layer\n     * @return {BaseLayer} Instance of base layer.\n     */\n    dependencies () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the config of the layer\n     *\n     * @param {Object} config Configuration of layer\n     * @return {Object} configuration of layer\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Acts as a getter or setter function\n     * When setter\n     * Returns the datamodel of the layer\n     * @param { DataModel } dataModel instance of DataModel\n     * @return { DataModel } DataModel instance of the layer\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized schema of the layer\n     * @return {Object} Serialized schema\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the unique identifier of this layer\n     * @return {string} id of the layer\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n    /*\n     * This method resolves the x, y, x0 and y0 values from the transformed data.\n     * It also checks the type of transformed data for example, if it is a stacked data\n     * then it fetches the y and y0 values from the stacked data.\n     * @param {Array.<Array>} transformedData transformed data\n     * @param {Object} fieldMap field definitions\n     * @param {string} transformType type of transformed data - stack, group or identity.\n     * @return {Array.<Object>} Normalized data\n     * @private\n     */\n    normalizeTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of dataModel\n     * @param {Object} config configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     * @private\n     */\n    getTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a nominal field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @return {Array} Domain values array.\n     */\n    _calculateDomainFromData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, color, etc.\n     * @return {Object} Axis domains\n     */\n    getDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for getting nearest point\n     * @return {BaseLayer} Instance of base layer\n     */\n    getNearestPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for highlighting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    highlightPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for deselecting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    dehighlightPoint () {\n        return this;\n    }\n\n    linkLayerStore () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets the container element for the layer to be renderered.\n     * @param {SVGElement} mountPoint SVG element or group element.\n     */\n    mount () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n","export const props = {\n    axes: {},\n    mount: {},\n    measurement: {},\n    metaInf: {},\n    data: {},\n    config: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { Symbols } from 'muze-utils';\nimport * as AxisOrientation from '../enums/axis-orientation';\n\n/**\n * @module Axis\n * This file exports constants that are used to reference axis orientations\n * in a consistent manner.\n */\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\n\n/**\n  * This object is used to associate the axis orientation with the d3 class\n  * used to represent that axis.\n  */\nexport const axisOrientationMap = {\n    [AxisOrientation.LEFT]: Symbols.axisLeft,\n    [AxisOrientation.BOTTOM]: Symbols.axisBottom,\n    [AxisOrientation.RIGHT]: Symbols.axisRight,\n    [AxisOrientation.TOP]: Symbols.axisTop\n};\n","/**\n * @module axis\n * This file exports constants used to reference scale type\n * consistently throughout the project.\n */\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const TIME = 'temporal';\nexport const COLOR = 'color';\nexport const ORDINAL = 'ordinal';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\nexport const LOG = 'log';\nexport const POW = 'pow';\nexport const IDENTITY = 'identity';\nexport const SEQUENTIAL = 'sequential';\nexport const THRESHOLD = 'threshold';\n","export const CLASSPREFIX = 'muze';\n\nexport const CONTINOUS = 'continous';\nexport const DISCRETE = 'discrete';\nexport const SEQUENTIAL = 'sequential';\nexport const ORDINAL = 'ordinal';\nexport const LINEAR = 'linear';\nexport const THRESHOLD = 'threshold';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\n\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\n\nexport const DOMAIN = 'domain';\nexport const BAND = 'band';\nexport const HIDDEN = 'hidden';\nexport const NUMBER = 'number';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\n\nexport const RGB = 'rgb';\nexport const HEX = 'hex';\nexport const HSLA = 'hsla';\nexport const HSL = 'hsl';\n\n","import { scales, colorSchemes } from 'muze-utils';\n\nimport {\n    SEQUENTIAL,\n    ORDINAL,\n    LINEAR,\n    CONTINOUS,\n    THRESHOLD,\n    QUANTIZE\n} from './enums/constants';\n\nimport * as ScaleType from './enums/scale-type';\n\nconst {\n    scaleLinear,\n    scaleThreshold,\n    scaleLog,\n    scalePow,\n    scaleIdentity,\n    scaleOrdinal,\n    scaleSequential,\n    scaleQuantize,\n    scaleQuantile,\n    schemeCategory10,\n    schemeCategory20,\n    schemeCategory20b,\n    scaleBand,\n    scaleTime\n} = scales;\nexport const scaleMap = {\n    [ScaleType.LINEAR]: scaleLinear,\n    [ScaleType.BAND]: scaleBand,\n    [ScaleType.QUANTIZE]: scaleQuantize,\n    [ScaleType.QUANTILE]: scaleQuantile,\n    [ScaleType.THRESHOLD]: scaleThreshold,\n    [ScaleType.SEQUENTIAL]: scaleSequential,\n    [ScaleType.LOG]: scaleLog,\n    [ScaleType.POW]: scalePow,\n    [ScaleType.IDENTITY]: scaleIdentity,\n    [ScaleType.TIME]: scaleTime,\n    [ScaleType.COLOR]: scaleLinear,\n    [ScaleType.ORDINAL]: scaleOrdinal\n};\nexport const SCHEMES = {\n    SCHEME1: schemeCategory10,\n    SCHEME2: schemeCategory20,\n    SCHEME3: schemeCategory20b\n};\n\n/**\n * Accepts a scheme in a string format and returns the scale from d3-scale-chromatic\n *\n * @export\n * @param {string} scheme a string representing the kind of scheme for the color axis\n * @return {Object} The corresponding scale from a scheme type from d3 chromatic scale\n */\nexport function getScheme (scheme) {\n    if (scheme[0] === 'i') {\n        return scaleSequential(colorSchemes[scheme]);\n    }\n    return scaleOrdinal(colorSchemes[scheme]);\n}\n\n/**\n *\n *\n * @export\n * @param {*} scheme\n *\n */\nexport function getSchemeType (scheme) {\n    let schemeType = '';\n    if (scheme && typeof (scheme) === 'string') {\n        schemeType = scheme[0] === 'i' ? SEQUENTIAL : ORDINAL;\n    } else {\n        schemeType = ORDINAL;\n    }\n    return schemeType;\n}\n\n/**\n * This function is used to create a scale that is assigned to\n * an instance of axis.\n *\n * @export\n * @param {Object} params the input parameters to create a Scale object\n * @param {string} params.type the type of scale\n * @param {Array} params.range the range of scale\n * @return {Object} instance of scale\n */\nexport function createScale (params) {\n    if (!params.type || !scaleMap[params.type]) {\n        throw new Error(`${params.type} is not a valid scale type`);\n    }\n    if (!Array.isArray(params.range)) {\n        throw new Error('range parameter must be an array');\n    }\n    let scaleFactory = null;\n    const range = params.range;\n    // @todo: do it using scale decorator\n    if (params.type === LINEAR && params.interpolator) {\n        scaleFactory = scaleMap[params.interpolator];\n        if (params.interpolator === ScaleType.POW) {\n            return scaleFactory().range(range).exponent(params.exponent);\n        } else if (params.interpolator === ScaleType.LOG) {\n            return scaleFactory().range(range).base([params.base]);\n        }\n    } else {\n        scaleFactory = scaleMap[params.type];\n    }\n\n    if (params.type === QUANTIZE) {\n        scaleFactory().nice();\n    }\n    return scaleFactory().range(range);\n}\n\n/**\n * This method is used to update the range of a scale\n * so that the core module can remain agnostic of the d3\n * scale api.\n *\n * @export\n * @param {Scale} scale Instance of d3 Scale.\n * @param {Array} range new range of the scale.\n * @return {Scale} Updated scale.\n */\nexport function updateScaleRange (scale, range) {\n    return scale.range(range);\n}\n\n/**\n *\n *\n * @export\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} steps\n *\n */\nexport function getScaleType (domainType, rangeType, steps) {\n    if (rangeType === CONTINOUS) {\n        return LINEAR;\n    }\n    if (domainType === CONTINOUS) {\n        if (steps instanceof Array) {\n            return THRESHOLD;\n        }\n        return QUANTIZE;\n    }\n    return ORDINAL;\n}\n","import { getUniqueId } from 'muze-utils';\nimport { CLASSPREFIX } from '../enums/constants';\n\n/**\n *\n *\n */\nexport const defaultConfig = {\n    id: getUniqueId(),\n    axisName: {\n        defClassName: 'axis-name'\n    },\n    axisNamePadding: 12,\n    base: 10,\n    classPrefix: CLASSPREFIX,\n    className: `${CLASSPREFIX}-axis`,\n    exponent: 1,\n    interpolator: 'linear',\n    fixedBaseline: true,\n    labels: {\n        rotation: null,\n        smartTicks: null\n    },\n    orientation: 'left',\n    numberFormat: val => val,\n    padding: 0.3,\n    nice: true,\n    numberOfTicks: 10,\n    rotate: false,\n    show: true,\n    showAxisName: true,\n    showInnerTicks: true,\n    showOuterTicks: true,\n    style: {},\n    type: 'linear',\n    tickFormat: null,\n    tickValues: null,\n    xOffset: 0,\n    yOffset: 0\n};\n\n","/**\n * This file exports functionality that is used to render axis.\n */\nimport { selectElement, makeElement, angleToRadian } from 'muze-utils';\nimport * as AxisOrientation from './enums/axis-orientation';\nimport { LINEAR, HIDDEN, BOTTOM, TOP } from './enums/constants';\n\n/**\n *\n *\n * @param {*} instance\n * @param {*} container\n * @param {*} labelManager\n * @param {*} config\n */\nconst rotateAxis = (instance, tickText, labelManager) => {\n    let rotation;\n    const axis = instance.axis();\n    const config = instance.config();\n    const renderConfig = instance.renderConfig();\n    const smartTicks = instance.smartTicks();\n    const scale = axis.scale();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n    const ticks = labelFunc();\n    const {\n        orientation,\n        fixedBaseline,\n        type\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n\n    rotation = labels.rotation;\n\n    const tickSize = instance.getTickSize();\n    tickText.each(function (d, index) {\n        let yShift;\n        let xShift;\n        let datum = smartTicks[index] ? smartTicks[index].text : d;\n\n        const tickFormatter = axis.tickFormat() ? axis.tickFormat : null;\n\n        const temp = tickSize ? (tickFormatter ? tickFormatter()(datum) : datum) : '';\n\n        datum = temp.toString();\n\n        const tickLabelDim = labelManager.getOriSize(datum);\n\n        const width = tickLabelDim.width * 0.5;\n        const height = tickLabelDim.height * 0.5;\n\n        if (rotation < 0) {\n            rotation = 360 + rotation;\n        }\n\n        const quadrant = 4 - Math.floor(rotation / 90);\n        const rotationNormalizer = ((quadrant % 2 === 0) ? rotation : 180 * Math.ceil(rotation / 180) - rotation) % 180;\n\n        yShift = Math.sqrt(height ** 2 + width ** 2) * Math.sin(angleToRadian(rotationNormalizer));\n\n        if ((quadrant === 3 || quadrant === 2) && !(rotationNormalizer > 67.5 && rotationNormalizer <= 90)) {\n            yShift += height * 2;\n        }\n        xShift = width;\n\n        if (rotation === 90) {\n            xShift = height;\n        } else if (rotation === 270) {\n            xShift = -height;\n        } else {\n            xShift = 0;\n        }\n\n        if (orientation === AxisOrientation.TOP) {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift + xShift / 2 : xShift;\n            selectElement(this)\n                            .attr('transform', `translate(${-xShift + tickSize}\n                                ${-yShift - tickSize}) rotate(${rotation})`);\n        } else {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift - xShift / 2 : xShift;\n\n            selectElement(this)\n                            .attr('transform', `translate(${xShift - tickSize}\n                                ${yShift + tickSize}) rotate(${rotation})`);\n        }\n        selectElement(this).transition()\n                        .duration(1000).text(datum);\n    });\n    return tickText;\n};\n\n/**\n *\n *\n * @param {*} tickText\n * @param {*} axisInstance\n */\nconst changeTickOrientation = (selectContainer, axisInstance, tickSize) => {\n    const {\n        _smartTicks\n    } = axisInstance;\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const {\n        orientation,\n        classPrefix\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n    const {\n        rotation,\n        smartTicks: isSmartTicks\n    } = labels;\n\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.selectAll('tspan').remove();\n\n   // rotate labels if not enough space is available\n    if (rotation && (orientation === TOP || orientation === BOTTOM)) {\n        rotateAxis(axisInstance, tickText, labelManager);\n    } else if (!rotation && !isSmartTicks) {\n        tickText.attr('transform', '');\n    } else {\n        tickText.text('');\n        if (orientation === TOP || orientation === BOTTOM) {\n            tickText.attr('y', 0)\n                            .attr('x', 0)\n                            .attr('transform', '')\n                            .text('');\n            const tspan = makeElement(tickText, 'tspan', (d, i) => {\n                if (_smartTicks[i]) {\n                    return _smartTicks[i].lines;\n                } return [];\n            }, `${classPrefix}-smart-text`);\n\n            tspan.attr('dy', '0')\n                            .style('opacity', '0')\n\n                            .transition()\n                            .duration(1000)\n                            .on('end', axisInstance.registerAnimationDoneHook())\n                            .attr('dy', (d, i) => {\n                                if (orientation === BOTTOM || i !== 0) {\n                                    return _smartTicks[0].oriTextHeight;\n                                }\n                                return -_smartTicks[0].oriTextHeight * (_smartTicks[0].lines.length - 1) - tickSize;\n                            })\n                            .style('opacity', 1)\n                            .text(e => e)\n                            .attr('x', 0);\n        } else {\n            const tspan = makeElement(tickText, 'tspan', (d, i) => _smartTicks[i].lines, `${classPrefix}-smart-text`);\n            tspan.text(e => e);\n        }\n    }\n\n    return tickText;\n};\n\nconst setFixedBaseline = (axisInstance) => {\n    const {\n        fixedBaseline\n    } = axisInstance.config();\n    if (fixedBaseline) {\n        axisInstance.setFixedBaseline();\n    }\n};\n\n/**\n *\n *\n * @param {*} textNode\n * @param {*} orientation\n * @param {*} measures\n */\nconst setAxisNamePos = (textNode, orientation, measures) => {\n    const {\n        axisNameHeight,\n        yOffset,\n        labelOffset,\n        availableSpace\n    } = measures;\n    switch (orientation) {\n    case AxisOrientation.LEFT:\n        textNode.attr('transform',\n            `translate(${-(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(-90)`);\n        break;\n    case AxisOrientation.RIGHT:\n        textNode.attr('transform',\n             `translate(${(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(90)`);\n        break;\n    case AxisOrientation.TOP:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${-availableSpace.height + axisNameHeight})`);\n        break;\n    case AxisOrientation.BOTTOM:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${availableSpace.height - axisNameHeight / 2})`);\n        break;\n    default:\n    }\n    return textNode;\n};\n\n/**\n * This method is used to render the axis inside an\n * svg container.\n *\n * @export\n * @param {Object} axisInstance the nput object required to render axis\n * @param {string} axisInstance.orientation the orientation of axis\n * @param {Object} axisInstance.scale instance of d3 scale\n * @param {SVGElement} axisInstance.container the container in which to render\n */\nexport function renderAxis (axisInstance) {\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const mount = axisInstance.mount();\n    const range = axisInstance.range();\n    const axis = axisInstance.axis();\n    const scale = axisInstance.scale();\n    const domain = axisInstance.domain() || [];\n    const {\n        _axisNameStyle,\n        _tickLabelStyle,\n        formatter,\n        tickValues\n     } = axisInstance;\n    const {\n        orientation,\n        name,\n        xOffset,\n        yOffset,\n        axisNamePadding,\n        className,\n        id,\n        classPrefix\n     } = config;\n    const {\n        show,\n        showAxisName,\n        labels\n    } = renderConfig;\n    if (!show || !domain.length) {\n        return;\n    }\n\n    const tickSize = axisInstance.getTickSize();\n\n    const selectContainer = makeElement(selectElement(mount), 'g', [axisInstance], `${className}`, {},\n        key => key.config().id);\n\n    // Set style for tick labels\n    labelManager.setStyle(_tickLabelStyle);\n\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    formatter && axis.tickFormat(formatter(tickValues || axis.tickValues() || labelFunc()));\n\n    // Get range(length of range)\n    const availableSpace = Math.abs(range[0] - range[1]);\n\n    // Get width and height taken by axis labels\n    const labelProps = axisInstance.axisComponentDimensions().largestTickDimensions;\n\n    // Draw axis ticks\n    selectContainer.attr('transform', `translate(${xOffset},${yOffset})`);\n    setFixedBaseline(axisInstance);\n    if (labels.smartTicks === false || tickSize === 0) {\n        selectContainer.transition()\n                        .duration(1000)\n                        .on('end', axisInstance.registerAnimationDoneHook())\n                        .call(axis);\n    } else {\n        selectContainer.call(axis);\n    }\n    selectContainer.selectAll('.tick').classed(`${classPrefix}-ticks`, true);\n    selectContainer.selectAll('.tick line').classed(`${classPrefix}-tick-lines`, true);\n\n    // Set classes for ticks\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.classed(`${classPrefix}-ticks`, true)\n                    .classed(`${classPrefix}-ticks-${id}`, true);\n\n    changeTickOrientation(selectContainer, axisInstance, tickSize);\n\n    // Create axis name\n    const textNode = makeElement(selectContainer, 'text', [name], `${classPrefix}-axis-name`)\n                    .attr('text-anchor', 'middle')\n                    .classed(`${classPrefix}-axis-name-${id}`, true)\n                    .text(d => d);\n\n    // Hide axis name if show is off\n    textNode.classed(HIDDEN, !showAxisName);\n\n     // render labels based on orientation of axis\n    const labelOffset = availableSpace / 2;\n\n    // Set style for axis name\n    labelManager.setStyle(_axisNameStyle);\n    const axisNameSpace = labelManager.getOriSize(name);\n    const measures = {\n        labelProps,\n        tickSize,\n        axisNamePadding,\n        axisNameHeight: axisNameSpace.height,\n        axisNameWidth: axisNameSpace.width,\n        yOffset,\n        xOffset,\n        labelOffset,\n        availableSpace: axisInstance.availableSpace()\n    };\n    // Set position for axis name\n    setAxisNamePos(textNode, orientation, measures);\n}\n","import { BOTTOM, TOP } from '../enums/axis-orientation';\n\nconst setAxisRange = (context, type, rangeBounds, offset) => {\n    context.range(rangeBounds);\n    offset && context.config({ [`${type}Offset`]: offset });\n};\n\nconst getAxisOffset = (timeDiff, range, domain) => {\n    const pvr = Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    const width = (pvr * timeDiff);\n    const avWidth = (range[1] - range[0]);\n    const bars = avWidth / width;\n    const barWidth = avWidth / (bars + 1);\n    const diff = avWidth - barWidth * bars;\n\n    return diff / 2;\n};\n\nexport const adjustRange = (minDiff, range, domain, orientation) => {\n    const diff = getAxisOffset(minDiff, range, domain);\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        range[0] += diff;\n        range[1] -= diff;\n    } else {\n        range[0] -= diff;\n        range[1] += diff;\n    }\n    return range;\n};\n\nexport const spaceSetter = (context, spaceConfig) => {\n    let tickInterval;\n    let heightForTicks;\n    const {\n        width: availWidth,\n        height: availHeight,\n        padding\n    } = context.availableSpace();\n    const {\n        top,\n        left,\n        bottom,\n        right\n    } = padding;\n    const {\n        isOffset\n    } = spaceConfig;\n    const {\n        showAxisName,\n        labels\n    } = context.renderConfig();\n    const {\n        rotation\n    } = labels;\n    const {\n        orientation,\n        fixedBaseline,\n        axisNamePadding,\n        tickValues\n    } = context.config();\n    const {\n        tickDimensions,\n        allTickDimensions,\n        axisNameDimensions,\n        tickSize\n    } = context.getAxisDimensions();\n    const {\n        height: tickDimHeight,\n        width: tickDimWidth\n    } = tickDimensions;\n    const namePadding = showAxisName ? axisNamePadding : 0;\n    const labelConfig = { smartTicks: true, rotation: labels.rotation };\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minDiff = context._minDiff;\n    const domain = context.domain();\n    const axisNameHeight = axisNameDimensions.height;\n\n    return {\n        time: {\n            x: () => {\n                const tickShifter = tickDimWidth / 2;\n\n                setAxisRange(context, 'y', adjustRange(minDiff,\n                    [tickShifter, availWidth - left - right - tickShifter], domain, orientation),\n                        isOffset ? availHeight : null);\n\n                tickInterval = ((availWidth) / context.getTickValues().length)\n                                     - minTickDistance.width;\n\n                heightForTicks = availHeight - axisNameDimensions.availHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickSpace.width && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = labels.rotation === null ? -90 : rotation;\n\n                    // Remove ticks if not enough height\n                    if (tickInterval < minTickSpace.height) {\n                        heightForTicks = availHeight;\n                        tickInterval = minTickSpace.height;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                let widthForTicks = availWidth;\n                const tickShifter = tickDimHeight / 2;\n\n                setAxisRange(context, 'x', adjustRange(minDiff,\n                    [availHeight - top - bottom - tickShifter, tickShifter], domain, orientation),\n                        isOffset ? availWidth : null);\n\n                if ((availWidth - axisNameHeight - namePadding) <= minTickDistance.width) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        band: {\n            x: () => {\n                setAxisRange(context, 'y', [0, availWidth - left - right], isOffset ? availHeight : null);\n                const range = context.range();\n\n                // Get Tick Interval\n                tickInterval = ((range[1] - range[0]) / (tickValues || domain).length) - minTickDistance.width;\n\n                // Get height available for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickSpace.width && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation === null ? -90 : rotation;\n                    labelConfig.smartTicks = false;\n\n                    // Ticks with overlapping height\n                    if (tickInterval < minTickSpace.height) {\n                        heightForTicks = 0;\n                        tickInterval = 0;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                        context.range([minTickSpace.height / 2, availWidth - minTickSpace.height / 2]);\n                    }\n                } else if (tickValues) {\n                    const interval = (availWidth / domain.length) - minTickDistance.width;\n                    if (interval < minTickSpace.width) {\n                        context.range([minTickSpace.height / 2, availWidth - minTickSpace.height / 2]);\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false, showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                setAxisRange(context, 'x', [availHeight - bottom, top], isOffset ? availWidth : null);\n\n                let widthForTicks = availWidth;\n                if (availWidth - axisNameHeight - namePadding <= minTickDistance.width) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        continous: {\n            x: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.width / 2;\n                const baseline = fixedBaseline ? 0 : tickShifter;\n\n                setAxisRange(context, 'y', [baseline + left, availWidth - right - tickShifter],\n                    isOffset ? availHeight : null);\n\n                const range = context.range();\n\n                // Get Tick widths and available space\n                const totalTickWidth = allTickDimensions.length * (tickDimensions.width + minTickDistance.width);\n                const availableSpace = range[1] - range[0];\n\n                 // Rotate labels if not enough width\n                if (availableSpace < totalTickWidth && labels.rotation === null) {\n                    labelConfig.rotation = -90;\n                }\n\n                // Remove ticks if not enough height\n                if (availHeight - axisNameHeight - namePadding < tickDimensions.height) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availHeight < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            },\n            y: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.height / 2;\n                const baseline = fixedBaseline ? 1 : tickShifter;\n\n                setAxisRange(context, 'x', [availHeight - bottom - baseline, tickShifter + top],\n                    isOffset ? availWidth : null);\n\n                // Remove display of ticks if no space is left\n                if (availWidth < tickDimensions.width + axisNameHeight + namePadding) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availWidth < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            }\n        }\n    };\n};\n","import { TOP, LEFT, BOTTOM } from '../enums/axis-orientation';\n\nexport const getRotatedSpaces = (rotation = 0, width, height) => {\n    let rotatedHeight = height;\n    let rotatedWidth = width;\n    if (rotation) {\n        const angle = ((rotation || 0) * Math.PI) / 180;\n        rotatedWidth = Math.abs(height * Math.sin(angle)) + Math.abs(width * Math.cos(angle));\n        rotatedHeight = Math.abs(width * Math.sin(angle)) + Math.abs(height * Math.cos(angle));\n    }\n    return { width: rotatedWidth, height: rotatedHeight };\n};\n\nexport const setOffset = (context) => {\n    let x = 0;\n    let y = 0;\n    const logicalSpace = context.logicalSpace();\n    const config = context.config();\n    const {\n        orientation,\n        xOffset,\n        yOffset\n    } = config;\n    if (orientation === LEFT) {\n        x = xOffset === undefined ? logicalSpace.width : xOffset;\n    }\n    if (orientation === TOP) {\n        y = yOffset === undefined ? logicalSpace.height : yOffset;\n    }\n    context.config({ xOffset: x, yOffset: y });\n};\n\nexport const getNumberOfTicks = (availableSpace, labelDim, axis, axisInstance) => {\n    const ticks = axis.scale().ticks();\n    const { numberOfTicks } = axisInstance.config();\n    const tickLength = ticks.length;\n    let numberOfValues = tickLength;\n\n    if (tickLength * (labelDim * 1.5) > availableSpace) {\n        numberOfValues = Math.floor(availableSpace / (labelDim * 1.5));\n    }\n\n    numberOfValues = Math.min(numberOfTicks, Math.max(2, numberOfValues));\n\n    return axis.scale().ticks(numberOfValues);\n};\n\nexport const getAxisComponentDimensions = (context) => {\n    let largestTick = '';\n    let largestTickDimensions = { width: 0, height: 0 };\n    let smartTick = {};\n    let axisTicks;\n    const allTickDimensions = [];\n    const scale = context.scale();\n    const { showAxisName } = context.renderConfig();\n    const { tickValues, name } = context.config();\n    const { labelManager } = context.dependencies();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    // set the style on the shared label manager instance\n    labelManager.setStyle(context._tickLabelStyle);\n\n    // get the values along the domain\n    axisTicks = tickValues || labelFunc();\n\n    // Get the tick labels\n    axisTicks = axisTicks.map((originalLabel, i) => {\n        const label = context.getFormattedText(originalLabel, i, axisTicks);\n\n    // convert to string for quant values\n        const tickDimensions = labelManager.getOriSize(label);\n\n    // Get spaces for all labels\n        allTickDimensions.push(tickDimensions);\n\n    // Getting largest label\n        if (tickDimensions.width > largestTickDimensions.width) {\n            largestTick = label;\n            smartTick = context.smartTicks() ? context.smartTicks()[i] : {};\n            largestTickDimensions = tickDimensions;\n        }\n        return label;\n    });\n\n    labelManager.setStyle(context._axisNameStyle);\n    const axisNameDimensions = showAxisName ? labelManager.getOriSize(name) : { width: 0, height: 0 };\n\n    return {\n        axisNameDimensions,\n        largestTick,\n        largestTickDimensions,\n        allTickDimensions,\n        axisTicks,\n        smartTick,\n        tickSize: context.getTickSize()\n    };\n};\n\nexport const computeAxisDimensions = (context) => {\n    let tickDimensions = {};\n    const { labels } = context.renderConfig();\n    const { smartTicks, rotation } = labels;\n    const {\n        largestTickDimensions,\n        axisTicks,\n        smartTick,\n        axisNameDimensions,\n        allTickDimensions,\n        tickSize\n    } = getAxisComponentDimensions(context);\n    const { height: labelHeight, width: labelWidth } = largestTickDimensions;\n\n    // get the domain of axis\n    const domain = context.domain();\n    // const angle = ((rotation || 0) * Math.PI) / 180;\n\n    if (domain.length === 0) {\n        return null;\n    }\n    if (smartTicks) {\n        tickDimensions = smartTick;\n    } else {\n        tickDimensions = { width: labelWidth, height: labelHeight };\n    }\n    tickDimensions = getRotatedSpaces(rotation, tickDimensions.width, tickDimensions.height);\n\n    if (tickSize === 0) {\n        tickDimensions = { width: 0, height: 0 };\n    }\n    return {\n        allTickDimensions,\n        tickSize,\n        tickDimensions,\n        axisNameDimensions,\n        largestTickDimensions,\n        axisTicks\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getHorizontalAxisSpace = (context, axisDimensions, range) => {\n    let width;\n    let height;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    width = range && range.length ? range[1] - range[0] : 0;\n\n    height = 0;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        width = ((max - min) / Math.abs(minTickDiff)) * (tickDimWidth + context._minTickDistance.width);\n    }\n    if (!width || width === 0) {\n        height = Math.max(tickDimWidth, tickDimHeight);\n    } else {\n        height = tickDimHeight;\n    }\n    height += (showAxisName ? axisDimHeight + axisNamePadding : 0) + tickSize;\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getVerticalAxisSpace = (context, axisDimensions) => {\n    let height;\n    let width;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    height = 0;\n    width = tickDimWidth;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        height = ((max - min) / Math.abs(minTickDiff)) * tickDimHeight;\n    }\n    width += (showAxisName ? axisDimHeight : 0) + tickSize + axisNamePadding;\n\n    return {\n        height,\n        width\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateBandSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show } = context.renderConfig();\n    const { largestTickDimensions, axisTicks, allTickDimensions } = axisDimensions;\n    const { height: largestDimHeight } = largestTickDimensions;\n    const minTickWidth = context._minTickDistance.width;\n    if (orientation === TOP || orientation === BOTTOM) {\n        let {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n\n        if (!width || width === 0) {\n            width = allTickDimensions.reduce((t, n) =>\n                t + Math.min(n.width, n.height) + minTickWidth, 0);\n        }\n        if (show === false) {\n            height = 0;\n        }\n\n        return {\n            width,\n            height\n        };\n    }\n\n    let {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    if (!height || height === 0) {\n        height = axisTicks.length * (largestDimHeight + context._minTickDistance.height) + largestDimHeight;\n    }\n    if (show === false) {\n        width = 0;\n    }\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateContinousSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show, showAxisName } = context.renderConfig();\n    const { axisNameDimensions } = axisDimensions;\n\n    if (show === false) {\n        return {\n            width: 0,\n            height: 0\n        };\n    }\n\n    const { width: axisNameWidth } = axisNameDimensions;\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        const {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n        const axisWidth = Math.max(width, axisNameWidth);\n\n        return {\n            width: axisWidth,\n            height\n        };\n    }\n    const {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    const effHeight = Math.max(height, showAxisName ? axisNameWidth : 0);\n\n    return {\n        width,\n        height: effHeight\n    };\n};\n\nexport const setContinousAxisDomain = (context, domain) => {\n    const { nice, domain: userDom } = context.config();\n    if (userDom) {\n        domain = userDom;\n    }\n    if (domain.length && domain[0] === domain[1]) {\n        domain = [0, +domain[0] * 2];\n    }\n    context.scale().domain(domain);\n    nice && context.scale().nice();\n    context._domain = context.scale().domain();\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    availableSpace: {},\n    axisDimensions: {},\n    axisComponentDimensions: {},\n    config: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._config || {});\n            value = mergeRecursive(oldConfig, value);\n            value.axisNamePadding = Math.max(value.axisNamePadding, 0);\n            if (value.orientation !== oldConfig.orientation) {\n                context.axis(context.createAxis(value));\n            }\n            const {\n                labels,\n                show,\n                showInnerTicks,\n                showOuterTicks,\n                showAxisName\n            } = value;\n            context.renderConfig({\n                labels,\n                show,\n                showInnerTicks,\n                showOuterTicks,\n                showAxisName\n            });\n            return value;\n        }\n    },\n    renderConfig: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._renderConfig || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    logicalSpace: {},\n    mount: {\n    },\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.logicalSpace(null);\n            return value;\n        }\n    },\n\n    smartTicks: {},\n    tickSize: {},\n    maxTickSpaces: {}\n};\n","import {\n    mergeRecursive,\n    getSmartComputedStyle,\n    selectElement,\n    generateGetterSetters,\n    getUniqueId\n} from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { defaultConfig } from './default-config';\nimport { renderAxis } from '../axis-renderer';\nimport { BAND } from '../enums/constants';\nimport { spaceSetter } from './space-setter';\nimport {\n    getAxisComponentDimensions,\n    computeAxisDimensions,\n    calculateContinousSpace\n} from './helper';\nimport { PROPS } from './props';\n\nexport default class SimpleAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @memberof SimpleAxis\n     */\n    constructor (config, dependencies) {\n        this._id = getUniqueId();\n\n        this._dependencies = dependencies;\n        this._mount = null;\n        this._range = [];\n        this._domain = [];\n        this._domainLock = false;\n        this._axisDimensions = {};\n        this._smartTicks = [];\n\n        const defCon = mergeRecursive({}, this.constructor.defaultConfig());\n        const simpleConfig = mergeRecursive(defCon, config);\n\n        const bodyElem = selectElement('body');\n        const classPrefix = simpleConfig.classPrefix;\n        this._tickLabelStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-ticks`);\n        this._axisNameStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-axis-name`);\n\n        dependencies.labelManager.setStyle(this._tickLabelStyle);\n        const dist = dependencies.labelManager.getOriSize('w');\n\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n        this._minTickSpace = dependencies.labelManager.getOriSize('www');\n\n        generateGetterSetters(this, PROPS);\n        this.config(simpleConfig);\n\n        this._scale = this.createScale(this._config);\n        this._axis = this.createAxis(this._config);\n        this._animationDonePromises = [];\n    }\n\n    /**\n     * Returns the default configuration of simple axis\n     *  @return {Object} default configurations\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    scale (...params) {\n        if (params.length) {\n            this._scale = params[0];\n            return this;\n        }\n        return this._scale;\n    }\n\n    resetDomain () {\n        this._domain = [];\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    axis (...params) {\n        if (params.length) {\n            this._axis = params[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            let dom = domain[0];\n            const userDom = this.config().domain;\n            if (userDom) {\n                dom = userDom;\n            }\n            this.scale().domain(dom);\n            this._domain = this.scale().domain();\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    setAxisComponentDimensions () {\n        this.axisComponentDimensions(getAxisComponentDimensions(this));\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const scale = createScale({\n            padding,\n            interpolator,\n            exponent,\n            base,\n            range,\n            type: this.constructor.type()\n        });\n\n        return scale;\n    }\n\n    getTickFormatter (tickFormat, numberFormat) {\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(numberFormat(val), i, ticks);\n        }\n        return () => val => numberFormat(val);\n    }\n\n    resetLogicalSpace () {\n        this.logicalSpace(null);\n        this.range([]);\n        const {\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName\n        } = this.config();\n        this.renderConfig({\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName\n        });\n    }\n\n    getFormattedText (text, index, axisTicks) {\n        const formatter = this.formatter;\n        const scale = this.scale();\n        return formatter ? formatter(axisTicks)(text, index) : (scale.tickFormat ? scale.tickFormat()(text) : text);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const {\n            tickFormat,\n            numberFormat,\n            orientation\n        } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            this.formatter = this.getTickFormatter(tickFormat, numberFormat);\n\n            return axis;\n        }\n        return null;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).continous.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).continous.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        return this;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this.scale()(domainVal);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        return this.axis().tickSize();\n    }\n\n    /**\n     * Gets the space occupied by the parts of an axis\n     *\n     * @return {Object} object with details about sizes of the axis.\n     * @memberof SimpleAxis\n     */\n    getAxisDimensions (...params) {\n        this.axisDimensions(computeAxisDimensions(this, ...params));\n        return this.axisDimensions();\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateContinousSpace(this));\n            this.logicalSpace();\n        }\n\n        return this.logicalSpace();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (...value) {\n        const values = value.map(d => this.scale().invert(d)) || [];\n        return value.length === 1 ? values[0] : values;\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        let p1;\n        let p2;\n        let extent;\n        const {\n            type\n        } = this.config();\n        const scale = this.scale();\n        const range = scale.range();\n        const reverse = range[0] > range[1];\n\n        if (type === BAND) {\n            extent = scale.invertExtent(v1, v2);\n            p1 = scale(reverse ? extent[extent.length - 1] : extent[0]);\n            p2 = scale(reverse ? extent[0] : extent[extent.length - 1]) + scale.bandwidth();\n            return [p1, p2];\n        }\n        return [v1, v2];\n    }\n\n    getMinTickDifference () {\n        return this.domain();\n    }\n\n    getFormattedTickValues (tickValues) {\n        return tickValues;\n    }\n\n    /**\n     * This method returns the width in pixels for one\n     * unit along the axis. It is only applicable to band scale\n     * and returns undefined for other scale type.\n     *\n     * @return {number} the width of one band along band scale axis\n     * @memberof SimpleAxis\n     */\n    getUnitWidth () {\n        return 0;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof SimpleAxis\n     */\n    serialize () {\n        return {\n            name: this.name,\n            type: this.type,\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to render the axis inside\n     * the supplied svg container.\n     *\n     * @param {SVGElement} svg the svg element in which to render the path\n     * @memberof SimpleAxis\n     */\n    /* istanbul ignore next */render () {\n        if (this.mount()) {\n            this.setTickConfig();\n            renderAxis(this);\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    remove () {\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    unsubscribe () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    isReverse () {\n        const range = this.range();\n        return range[0] > range[1];\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getPixelToValueRatio () {\n        const scale = this.scale();\n        const range = scale.range();\n        const domain = scale.domain();\n\n        return Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    }\n\n     /**\n     * Notifies when all animations/transitions of the axis are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n}\n\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LinearInterpolator {\n\n    createScale (config) {\n        const {\n            range\n        } = config;\n        const scaleFactory = scaleMap.linear;\n        this._scale = scaleFactory().range(range);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LogInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            base\n        } = config;\n        const scaleFactory = scaleMap.log;\n        this._scale = scaleFactory().range(range).base(base);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal <= 0) {\n            return 1;\n        }\n\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain[0] <= 0) {\n            return [Math.max(1, domain[0]), Math.max(1, domain[1])];\n        } return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class PowInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            exponent\n        } = config;\n        const scaleFactory = scaleMap.pow;\n        this._scale = scaleFactory().range(range).exponent(exponent);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { spaceSetter } from './space-setter';\nimport { LINEAR, LOG, POW } from '../enums/scale-type';\nimport { LogInterpolator, PowInterpolator, LinearInterpolator } from './interpolators';\nimport {\n    getNumberOfTicks,\n    setContinousAxisDomain\n} from './helper';\n\nexport const interpolatorMap = {\n    [LOG]: LogInterpolator,\n    [POW]: PowInterpolator,\n    [LINEAR]: LinearInterpolator\n};\n\nexport default class ContinousAxis extends SimpleAxis {\n    constructor (config, dependencies) {\n        config.tickFormat = config.tickFormat || (val => val);\n        super(config, dependencies);\n    }\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const InterpolatorCls = interpolatorMap[interpolator];\n\n        this._interpolator = new InterpolatorCls();\n        let scale = this._interpolator.createScale({\n            padding,\n            exponent,\n            base,\n            range\n        });\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ContinousAxis\n     */\n    static type () {\n        return LINEAR;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this._interpolator.getScaleValue(domainVal);\n    }\n /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n\n        return axis.tickSize();\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (domain) {\n        if (domain && domain.length) {\n            setContinousAxisDomain(this, domain);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        } else if (domain) {\n            this._domain = [];\n        } return this._domain;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).continous.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).continous.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} tickValues\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        const {\n            tickValues\n        } = this.config();\n        const {\n            showInnerTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        if (!showInnerTicks) {\n            axis.tickValues([]);\n            return this;\n        }\n\n        if (tickValues) {\n            tickValues instanceof Array && this.axis().tickValues(tickValues);\n            return this;\n        }\n        axis.tickValues(this.getTickValues());\n\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickValues () {\n        let labelDim = 0;\n        const {\n            orientation,\n            tickValues\n        } = this.config();\n        const range = this.range();\n        const axis = this.axis();\n\n        const availableSpace = Math.abs(range[0] - range[1]);\n\n        const labelProps = this.axisComponentDimensions().largestTickDimensions;\n\n        if (tickValues) {\n            return axis.scale().ticks(tickValues);\n        }\n        labelDim = labelProps[orientation === BOTTOM || orientation === TOP ? 'width' : 'height'];\n\n        return getNumberOfTicks(availableSpace, labelDim, axis, this);\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline (tickText) {\n        const {\n            orientation\n        } = this.config();\n        const {\n            labels\n        } = this.renderConfig();\n\n        const {\n            rotation\n        } = labels;\n        const axis = this.axis();\n        const ticks = axis.scale().ticks();\n        const { width, height } = this.axisComponentDimensions().allTickDimensions[0];\n        axis.tickTransform((d) => {\n            if (d === ticks[0]) {\n                if ((orientation === LEFT || orientation === RIGHT)) {\n                    return `translate(0, -${(height) / 3}px)`;\n                }\n                if ((orientation === TOP || orientation === BOTTOM) && !rotation) {\n                    return `translate(${width / 2}px,  ${0}px)`;\n                }\n            } return '';\n        });\n        return tickText;\n    }\n\n}\n","import SimpleAxis from './simple-axis';\nimport { BAND } from '../enums/scale-type';\nimport { TOP, BOTTOM } from '../enums/axis-orientation';\nimport { calculateBandSpace, setOffset, getRotatedSpaces } from './helper';\nimport { spaceSetter } from './space-setter';\n\nexport default class BandAxis extends SimpleAxis {\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof BandAxis\n     */\n    createScale (range) {\n        const scale = super.createScale(range);\n        const { padding } = this.config();\n        if (typeof padding === 'number') {\n            scale.padding(padding);\n        }\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BandAxis\n     */\n    static type () {\n        return BAND;\n    }\n\n     /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).band.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).band.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks = '';\n        let smartlabel;\n        const domain = this.domain();\n        const { labelManager } = this._dependencies;\n        const { tickValues, tickFormat } = this.config();\n        const { labels } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n        const tickFormatter = tickFormat || (val => val);\n\n        tickValues && this.axis().tickValues(tickValues);\n        smartTicks = tickValues || domain;\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i, values), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n            setOffset(this);\n            this.logicalSpace();\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     *\n     *\n     * @memberof BandAxis\n     */\n    getTickValues () {\n        return this.axis().scale().domain();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    getUnitWidth () {\n        return this.scale().bandwidth();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        axis.tickSizeInner(showInnerTicks ? 6 : 0);\n        axis.tickSizeOuter(showOuterTicks ? 6 : 0);\n        return axis.tickSize();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (...value) {\n        const values = value.map(d => this.scale().invert(d)) || [];\n        return value.length === 1 ? values[0] && values[0].toString() : values.map(d => d.toString());\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { TIME } from '../enums/scale-type';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { calculateBandSpace, getRotatedSpaces, setContinousAxisDomain } from './helper';\nimport { spaceSetter } from './space-setter';\n\n/**\n *\n *\n * @export\n * @class TimeAxis\n * @extends {SimpleAxis}\n */\nexport default class TimeAxis extends SimpleAxis {\n\n    constructor (...params) {\n        super(...params);\n        this._minDiff = Infinity;\n    }\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof TimeAxis\n     */\n    createScale (range) {\n        let scale = super.createScale(range);\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TimeAxis\n     */\n    static type () {\n        return TIME;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const {\n            tickFormat,\n            orientation\n        } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            this.formatter = this.getTickFormatter(tickFormat);\n            return axis;\n        }\n        return null;\n    }\n\n    getTickFormatter (tickFormat) {\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(val, i, ticks);\n        }\n        return null;\n    }\n\n     /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n        return super.getTickSize();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TimeAxis\n     */\n    getTickValues () {\n        return this.config().tickValues || this.scale().ticks();\n    }\n\n    /**\n     *\n     *\n     * @param {*} diff\n     *\n     * @memberof TimeAxis\n     */\n    minDiff (diff) {\n        this._minDiff = Math.min(this._minDiff, diff);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (domain) {\n        if (domain) {\n            setContinousAxisDomain(this, domain);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        } return this._domain;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n            this.logicalSpace();\n        }\n        return this.logicalSpace();\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).time.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).time.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks;\n        let smartlabel;\n        const { tickFormat, tickValues } = this.config();\n        const { labels } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { labelManager } = this._dependencies;\n        const domain = this.getTickValues();\n        const scale = this.scale();\n        tickValues && this.axis().tickValues(tickValues);\n\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        smartTicks = tickValues || domain;\n        const tickFormatter = tickFormat || scale.tickFormat();\n         // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i, values), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n}\n","export const x11Colors = {\n    Pink: { hex: 'ffc0cb', rgb: '255,192,203' },\n    LightPink: { hex: 'ffb6c1', rgb: '255,182,193' },\n    HotPink: { hex: 'ff69b4', rgb: '255,105,180' },\n    DeepPink: { hex: 'ff1493', rgb: '255,20,147' },\n    PaleVioletRed: { hex: 'db7093', rgb: '219,112,147' },\n    MediumVioletRed: { hex: 'c71585', rgb: '199,21,133' },\n    LightSalmon: { hex: 'ffa07a', rgb: '255,160,122' },\n    Salmon: { hex: 'fa8072', rgb: '250,128,114' },\n    DarkSalmon: { hex: 'e9967a', rgb: '233,150,122' },\n    LightCoral: { hex: 'f08080', rgb: '240,128,128' },\n    IndianRed: { hex: 'cd5c5c', rgb: '205,92,92' },\n    Crimson: { hex: 'dc143c', rgb: '220,20,60' },\n    FireBrick: { hex: 'b22222', rgb: '178,34,34' },\n    DarkRed: { hex: '8b0000', rgb: '139,0,0' },\n    Red: { hex: 'ff0000', rgb: '255,0,0' },\n    OrangeRed: { hex: 'ff4500', rgb: '255,69,0' },\n    Tomato: { hex: 'ff6347', rgb: '255,99,71' },\n    Coral: { hex: 'ff7f50', rgb: '255,127,80' },\n    DarkOrange: { hex: 'ff8c00', rgb: '255,140,0' },\n    Orange: { hex: 'ffa500', rgb: '255,165,0' },\n    Gold: { hex: 'ffd700', rgb: '255,215,0' },\n    Yellow: { hex: 'ffff00', rgb: '255,255,0' },\n    LightYellow: { hex: 'ffffe0', rgb: '255,255,224' },\n    LemonChiffon: { hex: 'fffacd', rgb: '255,250,205' },\n    LightGoldenrodYellow: { hex: 'fafad2', rgb: '250,250,210' },\n    PapayaWhip: { hex: 'ffefd5', rgb: '255,239,213' },\n    Moccasin: { hex: 'ffe4b5', rgb: '255,228,181' },\n    PeachPuff: { hex: 'ffdab9', rgb: '255,218,185' },\n    PaleGoldenrod: { hex: 'eee8aa', rgb: '238,232,170' },\n    Khaki: { hex: 'f0e68c', rgb: '240,230,140' },\n    DarkKhaki: { hex: 'bdb76b', rgb: '189,183,107' },\n    Cornsilk: { hex: 'fff8dc', rgb: '255,248,220' },\n    BlanchedAlmond: { hex: 'ffebcd', rgb: '255,235,205' },\n    Bisque: { hex: 'ffe4c4', rgb: '255,228,196' },\n    NavajoWhite: { hex: 'ffdead', rgb: '255,222,173' },\n    Wheat: { hex: 'f5deb3', rgb: '245,222,179' },\n    BurlyWood: { hex: 'deb887', rgb: '222,184,135' },\n    Tan: { hex: 'd2b48c', rgb: '210,180,140' },\n    RosyBrown: { hex: 'bc8f8f', rgb: '188,143,143' },\n    SandyBrown: { hex: 'f4a460', rgb: '244,164,96' },\n    Goldenrod: { hex: 'daa520', rgb: '218,165,32' },\n    DarkGoldenrod: { hex: 'b8860b', rgb: '184,134,11' },\n    Peru: { hex: 'cd853f', rgb: '205,133,63' },\n    Chocolate: { hex: 'd2691e', rgb: '210,105,30' },\n    SaddleBrown: { hex: '8b4513', rgb: '139,69,19' },\n    Sienna: { hex: 'a0522d', rgb: '160,82,45' },\n    Brown: { hex: 'a52a2a', rgb: '165,42,42' },\n    Maroon: { hex: '800000', rgb: '128,0,0' },\n    DarkOliveGreen: { hex: '556b2f', rgb: '85,107,47' },\n    Olive: { hex: '808000', rgb: '128,128,0' },\n    OliveDrab: { hex: '6b8e23', rgb: '107,142,35' },\n    YellowGreen: { hex: '9acd32', rgb: '154,205,50' },\n    LimeGreen: { hex: '32cd32', rgb: '50,205,50' },\n    Lime: { hex: '00ff00', rgb: '0,255,0' },\n    LawnGreen: { hex: '7cfc00', rgb: '124,252,0' },\n    Chartreuse: { hex: '7fff00', rgb: '127,255,0' },\n    GreenYellow: { hex: 'adff2f', rgb: '173,255,47' },\n    SpringGreen: { hex: '00ff7f', rgb: '0,255,127' },\n    MediumSpringGreen: { hex: '00fa9a', rgb: '0,250,154' },\n    LightGreen: { hex: '90ee90', rgb: '144,238,144' },\n    PaleGreen: { hex: '98fb98', rgb: '152,251,152' },\n    DarkSeaGreen: { hex: '8fbc8f', rgb: '143,188,143' },\n    MediumSeaGreen: { hex: '3cb371', rgb: '60,179,113' },\n    SeaGreen: { hex: '2e8b57', rgb: '46,139,87' },\n    ForestGreen: { hex: '228b22', rgb: '34,139,34' },\n    Green: { hex: '008000', rgb: '0,128,0' },\n    DarkGreen: { hex: '006400', rgb: '0,100,0' },\n    MediumAquamarine: { hex: '66cdaa', rgb: '102,205,170' },\n    Aqua: { hex: '00ffff', rgb: '0,255,255' },\n    Cyan: { hex: '00ffff', rgb: '0,255,255' },\n    LightCyan: { hex: 'e0ffff', rgb: '224,255,255' },\n    PaleTurquoise: { hex: 'afeeee', rgb: '175,238,238' },\n    Aquamarine: { hex: '7fffd4', rgb: '127,255,212' },\n    Turquoise: { hex: '40e0d0', rgb: '64,224,208' },\n    MediumTurquoise: { hex: '48d1cc', rgb: '72,209,204' },\n    DarkTurquoise: { hex: '00ced1', rgb: '0,206,209' },\n    LightSeaGreen: { hex: '20b2aa', rgb: '32,178,170' },\n    CadetBlue: { hex: '5f9ea0', rgb: '95,158,160' },\n    DarkCyan: { hex: '008b8b', rgb: '0,139,139' },\n    Teal: { hex: '008080', rgb: '0,128,128' },\n    LightSteelBlue: { hex: 'b0c4de', rgb: '176,196,222' },\n    PowderBlue: { hex: 'b0e0e6', rgb: '176,224,230' },\n    LightBlue: { hex: 'add8e6', rgb: '173,216,230' },\n    SkyBlue: { hex: '87ceeb', rgb: '135,206,235' },\n    LightSkyBlue: { hex: '87cefa', rgb: '135,206,250' },\n    DeepSkyBlue: { hex: '00bfff', rgb: '0,191,255' },\n    DodgerBlue: { hex: '1e90ff', rgb: '30,144,255' },\n    CornflowerBlue: { hex: '6495ed', rgb: '100,149,237' },\n    SteelBlue: { hex: '4682b4', rgb: '70,130,180' },\n    RoyalBlue: { hex: '4169e1', rgb: '65,105,225' },\n    Blue: { hex: '0000ff', rgb: '0,0,255' },\n    MediumBlue: { hex: '0000cd', rgb: '0,0,205' },\n    DarkBlue: { hex: '00008b', rgb: '0,0,139' },\n    Navy: { hex: '000080', rgb: '0,0,128' },\n    MidnightBlue: { hex: '191970', rgb: '25,25,112' },\n    Lavender: { hex: 'e6e6fa', rgb: '230,230,250' },\n    Thistle: { hex: 'd8bfd8', rgb: '216,191,216' },\n    Plum: { hex: 'dda0dd', rgb: '221,160,221' },\n    Violet: { hex: 'ee82ee', rgb: '238,130,238' },\n    Orchid: { hex: 'da70d6', rgb: '218,112,214' },\n    Fuchsia: { hex: 'ff00ff', rgb: '255,0,255' },\n    Magenta: { hex: 'ff00ff', rgb: '255,0,255' },\n    MediumOrchid: { hex: 'ba55d3', rgb: '186,85,211' },\n    MediumPurple: { hex: '9370db', rgb: '147,112,219' },\n    BlueViolet: { hex: '8a2be2', rgb: '138,43,226' },\n    DarkViolet: { hex: '9400d3', rgb: '148,0,211' },\n    DarkOrchid: { hex: '9932cc', rgb: '153,50,204' },\n    DarkMagenta: { hex: '8b008b', rgb: '139,0,139' },\n    Purple: { hex: '800080', rgb: '128,0,128' },\n    Indigo: { hex: '4b0082', rgb: '75,0,130' },\n    DarkSlateBlue: { hex: '483d8b', rgb: '72,61,139' },\n    SlateBlue: { hex: '6a5acd', rgb: '106,90,205' },\n    MediumSlateBlue: { hex: '7b68ee', rgb: '123,104,238' },\n    White: { hex: 'ffffff', rgb: '255,255,255' },\n    Snow: { hex: 'fffafa', rgb: '255,250,250' },\n    Honeydew: { hex: 'f0fff0', rgb: '240,255,240' },\n    MintCream: { hex: 'f5fffa', rgb: '245,255,250' },\n    Azure: { hex: 'f0ffff', rgb: '240,255,255' },\n    AliceBlue: { hex: 'f0f8ff', rgb: '240,248,255' },\n    GhostWhite: { hex: 'f8f8ff', rgb: '248,248,255' },\n    WhiteSmoke: { hex: 'f5f5f5', rgb: '245,245,245' },\n    Seashell: { hex: 'fff5ee', rgb: '255,245,238' },\n    Beige: { hex: 'f5f5dc', rgb: '245,245,220' },\n    OldLace: { hex: 'fdf5e6', rgb: '253,245,230' },\n    FloralWhite: { hex: 'fffaf0', rgb: '255,250,240' },\n    Ivory: { hex: 'fffff0', rgb: '255,255,240' },\n    AntiqueWhite: { hex: 'faebd7', rgb: '250,235,215' },\n    Linen: { hex: 'faf0e6', rgb: '250,240,230' },\n    LavenderBlush: { hex: 'fff0f5', rgb: '255,240,245' },\n    MistyRose: { hex: 'ffe4e1', rgb: '255,228,225' },\n    Gainsboro: { hex: 'dcdcdc', rgb: '220,220,220' },\n    LightGray: { hex: 'd3d3d3', rgb: '211,211,211' },\n    Silver: { hex: 'c0c0c0', rgb: '192,192,192' },\n    DarkGrey: { hex: 'a9a9a9', rgb: '169,169,169' },\n    Grey: { hex: '808080', rgb: '128,128,128' },\n    DimGrey: { hex: '696969', rgb: '105,105,105' },\n    LightSlateGrey: { hex: '778899', rgb: '119,136,153' },\n    SlateGrey: { hex: '708090', rgb: '112,128,144' },\n    DarkSlateGrey: { hex: '2f4f4f', rgb: '47,79,79' },\n    Black: { hex: '000000', rgb: '0,0,0' }\n};\n","import {\n    LINEAR\n} from '../enums/constants';\n/**\n * Set of default colors\n */\nexport const palette = [\n    '#086bb6',\n    '#f37d45',\n    '#f5ce02',\n    '#67bda0',\n    '#c54e4e',\n    '#ae70af'\n];\n\nexport const DEFAULT_GRADIENT_COLOR = '#eaeaea';\n\nexport const DEFAULT_CONFIG = {\n    range: palette,\n    value: palette[0],\n    step: false,\n    stops: 5,\n    type: LINEAR\n};\n","import { mergeRecursive, detectColor, hexToHsv, rgbToHsv } from 'muze-utils';\nimport { x11Colors } from './color-maps';\nimport { palette, DEFAULT_GRADIENT_COLOR } from './defaults';\nimport { LINEAR, RGB, HEX, HSL, HSLA } from '../enums/constants';\n\nexport const getHslString = hslArr => `hsla(${hslArr[0] * 360},${hslArr[1] * 100}%,${hslArr[2] * 100}%,\\\n${hslArr[3] || 1})`;\n\nexport const convertToXllString = baseString => (baseString.split(' ') || [])\n                .reduce((x, e) => `${x}${e.charAt(0).toUpperCase()}${e.slice(1)}`, '');\n\nexport const getActualHslColor = (e, paletteColor) => {\n    let color = '';\n    if (typeof e === 'string') {\n        e = e.replace(/ /g, '');\n        e = e.toLowerCase();\n        if (detectColor(e) === HSL || detectColor(e) === HSLA) {\n            color = e.match(/(\\d+(\\.\\d+)?)/g);\n            color = [color[0] / 360, color[1] / 100, color[2] / 100, color[3] || 1];\n        } else if (detectColor(e) === HEX) {\n            color = hexToHsv(e);\n        } else if (detectColor(e) === RGB) {\n            const col = e.substring(e.indexOf('(') + 1, e.lastIndexOf(')')).split(/,\\s*/);\n            color = rgbToHsv(...col);\n        } else if (x11Colors[convertToXllString(e)]) {\n            color = rgbToHsv(...x11Colors[convertToXllString(e)].rgb.split(','));\n        }\n    } else if (!(e instanceof Array)) {\n        color = rgbToHsv(paletteColor);\n    } else {\n        color = e;\n    }\n    return color;\n};\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => {\n            const defCon = mergeRecursive({}, context.constructor.defaultConfig());\n            if (config.type === LINEAR) {\n                config.range = config.range || [defCon.range[0]];\n                config.range = config.range.length > 1 ? config.range : [DEFAULT_GRADIENT_COLOR, ...config.range];\n            }\n            const oldConfig = mergeRecursive(defCon, context.config());\n            const newConfig = mergeRecursive(oldConfig, config);\n\n            if (newConfig.range instanceof Array) {\n                newConfig.range = newConfig.range.map((e, i) => getActualHslColor(e, palette[i]));\n                newConfig.stops = config.stops || newConfig.range.length;\n            }\n            newConfig.value = getActualHslColor(newConfig.value, newConfig.value);\n            return newConfig;\n        }\n    },\n    domain: {},\n    scale: {},\n    uniqueValues: {}\n};\n","import { numberInterpolator, piecewiseInterpolator, hslInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, SEQUENTIAL, ORDINAL, QUANTILE } from '../enums/scale-type';\nimport { getHslString } from './props';\n\nconst getStops = (domain, stops) => {\n    let newStops = [];\n\n    if (stops instanceof Array) {\n        newStops = stops.slice().sort();\n        newStops = [...new Set([domain[0], ...stops, domain[1]])].sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i <= stops; i++) {\n            newStops[i] = interpolator(i / stops);\n        }\n    }\n\n    if (newStops[0] < domain[0]) {\n        newStops.shift();\n    }\n    return { domain, newStops };\n};\n\nconst rangeStops = (newStopsLength, range) => {\n    let newRange = [];\n    const maxRangeLength = Math.min(range.length, 18);\n\n    if (newStopsLength > maxRangeLength) {\n        const interpolator = piecewiseInterpolator()(hslInterpolator(), range.map(e => getHslString(e)));\n        for (let i = 0; i < newStopsLength; i++) {\n            newRange[i] = interpolator(i / (newStopsLength - 1));\n        }\n    } else {\n        newRange = range.slice(0, newStopsLength);\n    }\n    return { newRange };\n};\n\n/**\n*\n*\n* @param {*} domain\n*\n*/\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomainMeasure = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { domain, uniqueVals, scaleDomain: [0, 1], range };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain, nice: true, range };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} stops\n *\n */\nconst steppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, stops);\n    const { newRange } = rangeStops(newStops.length - 1, range);\n\n    return { uniqueVals, domain: newStops, nice: true, range: newRange };\n};\n\nconst continousSteppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, range.length - 1);\n    const hslRange = range.map(e => getHslString(e));\n    return { uniqueVals, domain: newStops, nice: true, range: hslRange };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst uniqueRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst indexedRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale) => scale(domainValue);\n\n/**\n *\n *\n * @param {*} stops\n */\nconst strategies = () => ({\n    [`${CONTINOUS}-${CONTINOUS}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomain,\n        value: () => uniqueRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${ORDINAL}`]: {\n        scale: ORDINAL,\n        domainRange: () => normalDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}-${ORDINAL}`]: {\n        scale: LINEAR,\n        domainRange: () => continousSteppedDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${ORDINAL}`]: {\n        scale: QUANTILE,\n        domainRange: () => steppedDomain,\n        value: () => normalRange\n\n    }\n});\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} stops\n */\nexport const strategyGetter = (domainType, rangeType, schemeType, stops) =>\n     strategies(stops)[`${domainType}-${rangeType}-${schemeType || ''}`];\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters, rgbToHsv } from 'muze-utils';\nimport { createScale, getScheme, getSchemeType } from '../scale-creator';\nimport { CONTINOUS, DISCRETE, COLOR } from '../enums/constants';\nimport { strategyGetter } from './color-strategy';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { PROPS, getHslString } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ColorAxis {\n\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} config input parameters.\n    * @param {Object | undefined} params.range Type of color range.\n    * @param {string} params.name the label to show on axis.\n    * @param {string} params.type The type of scale to handle.\n    * @memberof ColorAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n        this.config(config);\n\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = (this._config.type === 'linear' && !this._config.step) ? CONTINOUS : DISCRETE;\n\n        this._schemeType = getSchemeType(this._config.range);\n\n        this._colorStrategy = this.setColorStrategy(this._domainType, this._rangeType, this._schemeType);\n        this._scale = this.createScale(this._colorStrategy);\n\n        this._id = getUniqueId();\n\n        this.updateDomain(config.domain);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return COLOR;\n    }\n\n    /**\n     *\n     *\n     * @param {*} colorStrategy\n     *\n     * @memberof ColorAxis\n     */\n    createScale (colorStrategy) {\n        const { range } = this.config();\n        if (range && typeof (range) === 'string') {\n            return getScheme(range);\n        }\n        return createScale({\n            type: colorStrategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setColorStrategy (domainType, rangeType, schemeType) {\n        const { stops } = this.config();\n\n        return strategyGetter(domainType, rangeType, schemeType, stops);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getHslString (hslColorArray) {\n        return getHslString(hslColorArray);\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getColor (domainVal) {\n        return this.getHslString(this.getRawColor(domainVal));\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getRawColor (domainVal) {\n        if (this.domain() && domainVal !== undefined) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const color = this._colorStrategy.value(range)(domainVal, scale, this.domain(), this.uniqueValues());\n\n            if (typeof color === 'string') {\n                const col = color.substring(color.indexOf('(') + 1, color.lastIndexOf(')')).split(/,\\s*/);\n                return rgbToHsv(...col);\n            }\n            return [...color];\n        }\n        return [...this.config().value];\n    }\n\n    /**\n     *\n     *\n     * @param {*} [domain=[]]\n     *\n     * @memberof ColorAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const domainRangeFn = this._colorStrategy.domainRange();\n            const scaleInfo = domainRangeFn(domain, this.config().stops, range);\n\n            this.domain(scaleInfo.domain);\n            scaleInfo.range && this.scale().range(scaleInfo.range);\n            this.uniqueValues(scaleInfo.uniqueVals);\n            this.scale().domain(scaleInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            config: this.config()\n        };\n    }\n\n    transformColor (color, transformationArr) {\n        const h = color[0] * 360;\n        const s = color[1] * 100;\n        const l = color[2] * 100;\n        const a = color[3] || 1;\n        const newH = h + transformationArr[0];\n        const newS = s + transformationArr[1];\n        const newL = l + transformationArr[2];\n        const newA = a + transformationArr[3] || 0;\n\n        return { color: `hsla(${newH},${newS}%,${newL}%,${newA})`, hsla: [newH / 360, newS / 100, newL / 100, newA] };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n\n}\n","export const DEFAULT_CONFIG = {\n    value: 36,\n    range: [36, 1000]\n};\n","import { numberInterpolator, piecewiseInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, THRESHOLD } from '../enums/scale-type';\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} intervals\n *\n */\nconst steppedDomain = (domain, intervals) => {\n    let newIntervals = [];\n    if (intervals instanceof Array) {\n        newIntervals = intervals.slice().sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i < intervals; i++) {\n            newIntervals[i] = interpolator(i / (intervals - 1));\n        }\n    }\n    if (newIntervals[0] < domain[0]) {\n        newIntervals.shift();\n    }\n    const retDomain = newIntervals;\n    return { uniqueVals: newIntervals, domain: retDomain, nice: true };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst discreteRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n    const interpolator = numberInterpolator()(...scale.range());\n    return interpolator(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst pieceWiseRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    const fn = piecewiseInterpolator()(numberInterpolator(), [...scale.range()]);\n    return fn(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale) => scale(domainValue);\n\n/**\n *\n *\n * @param {*} intervals\n */\nconst strategies = {\n    [`${DISCRETE}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: indexedDomain,\n        range: pieceWiseRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: normalDomain,\n        range: normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}`]: {\n        scale: THRESHOLD,\n        domain: steppedDomain,\n        range: discreteRange\n    }\n};\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} intervals\n */\nexport const strategyGetter = (domainType, rangeType) =>\n     strategies[`${domainType}-${rangeType}`];\n","export const PROPS = {\n    config: {},\n    domain: {\n        sanitization: (context, value) => {\n            context.scale().domain(value);\n            return value;\n        }\n    },\n    range: {},\n    scale: {},\n    uniqueValues: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SIZE, CONTINOUS, DISCRETE } from '../enums/constants';\nimport { strategyGetter } from './size-strategy';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class SizeAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @param {Object} config input parameters.\n     * @memberof SizeAxis\n     */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig(), config);\n        // @todo: Will use configuration override using scale decorator\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = CONTINOUS;\n\n        this._sizeStrategy = this.setStrategy(this._domainType, this._rangeType);\n        this._scale = this.createScale(this._sizeStrategy);\n        this._range = this._config.range;\n\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setStrategy (domainType, rangeType) {\n        return strategyGetter(domainType, rangeType);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SizeAxis\n     */\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SIZE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof SizeAxis\n     */\n    getSize (domainVal = 0) {\n        let sizeVal = 1;\n        const {\n            value\n        } = this.config();\n        const scale = this.scale();\n        const domain = this.domain() || [1, 1];\n\n        if (!scale || domain[0] === domain[1]) {\n            sizeVal = value;\n        } else {\n            return this._sizeStrategy.range(domainVal, scale, this.domain(), this.uniqueValues());\n        }\n        return sizeVal;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SizeAxis\n     */\n    updateDomain (domain) {\n        if (domain) {\n            const domainFn = this._sizeStrategy.domain;\n\n            const domainInfo = domainFn(domain, this.config().intervals);\n\n            this.domain(domainInfo.domain);\n            this.uniqueValues(domainInfo.uniqueVals);\n\n            this.scale().domain(domainInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","export const DEFAULT_CONFIG = {\n    generator: null,\n    value: 'circle',\n    range: ['circle', 'diamond', 'star', 'cross', 'square', 'wye', 'triangle']\n};\n","export const PROPS = {\n    config: {},\n    domain: {},\n    scale: {},\n    uniqueValues: {},\n    generator: {}\n};\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, getSymbol, generateGetterSetters, mergeRecursive } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SHAPE } from '../enums/constants';\nimport { shapeGenerator } from './helper';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ShapeAxis {\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} params input parameters.\n    * @param {Object | undefined} params.range Type of color scheme.\n    * @memberof ShapeAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(this._config, config);\n\n        this._scale = createScale({\n            type: 'ordinal',\n            range: this._config.range\n        });\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SHAPE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} value\n     *\n     * @memberof ShapeAxis\n     */\n    getShape (value) {\n        if (!this.scale() || !this.domain() || !value) {\n            return this.config().value;\n        }\n\n        if (this._generatedShapes) {\n            return this._generatedShapes[value];\n        }\n\n        const shapeType = this.scale()(value);\n        if (shapeType === 'string') {\n            return getSymbol(shapeType);\n        }\n\n        return shapeType;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof ShapeAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            this.uniqueValues(domain);\n            this.domain(domain);\n            this.scale().domain(domain);\n\n            if (this.config().generator) {\n                this._generatedShapes = shapeGenerator(domain, this.config().generator);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.config().range,\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","/**\n *\n *\n * @param {*} domain\n * @param {*} generatorFn\n *\n */\nexport const shapeGenerator = (domain, generatorFn) => {\n    const generatedShapes = {};\n    domain.forEach((value) => {\n        generatedShapes[value] = generatorFn(value);\n    });\n    return generatedShapes;\n};\n","import * as ScaleType from './enums/scale-type';\n\nconst DATA_TYPES = {\n    DIMENSION: 'dimension',\n    CATEGORICAL: 'categorical',\n    MEASURE: 'measure',\n    TEMPORAL: 'temporal'\n};\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    [DATA_TYPES.DIMENSION]: ScaleType.BAND,\n    [DATA_TYPES.MEASURE]: ScaleType.LINEAR,\n    [DATA_TYPES.TEMPORAL]: ScaleType.TIME\n};\n\n","import { nestCollection } from 'muze-utils';\n\n/**\n * Create multiple datasets from a single dataset by grouping the data using\n * a dimensional field.\n * @param {Array} schema Name and type of fields are stored in schema\n * @param {Array} data Data array\n * @param {Object} config Configuration object\n * @return {Array} Grouped data array\n */\nexport default (schema, data, config) => {\n    const groupBy = config.groupBy instanceof Array ? config.groupBy : [config.groupBy];\n    const groupByIndices = groupBy.map(fieldName => schema.findIndex(d => d.name === fieldName));\n\n    if (groupByIndices.find(d => d === -1) !== undefined) {\n        throw new Error(`Groupby field ${groupBy} not found in schema`);\n    }\n\n    return nestCollection({\n        keys: groupByIndices,\n        data\n    });\n};\n","/**\n * @module Transform\n * This file exports a function that is used to implement\n * the identity transform\n */\n /* eslint no-unused-vars: 0 */\n /**\n  * This function accepts data and returns the data unchanged.\n  * @param {Object} schema The schema.\n  * @param {Array} data The data array.\n  * @param {Object} config The config object.\n  * @return {Array} The unchanged data.\n  */\n function identityTransform (schema, data, config) {\n     return data;\n }\n\n export default identityTransform;\n","/**\n * @module Transform\n * This file exports the transform factory.\n */\nimport * as TransformType from '../enums/transform-type';\nimport identity from '../identity-transform';\nimport group from '../group-transform';\nimport stack from '../stack-transform';\n\n/* istanbul ignore next */\nconst transformMap = {\n    [TransformType.IDENTITY]: identity,\n    [TransformType.GROUP]: group,\n    [TransformType.STACK]: stack\n};\n\n/**\n * This function is used to retirn a transform associated\n * with the given type.\n *\n * @param {string} type The type of the transform.\n * @return {Function} The transform function.\n */\nfunction transformFactory (type) {\n    const transform = transformMap[type];\n    if (typeof transform !== 'function') {\n        throw new Error('Invalid transform type supplied.');\n    }\n    return transform;\n}\n\nexport default transformFactory;\n","/**\n * @module Transform\n * This module exports constants that are used to reference transforms in\n * a consistent manner throughout the project.\n */\n/* eslint one-var: 0 */\n export const IDENTITY = 'identity';\n export const GROUP = 'group';\n export const STACK = 'stack';\n export const FRACTURE = 'fracture';\n","import { stack } from 'muze-utils';\n\nimport group from '../group-transform';\n/*\n    Normalize the data to a form which can be given to d3 stack for stacking the data\n    ['Product', 'Sales', 'Region'],\n    0 ['A', 2000, 'North'],\n    1 ['A', 3000, 'South'],\n    2 ['B', 3000, 'South'],\n    3 ['B', 2000, 'North'],\n    4 ['C', 3000, 'South'],\n    5 ['C', 2000, 'North']\n            |\n            |\n    ['Product', 'North', 'South'],\n    ['A', 2000, 3000],\n    ['B', 2000, 3000],\n    ['C', 2000, 3000]\n*/\n// eslint-disable-next-line require-jsdoc\nconst normalizeData = (data, schema, valueField, uniqueField, groupBy) => {\n    const groupedData = group(schema, data, {\n        groupBy: uniqueField\n    });\n    const uniqueFieldIndex = schema.findIndex(d => d.name === uniqueField);\n    const valueFieldIndex = schema.findIndex(d => d.name === valueField);\n    const seriesKeyIndex = schema.findIndex(d => d.name === groupBy);\n    const seriesKeys = data.map(d => d[seriesKeyIndex]).filter((item, pos, arr) => arr.indexOf(item) === pos).sort();\n    const fieldNames = schema.reduce((acc, obj, i) => {\n        acc[i] = obj.name;\n        return acc;\n    }, {});\n    const dataArr = groupedData.map((arr) => {\n        const tuples = {};\n        const rowObj = arr.values.reduce((acc, row) => {\n            acc = row.reduce((obj, value, i) => {\n                if (i === seriesKeyIndex) {\n                    obj[value] = row[valueFieldIndex];\n                    tuples[value] = row;\n                } else if (i !== valueFieldIndex) {\n                    obj[fieldNames[i]] = value;\n                }\n                return obj;\n            }, acc);\n            return acc;\n        }, {});\n        rowObj._tuple = tuples;\n            // Set missing values field to zero value\n        seriesKeys.forEach((seriesKey) => {\n            if (rowObj[seriesKey] === undefined) {\n                rowObj[seriesKey] = 0;\n                const newArr = new Array(arr.values[0].length);\n                newArr[uniqueFieldIndex] = arr.key;\n                newArr[seriesKeyIndex] = seriesKey;\n                rowObj._tuple[seriesKey] = newArr;\n            }\n        });\n        return rowObj;\n    });\n\n    return {\n        data: dataArr,\n        keys: seriesKeys\n    };\n};\n/**\n * Generate a stacked representation of data\n * @param {Array} schema schema Array\n * @param {Array} data data array\n * @param {Object} config Configuration object\n * @return {Array} stacked data\n */\nexport default (schema, data, config) => {\n    const uniqueField = config.uniqueField;\n    const valueField = config.value;\n    const groupBy = config.groupBy;\n    const sort = config.sort || 'descending';\n    const normalizedData = normalizeData(data, schema, valueField, uniqueField, groupBy);\n    const keys = normalizedData.keys;\n    const map = {};\n    const orderBy = config.orderBy;\n    const orderIndex = schema.findIndex(d => d.name === orderBy);\n    const groupByIndex = schema.findIndex(d => d.name === groupBy);\n    if (orderIndex !== -1) {\n        keys.forEach((key) => {\n            const name = data.find(d => d[groupByIndex] === key);\n            map[key] = name[orderIndex];\n        });\n        normalizedData.keys.sort((a, b) => map[a].localeCompare(map[b]));\n    }\n\n    const stackData = stack({\n        keys: normalizedData.keys,\n        offset: config.offset || 'diverging',\n        order: sort,\n        data: normalizedData.data\n    });\n    stackData.forEach((seriesData) => {\n        seriesData.forEach((dataObj) => {\n            dataObj.data = dataObj.data._tuple[seriesData.key];\n        });\n    });\n    return stackData;\n};\n\n","import {\n    FieldType,\n    getDomainFromData,\n    setStyles,\n    easeFns,\n    selectElement,\n    DimensionSubtype,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { transformFactory } from '@chartshq/transform';\nimport { IDENTITY, STACK, GROUP, COLOR, SHAPE, SIZE, ENCODING, AGG_FN_SUM } from '../enums/constants';\n\nconst BAND = ScaleType.BAND;\n\nexport const getLayerColor = ({ datum, index }, { colorEncoding, colorAxis, colorFieldIndex }) => {\n    let rawColor = '';\n    let color = '';\n    if (colorEncoding && colorEncoding.value instanceof Function) {\n        color = colorEncoding.value(datum, index);\n        rawColor = colorEncoding.value(datum, index);\n    } else {\n        rawColor = colorAxis.getRawColor(datum._data[colorFieldIndex]);\n        color = colorAxis.getHslString(rawColor);\n    }\n    return { color, rawColor };\n};\n\nconst transfromColor = (colorAxis, datum, styleType, intensity) => {\n    datum.meta.stateColor[styleType] = datum.meta.stateColor[styleType] || datum.meta.originalColor;\n    const fillColorInfo = colorAxis.transformColor(datum.meta.stateColor[styleType], intensity);\n    datum.meta.stateColor[styleType] = fillColorInfo.hsla;\n\n    return fillColorInfo;\n};\n\nexport const applyInteractionStyle = (context, selectionSet, interactionStyles, config) => {\n    const elements = context.getPlotElementsFromSet(selectionSet);\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const apply = config.apply;\n    const interactionType = config.interactionType;\n    interactionStyles.forEach((style) => {\n        const styleType = style.type;\n        elements.style(styleType, ((d) => {\n            const { colorTransform, stateColor, originalColor } = d.meta;\n            colorTransform[interactionType] = colorTransform[interactionType] || {};\n            if (apply && !colorTransform[interactionType][styleType]) {\n                // fade selections\n                colorTransform[interactionType][styleType] = style.intensity;\n                const color = transfromColor(colorAxis, d, styleType, style.intensity).color;\n                return color;\n            }\n            if (!apply && colorTransform[interactionType][styleType]) {\n                 // unfade selections\n                colorTransform[interactionType][styleType] = null;\n                return transfromColor(colorAxis, d, styleType, style.intensity.map(e => -e)).color;\n            }\n            const [h, s, l, a] = stateColor[styleType] ? stateColor[styleType] : originalColor;\n            return `hsla(${h * 360},${s * 100}%,${l * 100}%, ${a || 1})`;\n        }));\n    });\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const fadeUnfadeSelection = (context, selectionSet, hasFaded, interaction) => {\n    const interactionConfig = { interaction, apply: hasFaded };\n    applyInteractionStyle(context, selectionSet, 'fade', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const focusUnfocusSelection = (context, selectionSet, isFocussed, interaction) => {\n    const interactionConfig = { interaction, apply: isFocussed };\n    applyInteractionStyle(context, selectionSet, 'focus', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} axes\n *\n */\nexport const getAxesScales = (axes) => {\n    const [xAxis, yAxis] = [ENCODING.X, ENCODING.Y].map(e => axes[e]);\n    const [xScale, yScale] = [xAxis, yAxis].map(e => e && e.scale());\n    return {\n        xAxis,\n        yAxis,\n        xScale,\n        yScale\n    };\n};\n\n/**\n *\n *\n * @param {*} encoding\n * @param {*} fieldsConfig\n *\n */\nexport const getEncodingFieldInf = (encoding, fieldsConfig) => {\n    const [xField, yField, x0Field, y0Field, colorField, shapeField, sizeField] =\n        [ENCODING.X, ENCODING.Y, ENCODING.X0, ENCODING.Y0, COLOR, SHAPE, SIZE].map(e => encoding[e] &&\n            encoding[e].field);\n\n    const [xFieldType, yFieldType] = [xField, yField, x0Field, y0Field].map(e => fieldsConfig[e] &&\n        fieldsConfig[e].def.type);\n\n    const [xFieldSubType, yFieldSubType] = [xField, yField].map(e => fieldsConfig[e] && (fieldsConfig[e].def.subtype ||\n        fieldsConfig[e].def.type));\n\n    const [xFieldIndex, yFieldIndex, x0FieldIndex, y0FieldIndex] = [xField, yField, x0Field, y0Field]\n        .map(e => fieldsConfig[e] && fieldsConfig[e].index);\n\n    return {\n        xField,\n        yField,\n        colorField,\n        shapeField,\n        sizeField,\n        x0Field,\n        y0Field,\n        xFieldType,\n        yFieldType,\n        xFieldSubType,\n        yFieldSubType,\n        xFieldIndex,\n        yFieldIndex,\n        x0FieldIndex,\n        y0FieldIndex\n    };\n};\n\n/**\n * Retrieves the nearest groupBy aggFn function in its derivation cycle for the specified field.\n *\n * @param {DataModel} dataModel - The target DataModel instance.\n * @param {string} fieldName - The target field name.\n * @return {string} Returns the aggFn name.\n */\nexport const retrieveGroupByAggFn = (dataModel, fieldName) => {\n    let next = dataModel;\n    do {\n        const derivations = next.getDerivations();\n        if (derivations && derivations.length >= 1) {\n            const latestDerivation = derivations[derivations.length - 1];\n            if (latestDerivation.criteria && typeof latestDerivation.criteria[fieldName] === 'string') {\n                return latestDerivation.criteria[fieldName];\n            }\n        }\n    } while (next = next.getParent());\n\n    return null;\n};\n\n/**\n *\n *\n * @param {*} layerConfig\n * @param {*} fieldsConfig\n *\n */\nexport const getValidTransform = (layerConfig, dataModel, encodingFieldInf) => {\n    let transformType;\n    const {\n        transform\n    } = layerConfig;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const groupByField = transform.groupBy;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const groupByFieldMeasure = fieldsConfig[groupByField] && fieldsConfig[groupByField].def.type === FieldType.MEASURE;\n    transformType = transform.type;\n    if (!xField || !yField || groupByFieldMeasure || !groupByField || xFieldType === FieldType.DIMENSION &&\n        yFieldType === FieldType.DIMENSION) {\n        transformType = IDENTITY;\n    } else if (groupByField && xFieldType !== yFieldType) {\n        const measureField = xFieldType === FieldType.MEASURE ? xField : yField;\n        const aggFn = retrieveGroupByAggFn(dataModel, measureField);\n        if (aggFn === AGG_FN_SUM) {\n            transformType = STACK;\n        } else {\n            transformType = GROUP;\n        }\n    }\n    return transformType;\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} config\n * @param {*} transformType\n *\n */\nexport const transformData = (dataModel, config, transformType, encodingFieldInf) => {\n    const data = dataModel.getData({ withUid: true });\n    const schema = data.schema;\n    const transform = config.transform;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const uniqueField = xFieldType === FieldType.MEASURE ? yField : xField;\n\n    return transformFactory(transformType)(schema, data.data, {\n        groupBy: transform.groupBy,\n        uniqueField,\n        sort: transform.sort || 'none',\n        offset: transform.offset,\n        orderBy: transform.orderBy,\n        value: yFieldType === FieldType.MEASURE ? yField : xField\n    }, data.uids);\n};\n\nexport const getIndividualClassName = (d, i, data, context) => {\n    const className = context.config().individualClassName;\n    let classNameStr = '';\n    if (className instanceof Function) {\n        classNameStr = className(d, i, data, context);\n    }\n    return classNameStr;\n};\n\n/*\n * This method resolves the x, y, x0 and y0 values from the transformed data.\n * It also checks the type of transformed data for example, if it is a stacked data\n * then it fetches the y and y0 values from the stacked data.\n * @param {Array.<Array>} transformedData transformed data\n * @param {Object} fieldsConfig field definitions\n * @param {string} transformType type of transformed data - stack, group or identity.\n * @return {Array.<Object>} Normalized data\n*/\nexport const getNormalizedData = (transformedData, fieldsConfig, encodingFieldInf, transformType) => {\n    const transformedDataArr = transformType === IDENTITY ? [transformedData] : transformedData;\n    const {\n        xFieldType,\n        xFieldIndex,\n        yFieldIndex,\n        x0FieldIndex,\n        y0FieldIndex\n    } = encodingFieldInf;\n    const fieldsLen = Object.keys(fieldsConfig).length;\n    /**\n     * Returns normalized data from transformed data. It recursively traverses through\n     * the transformed data if there it is nested.\n     */\n    return transformedDataArr.map((data) => {\n        const values = transformType === GROUP ? data.values : data;\n        return values.map((d) => {\n            let pointObj = {};\n            let tuple;\n            if (transformType === STACK) {\n                tuple = d.data || [];\n                let y;\n                let y0;\n                let x;\n                let x0;\n                if (d[1] >= d[0]) {\n                    y = x0 = d[1];\n                    x = y0 = d[0];\n                } else {\n                    y = x0 = d[0];\n                    x = y0 = d[1];\n                }\n\n                pointObj = xFieldType === FieldType.MEASURE ? {\n                    x,\n                    x0,\n                    y: tuple[yFieldIndex],\n                    y0: tuple[yFieldIndex]\n                } : {\n                    x: tuple[xFieldIndex],\n                    x0: tuple[xFieldIndex],\n                    y,\n                    y0\n                };\n                pointObj._data = tuple;\n                pointObj._id = tuple[fieldsLen];\n            } else {\n                pointObj = {\n                    x: d[xFieldIndex],\n                    y: d[yFieldIndex],\n                    x0: d[x0FieldIndex],\n                    y0: d[y0FieldIndex]\n                };\n                pointObj._data = d;\n                pointObj._id = d[fieldsLen];\n            }\n            return pointObj;\n        });\n    }).filter(d => d.length);\n};\n\nexport const calculateDomainFromData = (data, encodingFieldInf, transformType) => {\n    const {\n        xFieldSubType,\n        yFieldSubType,\n        xField,\n        yField,\n        x0Field,\n        y0Field\n    } = encodingFieldInf;\n    const domains = {};\n    const yEnc = ENCODING.Y;\n    const xEnc = ENCODING.X;\n    if (xField) {\n        domains.x = getDomainFromData(data, x0Field || transformType === STACK ? [xEnc, ENCODING.X0] : [xEnc, xEnc],\n            xFieldSubType);\n    }\n    if (yField) {\n        domains.y = getDomainFromData(data, y0Field || transformType === STACK ? [ENCODING.Y0, ENCODING.Y] :\n            [yEnc, yEnc], yFieldSubType);\n    }\n\n    return domains;\n};\n\nexport const attachDataToVoronoi = (voronoi, points) => {\n    voronoi.data([].concat(...points).filter(d => d._id !== undefined).map((d) => {\n        const point = d.update;\n        return {\n            x: point.x,\n            y: point.y,\n            data: d\n        };\n    }));\n};\n\n/**\n *\n *\n * @param {*} target\n * @param {*} styles\n * @param {*} remove\n */\nexport const updateStyle = (target, styles, remove) => {\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            target.style(key, remove ? null : styles[key]);\n        }\n    }\n};\n\n/**\n *\n *\n * @param {*} mount\n * @param {*} context\n */\nexport const animateGroup = (mount, context) => {\n    let groupTransition;\n    let update;\n    const { transition, groupAnimateStyle } = context;\n    const { duration, effect, disabled } = transition;\n    if (groupAnimateStyle) {\n        setStyles(mount.node(), groupAnimateStyle.enter);\n        update = groupAnimateStyle.update;\n        if (!disabled) {\n            groupTransition = mount.transition()\n                .ease(easeFns[effect])\n                .duration(duration)\n                .on('end', function () {\n                    updateStyle(selectElement(this), update, true);\n                });\n        } else {\n            groupTransition = mount;\n        }\n        updateStyle(groupTransition, update);\n    }\n};\n\nexport const positionPoints = (context, points) => {\n    const positioner = context.encodingTransform();\n    if (positioner) {\n        return positioner(points, context, { smartLabel: context._dependencies.smartLabel });\n    }\n    return points;\n};\n\n/**\n  * Gets the width of each group. It gets the width from axis if it is available for\n  * example when the scale is nominal else it calculates the width from the\n  * range of the axis and number of data points.\n  *\n  * @param {SimpleAxis} axis instance of axis\n  * @param {number} minDiff Minimum difference between data points\n  * @return {number} width of each bar\n  * @private\n*/\nexport const getGroupSpan = (axis, minDiff) => {\n    let groupSpan;\n    const width = axis.getUnitWidth();\n    const scale = axis.scale();\n    const range = scale.range();\n    const domain = scale.domain();\n    !width ? groupSpan = (Math.abs(range[1] - range[0]) / Math.abs(domain[1] - domain[0])) * minDiff :\n        (groupSpan = width);\n\n    return groupSpan;\n};\n\nexport const getPlotMeasurement = (context, dimensionalValues) => {\n    const fieldInfo = context.encodingFieldsInf();\n    const axes = context.axes();\n    const transformType = context.transformType();\n    const config = context.config();\n    const bandScale = context._bandScale;\n\n    return ['x', 'y'].map((type) => {\n        let span = 0;\n        let groupSpan = 0;\n        let padding = 0;\n        let offsetValues = [];\n        if (fieldInfo[`${type}FieldType`] === FieldType.DIMENSION) {\n            let actualGroupWidth;\n            const isTemporal = fieldInfo[`${type}FieldSubType`] === DimensionSubtype.TEMPORAL;\n            const timeDiff = isTemporal ? context.dataProps().timeDiffs[type] : 0;\n            const axis = axes[type];\n            const pad = config[`pad${type.toUpperCase()}`];\n            const innerPadding = config.innerPadding;\n            const keys = dimensionalValues;\n            const scale = axis.scale();\n            groupSpan = getGroupSpan(axis, timeDiff);\n            const isAxisBandScale = axis.constructor.type() === BAND;\n            const axisPadding = axis.config().padding;\n            // If it is a grouped bar then the width of each bar in a grouping is retrieved from\n            // a band scale. The band scale will have range equal to width of one group of bars and\n            // the domain is set to series keys.\n            if (transformType === 'group') {\n                const groupPadding = isAxisBandScale ? 0 : axisPadding * groupSpan / 2;\n                bandScale.range([groupPadding, groupSpan - groupPadding]).domain(keys).paddingInner(innerPadding);\n                span = bandScale.bandwidth();\n                actualGroupWidth = groupSpan - (isAxisBandScale ? 0 : axisPadding * groupSpan);\n                offsetValues = keys.map(key => bandScale(key) - (isAxisBandScale ? 0 : (groupSpan / 2)));\n            } else if (pad !== undefined) {\n                let offset;\n                if (isAxisBandScale) {\n                    const step = scale.step();\n                    offset = scale.padding() * step;\n                    span = scale.bandwidth() + offset;\n                } else {\n                    span = groupSpan;\n                }\n                offsetValues = keys.map(() => (isAxisBandScale ? -(offset / 2) : -(span / 2)));\n            } else {\n                padding = isAxisBandScale ? 0 : axisPadding * groupSpan;\n                span = groupSpan - padding;\n                actualGroupWidth = span;\n                offsetValues = keys.map(() => (isAxisBandScale ? 0 : -(span / 2)));\n            }\n\n            groupSpan = actualGroupWidth;\n            padding = isAxisBandScale ? axisPadding * axis.scale().step() : axisPadding * groupSpan;\n        }\n\n        return {\n            span,\n            offsetValues,\n            groupSpan,\n            padding\n        };\n    });\n};\n\nexport const initializeGlobalState = (context) => {\n    const store = context.store();\n    const globalState = context.constructor.getState()[0];\n    const namespace = context.metaInf().namespace;\n    for (const prop in globalState) {\n        store.append(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${prop}`, {\n            [namespace]: null\n        });\n    }\n};\n","import { CommonProps, STATE_NAMESPACES } from 'muze-utils';\nimport { getValidTransform, getEncodingFieldInf } from '../helpers';\nimport * as PROPS from '../enums/props';\n\nconst renderLayer = (context) => {\n    const mount = context.mount();\n    if (mount) {\n        context.render(mount);\n        context.dependencies().throwback.commit(CommonProps.ON_LAYER_DRAW, true);\n    }\n};\n\nexport const listenerMap = (context, ns) => [\n    {\n        props: [`${ns.local}.${PROPS.DATA}`],\n        listener: ([, data]) => {\n            const config = context.config();\n            const encodingValue = config.encoding;\n            if (data && encodingValue) {\n                const fieldsConfig = data.getFieldsConfig();\n                const encodingFieldsInf = getEncodingFieldInf(encodingValue, fieldsConfig);\n                context.encodingFieldsInf(encodingFieldsInf);\n                context.transformType(getValidTransform(config, data, encodingFieldsInf));\n                context._transformedData = context.getTransformedData(data, config,\n                    context.transformType(), encodingFieldsInf);\n                context._normalizedData = context.getNormalizedData(context._transformedData, fieldsConfig);\n                const domain = context.calculateDomainFromData(context._normalizedData, context.encodingFieldsInf(),\n                    context.data().getFieldsConfig());\n                context._domain = domain;\n                !context._updateLock && context.domain(domain);\n            }\n        },\n        type: 'registerImmediateListener'\n    },\n    {\n        props: [`${ns.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            const calculateDomain = config.calculateDomain;\n            const props = context.getRenderProps();\n            const store = context.store();\n            const namespaceInf = {\n                namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${context.metaInf().namespace}`,\n                key: 'renderListener'\n            };\n            store.unsubscribe(namespaceInf);\n            if (calculateDomain === false) {\n                props.push(`${ns.local}.${PROPS.DATA}`);\n            }\n            store.registerChangeListener(props,\n                () => {\n                    renderLayer(context);\n                }, false, namespaceInf);\n        },\n        type: 'registerImmediateListener'\n    }\n];\n\n","export const DATA = 'data';\nexport const CONFIG = 'config';\nexport const MEASUREMENT = 'measurement';\nexport const DOMAIN = 'domain';\nexport const MOUNT = 'mount';\n","import { mergeRecursive } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nexport const defaultOptions = {\n    [PROPS.CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig, context) => {\n                const constructor = context.constructor;\n                const newConf = mergeRecursive({}, constructor.defaultConfig());\n                return constructor.defaultPolicy(newConf, config);\n            }\n        }\n    },\n    [PROPS.DATA]: {\n        value: null,\n        meta: {\n            preset: (data, context) => {\n                if (context._cacheEnabled) {\n                    context._cachedData.push(data);\n                } else {\n                    context._cachedData = [data];\n                }\n            }\n        }\n    }\n    // [PROPS.MOUNT]: {\n    //     value: null\n    // },\n    // [PROPS.AXES]: {\n    //     value: null\n    // },\n    // [PROPS.MEASUREMENT]: {\n    //     value: null\n    // }\n};\n","import {\n    getUniqueId,\n    mergeRecursive,\n    FieldType,\n    selectElement,\n    ReservedFields,\n    registerListeners,\n    transactor,\n    DataModel,\n    clone,\n    generateGetterSetters,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { SimpleLayer } from '../simple-layer';\nimport * as PROPS from '../enums/props';\nimport { props } from './props';\nimport {\n    transformData,\n    calculateDomainFromData,\n    getNormalizedData,\n    applyInteractionStyle,\n    initializeGlobalState\n} from '../helpers';\nimport { listenerMap } from './listener-map';\nimport { defaultOptions } from './default-options';\n\n/**\n * An abstract class which gives definition of common layer functionality like\n * - transforming data for various modes. Supported modes: identity, group and stack.\n * - calculating data domain\n * - linking dependent layers\n * - merging policy of configuration\n * - interaction sideffect helpers\n * - retrieving dom elements from data using id\n * - retrieving the physical dimensions of marks\n * - disposing layer\n *\n * Every layer has to extend base layer and give concrete definition.\n * This layer does not have any default visual. A new layer has to define the logic of `render` for rendering the\n * visuals\n *\n * @public\n * @class\n * @module BaseLayer\n */\nexport default class BaseLayer extends SimpleLayer {\n\n    /**\n     * Creates a layer using a configuration and data.\n     *\n     * @public\n     * @constructor\n     * @param {DataModel} data Instance of DataModel to be used. This DataModel instance serves as the data for a layer.\n     * @param {Object} axes Axes instances to be used for rendering the layer. Axes are used for mapping data from\n     *      value to px.\n     * @param {SimpleAxis} axes.x X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {SimpleAxis} axes.y X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {ColorAxis} axes.color Axis for coloring a layer using color interpolators\n     * @param {ShapeAxis} axes.shape Axis for providing a shape\n     * @param {SizeAxis} axes.size Axis for determining size of a mark using size interpolator\n     * @param {LayerConfig} config Configuration of the layer\n     * @param {Object} dependencies Dependencies of the layer\n     * @param {SmartLabel} dependencies.smartLabel Smartlabel singleton instance\n     */\n    constructor (data, axes, config, dependencies = {}) {\n        super();\n\n        generateGetterSetters(this, props);\n        this.data(data);\n        this.axes(axes);\n        this.config(config);\n        this.alias(this.constructor.formalName() + getUniqueId());\n        this.dependencies(dependencies);\n        this._points = [];\n        this._cachedData = [];\n        this._id = getUniqueId();\n        this._measurement = {};\n        this._animationDonePromises = [];\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            {\n                config: {},\n                data: {}\n            }\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            const localNs = `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            initializeGlobalState(this);\n            const store = this.store();\n            store.append(`${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}`, {\n                [metaInf.namespace]: null\n            });\n\n            transactor(this, defaultOptions, store.model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE\n            }, {\n                unitRowIndex: metaInf.unitRowIndex,\n                unitColIndex: metaInf.unitColIndex\n            });\n            return this;\n        }\n        return this._store;\n    }\n\n    domain (...dom) {\n        const prop = `${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`;\n        if (dom.length) {\n            this.store().commit(prop, dom[0]);\n            return this;\n        }\n        return this.store().get(prop);\n    }\n\n    /**\n     * Creates a layer instance\n     * @return {BaseLayer} Instance of a layer\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Default configuration of the layer. This configuration gets merged to the user passed configuration using a\n     * plolicy. Base layer only returns part of configuraion, any layer overridding base layer should return its own\n     * configuration.\n     *\n     * @public\n     * @static\n     *\n     * @return {Object} Default configuration\n     */\n    static defaultConfig () {\n        return {\n            transform: {\n                type: 'identity'\n            }\n        };\n    }\n\n    /**\n     * Policy defines how user config gets merged to default config. The default policy here does a deep copy\n     * operation.\n     * Any policy which does more than deep copying should define the policy as a static member.\n     *\n     * @static\n     * @public\n     *\n     * @param {LayerConfig} conf Configuration with which the user config will be merged\n     * @param {LayerConfig} userConf Configuration given by the user\n     *\n     * @return {LayerConfig} Merged layer configuration\n     */\n    static defaultPolicy (conf, userConf) {\n        return mergeRecursive(conf, userConf);\n    }\n\n    /**\n     * Determines a name for a layer. This name of the layer is used in the input data to refer to this layer.\n     * ```\n     *  .layers([\n     *      mark: 'bar',\n     *      encoding: { ... }\n     *  ])\n     * ```\n     *\n     * @static\n     * @public\n     *\n     * @return {string} name of layer\n     */\n    static formalName () {\n        return 'base';\n    }\n\n    encodingFieldsInf (...fieldsInf) {\n        if (fieldsInf.length) {\n            this._encodingFieldsInf = fieldsInf[0];\n            return this;\n        }\n        return this._encodingFieldsInf;\n    }\n\n    encodingTransform (...encodingTransform) {\n        if (encodingTransform.length) {\n            this._encodingTransform = encodingTransform[0];\n            return this;\n        }\n        return this._encodingTransform;\n    }\n\n    /**\n     * Provides a alias for a layer. Like it's possible to have same layer (like bar) multiple times, but among multiple\n     * layers of same type if one layer has to be referred, alias is used. If no alias is given then `formalName` is set\n     * as the alias name.\n     *\n     *\n     * If used as setter\n     * @param  {string} alias Name of the alias\n     * @return {BaseLayer} Instance of current base layer\n     *\n     * If used as getter\n     * @return {string} Alias of the current layer\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            this._alias = params[0];\n            return this;\n        }\n        return this._alias || this.constructor.formalName();\n    }\n\n    dependencies (...params) {\n        if (params.length) {\n            this._dependencies = params[0];\n            return this;\n        }\n        return this._dependencies;\n    }\n\n    enableCaching () {\n        this._cacheEnabled = true;\n        return this;\n    }\n\n    clearCaching () {\n        this._cacheEnabled = false;\n        return this.data(this._cachedData[0]);\n    }\n\n    /**\n     * Serialize the schema. Merge config is used for serialization.\n     *\n     * @public\n     *\n     * @return {LayerConfig} Serialized schema\n     */\n    serialize () {\n        return this.config();\n    }\n\n    /**\n     * Returns the unique identifier of this layer. Id is auto generated during the creation proceess of a schema.\n     *\n     * @public\n     *\n     * @return {string} id of the layer\n     */\n    id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the transformed data based on given transform type.\n     * It first gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of DataModel\n     * @param {Object} config Configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     */\n    getTransformedData (dataModel, config, transformType, encodingFieldsInf) {\n        return transformData(dataModel, config, transformType, encodingFieldsInf);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a categorical field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @param {Object} fieldsConfig Configuration of fields\n     * @return {Array} Domain values array.\n     */\n    calculateDomainFromData (data) {\n        let domains = {};\n        const isEmpty = this.data().isEmpty();\n\n        if (!isEmpty) {\n            domains = calculateDomainFromData(data, this.encodingFieldsInf(), this.transformType());\n        }\n        return domains;\n    }\n\n    static shouldDrawAnchors () {\n        return false;\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getDataDomain (encodingType) {\n        const domains = this.store()\n            .get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`);\n        return encodingType !== undefined ? domains[encodingType] || [] : domains;\n    }\n\n    /**\n     * Normalizes the transformed data and returns it.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getNormalizedData (transformedData, fieldsConfig) {\n        return getNormalizedData(transformedData, fieldsConfig, this.encodingFieldsInf(), this.transformType());\n    }\n\n    /**\n     * Gets the nearest point closest to the given x and y coordinate. If no nearest point is found, then it returns\n     * null.\n     *\n     * @public\n     *\n     * @param {number} x X Coordinate.\n     * @param {number} y Y Coordinate.\n     *\n     * @return {Object} Information of the nearest point.\n     * ```\n     *      {\n     *          // id property contains the field names and their corresponding values in a 2d array. This is the data\n     *          // associated with the nearest point.\n     *          id: // Example data: [['Origin'], ['USA']],\n     *          dimensions: // Physical dimensions of the point.\n     *          layerId: // Id of the layer instance.\n     *      }\n     * ```\n     */\n    getNearestPoint () {\n        return null;\n    }\n\n    applyInteractionStyle (interactionType, selectionSet, apply, styles) {\n        const interactionConfig = this.config().interaction || {};\n\n        let interactionStyles = interactionConfig[interactionType];\n        interactionStyles = styles || interactionStyles;\n        if (interactionStyles) {\n            applyInteractionStyle(this, selectionSet, interactionStyles, {\n                apply,\n                interactionType\n            });\n        }\n    }\n\n    disableUpdate () {\n        this._updateLock = true;\n        return this;\n    }\n\n    enableUpdate () {\n        this._updateLock = false;\n        return this;\n    }\n    /**\n     *\n     *\n     *\n     * @memberof BaseLayer\n     */\n    transformType (...transformType) {\n        if (transformType.length) {\n            this._transformType = transformType[0];\n            return this;\n        }\n        return this._transformType;\n    }\n\n    /**\n     * Renders the layer\n     * @return {BaseLayer} Instance of the layer.\n     */\n    render () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BaseLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Disposes the entire layer.\n     *\n     * @return {BaseLayer} Instance of layer.\n     */\n    remove () {\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     * Stores point in an object with key as the categorical value or temporal value\n     *\n     * @param {string} key categorical value or temporal value\n     * @param {Object} data Information of the data point\n     * @return {BarLayer} Instance of bar layer\n     */\n    cachePoint (key, data) {\n        if (key === null) {\n            return this;\n        }\n        const pointMap = this._pointMap;\n        !pointMap[key] && (pointMap[key] = []);\n        pointMap[key].push(data);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} dataProps\n     *\n     * @memberof BaseLayer\n     */\n    dataProps (...dataProps) {\n        if (dataProps.length) {\n            this._dataProps = dataProps[0];\n            return this;\n        }\n        return this._dataProps;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} id\n     *\n     * @memberof BaseLayer\n     */\n    getIdentifiersFromData (data) {\n        const schema = this.data().getData().schema;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const identifiers = [[], []];\n        const {\n                xFieldType,\n                yFieldType,\n                xField,\n                yField\n            } = this.encodingFieldsInf();\n\n        const [xMeasure, yMeasure] = [xFieldType, yFieldType].map(type => type === FieldType.MEASURE);\n        schema.forEach((d, i) => {\n            const name = d.name;\n            if (fieldsConfig[name].def.type === FieldType.DIMENSION) {\n                identifiers[0].push(name);\n                identifiers[1].push(data[i]);\n            }\n        });\n\n        if (xMeasure && yMeasure) {\n            const xMeasureIndex = fieldsConfig[xField].index;\n            const yMeasureIndex = fieldsConfig[yField].index;\n            identifiers[0].push(...[xField, yField]);\n            identifiers[1].push(...[data[xMeasureIndex], data[yMeasureIndex]]);\n        }\n        return identifiers;\n    }\n\n    getPlotSpan () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    getPlotPadding () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    /**\n     * Returns the information of the marks corresponding to the supplied identifiers. Identifiers are a set of field\n     * names and their corresponding values in an array. It can also be an instance of datamodel.\n     *\n     * For example,\n     * ```\n     *  const identifiers = [\n     *      ['Origin', 'Cylinders'],\n     *      ['USA', '8']\n     *  ];\n     *  const points = barLayer.getPointsFromIdentifiers(identifiers);\n     * ```\n     * @public\n     * @param {Array|DataModel} identifiers Identifiers of the marks.\n     * @param {Object} config Optional configuration which describes how to get the information.\n     * @param {boolean} config.getAllAttrs If true, then returns all the information of the points, else returns only\n     * the positions of the points.\n     * @param {boolean} config.getBBox If true, then returns the bounding box of all the marks.\n     *\n     * @return {Array} Array of points contains\n     */\n    getPointsFromIdentifiers (identifiers, config = {}) {\n        const getAllAttrs = config.getAllAttrs;\n        const getBBox = config.getBBox;\n        if (!this.data()) {\n            return [];\n        }\n        let fieldNames;\n        let values;\n        if (identifiers instanceof DataModel) {\n            const dataObj = identifiers.getData();\n            fieldNames = dataObj.schema.map(d => d.name);\n            values = dataObj.data;\n        } else {\n            fieldNames = identifiers[0];\n            values = identifiers.slice(1, identifiers.length);\n        }\n\n        const points = this._points;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPoints = [].concat(...points).filter((point) => {\n            const { _data, _id } = point;\n\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === _data[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === _id) !== -1;\n                } return true;\n            });\n        });\n        return getAllAttrs ? filteredPoints : filteredPoints.map((d) => {\n            const obj = clone(d);\n            if (getBBox) {\n                const update = obj.update || obj;\n                if (obj.size !== undefined) {\n                    const sizeVal = Math.sqrt(obj.size / Math.PI) * 2;\n                    update.width = sizeVal;\n                    update.height = sizeVal;\n                    update.x -= sizeVal / 2;\n                    update.y -= sizeVal / 2;\n                } else {\n                    if (update.width === undefined) {\n                        update.width = 2;\n                    }\n                    if (update.height === undefined) {\n                        update.height = 2;\n                    }\n                }\n            }\n\n            return obj.update || obj;\n        }).sort((a, b) => a.y - b.y);\n    }\n\n    getTransformedDataFromIdentifiers (identifiers) {\n        const { data: identifierData, schema: identifierSchema } = identifiers.getData();\n        const normalizedData = this._normalizedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            yField,\n            xField,\n            yFieldType,\n            xFieldType\n        } = this.encodingFieldsInf();\n        let measureIndex;\n        let enc;\n        if (xFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[xField].index;\n            enc = 'x';\n        } else if (yFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[yField].index;\n            enc = 'y';\n        }\n\n        const transformedData = [];\n        normalizedData.forEach((dataArr) => {\n            dataArr.forEach((dataObj) => {\n                const tupleArr = dataObj._data;\n                const exist = identifierSchema.every((obj, i) =>\n                    identifierData.findIndex(d => tupleArr[fieldsConfig[obj.name].index] === d[i]) !== -1);\n                if (exist) {\n                    const transformedVal = dataObj[enc];\n                    const row = dataObj._data;\n                    const tuple = {};\n                    for (const key in fieldsConfig) {\n                        const index = fieldsConfig[key].index;\n                        tuple[key] = row[index];\n                        if (index === measureIndex) {\n                            tuple[key] = transformedVal;\n                        }\n                    }\n                    transformedData.push(tuple);\n                }\n            });\n        });\n\n        return [transformedData, this.data().getData().schema];\n    }\n\n    /**\n     * Returns the dom elements associated with the supplied set of row ids.\n     * Each element in the layer is mapped with a row of the datamodel. When given an array of row ids, it returns all\n     * the elements which is mapped with those row ids.\n     *\n     * @public\n     * @param {Array} set Array of row ids\n     *\n     * @return {Selection} D3 Selection of dom elements.\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(data =>\n            (data ? set.indexOf(data._id) !== -1 : false));\n    }\n\n    /**\n     * Notifies when all animations/transitions of the layer are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n\n    getRenderProps () {\n        const metaInf = this.metaInf();\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.unitRowIndex}0`,\n            `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.unitColIndex}0`];\n    }\n}\n","import {\n    selectElement,\n    makeElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\nimport { updateStyle } from '../../helpers';\n\nconst line = Symbols.line;\n\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nexport const drawLine = (context) => {\n    let filteredPoints;\n    const { layer, container, points, interpolate, connectNullData, className, style, transition } = context;\n    const mount = selectElement(container).attr('class', className);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const linepath = line()\n                .curve(curveInterpolatorFn)\n                .x(d => d.update.x)\n                .y(d => d.update.y)\n                .defined(d => d.update.y !== null);\n\n    filteredPoints = points;\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n\n    updateStyle(mount, style);\n    let element = makeElement(mount, 'path', [1]);\n    element.classed(points[0].className, true);\n    if (!transition.disabled) {\n        element = element.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    }\n    element.attr('d', linepath(filteredPoints))\n                    .style('fill-opacity', 0);\n    return element;\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-line',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: 'group'\n    },\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    nearestPointThreshold: 20,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n\n","import {\n    Voronoi,\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    FieldType,\n    getObjProp\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawLine } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    animateGroup,\n    getLayerColor,\n    positionPoints,\n    getIndividualClassName\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to render straight or smoothed line paths. The mark type of this layer is ```line```.\n *\n * @public\n *\n * @class\n * @module LineLayer\n * @extends BaseLayer\n */\nexport default class LineLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of LineLayer.\n     * @param {*} args\n     * @memberof LineLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof LineLayer\n     */\n    static formalName () {\n        return 'line';\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof LineLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Default configuration of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof LineLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField && !transform.groupBy) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     * Returns the draw method for line\n     * @return {Function} Draw method of line layer\n     */\n    getDrawFn () {\n        return drawLine;\n    }\n\n    static shouldDrawAnchors () {\n        return true;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @param {number} seriesIndex index of series\n     * @return {Array} Array of points\n     */\n    translatePoints (data, encodingFieldsInf, axes) {\n        let points = [];\n        const xAxis = axes.x;\n        const yAxis = axes.y;\n        const colorAxis = axes.color;\n        const encoding = this.config().encoding;\n        const { xFieldType, yFieldType } = encodingFieldsInf;\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const colorFieldIndex = colorField && fieldsConfig[colorField].index;\n        const style = {};\n        const meta = {};\n\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const { color, rawColor } = getLayerColor({ datum: d, index: i }, {\n                colorEncoding, colorAxis, colorFieldIndex });\n\n            style.stroke = color;\n            style['fill-opacity'] = 0;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n\n            const point = {\n                enter: {},\n                update: {\n                    x: xPx,\n                    y: d.y === null ? null : yPx\n                },\n                style,\n                _data: d._data,\n                _id: d._id,\n                rowId: d._id,\n                source: d._data,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the line plot\n     * @param {SVGElement} container svg element\n     * @return {LineLayer} instance of line layer\n     */\n    render (container) {\n        let points;\n        let seriesClassName;\n        let style;\n\n        const config = this.config();\n        const {\n            encoding,\n            interpolate,\n            className,\n            defClassName,\n            transition\n        } = config;\n        const normalizedData = this._normalizedData;\n        const transformedData = this._transformedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const keys = transformedData.map(d => d.key);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n        const colorField = encoding.color.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n        this._points = [];\n        this._pointMap = {};\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        makeElement(container, 'g', normalizedData, null, {\n            enter: (group) => {\n                animateGroup(group, {\n                    transition,\n                    groupAnimateStyle: {\n                        enter: {\n                            'stroke-opacity': 0,\n                            'fill-opacity': this.getPathStyle()['fill-opacity']\n                        },\n                        update: {\n                            'stroke-opacity': encoding.strokeOpacity.value\n                        }\n                    }\n                });\n            },\n            update: (group, dataArr, i) => {\n                points = this.translatePoints(dataArr, this.encodingFieldsInf(), axes, i);\n                this._points.push(points);\n                seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n\n                let color;\n                const colorValFn = encoding.color.value;\n                const colorVal = points.find(d => d._data[colorFieldIndex] !== null &&\n                        d._data[colorFieldIndex] !== undefined);\n\n                if (colorValFn) {\n                    color = colorValFn(dataArr, i, normalizedData);\n                } else {\n                    color = axes.color.getColor(colorVal && colorVal._data[colorFieldIndex]);\n                }\n\n                style = this.getPathStyle(color);\n                this.getDrawFn()({\n                    layer: this,\n                    container: group.node(),\n                    interpolate,\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: style || {},\n                    connectNullData: config.connectNullData\n                });\n            }\n        }, d => d[0]._data[colorFieldIndex] || d[0]._id);\n\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            stroke: color,\n            'fill-opacity': '0'\n        };\n    }\n\n    /**\n     * Gets the nearest point closest to the given position\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point information\n     */\n    getNearestPoint (x, y, config) {\n        let searchRadius = config.searchRadius;\n        const data = this.data();\n\n        if (!data || (data && data.isEmpty())) {\n            return null;\n        }\n\n        searchRadius = searchRadius !== undefined ? searchRadius : this.config().nearestPointThreshold;\n        const point = this._voronoi.find(x, y, searchRadius);\n        const dimensions = getObjProp(point, 'data', 'data', 'update');\n\n        if (point) {\n            const { _data, _id } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(_data, _id);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: 2,\n                    height: 2\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import {\n    easeFns,\n    selectElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\n\nconst area = Symbols.area;\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nconst /* istanbul ignore next */ drawArea = (params) => {\n    let filteredPoints;\n    const { layer, container, points, style, transition, className, connectNullData, interpolate } = params;\n\n    const { effect: easeEffect, duration } = transition;\n    const mount = selectElement(container);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const selection = mount.selectAll('path').data([params.points]);\n    const [enterAreaPath, updateAreaPath] = ['enter', 'update'].map(e => area().curve(curveInterpolatorFn)\n                    .x(d => d[e].x)\n                    .y1(d => d[e].y)\n                    .y0(d => d[e].y0)\n                    .defined(d => d[e].y !== null\n            ));\n\n    filteredPoints = points;\n    mount.attr('class', className);\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n    const selectionEnter = selection.enter().append('path').attr('d', enterAreaPath(filteredPoints));\n    selection.merge(selectionEnter).transition().ease(easeFns[easeEffect])\n                    .duration(duration)\n                    .on('end', layer.registerAnimationDoneHook())\n                    .attr('d', updateAreaPath(filteredPoints))\n                    .each(function (d) {\n                        const element = selectElement(this);\n\n                        element.classed(d[0].className, true);\n                        Object.keys(style).forEach(key => element.style(key, style[key]));\n                    });\n};\n\nexport default drawArea;\n","import { FieldType } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { LineLayer } from '../line';\nimport drawArea from './renderer';\nimport './styles.scss';\nimport { STACK, ENCODING } from '../../enums/constants';\nimport { getAxesScales, positionPoints, getLayerColor, getIndividualClassName } from '../../helpers';\n\n/**\n * Area layer renders a closed path. The mark type of this layer is ```area```. This layer can be used\n * to create stacked or multi-series areas and vertical range area plots by using the encoding properties.\n *\n * To create this layer using layer configuration from canvas,\n * ```\n *      canvas.layers([{\n *          mark: 'area',\n *          transform: {\n *              type: 'stack' // Produces a stacked area.\n *          }\n *      }]);\n * ```\n *\n * @public\n *\n * @class\n * @module AreaLayer\n * @extends LineLayer\n */\nexport default class AreaLayer extends LineLayer {\n    /** oation of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof AreaLayer\n     */\n    static formalName () {\n        return 'area';\n    }\n\n    /**\n     * Calculates the domain from data. It calls its parent class's method which is line layer\n     * to get the domain and overwrites the domain according to its need.\n     * @return {Array} Domain values\n     */\n    calculateDomainFromData (data, encodingFieldsInf, fieldsConfig) {\n        const domains = super.calculateDomainFromData(data, fieldsConfig);\n        [ENCODING.X, ENCODING.Y].forEach((type) => {\n            const { [`${type}FieldType`]: fieldType } = encodingFieldsInf;\n            if (fieldType === FieldType.MEASURE && domains[type] !== undefined) {\n                domains[type][0] = Math.min(domains[type][0], 0);\n            }\n        });\n        return domains;\n    }\n\n    /**\n     * Returns the drawing method of this layer\n     * @return {Function} Draw method\n     */\n    getDrawFn () {\n        return drawArea;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @return {Array} Array of points\n     */\n    translatePoints (data, encodingFieldsInf, axes) {\n        let points = [];\n        const transformType = this.transformType();\n        const colorAxis = axes.color;\n        const config = this.config();\n        const encoding = config.encoding;\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const colorFieldIndex = colorField && fieldsConfig[colorField].index;\n        const { xField, yField, y0Field } = encodingFieldsInf;\n        const {\n            xAxis,\n            yAxis\n       } = getAxesScales(axes);\n        const classNameFn = config.individualClassName;\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const y0Px = (y0Field || transformType === STACK) ? yAxis.getScaleValue(d.y0) : yAxis.getScaleValue(0);\n            const { color, rawColor } = getLayerColor({ datum: d, index: i }, {\n                colorEncoding, colorAxis, colorFieldIndex });\n            const style = {};\n            const meta = {};\n            style.fill = color;\n            // style['fill-opacity'] = 0;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n            const point = {\n                enter: {\n                    x: xPx,\n                    y: d.y === null ? d.y : yAxis.getScaleValue(0),\n                    y0: d.y0 === null ? d.y0 : yAxis.getScaleValue(0)\n                },\n                update: {\n                    x: xPx,\n                    y: d.y === null ? d.y : yPx,\n                    y0: d.y0 === null ? d.y0 : y0Px\n                },\n                _id: d._id,\n                _data: d._data,\n                source: d._data,\n                rowId: d._id,\n                className: classNameFn ? classNameFn(d, i, data, this) : '',\n                style,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            fill: color\n        };\n    }\n}\n\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-arc',\n    padding: { top: 1, bottom: 1, left: 1, right: 1 },\n    className: '',\n    minOuterRadius: 10,\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    height: 100,\n    width: 100,\n    sort: '',\n    cornerRadius: 0,\n    padAngle: 0,\n    padRadius: 0,\n    startAngle: 0,\n    endAngle: 360,\n    colors: ['#F44336', 'blue', 'green', 'yellow', 'orange', 'purple'],\n    transform: {\n        type: 'identity'\n    },\n    encoding: {\n        'stroke-width': {\n            value: '2px'\n        },\n        'stroke-linejoin': {\n            value: 'round'\n        },\n        angle: {\n            value: '1'\n        },\n        radius: {\n            value: '1'\n        },\n        opacity: {\n            value: '1'\n        },\n        color: {\n            value: '1'\n        },\n        shape: {\n            value: '1'\n        },\n        size: {\n            value: '1'\n        }\n    },\n    innerRadiusFixer: 10,\n    transition: {\n        effect: 'cubic',\n        duration: 500\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-arc-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-arc-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-arc-selected`\n        }\n    }\n};\n\n","import {\n    makeElement,\n    selectElement,\n    getQualifiedClassName,\n    isSimpleObject,\n    getDomainFromData,\n    Symbols,\n    FieldType,\n    ReservedFields,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { BaseLayer } from '../../base-layer';\nimport { ASCENDING, OUTER_RADIUS_VALUE } from '../../enums/constants';\nimport { getIndividualClassName } from '../../helpers';\nimport { getRangeValue, getRadiusRange, tweenPie, tweenExitPie, getFieldIndices, getPreviousPoint } from './arc-helper';\nimport './styles.scss';\n\nconst pie = Symbols.pie;\nconst arc = Symbols.arc;\n\n/**\n * Arc Layer creates a plot with polar coordinates.\n *\n * @public\n *\n * @class\n * @module ArcLayer\n * @extends BaseLayer\n */\nexport default class ArcLayer extends BaseLayer {\n\n    constructor (data, axes, config, dependencies) {\n        super(data, axes, config, dependencies);\n        this._prevPieData = {};\n    }\n\n    /**\n     * returns the default configuration of the layer\n     *\n     * @static\n     * @return {Object} Default configuration for arc layer\n     * @memberof ArcLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ArcLayer\n     */\n    static formalName () {\n        return 'arc';\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof ArcLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Transforms data in the appropriate data structure to be consumed by the layer for rendering\n     *\n     * @param {Object} data data model associated with the layer\n     * @param {Object} config configuration of the layer that contains encoding and other parameters\n     * @return {Object} Transformed pie data\n     * @memberof ArcLayer\n     */\n    getTransformedData (dataModel, config) {\n        let pieData = [];\n        const pieIndex = {};\n        const {\n            startAngle,\n            endAngle,\n            encoding,\n            sort,\n            minOuterRadius\n        } = config;\n        const prevData = this._transformedData || [];\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            angleIndex,\n            sizeIndex,\n            radiusIndex,\n            colorIndex\n        } = getFieldIndices(encoding, fieldsConfig);\n        const dataVal = dataModel.getData();\n        const data = dataVal.data;\n        const uids = dataVal.uids;\n\n        this._prevPieData = {};\n\n        prevData.forEach((e, index) => {\n            this._prevPieData[e.uid] = [e, index];\n            pieIndex[e.index] = e;\n        });\n        // Creating pie data using angle field provided. If the angle field is a dimension,\n        // all the angles will be equal(360/number of dimensions)\n\n        pieData = pie()\n            .startAngle((startAngle / 180) * Math.PI)\n            .endAngle(Math.PI * endAngle / 180)\n            .value(d => d[angleIndex] || 1)\n            .sortValues(null);\n\n        sort.length && radiusIndex && pieData.sort((a, b) => {\n            if (sort === ASCENDING) {\n                return a[radiusIndex] - b[radiusIndex];\n            } return b[radiusIndex] - a[radiusIndex];\n        });\n        const sizeVal = data.reduce((acc, d) => acc + (d[sizeIndex] || 0), 1);\n\n        // Adding the radius field values to each data point in pie data\n        pieData = pieData(data).map((d, i) => {\n            d.outerRadiusValue = data[i][radiusIndex] || minOuterRadius;\n            d.innerRadius = config.innerRadius;\n            d.colorVal = data[i][colorIndex];\n            d.angleVal = data[i][angleIndex];\n            d.sizeVal = sizeVal;\n            d.uid = uids[i];\n            d.rowId = d.uid;\n            d.source = data[i];\n            d._previousInfo = this._prevPieData[d.uid] ? this._prevPieData[d.uid][0] :\n                getPreviousPoint(pieIndex, d.index, config);\n            return d;\n        });\n        return pieData;\n    }\n\n    /**\n     * Returns normalized data after transformation (it is the same in the case of pie layer)\n     *\n     * @param {Object} data transformed data\n     * @return {Object} normalized data\n     * @memberof ArcLayer\n     */\n    getNormalizedData (data) {\n        return data;\n    }\n\n    /**\n     *\n     *\n     * @param {Object} data\n     * @return {}\n     * @memberof ArcLayer\n     */\n    calculateDomainFromData (data) {\n        const domainKey = OUTER_RADIUS_VALUE;\n        return {\n            radius: getDomainFromData([data], [domainKey, domainKey])\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {Object} x\n     * @param {Object} y\n     * @return {}\n     * @memberof ArcLayer\n     */\n    getNearestPoint (x, y, config = {}) {\n        const dataPoint = selectElement(config.event.target).data()[0];\n        if (isSimpleObject(dataPoint)) {\n            const { data, uid } = dataPoint.datum;\n            return {\n                id: this.getIdentifiersFromData(data, uid),\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    /**\n     *\n     *\n     * @param {*} set\n     *\n     * @memberof ArcLayer\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(d => set.indexOf(d.datum.uid) !== -1);\n    }\n\n    /**\n     *\n     *\n     * @param {Object} container\n     * @return {}\n     * @memberof ArcLayer\n     */\n    render (container) {\n        const {\n            height,\n            width\n        } = this.measurement();\n        const {\n            classPrefix,\n            defClassName,\n            minOuterRadius,\n            innerRadius,\n            outerRadius,\n            cornerRadius,\n            padAngle,\n            padRadius,\n            padding,\n            transition,\n            innerRadiusFixer\n       } = this.config();\n        const sizeAxis = this.axes().size;\n        const transformedData = this._transformedData;\n        const chartHeight = height - padding.top - padding.bottom;\n        const chartWidth = width - padding.left - padding.right;\n        const qualClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        // Sets range for radius\n        const range = getRadiusRange(chartWidth, chartHeight, {\n            minOuterRadius,\n            innerRadius,\n            outerRadius,\n            innerRadiusFixer\n        });\n        const colorAxis = this.axes().color;\n        const defaultRadius = outerRadius || Math.min(chartHeight, chartWidth) / 2;\n        const radiusDomain = this.domain().radius;\n        const rangeValueGetter = d => getRangeValue(d, range, radiusDomain, defaultRadius, sizeAxis);\n        // This returns a function that generates the arc path based on the datum provided\n        const path = arc()\n                // .outerRadius(d => rangeValueGetter(d))\n                .innerRadius(innerRadius ? Math.min(chartHeight / 2, chartWidth / 2, innerRadius) : 0)\n                .cornerRadius(cornerRadius)\n                .padAngle(padAngle)\n                .padRadius(padRadius);\n        this._chartWidth = chartWidth;\n        this._chartHeight = chartHeight;\n        // Creating the group that holds all the arcs\n        const g = makeElement(selectElement(container), 'g', [1], `${qualClassName[0]}-group`)\n                .classed(`${qualClassName[1]}-group`, true)\n                .attr('transform', `translate(${chartWidth / 2},${chartHeight / 2})`);\n        const tween = (elem) => {\n            makeElement(elem, 'path', (d, i) => [{\n                datum: d,\n                index: i,\n                arcFn: path,\n                meta: {\n                    originalColor: colorAxis.getRawColor(d.colorVal),\n                    stateColor: {},\n                    colorTransform: {}\n                }\n            }], `${qualClassName[0]}-path`)\n                            .style('fill', d => colorAxis.getColor(d.datum.colorVal))\n                            .transition()\n                            .duration(transition.duration)\n                            .on('end', this.registerAnimationDoneHook())\n                            .attrTween('d', (...params) => tweenPie(path, rangeValueGetter, params))\n                            .attr('class', (d, i) => {\n                                const individualClass = getIndividualClassName(d, i, transformedData, this);\n                                return `${qualClassName[0]}-path ${qualClassName[1]}-path-${d.index}\n                                    ${individualClass}`;\n                            });\n        };\n        const consecutiveExits = [];\n        let exitCounter = 0;\n        const tweenExit = (elem, d) => {\n            let exitArr = consecutiveExits[exitCounter];\n            const oldExitCounter = exitCounter;\n            if (!exitArr) {\n                exitArr = [{ elem, datum: d }];\n            } else if (exitArr[exitArr.length - 1].datum.index === d.index - 1) {\n                exitArr.push({ elem, datum: d });\n            } else {\n                exitCounter++;\n            }\n            consecutiveExits[oldExitCounter] = exitArr;\n        };\n        // Creating groups for all the arcs present individually\n        makeElement(g, 'g', transformedData, `${qualClassName[0]}`,\n            {\n                update: tween,\n                exit: tweenExit\n            })\n                        .attr('class', (d, i) => `${qualClassName[0]} ${qualClassName[1]}-${i}`);\n        tweenExitPie(consecutiveExits, transition, rangeValueGetter, path);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof BaseLayer\n     */\n    getPointsFromIdentifiers (identifiers) {\n        if (!this.data()) {\n            return [];\n        }\n        const fieldNames = identifiers[0];\n        const values = identifiers.slice(1, identifiers.length);\n        const pieSlices = selectElement(this.mount()).selectAll('path').data();\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPies = pieSlices.filter((tData) => {\n            const data = tData.datum.data;\n            const uid = tData.datum.uid;\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === data[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === uid) !== -1;\n                } return true;\n            });\n        });\n\n        const pieSliceInf = filteredPies[0];\n        if (pieSliceInf) {\n            const centroid = pieSliceInf.arcFn.centroid(pieSliceInf.datum);\n            return [{\n                x: centroid[0] + this._chartWidth / 2,\n                y: centroid[1] + this._chartHeight / 2,\n                width: 2,\n                height: 2\n            }];\n        }\n        return [];\n    }\n\n    getRenderProps () {\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`];\n    }\n}\n","import { getObjProp, interpolator, FieldType, selectElement } from 'muze-utils';\nimport { ANGLE, RADIUS, SIZE, COLOR } from '../../enums/constants';\n\n/**\n * Returns the range value from a value inside the domain\n *\n * @param {Object} domainValue Value whose range has to be returned\n * @return {number} range value\n * @memberof ArcLayer\n */\nexport const getRangeValue = (datum, range, domain, defaultRadius, sizeAxis) => {\n    let domainMultiplier = 1;\n    const {\n        outerRadiusValue,\n        sizeVal\n    } = datum;\n    const sizeAxisDomain = sizeAxis.domain();\n    const sizeMultiplier = sizeAxis.getSize(sizeVal) / (sizeAxisDomain ? sizeAxis.range()[1] : sizeAxis.config().value);\n\n    domainMultiplier *= (range[1] - range[0]) / (domain[1] - domain[0]);\n    const rangeVal = (range[0] + (outerRadiusValue - domain[0]) * domainMultiplier);\n    return (rangeVal || defaultRadius) * sizeMultiplier;\n};\n\n/**\n *\n *\n * @memberof ArcLayer\n */\nexport const getRadiusRange = (width, height, config) => {\n    const {\n        minOuterRadius,\n        innerRadius,\n        outerRadius,\n        innerRadiusFixer\n    } = config;\n\n    return [Math.max((innerRadius + innerRadiusFixer || 0), minOuterRadius), outerRadius || Math.min(height,\n        width) / 2];\n};\nexport const getPreviousPoint = (prevData, currIndex, config) => {\n    const prevArc = prevData[currIndex - 1];\n    const nextArc = prevData[currIndex];\n\n    if (prevArc && nextArc) {\n        return {\n            startAngle: prevArc.endAngle,\n            endAngle: nextArc.startAngle\n        };\n    } else if (!nextArc) {\n        return {\n            startAngle: config.endAngle * Math.PI * 2 / 360,\n            endAngle: config.endAngle * Math.PI * 2 / 360\n        };\n    }\n    return {\n        startAngle: config.startAngle * Math.PI * 2 / 360,\n        endAngle: config.startAngle * Math.PI * 2 / 360\n    };\n};\n\n/**\n *\n *\n * @param {*} path\n * @param {*} b\n *\n * @memberof ArcLayer\n */\nexport const tweenPie = (path, rangeValueGetter, b) => {\n    const { datum } = b[0];\n    const outerRadius = rangeValueGetter(datum);\n    datum.outerRadius = outerRadius;\n    datum._previousInfo.outerRadius = datum._previousInfo.outerRadius || outerRadius;\n    return function (t) {\n        return path(interpolator()(datum._previousInfo, datum)(t));\n    };\n};\n\n/**\n *\n *\n * @param {*} path\n * @param {*} b\n *\n * @memberof ArcLayer\n */\nexport const tweenExitPie = (consecutiveExits, transition, rangeValueGetter, path) => {\n    if (consecutiveExits.length > 0) {\n        consecutiveExits.forEach((consecutiveExitArr) => {\n            const startAngle = consecutiveExitArr[0].datum.startAngle;\n            const endAngle = consecutiveExitArr[consecutiveExitArr.length - 1].datum.endAngle;\n            const mid = (Math.PI * 2 * startAngle) / ((Math.PI * 2) + startAngle - endAngle);\n\n            consecutiveExitArr.forEach((e) => {\n                const { elem, datum } = e;\n\n                elem.each(function () {\n                    const gElem = selectElement(this);\n                    gElem.selectAll('path')\n                                    .transition()\n                                    .duration(transition.duration)\n                                    .attrTween('d', () => function (t) {\n                                        const outerRadius = rangeValueGetter(datum);\n                                        datum.outerRadius = outerRadius;\n                                        return path(interpolator()(datum, {\n                                            startAngle: mid,\n                                            endAngle: mid,\n                                            outerRadius\n                                        })(t));\n                                    })\n                                    .remove();\n                    gElem.remove();\n                });\n            });\n        });\n    }\n};\n\nexport const getFieldIndices = (encoding, fieldsConfig) => {\n    const [angleField, radiusField, colorField, sizeField] = [ANGLE, RADIUS, COLOR, SIZE]\n            .map(e => encoding[e].field);\n    const [angleIndex, sizeIndex, radiusIndex] = [angleField, sizeField, radiusField]\n        .map((e) => {\n            const conf = fieldsConfig[e];\n            if (conf && conf.def.type === FieldType.MEASURE) {\n                return conf.index;\n            }\n            return null;\n        });\n    const colorIndex = getObjProp(fieldsConfig, colorField, 'index');\n    return {\n        angleIndex,\n        sizeIndex,\n        radiusIndex,\n        colorIndex\n    };\n};\n","import {\n    setAttrs,\n    setStyles,\n    selectElement,\n    makeElement,\n    getSmartComputedStyle\n} from 'muze-utils';\n\n/**\n * Draws svg text in the specified container.\n * @param {SVGElement} container Container where labels will be appended.\n * @param {Array.<Object>} data Data of the elements.\n * @return {Selection} d3 selection of the elements.\n */\nconst drawText = (container, data, config, smartLabel) => {\n    const selection = selectElement(container).selectAll('g').data(data);\n\n    const selectionMerge = selection.enter().append('g')\n        .each(function (dataObj) {\n            setAttrs(this, dataObj.enter);\n        })\n        .merge(selection);\n    const style = getSmartComputedStyle(selectElement(container), config.className);\n    const fontSize = parseInt(style.fontSize, 10);\n\n    smartLabel.setStyle(style);\n    selectionMerge.each(function (dataObj) {\n        const element = selectElement(this);\n        const { update, text, color, textanchor, style: textStyle } = dataObj;\n        const background = dataObj.background;\n        let backgroundVal;\n        if (backgroundVal = background.value) {\n            const backgroundPadding = background.padding;\n            let diff;\n            const { width, height } = smartLabel.getOriSize(dataObj.text);\n            const backgroundEl = makeElement(element, 'rect', [1]);\n\n            if (textanchor === 'end') {\n                diff = width;\n            } else if (textanchor === 'start') {\n                diff = 0;\n            } else {\n                diff = width / 2;\n            }\n\n            setAttrs(backgroundEl.node(), {\n                x: update.x - diff - backgroundPadding / 2,\n                y: update.y - fontSize - backgroundPadding / 2,\n                width: width + backgroundPadding,\n                height: height + backgroundPadding\n            });\n            background && setStyles(backgroundEl, {\n                background: backgroundVal\n            });\n        }\n        const textEl = makeElement(element, 'text', d => [d]).text(text);\n        const textNode = textEl.node();\n        textStyle && setStyles(textNode, textStyle);\n        color && setStyles(textNode, {\n            fill: color\n        });\n        dataObj.className && textEl.classed(dataObj.className, true);\n        setAttrs(textNode, update);\n        textEl.attr('text-anchor', textanchor);\n    });\n    selection.exit().remove();\n    return selection;\n};\n\nexport default drawText;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-text',\n    classPrefix: CLASSPREFIX,\n    className: '',\n    transform: {\n        type: 'identity'\n    },\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: {},\n        text: {\n            value: '',\n            background: {\n                padding: 10\n            }\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-text-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-text-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-text-selected`\n        }\n    }\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    setStyles,\n    createElements\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawText from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\nimport { TEXT_ANCHOR_MIDDLE, ENCODING } from '../../enums/constants';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create labels for each data point. It has an encoding property ```text```\n * which determines from which field's data the value of the label will be taken. The text encoding\n * property is necessary for the layer to render the text.The mark type of this layer is ```text```.\n *\n * @public\n *\n * @class\n * @module TextLayer\n * @extends BaseLayer\n */\nexport default class TextLayer extends BaseLayer {\n    /**\n     * Returns the default configuration of the text layer\n     * @return {Object} Default configuration of the text layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'text';\n    }\n\n    elemType () {\n        return 'text';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes) {\n        let points = [];\n        const colorAxis = axes.color;\n        const textEncoding = encoding.text;\n        const { field: textField, value, formatter: textFormatter } = textEncoding;\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding && colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const colorFieldIndex = fieldsConfig[colorField] ? fieldsConfig[colorField].index : -1;\n        const textFieldIndex = textField ? fieldsConfig[textField] && fieldsConfig[textField].index : -1;\n        const xEnc = ENCODING.X;\n        const yEnc = ENCODING.Y;\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d._data;\n            const textValue = textField ? row[textFieldIndex] : value;\n\n            const [xPx, yPx] = [xEnc, yEnc].map(type => (axes[type] ? axes[type].getScaleValue(d[type]) +\n                    axes[type].getUnitWidth() / 2 : 0));\n\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            const point = {\n                enter: {},\n                update: {\n                    x: xPx,\n                    y: yPx\n                },\n                text: textFormatter ? textFormatter(textValue) : textValue,\n                color,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, this) : null,\n                    padding: backgroundPadding\n                },\n                meta: {\n                    stateColor: {},\n                    originalColor: rawColor,\n                    colorTransform: {}\n                },\n                style: {},\n                _data: row,\n                _id: d._id,\n                source: d._data,\n                rowId: d._id\n            };\n\n            if (d.x !== null && d.y !== null) {\n                points.push(point);\n            }\n\n            point.className = getIndividualClassName(d, i, data, this);\n        }\n\n        points = positionPoints(this, points);\n\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {textLayer} Instance of text layer\n     */\n    render (container) {\n        let points;\n        const config = this.config();\n        const encoding = config.encoding;\n        const normalizedData = this._normalizedData;\n        const className = config.className;\n        const qualifiedClassName = getQualifiedClassName(config.defClassName, this.id(), config.classPrefix);\n        const axes = this.axes();\n        const containerSelection = selectElement(container);\n\n        containerSelection.classed(`${qualifiedClassName.join(' ')} ${className}`, true);\n        createElements({\n            data: normalizedData,\n            append: 'g',\n            selector: 'g',\n            container,\n            each: (dataArr, group, i) => {\n                const node = group.node();\n                points = this.translatePoints(dataArr, encoding, axes, i);\n                setStyles(node, {\n                    'text-anchor': TEXT_ANCHOR_MIDDLE\n                });\n                drawText(node, points, {\n                    className: qualifiedClassName[0]\n                }, this._dependencies.smartLabel);\n            }\n        });\n        return this;\n    }\n}\n","/* global Element, document  */\nimport {\n    makeElement,\n    selectElement,\n    easeFns,\n    objectIterator,\n    getSymbol\n} from 'muze-utils';\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem) {\n    const groupElement = selectElement(elem);\n    const { shape, size, update } = d;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        if (newShape.nodeName === 'path' || newShape.nodeName === 'image') {\n            shapeElement.attr('transform', `scale(${size / 100})`);\n        } else {\n            shapeElement.attr('height', size);\n            shapeElement.attr('width', size);\n        }\n        shapeElement.attr('x', -size / 2);\n        shapeElement.attr('y', -size / 2);\n        selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = getSymbol(shape).size(size)(update);\n        }\n        makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    } else {\n        d.shape = 'circle';\n        createShape(d, elem);\n    }\n};\n\n/**\n * Draws symbols using d3 symbol api\n * @param {Object} params Contains the svg container, points and other symbol related attributes.\n */\n/* istanbul ignore next */ const drawSymbols = (params) => {\n    let mergedGroups;\n    const { layer, container, points, transition, className } = params;\n    const { duration, effect, disabled } = transition;\n    const mount = selectElement(container);\n\n    mount.attr('class', className);\n    const symbolGroups = mount.selectAll('g').data(points, params.keyFn);\n    const symbolEnter = symbolGroups.enter().append('g').attr('transform', d => `translate(${d.enter.x},${d.enter.y})`);\n    mergedGroups = symbolGroups.merge(symbolEnter)\n                    .each(function (d) {\n                        createShape(d, this);\n                    });\n    mergedGroups = disabled ? mergedGroups :\n        mergedGroups.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    mergedGroups.attr('transform', d => `translate(${d.update.x},${d.update.y})`)\n                    .each(function (d) {\n                        const style = d.style;\n                        const element = selectElement(this);\n                        objectIterator(style, key => element.style(key, style[key]));\n                        element.attr('class', `${className}`);\n                        element.classed(d.className, true);\n                    });\n\n    const exitGroups = symbolGroups.exit();\n    if (!disabled) {\n        exitGroups.transition().ease(easeFns[effect])\n                        .duration(duration)\n                        .on('end', function () {\n                            selectElement(this).remove();\n                        })\n                        .style('fill-opacity', 0)\n                        .style('stroke-opacity', 0);\n    } else {\n        exitGroups.remove();\n    }\n};\n\nexport default drawSymbols;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-point',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    defColorStyle: 'stroke',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -20, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }\n        ]\n    },\n    innerPadding: 0.1,\n    nearestPointThreshold: 10,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        size: {\n            value: 30\n        },\n        color: { },\n        shape: {\n            value: 'circle'\n        },\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    shapes: ['circle', 'cross', 'diamond', 'square', 'star', 'wye', 'triangle'],\n    sizes: [20, 30, 40, 50, 60, 70]\n};\n","import {\n    Voronoi,\n    selectElement,\n    getQualifiedClassName,\n    makeElement,\n    FieldType,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawSymbols from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    getLayerColor,\n    positionPoints,\n    getPlotMeasurement,\n    getIndividualClassName\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create various symbols for each data point. This is commonly used in\n * scatterplot visualizations. The mark type of this layer is ```point```.\n *\n * @public\n *\n * @class\n * @module PointLayer\n * @extends BaseLayer\n */\nexport default class PointLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of PointLayer.\n     * @param {*} args\n     * @memberof PointLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n        this._bandScale = Scales.band();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PointLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Returns the default configuration of the point layer\n     * @return {Object} Default configuration of the point layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof PointLayer\n     */\n    static formalName () {\n        return 'point';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof PointLayer\n     */\n    static drawFn () {\n        return drawSymbols;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes, config = {}) {\n        let points = [];\n        const {\n            size: sizeEncoding,\n            shape: shapeEncoding,\n            color: colorEncoding,\n            x,\n            y\n        } = encoding;\n        const sizeField = sizeEncoding.field;\n        const sizeValue = sizeEncoding.value;\n        const shapeField = shapeEncoding.field;\n        const xField = x.field;\n        const yField = y.field;\n        const { size: sizeAxis, shape: shapeAxis } = axes;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorField = colorEncoding && colorEncoding.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n        const measurement = this.measurement();\n        const shapeFieldIndex = fieldsConfig[shapeField] && fieldsConfig[shapeField].index;\n        const sizeFieldIndex = fieldsConfig[sizeField] && fieldsConfig[sizeField].index;\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d._data;\n            const size = sizeValue instanceof Function ? sizeValue(d, i) : sizeAxis.getSize(row[sizeFieldIndex]);\n            const shape = shapeAxis.getShape(row[shapeFieldIndex]);\n\n            let [xPx, yPx] = [ENCODING.X, ENCODING.Y].map((type) => {\n                const value = d[type] === null ? undefined : d[type];\n                const measure = type === ENCODING.X ? measurement.width : measurement.height;\n                return !encoding[type].field ? measure / 2 : axes[type].getScaleValue(value);\n            });\n\n            xPx += offsetX;\n            yPx += offsetY;\n\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            const style = {\n                fill: color,\n                stroke: color\n            };\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {\n                        x: xPx,\n                        y: yPx\n                    },\n                    update: {\n                        x: xPx,\n                        y: yPx\n                    },\n                    shape,\n                    size: Math.abs(size),\n                    meta: {\n                        stateColor: {},\n                        originalColor: rawColor,\n                        colorTransform: {}\n                    },\n                    style,\n                    _data: row,\n                    _id: d._id,\n                    source: d._data,\n                    rowId: d._id\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container.\n     *\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {BarLayer} Instance of bar layer\n     */\n    render (container) {\n        let maxSize = 0;\n        let seriesClassName;\n        const config = this.config();\n        const keys = this._transformedData.map(d => d.key);\n        const { transition, className, defClassName, classPrefix } = config;\n        const normalizedData = this._normalizedData;\n        const containerSelection = selectElement(container);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        this._points = [];\n        this._pointMap = {};\n\n        containerSelection.classed(qualifiedClassName.join(' '), true).classed(className, true);\n\n        this._points = this.generateDataPoints(normalizedData, keys);\n\n        makeElement(container, 'g', this._points, null, {\n            update: (group, points) => {\n                maxSize = Math.max(maxSize, ...points.map(d => d.size));\n                seriesClassName = `${qualifiedClassName[0]}`;\n                this.constructor.drawFn()({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    keyFn: d => d._id\n                });\n            }\n        }, data => data[0]._id);\n        this._maxSize = Math.sqrt(maxSize / Math.PI) * 2;\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    generateDataPoints (normalizedData, keys) {\n        const encoding = this.config().encoding;\n        const axes = this.axes();\n        const [widthMetrics, heightMetrics] = getPlotMeasurement(this, keys);\n        const offsetXValues = widthMetrics.offsetValues || [];\n        const offsetYValues = heightMetrics.offsetValues || [];\n        return normalizedData.map((dataArr, i) => {\n            const measurementConf = this.getMeasurementConfig(offsetXValues[i], offsetYValues[i], widthMetrics.span,\n                heightMetrics.span);\n            return this.translatePoints(dataArr, encoding, axes, measurementConf);\n        }).filter(d => d.length);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0) + widthSpan / 2,\n                y: (offsetY || 0) + heightSpan / 2\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n\n    /**\n     * Gets the nearest point from a position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Point details\n     */\n    getNearestPoint (x, y) {\n        const distanceLimit = Math.max(this._maxSize, this.config().nearestPointThreshold);\n\n        if (!this.data()) {\n            return null;\n        }\n\n        const point = this._voronoi.find(x, y, distanceLimit);\n        const dimensions = point && point.data.data.update;\n        const radius = point ? Math.sqrt(point.data.data.size / Math.PI) : 0;\n\n        if (point) {\n            const { _data, _id } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(_data, _id);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: radius,\n                    height: radius\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import { makeElement, easeFns } from 'muze-utils';\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} datum\n * @param {*} index\n * @param {*} context\n */\nconst transitionBars = (layer, elem, datum, index, context) => {\n    const { transition } = context;\n    const { duration, disabled, effect } = transition;\n    const selection = elem;\n\n    const selTransition = disabled ? selection :\n        selection.transition()\n        .duration(duration)\n        .ease(easeFns[effect])\n        .on('end', layer.registerAnimationDoneHook());\n    const update = datum.update || datum;\n    const updateStyle = datum.style || {};\n    datum.className && selection.classed(datum.className, true);\n    Object.entries(update).forEach(attr => (!isNaN(attr[1]) && selTransition.attr(attr[0], attr[1])));\n    Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n};\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} d\n */\nconst barEnterFn = (elem, d) => {\n    const selection = elem;\n    const enter = d.enter || {};\n    Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n};\n\n/**\n * Draws rectangles by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Bar Selection\n */\n/* istanbul ignore next */ export const drawRects = (params) => {\n    const { layer, points, container, keyFn } = params;\n    const updateFns = {\n        enter (elem, d) { barEnterFn(elem, d); },\n        update (elem, d, i) { transitionBars(layer, elem, d, i, params); }\n    };\n    return makeElement(container, 'rect', points, null, updateFns, keyFn);\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-bar',\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transform: {\n        type: 'stack'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    innerPadding: 0.1,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        x0: {},\n        y0: {}\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-bar-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-bar-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-bar-selected`\n        }\n    }\n};\n\n","import { MeasureSubtype, DimensionSubtype } from 'muze-utils';\nimport { STACK } from '../../enums/constants';\nimport { getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fieldInfo\n * @param {*} config\n * @param {*} data\n *\n */\nconst resolveDimByField = (type, axesInfo, config, data) => {\n    const spaceType = type === 'x' ? 'width' : 'height';\n    const [fieldType, axis] = [config[`${type}FieldType`], axesInfo[`${type}Axis`]];\n    const {\n        transformType,\n        sizeEncoding,\n        sizeConfig,\n        measurement\n    } = config;\n\n    const sizeValue = sizeEncoding.value;\n    let enter = 0;\n    let pos;\n    let space = 0;\n    let enterSpace = 0;\n    if (fieldType !== undefined) {\n        if (config[`${type}0Field`]) {\n            const minVal = data[type];\n            const maxVal = data[`${type}0`];\n            let min;\n            let max;\n            if (minVal === null || maxVal === null) {\n                return {\n                    enterSpace: undefined,\n                    enter: undefined,\n                    pos: undefined,\n                    space: undefined\n                };\n            } else if (fieldType === MeasureSubtype.CONTINUOUS || fieldType === DimensionSubtype.TEMPORAL) {\n                min = Math.min(minVal, maxVal);\n                max = Math.max(minVal, maxVal);\n            } else {\n                min = minVal;\n                max = maxVal;\n            }\n            const scales = type === 'x' ? [min, max] : [max, min];\n            pos = axis.getScaleValue(scales[0]) + axis.getUnitWidth() / 2;\n            space = Math.abs(axis.getScaleValue(scales[1]) - pos) + axis.getUnitWidth() / 2;\n\n            enter = pos;\n            enterSpace = 0;\n        } else if (fieldType === DimensionSubtype.CATEGORICAL || fieldType === DimensionSubtype.TEMPORAL) {\n            pos = axis.getScaleValue(data[type]) +\n                (sizeConfig[type === 'x' ? 'barWidthOffset' : 'barHeightOffset'] || 0);\n\n            space = sizeConfig[type === 'x' ? 'barWidth' : 'barHeight'];\n            if (sizeValue !== undefined) {\n                const diffPx = sizeValue * space;\n                space -= diffPx;\n                pos += diffPx / 2;\n            }\n            enter = pos;\n            enterSpace = space;\n        } else {\n            const zeroPos = axis.getScaleValue(0);\n            const axisType = axis.getScaleValue(data[type]);\n            const axisType0 = axis.getScaleValue(data[`${type}0`]);\n\n            enterSpace = 0;\n            if (type === 'x') {\n                pos = data[type] < 0 || transformType === STACK ? axisType : zeroPos;\n                space = Math.abs(pos - (transformType === STACK ? axisType0 : (data[type] >= 0 ? axisType : zeroPos)));\n            } else {\n                pos = transformType === STACK || data[type] >= 0 ? axisType : zeroPos;\n                space = Math.abs(pos - (transformType === STACK ? axisType0 : (data[type] >= 0 ? zeroPos : axisType)));\n            }\n            enter = zeroPos;\n        }\n    } else {\n        pos = 0;\n        space = measurement[spaceType];\n    }\n\n    return {\n        enterSpace,\n        enter,\n        pos,\n        space\n    };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} config\n * @param {*} axes\n *\n */\nconst resolveDimensions = (data, config, axes) => {\n    const axesInfo = {\n        xAxis: axes.x,\n        yAxis: axes.y\n    };\n    const {\n        enterSpace: enterWidth,\n        enter: enterX,\n        pos: xPos,\n        space: width\n    } = resolveDimByField('x', axesInfo, config, data);\n\n    const {\n        enterSpace: enterHeight,\n        enter: enterY,\n        pos: yPos,\n        space: height\n    } = resolveDimByField('y', axesInfo, config, data);\n    return {\n        enter: {\n            x: enterX,\n            y: enterY,\n            width: enterWidth,\n            height: enterHeight\n        },\n        update: {\n            x: xPos,\n            y: yPos,\n            width,\n            height\n        }\n    };\n};\n\n/**\n * Generates an array of objects containing x, y, width and height of the bars from the data\n * @param  {Array.<Array>} data Data Array\n * @param  {Object} encoding  Config\n * @param  {Object} axes     Axes object\n * @param {Object} conf config object for point generation\n * @return {Array.<Object>}  Array of points\n */\nexport const getTranslatedPoints = (context, data, sizeConfig) => {\n    let points = [];\n    const encoding = context.config().encoding;\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const fieldsConfig = context.data().getFieldsConfig();\n    const colorEncoding = encoding.color;\n    const colorField = colorEncoding.field;\n    const sizeEncoding = encoding.size || {};\n    const {\n            x0Field,\n            y0Field,\n            xFieldSubType,\n            yFieldSubType\n        } = context.encodingFieldsInf();\n    const measurement = context.measurement();\n    const isXDim = xFieldSubType === DimensionSubtype.CATEGORICAL || xFieldSubType === DimensionSubtype.TEMPORAL;\n    const isYDim = yFieldSubType === DimensionSubtype.CATEGORICAL || yFieldSubType === DimensionSubtype.TEMPORAL;\n    const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n    const transformType = context.transformType();\n    const colorFieldIndex = colorField && fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n    for (let i = 0, len = data.length; i < len; i++) {\n        const d = data[i];\n        const style = {};\n        const meta = {};\n        const dimensions = resolveDimensions(d, {\n            xFieldType: xFieldSubType,\n            yFieldType: yFieldSubType,\n            x0Field,\n            y0Field,\n            transformType,\n            measurement,\n            sizeConfig,\n            sizeEncoding\n        }, axes);\n\n        const { color, rawColor } = getLayerColor({ datum: d, index: i },\n            { colorEncoding, colorAxis, colorFieldIndex });\n\n        style.fill = color;\n        meta.stateColor = {};\n        meta.originalColor = rawColor;\n        meta.colorTransform = {};\n\n        const update = dimensions.update;\n\n        if (!isNaN(update.x) && !isNaN(update.y) && d._id !== undefined) {\n            let point = null;\n            point = {\n                enter: dimensions.enter,\n                update,\n                style,\n                _data: d._data,\n                _id: d._id,\n                source: d._data,\n                rowId: d._id,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, context);\n            points.push(point);\n            // Store each point in a hashmap with key as the dimensional or temporal field value\n            context.cachePoint(d[key], point);\n        }\n    }\n\n    points = positionPoints(context, points);\n    return points;\n};\n","import {\n    getClosestIndexOf,\n    getQualifiedClassName,\n    selectElement,\n    createElements,\n    clipElement,\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawRects } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getPlotMeasurement } from '../../helpers';\nimport './styles.scss';\nimport { getTranslatedPoints } from './bar-helper';\n\nconst MEASURE = FieldType.MEASURE;\nconst scaleBand = Scales.band;\n\n/**\n * Bar layer creates rectangle marks. The mark type of this layer is ```bar```. This layer can be used\n * to create stacked or grouped bars, range bars, heatmap plots and also reference bands by using\n * the encoding properties.\n *\n * @public\n *\n * @class\n * @module BarLayer\n * @extends BaseLayer\n */\nexport default class BarLayer extends BaseLayer {\n    /**\n     * Creates an instance of bar layer\n     */\n    constructor (...params) {\n        super(...params);\n        this._bandScale = scaleBand();\n        this._plotPadding = {\n            x: 0,\n            y: 0\n        };\n        this._plotSpan = {\n            x: 0,\n            y: 0\n        };\n        this._pointMap = {};\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BarLayer\n     */\n    elemType () {\n        return 'rect';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BarLayer\n     */\n    static formalName () {\n        return 'bar';\n    }\n\n    /**\n     * Returns the default configuration of the bar layer\n     * @return {Object} Default configuration of the bar layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof BarLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const colorField = encoding.color.field;\n        const transform = config.transform;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} fieldsConfig\n     *\n     * @memberof BarLayer\n     */\n    calculateDomainFromData (data, encodingFieldInf, fieldsConfig) {\n        const domain = super.calculateDomainFromData(data, encodingFieldInf, fieldsConfig);\n        ['x', 'y'].forEach((d) => {\n            if (encodingFieldInf[`${d}FieldType`] === MEASURE && domain[d]) {\n                encodingFieldInf[`${d}0Field}`] ? domain[d] = domain[d].sort((a, b) => a - b) :\n                    (domain[d][0] = Math.min(domain[d][0], 0));\n            }\n        });\n        return domain;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the bars from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @param {Object} conf config object for point generation\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, sizeConfig) {\n        return getTranslatedPoints(this, data, sizeConfig);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGGroup} container SVGGroup where plot will be rendered.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    render (container) {\n        const config = this.config();\n        const transition = config.transition;\n        const normalizedDataArr = this._normalizedData;\n        const transformedData = this._transformedData;\n        const keys = transformedData.map(d => d.key);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const height = axes.y && axes.y.scale().range()[0];\n        const width = axes.x && axes.x.scale().range()[1];\n        const defClassName = config.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const className = config.className;\n        const containerSelection = selectElement(container);\n        const dimensions = Object.values(fieldsConfig).filter(e => e.def.type === FieldType.DIMENSION)\n            .map(e => e.index);\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        clipElement(container, {\n            x: 0,\n            y: 0,\n            width,\n            height\n        }, `id-${this.id()}`);\n\n        this._points = this.generateDataPoints(normalizedDataArr, keys);\n\n        createElements({\n            data: this._points,\n            container,\n            selector: 'g',\n            append: 'g',\n            each: (points, group, i) => {\n                const seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n                group.style('display', 'block');\n                drawRects({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: {},\n                    keyFn: d => dimensions.map(key => d._data[key]).join('-')\n                });\n            }\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} normalizedData\n     * @param {*} keys\n     *\n     * @memberof BarLayer\n     */\n    generateDataPoints (normalizedData, keys) {\n        const [barWidthMetrics, barHeightMetrics] = getPlotMeasurement(this, keys);\n        const barWidthOffsets = barWidthMetrics.offsetValues || [];\n        const barHeightOffsets = barHeightMetrics.offsetValues || [];\n        this._plotSpan = {\n            x: barWidthMetrics.groupSpan || 0,\n            y: barHeightMetrics.groupSpan || 0\n        };\n        this._plotPadding = {\n            x: barWidthMetrics.padding || 0,\n            y: barHeightMetrics.padding || 0\n        };\n\n        this._pointMap = {};\n        return normalizedData.map((data, i) => this.translatePoints(data,\n            {\n                barWidth: barWidthMetrics.span,\n                barWidthOffset: barWidthOffsets[i] || 0,\n                barHeight: barHeightMetrics.span,\n                barHeightOffset: barHeightOffsets[i] || 0\n            }));\n    }\n\n    getPlotPadding () {\n        return this._plotPadding;\n    }\n\n    /**\n     * Gets the nearest point of the position passed.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point.\n     */\n    getNearestPoint (x, y) {\n        if (!this.data()) {\n            return null;\n        }\n        let axis;\n        let value;\n        let index;\n        let points;\n        let uniqueFieldType;\n        let uniqueFieldIndex;\n        let filterData;\n        let identifiers;\n        let pointFound = null;\n        const dataModel = this.data();\n        const dataObj = dataModel.getData();\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const axes = this.axes();\n        const data = dataObj.data;\n        const pointMap = this._pointMap;\n        const {\n                xField,\n                yField,\n                xFieldSubType,\n                yFieldSubType\n            } = this.encodingFieldsInf();\n\n        if (xFieldSubType === MeasureSubtype.CONTINUOUS) {\n            axis = axes.y;\n            value = axis.invert(y);\n            uniqueFieldIndex = fieldsConfig[yField].index;\n            uniqueFieldType = yFieldSubType;\n        } else {\n            axis = axes.x;\n            value = axis.invert(x);\n            uniqueFieldIndex = fieldsConfig[xField].index;\n            uniqueFieldType = xFieldSubType;\n        }\n\n        if (uniqueFieldType === DimensionSubtype.CATEGORICAL) {\n            points = pointMap[value];\n        }\n\n        if (uniqueFieldType === DimensionSubtype.TEMPORAL) {\n            filterData = [...new Set(data.map(d => d[uniqueFieldIndex]))];\n            index = getClosestIndexOf(filterData, value);\n            value = filterData[index];\n            points = pointMap[value];\n        }\n        const len = points && points.length;\n        points && points.sort((p1, p2) => p1.update.y - p2.update.y);\n        for (let i = 0; i < len; i++) {\n            const point = points[i];\n            const update = point.update;\n            if (x >= update.x && x <= (update.width + update.x) && y >= update.y && y <= (update.height + update.y)) {\n                pointFound = point;\n                break;\n            }\n            pointFound = null;\n        }\n\n        const values = pointFound && pointFound._data;\n        if (values) {\n            identifiers = this.getIdentifiersFromData(values, pointFound._id);\n        }\n        return pointFound ? {\n            dimensions: [pointFound.update],\n            id: identifiers,\n            layerId: this.id()\n        } : pointFound;\n    }\n\n    getPlotSpan () {\n        return this._plotSpan;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-tick',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }]\n    },\n    innerPadding: 0.1,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: { },\n        x: {},\n        y: {},\n        x0: {},\n        y0: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-tick-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-tick-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-tick-selected`\n        }\n    }\n};\n","import { selectElement } from 'muze-utils';\n\n/**\n * Draws ticks by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Ticks Selection\n */\nexport default /* istanbul ignore next */ (params) => {\n    const { points, container, keyFn, className } = params;\n    const mount = selectElement(container);\n    const ticks = mount.selectAll('path').data(points, keyFn);\n    const ticksEnter = ticks.enter().append('path');\n\n    mount.attr('class', className || '');\n    ticksEnter.each(function (d) {\n        const selection = selectElement(this);\n        const enter = d.enter || {};\n        Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n    });\n\n    ticks.exit().remove();\n    return ticks.merge(ticksEnter)\n                    .each(function (d) {\n                        const selection = selectElement(this);\n                        const update = d.update;\n                        const updateStyle = d.style || {};\n                        const x0 = update.x0 !== undefined ? update.x0 : update.x;\n                        const y0 = update.y0 !== undefined ? update.y0 : update.y;\n                        const path = `M ${update.x} ${update.y} L ${x0} ${y0}`;\n                        d.className && selection.classed(d.className, true);\n                        selection.attr('d', path);\n                        Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n                    });\n};\n\n","import { FieldType } from 'muze-utils';\nimport { PointLayer } from '../point';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport drawTicks from './renderer';\nimport './styles.scss';\nimport { getAxesScales, getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\n\n/**\n * This layer is used to create small lines. The orientation of the line is determined by the positional\n * encoding properties x0 and y0. The mark type of the layer is ```tick```.\n *\n * @public\n *\n * @class\n * @module TickLayer\n * @extends BaseLayer\n */\nexport default class TickLayer extends PointLayer {\n\n    /**\n     *\n     *\n     * @staticg\n     *\n     * @memberof TickLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static formalName () {\n        return 'tick';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static drawFn () {\n        return drawTicks;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TickLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes, config = {}) {\n        let points = [];\n        const {\n                xAxis,\n                yAxis\n            } = getAxesScales(axes);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n                xField,\n                yField,\n                x0Field,\n                y0Field,\n                xFieldType,\n                yFieldType\n            } = this.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding && colorEncoding.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n        const measurement = this.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n        const { x: xSpan, y: ySpan } = config.span;\n        for (let i = 0, len = data.length; i < len; i++) {\n            let xPx;\n            let x0Px;\n            let y0Px;\n            let yPx;\n            const d = data[i];\n            const row = d._data;\n            if (xField) {\n                xPx = xAxis.getScaleValue(d.x) + offsetX;\n                x0Px = xPx + xSpan;\n            }\n\n            if (yField) {\n                yPx = yAxis.getScaleValue(d.y) + offsetY;\n                y0Px = yPx !== null ? yPx + ySpan : null;\n            }\n\n            if (!xField) {\n                xPx = 0;\n                x0Px = measurement.width;\n                if (!isNaN(yPx)) {\n                    yPx += ySpan / 2;\n                    y0Px = yPx;\n                }\n            }\n\n            if (!yField) {\n                yPx = 0;\n                y0Px = measurement.height;\n                x0Px = xPx += xSpan / 2;\n            }\n\n            if (x0Field) {\n                x0Px = xAxis.getScaleValue(d.x0) + xSpan;\n                yPx += ySpan / 2;\n                y0Px -= ySpan / 2;\n            }\n\n            if (y0Field) {\n                y0Px = yAxis.getScaleValue(d.y0) + ySpan;\n                xPx += xSpan / 2;\n                x0Px -= xSpan / 2;\n            }\n            const style = {};\n            const meta = {};\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            style.stroke = color;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {},\n                    update: {\n                        x: xPx,\n                        y: yPx,\n                        x0: x0Px,\n                        y0: y0Px\n                    },\n                    style,\n                    _data: row,\n                    _id: d._id,\n                    source: row,\n                    rowId: d._id,\n                    meta\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0),\n                y: (offsetY || 0)\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n}\n","import { isSimpleObject, mergeRecursive, getObjProp } from 'muze-utils';\n\nconst parseLayerDefinition = (sink, definition, layerDef, layerType) => {\n    for (const key in definition) {\n        if (Object.hasOwnProperty.call(definition, key)) {\n            let strs;\n            let propValue;\n            const def = definition[key];\n            if (isSimpleObject(def)) {\n                sink[key] = {};\n                parseLayerDefinition(sink[key], def, layerDef, layerType);\n            } else if (typeof def === 'string' && (strs = def.split('.')) && strs[0] === layerType) {\n                propValue = getObjProp(layerDef, ...strs.slice(1, strs.length));\n                if (propValue !== undefined) {\n                    sink[key] = propValue;\n                }\n            } else {\n                sink[key] = def;\n            }\n        }\n    }\n};\n\nconst sanitizeEncoding = (encoding) => {\n    // Create object for each encoding value if encoding value is a string\n    for (const key in encoding) {\n        if (typeof encoding[key] === 'string') {\n            encoding[key] = {\n                field: encoding[key]\n            };\n        }\n    }\n};\n\n/**\n * Layer Factory creates layers based on the layer type. All types of layers needs to register in\n * the layer factory. For getting a layer instance, getLayer method needs to invoked with the\n * layerType and other arguments. It also registers the definition of composite layers.\n *\n * @public\n *\n * @module LayerFactory\n */\nconst layerFactory = (() => {\n    const compositeLayers = {};\n    const factoryObj = {\n        setLayerRegistry: (reg) => {\n            factoryObj._layerRegistry = reg;\n        },\n        getSerializedConf: (mark, layerDef) => {\n            let serializedDefs;\n            const defs = compositeLayers[mark];\n            const newConf = mergeRecursive({}, layerDef);\n\n                // If it is a composite layer then resolve all the definitions of each unit layer\n            if (defs) {\n                serializedDefs = defs.map((unitLayerDef) => {\n                    const sDef = {};\n                    parseLayerDefinition(sDef, unitLayerDef, newConf, mark);\n                    sanitizeEncoding(sDef.encoding);\n                    return sDef;\n                });\n            } else {\n                const encoding = newConf.encoding;\n                // Create object for each encoding value if encoding value is a string\n                sanitizeEncoding(encoding);\n                serializedDefs = newConf;\n            }\n\n            return serializedDefs;\n        },\n        getLayerInstance: (layerDef, ...params) => {\n            const layerRegistry = factoryObj._layerRegistry;\n            layerDef = !(layerDef instanceof Array) ? [layerDef] : layerDef;\n            const instances = layerDef.map((layerObj) => {\n                const layerConstructor = layerRegistry[layerObj.mark];\n                return layerConstructor.create(...params);\n            });\n            return instances.length === 1 ? instances[0] : instances;\n        },\n        getLayerClass: mark => factoryObj._layerRegistry[mark],\n        /**\n         * Registers a new composite layer definition in the layer factory.\n         *\n         * @public\n         *\n         * @param {string} layerType Mark type of the new composite layer.\n         * @param {Array} layerDefs Layer definitions of the composite layer.\n         */\n        composeLayers: (layerType, layerDefs) => {\n            compositeLayers[layerType] = layerDefs;\n        },\n        sanitizeLayerConfig: (layerDef) => {\n            const newConf = mergeRecursive({}, layerDef);\n            sanitizeEncoding(newConf.encoding);\n            return newConf;\n        }\n    };\n    return factoryObj;\n})();\n\nexport default layerFactory;\n","import layerFactory from './layer-factory';\n\nexport default layerFactory;\n","import { AreaLayer } from './layers/area';\nimport { ArcLayer } from './layers/arc';\nimport { LineLayer } from './layers/line';\nimport { TextLayer } from './layers/text';\nimport { PointLayer } from './layers/point';\nimport { BarLayer } from './layers/bar';\nimport { BaseLayer } from './base-layer';\nimport * as CONSTANTS from './enums/constants';\nimport { TickLayer } from './layers/tick';\n\nexport const DEFAULT_LAYERS = {\n    [CONSTANTS.AREA_LAYER]: AreaLayer,\n    [CONSTANTS.ARC_LAYER]: ArcLayer,\n    [CONSTANTS.LINE_LAYER]: LineLayer,\n    [CONSTANTS.TEXT_LAYER]: TextLayer,\n    [CONSTANTS.POINT_LAYER]: PointLayer,\n    [CONSTANTS.TICK_LAYER]: TickLayer,\n    [CONSTANTS.BAR_LAYER]: BarLayer,\n    [CONSTANTS.BASE_LAYER]: BaseLayer\n};\n","/**\n * This file exports constants that are used as enums in the\n *  crosstab group implementation.\n */\n/**\n * Width of the crosstab.\n */\nexport const X = 'x';\n/**\n * Width of the crosstab.\n */\nexport const Y = 'y';\n/**\n * Width of the crosstab.\n */\nexport const WIDTH = 'width';\n\n/**\n * Height of the crosstab.\n */\nexport const HEIGHT = 'height';\n\n/**\n * Field referring to object storing measurement configuration.\n */\nexport const MEASUREMENT = 'measurement';\n\n/**\n * Field referring to object storing configuration properties.\n */\nexport const CONFIG = 'config';\n\n/**\n * Width of visual unit in crosstab.\n */\nexport const MIN_UNIT_WIDTH = 'minUnitWidth';\n\n/**\n * Height of visual unit.\n */\nexport const MIN_UNIT_HEIGHT = 'minUnitHeight';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSIONS = 'dimensions';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURES = 'measures';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSION = 'dimension';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURE = 'measure';\n\n/**\n * Flag to specify if model should be pivoted.\n */\nexport const PIVOT = 'pivot';\n\n/**\n * Flag to specify format\n */\nexport const FORMAT = 'format';\n\n/**\n * Mount point where the variable will be hosted\n */\nexport const MOUNT = 'mount';\n\n/**\n * Data update flag\n */\nexport const HAS_DATA_UPDATED = 'hasDataUpdated';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROWS = 'rows';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMNS = 'columns';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COL = 'col';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROW = 'row';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMN = 'column';\n\n/**\n * Field referring to object storing color field\n */\nexport const COLOR = 'color';\n\n/**\n * Field referring to object storing shape field\n */\nexport const SHAPE = 'shape';\n\n/**\n * Field referring to object storing size field\n */\nexport const SIZE = 'size';\n\n/**\n * Field referring to object storing detail field\n */\nexport const DETAIL = 'detail';\n\n/**\n * Field referring to object storing set of layers\n */\nexport const LAYERS = 'layers';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const TRANSFORM = 'transform';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const ORDINAL = 'ordinal';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const LINEAR = 'linear';\n/**\n * Field referring to object storing the transforms\n */\nexport const LEFT = 'left';\n/**\n * Field referring to object storing the transforms\n */\nexport const RIGHT = 'right';\n/**\n * Field referring to object storing the transforms\n */\nexport const TOP = 'top';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTTOM = 'bottom';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const RETINAL = 'retinal';\n/**\n * Field referring to object storing the transforms\n */\nexport const CELL = 'cell';\n/**\n * Field referring to object storing the transforms\n */\nexport const X_AXES = 'xAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const Y_AXES = 'yAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const ENTRY_CELLS = 'entryCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const INITIALIZED = 'initialized';\n/**\n * Field referring to object storing the transforms\n */\nexport const EXIT_CELLS = 'exitCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const AXIS = 'axis';\n/**\n * Field referring to object storing the transforms\n */\nexport const UNIT = 'unit';\n/**\n * Field referring to object storing the transforms\n */\nexport const UPDATED = 'updated';\n/**\n * Field referring to object storing the transforms\n */\nexport const BEFORE_UPDATE = 'beforeupdate';\n/**\n * Field referring to object storing the transforms\n */\nexport const VALUE_MATRIX = 'valueMatrix';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET_HEADERS = 'facet-headers';\n/**\n * Field referring to object storing the transforms\n */\nexport const RADIUS = 'radius';\n/**\n * Field referring to object storing the transforms\n */\nexport const ANGLE = 'angle';\n/**\n * Field referring to object storing the transforms\n */\nexport const ARC = 'arc';\n/**\n * Field referring to object storing the transforms\n */\nexport const CARTESIAN = 'cartesian';\n/**\n * Field referring to object storing the transforms\n */\nexport const POLAR = 'polar';\n/**\n * Field referring to object storing the transforms\n */\nexport const CATEGORICAL = 'categorical';\n/**\n * Field referring to object storing the transforms\n */\nexport const TEMPORAL = 'temporal';\n/**\n * Field referring to object storing the transforms\n */\nexport const BAR = 'bar';\n/**\n * Field referring to object storing the transforms\n */\nexport const LINE = 'line';\n/**\n * Field referring to object storing the transforms\n */\nexport const POINT = 'point';\n/**\n * Field referring to object storing the transforms\n */\nexport const PRIMARY = 'Primary';\n/**\n * Field referring to object storing the transforms\n */\nexport const SECONDARY = 'Secondary';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTH = 'both';\n/**\n * Field referring to object storing the transforms\n */\nexport const INTERACTION = 'interaction';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_LINES = 'gridLines';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_BANDS = 'gridBands';\n/**\n * Field referring to object storing the transforms\n */\nexport const HEADER = 'header';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET = 'facet';\n\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Artboard.\n * Artboard merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module\n */\n\nexport default {\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * Interfaces for VisualGroup. Any new VisualGroup has to implement this class.\n * @class  SimpleGroup\n */\nclass SimpleGroup {\n\n    /**\n     * This method is used to set or get the DataModel instance.\n     *\n     * @param {DataModel | undefined} dataModel Instance of datamodel.\n\n     * @memberof  SimpleGroup\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to set or get the group specific configuration\n     * properties\n     *\n     * @param {Object | undefined} configObj The input configuration.\n     *                                or instance of visual group.\n     * @memberof  SimpleGroup\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to return a serialized representation of the\n     * instance's properties.\n     *\n     * @memberof  SimpleGroup\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to get or set the measurement object which houses\n     * layout properties like width and height.\n     *\n     * @param {Object  | undefined} mObj The measurement properties.\n     * @memberof  SimpleGroup\n     */\n    measurement () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n\nexport default SimpleGroup;\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n *\n *\n * @export\n * @class Variable\n */\nexport default class Variable {\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    type () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    toString () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n","import Variable from './variable';\n\n/**\n * This is a wrapper on top of multiple variables which are of same type but they are shown in the same axis.This is\n * required in case of range plots or ohlc plots where one plot is mapped to multiple measure fields. At that time,\n * we need to create a composed variable from multiple variables. This class just wraps them into one variable instance\n * and provides methods to get the type and other common functionalities which can be performed on a simple variable\n * instance.\n *\n * @public\n * @class ComposeVars\n */\nclass ComposedVars extends Variable {\n\n    /**\n     * Creates an instance of ComposeVars.\n     *\n     * @param {Array} texts Array of field names\n     */\n    constructor (...texts) {\n        super(...texts);\n        this.vars(texts);\n    }\n\n    vars (...params) {\n        if (params.length) {\n            this._vars = params[0];\n            return this;\n        }\n        return this._vars;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this.vars().forEach(d => d.data(dm[0]));\n            return this;\n        }\n        return this._data;\n    }\n\n    /**\n     * Get all the field names from composed variable instance.\n     *\n     * @public\n     * @return {Array} Array of field names.\n     */\n    getMembers () {\n        const vars = this.vars();\n        return vars.map(member => member.getMembers()[0]);\n    }\n\n    /**\n     * Type of field associated with this composed variable.\n     *\n     * @return {string} Type of variable (Measure/Dimension).\n     */\n    type () {\n        return this.vars()[0].type();\n    }\n\n    toString () {\n        return this.vars().map(d => d.toString()).join(',');\n    }\n\n    /**\n     * Returns the number formatter function of the variable.\n     *\n     * @return {Function} Number formatter function of the variable.\n     */\n    numberFormat () {\n        return this.vars()[0].numberFormat();\n    }\n\n    format (values) {\n        return this.vars()[0].format(values);\n    }\n\n    /**\n     * Returns the subtype of the fields associated with this variable instance.\n     *\n     * @public\n     * @return {string} Subtype of the variable.\n     */\n    subtype () {\n        return this.vars()[0].subtype();\n    }\n\n    /**\n     * Returns the consecutive minimum difference of the field values.\n     *\n     * @public\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        return this.vars()[0].getMinDiff();\n    }\n}\n\nexport default ComposedVars;\n","import { DateTimeFormatter } from 'muze-utils';\nimport Variable from './variable';\n\n/**\n * This is a wrapper on top of fields passed in rows or columns in canvas. This is used to get the type of field or\n * get min difference from the field values.\n *\n * @public\n * @class SimpleVariable\n */\nexport default class SimpleVariable extends Variable {\n\n    /**\n     * Creates an instance of simple variable instance.\n     *\n     * @param {string} text Field name.\n     */\n    constructor (text) {\n        super();\n        this.oneVar(text);\n    }\n\n    /**\n     * Gets the field name associated with this variable instance.\n     *\n     * @public\n     * @return {string} Name of the field.\n     */\n    oneVar (...oneV) {\n        if (oneV.length) {\n            this._oneVar = oneV[0];\n            return this;\n        }\n        return this._oneVar;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    toString () {\n        return this.oneVar();\n    }\n\n    /**\n     * Gets the number formatter function of this variable.\n     *\n     * @public\n     * @return {Function} Number formatter function.\n     */\n    numberFormat () {\n        if (this.type() === 'measure') {\n            const formatter = this.data().getFieldspace().getMeasure()[this.oneVar()];\n            return formatter.numberFormat();\n        } return val => val;\n    }\n\n    format (values) {\n        if (values && this.subtype() === 'temporal') {\n            const formatter = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            const dtFormat = new DateTimeFormatter(formatter);\n            values = values.map(e => dtFormat.getNativeDate(e));\n        }\n        return values;\n    }\n\n    /**\n     * Return the field names associated with this variable instance.\n     *\n     * @public\n     * @return {Array} Array of fields.\n     */\n    getMembers () {\n        return [this.oneVar()];\n    }\n\n    /**\n     * Returns the type of the variable. Whether it is measure or dimension.\n     *\n     * @public\n     * @return {string} Type of variable.\n     */\n    type () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.type;\n    }\n\n    /**\n     * Returns the subtype of the variable. Subtype can be categorical or temporal. If no subtype is found, then it\n     * returns the type of the variable.\n     *\n     * @public\n     * @return {string} Subtype of variable.\n     */\n    subtype () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.subtype || fieldDef.type;\n    }\n\n    /**\n     * Returns the minimum consecutive difference between the data values of this variable.\n     *\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        const fieldSpace = this.data().getFieldspace();\n        return fieldSpace.fieldsObj()[this.oneVar()].minimumConsecutiveDifference();\n    }\n\n    /**\n     * Returns true if two variable instances are same.If both variable has the same field names, they are equal.\n     *\n     * @return {Boolean} Whether two variable instances are same.\n     */\n    equals (varInst) {\n        return this.oneVar() === varInst.oneVar();\n    }\n}\n","import { ComposedVars, SimpleVariable } from '../variable';\nimport { DIMENSION, COLUMNS, ROWS, TEMPORAL } from '../enums/constants';\n\n/**\n * Gets the list of fields in a sorted order by measurement and dimension\n *\n * @param {Array} fieldList List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields sorted by measurement and dimensions\n */\nconst orderFields = (fieldArray, type) => {\n    const dimensionArr = [[], []];\n    const measureArr = [[], []];\n    const temporalArr = [[], []];\n    const categoricalArr = [[], []];\n\n    fieldArray.forEach((fieldList, index) => {\n        fieldList.forEach((field) => {\n            if (field.type() === DIMENSION) {\n                dimensionArr[index].push(field);\n                field.subtype() === TEMPORAL ? temporalArr[index].push(field) : categoricalArr[index].push(field);\n            } else {\n                measureArr[index].push(field);\n            }\n        });\n    });\n\n    const numOfMeasures = measureArr[0].length + (measureArr[1] ? measureArr[1].length : 0);\n\n    // Single array of fields\n    if (!fieldArray[1]) {\n        // Push measures to bottom\n        measureArr[1] = type === COLUMNS ? measureArr[0] : [];\n        // Push measures to left\n        measureArr[0] = type !== COLUMNS ? measureArr[0] : [];\n        // Bottom and right dimensions empty\n        dimensionArr[1] = [];\n        // Left and top filled with dimensions\n        dimensionArr[0] = dimensionArr[0];\n        if (numOfMeasures === 0) {\n            const allDimensions = [...dimensionArr[0], ...dimensionArr[1]];\n            if (type === COLUMNS) {\n                dimensionArr[1] = allDimensions[allDimensions.length - 1] ? [allDimensions[allDimensions.length - 1]]\n                        : [];\n                allDimensions.splice(-1, 1);\n            } else {\n                dimensionArr[1] = [];\n            }\n            dimensionArr[0] = [...allDimensions];\n        }\n    }\n\n    if (dimensionArr[0].length && dimensionArr[1].length && numOfMeasures > 0) {\n        dimensionArr[0] = [...dimensionArr[0], ...dimensionArr[1]];\n        dimensionArr[1] = [];\n    }\n    return {\n        fields: dimensionArr.map((list, i) => (i === 1 ?\n            measureArr[i].concat(dimensionArr[i]) : dimensionArr[i].concat(measureArr[i]))),\n        dimensions: [...dimensionArr[0], ...dimensionArr[1]],\n        measures: [...measureArr[0], ...measureArr[1]],\n        temporal: [...temporalArr[0], ...temporalArr[1]],\n        categorical: [...categoricalArr[0], ...categoricalArr[1]]\n    };\n};\n\n/**\n * Gets the list of normalized fields\n *\n * @param {Array} fields List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields normalized by measurement and dimensions\n */\nconst normalizeFields = (config, type) => {\n    const fieldsArr = [];\n    const fields = config[type];\n\n    if (!(fields[0] instanceof Array)) {\n        fieldsArr[0] = fields;\n    } else {\n        fieldsArr[0] = fields[0] || [];\n        fieldsArr[1] = fields[1] || [];\n    }\n    return fieldsArr;\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} datamodel\n *\n */\nconst convertToVar = (datamodel, fields) => {\n    const vars = [];\n\n    fields && fields.forEach((field) => {\n        if (field instanceof ComposedVars) {\n            vars.push(field);\n            field.data(datamodel);\n        } else {\n            vars.push(new SimpleVariable(field).data(datamodel));\n        }\n    });\n    return vars;\n};\n\n/**\n *\n *\n * @param {*} rows\n * @param {*} columns\n * @param {*} datamodel\n *\n */\nexport const transformFields = (datamodel, config) => {\n    const [rowsInfo, columnsInfo] = [ROWS, COLUMNS].map((fields) => {\n        const normalizedFields = normalizeFields(config, fields);\n        const norFields = [convertToVar(datamodel, normalizedFields[0])];\n\n        if (normalizedFields[1]) {\n            norFields[1] = convertToVar(datamodel, normalizedFields[1]);\n        }\n        return orderFields(norFields, fields);\n    });\n    const {\n        fields: rows,\n        dimensions: rowDimensions,\n        measures: rowMeasures,\n        temporal: rowTemporalFields,\n        categorical: rowCategoricalFields\n    } = rowsInfo;\n    const {\n        fields: columns,\n        dimensions: columnDimensions,\n        measures: columnMeasures,\n        temporal: columnTemporalFields,\n        categorical: columnCategoricalFields\n    } = columnsInfo;\n    return {\n        rows,\n        rowDimensions,\n        rowMeasures,\n        rowTemporalFields,\n        rowCategoricalFields,\n        columns,\n        columnTemporalFields,\n        columnCategoricalFields,\n        columnDimensions,\n        columnMeasures\n    };\n};\n","import { ERROR_MSG, mergeRecursive } from 'muze-utils';\nimport { transformFields } from './field-sanitizer';\nimport { getHeaderAxisFrom } from '../group-helper/group-utils';\nimport { ROW, COLUMN } from '../enums/constants';\n\n/**\n *\n *\n * @export\n * @class VisualEncoder\n */\nexport default class VisualEncoder {\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    createAxis () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    setCommonDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    getLayerConfig () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    fieldInfo (...info) {\n        if (info.length) {\n            this._fieldInfo = mergeRecursive(this._fieldInfo || {}, info[0]);\n            return this;\n        }\n        return this._fieldInfo;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof VisualEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        this.fieldInfo(transformFields(datamodel, config));\n        return this.fieldInfo();\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    axisFrom (...params) {\n        if (params.length) {\n            this._axisFrom = params[0];\n            return this;\n        }\n        return this._axisFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    headerFrom (...params) {\n        if (params.length) {\n            this._headerFrom = params[0];\n            return this;\n        }\n        return this.__headerFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisFrom\n     *\n     * @memberof CartesianEncoder\n     */\n    setAxisAndHeaders (axisFrom = {}, fields) {\n        const [rowHeader, rowAxis] = getHeaderAxisFrom(ROW, fields.rows, axisFrom);\n        const [colHeader, colAxis] = getHeaderAxisFrom(COLUMN, fields.columns, axisFrom);\n\n        this.axisFrom({\n            row: rowAxis,\n            column: colAxis\n        });\n        this.headerFrom({\n            row: rowHeader,\n            column: colHeader\n        });\n        return this;\n    }\n}\n","import { ContinousAxis, BandAxis, TimeAxis, ColorAxis, SizeAxis, ShapeAxis } from '@chartshq/muze-axis';\n\nexport const scaleMaps = {\n    linear: ContinousAxis,\n    band: BandAxis,\n    temporal: TimeAxis,\n    size: SizeAxis,\n    color: ColorAxis,\n    shape: ShapeAxis\n};\n","import { ScaleType } from '@chartshq/muze-axis';\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    dimension: ScaleType.BAND,\n    categorical: ScaleType.BAND,\n    temporal: ScaleType.TIME,\n    measure: ScaleType.LINEAR,\n    continuous: ScaleType.LINEAR\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { AxisOrientation } from '@chartshq/muze-axis';\nimport { scaleMaps } from '../enums/scale-maps';\nimport { getAxisType, getAxisKey } from '../group-helper';\nimport { dataTypeScaleMap } from '../data-type-scale-map';\nimport { CATEGORICAL, TEMPORAL, BAR, LINE, POINT, BOTH, Y } from '../enums/constants';\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst getAxisConfig = (axisInfo, field, axesCreators) => {\n    let axisOrientation;\n    const { index, axisIndex, axisType } = axisInfo;\n    const { config, position } = axesCreators;\n    const userAxisConfig = config.axes ? (config.axes[axisType] || {}) : {};\n    const {\n        LEFT,\n        RIGHT,\n        TOP,\n        BOTTOM\n    } = AxisOrientation;\n    const allOrientations = axisType === Y ? [LEFT, RIGHT] : [TOP, BOTTOM];\n\n    if (position === BOTH) {\n        axisOrientation = allOrientations[axisIndex];\n    } else {\n        axisOrientation = position;\n    }\n    const axisConfig = {\n        id: `${axisType}-${index}-${axisIndex}`,\n        name: field.toString(),\n        field: field.toString(),\n        numberFormat: field.numberFormat(),\n        orientation: axisOrientation,\n        showAxisName: true,\n        show: true,\n        type: dataTypeScaleMap[field.subtype()]\n    };\n    userAxisConfig.tickValues = field.format(userAxisConfig.tickValues);\n    userAxisConfig.domain = field.format(userAxisConfig.domain);\n\n    return mergeRecursive(axisConfig, userAxisConfig);\n};\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst createSimpleAxis = (axisConfig, field, axesCreators) => {\n    const { labelManager } = axesCreators;\n    const Cls = scaleMaps[dataTypeScaleMap[field.subtype()]];\n    const simpleAxis = new Cls(axisConfig, { labelManager });\n    return simpleAxis;\n};\n\nexport const getAdjustedDomain = (max, min) => {\n    const y1ratio = max[0] / (max[0] - min[0]);\n    const y2ratio = max[1] / (max[1] - min[1]);\n\n    // adjust min/max values for positive negative values zero line etc\n    let allSameSign = false;\n\n    // if all numbers are positive set floor to zero\n    if (min[0] > 0 && min[1] > 0 && min[1] > 0 && max[1] > 0) {\n        allSameSign = true;\n        min[0] = 0;\n        min[1] = 0;\n    }\n\n    // if all numbers are negative set ceiling to zero\n    if (min[0] < 0 && min[1] < 0 && min[1] < 0 && max[1] < 0) {\n        allSameSign = true;\n        max[0] = 0;\n        max[1] = 0;\n    }\n\n    // align zero line if necessary\n    if (!allSameSign && y1ratio !== y2ratio) {\n        if (y1ratio < y2ratio) {\n                    // adjust min[1]\n            min[1] = min[0] / max[0] * max[1];\n        } else {\n                    // adjust min[0]\n            min[0] = min[1] / max[1] * max[0];\n        }\n    }\n    return [\n        [min[0], max[0]],\n        [min[1], max[1]]\n    ];\n};\n\n/**\n *\n *\n * @param {*} axisType\n * @param {*} fieldInfo\n * @param {*} axesCreators\n * @param {*} groupAxes\n *\n */\nexport const generateAxisFromMap = (axisType, fieldInfo, axesCreators, groupAxes) => {\n    let axisKey;\n    const currentAxes = [];\n    const { fields, index } = fieldInfo;\n    const { cacheMaps } = axesCreators;\n    const map = cacheMaps[`${axisType}AxesMap`];\n\n    const commonAxisKey = getAxisKey(axisType, index);\n    fields.forEach((field, axisIndex) => {\n        axisKey = getAxisKey(axisType, index, axisIndex, dataTypeScaleMap[field.subtype()]);\n        const axisConfig = getAxisConfig({ index, axisIndex, axisType }, field, axesCreators);\n\n        let axis;\n        if (!map.has(axisKey)) {\n            axis = createSimpleAxis(axisConfig, field, axesCreators);\n        } else {\n            axis = map.get(axisKey);\n            axis._rotationLock = false;\n            axis.config(axisConfig);\n            axisConfig.domain ? axis.domain(axisConfig.domain) : axis.resetDomain();\n        }\n        currentAxes.push(axis);\n        map.set(axisKey, axis);\n    });\n\n    if (currentAxes.length) {\n        map.set(commonAxisKey, currentAxes);\n        groupAxes.add(commonAxisKey);\n    }\n\n    return currentAxes;\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n    const xAxes = [];\n    const yAxes = [];\n\n    xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes.push(xAxis);\n    });\n    yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes.push(yAxis);\n    });\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n * return a default mark based on predefined set of rules of type and subtype of the fields\n *\n * @param {string} colFieldType dimension/measure - temporal/ordinal/nominal\n * @param {string} rowFieldType dimension/measure - temporal/ordinal/nominal\n * @return {Object} return mark type\n */\nexport const getDefaultMark = (colFieldType, rowFieldType) => {\n    let mark;\n\n    if (colFieldType === CATEGORICAL || rowFieldType === CATEGORICAL) {\n        mark = BAR;\n    } else if (colFieldType === TEMPORAL || rowFieldType === TEMPORAL) {\n        mark = LINE;\n    } else {\n        mark = POINT;\n    }\n\n    return mark;\n};\n\n/**\n *\n *\n * @param {*} axesCreators\n * @param {*} [fieldInfo=[]]\n *\n */\nexport const createRetinalAxis = (axesCreators, fieldProps = {}) => {\n    const { axisType, fieldsConfig } = axesCreators;\n    const field = fieldProps.field;\n    const axis = [];\n    const Cls = scaleMaps[axisType];\n\n    fieldProps.type = fieldProps.type ? fieldProps.type : getAxisType(fieldsConfig, field || null);\n    axis.push(new Cls(fieldProps));\n    return axis;\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} val\n *\n */\nexport const getIndex = (arr, val) => {\n    let i = 0;\n    let arrIndex = -1;\n\n    while (arrIndex === -1 && i < arr.length) {\n        if (arr[i].toString() === val.toString()) {\n            arrIndex = i;\n        }\n        i++;\n    }\n    return arrIndex;\n};\n\n/**\n *\n *\n * @param {*} colFields\n * @param {*} rowFields\n * @param {*} userLayerConfig\n *\n * @memberof CartesianEncoder\n */\nexport const getLayerConfFromFields = (colFields, rowFields, userLayerConfig) => userLayerConfig.filter((conf) => {\n    const userConf = conf instanceof Array ? conf : [conf];\n    const encodingArr = [].concat(...userConf.map(d => d.encoding).filter(d => d !== undefined));\n\n    if (!encodingArr.length) {\n        return true;\n    }\n\n    const xFields = [].concat(...encodingArr.map(d => [d.x && d.x.field, d.x0 && d.x0.field]))\n                .filter(d => d !== undefined && d !== null);\n    const yFields = [].concat(...encodingArr.map(d => [d.y && d.y.field, d.y0 && d.y0.field]))\n                .filter(d => d !== undefined && d !== null);\n\n    if (!xFields.length && !yFields.length) {\n        return true;\n    }\n\n    const colFieldExist = xFields.length ? xFields.every(d => colFields.indexOf(d) !== -1) : false;\n    const rowFieldExist = yFields.length ? yFields.every(d => rowFields.indexOf(d) !== -1) : false;\n    if (xFields.length && yFields.length) {\n        return colFieldExist && rowFieldExist;\n    }\n    return colFieldExist || rowFieldExist;\n});\n","import { layerFactory } from '@chartshq/visual-layer';\nimport { mergeRecursive, STATE_NAMESPACES, unionDomain } from 'muze-utils';\nimport {\n    generateAxisFromMap,\n    getDefaultMark,\n    getIndex,\n    getLayerConfFromFields,\n    getAdjustedDomain\n} from './encoder-helper';\nimport { retriveDomainFromData } from '../group-helper';\n\nimport { ROW, COLUMN, COL, LEFT, TOP, CARTESIAN, MEASURE, BOTH, X, Y } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class CartesianEncoder\n * @extends {VisualEncoder}\n */\nexport default class CartesianEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     *\n     * @memberof CartesianEncoder\n     */\n    static type () {\n        return CARTESIAN;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof CartesianEncoder\n     */\n    createAxis (axesCreators, fieldInfo) {\n        const geomCellAxes = {};\n        const {\n            axes\n        } = axesCreators;\n        const {\n            projections,\n            indices\n        } = fieldInfo;\n        const {\n            rowFields,\n            columnFields\n        } = projections;\n        const {\n             rowIndex,\n             columnIndex\n        } = indices;\n        const axisFields = [{\n            fields: rowFields,\n            index: rowIndex\n        }, {\n            fields: columnFields,\n            index: columnIndex\n        }];\n        const xAxes = axes.x || [];\n        const yAxes = axes.y || [];\n\n        [rowFields, columnFields].forEach((fields, i) => {\n            const type = i === 0 ? ROW : COLUMN;\n            const axis = i === 0 ? Y : X;\n\n            if (fields.length > 1) {\n                axesCreators.position = BOTH;\n            } else {\n                axesCreators.position = this.axisFrom()[type];\n            }\n            geomCellAxes[axis] = generateAxisFromMap(axis, axisFields[i], axesCreators, axis === X ? xAxes : yAxes);\n        });\n        return geomCellAxes;\n    }\n\n    updateDomains (store, axes) {\n        const xAxes = axes.x;\n        const yAxes = axes.y;\n        store.model.lock();\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${0}${i}0`, xAxes[i][j].domain());\n            }\n        }\n        for (let i = 0; i < yAxes.length; i++) {\n            for (let j = 0; j < yAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${i}${0}0`, yAxes[i][j].domain());\n                yAxes[i][j]._domainLock = false;\n            }\n        }\n\n        store.model.unlock();\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const unitDomains = store.get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`);\n        const resolver = context.resolver();\n        const units = resolver.units();\n        const domains = {\n            0: {},\n            1: {}\n        };\n\n        for (let rIdx = 0, len = units.length; rIdx < len; rIdx++) {\n            const unitsArr = units[rIdx];\n            for (let cIdx = 0, len2 = unitsArr.length; cIdx < len2; cIdx++) {\n                const unit = unitsArr[cIdx];\n                const axisFields = unit.fields();\n                [axisFields.x, axisFields.y].forEach((fieldArr, axisType) => {\n                    fieldArr.forEach((field, axisIndex) => {\n                        const key = !axisType ? `0${cIdx}${axisIndex}` : `${rIdx}0${axisIndex}`;\n                        const dom = unitDomains[`${rIdx}${cIdx}`];\n                        if (dom && Object.keys(dom).length !== 0) {\n                            domains[axisType][key] = unionDomain([(domains[axisType] && domains[axisType][key]) || [],\n                                dom[`${field}`]], field.subtype());\n                        }\n                    });\n                });\n            }\n        }\n\n        const { x: xAxes, y: yAxes } = resolver.axes();\n        store.model.lock();\n        [xAxes, yAxes].forEach((axesArr, axisType) => {\n            axesArr.forEach((axes, idx) => {\n                const min = [];\n                const max = [];\n                let domain = [];\n                let adjustedDomain = [];\n                if (axes.length > 1 && axes[0].constructor.type() === 'linear' && axes[0].config().alignZeroLine) {\n                    axes.forEach((axis, i) => {\n                        const key = !axisType ? `0${idx}${i}` : `${idx}0${i}`;\n                        domain = domains[axisType][key];\n                        min[i] = domain[0];\n                        max[i] = domain[1];\n                    });\n                    adjustedDomain = getAdjustedDomain(max, min);\n                }\n\n                axes.forEach((axis, index) => {\n                    const key = !axisType ? `0${idx}${index}` : `${idx}0${index}`;\n                    domain = adjustedDomain[index] || domains[axisType][key];\n                    axis.domain(domain);\n                    const type = !axisType ? 'x' : 'y';\n                    store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type}.${idx}${index}`, domain);\n                });\n            });\n        });\n        store.model.unlock();\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields, type) {\n        let facets = [];\n        let projections = [];\n        let counter = 0;\n        const primaryFacets = [];\n        const secondaryFacets = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n        const axisFrom = this.axisFrom();\n\n        for (let i = 0; i < primaryLen; i++) {\n            let projArr = [primaryFields[i]];\n            const primaryField = primaryFields[i];\n\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter];\n                if (secondaryField && secondaryField.type() === MEASURE) {\n                    counter++;\n                    projArr = [primaryField, secondaryField];\n                }\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n                primaryFacets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                    secondaryFacets.push(secondaryField);\n                }\n            }\n        }\n        if ((primaryFacets.length || secondaryFacets.length) && !projections.length) {\n            type = type === COL ? COLUMN : type;\n            if ((axisFrom[type] === LEFT || axisFrom[type] === TOP) && primaryFacets.length) {\n                const axisFromIndex = primaryFacets.length - 1;\n                const facet = primaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(secondaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    secondaryFacets.splice(existIndex, 1);\n                }\n                primaryFacets.splice(axisFromIndex, 1);\n            } else {\n                const axisFromIndex = 0;\n                const facet = secondaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(primaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    primaryFacets.splice(existIndex, 1);\n                }\n                secondaryFacets.splice(axisFromIndex, 1);\n            }\n        }\n\n        facets = [...primaryFacets, ...secondaryFacets];\n        facets = facets.filter((el, index, self) => index === self.findIndex(t => (t.toString() === el.toString())));\n        return {\n            facets,\n            projections\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof CartesianEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        return super.fieldSanitizer(datamodel, config);\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     *\n     * @memberof CartesianEncoder\n     */\n    getRetinalFieldsDomain (dataModels, encoding) {\n        const groupedModel = dataModels.groupedModel;\n        const domains = {};\n        for (const key in encoding) {\n            if ({}.hasOwnProperty.call(encoding, key)) {\n                const encodingObj = encoding[key];\n                const field = encodingObj.field;\n                if (!encodingObj.domain && field) {\n                    const domain = retriveDomainFromData(groupedModel, field);\n                    domains[field] = domain;\n                }\n            }\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     * @memberof CartesianEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n        // let currentLayerIndex = 0;\n        layerArray.length && layerArray.forEach((layer, i) => {\n            const def = layerFactory.sanitizeLayerConfig(layer);\n            def.order = i;\n            serializedLayers.push(def);\n        });\n        return serializedLayers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof CartesianEncoder\n     */\n    getLayerConfig (fields, userLayerConfig) {\n        const layerConfig = [];\n        const {\n            columnFields,\n            rowFields\n        } = fields;\n\n        // let currentLayerIndex = 0;\n        columnFields.forEach((colField) => {\n            const colFieldName = colField.toString();\n            rowFields.forEach((rowField) => {\n                let configs = [];\n                const rowFieldName = rowField.toString();\n                const encoding = {\n                    x: {\n                        field: colFieldName\n                    },\n                    y: {\n                        field: rowFieldName\n                    }\n                };\n                const rowFieldType = rowField.subtype();\n                const colFieldType = colField.subtype();\n                const mark = getDefaultMark(colFieldType, rowFieldType);\n\n                const defConfigs = [{\n                    mark,\n                    def: {\n                        mark,\n                        encoding\n                    }\n                }];\n\n                const layerConfigs = getLayerConfFromFields(colField.getMembers(),\n                    rowField.getMembers(), userLayerConfig || []);\n                if (layerConfigs.length) {\n                    configs = layerConfigs.map((layerConf) => {\n                        const mergedLayerConf = mergeRecursive(mergeRecursive({}, defConfigs[0].def), layerConf);\n                        const serializedLayerConfig = layerFactory.getSerializedConf(mergedLayerConf.mark,\n                            mergedLayerConf);\n                        return {\n                            mark: mergedLayerConf.mark,\n                            order: mergedLayerConf.order,\n                            def: serializedLayerConfig\n                        };\n                    });\n                } else {\n                    configs = defConfigs;\n                }\n\n                layerConfig.push(...configs);\n            });\n        });\n        return layerConfig;\n    }\n}\n","import { layerFactory } from '@chartshq/visual-layer';\nimport { mergeRecursive, STATE_NAMESPACES } from 'muze-utils';\nimport VisualEncoder from './visual-encoder';\nimport { RADIUS, ANGLE, SIZE, MEASURE, ARC, POLAR, COLOR } from '../enums/constants';\n/**\n *\n *\n * @export\n * @class PolarEncoder\n * @extends {VisualEncoder}\n */\nexport default class PolarEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof PolarEncoder\n     */\n    createAxis (axesCreators, fieldInfo) {\n        const {\n            axes\n        } = axesCreators;\n        const geomCellAxes = axes;\n        const {\n            indices\n        } = fieldInfo;\n        const {\n            rowIndex,\n            columnIndex\n        } = indices;\n        // Dummy axes for polar, to create blank cells\n        const pieAxes = geomCellAxes.pie || [];\n\n        pieAxes[rowIndex] = pieAxes[rowIndex] || [];\n        pieAxes[rowIndex][columnIndex] = [];\n\n        geomCellAxes.pie = pieAxes;\n        geomCellAxes.x = null;\n        geomCellAxes.y = null;\n\n        return geomCellAxes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields) {\n        let counter = 0;\n        const facets = [];\n        const projections = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n\n        for (let i = 0; i < primaryLen; i++) {\n            const primaryField = primaryFields[i];\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter++];\n                const projArr = secondaryField ? [primaryField, secondaryField] : [primaryField];\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                }\n            }\n        }\n        return {\n            facets,\n            projections\n        };\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const domains = store.get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`);\n        const domainProps = {\n            radius: [Infinity, -Infinity]\n        };\n        Object.values(domains).forEach((domainVal) => {\n            for (const key in domainVal) {\n                domainProps[key] = [Math.min(domainVal[key][0], domainProps[key][0]),\n                    Math.min(domainVal[key][1], domainProps[key][1])];\n            }\n        });\n        store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`, domainProps.radius);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    setCommonDomain () {\n        // No domain to be set\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    static type () {\n        return POLAR;\n    }\n\n    layers (...layers) {\n        if (layers.length) {\n            this._layers = layers[0];\n            return this;\n        }\n        return this._layers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof PolarEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        let sanitizedRows = [[], []];\n        let sanitizedColumns = [[], []];\n        const fields = super.fieldSanitizer(datamodel, config);\n        const {\n            layers\n        } = config;\n        const {\n            rows,\n            columns\n        } = fields;\n        const layer = layers[0];\n        const encoding = layer.encoding;\n        const radius = encoding && encoding.radius ? encoding.radius.field : null;\n        const angle = encoding && encoding.angle ? encoding.angle.field : null;\n        const sanitizedFields = [sanitizedRows, sanitizedColumns];\n\n        [rows, columns].forEach((fieldType, typeIndex) => {\n            fieldType.forEach((fieldSet, i) => fieldSet.forEach((field) => {\n                if (field.toString() !== radius && field.toString() !== angle && field.type() !== MEASURE) {\n                    sanitizedFields[typeIndex][i].push(field);\n                }\n            }));\n        });\n        sanitizedColumns = [...new Set(sanitizedColumns)];\n        sanitizedRows = [...new Set(sanitizedRows)];\n        this.fieldInfo({ rows: sanitizedRows, columns: sanitizedColumns });\n        return this.fieldInfo();\n    }\n\n    getRetinalFieldsDomain (dataModels, encoding, facetFields, groupBy) {\n        let sizeField;\n        let colorField;\n        const fields = [];\n        const layers = this.layers();\n        const dataModel = dataModels.parentModel;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const domains = {};\n        if (layers && layers[0]) {\n            const layer = layers[0];\n            const layerEncoding = layer.def.encoding || {};\n\n            [RADIUS, ANGLE, SIZE, COLOR].forEach((encType) => {\n                const field = layerEncoding[encType] ? layerEncoding[encType].field : '';\n                const measureField = fieldsConfig[field] && fieldsConfig[field].def.type === MEASURE;\n                if (encType === SIZE && measureField) {\n                    sizeField = field;\n                }\n                if (encType === COLOR) {\n                    colorField = field;\n                }\n                fieldsConfig[field] && !measureField && fields.push(field);\n            });\n        }\n\n        if (sizeField) {\n            domains[sizeField] = dataModel.groupBy(facetFields, {\n                [sizeField]: 'sum'\n            }).getFieldspace().fieldsObj()[sizeField].domain();\n        }\n\n        if (colorField) {\n            const dm = dataModel.groupBy([...facetFields, ...fields], groupBy.measures);\n            domains[colorField] = dm.getFieldspace().fieldsObj()[colorField].domain();\n        }\n        return domains;\n    }\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof PolarEncoder\n     */\n    getLayerConfig (fields, userLayerConfig) {\n        let layerConfig = [];\n        const {\n                columnFields,\n                rowFields\n            } = fields;\n        const allFields = [...columnFields, ...rowFields];\n\n        allFields.forEach(() => {\n            const encoding = {};\n            let config = {\n                mark: ARC,\n                def: {\n                    encoding\n                }\n            };\n            if (userLayerConfig && userLayerConfig.length > 0) {\n                config = mergeRecursive(config, userLayerConfig[0]);\n            }\n            layerConfig.push(config);\n        });\n        if (layerConfig.length === 0) {\n            layerConfig = userLayerConfig;\n        }\n\n        this.layers(layerConfig);\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     *\n     * @memberof PolarEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n\n        layerArray.length && layerArray.forEach((layer) => {\n            const def = layerFactory.getSerializedConf(layer.mark, layer);\n            serializedLayers.push({\n                mark: layer.mark,\n                def\n            });\n        });\n        return serializedLayers;\n    }\n}\n","import { createRetinalAxis } from './encoder-helper';\nimport { COLOR, SHAPE, SIZE } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class RetinalEncoder\n * @extends {VisualEncoder}\n */\nexport default class RetinalEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     *\n     * @memberof RetinalEncoder\n     */\n    createAxis (axesCreators) {\n        const { fieldsConfig, config } = axesCreators;\n        const newAxes = {};\n\n        [COLOR, SHAPE, SIZE].forEach((axisType) => {\n            newAxes[`${axisType}`] = createRetinalAxis({ axisType, fieldsConfig }, config[axisType]);\n        });\n        return newAxes;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof RetinalEncoder\n     */\n    static type () {\n        return 'retinal';\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof RetinalEncoder\n     */\n    getLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n        userLayerConfig.forEach((e) => {\n            const config = e;\n            [COLOR, SHAPE, SIZE].forEach((axis) => {\n                if (encodingConfigs[axis] && encodingConfigs[axis].field) {\n                    const def = config.def;\n                    if (config.def instanceof Array) {\n                        def.forEach((conf) => {\n                            conf.encoding = conf.encoding || {};\n                            !conf.encoding[axis] && (conf.encoding[axis] = {});\n                            conf.encoding[axis].field = encodingConfigs[axis].field;\n                        });\n                    } else {\n                        def.encoding = def.encoding || {};\n                        !def.encoding[axis] && (def.encoding[axis] = {});\n                        def.encoding[axis].field = encodingConfigs[axis].field;\n                    }\n                }\n            });\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} context\n     *\n     * @memberof RetinalEncoder\n     */\n    setCommonDomain (context) {\n        const { domains, axes, encoding } = context;\n\n        Object.entries(encoding).forEach((enc) => {\n            if (enc[1] && enc[1].field) {\n                const encType = enc[0];\n                const field = enc[1].field;\n\n                if (field) {\n                    axes[encType].forEach((axis) => {\n                        const domain = domains[field];\n                        !enc[1].domain && axis.updateDomain(domain);\n                    });\n                }\n            }\n        });\n        return axes;\n    }\n}\n","import { Store, dataSelect, FieldType } from 'muze-utils';\nimport { DATA_UPDATE_COUNTER } from '../enums/defaults';\nimport { Variable } from '../variable';\nimport { PolarEncoder, CartesianEncoder } from '../encoder';\nimport {\n    DIMENSION,\n    MEASURE,\n    ORDINAL,\n    LINEAR,\n    ROW,\n    COLUMN,\n    COL,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    COLOR,\n    SIZE,\n    TEMPORAL,\n    SHAPE,\n    INTERACTION,\n    GRID_LINES,\n    GRID_BANDS,\n    HEADER,\n    FACET,\n    X,\n    Y,\n    POLAR\n} from '../enums/constants';\n\n/**\n * Creates an instance of a store which contains the arguments to make the class reactive\n *\n * @return {Object} instance of store\n * @memberof VisualGroup\n */\nexport const initStore = () => new Store({\n    [DATA_UPDATE_COUNTER]: DATA_UPDATE_COUNTER\n});\n\n/**\n *\n *\n * @param {*} arr\n */\nexport const isDistributionEqual = arr => [...arr[0], ...arr[1]].reduce((isEqual, row) => {\n    const rowType = row.type();\n\n    if (rowType === MEASURE || rowType === TEMPORAL) {\n        isEqual = true;\n    }\n    return isEqual;\n}, false);\n\n/**\n *\n *\n */\nexport const initializeCacheMaps = () => ({\n    cellMap: new Map(),\n    xAxesMap: new Map(),\n    yAxesMap: new Map(),\n    entryCellMap: new Map(),\n    exitCellMap: new Map()\n});\n\n/**\n *\n *\n * @param {*} axisName\n * @param {*} id\n */\nexport const getAxisKey = (axisName, ...params) => `${axisName}-axis-${params.join('-')}`;\n\n/**\n *\n *\n * @param {*} rowId\n * @param {*} columnId\n */\nexport const getCellKey = (rowId, columnId) => `cell-${rowId}-${columnId}`;\n\n/**\n *\n *\n * @param {*} config\n *\n */\nexport const extractUnitConfig = (config) => {\n    const unitConfig = {};\n    const attrNames = [INTERACTION, GRID_LINES, GRID_BANDS];\n\n    attrNames.forEach((attr) => {\n        if (config[attr] !== undefined) {\n            unitConfig[attr] = config[attr];\n        }\n    });\n    return unitConfig;\n};\n\n/**\n *\n *\n * @param {*} headers\n * @param {*} index\n * @param {*} rowLength\n *\n * @memberof MatrixResolver\n */\nexport const getHeaderText = (headers, index, rowLength) => {\n    let header = '';\n\n    if (index === rowLength - 1 && headers.length > rowLength) {\n        for (let i = index; i < headers.length - 1; i++) {\n            header += `${headers[i].toString()} / `;\n        }\n        header += headers[headers.length - 1].toString();\n        return header;\n    } else if (headers[index]) {\n        return headers[index].toString();\n    }\n    return '';\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} fieldHeaders\n * @param {*} TextCell\n * @param {*} labelManager\n *\n */\nexport const headerCreator = (fields, fieldHeaders, TextCell, labelManager) => {\n    const headers = fields.length > 0 ? fields[0].map((cell, i) => new TextCell({ type: HEADER }, { labelManager })\n                    .source(getHeaderText(fieldHeaders, i, fields[0].length))\n                    .config({ show: cell.config().show })) : [];\n    return headers;\n};\n\n/**\n *\n *\n * @param {*} variable\n * @param {*} allFields\n *\n */\nexport const findInGroup = (variable, allFields) => {\n    let channel = null;\n\n    [COLOR, SIZE, SHAPE].forEach((e) => {\n        if (this.store.get(e) && variable === this.store.get(e)[0]) {\n            channel = e;\n        }\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    [ROW, COL].forEach((facetType) => {\n        allFields[`${facetType}Facets`].forEach((e) => {\n            if (e.toString() === variable) {\n                channel = { channel: FACET, type: facetType === COL ? COLUMN : ROW };\n            }\n        });\n    });\n\n    if (channel) {\n        return channel;\n    }\n\n    [ROW, COL].forEach((projType) => {\n        allFields[`${projType}Projections`].forEach((e) => {\n            e.forEach((m) => {\n                if (m.toString() === variable) {\n                    channel = projType === COL ? X : Y;\n                }\n            });\n        });\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    return null;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} field\n */\nexport const getAxisType = (fieldsConfig, field) => {\n    let fieldType = ORDINAL;\n\n    if (field && fieldsConfig[field].def.type !== DIMENSION) {\n        fieldType = LINEAR;\n    }\n    return fieldType;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} fieldName\n *\n */\nexport const retriveDomainFromData = (datamodel, fieldName) => {\n    const field = datamodel.getFieldspace().fields.find(d => d.name() === fieldName.toString());\n    return field.domain();\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    let xAxes = null;\n    let yAxes = null;\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n\n    xAxisSet && xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes = xAxes || [];\n        xAxes.push(xAxis);\n    });\n\n    yAxisSet && yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes = yAxes || [];\n        yAxes.push(yAxis);\n    });\n\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n *\n *\n * @param {*} layers\n *\n */\nexport const getEncoder = (layers) => {\n    let encoder = new CartesianEncoder();\n\n    if (layers) {\n        // Figuring out the kind of layers the group will have\n        encoder = layers.every(e => e.mark === 'arc') ? new PolarEncoder() : encoder;\n    }\n    return encoder;\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} userAxisFromConfig\n *\n */\nexport const getHeaderAxisFrom = (type, fields, userAxisFromConfig) => {\n    let axisFrom = userAxisFromConfig[type];\n    let headerFrom = '';\n    const options = type === ROW ? [LEFT, RIGHT] : [BOTTOM, TOP];\n    const [firstField, secondField] = fields;\n    const firstFieldType = i => (firstField.length ? firstField[i].type() : null);\n    const secondFieldType = i => (secondField.length ? secondField[i].type() : null);\n\n    if (firstFieldType(firstField.length - 1) === DIMENSION && secondFieldType(0) === DIMENSION) {\n        headerFrom = axisFrom ? options[1 - options.indexOf(axisFrom)] : options[1];\n\n        if (type === COLUMN && (firstField[firstField.length - 1].toString() === secondField[0].toString())) {\n            axisFrom = TOP;\n        } else {\n            axisFrom = axisFrom || options[0];\n        }\n    } else if (secondFieldType(secondField.length - 1) === DIMENSION) {\n        headerFrom = type === ROW ? RIGHT : BOTTOM;\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else {\n        headerFrom = type === ROW ? LEFT : TOP;\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    if (firstFieldType(firstField.length - 1) === MEASURE && secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    } else if (secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else if (firstFieldType(firstField.length - 1) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    return [headerFrom, axisFrom];\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} layers\n *\n * @memberof MatrixResolver\n */\nexport const setFacetsAndProjections = (context, fieldInfo, encoder) => {\n    const {\n        fields,\n        type\n    } = fieldInfo;\n    const { facets, projections } = encoder.simpleEncoder.getFacetsAndProjections(fields, type);\n\n    context.facets({ [`${type}Facets`]: facets });\n    context.projections({ [`${type}Projections`]: projections });\n\n    return { facets, projections, fields };\n};\n\n/**\n * Creates a selection set from a data set with corresponding attributes\n *\n * @export\n * @param {Selection} sel contains previous selection\n * @param {Object} appendObj Object to be appended\n * @param {Array} data Data based on which the selection is entered/updated/removed\n * @param {Object} [attrs={}] Attributes to be set on the data\n * @return {Selection} Merged selection\n */\nexport const createSelection = (sel, appendObj, data, idFn) => {\n    let selection = sel || dataSelect([]);\n\n    selection = selection.data(data, idFn);\n\n    const enter = selection.enter().append(appendObj);\n    const mergedSelection = enter.merge(selection);\n\n    selection.exit() && selection.exit().remove();\n    return mergedSelection;\n};\n\nconst getRowBorders = (left, right) => {\n    const borders = {};\n    borders.top = false;\n    borders.bottom = false;\n    if (left.length > 1 || right.length > 1) {\n        borders.top = true;\n        borders.bottom = true;\n    }\n    return borders;\n};\n\nconst getColumnsBorders = (top, bottom) => {\n    const borders = {};\n    borders.left = false;\n    borders.right = false;\n    if (top.length || bottom.length) {\n        if ((top[0] && top[0].length > 1) || (bottom[0] && bottom[0].length > 1)) {\n            borders.left = true;\n            borders.right = true;\n        }\n    }\n    return borders;\n};\n\nconst getValueBorders = (rows, columns) => {\n    const borders = { top: true, left: true, bottom: true, right: true };\n    const borderTypeRow = [LEFT, RIGHT];\n    const borderTypeCol = [TOP, BOTTOM];\n    rows.forEach((e, i) => {\n        if (e[0] && e[0].length) {\n            borders[borderTypeRow[i]] = true;\n        } else {\n            borders[borderTypeRow[i]] = false;\n        }\n    });\n    columns.forEach((e, i) => {\n        if (e.length) {\n            borders[borderTypeCol[i]] = true;\n        } else {\n            borders[borderTypeCol[i]] = false;\n        }\n    });\n\n    return borders;\n};\n\nexport const getBorders = (matrices, encoder) => {\n    let showRowBorders = { top: false, bottom: false };\n    let showColBorders = { left: false, right: false };\n    let showValueBorders = { top: false, bottom: false, left: false, right: false };\n    const {\n        rows,\n        columns,\n        values: valueMatrix\n    } = matrices;\n    const [leftRows, rightRows] = rows;\n    const [topColumns, bottomColumns] = columns;\n    const {\n        rowDimensions,\n        columnDimensions,\n        rowTemporalFields,\n        columnTemporalFields,\n        columnMeasures,\n        rowMeasures\n    } = encoder.fieldInfo();\n    const allDimensionLength = rowDimensions.length + columnDimensions.length;\n    const allMeasuresLength = rowMeasures.length + columnMeasures.length;\n    const allTemporalFieldsLength = rowTemporalFields.length + columnTemporalFields.length;\n\n    if (encoder.constructor.type() === POLAR) {\n        if (!allDimensionLength) {\n            return { showRowBorders, showColBorders, showValueBorders };\n        }\n    } else if (!allMeasuresLength && !allTemporalFieldsLength && allDimensionLength <= 2) {\n        return { showRowBorders, showColBorders, showValueBorders };\n    }\n\n    showRowBorders = getRowBorders(leftRows, rightRows);\n    showColBorders = getColumnsBorders(topColumns, bottomColumns);\n    showValueBorders = getValueBorders([leftRows, rightRows], [topColumns, bottomColumns]);\n\n    if (valueMatrix.length > 1) {\n        showValueBorders.top = true;\n        showValueBorders.bottom = true;\n    }\n    if (valueMatrix.length && valueMatrix[0].length > 1) {\n        showValueBorders.left = true;\n        showValueBorders.right = true;\n    }\n    return { showRowBorders, showColBorders, showValueBorders };\n};\n\nexport const getFieldsFromSuppliedLayers = (suppliedLayerConfig, fieldsConfig) => {\n    let fields = [];\n    const encodingArr = suppliedLayerConfig.map(conf => (conf.encoding || {}));\n    fields = [...fields, [].concat(...encodingArr.map(enc => Object.values(enc).map(d => d.field)))];\n    fields = fields.filter(field => fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n    return fields;\n};\n\nexport const extractFields = (facetsAndProjections, layerFields) => {\n    const fields = Object.values(facetsAndProjections).map((arr) => {\n        const flattenArray = [].concat(...arr);\n        return [].concat(...flattenArray.map((field) => {\n            if (field instanceof Variable) {\n                return field.getMembers();\n            }\n            return field;\n        }));\n    });\n    return [].concat(...fields, ...layerFields);\n};\n","import Selection from './selection';\n/**\n * This function applies a selection operation on a data array.\n *\n * @export\n * @param {Array} [data=[]] The data array to be observed.\n * @return {Selection} Instance of a selection.\n */\nexport default function dataSelect (data = []) {\n    return new Selection(data);\n}\n\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: false\n    },\n    [ACTIONS.HOVER]: {\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.LONGTOUCH]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: true\n    },\n    [ACTIONS.TOUCHDRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: true\n    },\n    [ACTIONS.CLICK]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: false\n    }\n};\n","import {\n    FieldType,\n    getDependencyOrder,\n    getObjProp,\n    defaultValue,\n    objectIterator,\n    unionDomain,\n    makeElement,\n    DimensionSubtype,\n    getClosestIndexOf,\n    toArray,\n    MeasureSubtype\n} from 'muze-utils';\nimport { layerFactory } from '@chartshq/visual-layer';\n\nexport const getDimensionMeasureMap = (layers, fieldsConfig) => {\n    const retinalEncodingsAndMeasures = {};\n\n    layers.forEach((layer) => {\n        const {\n            colorField,\n            sizeField,\n            shapeField,\n            xField,\n            yField\n        } = layer.encodingFieldsInf();\n        const measures = [xField, yField].filter(field => fieldsConfig[field] && fieldsConfig[field].def.type ===\n            FieldType.MEASURE);\n        [colorField, sizeField, shapeField].forEach((field) => {\n            if (fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                !retinalEncodingsAndMeasures[field] && (retinalEncodingsAndMeasures[field] = []);\n                retinalEncodingsAndMeasures[field].push(...measures);\n            }\n        });\n    });\n\n    for (const key in retinalEncodingsAndMeasures) {\n        if ({}.hasOwnProperty.call(retinalEncodingsAndMeasures, key)) {\n            retinalEncodingsAndMeasures[key] = [...new Set(retinalEncodingsAndMeasures[key])];\n        }\n    }\n    return retinalEncodingsAndMeasures;\n};\n\nexport const transformDataModels = (transform, dataModel) => {\n    const dataModels = {};\n    for (const key in transform) {\n        if ({}.hasOwnProperty.call(transform, key)) {\n            const transformVal = transform[key];\n            dataModels[key] = transformVal(dataModel);\n        }\n    }\n\n    return dataModels;\n};\n\nexport const getLayerFromDef = (context, definition, existingLayer, namespaces) => {\n    let instances = existingLayer;\n    const dependencies = context._layerDeps;\n    const metaInf = context.metaInf();\n    if (!existingLayer) {\n        instances = layerFactory.getLayerInstance(definition);\n        toArray(instances).forEach((inst, i) => {\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: namespaces[i]\n            });\n            inst.store(context.store());\n        });\n    }\n    const layers = {};\n    const instanceArr = toArray(instances);\n    definition = toArray(definition);\n    definition.reduce((acc, def, idx) => {\n        const instance = instanceArr[idx];\n        instance.config(def);\n        instance.dependencies(dependencies);\n        instance.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        if (def.name) {\n            instance.alias(def.name);\n        }\n        layers[instance.alias()] = instance;\n        return acc;\n    }, {});\n    return layers;\n};\n\nexport const resolveEncodingTransform = (layerInst, store) => {\n    const encodingTransform = layerInst.config().encodingTransform || {};\n    const resolvable = encodingTransform.resolvable;\n    let depArr = [];\n    if (resolvable) {\n        const resolved = resolvable(store);\n        depArr = resolved.depArr;\n        layerInst.encodingTransform(resolved.fn);\n    } else if (encodingTransform instanceof Function) {\n        layerInst.encodingTransform(encodingTransform);\n    }\n    return depArr;\n};\n\nexport const createLayers = (context, layerDefinitions) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    const store = {\n        layers: {},\n        components: {\n            unit: context\n        }\n    };\n    let layerIndex = 0;\n    let layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef, i) => {\n        const mark = layerDef.mark;\n        const definition = layerDef.def;\n        const markId = `${mark}-${i}`;\n        const defArr = toArray(definition);\n        defArr.forEach((def) => {\n            def.order = layerDef.order + layerIndex;\n        });\n        layerIndex += defArr.length;\n        const instances = getLayerFromDef(context, definition, layersMap[markId], i);\n        store.layers = Object.assign(store.layers, instances);\n        const instanceValues = Object.values(instances);\n        layersArr = layersArr.concat(...instanceValues);\n        layersMap[markId] = instanceValues;\n        markSet[markId] = markId;\n        return layersArr;\n    }, []);\n    store.unit = context;\n    const layerdeps = {};\n    layers.forEach((layer) => {\n        const depArr = resolveEncodingTransform(layer, store);\n        layerdeps[layer.alias()] = depArr;\n    });\n\n    const order = getDependencyOrder(layerdeps);\n    layers = order.map(name => store.layers[name]);\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n    return layers;\n};\n\nexport const sanitizeLayerDef = (layerDefs) => {\n    const sanitizedDefs = [];\n    layerDefs.forEach((layerDef, i) => {\n        const def = layerDef.def;\n        const mark = layerDef.mark;\n        if (!def) {\n            const sConf = layerFactory.getSerializedConf(layerDef.mark, layerDef);\n            if (!sConf.name) {\n                sConf.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push({\n                mark: layerDef.mark,\n                def: sConf\n            });\n        } else {\n            if (!def.name) {\n                def.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push(layerDef);\n        }\n    });\n    return sanitizedDefs;\n};\n\nexport const attachDataToLayers = (layers, dm, transformedDataModels) => {\n    layers.forEach((layer) => {\n        const dataSource = layer.config().source;\n        const dataModel = dataSource instanceof Function ? dataSource(dm) :\n            (transformedDataModels[dataSource] || dm);\n        if (layer.data() !== dataModel) {\n            layer.data(dataModel);\n        }\n    });\n};\n\nexport const attachAxisToLayers = (axes, layers, layerAxisIndex) => {\n    layers.forEach((layer) => {\n        const layerId = layer.id();\n        const axesObj = {};\n\n        objectIterator(axes, (key) => {\n            const axisInf = layerAxisIndex[layerId];\n            if (axisInf) {\n                axes[key] && (axesObj[key] = axes[key][axisInf[key] || 0]);\n            }\n        });\n        Object.keys(axesObj).length && layer.axes(axesObj);\n    });\n};\n\nexport const getLayerAxisIndex = (layers, fields) => {\n    const layerAxisIndex = {};\n    layers.forEach((layer) => {\n        const { axis, encoding } = layer.config();\n        const id = layer.id();\n        ['x', 'y'].forEach((type) => {\n            let index;\n            const field = defaultValue(getObjProp(axis, type), encoding[type] && encoding[type].field);\n            if (fields[type]) {\n                index = fields[type].findIndex(fieldInst => fieldInst.getMembers().indexOf(field) !== -1);\n            } else {\n                index = 0;\n            }\n            !layerAxisIndex[id] && (layerAxisIndex[id] = {});\n            layerAxisIndex[id][type] = index;\n        });\n    });\n    return layerAxisIndex;\n};\n\nexport const unionDomainFromLayers = (layers, axisFields, layerAxisIndex, fieldsConfig) => {\n    let domains = {};\n    layers = layers.filter(layer => layer.getDataDomain() !== null);\n    layers.forEach((layer) => {\n        let domainValues = {};\n        const config = layer.config();\n        const encoding = config.encoding;\n        const layerDomain = layer.getDataDomain();\n        const layerId = layer.id();\n\n        if (layerDomain !== null && config.calculateDomain !== false) {\n            domainValues = Object.entries(layerDomain);\n            domains = domainValues.reduce((fieldDomain, domain) => {\n                const encodingType = domain[0];\n                const field = encoding[encodingType].field;\n                const axisIndex = layerAxisIndex[layerId][encodingType];\n                if (encodingType in axisFields) {\n                    const fieldStr = `${axisFields[encodingType][axisIndex]}`;\n                    fieldDomain[fieldStr] = fieldDomain[fieldStr] || [];\n                    fieldDomain[fieldStr] = unionDomain(([fieldDomain[fieldStr], domain[1]]),\n                        fieldsConfig[field].def.subtype ? fieldsConfig[field].def.subtype :\n                                fieldsConfig[field].def.type);\n                } else {\n                    fieldDomain[encodingType] = domain[1];\n                }\n                return fieldDomain;\n            }, domains);\n        }\n    });\n    return domains;\n};\n\nexport const renderLayers = (context, container, layers, measurement) => {\n    context._lifeCycleManager.notify({ client: layers, action: 'beforedraw', formalName: 'layer' });\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const orderedLayers = context.layers().sort((a, b) => a.config().order - b.config().order);\n    const layerParentGroup = makeElement(container, 'g', [1], `${classPrefix}-layer-group`);\n    const layerDepOrder = getDependencyOrder(context._layerDepOrder);\n    const groups = {};\n    makeElement(layerParentGroup, 'g', orderedLayers, null, {\n        update: (group, layer) => {\n            groups[layer.alias()] = {\n                group,\n                layer\n            };\n        }\n    });\n    const layerSeq = layerDepOrder.map(name => groups[name]);\n    layerSeq.forEach((o) => {\n        const layer = o.layer;\n        const group = o.group;\n        layer.measurement(measurement);\n        layer.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        layer.config().render !== false && layer.mount(group.node());\n    });\n    return this;\n};\n\nexport const getNearestDimensionalValue = (context, position) => {\n    const fields = context.fields();\n    if (!fields.x.length || !fields.y.length) {\n        return null;\n    }\n    const data = context.data();\n    const axes = context.axes();\n    const fieldsConfig = data.getFieldsConfig();\n    const xField = getObjProp(fields, 'x', 0).getMembers()[0];\n    const yField = getObjProp(fields, 'y', 0).getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n\n    const entryVal = [['x', xFieldType, xField], ['y', yFieldType, yField]].find(entry =>\n        entry[1] === DimensionSubtype.CATEGORICAL || entry[1] === DimensionSubtype.TEMPORAL);\n\n    if (!entryVal || (xFieldType !== MeasureSubtype.CONTINUOUS && yFieldType !== MeasureSubtype.CONTINUOUS)) {\n        return null;\n    }\n    const field = entryVal[2];\n    const index = fieldsConfig[field].index;\n    let key = axes[entryVal[0]][0].invert(position[entryVal[0]]);\n    if (entryVal[1] === DimensionSubtype.TEMPORAL) {\n        const filterData = [...new Set(data.getData().data.map(d => d[index]))];\n        key = filterData[getClosestIndexOf(filterData, key)];\n    }\n\n    return key !== undefined ? [[field], [key]] : null;\n};\n\nexport const getLayersBy = (layers, searchBy, value) => layers.filter((layer) => {\n    const name = searchBy === 'type' ? layer.constructor.formalName() : layer.alias();\n    return name === value;\n});\n\nexport const removeLayersBy = (layers, searchBy, value) => {\n    layers.filter((inst) => {\n        const name = searchBy === 'type' ? inst.config().mark : inst.alias();\n        if (name === value) {\n            inst.remove();\n            return false;\n        }\n        return true;\n    });\n};\n\nexport const createSideEffectGroup = (container, className) => makeElement(container, 'g', [1], className).node();\n\nexport const createRenderPromise = (unit) => {\n    const renderedPromise = unit._renderedPromise;\n    renderedPromise.then(() => {\n        unit._renderedPromise = new Promise((resolve) => {\n            unit._renderedResolve = resolve;\n        });\n        createRenderPromise(unit);\n    });\n};\n","import { getObjProp, defaultValue, makeElement, DimensionSubtype, DataModel } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport { GRIDLINEPARENTGROUPCLASS, GRIDBANDPARENTGROUPCLASS } from '../enums/constants';\nimport { TIMEDIFFS } from '../enums/reactive-props';\n\nconst LINEAR = ScaleType.LINEAR;\n\nconst getLayerDefinition = (context, axes, type, orientation) => {\n    let encoding;\n    const config = context.config();\n    const { classPrefix, gridLines, gridBands } = config;\n    const gridLineColor = gridLines.color;\n    const zeroLineColor = gridLines.zeroLineColor;\n    const defClassName = type === 'band' ? gridBands.defClassName : gridLines.defClassName;\n    const gridBandColor = gridBands[orientation].color;\n    const axis = axes[orientation][0];\n    const isLinearScale = axis.constructor.type() === LINEAR;\n\n    if (type === 'band' && isLinearScale) {\n        encoding = {\n            [orientation]: `${orientation}value`,\n            [`${orientation}0`]: `${orientation}value0`\n        };\n    } else {\n        encoding = {\n            [orientation]: isLinearScale ? `${orientation}value` : `${orientation}dim`\n        };\n    }\n    encoding.color = {\n        value: (data, i) => {\n            const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n            if (type === 'band') {\n                return gridBandColor[i % 2];\n            }\n            return isNegativeDomain && data[orientation] === 0 ? zeroLineColor : gridLineColor;\n        }\n    };\n\n    return {\n        definition: {\n            defClassName: `${defClassName}-${orientation}`,\n            className: config.className,\n            individualClassName: (data, i) => {\n                let className;\n                const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n                if (isNegativeDomain && data.y === 0 && type !== 'band') {\n                    className = `${classPrefix}-axis-zero-line`;\n                } else {\n                    className = `${classPrefix}-grid-${type}-${orientation}-${i % 2}`;\n                }\n                return className;\n            },\n            [`pad${orientation.toUpperCase()}`]: type === 'band' ? 0 : undefined,\n            encoding\n        },\n        axes: {\n            [orientation]: axis\n        },\n        interactive: false\n    };\n};\n\nconst getDefaultVisibilty = (show, axis) => {\n    if (axis.constructor.type() === LINEAR) {\n        return show;\n    }\n    return false;\n};\n\nexport const getGridLayerDefinitions = (context, config, type) => ['x', 'y'].map((axisType) => {\n    const axes = context.axes();\n    if (!axes[axisType]) {\n        return null;\n    }\n    const show = defaultValue(config[axisType] && config[axisType].show,\n        getDefaultVisibilty(config.show, axes[axisType][0]));\n\n    return show ? getLayerDefinition(context, axes, type, axisType) : null;\n}).filter(d => d !== null);\n\nexport const getGridLayerData = (axes, fields, fieldsConfig) => {\n    const gridData = {};\n    ['x', 'y'].forEach((type) => {\n        let ticks = axes[type][0].getTickValues();\n        const subtype = getObjProp(fieldsConfig, getObjProp(fields, type, 0).getMembers()[0], 'def', 'subtype');\n        const jsonData = [];\n        const schema = [\n            {\n                name: 'yvalue',\n                type: 'measure'\n            }, {\n                name: 'xvalue',\n                type: 'measure'\n            },\n            {\n                name: 'yvalue0',\n                type: 'measure'\n            }, {\n                name: 'xvalue0',\n                type: 'measure'\n            }, {\n                name: 'xdim',\n                type: 'dimension',\n                subtype\n            }, {\n                name: 'ydim',\n                type: 'dimension',\n                subtype\n            }\n        ];\n        const len = Math.max(ticks.length);\n        ticks = subtype === DimensionSubtype.TEMPORAL ? ticks.map(d => d.getTime()) : ticks;\n        for (let i = 0; i < len; i += 1) {\n            jsonData.push({\n                [`${type}value`]: ticks[i],\n                [`${type}value0`]: ticks[i + 1],\n                [`${type}dim`]: ticks[i],\n                [`${type}dim`]: ticks[i]\n            });\n        }\n        gridData[type] = new DataModel(jsonData, schema);\n    });\n    return gridData;\n};\n\nexport const createGridLineLayer = (context) => {\n    const vuConf = context.config();\n    const metaInf = context.metaInf();\n    ['band', 'line'].forEach((type) => {\n        let mark;\n        let config;\n        let instances;\n        if (type === 'band') {\n            mark = 'bar';\n            config = vuConf.gridBands;\n            instances = context._gridbands;\n        } else {\n            mark = 'tick';\n            config = vuConf.gridLines;\n            instances = context._gridlines;\n        }\n        const definitions = getGridLayerDefinitions(context, config, type);\n\n        definitions.forEach((atomicDef, i) => {\n            let layer;\n            const definition = atomicDef.definition;\n            const axesObj = atomicDef.axes;\n            const sConf = layerFactory.getSerializedConf(mark, definition);\n            sConf.mark = mark;\n            if (!instances[i]) {\n                layer = layerFactory.getLayerInstance(sConf);\n                layer.dependencies(context._layerDeps);\n            } else {\n                layer = instances[i];\n            }\n\n            layer\n                            .metaInf({\n                                unitRowIndex: metaInf.rowIndex,\n                                unitColIndex: metaInf.colIndex,\n                                namespace: `${metaInf.namespace}${type}${i}`\n                            })\n                            .store(context.store())\n                            .config(sConf)\n                            .dataProps({\n                                timeDiffs: context.store().get(TIMEDIFFS)\n                            })\n                            .axes(axesObj);\n            instances[i] = layer;\n        });\n    });\n};\n\nexport const attachDataToGridLineLayers = (context) => {\n    const axes = context.axes();\n    const measurement = {\n        width: context.width(),\n        height: context.height()\n    };\n\n    const gridLayerData = getGridLayerData(axes, context.fields(), context.data().getFieldsConfig());\n    [].concat(...context._gridbands, ...context._gridlines).forEach((inst) => {\n        inst.data(inst.axes().x ? gridLayerData.x : gridLayerData.y).measurement(measurement);\n    });\n};\n\nexport const renderGridLineLayers = (context, container) => {\n    const axes = context.axes();\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n\n    if (axes && ((axes.x && axes.x.length) || (axes.y && axes.y.length))) {\n        [[context._gridlines, `${classPrefix}-${GRIDLINEPARENTGROUPCLASS}`],\n            [context._gridbands, `${classPrefix}-${GRIDBANDPARENTGROUPCLASS}`]].forEach((entry) => {\n                const [instances, parentGroupClass] = entry;\n                const mountPoint = makeElement(container, 'g', [1], `.${parentGroupClass}`);\n                const className = `${parentGroupClass}-group`;\n                makeElement(mountPoint, 'g', instances, `.${className}`, {\n                    update: (group, instance) => {\n                        instance.dataProps({ timeDiffs: context._timeDiffs }).mount(group.node());\n                    }\n                });\n            });\n    }\n};\n","import { CLASSPREFIX, CONSOLIDATED } from './enums/constants';\n\n/**\n * Returns the default configuration of the visual unit\n * @return {Object} Default configuration of visual unit\n */\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'visual-unit',\n    className: '',\n    trackerClassName: 'visual-unit-tracker',\n    gridLines: {\n        defClassName: 'axis-grid-lines',\n        className: '',\n        show: true,\n        color: '#efefef',\n        zeroLineColor: '#b6b6b6'\n    },\n    gridBands: {\n        defClassName: 'axis-grid-bands',\n        className: '',\n        show: false,\n        y: {\n            color: ['#fff', '#fbfbfb']\n        },\n        x: {\n            color: ['#fff', '#f9f9f9']\n        }\n    },\n    arcLayerClassName: 'layer-arc',\n    interaction: {\n        tooltip: {\n            mode: CONSOLIDATED\n        }\n    },\n    sideEffectClassName: 'side-effect-container'\n};\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const GRIDBANDPARENTGROUPCLASS = 'grid-bands';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const RETINAL_FIELDS = 'retinalFields';\nexport const PARENT_ALIAS = 'parentAlias';\nexport const LAYERS = 'layers';\nexport const CACHED_DATA = 'cachedData';\nexport const STORE = 'store';\n","import { mergeRecursive } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { CONFIG, LAYERDEFS, TRANSFORM, DATA, LAYERS, TRANSFORMEDDATA } from './enums/reactive-props';\nimport { sanitizeLayerDef } from './helper';\n\nexport default {\n    [CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig) => (\n                mergeRecursive(oldConfig || mergeRecursive({}, defaultConfig), config)\n            )\n        }\n    },\n    [LAYERDEFS]: {\n        value: null,\n        meta: {\n            preset: layerDef => sanitizeLayerDef(layerDef)\n        }\n    },\n    [TRANSFORM]: {\n        value: null\n    },\n    [LAYERS]: {\n        value: null\n    },\n    [DATA]: {\n        value: null,\n        meta: {\n            preset: (data, context) => {\n                if (context._cache) {\n                    const cachedData = context.cachedData();\n                    context.cachedData([...cachedData, data]);\n                } else {\n                    const oldData = context.data();\n                    oldData && oldData.unsubscribe('propagation');\n                    context.cachedData([data]);\n                }\n            }\n        }\n    },\n    [TRANSFORMEDDATA]: {\n        value: null,\n        meta: {\n            addAsMethod: false\n        }\n    }\n};\n","export const CONFIG = 'config';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNT = 'mount';\nexport const TRANSFORM = 'transform';\nexport const TRANSFORMEDDATA = 'transformedData';\nexport const DATADOMAIN = 'dataDomain';\nexport const FIELDS = 'fields';\nexport const TIMEDIFFS = 'timeDiffs';\nexport const LAYERAXISINDEX = 'layerAxisIndex';\nexport const LAYERS = 'layers';\nexport const DOMAIN = 'domain';\n\n","import { DimensionSubtype, STATE_NAMESPACES } from 'muze-utils';\nimport * as PROPS from './enums/reactive-props';\nimport {\n    transformDataModels,\n    getDimensionMeasureMap,\n    attachDataToLayers,\n    attachAxisToLayers,\n    unionDomainFromLayers\n} from './helper';\n\nimport { createGridLineLayer, attachDataToGridLineLayers } from './helper/grid-lines';\n\nconst removeExitLayers = (layerDefs, context) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    layerDefs.forEach((layerDef, i) => {\n        const id = `${layerDef.mark}-${i}`;\n        markSet[id] = true;\n    });\n\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n};\n\nexport const calculateDomainListener = (context, namespace) => () => {\n    const domain = unionDomainFromLayers(context.layers(), context.fields(), context._layerAxisIndex,\n        context.data().getFieldsConfig());\n    context.store().commit(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${namespace}`, domain);\n};\n\nexport const listenerMap = (context, namespace, metaInf) => ([\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            config && context.firebolt().config(config.interaction);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.LAYERDEFS}`],\n        listener: ([, layerDefs]) => {\n            const fieldsVal = context.fields();\n            if (layerDefs && fieldsVal) {\n                removeExitLayers(layerDefs, context);\n                const axes = context.axes();\n                if (axes.x || axes.y) {\n                    const props = [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.rowIndex}0`,\n                        `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.colIndex}0`];\n                    const store = context.store();\n                    const listenerInf = {\n                        namespace: namespace.local,\n                        key: 'gridLineListener'\n                    };\n                    store.unsubscribe(listenerInf);\n                    store.registerChangeListener(props, () => {\n                        attachDataToGridLineLayers(context);\n                    }, false, listenerInf);\n                }\n\n                context.addLayer(layerDefs);\n                context._lifeCycleManager.notify({\n                    client: context.layers(),\n                    action: 'initialized',\n                    formalName: 'layer'\n                });\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`],\n        listener: ([, dataModel]) => {\n            const axisFields = context.fields();\n            const axesObj = context.axes();\n            if (dataModel && axisFields && axesObj) {\n                const timeDiffs = {};\n                const timeDiffsByField = {};\n                ['x', 'y'].forEach((type) => {\n                    const field = axisFields[type][0];\n                    if (field && field.subtype() === DimensionSubtype.TEMPORAL) {\n                        timeDiffs[type] = field.getMinDiff();\n                        timeDiffsByField[field] = timeDiffs[type];\n                        axesObj[type].forEach(axis => axis.minDiff(timeDiffs[type]));\n                    }\n                });\n                context._timeDiffsByField = timeDiffsByField;\n                context._timeDiffs = timeDiffs;\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: () => {\n            createGridLineLayer(context);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`,\n            `${namespace.local}.${PROPS.TRANSFORM}`],\n        listener: ([, dataModel], [, transform]) => {\n            if (dataModel) {\n                const dataModels = transformDataModels(transform, dataModel);\n                context.store().commit(`${namespace.local}.${PROPS.TRANSFORMEDDATA}`, dataModels);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.TRANSFORMEDDATA}`,\n            `${namespace.local}.${PROPS.LAYERS}`],\n        listener: ([, transformedData], [, layers]) => {\n            const layerAxisIndexVal = context._layerAxisIndex;\n            const axesVal = context.axes();\n            const dataModel = context.data();\n            if (transformedData && layers && axesVal && layerAxisIndexVal) {\n                context._lifeCycleManager.notify({ client: layers, action: 'beforeupdate', formalName: 'layer' });\n                const model = context.store().model;\n                layers.forEach(lyr => lyr.disableUpdate());\n                attachDataToLayers(layers, dataModel, transformedData);\n                model.lock();\n                layers.forEach((lyr) => {\n                    lyr.enableUpdate().domain(lyr._domain);\n                });\n                model.unlock();\n                context._dimensionMeasureMap = getDimensionMeasureMap(layers,\n                    dataModel.getFieldsConfig(), context.retinalFields());\n                attachAxisToLayers(axesVal, layers, layerAxisIndexVal);\n                context._lifeCycleManager.notify({ client: layers, action: 'updated', formalName: 'layer' });\n            }\n        }\n    }\n]);\n","import { FACET_BY_FIELDS, RETINAL_FIELDS, PARENT_ALIAS, LAYERS, CACHED_DATA } from './enums/constants';\n\nexport const PROPS = {\n    [FACET_BY_FIELDS]: {},\n    [RETINAL_FIELDS]: {},\n    [PARENT_ALIAS]: {},\n    [LAYERS]: {},\n    [CACHED_DATA]: {},\n    detailFields: {},\n    axes: {},\n    fields: {},\n    metaInf: {},\n    registry: {},\n    width: {},\n    height: {},\n    parentContainerInf: {}\n};\n","import { CommonProps } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { DATA } from '../enums/reactive-props';\n\nexport const initSideEffects = (sideEffects, firebolt) => {\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            sideEffects[key] instanceof SpawnableSideEffect && sideEffects[key].drawingContext(() => {\n                const context = firebolt.context;\n                return context.getDrawingContext();\n            });\n        }\n    }\n};\n\nexport const clearActionHistory = (context) => {\n    const actionHistory = context._actionHistory;\n    for (const key in actionHistory) {\n        if (actionHistory[key].isMutableAction) {\n            delete context._actionHistory[key];\n        }\n    }\n};\n\nexport const dispatchQueuedSideEffects = (context) => {\n    const queuedSideEffects = context._queuedSideEffects;\n    Object.entries(queuedSideEffects).forEach((entry) => {\n        const sideEffect = entry[1];\n        context.dispatchSideEffect(sideEffect.name, ...sideEffect.params);\n    });\n    context._queuedSideEffects = {};\n};\n\nexport const registerListeners = (firebolt) => {\n    const context = firebolt.context;\n    const store = context.store();\n\n    store.registerImmediateListener([`local.units.${context.metaInf().namespace}.${DATA}`], (dataModel) => {\n        const dm = dataModel[1];\n\n        if (dm) {\n            firebolt.createSelectionSet(firebolt.context.data().getData().uids);\n            firebolt.initializeSideEffects();\n            const originalData = firebolt.context.cachedData()[0];\n            firebolt.attachPropagationListener(originalData);\n        }\n    });\n\n    store.registerChangeListener([`local.units.${context.metaInf().namespace}.${DATA}`], () => {\n        if (!firebolt.context.mount()) {\n            const originalData = firebolt.context.cachedData()[0];\n            originalData.unsubscribe('propagation');\n        }\n    });\n\n    context._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW],\n        ([, onlayerdraw]) => {\n            if (onlayerdraw) {\n                dispatchQueuedSideEffects(firebolt);\n                clearActionHistory(firebolt);\n            }\n        });\n};\n","import { DimensionSubtype } from 'muze-utils';\n\nconst getRangeFromData = (instance, selectionDataModel, propConfig) => {\n    let criteria;\n    const dataObj = selectionDataModel[0].getData();\n    const propCriteria = propConfig.payload.criteria;\n    const sourceIdentifiers = propConfig.sourceIdentifiers;\n    const schema = dataObj.schema;\n    const fieldMap = instance.data().getFieldsConfig();\n    const data = dataObj.data;\n    const isActionSourceSame = instance.id() === propConfig.sourceId;\n\n    if (isActionSourceSame) {\n        criteria = propCriteria;\n    } else {\n        criteria = (sourceIdentifiers !== null) ? schema.reduce((acc, obj, index) => {\n            let range;\n            const field = obj.name;\n            const fieldObj = fieldMap[field];\n            const type = fieldObj && (fieldObj.def.subtype ? fieldObj.def.subtype : fieldObj.def.type);\n            const isDimension = type === DimensionSubtype.CATEGORICAL;\n\n            if (!fieldObj) {\n                return acc;\n            }\n\n            if (!isDimension) {\n                range = [Math.min(...data.map(d => d[index])), Math.max(...data.map(d => d[index]))];\n            } else {\n                range = data.map(d => d[index]);\n            }\n            acc[field] = range;\n            return acc;\n        }, {}) : null;\n    }\n    return criteria;\n};\n\nexport const payloadGenerator = {\n    brush: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const criteria = getRangeFromData(instance, selectionDataModel, propConfig);\n        const payload = Object.assign({}, propPayload);\n        payload.criteria = criteria;\n        return payload;\n    },\n\n    __default: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const sourceIdentifiers = propConfig.sourceIdentifiers;\n        const dataObj = selectionDataModel[0].getData();\n        let schema = dataObj.schema;\n        const payload = Object.assign({}, propPayload);\n        schema = dataObj.schema;\n        const data = dataObj.data;\n        const sourceFields = schema.map(d => d.name);\n        payload.criteria = !sourceIdentifiers && selectionDataModel[0].isEmpty() ? null :\n            [sourceFields, ...data];\n        payload.sourceFields = sourceIdentifiers ? sourceIdentifiers.getSchema().map(d => d.name) : [];\n        return payload;\n    }\n};\n\n","import { isSimpleObject, FieldType, DataModel } from 'muze-utils';\n\nconst getModelWithFacetData = (dm, data) => {\n    const dataObj = dm.getData();\n    const schema1 = dataObj.schema;\n    const data1 = dataObj.data;\n    const jsonData = [];\n    const schema2 = data[0].map(d => ({\n        name: `${d}`,\n        type: FieldType.DIMENSION\n    }));\n    const data2 = data[1];\n\n    data1.forEach((d) => {\n        const tuple = {};\n        schema1.forEach((obj, i) => {\n            tuple[obj.name] = d[i];\n        });\n        schema2.forEach((obj, i) => {\n            tuple[obj.name] = data2[i];\n        });\n        jsonData.push(tuple);\n    });\n\n    return new DataModel(jsonData, [...schema1, ...schema2]);\n};\n\nexport const propagateValues = (instance, action, config = {}) => {\n    let propagationData;\n    const payload = config.payload;\n    const selectionSet = config.selectionSet;\n    const propagationFieldInf = config.propagationFields[action] || {};\n    const propagationFields = propagationFieldInf.fields || [];\n    const append = propagationFieldInf.append;\n    const criteria = payload.criteria;\n    const context = instance.context;\n    const dataModel = context.cachedData()[0];\n    const sourceId = context.id();\n    const sideEfffects = instance.sideEffects();\n    const behaviourEffectMap = instance._behaviourEffectMap;\n    const mergedModel = selectionSet.mergedEnter.model;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    payload.sourceUnit = sourceId;\n    payload.action = action;\n    payload.sourceCanvas = context.parentAlias();\n    const propagationBehaviourMap = instance._propagationBehaviourMap;\n    const propagationBehaviour = propagationBehaviourMap[action] || action;\n\n    let propFields = [];\n    if (criteria === null) {\n        propagationData = null;\n    } else if (isSimpleObject(criteria)) {\n        propFields = Object.keys(criteria || {});\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    } else {\n        propFields = criteria[0];\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    }\n\n    const facetByFields = context.facetByFields();\n    if (propagationData !== null && propagationFields.length) {\n        const fields = propagationData.getData().schema.map(d => d.name);\n        propagationData = getModelWithFacetData(propagationData, facetByFields);\n        propFields = append ? [...fields, ...propagationFields] : propagationFields;\n        propagationData = propagationData.project(propFields);\n    }\n\n    let propagateInterpolatedValues = false;\n    if (propFields.length && propFields.every(field => fieldsConfig[field] &&\n        fieldsConfig[field].def.type === FieldType.MEASURE)) {\n        propagateInterpolatedValues = true;\n    }\n\n    const groupId = context.parentAlias();\n    payload.action = action;\n    const behaviourInstance = instance._actions.behavioural[propagationBehaviour];\n    const isMutableAction = behaviourInstance ? behaviourInstance.constructor.mutates() : false;\n\n    const filterFn = (entry, propagationConf) => {\n        const effects = behaviourEffectMap[entry.config.action];\n        const mutates = entry.config.groupId ?\n            effects.some(d => sideEfffects[d.name || d].constructor.mutates()) : true;\n        return entry.config.groupId !== propagationConf.groupId && mutates;\n    };\n\n    const sourceBehaviour = instance._actions.behavioural[action];\n    const mutates = sourceBehaviour ? sourceBehaviour.constructor.mutates() : false;\n    let propConfig = {\n        payload,\n        action,\n        criteria: propagationData,\n        isMutableAction: mutates,\n        propagateInterpolatedValues,\n        groupId,\n        sourceId: mutates ? groupId : sourceId,\n        filterFn,\n        enabled: (propConf, firebolt) => (action !== propagationBehaviour ?\n            propConf.payload.sourceCanvas === firebolt.context.parentAlias() : true)\n    };\n\n    dataModel.propagate(propagationData, propConfig, true);\n\n    if (action !== propagationBehaviour) {\n        propConfig = {\n            payload,\n            sourceId: isMutableAction ? groupId : sourceId,\n            criteria: propagationData,\n            isMutableAction,\n            propagateInterpolatedValues,\n            action: propagationBehaviour,\n            groupId,\n            applyOnSource: action === propagationBehaviour,\n            enabled: (propConf, firebolt) => propConf.payload.sourceCanvas !== firebolt.context.parentAlias(),\n            filterFn\n        };\n\n        dataModel.propagate(propagationData, propConfig, true, {\n            filterImmutableAction: (actionInf, propInf) => actionInf.groupId !== propInf.groupId\n        });\n    }\n};\n","import { FieldType } from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\nimport { registerListeners } from './helper';\nimport { payloadGenerator } from './payload-generator';\nimport { propagateValues } from './data-propagator';\n\n/**\n * This class manages the interactions of visual unit. It associates physical actions with\n * behavioural actions. It also propagates the behavioural actions to other datamodels.\n */\nexport default class UnitFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        registerListeners(this);\n    }\n\n    propagate (behaviour, payload, selectionSet, sideEffects) {\n        propagateValues(this, behaviour, {\n            payload,\n            selectionSet,\n            sideEffects,\n            propagationFields: this._propagationFields\n        });\n    }\n\n    getApplicableSideEffects (sideEffects, payload, propagationInf) {\n        const context = this.context;\n        const unitId = context.id();\n        const aliasName = context.parentAlias();\n        const propagationSourceCanvas = propagationInf.propPayload && propagationInf.propPayload.sourceCanvas;\n        const sourceUnitId = propagationInf.propPayload && propagationInf.propPayload.sourceUnit;\n        const sourceSideEffects = this._sourceSideEffects;\n        const sideEffectInstances = this.sideEffects();\n        const actionOnSource = sourceUnitId ? sourceUnitId === unitId : true;\n\n        const applicableSideEffects = payload.sideEffects ? [{\n            effects: payload.sideEffects,\n            behaviours: [payload.action]\n        }] : sideEffects;\n        applicableSideEffects.forEach((d) => {\n            let mappedEffects = d.effects;\n            mappedEffects = mappedEffects.filter((se) => {\n                const mutates = sideEffectInstances[se.name || se].constructor.mutates();\n                if (mutates && propagationInf.isMutableAction === false) {\n                    return false;\n                }\n                if (!actionOnSource && payload.criteria !== null) {\n                    const sideEffectChecker = sourceSideEffects[se.name || se];\n                    return sideEffectChecker ? sideEffectChecker(propagationInf.propPayload, context) : true;\n                }\n                if (propagationSourceCanvas === aliasName || actionOnSource) {\n                    return se.applyOnSource !== false;\n                }\n\n                return true;\n            });\n            d.effects = mappedEffects;\n        });\n        return applicableSideEffects;\n    }\n\n    shouldApplySideEffects (propagate) {\n        return propagate === false;\n    }\n\n    onDataModelPropagation () {\n        return (data, config) => {\n            let isSourceFieldPresent = true;\n            let isMutableAction = false;\n            const propPayload = config.payload;\n            const sourceIdentifiers = config.sourceIdentifiers;\n            const enabledFn = config.enabled;\n            const action = config.action;\n            const payloadFn = payloadGenerator[action] || payloadGenerator.__default;\n\n            if (sourceIdentifiers) {\n                const fieldsConfig = sourceIdentifiers.getFieldsConfig();\n                const sourceIdentifierFields = Object.keys(fieldsConfig);\n                const propFields = Object.keys(data[0].getFieldsConfig());\n                if (!Object.values(fieldsConfig).some(d => d.def.type === FieldType.MEASURE)) {\n                    isSourceFieldPresent = sourceIdentifierFields.some(d => propFields.indexOf(d) !== -1);\n                }\n            }\n\n            const payload = payloadFn(this.context, data, config);\n            const sourceBehaviours = this._sourceBehaviours;\n            const filterFn = sourceBehaviours[action] || sourceBehaviours['*'];\n            let enabled = true;\n\n            if (filterFn) {\n                enabled = filterFn(propPayload || {}, this.context);\n            }\n\n            if (enabledFn) {\n                enabled = enabledFn(config, this) && enabled !== false;\n            }\n\n            if (enabled) {\n                const effects = this._behaviourEffectMap[action];\n                const sideEffectInstances = this.sideEffects();\n                isMutableAction = config.groupId ?\n                    effects.some(d => sideEffectInstances[d.name || d].constructor.mutates()) : config.isMutableAction;\n\n                const propagationInf = {\n                    propagate: false,\n                    data,\n                    propPayload,\n                    sourceIdentifiers,\n                    persistent: false,\n                    isSourceFieldPresent,\n                    sourceId: config.propagationSourceId,\n                    isMutableAction: config.isMutableAction\n                };\n\n                this._actionHistory[action] = {\n                    payload,\n                    propagationInf,\n                    isMutableAction\n                };\n                this.dispatchBehaviour(action, payload, propagationInf);\n            }\n        };\n    }\n\n    prepareSelectionSets (behaviours) {\n        const data = this.context.data();\n        if (data) {\n            this.createSelectionSet(data.getData().uids, behaviours);\n        }\n        return this;\n    }\n\n    initializeSideEffects () {\n        if (this.context.data()) {\n            super.initializeSideEffects();\n        }\n        return this;\n    }\n\n    remove () {\n        this.context.cachedData()[0].unsubscribe('propagation');\n        return this;\n    }\n}\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    Store,\n    setAttrs,\n    getUniqueId,\n    getQualifiedClassName,\n    selectElement,\n    transactor,\n    makeElement,\n    registerListeners,\n    generateGetterSetters,\n    getDataModelFromIdentifiers,\n    isSimpleObject,\n    transposeArray,\n    CommonProps,\n    toArray,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { actionBehaviourMap } from './firebolt/action-behaviour-map';\nimport {\n    renderLayers,\n    getNearestDimensionalValue,\n    removeLayersBy,\n    getLayersBy,\n    getLayerFromDef,\n    getLayerAxisIndex,\n    sanitizeLayerDef,\n    createSideEffectGroup,\n    resolveEncodingTransform,\n    createRenderPromise\n} from './helper';\nimport { renderGridLineLayers } from './helper/grid-lines';\nimport localOptions from './local-options';\nimport { listenerMap, calculateDomainListener } from './listener-map';\nimport {\n    DOMAIN\n} from './enums/reactive-props';\nimport { PROPS } from './props';\nimport UnitFireBolt from './firebolt';\nimport { initSideEffects } from './firebolt/helper';\nimport './styles.scss';\n\nconst FORMAL_NAME = 'unit';\n\n/**\n * Visual Unit is hierarchical component created by {@link VisualGroup}. This component accepts layer definitions\n * and creates concrete layer instances from them, binds data and attaches axis to them. It also retreives the domain\n * from the layers and unions them and sets them on corresponding axis instances. This also creates the parent svg\n * groups for all the layers and delegates the rendering to all the layers.\n *\n * @public\n * @module VisualUnit\n * @class\n */\nexport default class VisualUnit {\n\n    /**\n     * Creates instance of visualization unit.\n     *\n     * @param {Object} registry  Component registry\n     * @param {Object} dependencies  Dependencies required by visual unit.\n     */\n    constructor (registry, dependencies) {\n        this._id = getUniqueId();\n        this._dependencies = dependencies;\n        this._layerDeps = {\n            throwback: new Store({\n                [CommonProps.ON_LAYER_DRAW]: false\n            }),\n            smartLabel: dependencies.smartLabel,\n            lifeCycleManager: dependencies.lifeCycleManager\n        };\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        createRenderPromise(this);\n        this._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW], () => {\n            this._renderedResolve();\n            this._lifeCycleManager.notify({ client: this.layers(), action: 'drawn', formalName: 'layer' });\n        });\n\n        this._lifeCycleManager = dependencies.lifeCycleManager;\n        this._layersMap = {};\n        this._gridlines = [];\n        this._gridbands = [];\n        this._layerNamespaces = {};\n        this._layerAxisIndex = {};\n        this._transformedDataModels = {};\n        layerFactory.setLayerRegistry(registry.layerRegistry);\n        generateGetterSetters(this, PROPS);\n        this.registry(registry);\n        this.cachedData([]);\n    }\n\n    static formalName () {\n        return FORMAL_NAME;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            localOptions\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            this.store().append(`${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}`, {\n                [`${metaInf.namespace}`]: null\n            });\n            const localNs = `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            transactor(this, localOptions, this.store().model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE\n            }, {\n                rowIndex: metaInf.rowIndex,\n                colIndex: metaInf.colIndex\n            });\n            this.firebolt(new UnitFireBolt(this, {\n                physical: physicalActions,\n                behavioural: behaviouralActions,\n                physicalBehaviouralMap: actionBehaviourMap\n            }, sideEffects, behaviourEffectMap));\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Static helper for creates a unit instance\n     *\n     * @param {Object} [id] optional unique identifier for a unit; , id is calculated internally\n     * @param {DataModel} data instance of datamodel\n     * @param {Array.<Layer>} layers layer configuration\n     * @param {Object} config configurtion for the visual unit\n     * @return {VisualUnit} Instance of a unit\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this visual unit. Firebolt dispatches the behavioural actions\n     * when any physical action happens on the elements of visual unit.\n     *\n     * @public\n     *\n     * @return {Firebolt} Instance of firebolt.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Returns the unique id of this visual unit.\n     *\n     * @public\n     * @return {string} Unique identifier.\n     */\n    id () {\n        return this._id;\n    }\n\n    lockModel () {\n        this._store.model.lock();\n        return this;\n    }\n\n    unlockModel () {\n        this._store.model.unlock();\n        return this;\n    }\n\n    timeDiffsByField (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._timeDiffsByField;\n    }\n\n    /**\n     * Renders the visual unit. It creates the layout and renders the axes and layers.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    render (container) {\n        const config = this.config();\n        const { className, defClassName, sideEffectClassName, classPrefix } = config;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const width = this.width();\n        const height = this.height();\n        const containerSelection = selectElement(container).style('position', 'relative');\n\n        this._rootSvg = makeElement(containerSelection, 'svg', [null], className)\n                        .style('width', `${width}px`).style('height', `${height}px`);\n\n        const node = this._rootSvg.node();\n        setAttrs(node, {\n            width,\n            height,\n            class: qualifiedClassName.join(' ')\n        });\n        renderGridLineLayers(this, node);\n        renderLayers(this, node, this.layers(), {\n            width,\n            height\n        });\n        this._sideEffectGroup = createSideEffectGroup(node, `${classPrefix}-${sideEffectClassName}`);\n        const firebolt = this.firebolt();\n        initSideEffects(firebolt.sideEffects(), firebolt);\n        return this;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Caches all the datamodels in an array from the next `data()` call on visual unit until `clearCaching()` or\n     * `resetData()` is called on it.\n     *\n     * @public\n     * @return {VisualUnit} Instance of visual unit.\n     */\n\n    enableCaching () {\n        this._cache = true;\n        return this;\n    }\n\n    /**\n     * Clears all the previous cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    clearCaching () {\n        this._cache = false;\n        this.cachedData([this.cachedData()[0]]);\n        return this;\n    }\n\n    /**\n     * Returns the drawing information from visual unit.Drawing context contains the dimensions of unit and the svg\n     * container of the visual unit.\n     *\n     * @public\n     *\n     * @return {Object} Drawing information.\n     *      ```\n     *          {\n     *              htmlContainer: // Html container of svg container of the visual unit\n     *              svgContainer: // Root svg container\n     *              width: // Width of the visual unit\n     *              height: // Height of the visual unit\n     *              sideEffectGroup: // Svg group for drawing side effect elements.\n     *              parentContainer: // Parent html container of the visual unit.\n     *              xOffset: // x offset space from the starting x position of the container,\n     *              yOffset: // y offset space from the starting y position of the container\n     *          }\n     *      ```\n     */\n    getDrawingContext () {\n        const rootSvg = this._rootSvg && this._rootSvg.node();\n        const width = this.width();\n        const height = this.height();\n        const { el, dimensions } = this.parentContainerInf();\n        return {\n            htmlContainer: this.mount(),\n            svgContainer: rootSvg,\n            width,\n            height,\n            sideEffectGroup: this._sideEffectGroup,\n            parentContainer: el,\n            parentContainerDimensions: dimensions,\n            xOffset: 0,\n            yOffset: 0\n        };\n    }\n\n    /**\n     * Returns the serialized configuration of visual unit.\n     *\n     * @return {Object} serialized configuration\n     */\n    serialize () {\n        return {\n            layers: this.layers().map(layer => layer.serialize()),\n            config: this.config(),\n            axes: this.axes().map(axis => axis.serialize())\n        };\n    }\n\n    mount (...mount) {\n        if (mount.length) {\n            this._mount = mount[0];\n            this.render(mount[0]);\n            this.firebolt().mapActionsAndBehaviour();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     * Adds a new layer to the visual unit. It takes a layer definition and creates layer instances from them. It does\n     * not render the layers. It returns the layer instances in an array. If the layer definition is a composite layer,\n     * then multiple layer instances will be returned in the array.\n     *\n     * To add a layer in the unit,\n     * ```\n     *      unit.addLayer({\n     *          name: 'bullet',\n     *          mark: 'bar',\n     *          encoding: {\n     *              x: 'Year',\n     *              y: 'Acceleration',\n     *              color: 'Origin'\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} layerDef Definition of new layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    addLayer (layerDefinition) {\n        const layerDefinitions = sanitizeLayerDef(toArray(layerDefinition));\n\n        const layersMap = this._layersMap;\n        const markSet = {};\n        const store = {\n            layers: {},\n            components: {\n                unit: this\n            }\n        };\n        let layerIndex = 0;\n        let startIndex = [].concat(...Object.values(this._layersMap)).length;\n        const metaInf = this.metaInf();\n        const props = this._layerNamespaces;\n        const layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef) => {\n            const definition = layerDef.def;\n            const markId = definition.name;\n            const defArr = toArray(definition);\n            const namespaces = [];\n            defArr.forEach((def) => {\n                def.order = layerDef.order + layerIndex;\n                const namespace = `${metaInf.namespace}${startIndex}`;\n                if (!layersMap[markId]) {\n                    startIndex++;\n                    if (definition.calculateDomain !== false) {\n                        props[`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${DOMAIN}.${namespace}`] = true;\n                    }\n                }\n                namespaces.push(namespace);\n            });\n            layerIndex += defArr.length;\n            const instances = getLayerFromDef(this, definition, layersMap[markId], namespaces);\n            store.layers = Object.assign(store.layers, instances);\n            const instanceValues = Object.values(instances);\n            layersArr = layersArr.concat(...instanceValues);\n            layersMap[markId] = instanceValues;\n            markSet[markId] = markId;\n            return layersArr;\n        }, []);\n\n        store.unit = this;\n        const layerdeps = {};\n        const layersArr = [].concat(...Object.values(this._layersMap));\n\n        layersArr.forEach((layer) => {\n            const alias = layer.alias();\n            store.layers[alias] = layer;\n            layerdeps[alias] = [];\n        });\n        layers.forEach((layer) => {\n            const depArr = resolveEncodingTransform(layer, store);\n            layerdeps[layer.alias()] = depArr;\n        });\n\n        this._layerDepOrder = layerdeps;\n        this._layerAxisIndex = Object.assign(this._layerAxisIndex, getLayerAxisIndex(layers, this.fields()));\n        const stateStore = this.store();\n\n        stateStore.unsubscribe({\n            key: 'calculateDomainListener',\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n        });\n        stateStore.registerImmediateListener(Object.keys(props), calculateDomainListener(this, metaInf.namespace),\n            false, {\n                key: 'calculateDomainListener',\n                namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n            });\n        this.layers(layersArr);\n        return layers;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    remove () {\n        const lifeCycleManager = this._dependencies.lifeCycleManager;\n        lifeCycleManager.notify({ client: this, action: 'beforeremove', formalName: 'unit' });\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        this.firebolt().remove();\n        // Remove layers\n        lifeCycleManager.notify({ client: this.layers(), action: 'beforeremove', formalName: 'layer' });\n        this.layers().forEach(layer => layer.remove());\n        lifeCycleManager.notify({ client: this.layers(), action: 'removed', formalName: 'layer' });\n        lifeCycleManager.notify({ client: this, action: 'removed', formalName: 'unit' });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof VisualUnit\n     */\n    getDataModelFromIdentifiers (identifiers, mode, parentModel) {\n        if (identifiers === null) {\n            return null;\n        }\n        const dataModel = parentModel || this.data();\n        return getDataModelFromIdentifiers(dataModel, identifiers, mode);\n    }\n\n    /**\n     * Resets the data of visual unit to original data model. It also clears the cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    resetData () {\n        this.data(this.cachedData()[0]);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getSourceInfo () {\n        return {\n            dimensionMeasureMap: this._dimensionMeasureMap,\n            fields: this.fields(),\n            data: this.data(),\n            axes: this.axes()\n        };\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getDefaultTargetContainer () {\n        const { classPrefix, defClassName } = this.config();\n        return [`.${classPrefix}-${defClassName}`];\n    }\n\n    /**\n     * Returns an array of layer instances which matches the supplied mark type.\n     *\n     * @public\n     *\n     * @param {string} type Mark type of layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    getLayersByType (type) {\n        const layers = getLayersBy(this.layers(), 'type', type);\n        return layers;\n    }\n\n    /**\n     * Returns the layer instance which matches the supplied layer name. If no layer is found, then it returns\n     * undefined.\n     *\n     * @public\n     * @param {string} name Name of layer.\n     *\n     * @return {VisualUnit} Layer instance.\n     */\n    getLayerByName (name) {\n        const layers = getLayersBy(this.layers(), 'name', name);\n        return layers[0];\n    }\n\n    /**\n     * Returns the point located nearest to the supplied x and y position. It returns the unique identifiers of the\n     * point. This function also accepts an additional configuration `getAllPoints` inside `config` object in the third\n     * argument which if set to true, then it returns the identifiers of all the points which falls on the nearest\n     * x value or y value if any one of the field is a dimension. Additionally, a target property is also returned\n     * which contains the identifier of the nearest point. If no nearest point is found, then it returns identifier\n     * as null.\n     *\n     * @public\n     *\n     * @param {number} x X Position of the point from where nearest point is to be found.\n     * @param {number} y Y Position of the point from where nearest point is to be found.\n     * @param {Object} config Additional configuration options.\n     * @param {boolean} config.getAllPoints If true, then returns all the points nearest to the x value or y value if\n     * it is dimension.\n     * @param {Object} config.data Data associated with the nearest point.\n     * @return {Object} Nearest point information\n     * ```\n     *      {\n     *          id: [['Origin'], ['USA'], ['Japan']], // Identifiers of all the points closest to the x value.\n     *          target: [['Origin'], ['Japan']] // Identifier of the nearest point.\n     *      }\n     * ```\n     */\n    getNearestPoint (x, y, config) {\n        let pointObj = {\n            id: null\n        };\n        const dimValue = getNearestDimensionalValue(this, {\n            x,\n            y\n        });\n\n        if (dimValue !== null && config.getAllPoints) {\n            pointObj.id = dimValue;\n            const pointInf = this.getMarkInfFromLayers(x, y, config);\n            pointObj.target = pointInf && pointInf.id ? pointInf.id : pointObj.id;\n            return pointObj;\n        }\n\n        const markInf = this.getMarkInfFromLayers(x, y, config) || { id: null };\n        pointObj = Object.assign({}, markInf);\n\n        pointObj.target = markInf.id;\n        return pointObj;\n    }\n\n    getMarkInfFromLayers (x, y, args) {\n        const layers = this.layers();\n        const len = layers.length;\n        let point = null;\n        // Iterate through the layers array and fetch the nearest point from each layer. If a valid\n        // nearest point is found from any layer, then return that point.\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            const config = layer.config();\n            if (config.interactive !== false) {\n                point = layer.getNearestPoint(x, y, args);\n            }\n            if (point) {\n                return point;\n            }\n        }\n        return point;\n    }\n\n    /**\n     * Get the information of all the marks such as x, y position and size from supplied identifiers. It\n     * returns an array of points whose data matches the given identifiers.\n     *\n     * @public\n     *\n     * @param {Array|Object} identifiers Field names and their corresponding values.\n     * ```\n     * identifiers can be given in an array of array,\n     *      ['Origin', 'Name'], // Names of the fields supplied in first array\n     *      ['USA', 'ford'], // Data values of each field supplied in rest of the arrays.\n     *      ['Japan', 'ford']\n     * or in an object,\n     *      {\n     *          Origin: ['USA']\n     *      }\n     * ```\n     * @param {Object} config Optional configurations which decides which information of the mark will\n     * be retrieved.\n     * @param {boolean} [config.getAllAttrs = false] If true, then returns all the information of each mark.\n     * @param {boolean} [config.getBBox = false] If true, then returns the bounding box of each mark.\n     *\n     * @return {Array} Array of objects containing the information of each point.\n     * ```\n     * By default, the method returns the array of points in this structure,\n     *      [\n     *          {\n     *              x: 20,\n     *              y: 100,\n     *              width: 200,\n     *              height: 100\n     *          }\n     *      ]\n     * If 'config.getAllAttrs' is true, then it returns all the information of each mark,\n     *      [\n     *      // Positions of mark on initial state of transition.\n     *          enter: {\n     *              x: 0,\n     *              y: 0\n     *          },\n     *          // Final positions of the mark\n     *          update: {\n     *              x: 20,\n     *              y: 10\n     *          },\n     *          style: // css styles of each mark\n     *          source: [200, 'USA'] // Row information of each mark\n     *          id: 20 // Row id of each mark\n     *      ]\n     * ```\n     */\n    getPlotPointsFromIdentifiers (identifiers, config = {}) {\n        let points = [];\n        let parsedIdentifiers = identifiers;\n        if (identifiers === null) {\n            return [];\n        }\n        const layers = this.layers();\n        const len = layers.length;\n        if (isSimpleObject(identifiers)) {\n            parsedIdentifiers = [Object.keys(identifiers)];\n            parsedIdentifiers = [...parsedIdentifiers, ...transposeArray(Object.values(identifiers))];\n        }\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            if (layer.config().interactive !== false) {\n                points = [...points, ...layer.getPointsFromIdentifiers(parsedIdentifiers, config)];\n            }\n        }\n        return points;\n    }\n\n    /**\n     * Removes the layer instance which matches the supplied layer name.\n     *\n     * @public\n     * @param {string} name Name of layer\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayerByName (name) {\n        removeLayersBy('name', name);\n        return this;\n    }\n\n    /**\n     * Removes all the layer instances which matches the supplied mark type.\n     *\n     * @public\n     * @param {string} type Mark type of layer.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayersByType (type) {\n        removeLayersBy('type', type);\n        return this;\n    }\n}\n","import { DataModel } from 'muze-utils';\n\nimport { retriveDomainFromData } from './group-utils';\n\n/**\n * Gets name of fields form the variables\n *\n * @param {*} fields1\n * @param {*} [fields2=[]]\n *\n */\nconst getFieldNames = (fields1, fields2 = []) => [fields1, fields2].map(fields => fields.reduce((acc, d) => {\n    acc = [...acc, ...d.getMembers()];\n    return acc;\n}, []));\n\n/**\n * Creates a selected datamodel from a parent datamodel and a set of field names\n *\n * @param {Object} datamodel provided as input\n * @param {Array} fieldNames schema  names\n * @param {Array} fieldValues values of those schema names to be selected\n * @return {Object} creates a new selected datamodel\n */\nconst createSelectedDataModel = (datamodel, fieldNames, fieldValues) =>\n    datamodel.select(fields => fieldNames.every((field, k) => fields[field].value === fieldValues[k]));\n\n/**\n *\n *\n * @param {*} facets\n * @param {*} keyArray\n *\n */\nconst uniqueKeyGenerator = (keyArray, context, depth = 0, val = []) => {\n    const {\n        facets,\n        dataModel,\n        uniqueValues\n    } = context;\n\n    // Get unique keys for the next depth recursively if required\n    if (facets[depth + 1]) {\n        const field = facets[depth];\n        uniqueValues.forEach((value) => {\n            const newDm = dataModel.select(fields => fields[field].value === value);\n            const nextDepthUniqueValues = retriveDomainFromData(newDm, facets[depth + 1]);\n            const newContext = {\n                facets,\n                dataModel: newDm,\n                uniqueValues: nextDepthUniqueValues\n            };\n\n            uniqueKeyGenerator(keyArray, newContext, depth + 1, [...val, value]);\n        });\n    } else {\n        uniqueValues.forEach((value) => {\n            keyArray.push([...val, value]);\n        });\n    }\n};\n\n/**\n * projects row model based on the set of row and/or column and other projection fields\n *\n * @param {Object} datamodel provided as input\n * @return {Object} Projected datamodel\n */\nconst projectRows = (datamodel, projections) => {\n    const {\n        allColumnProjections,\n        rowProjections,\n        optionalProjections\n    } = projections;\n\n    if (rowProjections.length > 0) {\n        return rowProjections.map((projectFields) => {\n            const [projFieldNames, colProjFieldNames] = getFieldNames(projectFields, allColumnProjections);\n            return datamodel.project([...projFieldNames, ...colProjFieldNames, ...optionalProjections]);\n        });\n    }\n    return [datamodel];\n};\n\n/**\n * Adds the datamodels to current row index based on column fields\n *\n * @param {Array} context current context\n * @param {Array} callback List of facets applied to the current datamodel\n */\nconst pushToMatrix = (context, callback) => {\n    let cells = [];\n    const {\n        matrix,\n        datamodel,\n        facetInfo,\n        fieldInfo\n    } = context;\n    // Get projected fields for current row\n    const {\n        rowProjections,\n        colProjections,\n        optionalProjections\n    } = fieldInfo;\n    const {\n        rowIndex,\n        columnIndex\n    } = facetInfo;\n    const rowProj = rowProjections[(rowIndex) % rowProjections.length] || [];\n\n    // Get the cells for the matrix from the return function of the callback on the datamodel.\n    // callback function -> (datamodel, {projections, indices}, facets)\n    if (colProjections.length > 0) {\n        cells = colProjections.map((projectFields, projIdx) => {\n            const [colProjFieldNames, rowProjFieldNames] = getFieldNames(projectFields, rowProj);\n            const projectedDm = datamodel.project([...colProjFieldNames, ...rowProjFieldNames, ...optionalProjections]);\n            const projections = { rowFields: rowProj, columnFields: projectFields };\n            const indices = { rowIndex, columnIndex: columnIndex * colProjections.length + projIdx };\n\n            return callback(projectedDm, { projections, indices }, facetInfo);\n        });\n    } else {\n        const projections = { rowFields: rowProj, columnFields: [] };\n        const indices = { rowIndex, columnIndex };\n\n        cells = [callback(datamodel, { projections, indices }, facetInfo)];\n    }\n\n    matrix[rowIndex] = matrix[rowIndex] || [];\n    matrix[rowIndex].push(...cells);\n};\n\n/**\n * Gets Matrixes for corresponding datamodel, facets and projections\n *\n * @param {Object} dataModel input datamodel\n * @param {Object} fieldMap corresponding fieldmap\n * @param {Array} facetsAndProjections contains the set of facets and projections for the matrices\n * @param {Function} callback Callback executed after datamodels are prepared after sel/proj\n * @return {Object} set of matrices with the corresponding row and column keys\n */\nexport const getMatrixModel = (dataModel, facetsAndProjections, callback) => {\n    let rowDataModels = [];\n    const rowKeys = [];\n    const columnKeys = [];\n    const allColumnProjections = [];\n    const matrix = [];\n    const facetInfo = [];\n\n    const fieldInfo = Object.assign({}, facetsAndProjections);\n    const {\n        rowFacets,\n        colFacets,\n        colProjections\n    } = fieldInfo;\n\n    colProjections.forEach((colProj) => {\n        allColumnProjections.push(...colProj);\n    });\n    fieldInfo.allColumnProjections = allColumnProjections;\n\n    // Performing row selection and projection\n    if (rowFacets.length > 0) {\n        // Get unique values for the root level of facet\n        const field = rowFacets[0].toString();\n        const firstLevelRowKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys in the form of an array of arrays for each row\n        uniqueKeyGenerator(rowKeys, { facets: rowFacets, dataModel, uniqueValues: firstLevelRowKeys });\n\n        // Apply selection -> projection -> row datamodels\n        rowKeys.forEach((val) => {\n            // Create faceted datamodel\n            const [rowFacetFieldNames] = getFieldNames(rowFacets);\n            const selectedDataModel = createSelectedDataModel(dataModel, rowFacetFieldNames, val);\n\n            // Project the datamodel based on the number of projections (based on last levels)\n            facetInfo.push([rowFacets, val]);\n            rowDataModels.push(...projectRows(selectedDataModel, fieldInfo));\n        });\n    } else {\n        // No row facets, hence only row projection\n        rowDataModels.push(...projectRows(dataModel, fieldInfo));\n    }\n\n    // Maintaining set of row datamodels for column resolution\n    rowDataModels = rowDataModels.length > 0 ? rowDataModels : [[]];\n\n    // Performing column selection and projection\n    if (colFacets.length > 0) {\n        const colFacetNames = colFacets.map(d => `${d}`);\n        // Get unique values for the root level of facet\n        const field = colFacetNames[0];\n        const firstLevelColumnKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys to create faceted datamodels: this time for columns\n        uniqueKeyGenerator(columnKeys, {\n            facets: colFacetNames,\n            dataModel,\n            uniqueValues: firstLevelColumnKeys\n        });\n\n        // For each row in the datamodel, apply selection -> projection -> push the projection to matri\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            columnKeys.forEach((val, cIndex) => {\n                matrix[rIndex] = matrix[rIndex] || [];\n\n                // If datamodel is not present in current row, choose parent datamodel\n                const datamodel = dme instanceof DataModel ? dme : dataModel;\n\n                // Selection is made on the datamodel for the current row\n                const selectedDataModel = createSelectedDataModel(datamodel, colFacetNames, val);\n                const context = {\n                    matrix,\n                    datamodel: selectedDataModel,\n                    facetInfo: {\n                        rowFacets: facetInfo[rIndex],\n                        colFacets: [colFacets, val],\n                        rowIndex: rIndex,\n                        columnIndex: cIndex\n                    },\n                    fieldInfo\n                };\n                pushToMatrix(context, callback);\n            });\n        });\n    } else {\n        // No column facets, hence only row projection\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            const context = {\n                matrix,\n                datamodel: dme || dataModel,\n                facetInfo: {\n                    rowFacets: facetInfo[rIndex],\n                    colFacets: [[], []],\n                    rowIndex: rIndex,\n                    columnIndex: 0\n                },\n                fieldInfo\n            };\n\n            pushToMatrix(context, callback);\n        });\n    }\n\n    // Getting column keys\n    const transposedColKeys = columnKeys.length > 0 ? columnKeys[0].map((col, i) =>\n                    columnKeys.map(row => row[i])) : columnKeys;\n\n    return { matrix, rowKeys, columnKeys: transposedColKeys };\n};\n","import { AxisOrientation } from '@chartshq/muze-axis';\nimport { getObjProp, FieldType, STATE_NAMESPACES } from 'muze-utils';\nimport { getMatrixModel } from './matrix-model';\nimport {\n    getCellKey,\n    isDistributionEqual,\n    mutateAxesFromMap,\n    createSelection,\n    getFieldsFromSuppliedLayers,\n    extractFields\n} from './group-utils';\nimport { ROW, ROWS, COLUMNS, COL, LEFT, RIGHT, TOP, BOTTOM, PRIMARY, SECONDARY, X, Y } from '../enums/constants';\n\n/**\n * Updates row and column cells with the geom cell corresponding to the facet keys\n *\n * @param {*} resolver\n * @param {*} facets\n */\nconst updateCells = (resolver, facets, geomCell) => {\n    [ROW, COL].forEach((field) => {\n        const cells = resolver[`${field}Cells`]();\n        const facetKey = facets[`${field}Facets`][1].join();\n\n        !cells[facetKey] && (cells[facetKey] = []);\n        cells[facetKey].push(geomCell);\n        resolver[`${field}Cells`](cells);\n    });\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} datamodel\n * @param {*} fieldInfo\n * @param {*} facets\n *\n */\nexport const createValueCells = (context, datamodel, fieldInfo, facets) => {\n    const {\n        projections,\n        indices\n    } = fieldInfo;\n    const {\n        rowFields,\n        columnFields\n    } = projections;\n    const {\n         rowIndex,\n         columnIndex\n    } = indices;\n    const {\n        suppliedLayers,\n        cell: GeomCell,\n        resolver,\n        config,\n        encoder,\n        detailFields\n    } = context;\n    const axes = resolver.axes();\n    const cacheMaps = resolver.cacheMaps();\n    const matrixLayers = resolver.matrixLayers();\n    const labelManager = resolver.dependencies().smartlabel;\n    const horizontalAxis = resolver.horizontalAxis();\n    const verticalAxis = resolver.verticalAxis();\n    const datamodelTransform = resolver.datamodelTransform();\n    const {\n        entryCellMap,\n        exitCellMap\n    } = cacheMaps;\n    const layerConfigArr = encoder.getLayerConfig({ columnFields, rowFields }, suppliedLayers || []);\n    const axesCreators = { config, labelManager, axes, cacheMaps };\n\n    fieldInfo.normalizedColumns = verticalAxis.fields;\n    fieldInfo.normalizedRows = horizontalAxis.fields;\n\n    const groupAxes = encoder.createAxis(axesCreators, fieldInfo);\n\n    matrixLayers[rowIndex] = matrixLayers[rowIndex] ? matrixLayers[rowIndex] : [];\n    matrixLayers[rowIndex][columnIndex] = layerConfigArr;\n\n    // return from map if already there otherwise create and put in map\n    const geomCellKey = getCellKey(rowIndex, columnIndex);\n    const fields = {\n        y: rowFields,\n        x: columnFields\n    };\n    const allFacets = [\n        [...facets.rowFacets[0], ...facets.colFacets[0]],\n        [...facets.rowFacets[1], ...facets.colFacets[1]]\n    ];\n    const geomCell = !exitCellMap.has(geomCellKey) ? new GeomCell() : exitCellMap.get(geomCellKey);\n\n    geomCell.data(datamodel)\n                    .axes(groupAxes)\n                    .fields(fields)\n                    .transform(datamodelTransform)\n                    .detailFields(detailFields)\n                    .facetByFields(allFacets);\n    entryCellMap.set(geomCellKey, geomCell);\n    exitCellMap.delete(geomCellKey);\n\n    updateCells(resolver, facets, geomCell);\n\n    return entryCellMap.get(geomCellKey);\n};\n\n/**\n * Creates axis cells based on the set of axes\n *\n * @param {Selection} selection Contains a selection of the axis units\n * @param {Array} axes Actual axis units\n * @param {number} axisIndex 0-> primary axis, 1-> secondary axis(when dual axis is made)\n * @param {Object} cells Contains a collection of the cells\n * @return {Object} return either set of axis/blank cells depending on the config\n */\n\nconst createAxisCells = (selection, axes, axisIndex, cells) =>\n    createSelection(selection, axis => axis, axes, (item, i) => i + item.reduce((e, n) => {\n        const id = n.id + axisIndex;\n        return e + id;\n    }, '')).map((axis) => {\n        if (axis && axis[axisIndex]) {\n            const axisInst = axis[axisIndex];\n            const { orientation, show } = axisInst.config();\n\n            return new cells.AxisCell().source(axisInst).config({\n                isOffset: orientation === AxisOrientation.LEFT || orientation === AxisOrientation.TOP,\n                show\n            });\n        }\n        return new cells.BlankCell().config({ show: false });\n    });\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @retur\n */\nconst axisPlaceholderGn = (context, selObj, cells) => {\n    const {\n        matrices\n    } = context;\n    const {\n        axesMatrix\n    } = matrices;\n\n    return (type, axisFrom) => {\n        const axes = axesMatrix[`${type}`];\n\n        if (axes && axes.length) {\n            if (type === X || type === Y) {\n                const fieldNames = type === Y ? ROWS : COLUMNS;\n\n                [PRIMARY, SECONDARY].forEach((fieldType, index) => {\n                    const selObjProp = `${fieldNames}${fieldType}`;\n                    let axisIndex = index;\n                    let axesForDraw = axes;\n                    if (axisFrom === RIGHT || axisFrom === BOTTOM) {\n                        axisIndex = 1 - axisIndex;\n                    }\n                    if (!getObjProp(axes, 0, axisIndex)) {\n                        axesForDraw = [];\n                    }\n                    selObj[selObjProp] = createAxisCells(selObj[selObjProp], axesForDraw, axisIndex, cells);\n                });\n            } else {\n                selObj.rowsPrimary = createAxisCells(selObj.rowPrime, axes.map(() => []), 0, cells);\n                selObj.columnsPrimary = createAxisCells(selObj.colPrime, axes[0], 0, cells);\n            }\n        }\n        return selObj;\n    };\n};\n\n/**\n * Creates header cells based on the set of headers\n *\n * @param {Object} selection Contains a selection of the header units\n * @param {string} headers Contains a list of the headers\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} return either set of header cells depending on the config\n */\nconst createTextCells = (selection, headers, cells, labelManager) => createSelection(selection,\n    label => new cells.TextCell({}, { labelManager }).source(label), headers, (key, i) => key + i);\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @param {*} labelManager\n *\n */\nconst headerPlaceholderGn = (context, selectionObj, cells, labelManager) => {\n    const {\n        axis,\n        keys,\n        type,\n        facet\n    } = context;\n    const counter = axis.length / keys.length;\n    const selectionKeys = keys.length ? axis.map((d, i) => keys[Math.floor(i / counter)]) : [];\n\n    return createSelection(selectionObj[`${type}Headers`], keySet => keySet, selectionKeys,\n        (keySet, i) => `${keySet.join(',')}-${i}`)\n                    .map(keySet => createTextCells(null, keySet, cells, labelManager)\n                                    .map((cell, k, i) => cell.source(keySet[i]).config(facet)));\n};\n\n/**\n * Creates a set of placeholders as a part of selection object\n *\n * @param {Array} normalizedOptions contains normalized rows and columns\n * @param {Array} matrices contains axis and value matrices\n * @param {aArrayny} projections contains set of row and column projections\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} Creates a set of placeholders as a part of selections\n */\nconst generatePlaceholders = (context, cells, labelManager) => {\n    let selectionObj;\n    const {\n        matrices,\n        fields,\n        facetsAndProjections,\n        selection,\n        facet,\n        encoders\n    } = context;\n    const {\n        rows,\n        columns\n    } = fields;\n    const {\n        valuesMatrix\n    } = matrices;\n    const {\n        rowProjections,\n        colProjections\n    } = facetsAndProjections;\n    const {\n        rowKeys,\n        columnKeys\n    } = valuesMatrix;\n    const takeAxisFrom = encoders.simpleEncoder._axisFrom;\n    const takeHeaderFrom = encoders.simpleEncoder._headerFrom;\n\n    selectionObj = selection || {};\n\n    ['pie', X, Y].forEach((axis) => {\n        const axisFrom = axis === X ? takeAxisFrom.column : takeAxisFrom.row;\n        selectionObj = axisPlaceholderGn(context, selectionObj, cells)(axis, axisFrom);\n    });\n\n    const {\n        rowsPrimary,\n        rowsSecondary,\n        columnsPrimary,\n        columnsSecondary\n    } = selectionObj;\n\n    const rowAxis = rowsPrimary && rowsPrimary.getObjects().length ? rowsPrimary.getObjects() :\n        (rowsSecondary && rowsSecondary.getObjects().length ? rowsSecondary.getObjects() : []);\n    const colAxis = columnsPrimary && columnsPrimary.getObjects().length ? columnsPrimary.getObjects() :\n        (columnsSecondary && columnsSecondary.getObjects().length ? columnsSecondary.getObjects() : []);\n\n    const headerConfig = [\n        { type: LEFT, section: rows[0], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: RIGHT, section: rows[1], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: TOP, section: columns[0], axis: colAxis, headerFrom: takeHeaderFrom.column },\n        { type: BOTTOM, section: columns[1], axis: colAxis, headerFrom: takeHeaderFrom.column }\n    ];\n\n    headerConfig.forEach((config, index) => {\n        let keys;\n        let length;\n        const {\n            type,\n            section,\n            axis,\n            headerFrom\n        } = config;\n\n        if (index < 2) {\n            keys = rowKeys;\n            length = rowProjections.length > 0 ? rowProjections.length : 1;\n        } else {\n            keys = columnKeys;\n            length = colProjections.length > 0 ? colProjections.length : 1;\n        }\n\n        if (section.length && headerFrom === type && axis && keys.length) {\n            const hContext = { axis, length, type };\n            let headers = [];\n            if (index < 2) {\n                hContext.keys = keys;\n                hContext.facet = facet.rows;\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            } else {\n                hContext.facet = facet.columns;\n                hContext.keys = keys[0].map((key, i) => keys.map(e => e[i]));\n\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            }\n            selectionObj[`${type}Headers`] = headers;\n        } else {\n            selectionObj[`${type}Headers`] = null;\n        }\n    });\n    return selectionObj;\n};\n\n/**\n * Generates matrices\n *\n * @param {Object} config Configuration to generate matrices\n * @param {Array} matrices Matrices containing the set of visual units and axes units\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} contains a collection of matrices\n */\nexport const generateMatrices = (context, matrices, cells, labelManager) => {\n    const {\n        unitHeight,\n        unitWidth,\n        facetsAndProjections,\n        normalizedRows,\n        normalizedColumns,\n        selection,\n        axisFrom,\n        facet,\n        encoders\n     } = context;\n    const placeholderContext = {\n        fields: {\n            rows: normalizedRows,\n            columns: normalizedColumns\n        },\n        matrices,\n        facetsAndProjections,\n        selection,\n        axisFrom,\n        facet,\n        encoders\n    };\n    // Generate placeholders for all matrices\n    const selectionObj = generatePlaceholders(placeholderContext, cells, labelManager);\n    const {\n        columnsPrimary,\n        columnsSecondary,\n        rowsPrimary,\n        rowsSecondary,\n        leftHeaders,\n        topHeaders,\n        bottomHeaders,\n        rightHeaders\n    } = selectionObj;\n    const [rowPrime, rowSec, colPrime, colSec] = [rowsPrimary, rowsSecondary, columnsPrimary, columnsSecondary]\n        .map(d => (d ? d.getObjects() : []));\n    const [leftFacets, rightFacets] = [leftHeaders, rightHeaders]\n        .map(e => (e ? e.getObjects()\n                        .map(f => f.getObjects()) : []));\n    let rowPriority = rowSec.length ? 1 : -1;\n    rowPrime.length && rowPriority++;\n    let colPriority = colSec.length ? 1 : -1;\n    colPrime.length && colPriority++;\n\n    // Compute left matrix using left headers and the axes on the rows\n    let leftMatrix = leftFacets.length ? leftFacets.map((d, i) => {\n        rowPrime[i] = rowPrime[i] ? [rowPrime[i]] : [];\n        return [...d, ...rowPrime[i]];\n    }) : (rowPrime ? rowPrime.map(d => [d]) : []);\n\n    // Compute right matrix using right headers and the axes on the rows\n    const rightMatrix = rowSec.length ? rowSec.map((d, i) => [d, ...(rightFacets[i] || [])]) : (rightFacets.length ?\n        rightFacets.map(d => [...d]) : []);\n\n    const topMatrix = [];\n    if (topHeaders) {\n        const headers = topHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                topMatrix[i] = topMatrix[i] || [];\n                topMatrix[i].push(x);\n            });\n        });\n    }\n    // Compute top matrix using the top headers and axes on the columns\n    if (colPrime.length) {\n        topMatrix.push(colPrime);\n    }\n\n    // Bottom and right matrices are prepared using the user config.\n    let bottomMatrix = [];\n    if (colSec.length) {\n        bottomMatrix.push(colSec);\n    }\n    const currentBottomLength = bottomMatrix.length;\n    if (bottomHeaders) {\n        const headers = bottomHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                bottomMatrix[i + currentBottomLength] = bottomMatrix[i + currentBottomLength] || [];\n                bottomMatrix[i + currentBottomLength].push(x);\n            });\n        });\n    }\n\n    if (!leftMatrix.length && !rightMatrix.length) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        leftMatrix = [[cell]];\n    }\n\n    if (!topMatrix.length && (!bottomMatrix.length || !bottomMatrix[0].length)) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        bottomMatrix = [[cell]];\n    }\n\n    return {\n        rows: [leftMatrix, rightMatrix],\n        columns: [topMatrix, bottomMatrix],\n        selectionObj,\n        colPriority,\n        rowPriority\n    };\n};\n\n/**\n * Computes matrices for a group\n *\n * @param {Object} datamodel on which the matrices are to be computed\n * @param {Object} config configuration of the matrices\n * @param {Object} layerRegistry contains the registered layers\n * @return {Object} conputed matrices\n * @memberof MatrixResolver\n */\nexport const computeMatrices = (context, config) => {\n    const {\n        resolver,\n        datamodel,\n        componentRegistry,\n        encoders\n    } = context;\n    const {\n            globalConfig,\n            selection,\n            transform\n        } = config;\n    const groupBy = globalConfig.autoGroupBy;\n    const { smartlabel: labelManager } = resolver.dependencies();\n    const fieldMap = datamodel.getFieldsConfig();\n    const layerConfig = resolver.layerConfig();\n    const registry = resolver.registry();\n    const { fields: normalizedRows } = resolver.horizontalAxis();\n    const { fields: normalizedColumns } = resolver.verticalAxis();\n    const otherEncodings = resolver.optionalProjections(config, layerConfig);\n    const facetsAndProjections = resolver.getAllFields();\n    const matrixGnContext = {\n        // Configuration to be passed to generate the  different matrices.\n        // A common config is used for both value matrices and other matrices\n        normalizedColumns,\n        normalizedRows,\n        facetsAndProjections,\n        layers: layerConfig,\n        fieldMap,\n        otherEncodings,\n        encoders,\n        facet: globalConfig.facet || {},\n        axisFrom: globalConfig.axisFrom || {},\n        selection\n    };\n    const cells = {\n        GeomCell: resolver.getCellDef(registry.GeomCell),\n        AxisCell: resolver.getCellDef(registry.AxisCell),\n        BlankCell: resolver.getCellDef(registry.BlankCell),\n        TextCell: resolver.getCellDef(registry.TextCell)\n    };\n    const isRowSizeEqual = isDistributionEqual(normalizedRows);\n    const isColumnSizeEqual = isDistributionEqual(normalizedColumns);\n\n    resolver.colCells({});\n    resolver.rowCells({});\n    resolver.datamodelTransform(transform || {});\n\n    // Cell creation begins here\n    resolver.resetSimpleAxes();\n\n    const {\n        entryCellMap\n    } = resolver.cacheMaps();\n    const newCacheMap = {\n        exitCellMap: entryCellMap,\n        entryCellMap: new Map()\n    };\n\n    resolver.cacheMaps(newCacheMap);\n\n    const valueCellContext = {\n        config: globalConfig,\n        suppliedLayers: encoders.simpleEncoder.serializeLayerConfig(resolver.layerConfig()),\n        resolver,\n        cell: cells.GeomCell,\n        encoder: encoders.simpleEncoder,\n        newCacheMap,\n        detailFields: config.detail\n    };\n    const fieldsConfig = datamodel.getFieldsConfig();\n    let groupedModel = datamodel;\n    if (!groupBy.disabled) {\n        const fields = getFieldsFromSuppliedLayers(valueCellContext.suppliedLayers, datamodel.getFieldsConfig());\n        const allFields = extractFields(facetsAndProjections, fields);\n\n        const dimensions = allFields.filter(field =>\n            fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n        const aggregationFns = groupBy.measures;\n\n        groupedModel = datamodel.groupBy(dimensions.length ? dimensions : [''], aggregationFns).project(allFields);\n    }\n\n    // return a callback function to create the cells from the matrix\n    const cellCreator = resolver.valueCellsCreator(valueCellContext);\n    // Creates value matrices from the datamodel and configs\n    const valueMatrixInfo = getMatrixModel(groupedModel, facetsAndProjections, cellCreator);\n\n    resolver.cacheMaps().exitCellMap.forEach((placeholder) => {\n        placeholder.remove();\n    });\n    resolver.cacheMaps().exitCellMap.clear();\n    resolver.valueMatrix(valueMatrixInfo.matrix);\n\n    const { xAxes, yAxes } = mutateAxesFromMap(resolver.cacheMaps(), resolver.axes());\n\n    resolver.axes({\n        x: xAxes,\n        y: yAxes\n    });\n    const store = resolver.store();\n\n    [xAxes, yAxes].forEach((axesArr, type) => {\n        const stateProps = {};\n        axesArr = axesArr || [];\n        axesArr.forEach((axes, idx) => {\n            axes.forEach((axis, axisIndex) => {\n                stateProps[`${idx}${axisIndex}`] = null;\n            });\n        });\n        store.append(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type ? 'y' : 'x'}`, stateProps);\n    });\n    resolver.createUnits(componentRegistry, config);\n\n    const matrices = {\n        valuesMatrix: valueMatrixInfo,\n        axesMatrix: resolver.axes()\n    };\n    // Create all matrices\n    const {\n        rows,\n        columns,\n        selectionObj,\n        rowPriority,\n        colPriority\n    } = generateMatrices(matrixGnContext, matrices, cells, labelManager);\n\n    resolver.rowMatrix(rows);\n    resolver.columnMatrix(columns);\n\n    return {\n        rows: resolver.rowMatrix(),\n        columns: resolver.columnMatrix(),\n        values: resolver.valueMatrix(),\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority: {\n            row: rowPriority,\n            col: colPriority\n        },\n        selection: selectionObj,\n        dataModels: {\n            groupedModel,\n            parentModel: datamodel\n        }\n    };\n};\n","export const RESOLVER_PROPS = {\n    dependencies: {},\n    units: {},\n    datamodelTransform: {},\n    layerConfig: {},\n    matrixLayers: {},\n    colCells: {},\n    rowCells: {},\n    rowMatrix: {},\n    columnMatrix: {},\n    valueMatrix: {},\n    encoder: {}\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { generateGetterSetters, STATE_NAMESPACES } from 'muze-utils';\nimport {\n     initializeCacheMaps,\n     headerCreator,\n     extractUnitConfig,\n     setFacetsAndProjections\n} from './group-utils';\nimport {\n     ROW, COL, LEFT, RIGHT, COLOR, SIZE, SHAPE, DETAIL, CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS, INITIALIZED,\n     AXIS, UNIT, BEFORE_UPDATE, UPDATED, VALUE_MATRIX, FACET_HEADERS\n} from '../enums/constants';\nimport { createValueCells, computeMatrices } from './cell-creator';\nimport { RESOLVER_PROPS } from './resolver-props';\n\n/**\n * Resolves the matrices from configuration provided\n *\n * @export\n * @class MatrixResolver\n */\nexport default class MatrixResolver {\n\n    /**\n     * Creates an instance of MatrixResolver.\n     * @param {Object} dependencies needed to run the resolver\n     * @memberof MatrixResolver\n     */\n    constructor (dependencies) {\n        this._registry = {};\n        this._layerConfig = [];\n        this._matrixLayers = [];\n        this._dependencies = dependencies;\n        this._rowMatrix = [];\n        this._columnMatrix = [];\n        this._valueMatrix = [];\n        this._facets = { rowFacets: [], colFacets: [] };\n        this._projections = { rowProjections: [], colProjections: [] };\n        this._datamodelTransform = {};\n        this._units = [];\n        this._cacheMaps = {};\n        this._axes = {\n            x: {},\n            y: {},\n            color: [],\n            size: [],\n            shape: []\n        };\n        generateGetterSetters(this, RESOLVER_PROPS);\n        this.cacheMaps(initializeCacheMaps());\n    }\n\n    /**\n     * Set:  Registers placeholders, Get: return {Object} those placeholders\n     *\n     * @param {Object} placeholders cells that will construct the group\n     * @return {Object} Either current instance or the set of placeholders\n     * @memberof MatrixResolver\n     */\n    registry (...placeholders) {\n        if (placeholders.length) {\n            Object.entries(placeholders[0]).forEach((val) => {\n                this._registry[val[0]] = val[1];\n            });\n            return this;\n        }\n        return this._registry;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    cacheMaps (...maps) {\n        if (maps.length) {\n            [CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS].forEach((e) => {\n                this._cacheMaps[`${e}Map`] = maps[0][`${e}Map`] || this._cacheMaps[`${e}Map`];\n            });\n            return this;\n        }\n        return this._cacheMaps;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    axes (...axes) {\n        if (axes.length) {\n            this._axes = Object.assign({}, this._axes, axes[0]);\n            return this;\n        }\n        return this._axes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} facets\n     *\n     * @memberof MatrixResolver\n     */\n    facets (...facets) {\n        if (facets.length) {\n            Object.entries(facets[0]).forEach((e) => {\n                this._facets[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._facets;\n    }\n\n    /**\n     *\n     *\n     * @param {*} projections\n     *\n     * @memberof MatrixResolver\n     */\n    projections (...projections) {\n        if (projections.length) {\n            Object.entries(projections[0]).forEach((e) => {\n                this._projections[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._projections;\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @param {*} layerConfig\n     *\n     * @memberof MatrixResolver\n     */\n    optionalProjections (config, layerConfig) {\n        const otherEncodings = {};\n        const optionalProjections = [];\n        const otherEncodingTypes = [SIZE, COLOR, SHAPE];\n\n        otherEncodingTypes.forEach((type) => {\n            if (config[type] && config[type].field) {\n                const enc = config[type];\n                otherEncodings[type] = enc.field;\n                optionalProjections.push(enc.field);\n            }\n        });\n\n        if (config[DETAIL]) {\n            optionalProjections.push(...config.detail);\n        }\n\n        if (layerConfig.length) {\n            layerConfig.forEach((layer) => {\n                if (layer.encoding) {\n                    Object.values(layer.encoding).forEach((enc) => {\n                        if (enc && optionalProjections.indexOf(enc.field) === -1) {\n                            optionalProjections.push(enc.field ? enc.field : enc);\n                        }\n                    });\n                }\n            });\n        }\n        this.projections({ optionalProjections });\n        return otherEncodings;\n    }\n\n    /**\n     * return the normalized set of rows and facets and projections\n     *\n     * @param {Object} rows parameters needed to set horizontal axis consisiting of rows\n     * @return {Object} facets, projections and normalized rows\n     * @memberof MatrixResolver\n     */\n    horizontalAxis (rows, encoder) {\n        if (rows) {\n            this._horizontalAxis = setFacetsAndProjections(this, { type: ROW, fields: rows }, encoder);\n            return this;\n        }\n        return this._horizontalAxis;\n    }\n\n    /**\n     * return the normalized set of columns and facets and projections\n     *\n     * @param {Object} columns parameters needed to set vertical axis consisiting of columns\n     * @return {Object} facets, projections and normalized columns\n     * @memberof MatrixResolver\n     */\n    verticalAxis (columns, encoder) {\n        if (columns) {\n            this._verticalAxis = setFacetsAndProjections(this, { type: COL, fields: columns }, encoder);\n            return this;\n        }\n        return this._verticalAxis;\n    }\n\n    /**\n     * Gets the class definition of a particular cell type(if the particular type has been extended, that particular\n     * definition is returned)\n     *\n     * @param {Object} cell cell whose class definition is to be retrieved\n     * @return {Object} cell definition\n     * @memberof MatrixResolver\n     */\n    getCellDef (cell) {\n        const registry = this.registry();\n\n        Object.values(registry).forEach((e) => {\n            if (e.prototype instanceof cell) {\n                cell = e;\n            }\n        });\n        return cell;\n    }\n\n    /**\n     * return a visual cell creator along with its axis information to be injected to the datamodel creation\n     * function\n     *\n     * @param {Object} GeomCell Type of cell to be created\n     * @return {Object} Created cell\n     * @memberof MatrixResolver\n     */\n    valueCellsCreator (context) {\n        // reset matrix layers\n        this.matrixLayers([]);\n\n        return (datamodel, fieldInfo, facets) => createValueCells(context, datamodel, fieldInfo, facets);\n    }\n\n    /**\n     * Callback to be applied on each cell of a matrix of a particular type\n     *\n     * @param {string} matrixType type of matrix on which callback is to be applied\n     * @param {Function} callback function to be applied to each cell\n     * @memberof MatrixResolver\n     */\n    forEach (matrixType, callback) {\n        this[matrixType]().forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                callback(rIndex, cIndex, col);\n            });\n        });\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getAllFields () {\n        const retObj = this.projections();\n\n        Object.entries(this.facets()).forEach((e) => {\n            retObj[e[0]] = e[1];\n        });\n        return retObj;\n    }\n\n    /**\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    resetSimpleAxes () {\n        return this.axes({\n            x: new Set(),\n            y: new Set()\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} componentRegistry\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createUnits (componentRegistry, config) {\n        const {\n            globalConfig,\n            alias\n        } = config;\n        const {\n            layerRegistry,\n            sideEffectRegistry\n        } = componentRegistry;\n        const {\n            smartlabel: smartLabel,\n            lifeCycleManager\n        } = this.dependencies();\n        // Provide the source for the matrix\n        const units = [[]];\n        // Setting unit configuration\n        const unitConfig = extractUnitConfig(globalConfig || {});\n        const globalState = VisualUnit.getState()[0];\n        const globalStates = {};\n        const store = this.store();\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            let unit = el.source();\n            if (!unit) {\n                const namespace = `${i}${j}`;\n\n                unit = VisualUnit.create({\n                    layerRegistry,\n                    sideEffectRegistry\n                }, {\n                    smartLabel,\n                    lifeCycleManager\n                });\n                globalStates[namespace] = null;\n                unit.metaInf({\n                    rowIndex: i,\n                    colIndex: j,\n                    namespace\n                });\n                unit.store(store);\n                el.source(unit);\n            }\n            !units[i] && (units[i] = []);\n            units[i][j] = unit;\n            unit.parentAlias(alias);\n            el.config(unitConfig);\n        });\n\n        for (const key in globalState) {\n            store.append(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${key}`, globalStates);\n        }\n\n        lifeCycleManager.notify({ client: units, action: INITIALIZED, formalName: UNIT });\n        return this.units(units);\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    setDomains (config, datamodel, encoders) {\n        const {\n            color,\n            shape,\n            size,\n            globalConfig\n        } = config;\n        const groupBy = globalConfig.autoGroupBy;\n        const {\n            rowFacets,\n            colFacets\n        } = this.getAllFields();\n        const encoding = {\n            color,\n            shape,\n            size\n        };\n        const facetFields = [...rowFacets.map(e => e.toString()), ...colFacets.map(e => e.toString())];\n        const retContext = {\n            domains: encoders.simpleEncoder.getRetinalFieldsDomain(datamodel, encoding, facetFields, groupBy),\n            axes: this.axes(),\n            encoding\n        };\n        encoders.retinalEncoder.setCommonDomain(retContext);\n        return this;\n    }\n\n    resetFacetsAndProjections () {\n        this._facets = {};\n        this._projections = {};\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getRetinalAxes () {\n        const {\n            color,\n            shape,\n            size\n        } = this.axes();\n\n        return {\n            color: [...color],\n            shape: [...shape],\n            size: [...size]\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     *\n     * @memberof MatrixResolver\n     */\n    getSimpleAxes (type) {\n        return this.axes()[`${type}`];\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createRetinalAxes (fieldsConfig, config, encoders) {\n        const layerConfig = this.layerConfig();\n        this.optionalProjections(config, layerConfig);\n        const retinalAxes = encoders.retinalEncoder.createAxis({\n            fieldsConfig,\n            config,\n            axes: this.axes()\n        });\n        const {\n            lifeCycleManager\n        } = this.dependencies();\n\n        [COLOR, SHAPE, SIZE].forEach((e) => {\n            this.axes()[e] = retinalAxes[e];\n        });\n\n        lifeCycleManager.notify({ client: this.axes(), action: INITIALIZED, formalName: AXIS });\n        lifeCycleManager.notify({ client: this.units(), action: BEFORE_UPDATE, formalName: UNIT });\n\n        const units = [];\n        const matrixLayers = this.matrixLayers();\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            el.axes(retinalAxes);\n            el.source() && el.source().retinalFields(config);\n            el.layerDef(encoders.retinalEncoder.getLayerConfig(config, matrixLayers[i][j]));\n            el.updateModel();\n\n            units.push(el.source());\n        });\n\n        lifeCycleManager.notify({ client: units, action: UPDATED, formalName: UNIT });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} placeholders\n     * @param {*} fieldNames\n     *\n     * @memberof MatrixResolver\n     */\n    createHeaders (placeholders, fieldNames, config) {\n        let bottomLeft = [];\n        let bottomRight = [];\n        const {\n            rows,\n            columns\n        } = placeholders;\n        const {\n            smartlabel: labelManager,\n            lifeCycleManager\n        } = this.dependencies();\n        const TextCell = this.getCellDef(this.registry().TextCell);\n        const BlankCell = this.getCellDef(this.registry().BlankCell);\n        const [leftRows, rightRows] = rows;\n        const [topCols, bottomCols] = columns;\n        const rowHeaders = fieldNames.rows;\n        const blankCellCreator = cell => new BlankCell().config({ show: cell.config().show });\n\n        // Headers and footers are created based on the rows. Thereafter, using the column information\n        // they are tabularized into the current structure\n        const headers = {\n            left: headerCreator(leftRows, rowHeaders[0], config.showHeaders ? TextCell : BlankCell, labelManager),\n            right: headerCreator(rightRows, rowHeaders[1], config.showHeaders ? TextCell : BlankCell, labelManager)\n        };\n        const footers = {\n            left: leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : [],\n            right: rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []\n        };\n        const [topLeft, topRight] = [LEFT, RIGHT].map(type => topCols.map((col, i) => {\n            if (i === topCols.length - 1) {\n                return headers[type];\n            }\n            return footers[type];\n        }));\n\n        // Creating only bottom matrices if there is no information on the top\n        if (topCols.length === 0) {\n            [bottomLeft, bottomRight] = [LEFT, RIGHT].map(type => bottomCols.map((col, i) => {\n                if (i === 0) {\n                    return headers[type];\n                }\n                return footers[type];\n            }));\n        } else {\n            bottomLeft = bottomCols.map(() => (leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : []));\n            bottomRight = bottomCols.map(() => (rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []));\n        }\n\n        lifeCycleManager.notify({\n            client: [topLeft, topRight, bottomLeft, bottomRight],\n            action: INITIALIZED,\n            formalName: FACET_HEADERS\n        });\n\n        return { topLeft, topRight, bottomLeft, bottomRight };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @param {*} componentRegistry\n     * @param {*} encoders\n     *\n     * @memberof MatrixResolver\n     */\n    getMatrices (datamodel, config, componentRegistry, encoders) {\n        const context = {\n            datamodel,\n            componentRegistry,\n            encoders,\n            resolver: this\n        };\n\n        return computeMatrices(context, config);\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            return this;\n        }\n        return this._store;\n    }\n}\n","/**\n * This is a wrapper class over the matrix of cells which gets created in visual group. Visual Group creates left,\n * right, bottom and top and center matrices and wraps them using this class.\n *\n * @public\n * @class ValueMatrix\n */\nclass ValueMatrix {\n\n    /**\n     * Creates an instance of ValueMatrix.\n     *\n     * @param {Array} matrixArr Matrix array.\n     */\n    constructor (matrixArr) {\n        const instancesById = {};\n\n        this.matrix(matrixArr || []);\n        this.filter(() => true);\n\n        this.each((el, rIdx, cIdx) => {\n            const cellValue = el.valueOf();\n            if (cellValue && cellValue.id) {\n                const id = cellValue.id();\n                instancesById[id] = {\n                    instance: cellValue,\n                    rowIndex: rIdx,\n                    colIndex: cIdx\n                };\n            }\n        });\n\n        this.instancesById(instancesById);\n    }\n\n    instancesById (...id) {\n        if (id.length) {\n            this._instancesById = id[0];\n            return this;\n        }\n        return this._instancesById;\n    }\n\n    /**\n     * Returns the array of matrices contained in this instance.\n     *\n     * @public\n     * @return {Array} Array of matrices.\n     */\n    matrix (...matrix) {\n        if (matrix.length) {\n            this._matrix = matrix[0];\n            return this;\n        }\n        return this._matrix;\n    }\n\n    /**\n     * Sets a filter criteria. This filter criteria gets applied when each function is called.\n     *\n     * @public\n     * @param {Function} fn Filter function.\n     *\n     * @return {ValueMatrix} Instance of value matrix.\n     */\n    filter (...fn) {\n        if (fn.length) {\n            this._filterFn = fn[0];\n            return this;\n        }\n        return this._filterFn;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    width () {\n        let rowWidth = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowWidth = 0;\n            row.forEach((cell) => {\n                currentRowWidth += cell.getLogicalSpace().width;\n            });\n            rowWidth = Math.max(rowWidth, currentRowWidth);\n        });\n        return rowWidth;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    height () {\n        let rowHeight = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowHeight = 0;\n            row.forEach((cell) => {\n                currentRowHeight = Math.max(currentRowHeight, cell.getLogicalSpace().height);\n            });\n            rowHeight += currentRowHeight;\n        });\n        return rowHeight;\n    }\n\n    /**\n     * Iterates through the two dimensional matrix array and calls the given callback function with the cell instance,\n     * row index, column index and the matrix array.\n     *\n     * @param {Function} fn Callback function which will get called for every cell.\n     * @return {ValueMatrix} Instance of the value matrix.\n     */\n    each (fn) {\n        const matrix = this.matrix();\n        const filterFn = this.filter();\n\n        matrix.forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                if (filterFn(col)) {\n                    fn(col, rIndex, cIndex, matrix);\n                }\n            });\n        });\n        return this;\n    }\n\n    findPlaceHolderById (id) {\n        return this.instancesById()[id];\n    }\n}\n\nexport default ValueMatrix;\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { getEncoder, getBorders } from '../group-helper';\nimport { RetinalEncoder } from '../encoder';\nimport { registerDomainChangeListener, unsubscribeChangeListeners } from './change-listener';\nimport ValueMatrix from './value-matrix';\n\nexport const createUnitState = (context) => {\n    const [globalState] = VisualUnit.getState();\n    const store = context.store();\n    store.append(STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const initializeGlobalState = (context) => {\n    const globalState = context.constructor.getState()[0];\n    const store = context.store();\n    store.append(STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const createLayerState = (context) => {\n    const [globalState] = BaseLayer.getState();\n    context.store().append(STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, globalState);\n};\n\nconst sanitizeRetinalConfig = (retinalConf) => {\n    const conf = {};\n    for (const key in retinalConf) {\n        const confValue = retinalConf[key];\n        if (typeof confValue === 'string' || !confValue) {\n            conf[key] = {\n                field: retinalConf[key]\n            };\n        } else {\n            conf[key] = confValue;\n        }\n    }\n    return conf;\n};\n\nexport const setMatrixInstances = (context, placeholder) => {\n    let {\n        values,\n        rows,\n        columns\n    } = placeholder;\n    values = values || [];\n    rows = rows || [];\n    columns = columns || [];\n    context._composition.matrices = {\n        value: new ValueMatrix(values),\n        left: new ValueMatrix(rows[0]),\n        right: new ValueMatrix(rows[1]),\n        top: new ValueMatrix(columns[0]),\n        bottom: new ValueMatrix(columns[1])\n    };\n\n    context._dependencies.throwback.commit(CommonProps.MATRIX_CREATED, true);\n    return context;\n};\n\nexport const createMatrices = (context) => {\n    const rows = context.rows();\n    const columns = context.columns();\n    const color = context.color();\n    const datamodel = context.data();\n    const size = context.size();\n    const detail = context.detail();\n    const layers = context.layers();\n    const transform = context.transform();\n    const config = context.config();\n    const shape = context.shape();\n\n    // Get the resolver for the matrices\n    const resolver = context.resolver();\n    resolver.store(context.store());\n    // Prepare configuration for matrix preparation\n    let matrixConfig = {\n        selection: context.selection(),\n        alias: context.alias(),\n        globalConfig: config || {},\n        rows,\n        columns,\n        detail,\n        layers,\n        transform\n    };\n\n    unsubscribeChangeListeners(context);\n\n    const retinalConfig = sanitizeRetinalConfig({\n        color,\n        shape,\n        size\n    });\n\n    matrixConfig = Object.assign(matrixConfig, retinalConfig);\n    // Create the encoders for the group\n    const encoders = {};\n    encoders.retinalEncoder = new RetinalEncoder();\n    encoders.simpleEncoder = getEncoder(layers);\n    resolver.encoder(encoders.simpleEncoder);\n\n    // Set the group type\n    context.groupType(encoders.simpleEncoder.constructor.type());\n\n    // Get sanitized fields as instances of the Vars Class\n    const fields = encoders.simpleEncoder.fieldSanitizer(datamodel, matrixConfig);\n    encoders.simpleEncoder.setAxisAndHeaders(config ? config.axisFrom : {}, fields);\n    // Setting layers for the code\n    layers && resolver.layerConfig(layers);\n    // Set the row and column axes\n    resolver.horizontalAxis(fields.rows, encoders).verticalAxis(fields.columns, encoders);\n    // Getting the placeholders\n    const placeholderInfo = resolver.getMatrices(datamodel, matrixConfig, context.registry(), encoders);\n    context._groupedDataModel = placeholderInfo.dataModels.groupedModel;\n    // Set the selection object\n    context.selection(placeholderInfo.selection);\n\n    // Create retinal axes\n    resolver.createRetinalAxes(placeholderInfo.dataModels.parentModel.getFieldsConfig(), retinalConfig,\n            encoders);\n\n    // Domains are evaluated for each of the axes for commonality\n    resolver.setDomains(matrixConfig, placeholderInfo.dataModels, encoders);\n\n    // Create matrix instances\n    setMatrixInstances(context, placeholderInfo);\n\n    // Prepare corner matrices\n    context.cornerMatrices(resolver.createHeaders(placeholderInfo, fields, config));\n\n    // Set placeholder information\n    context.placeholderInfo(placeholderInfo);\n\n    context._composition.axes = resolver.axes();\n    context.metaData({\n        border: getBorders(placeholderInfo, encoders.simpleEncoder)\n    });\n\n    resolver.encoder().unionUnitDomains(context);\n\n    registerDomainChangeListener(context);\n    return context;\n};\n","import { STATE_NAMESPACES } from 'muze-utils';\n\nexport const setupChangeListeners = (context) => {\n    const store = context.store();\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.x.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.y.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n};\n\nexport const registerDomainChangeListener = (context) => {\n    const store = context.store();\n    store.registerChangeListener([`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`], () => {\n        context.resolver().encoder().unionUnitDomains(context);\n    }, false, {\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n\nexport const unsubscribeChangeListeners = (context) => {\n    context.store().unsubscribe({\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\nexport const PROPS = {\n    alias: {},\n    data: {},\n    cornerMatrices: {\n        defaultValue: {\n            topLeft: [],\n            topRight: [],\n            bottomLeft: [],\n            bottomRight: []\n        }\n    },\n    groupType: {},\n\n    metaData: {\n        defaultValue: {\n            border: {}\n        }\n    },\n    placeholderInfo: {\n        defaultValue: {}\n    },\n    resolver: {},\n    registry: {\n        sanitization: (context, value) => {\n            if (context.resolver) {\n                context.resolver().registry(value.cellRegistry);\n            }\n            return value;\n        }\n    },\n    selection: {},\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { generateGetterSetters } from 'muze-utils';\nimport localOptions from './local-options';\nimport { SimpleGroup } from '../simple-group';\nimport {\n    MatrixResolver,\n    findInGroup\n} from '../group-helper';\nimport { createUnitState, initializeGlobalState, setMatrixInstances, createMatrices, createLayerState } from './helper';\nimport { setupChangeListeners } from './change-listener';\nimport { PROPS } from './props';\nimport {\n    CONFIG,\n    MOUNT,\n    RETINAL,\n    Y\n} from '../enums/constants';\n\n/**\n * VisualGroup is instantiated by canvas for creating {@link VisualUnit} and axes instances.It creates the\n * the matrix of visual units and axes. It also creates the layout instance which manages the allocation\n * of space of matrices.\n *\n * To get instance of visual group,\n * ```\n *      const visualGroup = canvas.composition().visualGroup;\n * ```\n * @public\n *\n * @class VisualGroup\n */\nclass VisualGroup extends SimpleGroup {\n\n    /**\n     * Creates an instance of VisualGroup. Requires dependencies and other registry options for placeholders\n     * and layers that create individual units.\n     *\n     * @param {Object} registry Key value pair of compostions for the group\n     * @param {Object} dependencies Dependencies needed to run the group\n     * @memberof VisualGroup\n     */\n    constructor (registry, dependencies) {\n        super();\n\n        const {\n            componentSubRegistry\n        } = registry;\n\n        this._dependencies = dependencies;\n        // Generate getter/setter methods for all properties of the class\n        // One can get each property by calling the method and can set it\n        // by passing paramaters for the same. Thus, one can chain setter\n        // getter methods.\n        generateGetterSetters(this, PROPS);\n        generateGetterSetters(this, localOptions);\n        // Populate the store with default values\n        // initialize group compositions\n        this._composition = {};\n        // store reference to data\n        this._data = [];\n        // store reference to mountpoint\n        this._mount = null;\n        // selection object that takes care of updating of components\n        this._selection = {};\n        // Create instance of matrix resolver\n        this.resolver(new MatrixResolver(this._dependencies));\n        // matrix instance store each of the matrices\n        setMatrixInstances(this, {});\n         // Getting indiviual registered items\n        this.registry({\n            layerRegistry: componentSubRegistry.layerRegistry.get(),\n            cellRegistry: componentSubRegistry.cellRegistry.get()\n        });\n    }\n\n    static getState () {\n        return [{\n            domain: {\n                x: {},\n                y: {},\n                radius: {}\n            }\n        }, {}];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            initializeGlobalState(this);\n            createUnitState(this);\n            createLayerState(this);\n            // Register listeners\n            setupChangeListeners(this);\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Return the instances of matrices created by the visual group.\n     *\n     * @return {Object} Instance of matrices.\n     */\n    matrixInstance (...matrices) {\n        if (matrices.length) {\n            return this;\n        }\n        return this.composition().matrices;\n    }\n\n    /**\n     * Returns the composition of visual group.\n     *\n     * @public\n     *\n     * @return {Object} Composition of visual group. It contains instance of matrices {@link ValueMatrix}\n     * and instances of axis.\n     * ```\n     *          {\n     *              matrices: {\n     *                  value: // Instance of center value matrix.\n     *                  left: // Instance of left value matrix\n     *                  right: // Instance of right value matrix\n     *                  bottom: // Instance of bottom value matrix\n     *                  top: // Instance of top value matrix.\n     *              },\n     *              axes: {\n     *                  x: // Array of x axis.\n     *                  y: // Array of y axis\n     *                  color: // Array of color axis\n     *                  shape: // Array of shape axis\n     *                  size: // Array of size axis.\n     *              }\n     *          }\n     * ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    /**\n     * Locks the model to prevent change listeners to be triggered until unlocked\n     *\n     * @return {Object} Instance of class VisualGroup\n     * @memberof VisualGroup\n     */\n    lockModel () {\n        this.store().model.lock();\n        return this;\n    }\n\n    /**\n     * Unlocks the model so that all change listeners can be triggered\n     *\n     * @return {Object} Instance of class VisualGroup\n     */\n    unlockModel () {\n        this.store().model.unlock();\n        return this;\n    }\n\n    /**\n     * Returns the channel name of the variable. Channels are rows, columns, color, shape and size.\n     *\n     * @public\n     * @param {string} variable Name of the variable.\n     *\n     * @return {string} Name of the channel.\n     */\n    where (variable) {\n        return findInGroup(variable, this.resolver().getAllFields());\n    }\n\n    /**\n     * Gets the axis instances of the visual group based on the given axis type.\n     *\n     * @public\n     * @param {string} type Type of axis. X,Y or retinal axes.\n     *\n     * @return {Array} Array of axis instances.\n     */\n    getAxes (type) {\n        if (type === RETINAL) {\n            return this.resolver().getRetinalAxes();\n        }\n        return this.resolver().getSimpleAxes(type);\n    }\n\n    /**\n     * Returns the instances of cells based on the given type. Type can be given as `row' or `col`.\n     *\n     * @public\n     * @return {Array} Two dimensional array of cells.\n     */\n    getCells (type) {\n        return this.resolver()[`${type}Cells`]();\n    }\n\n    getFieldsFromChannel (channel) {\n        const {\n            rowProjections,\n            colProjections\n        } = this.resolver().getAllFields();\n        return channel === Y ? rowProjections : colProjections;\n    }\n\n    getCellsByFacetKey (facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey] || [];\n        return cells;\n    }\n\n    getAxesByFacetKey (axisType, facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey];\n        const axes = cells[0].valueOf().axes()[axisType] || [];\n\n        return axes;\n    }\n\n    /**\n     * This method is used to return a serialized representation of the instance's properties.\n     *\n     * @return {Object} Object with config proprties.\n     * @memberof VisualGroup\n     */\n    serialize () {\n        const store = this.store();\n\n        return {\n            [CONFIG]: store.get(CONFIG),\n            [MOUNT]: store.get(MOUNT)\n        };\n    }\n\n    /**\n     * Returns the grouped datamodel prepared by visual group. If there is no group by performed, then it returns the\n     * original data model passed to visual group.\n     *\n     * @return {DataModel} Grouped data model.\n     */\n    getGroupByData () {\n        return this._groupedDataModel;\n    }\n\n    createMatrices () {\n        createMatrices(this);\n    }\n}\n\nexport default VisualGroup;\n","import { PersistentBehaviour, SELECTION } from '@chartshq/muze-firebolt';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return 'select';\n    }\n\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            // new add set\n            const existingRemoveSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_OLD_EXIT\n                || selectionSet._set[d] === SELECTION.SELECTION_NEW_EXIT);\n                // existing add set\n            if (existingRemoveSet.length) {\n                selectionSet.updateEntry();\n                selectionSet.add(existingRemoveSet);\n            } else {\n                selectionSet.updateExit();\n                selectionSet.remove(addSet);\n            }\n            const { exitSet } = selectionSet.getSets();\n            const mergedExitSet = [...new Set(exitSet[1]), ...new Set(exitSet[0])];\n            const completeSetCount = selectionSet.getCompleteSet().length;\n            if (exitSet[1].length !== completeSetCount && mergedExitSet.length === completeSetCount) {\n                selectionSet.reset();\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nconst CLASSPREFIX = 'muze';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        target: `.${CLASSPREFIX}-gradient-rect`,\n        behaviours: [BEHAVIOURS.BRUSH]\n    },\n    [ACTIONS.HOVER]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.CLICK]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.SELECT]\n    }\n};\n\nexport const propagationBehaviourMap = {\n    [BEHAVIOURS.SELECT]: BEHAVIOURS.FILTER,\n    [BEHAVIOURS.BRUSH]: BEHAVIOURS.HIGHLIGHT\n};\n","import * as BEHAVIOURS from '../enums/behaviours';\nimport * as sideEffects from '../enums/side-effects';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: [sideEffects.SELECTIONBOX, {\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [sideEffects.Highlighter],\n    select: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }]\n};\n\nexport const propagationSideEffects = {\n    [BEHAVIOURS.BRUSH]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.SELECT]: ['filter']\n};\n\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n\n","export const SELECTIONBOX = 'selectionBox';\nexport const Highlighter = 'highlighter';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const CONFIG = 'config';\nexport const DATAMODEL = 'dataModel';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNTPOINT = 'mountPoint';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const TRANSFORM = 'transform';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const DEFAULTCOLOR = '#F44336';\nexport const DEFAULTSIZE = 50;\nexport const DEFAULTSHAPE = 'circle';\nexport const STEP = 'step';\nexport const GRADIENT = 'gradient';\nexport const ORDINAL = 'ordinal';\nexport const SCALE_FUNCTIONS = {\n    size: 'getSize',\n    shape: 'getShape',\n    color: 'getColor'\n};\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nexport const CENTER = 'center';\nexport const VALUE = 'value';\nexport const PATH = 'path';\nexport const SHAPE = 'shape';\nexport const ICON = 'icon';\nexport const RECT = 'rect';\nexport const START = 'start';\nexport const UPPER = 'upper';\nexport const LOWER = 'lower';\nexport const END = 'end';\nexport const SIZE = 'size';\nexport const DISCRETE = 'discrete';\nexport const MEASURE = 'measure';\n\n","import { assembleModelFromIdentifiers, getDataModelFromRange } from 'muze-utils';\nimport { propagationBehaviourMap } from './action-behaviour-map';\nimport { propagationSideEffects } from './behaviour-effect-map';\nimport { STEP, GRADIENT, DISCRETE, MEASURE } from '../enums/constants';\n\nexport const propagate = (firebolt, action, selectionSet, config = {}) => {\n    let propagationData;\n    const type = firebolt.context.constructor.type();\n    const payload = config.payload;\n    const data = firebolt.context.data();\n    const metaData = firebolt.context.metaData();\n    const fieldType = metaData.getData().schema[0].type;\n\n    const propPayload = {};\n    const sourceId = firebolt.context._id;\n    propPayload.action = propagationBehaviourMap[action] || action;\n    propPayload.sideEffects = propagationSideEffects[action];\n    propPayload.sourceCanvas = firebolt.context.canvasAlias();\n    const isMutableAction = firebolt._actions.behavioural[propPayload.action].constructor.mutates();\n    if (payload.criteria === null) {\n        propagationData = null;\n    } else {\n        const entrySet = selectionSet.mergedEnter;\n        let values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.value);\n        if (type === STEP || (type === DISCRETE && fieldType === MEASURE)) {\n            const field = Object.keys(payload.criteria || {})[0];\n            values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.range);\n            propagationData = values.length ? metaData.select((fields) => {\n                let check = false;\n                for (let i = 0; i < values.length; i++) {\n                    check = fields[field].value >= values[i][0] && fields[field].value <= values[i][1];\n                    if (check === true) {\n                        break;\n                    }\n                }\n                return check;\n            }, {\n                saveChild: false\n            }) : null;\n        } else if (type === GRADIENT) {\n            propagationData = getDataModelFromRange(metaData, payload.criteria);\n        } else if (values.length) {\n            propagationData = assembleModelFromIdentifiers(metaData, [payload.criteria[0], ...values.map(d => [d])]);\n        } else {\n            propPayload.criteria = null;\n            propagationData = metaData.select(() => true, {\n                saveChild: false\n            });\n        }\n    }\n\n    let propagateInterpolatedValues = false;\n\n    if (propagationData) {\n        const schema = propagationData.getSchema();\n        propagateInterpolatedValues = schema.every(d => d.type === MEASURE);\n    }\n\n    const propConfig = {\n        sourceId: `legend-${sourceId}`,\n        payload: propPayload,\n        criteria: propPayload.criteria === null ? null : propagationData,\n        isMutableAction,\n        propagateInterpolatedValues,\n        action: propPayload.action\n    };\n\n    metaData.propagate(propagationData, propConfig, true);\n};\n","import { Firebolt } from '@chartshq/muze-firebolt';\nimport { propagate } from './helper';\nimport { STEP, GRADIENT } from '../enums/constants';\n\n/**\n * This class manages the interactions of legend.\n * @export\n * @class LegendFireBolt\n * @extends {Firebolt}\n */\nexport class LegendFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this.initializeSideEffects();\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet[0];\n    }\n\n    propagate (behaviourName, payload, selectionSet) {\n        propagate(this, behaviourName, selectionSet, {\n            payload\n        });\n    }\n\n    getAddSetFromCriteria (criteria) {\n        let values;\n        let uniqueIds;\n        const type = this.context.constructor.type();\n\n        if (criteria === null) {\n            uniqueIds = null;\n        } else if (type === STEP) {\n            values = Object.values(criteria);\n            uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n        } else if (type === GRADIENT) {\n            uniqueIds = [];\n        } else {\n            values = criteria[1];\n            if (values) {\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.value) !== -1).map(d => d.id);\n            } else {\n                values = Object.values(criteria);\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n            }\n        }\n        return {\n            uids: uniqueIds,\n            model: null\n        };\n    }\n\n    getFullData () {\n        return null;\n    }\n}\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\n/**\n * Adds dragging action to the target element.\n * @param {firebolt} firebolt firebolt\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let endPos = {};\n    let payload;\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const boundingBox = context.measurement().gradientDimensions;\n    const axisType = context.config().align === 'horizontal' ? 'x' : 'y';\n    const axisScale = context.axis().source().scale();\n    const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n    }).on('drag', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                    axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n            }\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }).on('end', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n        if (startPos[axisType] === endPos[axisType]) {\n            payload = {\n                criteria: {}\n            };\n        } else {\n            payload = {\n                criteria: {\n                    [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                        axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n                }\n            };\n        }\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }));\n};\n\nexport default drag;\n","import { getEvent } from 'muze-utils';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} Firebolt instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        const event = getEvent();\n                        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, {\n                            criteria: null\n                        }));\n                        event.stopPropagation();\n                    });\n};\n\nexport default hover;\n","/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nconst click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\n\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport click from './click';\nimport * as ACTIONNAMES from '../../enums/actions';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click\n};\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\n","import {\n    getMousePos,\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\nimport { HEIGHT, WIDTH, HORIZONTAL } from '../../enums/constants';\n\nconst getSelectionCriteria = (subject, axis, measures) => {\n    let criteria = [];\n    const {\n        axisScale,\n        axisType\n    } = axis;\n    const {\n        startPos,\n        endPos,\n        selectionBoxMeasure,\n        drawingInfMeasure,\n        offset\n    } = measures;\n    const subjectStartPoint = subject[axisType];\n\n    if (startPos[axisType] === endPos[axisType]) {\n        criteria = [];\n    } else if (subjectStartPoint + selectionBoxMeasure >= drawingInfMeasure + offset) {\n        criteria = [axisScale.invert(drawingInfMeasure + offset - selectionBoxMeasure),\n            axisScale.invert(drawingInfMeasure + offset)];\n    } else if (subjectStartPoint - offset < offset) {\n        criteria = [axisScale.invert(offset * 2), axisScale.invert(selectionBoxMeasure + offset * 2)];\n    } else {\n        criteria = [axisScale.invert(subjectStartPoint), axisScale.invert(subjectStartPoint + selectionBoxMeasure)];\n    }\n    axisType === 'x' ? criteria : criteria.reverse();\n    return criteria;\n};\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let payload;\n    const endPos = {};\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const axisScale = context.axis().source().scale();\n    const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n    const drawingInfMeasure = context.measurement().gradientDimensions[axisType === 'x' ?\n        WIDTH : HEIGHT];\n    const offset = axisScale.range()[axisType === 'x' ? 0 : 1];\n    const measures = {\n        drawingInfMeasure,\n        offset\n    };\n    let subject = {};\n\n    targetEl.call(d3Drag().on('start', function () {\n        const event = getEvent();\n        startPos = getMousePos(this, event.sourceEvent);\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n\n        subject.x += event.dx;\n        subject.y += event.dy;\n\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(subject, { axisScale, axisType }, measures);\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }).on('end', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(event, { axisScale, axisType }, measures);\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true,\n            config: {\n                transition: {\n                    duration: 200\n                }\n            }\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }));\n};\n\n","import { makeElement } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { CLASSPREFIX, HEIGHT, WIDTH, HORIZONTAL, RECT } from '../../../enums/constants';\nimport { SELECTIONBOX } from '../../../enums/side-effects';\nimport { selectionBoxDrag } from '../../physical/selection-box-drag';\nimport './styles.scss';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\n/* istanbul ignore next */ class SelectionBox extends SpawnableSideEffect {\n    static formalName () {\n        return SELECTIONBOX;\n    }\n\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            className: 'legend-selection-box',\n            classPrefix: CLASSPREFIX\n        };\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     */\n    /* istanbul ignore next */ apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const firebolt = this.firebolt;\n        const context = firebolt.context;\n        const config = this.config();\n        const axis = context.axis().source();\n        const className = `${config.classPrefix}-${config.className}`;\n\n        const domain = payload.criteria[firebolt.context.fieldName()];\n        const axisScale = axis.scale();\n        const range = domain ? [axis.getScaleValue(domain[0]), axis.getScaleValue(domain[1])] : [];\n\n        const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n\n        const gradientDimension = firebolt.context.measurement().gradientDimensions[axisType === 'x' ?\n            HEIGHT : WIDTH];\n\n        const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n        const legendGradContainer = context.getDrawingContext().svgContainer;\n        const legendSelGroup = makeElement(legendGradContainer, 'g', [1], `${config.classPrefix}-selection-box-group`);\n\n        if (firebolt.context.config().align === HORIZONTAL) {\n            x = range[0] - rangeShifter || 0;\n            y = 0;\n            width = range[1] - range[0] || 0;\n            height = gradientDimension;\n        } else {\n            x = 0;\n            y = range[1] - rangeShifter || 0;\n            height = range[0] - range[1] || 0;\n            width = gradientDimension;\n        }\n        const enterFn = function (el) {\n            selectionBoxDrag(firebolt)(el, ['brush']);\n        };\n        const selBox = makeElement(legendSelGroup, RECT, [{ domain, x, y, width, height }], className,\n            { enter: enterFn });\n        selBox.attr('y', y)\n                        .attr('x', x)\n                        .attr(WIDTH, width)\n                        .attr(HEIGHT, height);\n    }\n}\n\nexport default SelectionBox;\n\n","import { selectElement } from 'muze-utils';\n\nexport const strategies = (firebolt) => {\n    const context = firebolt.context;\n    const classed = (set, className, change) => {\n        const classPrefix = context.config().classPrefix;\n        selectElement(context.mount())\n                        .selectAll(`.${classPrefix}-legend-columns`)\n                        .filter(d => set.uids.indexOf(d.id) !== -1)\n                        .selectAll('div')\n                        .classed(className, change);\n    };\n\n    return {\n        fade: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-fadeout`, false);\n            } else {\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-fadeout`, true);\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-fadeout`, false);\n            }\n        },\n        brighten: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-brighten`, false);\n            } else {\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-brighten`, true);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n            }\n        }\n    };\n};\n","import { GenericSideEffect } from '@chartshq/muze-firebolt';\nimport { strategies } from './strategies';\nimport { Highlighter } from '../../../enums/side-effects';\n\nexport default class LegendHighlighter extends GenericSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategies = strategies(this.firebolt);\n        this._strategy = 'brighten';\n    }\n\n    static formalName () {\n        return Highlighter;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    data: {},\n    fieldName: {},\n    legendContainer: {},\n    measurement: {\n        sanitization: (context, value) => {\n            const measurement = mergeRecursive(context._measurement, value);\n            ['padding', 'border', 'margin'].forEach((space) => {\n                measurement[space] = Math.min(measurement[space] > 0 ? measurement[space] : 0,\n                     measurement.maxWidth * 0.1, measurement.maxHeight * 0.1);\n            });\n            return measurement;\n        }\n    },\n    logicalSpace: {},\n    metaData: {},\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.resetLogicalSpace();\n            context.store().commit('range', value);\n            return value;\n        }\n    },\n    scale: {},\n    smartTicks: {},\n    store: {},\n    title: {\n        sanitization: (context, value) => mergeRecursive(context._title || {}, value)\n    }\n};\n","import { getSymbol } from 'muze-utils';\nimport {\n    CENTER,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\nexport const ALIGN = {\n    HORIZONTAL: 'horizontal',\n    VERTICAL: 'vertical'\n};\n\nexport const DEFAULT_MEASUREMENT = {\n    height: 30,\n    width: 30,\n    maxWidth: Infinity,\n    maxHeight: Infinity,\n    padding: 2,\n    margin: 2,\n    border: 1\n};\n\nexport const LEGEND_TITLE = {\n    text: '',\n    orientation: (pos) => {\n        if (pos === LEFT || pos === RIGHT) {\n            return LEFT;\n        } return CENTER;\n    }\n};\n\nexport const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    borderStyle: 'solid',\n    borderColor: 'rgba(0,0,0,0)',\n    formatter: {\n        bounds: {\n            lower: 'less than',\n            upper: 'more than'\n        }\n    },\n    item: {\n        text: {\n            orientation: 'right',\n            width: 10,\n            formatter: val => val\n        },\n        icon: {\n            className: 'legend-icon',\n            height: 20,\n            width: 20,\n            color: 'rgba(0,0,0,.5)',\n            type: 'square'\n        }\n    }\n};\n\n/**\n * Creates a map of pre defined icons\n *\n * @param {string} icon Accepts a icon name like 'square', 'cross', 'diamond' etc\n * @return {Object} icon object which can be used to draw the icons\n */\nexport const ICON_MAP = (icon) => {\n    if (icon && typeof (icon) === 'string') {\n        return getSymbol(icon);\n    } return icon;\n};\n","import { makeElement, numberInterpolator } from 'muze-utils';\n\nimport {\n    SCALE_FUNCTIONS,\n    WIDTH,\n    HEIGHT,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} scale\n *\n */\nexport const getScaleInfo = (scale) => {\n    const scaleType = scale.constructor.type();\n    const domain = scale.uniqueValues();\n    const steps = scale.config().stops || 1;\n    const scaleFn = SCALE_FUNCTIONS[scaleType];\n\n    return { scaleType, domain, steps, scaleFn };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} steps\n *\n */\nexport const getInterpolatedData = (domain, steps) => {\n    const domainForLegend = [];\n    const interpolatedFn = numberInterpolator()(domain[0], domain[1]);\n\n    for (let i = 0; i <= steps; i++) {\n        domainForLegend[i] = interpolatedFn(i / steps);\n    }\n    return domainForLegend;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} text\n * @param {*} measurement\n * @param {*} classPrefix\n */\nexport const titleCreator = (container, title, measurement, config) => {\n    const titleContainer = makeElement(container, 'table', [1], `${config.classPrefix}-legend-title`)\n            .style(WIDTH, `${measurement.width}px`)\n            .style(HEIGHT, `${measurement.height}px`)\n            .style('border-bottom', `${measurement.border}px ${config.borderStyle} ${config.borderColor}`)\n            .style('text-align', title.orientation instanceof Function ?\n                    title.orientation(config.position) : title.orientation);\n    return makeElement(titleContainer, 'td', [1], `${config.classPrefix}-legend-title-text`)\n                    .style(WIDTH, `${measurement.width}px`)\n                    .style(HEIGHT, '100%')\n                    .style('padding', `${measurement.padding}px`)\n                    .text(title.text)\n                    .node();\n};\n\n                                /**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getMaxMeasures = (data, prop, labelManager) => {\n    let maxHeight = -Infinity;\n    let maxWidth = -Infinity;\n\n    data.forEach((item) => {\n        const value = prop ? item[prop] : item;\n        const space = labelManager.getOriSize(value);\n        maxHeight = Math.max(space.height + 2, maxHeight);\n        maxWidth = Math.max(space.width + 2, maxWidth);\n    });\n\n    return { height: maxHeight, width: maxWidth };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getItemMeasures = (data, prop, labelManager, formatter) => {\n    const space = [];\n\n    data.forEach((item, index) => {\n        const value = prop ? item[prop] : item;\n        const { height, width } = labelManager.getOriSize(formatter(value));\n        space[index] = { height: height + 1, width: width + 1 };\n    });\n    return space;\n};\n\n/**\n *\n *\n * @param {*} textOrientation\n * @param {*} effPadding\n * @param {*} titleSpace\n *\n * @memberof Legend\n */\nexport const computeItemSpaces = (config, measures, data) => {\n    let totalHeight = 0;\n    let totalWidth = 0;\n    let maxItemSpaces = {\n        width: 0, height: 0\n    };\n    const {\n        effPadding,\n        titleWidth,\n        labelSpaces,\n        titleHeight,\n        maxWidth\n    } = measures;\n    const {\n        item,\n        align\n    } = config;\n    const {\n        icon,\n        text\n    } = item;\n    const textOrientation = text.orientation;\n    const itemSpaces = [];\n    const iconSpaces = [];\n    let maxIconWidth = 0;\n    labelSpaces.forEach((labelSpace, i) => {\n        const itemSpace = { width: 0, height: 0 };\n        const iconSpace = { width: 0, height: 0 };\n        const datum = data[i] || {};\n            // Compute each legend item height/width\n        if (textOrientation === LEFT || textOrientation === RIGHT) {\n            // Get label, icon and item widths\n            labelSpace.width += effPadding;\n            iconSpace.width = (datum.size ? 2 * Math.sqrt(datum.size / Math.PI) : icon.width) + effPadding;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n            itemSpace.width = labelSpace.width + maxIconWidth;\n\n            // Get label, icon and item heights\n            labelSpace.height = Math.max(labelSpace.height, icon.height) + effPadding;\n            iconSpace.height = labelSpace.height;\n            itemSpace.height = labelSpace.height;\n        } else {\n            // Get label, icon and item widths\n            labelSpace.width = Math.max(labelSpace.width, datum.size ? 2 * Math.sqrt(datum.size / Math.PI)\n            : icon.width) + effPadding;\n            iconSpace.width = labelSpace.width;\n            itemSpace.width = labelSpace.width;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n\n            // Get label, icon and item heights\n            labelSpace.height += effPadding;\n            iconSpace.height = icon.height + effPadding;\n            itemSpace.height = labelSpace.height + iconSpace.height;\n        }\n        // Compute height and width of legend for each alignment\n        if (align === 'horizontal') {\n            totalHeight = Math.max(totalHeight, itemSpace.height);\n        } else {\n            totalHeight += itemSpace.height;\n            totalWidth = Math.max(totalWidth, itemSpace.width, titleWidth) + effPadding;\n        }\n        maxItemSpaces = {\n            width: Math.max(itemSpace.width, maxItemSpaces.width),\n            height: Math.max(itemSpace.height, maxItemSpaces.height)\n        };\n        itemSpaces.push(itemSpace);\n        iconSpaces.push(iconSpace);\n    });\n    itemSpaces.forEach((itemSpace, i) => {\n        if (align === 'horizontal') {\n            itemSpace.height = totalHeight;\n            iconSpaces[i].width = maxIconWidth;\n            if (textOrientation === LEFT || textOrientation === RIGHT) {\n                labelSpaces[i].height = totalHeight;\n                iconSpaces[i].height = totalHeight;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n            } else {\n                labelSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = maxIconWidth;\n                labelSpaces[i].width = maxIconWidth;\n            }\n            totalWidth = Math.max(totalWidth + itemSpaces[i].width);\n        } else {\n            itemSpace.width = Math.max(totalWidth, maxWidth);\n            if (textOrientation === TOP || textOrientation === BOTTOM) {\n                labelSpaces[i].width = totalWidth;\n                iconSpaces[i].width = totalWidth;\n                maxIconWidth = totalWidth;\n            } else {\n                iconSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n                labelSpaces[i].width = maxItemSpaces.width - maxIconWidth;\n                totalWidth = Math.max(totalWidth, itemSpace.width) + effPadding;\n            }\n        }\n    });\n    totalWidth = Math.max(totalWidth, titleWidth);\n    totalHeight += titleHeight + effPadding;\n\n    return { totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth };\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} scaleInfo\n * @param {*} domainInfo\n *\n */\nexport const getDomainBounds = (type, scaleInfo, domainInfo) => {\n    const {\n        scaleFn,\n        scaleType,\n        scale\n    } = scaleInfo;\n    const {\n        domain,\n        domainBounds,\n        domainLeg,\n        steps\n    } = domainInfo;\n    const ele = domain[type === 'lower' ? 0 : domain.length - 1];\n    const step = steps[type === 'lower' ? 0 : steps.length - 1];\n\n    return {\n        [scaleType]: scaleType === 'size' ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n        value: domainBounds[type],\n        id: type === 'lower' ? 0 : domainLeg.length + 2,\n        range: [ele, step]\n    };\n};\n","import {\n    makeElement,\n    selectElement,\n    getUniqueId,\n    getSmartComputedStyle,\n    generateGetterSetters,\n    mergeRecursive\n} from 'muze-utils';\nimport { behaviouralActions } from '@chartshq/muze-firebolt';\nimport * as legendBehaviours from '../firebolt/behavioural';\n\nimport { LegendFireBolt } from '../firebolt/legend-firebolt';\nimport { actionBehaviourMap } from '../firebolt/action-behaviour-map';\nimport { physicalActions } from '../firebolt/physical';\nimport * as sideEffects from '../firebolt/side-effects';\nimport { behaviourEffectMap } from '../firebolt/behaviour-effect-map';\nimport { VALUE, PATH } from '../enums/constants';\nimport { PROPS } from './props';\nimport { DEFAULT_MEASUREMENT, DEFAULT_CONFIG, LEGEND_TITLE } from './defaults';\nimport { getItemMeasures, titleCreator, computeItemSpaces } from './legend-helper';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class SimpleLegend\n */\nexport default class SimpleLegend {\n\n    /**\n     * Creates an instance of Legend.\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @memberof Legend\n     */\n    constructor (dependencies) {\n        this._data = [];\n        this._metaData = [];\n        this._mount = null;\n        this._fieldName = null;\n        this._title = Object.assign({}, LEGEND_TITLE);\n        this._metaData = null;\n        this._labelManager = dependencies.labelManager;\n        this._cells = dependencies.cells;\n        this._id = getUniqueId();\n        this._measurement = Object.assign({}, this.constructor.defaultMeasurement());\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n\n        generateGetterSetters(this, PROPS);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'),\n            `${this.config().classPrefix}-legend-item-info`);\n\n        this._firebolt = new LegendFireBolt(this, {\n            behavioural: Object.assign({}, behaviouralActions, legendBehaviours),\n            physical: physicalActions,\n            physicalBehaviouralMap: actionBehaviourMap\n        }, sideEffects, behaviourEffectMap);\n    }\n\n    id () {\n        return this._id;\n    }\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new SimpleLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENT;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleLegend\n     */\n    firebolt (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return PATH;\n    }\n\n    canvasAlias (...alias) {\n        if (alias.length) {\n            this._canvasAlias = alias[0];\n            return this;\n        }\n        return this._canvasAlias;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    mount (...params) {\n        if (params.length) {\n            this._mount = params[0];\n            this.render();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces () {\n        const {\n            item,\n            classPrefix\n        } = this.config();\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n            `${classPrefix}-legend-item-info`));\n        return getItemMeasures(this.data(), VALUE, this._labelManager, item.text.formatter);\n    }\n\n    /**\n     * Sets the height and width of a legend based on provided max\n     * height and width and based on its contents\n     *\n     * @return {Instance} Current instance\n     * @memberof Legend\n     */\n    setLegendMeasures () {\n        const {\n           width,\n           height,\n           maxWidth,\n           maxHeight,\n           padding,\n           margin,\n           border\n       } = this.measurement();\n        const {\n            align\n        } = this.config();\n\n        // Effective padding, margin and padding\n        const effPadding = padding * 2;\n        const effBorder = border * 2;\n        const effMargin = margin * 2;\n\n        this.data(this.dataFromScale(this.scale()));\n        // Get space occupied by title\n        const titleSpace = this.getTitleSpace();\n        const titleHeight = titleSpace.height > 0 ? titleSpace.height + effPadding : 0;\n        const titleWidth = titleSpace.width + effPadding;\n\n        // Get space occupied by labels\n        const labelSpaces = this.getLabelSpaces(effPadding, align);\n\n        const {\n            totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth\n        } = computeItemSpaces(this.config(),\n        { effPadding, titleWidth, labelSpaces, titleHeight, maxWidth, maxHeight }, this.data());\n\n        this.measurement({\n            width: Math.max(totalWidth, width) + effMargin + effBorder,\n            height: Math.max(totalHeight, height) + effMargin + effBorder,\n            labelSpaces,\n            iconSpaces,\n            itemSpaces,\n            maxItemSpaces,\n            maxIconWidth,\n            titleSpaces: {\n                width: Math.min(maxWidth, this.measurement().width) - effMargin - effBorder,\n                height: titleHeight\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Returns the space occupied by the legend title\n     *\n     * @return {Object} Space occupied by title\n     * @memberof Legend\n     */\n    getTitleSpace () {\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n                                                 `${this.config().classPrefix}-legend-title`));\n        return this._labelManager.getOriSize(this.title().text ? this.title().text : '');\n    }\n\n    /**\n     * Creates the title for the legend\n     *\n     * @param {DOM} container Container made for the title\n     * @return {Selection} Title and it's node\n     * @memberof Legend\n     */\n    renderTitle (container) {\n        const { titleSpaces, border, padding, width } = this.measurement();\n        const { borderStyle, borderColor } = this.config();\n        return titleCreator(container, this.title(), {\n            height: titleSpaces.height,\n            width,\n            border,\n            padding,\n            borderStyle,\n            borderColor\n        }, this.config());\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const {\n            classPrefix,\n            borderStyle,\n            borderColor\n        } = this.config();\n        const {\n           maxWidth,\n           maxHeight,\n           width,\n           height,\n           margin,\n           border\n       } = this.measurement();\n        const legendContainer = makeElement(selectElement(this.mount()), 'div', [1], `${classPrefix}-legend-box`);\n\n        legendContainer.classed(`${classPrefix}-legend-box-${this._id}`, true);\n        legendContainer.style('float', 'left');\n        // set height and width\n        legendContainer.style('width', `${Math.min(maxWidth, width) - margin * 2}px`)\n                        .style('height', `${Math.min(maxHeight, height) - margin * 2}px`)\n                        .style('margin', `${margin}px`)\n                        .style('border', `${border}px ${borderStyle} ${borderColor}`);\n        this.legendContainer(legendContainer.node());\n\n        // create title\n        this.renderTitle(legendContainer);\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n  /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        const type = this.metaData().getData().schema[0].type;\n        if (type === 'measure') {\n            return {\n                [fieldName]: data.range\n            };\n        }\n        return [[fieldName], [data.value]];\n    }\n}\n","import {\n    LEFT,\n    RIGHT,\n    START,\n    END,\n    TOP,\n    BOTTOM,\n    HORIZONTAL,\n    VERTICAL,\n    CENTER,\n    SHAPE,\n    VALUE\n} from '../enums/constants';\n\nconst legendOrientation = {\n    [HORIZONTAL]: {\n        datasets: data => ({\n            row: [1],\n            column: data\n        }),\n        itemContainerMeasures: (measurement) => {\n            const {\n                itemSpaces,\n                width\n            } = measurement;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                },\n                column: {\n                    width: (d, i) => `${itemSpaces[i].width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, height } = measurement;\n            return {\n                iconHeight: height,\n                iconWidth: maxItemSpaces.width,\n                stepPadding: {\n                    horizontal: true,\n                    vertical: false\n                }\n            };\n        }\n    },\n    [VERTICAL]: {\n        datasets: data => ({\n            row: data,\n            column: d => [d]\n        }),\n        itemContainerMeasures: (measurement, config) => {\n            const {\n                width\n            } = measurement;\n            const { padding } = config;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${padding}px`\n                },\n                column: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, width } = measurement;\n            return {\n                iconHeight: maxItemSpaces.height,\n                iconWidth: width,\n                stepPadding: {\n                    horizontal: false,\n                    vertical: true\n                }\n            };\n        }\n    }\n};\n\nexport const positionConfig = {\n    [LEFT]: legendOrientation[VERTICAL],\n    [RIGHT]: legendOrientation[VERTICAL],\n    [TOP]: legendOrientation[HORIZONTAL],\n    [BOTTOM]: legendOrientation[HORIZONTAL]\n};\n\nexport const alignmentMap = {\n    [LEFT]: END,\n    [RIGHT]: START,\n    [TOP]: CENTER,\n    [BOTTOM]: CENTER\n};\n\n// Reverses data for step legend\nexport const stepData = data => ({\n    [LEFT]: data.reverse(),\n    [RIGHT]: data.reverse(),\n    [TOP]: data,\n    [BOTTOM]: data\n});\n\n// Changes the item layout based on the position of the text\nexport const itemStack = {\n    [LEFT]: [VALUE, SHAPE],\n    [RIGHT]: [SHAPE, VALUE],\n    [TOP]: [VALUE, SHAPE],\n    [BOTTOM]: [SHAPE, VALUE]\n};\n","import { makeElement, selectElement, applyStyle } from 'muze-utils';\nimport { ICON_MAP } from './defaults';\nimport { positionConfig, alignmentMap, itemStack } from './position-config';\nimport {\n    WIDTH,\n    HEIGHT,\n    CENTER,\n    VALUE,\n    RECT,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} legendInstance\n * @param {*} align\n *\n */\nexport const getItemContainers = (container, data, legendInstance) => {\n    const measurement = legendInstance.measurement();\n    const config = legendInstance.config();\n    const {\n        itemSpaces\n    } = measurement;\n    const {\n        classPrefix,\n        position\n    } = config;\n    const positionObj = positionConfig[position];\n    const datasets = positionObj.datasets(data);\n    const measures = positionObj.itemContainerMeasures(measurement, config);\n\n    const rows = makeElement(container, 'div', datasets.row, `${classPrefix}-legend-row`);\n    rows.style(HEIGHT, (d, i) => `${itemSpaces[i].height}px`);\n    rows.style(WIDTH, measures.row.width);\n    rows.style('padding', measures.row.padding);\n\n    const columns = makeElement(rows, 'div', datasets.column, `${classPrefix}-legend-columns`);\n    columns.style(WIDTH, measures.column.width);\n    columns.style('padding', measures.column.padding);\n\n    return columns;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} classPrefix\n * @param {*} data\n *\n * @memberof DiscreteLegend\n */\nexport const createLegendSkeleton = (context, container, classPrefix, data) => {\n    let gradWidth = 0;\n    let gradHeight = 0;\n    let maxGradHeight = 0;\n    let maxGradWidth = 0;\n    const measurement = context.measurement();\n    const {\n            margin,\n            border,\n            titleSpaces,\n            width,\n            height,\n            maxWidth,\n            maxHeight\n        } = measurement;\n\n    gradHeight = height - (titleSpaces.height + 2 * margin + 2 * border);\n    gradWidth = width - (margin * 2 + border * 2);\n\n    maxGradHeight = maxHeight - (titleSpaces.height + margin * 2 + border * 2);\n    maxGradWidth = maxWidth - (margin * 2 + border * 2);\n\n    let legendBody = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    legendBody.select(`.${classPrefix}-legend-overflow`).remove();\n        // Create a div with scroll when overflow\n    if (maxGradWidth && maxGradWidth < gradWidth) {\n        legendBody = legendBody.style(WIDTH, `${maxGradWidth}px`).style('overflow-x', 'scroll');\n    }\n        // Create a div with scroll when overflow\n    if (maxGradHeight && maxGradHeight < gradHeight) {\n        legendBody.style(HEIGHT, `${maxGradHeight}px`).style('overflow-y', 'scroll');\n    }\n\n    legendBody = makeElement(legendBody, 'div', [1], `${classPrefix}-legend-overflow`);\n\n    legendBody.style(WIDTH, `${gradWidth}px`);\n    legendBody.style(HEIGHT, `${gradHeight}px`);\n\n    const legendItem = getItemContainers(legendBody, data, context);\n    return { legendItem };\n};\n\n/**\n * Creates legend item based on alignment and text orientation\n *\n * @param {Selection} container Point where items are to be mounted\n * @return {Instance} Current instance\n * @memberof Legend\n */\nexport const createItemSkeleton = (context, container) => {\n    const {\n        classPrefix,\n        item\n    } = context.config();\n    const textOrientation = item.text.orientation;\n\n    const stack = itemStack[textOrientation];\n    const itemSkeleton = makeElement(container, 'div', (d, i) => stack.map(e => [e, d[e], d.color, d.size,\n        d.value, context.fieldName(), i]), `${classPrefix}-legend-item-info`);\n\n    const alignClass = alignmentMap[textOrientation];\n\n    itemSkeleton.classed(alignClass, true);\n    return { itemSkeleton };\n};\n\n/**\n *\n *\n * @param {*} measureType\n * @param {*} stepColorCheck\n */\nexport const applyItemStyle = (item, measureType, stepColorCheck, context) => {\n    const {\n        padding,\n        labelSpaces,\n        iconSpaces,\n        maxIconWidth\n    } = context.measurement();\n    const diff = stepColorCheck ? -padding * 2 : 0;\n\n    if (item[0] === VALUE) {\n        return `${labelSpaces[item[6]][measureType]}px`;\n    }\n    return `${measureType === 'width' && !stepColorCheck ? maxIconWidth : iconSpaces[item[6]][measureType] - diff}px`;\n};\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem, defaultIcon, width, height) {\n    const groupElement = elem;\n    // const { shape, size, update } = d;\n    const size = d[3] || Math.min(width, height) * Math.PI;\n    const shape = d[1] || defaultIcon;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            return createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        shapeElement.attr('transform', `scale(${size / 100})`);\n        return selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = ICON_MAP(shape).size(size)();\n        }\n        return makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    }\n    d[1] = 'circle';\n    return createShape(d, elem, 'circle');\n};\n\n/**\n * Returns the icon of the legend item\n *\n * @param {Object} datum Data property attached to the item\n * @param {number} width width of the item\n * @param {number} height height of the item\n * @return {Object|string} returns the path string or the string name of the icon\n * @memberof Legend\n */\nexport const getLegendIcon = (datum, width, height, defaultIcon) => {\n    const icon = ICON_MAP(datum[1]);\n\n    if (icon) {\n        return icon.size(datum[3] || Math.min(width, height) * Math.PI);\n    }\n    return ICON_MAP(datum[3] ? 'circle' : defaultIcon).size(datum[3] || Math.min(width, height) * Math.PI);\n};\n\n/**\n *\n *\n */\nexport const renderIcon = (icon, container, datum, context) => {\n    const {\n        classPrefix,\n        iconHeight,\n        iconWidth,\n        maxIconWidth,\n        padding,\n        color\n    } = context;\n    const svg = makeElement(container, 'svg', f => [f], `${classPrefix}-legend-icon-svg`)\n    .attr(WIDTH, maxIconWidth)\n    .attr(HEIGHT, iconHeight)\n    .style(WIDTH, `${maxIconWidth}px`)\n    .style(HEIGHT, `${iconHeight}px`);\n\n    if (icon !== RECT) {\n        const group = makeElement(svg, 'g', [datum[1]], `${classPrefix}-legend-icon`);\n        createShape(datum, group, datum[3] ? 'circle' : 'square', iconWidth, iconHeight)\n                        .attr('transform', `translate(${maxIconWidth / 2 - padding} ${iconHeight / 2})`)\n                        .attr('fill', datum[2] || color);\n    } else {\n        makeElement(svg, RECT, [datum[1]], `${classPrefix}-legend-icon`)\n                        .attr('x', 0)\n                        .attr('y', 0)\n                        .attr(WIDTH, maxIconWidth)\n                        .attr(HEIGHT, iconHeight)\n                        .attr('fill', datum[2] || color);\n    }\n};\n\n/**\n * Renders the items in the legend i.e, icon and text\n *\n * @param {DOM} container Point where item is to be mounted\n * @memberof Legend\n */\nexport const renderDiscreteItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n           item,\n           classPrefix\n    } = context.config();\n    const {\n        maxIconWidth,\n        padding\n    } = context.measurement();\n    const {\n            width: iconWidth,\n            height: iconHeight,\n            color,\n            className\n        } = item.icon;\n\n    const textOrientation = item.text.orientation;\n    const formatter = item.text.formatter;\n\n    labelManager.useEllipsesOnOverflow(true);\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, false, context),\n        height: d => applyItemStyle(d, HEIGHT, false, context),\n        'text-align': CENTER,\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1]))\n                            .style(`padding-${textOrientation === RIGHT ? LEFT : RIGHT}`, '0px');\n        } else {\n            // const icon = getLegendIcon(d, iconWidth, iconHeight, type);\n            selectElement(this).classed(`${classPrefix}-${className}`, true);\n            selectElement(this).classed(`${classPrefix}-${className}-${i}`, true);\n            renderIcon('circle', selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                // iconWidth: 2 * Math.sqrt(d[3] / Math.PI) || iconWidth,\n                iconHeight,\n                maxIconWidth,\n                padding,\n                color\n            });\n        }\n    });\n};\n\n/**\n* Renders the items in the legend i.e, icon and text\n*\n* @param {DOM} container Point where item is to be mounted\n* @memberof Legend\n*/\nexport const renderStepItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n      item,\n      position,\n      classPrefix\n   } = context.config();\n    const {\n      maxItemSpaces,\n      maxIconWidth,\n      padding\n   } = context.measurement();\n    const {\n       width,\n       height,\n       color\n   } = item.icon;\n    const {\n        formatter\n   } = item.text;\n\n    labelManager.useEllipsesOnOverflow(true);\n    const { iconHeight, iconWidth, stepPadding } = positionConfig[position].getStepSpacesInfo({\n        maxItemSpaces, height, width\n    });\n\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, stepPadding.horizontal, context),\n        height: d => applyItemStyle(d, HEIGHT, stepPadding.vertical, context),\n        'text-align': 'center',\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    container.each(function (d) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1]));\n        } else {\n            renderIcon(RECT, selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                iconHeight,\n                maxIconWidth,\n                color\n            });\n        }\n    });\n};\n","import SimpleLegend from './simple-legend';\nimport { DISCRETE, LEFT, SIZE } from '../enums/constants';\nimport { getScaleInfo } from './legend-helper';\nimport { createLegendSkeleton, createItemSkeleton, renderDiscreteItem } from './renderer';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class DiscreteLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new DiscreteLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof DiscreteLegend\n     */\n    static type () {\n        return DISCRETE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof DiscreteLegend\n     */\n    dataFromScale (scale) {\n        const { scaleType, domain, scaleFn } = getScaleInfo(scale);\n        let domainForLegend = [...new Set(domain)];\n        const type = this.metaData().getData().schema[0].type;\n\n        domainForLegend = domainForLegend.map((ele, i) => {\n            let value = 0;\n            let range = 0;\n            if (type === 'measure') {\n                value = (+domainForLegend[i]).toFixed(0);\n                const nextVal = domainForLegend[i + 1] ? +domainForLegend[i + 1] : +value;\n                range = [value, nextVal.toFixed(0)];\n            } else {\n                value = domainForLegend[i];\n                range = [domainForLegend[i]];\n            }\n            return {\n                [scaleType]: scale[scaleFn](ele),\n                value,\n                id: i,\n                range\n            };\n        }).filter(d => d.value !== null);\n\n        domainForLegend = scaleType === SIZE ? domainForLegend.sort((a, b) => a[scaleType] - b[scaleType])\n            : domainForLegend;\n        return domainForLegend;\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const data = this.data();\n        const { classPrefix } = this.config();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n        renderDiscreteItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n}\n","import { makeElement, applyStyle } from 'muze-utils';\nimport { ContinousAxis } from '@chartshq/muze-axis';\nimport { BOTTOM, RIGHT } from '../enums/constants';\nimport { ALIGN } from './defaults';\nimport '../styles.scss';\n\n/**\n *\n *\n * @param {*} data\n *\n */\nexport const getGradientDomain = (data) => {\n    if (typeof data[0].value === 'number') {\n        return data.reduce((accumulator, currentValue) =>\n            [Math.min(currentValue.value, accumulator[0]), Math.max(currentValue.value, accumulator[1])],\n                [Number.MAX_VALUE, Number.MIN_VALUE]);\n    }\n    return data.map(e => e.value);\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} domain\n *\n */\nexport const makeLinearGradient = (container, data, domain) => {\n    const defs = makeElement(container, 'defs', [1]);\n    const linearGradient = makeElement(defs, 'linearGradient', [1])\n                .attr('id', 'linear-gradient')\n                .attr('x1', '0%')\n                .attr('y2', '0%');\n    makeElement(linearGradient, 'stop', data, 'stop-gradient')\n                    .attr('offset', d => `${(d.value - domain[0]) * 100 / (domain[1] - domain[0])}%`)\n                    .attr('stop-color', d => d.color);\n    return linearGradient;\n};\n\n/**\n * Creates an axis cell with a linear axis for computing space and\n * creating gradient legend\n *\n * @return {AxisCell} Instance of Axis Cell for the gradient axis\n * @memberof Legend\n */\nexport const createAxis = (context) => {\n    const data = context.data();\n    const { align } = context.config();\n    const AxisCell = context._cells.AxisCell;\n    const newAxis = new ContinousAxis({\n        id: `legend-${context._id}`,\n        orientation: align === ALIGN.VERTICAL ? RIGHT : BOTTOM,\n        style: context._computedStyle,\n        nice: false,\n        showAxisName: false,\n        tickValues: data.map(d => d.value),\n        fixedBaseline: false,\n        labels: {\n            rotation: 0\n        }\n    }, { labelManager: context._labelManager });\n\n    newAxis.domain(getGradientDomain(data));\n    newAxis.range([1, 1]);\n    return new AxisCell().source(newAxis).config({\n        margin: { left: 0, bottom: 0, top: 0, right: 0 }\n    });\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} classPrefix\n *\n * @memberof GradientLegend\n */\nconst createLegendSkeleton = (container, classPrefix, data) => {\n    const domain = getGradientDomain(data);\n    const legendContainer = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    const legendGradSvg = makeElement(legendContainer, 'svg', [1], `${classPrefix}-gradient`);\n    const legendGradCont = makeElement(legendGradSvg, 'g', [1], `${classPrefix}-gradient-group`);\n    const linearGradient = makeLinearGradient(legendGradSvg, data, domain);\n    const legendRect = makeElement(legendGradCont, 'rect', [1], `${classPrefix}-gradient-rect`);\n\n    return {\n        legendContainer,\n        legendGradCont,\n        legendGradSvg,\n        linearGradient,\n        legendRect\n    };\n};\n\n/**\n * Renders the axis for the gradient\n *\n * @param {Selection} container Point where axis is to be mounted\n * @param {number} height Height for axis\n * @param {number} width Width for axis\n * @memberof Legend\n */\nexport const renderAxis = (context, container, height, width) => {\n    const axis = context.axis();\n\n    axis.setAvailableSpace(width, height);\n    axis.render(container.node());\n    axis.source().render();\n};\n\n/**\n * Renders gradient legends\n *\n * @param {Selection} container Point where the legend is to be appended\n * @memberof GradientLegend\n */\nexport const renderGradient = (context, container) => {\n    let gradHeight = 0;\n    let gradWidth = 0;\n    const {\n        align,\n        classPrefix,\n        item\n    } = context.config();\n    const data = context.data();\n    // Create the skeleton for the legend\n    const {\n        legendContainer,\n        legendGradSvg,\n        legendGradCont,\n        linearGradient,\n        legendRect\n    } = createLegendSkeleton(container, classPrefix, data);\n    const labelDim = context.axis().source().getAxisDimensions().tickDimensions;\n    const {\n        padding,\n        margin,\n        border,\n        titleSpaces,\n        maxHeight,\n        maxWidth,\n        height,\n        width\n    } = context.measurement();\n    const gradientDimensions = {};\n\n    gradHeight = Math.floor(height - (titleSpaces.height + 2 * margin + 2 * border));\n    gradWidth = Math.floor(width - (margin * 2 + border * 2));\n\n    if (align === ALIGN.HORIZONTAL) {\n        gradientDimensions.height = item.icon.height;\n        gradientDimensions.width = gradWidth - 2 * padding - labelDim.width / 2;\n        linearGradient.attr('x2', '100%').attr('y1', '0%');\n        legendGradCont.attr('transform', `translate( ${labelDim.width / 2} 0)`);\n        renderAxis(context, legendContainer, gradHeight - item.icon.height - padding, gradWidth - 2 * padding - 1);\n        legendContainer.classed(`${classPrefix}-overflow-x`, width > maxWidth);\n\n        applyStyle(legendContainer, {\n            height: `${height}px`,\n            width: `${Math.min(width, maxWidth)}px`,\n            padding: `${padding}px`\n        });\n\n        legendRect.attr('height', gradientDimensions.height);\n        legendRect.attr('width', gradientDimensions.width - labelDim.width / 2);\n    } else {\n        gradientDimensions.height = gradHeight - 2 * padding - labelDim.height / 2;\n        gradientDimensions.width = item.icon.width;\n        linearGradient.attr('x2', '0%').attr('y1', '100%');\n        legendGradCont.attr('transform', `translate(0 ${labelDim.height / 2})`);\n        renderAxis(context, legendContainer, gradHeight - 2 * padding - 1, gradWidth - item.icon.width - padding * 2);\n        legendContainer.classed(`${classPrefix}-overflow-y`, height > maxHeight);\n        applyStyle(legendContainer, {\n            height: `${Math.min(height, maxHeight)}px`,\n            width: `${width}px`,\n            padding: `${padding}px`\n        });\n        legendRect.attr('height', gradientDimensions.height - labelDim.height / 2);\n        legendRect.attr('width', gradientDimensions.width);\n    }\n\n    // Apply Styles to the legend plot area\n    applyStyle(legendGradSvg, {\n        height: `${gradientDimensions.height}px`,\n        width: `${gradientDimensions.width}px`\n    });\n\n        // Apply styles to the legend rect\n    applyStyle(legendRect, {\n        fill: 'url(#linear-gradient)'\n    });\n    legendGradSvg.attr('height', gradientDimensions.height);\n    legendGradSvg.attr('width', gradientDimensions.width);\n\n    context.measurement({\n        gradientDimensions\n    });\n    context._legendGradientSvg = legendGradSvg;\n    return context;\n};\n","import SimpleLegend from './simple-legend';\nimport { getScaleInfo, getInterpolatedData } from './legend-helper';\nimport { GRADIENT, LEFT, SIZE } from '../enums/constants';\nimport { renderGradient, createAxis } from './gradient-helper';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class GradientLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new GradientLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof GradientLegend\n     */\n    static type () {\n        return GRADIENT;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axis\n     *\n     * @memberof GradientLegend\n     */\n    axis (...axis) {\n        if (axis.length) {\n            this._axis = axis[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof GradientLegend\n     */\n    dataFromScale (scale) {\n        let domainForLegend = [];\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainForLegend[0] = domain[0];\n            }\n            domainForLegend = [...domainForLegend, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainForLegend.push(domain[1]);\n            }\n        } else {\n            domainForLegend = getInterpolatedData(domain, steps - 1);\n        }\n        domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n        return domainForLegend.map((ele, i) => {\n            const value = domainForLegend[i];\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor()\n                    : scale[scaleFn](Math.floor(ele)),\n                value: +value.toFixed(2),\n                id: i\n            };\n        }).filter(d => d.value !== null);\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        const axis = createAxis(this);\n        const axisSpace = axis.getLogicalSpace();\n        const space = { width: axisSpace.width - effPadding, height: axisSpace.height - effPadding };\n        const axisDomainLength = axis.source().domain().length;\n        const labelSpaces = new Array(axisDomainLength).fill(space);\n\n        this.axis(axis);\n        return labelSpaces;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof GradientLegend\n     */\n    getDrawingContext () {\n        return {\n            svgContainer: this._legendGradientSvg\n        };\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        renderGradient(this, legendContainer);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof SimpleLegend\n     */\n    getCriteriaFromData (data) {\n        return [[this.fieldName()], [data.value]];\n    }\n}\n","import SimpleLegend from './simple-legend';\nimport {\n    getScaleInfo,\n    getInterpolatedData,\n    getDomainBounds\n} from './legend-helper';\nimport {\n    createLegendSkeleton,\n    createItemSkeleton,\n    renderStepItem\n} from './renderer';\nimport { STEP, RECT, LEFT, SIZE, UPPER, LOWER } from '../enums/constants';\nimport { stepData } from './position-config';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class StepLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new StepLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof StepLegend\n     */\n    static type () {\n        return STEP;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof StepLegend\n     */\n    dataFromScale (scale) {\n        let domainLeg = [];\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        const { formatter } = this.config();\n        const domainBounds = {\n            lower: null, upper: null\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainBounds.lower = [`${formatter.bounds.lower} ${steps[0]}`];\n            }\n            domainLeg = [...domainLeg, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainBounds.upper = [`${formatter.bounds.upper} ${steps[steps.length - 1]}`];\n            }\n        } else {\n            domainLeg = getInterpolatedData(domain, steps);\n        }\n\n        domainLeg = [...new Set(domainLeg)].sort((a, b) => a - b);\n        domainLeg = domainLeg.map((ele, i) => {\n            let value = null;\n            if (i < domainLeg.length - 1) {\n                value = `${(ele.toFixed(1))} - ${(+domainLeg[i + 1].toFixed(1))}`;\n            }\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n                value,\n                id: i + 1,\n                range: [ele, domainLeg[i + 1]]\n            };\n        }).filter(d => d.value !== null);\n\n        if (domainBounds.lower) {\n            const lowerBounds = getDomainBounds(LOWER, { scale, scaleFn, scaleType },\n                { domain, steps, domainBounds });\n            domainLeg = [lowerBounds, ...domainLeg];\n        }\n        if (domainBounds.upper) {\n            const upperBounds = getDomainBounds(UPPER, { scale, scaleFn, scaleType },\n            { domain, steps, domainBounds, domainLeg });\n            domainLeg = [...domainLeg, upperBounds];\n        }\n        return domainLeg;\n    }\n\n     /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding, align) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        return super.getLabelSpaces(effPadding, align);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return RECT;\n    }\n\n     /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const { classPrefix, position } = this.config();\n        const data = stepData(this.data())[position];\n\n        const legendContainer = super.render(this.mount());\n\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n\n        renderStepItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        return {\n            [fieldName]: data.range\n        };\n    }\n}\n","import { GradientLegend, DiscreteLegend, StepLegend } from '@chartshq/muze-legend';\n\n/**\n * Contants to be used as attr\n */\nexport const ROWS = 'rows';\nexport const COLUMNS = 'columns';\nexport const DATA = 'data';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\nexport const DETAIL = 'detail';\nexport const LAYERS = 'layers';\nexport const TRANSFORM = 'transform';\nexport const INITIALIZED = 'isInitialized';\nexport const SOURCE = 'source';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const PADDING = 'padding';\nexport const BORDER = 'border';\nexport const MARGIN = 'margin';\nexport const CONFIG = 'config';\nexport const MOUNT = 'mount';\nexport const CANVAS_UPDATED = 'canvasUpdated';\nexport const CLASSPREFIX = 'classPrefix';\nexport const POLICIES = '_policies';\nexport const LEGEND = 'legend';\nexport const TITLE = 'title';\nexport const SUB_TITLE = 'subtitle';\nexport const RESOLVE = 'resolve';\nexport const DISCRETE = 'discrete';\nexport const STEP_COLOR = 'step-color';\nexport const GRADIENT = 'gradient';\nexport const LINEAR = 'linear';\nexport const ORDINAL = 'ordinal';\nexport const MUZE_PREFIX = 'muze';\n\nexport const TITLE_TEMPLATE_NOT_ALLOWED_TAGS = [\n    'script',\n    'style'\n];\n\nexport const LEGEND_TYPE_MAP = {\n    [`${ORDINAL}-${true}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${COLOR}`]: StepLegend,\n    [`${LINEAR}-${false}-${COLOR}`]: GradientLegend\n};\n\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const GROUP = 'group';\nexport const LAYOUT = 'layout';\nexport const RETINAL = 'retinal';\nexport const DIMENSION = 'dimension';\nexport const MEASURE = 'measure';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\n","import { ComposedVars, SimpleVariable } from '@chartshq/visual-group';\nimport { TITLE_TEMPLATE_NOT_ALLOWED_TAGS } from './constants';\n\n/**\n * This method creates a new composed variable instance from multiple variables. This is required when we have multiple\n * variables on a single axis and the union of domain of all the variables needs to be set on the axis.\n *\n * To create a new composed variable from multiple fields,\n * ```\n *  const sharedVar = share('open', 'high', 'low', 'close');\n *  canvas.rows([sharedVar])\n *      .columns(['date']);\n * ```\n *\n * @module Operators\n * @public\n * @function share\n * @param {Array} vars Variable names.\n *\n * @return {ComposedVars} Instance of composed variable\n */\nexport const share = (...vars) => new ComposedVars(...vars.map(variable => new SimpleVariable(variable)));\n\n/**\n *\n *\n * @param {*} node\n *\n */\nfunction treeShakeNode (node) {\n    if (node.nodeType !== Node.ELEMENT_NODE) { return; }\n\n    if (TITLE_TEMPLATE_NOT_ALLOWED_TAGS.indexOf(node.tagName.toLowerCase()) !== -1) {\n        node.parentNode.removeChild(node);\n    } else {\n        for (const childNode of node.childNodes) {\n            treeShakeNode(childNode);\n        }\n    }\n}\n\n/**\n * A string template tagged function which sanitizes input html formatted string according to the allowed html tags.\n * This is used to render html in canvas components like title and tooltip.\n *\n * To render html in canvas components,\n * ```\n *     canvas.title(html`<span style=font-size:20px;>TITLE</span>`);\n * ```\n *\n * @public\n * @module Operators\n * @function html\n * @param {Array.<string>} strings - The string parts of the template.\n * @param {Array} exps - The list of evaluated expression values.\n *\n * @return {Function} Returns a function which returns the sanitized html string.\n */\nexport function html (strings, ...exps) {\n    let htmlCode = '';\n    const expLn = exps.length;\n    let i = 0;\n\n    for (; i < expLn; ++i) {\n        htmlCode += strings[i] + exps[i];\n    }\n    htmlCode += strings[i];\n\n    const frag = document.createDocumentFragment();\n    const wrapper = document.createElement('div');\n\n    frag.appendChild(wrapper);\n    wrapper.innerHTML = htmlCode;\n\n    treeShakeNode(wrapper);\n    const { innerHTML } = wrapper;\n\n    return () => innerHTML;\n}\n","import { mergeRecursive, CommonProps } from 'muze-utils';\n\nconst defaultPolicy = (registrableComponents) => {\n    const aliases = registrableComponents.map(comp => comp.alias());\n    return {\n        behaviours: {\n            '*': (propagationPayload) => {\n                const propagationCanvas = propagationPayload.sourceCanvas;\n                return propagationCanvas ? aliases.indexOf(propagationCanvas) !== -1 : true;\n            }\n        }\n    };\n};\n\nconst listenerFn = (canvas, fn) => () => {\n    const valueMatrix = canvas.composition().visualGroup.matrixInstance().value;\n    valueMatrix.each(cell => fn(cell.valueOf().firebolt()));\n};\n\nconst canvasIterator = (canvases, fn) => {\n    canvases.forEach((canvas) => {\n        const matrix = canvas.composition().visualGroup.matrixInstance().value;\n        matrix.each(cell => fn(cell.valueOf().firebolt()));\n        // Also register actions on canvas update\n        const throwback = canvas._throwback;\n\n        throwback.registerImmediateListener([CommonProps.MATRIX_CREATED],\n            listenerFn(canvas, fn));\n    });\n};\n\n/**\n * This class is initiated only once in lifecycle and is reponsible for regisration of physical and behavioural\n * actions and side effects and the mapping between them.\n *\n * To get the instance of action model\n * ```\n *  const ActionModel = muze.ActionModel;\n * ```\n *\n * @public\n * @module ActionModel\n */\nclass ActionModel {\n    constructor () {\n        this._registrableComponents = [];\n    }\n\n    /**\n     * Takes an array of canvases on which the physical and behavioural actions will get registered.\n     *\n     * @public\n     * @param  {Canvas} components Array of canvases\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    for (...components) {\n        this._registrableComponents = components;\n        return this;\n    }\n\n    /**\n     * Registers physical actions on the canvases. It takes an object with key as the name of action and value having\n     * the definition of the action.\n     *\n     * To register a {@link PhysicalAction},\n     * ```\n     *  const ActionModel = muze.ActionModel;\n     *  ActionModel\n     *       // Physical actions will be registered on these canvases.\n     *      .for(canvas)\n     *      .registerPhysicalActions({\n     *          // Key is the name of physical action.\n     *          ctrlClick: (firebolt) => (targetEl, behaviours) => {\n     *              targetEl.on('click', function (data) {\n     *                  const event = utils.getEvent();\n     *                  const pos = utils.getClientPoint(event, this);\n     *                  // Get the data point nearest to the mouse position.\n     *                  const nearestPoint = firebolt.context.getNearestPoint(pos, {\n     *                      data\n     *                  });\n     *                  // Prepare the payload\n     *                  const payload = {\n     *                      criteria: nearestPoint.id\n     *                  };\n     *                  behaviours.forEach((behaviour) => firebolt.dispatchBehaviour(behaviour, payload));\n     *              });\n     *          }\n     *      });\n     * ```\n     * @public\n     *\n     * @param {Object} action Names of physical actions and their definitions.\n     *\n     * @return {ActionModel} Instance of the action model.\n     */\n    registerPhysicalActions (action) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalActions(action);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers behavioural actions on the canvases. It takes definitions of the behavioural actions and registers\n     * them on the canvases. Every behavioural action must inherit the {@link GenericBehaviour} class.\n     *\n     * To register a behavioural action\n     * ```\n     *  // Define a new behavioural action\n     *  class SingleSelectBehaviour extends GenericBehaviour {\n     *      static formalName () {\n     *          return 'singleSelect';\n     *      }\n     *\n     *      setSelectionSet (addSet, selectionSet) {\n     *          if (addSet === null) {\n     *              selectionSet.reset();\n     *          } else if (addSet.length) {\n     *              const existingAddSet = selectionSet.getExistingEntrySet(addSet);\n     *              if (existingAddSet.length){\n     *                  selectionSet.reset();\n     *              } else {\n     *               selectionSet.add(addSet);\n     *              }\n     *          } else {\n     *              selectionSet.reset();\n     *          }\n     *      }\n     * }\n     * muze.ActionModel.registerBehaviouralActions(SingleSelectBehaviour);\n     * ```\n     *\n     * @public\n     *\n     * @param {GenericBehaviour} actions Definition of behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerBehaviouralActions (...actions) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerBehaviouralActions(...actions);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of physical and behavioural actions. This mapping is used to establish which behavioural\n     * actions should be dispatched on any triggering of physical actions.\n     *\n     * To map physical actions with behavioural actions,\n     * ```\n     *  muze.ActionModel.registerPhysicalBehaviouralMap({\n     *      ctrlClick: {\n     *          behaviours: ['select'] // This array must be the formal names of the behavioural actions.\n     *      }\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Contains the physical and behavioural action map.\n     * ```\n     *   {\n     *      // Name of the physical action\n     *      click: {\n     *          // Target element selector. This is an optional field. If not passed, then by default takes the\n     *          // container element of visual unit.\n     *          target: '.muze-layers-area path',\n     *          // Behaviours which should be dispatched on triggering of the mapped physical action.\n     *          behaviours: ['select']\n     *      }\n     *   }\n     * ```\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPhysicalBehaviouralMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalBehaviouralMap(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers what behaviour to propagate on dispatch of a certain behavioural action. By default, when any\n     * behavioural action is dispatched, then the same behavioural action gets propagated to all the other canvases.\n     * This can be changed using this api.\n     *\n     * To register what behaviour should be propagated on dispatch of any behavioural action,\n     * ```\n     *  ActionModel.for(canvas1, canvas2).registerPropagationBehaviourMap({\n     *      select: 'filter',\n     *      brush: 'filter'\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Propagation behaviour map.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPropagationBehaviourMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPropagationBehaviourMap(map);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of side effects and behavioural actions. It takes an object which contains key as the\n     * name of behavioural action and the side effects which will be linked to it.\n     *\n     * To map side effects to select behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: ['infoBox'] // This array must be the formal names of the side effects\n     *  });\n     * ```\n     *\n     * To map side effects to select behaviour, but disable all the default side effects attached with this behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: {\n     *          effects: ['infoBox'],\n     *          preventDefaultActions: true\n     *      }\n     *  });\n     * @public\n     * @param {Object} map Mapping of behavioural actions and side effects.\n     * ```\n     *     {\n     *          select: ['infoBox']\n     *     }\n     * ```\n     * @return {ActionModel} Instance of action model.\n     */\n    mapSideEffects (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.mapSideEffects(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers the side effects on the registered canvases. It takes definitions of side effects and registers them\n     * on the canvases. Every side effect must inherit the base class {@link GenericSideEffect} or\n     * {@link SpawnableSideEffect} or {@link SurrogateSideEffect} class.\n     *\n     * ```\n     * // Define a custom side effect\n     *  class InfoBox extends SpawnableSideEffect {\n     *      static formalName () {\n     *          return 'infoBox';\n     *      }\n     *\n     *      apply (selectionSet) {\n     *      }\n     *  }\n     *  muze.ActionModel.registerSideEffects(InfoBox);\n     * ```\n     * @public\n     * @param  {GenericSideEffect} sideEffects Definition of side effects.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerSideEffects (...sideEffects) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerSideEffects(sideEffects);\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between behavioural actions and physical actions. It takes an array of behavioural action\n     * and it's physical action.\n     *\n     * To dissociate behavioural actions from physical actions\n     * ```\n     *  muze.ActionModel.dissociateBehaviour(['select', 'click'], ['highlight', 'hover']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of behavioural action and physical action.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateBehaviour (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateBehaviour(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between side effects and behavioural actions. It takes an array of formal names of the side\n     * effects and it's linked behavioural action.\n     *\n     * To dissociate side effects from behavioural actions\n     * ```\n     *  muze.ActionModel.dissociateSideEffect(['crossline', 'highlight'], ['selectionBox', 'brush']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of side effects and behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateSideEffect (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateSideEffect(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * By default cross interactivity is disabled between canvases. This enables cross interaction between the canvases\n     * so that any action happening in one canvas gets dispatched on other canvases as well. An optional policy can also\n     * be passed in this method. The policy can be used to control on which canvases the behavioural actions and\n     * side effects gets dispatched.\n     *\n     * To just enable cross interactivity between two canvases,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity();\n     * ```\n     *\n     * To enable cross interactivity but enable any behavioural action only when it is triggered from canvas1.\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          behaviours: {\n     *              // Here * stands for any behavioural action name. We can also give any name of behavioural action\n     *              // in place of this.\n     *              '*': (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     *\n     * To enable cross interactivity but enable tooltip effect if the action is propagated from canvas1,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          sideEffects: {\n     *              tooltip: (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} policy Policy definition.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    enableCrossInteractivity (policy = {}) {\n        const registrableComponents = this._registrableComponents;\n        const mergedPolicy = mergeRecursive(mergeRecursive({}, defaultPolicy(registrableComponents)), policy);\n\n        registrableComponents.forEach((canvas) => {\n            canvas.firebolt().crossInteractionPolicy(mergedPolicy);\n        });\n\n        return this;\n    }\n}\n\nexport const actionModel = (() => new ActionModel())();\n","export const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    interaction: {\n        sideEffect: 'individual'\n    },\n    legend: {\n        position: 'right',\n        color: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        shape: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        size: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        }\n    },\n    showHeaders: false,\n    minWidth: 100,\n    minHeight: 100,\n    facet: {\n        rows: {\n            minCharacters: 3\n        },\n        columns: {\n            maxLines: 2,\n            verticalAlign: 'middle',\n            minCharacters: 1\n        }\n    },\n    border: {\n        style: 'solid',\n        color: '#d6d6d6',\n        width: 2,\n        collapse: true,\n        spacing: 0\n    },\n    autoGroupBy: {\n        disabled: false\n    }\n};\n","/**\n * This is the global options semantics based on which setters getters are created and reactivity is initiated.\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n * @module GlobalOptions\n */\n\nimport { intSanitizer, mergeRecursive, DataModel } from 'muze-utils';\nimport { DEFAULT_CONFIG } from './defaults';\n\nexport default {\n    data: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel\n        }\n    },\n    width: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    height: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitWidth: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitHeight: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    config: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config, oldConfig) => {\n                const oldConf = mergeRecursive({}, oldConfig);\n                const defConfig = mergeRecursive(oldConf, DEFAULT_CONFIG);\n                const newConf = mergeRecursive(defConfig, config);\n                return newConf;\n            }\n\n        }\n    }\n};\n","/**\n * This file exports constants that will be used to\n * create the state store of the table layout.\n */\n/**\n * The index of top, bottom and center in the matrix\n */\nexport const VIEW_INDEX = {\n    top: 0,\n    center: 1,\n    bottom: 2\n};\n\nexport const ROW_MATRIX_INDEX = {\n    0: 'top',\n    1: 'center',\n    2: 'bottom'\n};\n\nexport const COLUMN_MATRIX_INDEX = {\n    0: 'left',\n    1: 'middle',\n    2: 'right'\n};\n\n/**\n * The width of the grid suppied by the user.\n */\nexport const GRID_WIDTH = 'width';\n\n/**\n * The height of the grid supplied by the user.\n */\nexport const GRID_HEIGHT = 'height';\n\n/**\n  * The border for the grid\n  */\nexport const BORDER = 'border';\n\n /**\n  *  The index of the first visible row in view matrix.\n  */\nexport const ROW_POINTER = 'rowPointer';\n\n/**\n * The index of the first visible column in the view matrix.\n */\nexport const COLUMN_POINTER = 'columnPointer';\n\n/**\n * Flag to specify whether row sizes should be equal.\n */\nexport const ROW_SIZE_IS_EQUAL = 'isRowSizeEqual';\n\n/**\n * Flag to specify whether column sizes are equal.\n */\nexport const COLUMN_SIZE_IS_EQUAL = 'isColumnSizeEqual';\n\n/**\n * Field to store an array an of the widths of visible columns.\n * @computed\n */\nexport const COLUMN_WIDTHS = 'visibleColumnWidths';\n\n/**\n * Field to store an array of heights of visible rows.\n * @computed\n */\nexport const ROW_HEIGHTS = 'visibleRowHeights';\n\n/**\n * Field to store the width of the left matrix.\n * @computed\n */\nexport const LEFT_MATRIX_WIDTH = 'leftMatrixWidth';\n\n/**\n * Field to store the width of the right matrix.\n * @computed\n */\nexport const RIGHT_MATRIX_WIDTH = 'rightMatrixWidth';\n\n/**\n * Field to store the height of the top matrix.\n * @computed\n */\nexport const TOP_MATRIX_HEIGHT = 'topMatrixHeight';\n\n/**\n * Field to store the height of the bottom matrix.\n * @computed\n */\nexport const BOTTOM_MATRIX_HEIGHT = 'bottomMatrixHeight';\n\n/**\n * The dom element to render the layout inside.\n */\nexport const MOUNT_POINT = 'mount';\n\n/**\n * The id attribute of the left table element.\n */\nexport const LEFT_TABLE_ID = 'grid-left';\n\n/**\n * The id attribute of the right table element.\n */\nexport const RIGHT_TABLE_ID = 'grid-right';\n\n/**\n * The id attribute of the top table.\n */\nexport const TOP_TABLE_ID = 'grid-top';\n\n/**\n * The id attribute of the bottom table.\n */\nexport const BOTTOM_TABLE_ID = 'grid-bottom';\n\n/**\n * The id attribute of the center table.\n */\nexport const CENTER_TABLE_ID = 'grid-center';\n\n/**\n * The id attribute of the top div.\n */\nexport const TOP_DIV_ID = 'muze-div-top';\n\n/**\n * The id attribute of the bottom div.\n */\nexport const BOTTOM_DIV_ID = 'muze-div-bottom';\n\n/**\n * The id attribute of the center div.\n */\nexport const CENTER_DIV_ID = 'muze-div-center';\n\n/**\n * Field that indicates if the row configuration has changed\n */\nexport const HAVE_ROWS_CHANGED = 'haveRowsChanged';\n\n/**\n * Field that indicates if the column configuration has changed\n */\nexport const HAVE_COLUMNS_CHANGED = 'haveColumnsChanged';\n\n/**\n * Field that indicates if the values configuration for the center matrix has changed\n */\nexport const HAVE_VALUES_CHANGED = 'haveValuesChanged';\n\n/**\n * Field that indicates the width of row matrix\n */\nexport const ROW_MATRIX_WIDTH = 'rowMatrixWidth';\n\n/**\n * Field that indicates the height of row matrix\n */\nexport const COLUMN_MATRIX_HEIGHT = 'columnMatrixHeight';\n\n/**\n * Field that indicates the unit width of layout\n */\nexport const UNIT_WIDTH = 'unitWidth';\n\n/**\n * Field that indicates the unit height of layout\n */\nexport const UNIT_HEIGHT = 'unitHeight';\n\n/**\n * Field that indicates the style object\n */\nexport const STYLE = 'style';\n\n/**\n * Field that indicates the color configuration\n */\nexport const COLOR = 'color';\n\n/**\n * Field that indicates width\n */\nexport const WIDTH = 'width';\n\n/**\n * Field that indicates collpase property for border\n */\nexport const COLLAPSE = 'collapse';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SPACING = 'spacing';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const DISTRIBUTION = 'distribution';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const GUTTERSPACE = 'gutterSpace';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const BREAK_PAGE = 'breakPage';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_ROW_BORDERS = 'showRowBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_COL_BORDERS = 'showColBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_VALUE_BORDERS = 'showValueBorders';\n\nexport const HEIGHT = 'height';\nexport const COLUMN = 'column';\nexport const ROW = 'row';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const CENTER = 'center';\nexport const CLICK = 'click';\nexport const ROW_LEFT = 'rowLeft';\nexport const ROW_RIGHT = 'rowRight';\nexport const COLUMN_BOTTOM = 'colBottom';\nexport const COLUMN_TOP = 'colTop';\nexport const AUTO = 'auto';\nexport const ROW_SPAN = 'rowSpan';\nexport const COL_SPAN = 'colSpan';\nexport const ROW_ROOT = 'rowRoot';\nexport const COLUMN_ROOT = 'columnRoot';\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary';\n","import { sanitizeIP, mergeRecursive } from 'muze-utils';\nimport { TOP, CENTER, BOTTOM } from '../enums/constants';\n\n/*\n * This is the abstract implementation of the root layout. This takes care of common work which all the layouts\n * has to handle. The common work includes sanitizaion of inputs, update, rerender, dispose etc. This class can't be\n * used directly (as ofcourse this is an abstract implementaiton), the class which is implementing it has to implement\n * the necessary methods and gives its on visual.\n */\n\n/**\n * This class is used to create a generic layout. It can be extended to create layouts\n * of different types\n * @class GenericLayout\n */\nexport default class GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config configuration to be given for the layout\n     * @param {Object} dependencies external dependencies.\n     *\n     * @memberof GenericLayout\n     *\n     */\n    constructor (mountPoint, measurement, config, dependencies) {\n        this._config = {};\n        this._measurement = {};\n        this._matrices = [];\n        // External dependencies to be included for the layout. This includes the ext global dependencies like\n        // smartlabel which has one single implementation of throughout the page or per isntance\n        this._dependencies = dependencies;\n\n        this.measurement(measurement);\n        this.mountPoint(mountPoint);\n        this.config(config);\n    }\n\n    /**\n     * Returns an object which is used to recreate the layout.\n     * @return {Object} the serialized components\n     */\n    serialize () {\n        return {\n            measurement: this.measurement(),\n            config: this.config(),\n            matrices: this.matrices()\n        };\n    }\n\n     /**\n     * Sets/Gets the config for the layout\n     * @param {Object} config configuration for the layout\n     * @return {Layout|Object} Gets the Config/ Returns this instance when set\n     */\n    config (config) {\n        if (config) {\n            this._config = mergeRecursive(this._config || {}, config);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Sets/Gets the measurement for the layout\n     * @param {Object} measurement measurement for the layout\n     * @return {Layout|Object} Gets the measurement/ Returns this instance when set\n     */\n    measurement (measurement) {\n        if (measurement) {\n            this._measurement = mergeRecursive(this._measurement || {}, measurement);\n\n            return this;\n        }\n        return this._measurement;\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     * @param {Object} matrices matrices for the layout\n     * @return {Layout|Object} Gets the matrices/ Returns this instance when set\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = sanitizeIP.typeObj([TOP, CENTER, BOTTOM], matrices);\n\n            return this;\n        }\n        return this._matrices;\n    }\n\n    /**\n     * Sets/Gets the matrix for row\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    rowMatrix (matrix) {\n        if (matrix) {\n            this._rowMatrix = matrix;\n            return this;\n        }\n        return this._rowMatrix;\n    }\n\n    /**\n     * Sets/Gets the matrix for columns\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    columnMatrix (matrix) {\n        if (matrix) {\n            this._columnMatrix = matrix;\n            return this;\n        }\n        return this._columnMatrix;\n    }\n\n   /**\n     * Sets/Gets the matrix for value\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    centerMatrix (matrix) {\n        if (matrix) {\n            this._centerMatrix = matrix;\n            return this;\n        }\n        return this._centerMatrix;\n    }\n\n    /**\n     * Sets/Gets the mountPoint for the layout\n     * @param {Object} mountPoint mountPoint for the layout\n     * @return {Layout|Object} Gets the mountPoint/ Returns this instance when set\n     */\n    mountPoint (mountPoint) {\n        if (mountPoint) {\n            this._mountPoint = mountPoint;\n\n            return this;\n        }\n        return this._mountPoint;\n    }\n}\n","import * as FieldNames from '../enums/constants';\n\n/**\n * Default configuration of the layout\n * @return {Object} returns the default configuration\n */\nexport const DEFAULT_CONFIGURATION = {\n    [FieldNames.BORDER]: {\n        [FieldNames.STYLE]: 'solid',\n        [FieldNames.COLOR]: '#d6d6d6',\n        [FieldNames.WIDTH]: 2,\n        [FieldNames.COLLAPSE]: true,\n        [FieldNames.SPACING]: 0\n    },\n    [FieldNames.GUTTERSPACE]: { rows: [], columns: [] },\n    [FieldNames.DISTRIBUTION]: { rows: [], columns: [] },\n    [FieldNames.BREAK_PAGE]: { rows: [], columns: [] },\n    [FieldNames.ROW_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_POINTER]: 0,\n    [FieldNames.ROW_POINTER]: 0\n};\n\n/**\n * Default measurements for the layout\n * @return {Object} returns the default measurements\n */\nexport const DEFAULT_MEASUREMENTS = {\n    [FieldNames.GRID_WIDTH]: 100,\n    [FieldNames.GRID_HEIGHT]: 100,\n    [FieldNames.UNIT_WIDTH]: 100,\n    [FieldNames.UNIT_HEIGHT]: 100\n};\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n","import { ROW_LEFT, ROW_RIGHT, COLUMN_BOTTOM, COLUMN_TOP, TOP, BOTTOM } from '../enums/constants';\n/**\n * This callback is used to filter the array of\n * placeholder cells and filter out cells which have\n * appeared in a previous row.\n *\n * @param {Placeholder} colData Instance of placeholder.\n * @param {number} colIdx The index of the placeholder in array.\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {number} rIdx The index of the row of the placeholder in array.\n * @param {string} type The type of matrix it is (rowLeft, rowRight, colTop, colBottom)\n * @return {boolean} flag to keep/remove element.\n */\nconst columnFilter = (colData, colIdx, matrix, rIdx, type) => {\n    const previousRow = matrix[rIdx - 1];\n    const currentRow = matrix[rIdx];\n\n    // Row Span for left\n    if (type === ROW_LEFT) {\n        if (!previousRow) {\n            return colData;\n        }\n        let i = 0;\n        for (;i <= colIdx; i += 1) {\n            if (currentRow[i].valueOf() !== previousRow[i].valueOf()) {\n                break;\n            }\n        }\n        return (i - 1 === colIdx) ? null : colData;\n    } else if (type === ROW_RIGHT) {\n        if (!previousRow || colIdx === 0) {\n            return colData;\n        }\n        let j = colIdx;\n        for (; j < currentRow.length; j += 1) {\n            if (previousRow[j].valueOf() !== currentRow[j].valueOf()) {\n                break;\n            }\n        }\n        return (j === currentRow.length) ? null : colData;\n    } else if (type === COLUMN_BOTTOM) {\n        if (rIdx === 0) {\n            return colData;\n        }\n        const prevCell = currentRow[colIdx - 1];\n        if (prevCell) {\n            if (prevCell.valueOf() === colData.valueOf()) {\n                const nextRow = matrix[rIdx + 1];\n                if (!nextRow) {\n                    return null;\n                }\n                if (nextRow[colIdx].valueOf() === nextRow[colIdx - 1].valueOf()) {\n                    return null;\n                }\n                return colData;\n            }\n            return colData;\n        }\n        return colData;\n    } else if (type === COLUMN_TOP) {\n        if (rIdx === matrix.length - 1 && matrix.length > 1) {\n            return colData;\n        }\n        const prevCell = currentRow[colIdx - 1];\n        if (prevCell && (prevCell.valueOf() === colData.valueOf())) {\n            const prevRow = matrix[rIdx - 1];\n            if (prevRow) {\n                if (prevRow[colIdx].valueOf() === prevRow[colIdx - 1].valueOf()) {\n                    return null;\n                }\n                return colData;\n            }\n            return null;\n        }\n        return colData;\n    }\n    return colData;\n};\n\n/**\n * This callback is used to calculate the rowspan\n * by checking for repeating entries in subsequent rows\n * at the specified column.\n *\n * @param {Placeholder} colData Instance of placeholder.\n * @param {number} colIdx The index of the placeholder in the array.\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {number} rIdx The index of the row of the placeholder in array.\n * @return {number} The row span.\n */\nconst calcRowSpan = (colData, colIdx, matrix, rIdx) => {\n    let count = 1;\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData || typeof colData.valueOf() !== 'string') {\n        return 1;\n    }\n    let isNull = false;\n    while (!isNull) {\n        if (matrix[rIdx + count] && matrix[rIdx + count][colIdx] === null) {\n            count += 1;\n        } else {\n            isNull = true;\n        }\n    }\n    return count;\n};\n/**\n * This callback is used to calculate the rowspan\n * by checking for repeating entries in subsequent rows\n * at the specified column.\n *\n * @param {Placeholder} colData Instance of placeholder.\n * @param {number} colIdx The index of the placeholder in the array.\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {number} rIdx The index of the row of the placeholder in array.\n * @return {number} The row span.\n */\nconst calcColSpan = (colData, colIdx, matrix, rIdx) => {\n    let count = 1;\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData || typeof colData.valueOf() !== 'string') {\n        return 1;\n    }\n    let isNull = false;\n    while (!isNull) {\n        if (matrix[rIdx][colIdx + count] === null) {\n            count += 1;\n        } else {\n            isNull = true;\n        }\n    }\n    return count;\n};\n\n// create a masking matrix to strip out repeating columns\n// and calculate rowspan.\nconst mask = function (matrix, type) {\n    return matrix.map((row, rIdx) => {\n        if (type === ROW_LEFT || type === ROW_RIGHT) {\n            const filteredRow = row.map((col, colIndex) => columnFilter(col, colIndex, matrix, rIdx, type));\n            const temp = [];\n            const diff = row.length - filteredRow.length;\n            for (let i = 0; i < diff; i += 1) {\n                temp.push(null);\n            }\n            if (type === ROW_RIGHT) {\n                temp.unshift(...filteredRow);\n                return temp;\n            }\n            temp.push(...filteredRow);\n            return temp;\n        }\n\n        const filteredRow = row.map((col, colIndex) => columnFilter(col, colIndex, matrix, rIdx, type));\n        const temp = [];\n        temp.push(...filteredRow);\n        return temp;\n    });\n};\n\n/**\n * This function is used to set the col and row spans\n * for the matrices based on repeated/hierarchichal data\n *\n * @export\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {string} type Type of array (center, top, bottom)\n * @param {number} index Index of array in the row\n * @return {Object} containing the view matrix and their spans\n */\nexport function cellSpanMaker (matrix, type, index) {\n    let span = '';\n    if (type === TOP || type === BOTTOM) {\n        span = type === TOP ? COLUMN_TOP : COLUMN_BOTTOM;\n        const viewMatrix = mask(matrix, span);\n        const spans = viewMatrix.map((row, ridx) => row.map((col, i) => calcColSpan(col, i, viewMatrix, ridx))\n                        .filter(col => col !== 1));\n        return { viewMatrix, spans };\n    } else if (index === 0 || index === 2) {\n        span = index === 0 ? ROW_LEFT : ROW_RIGHT;\n        const viewMatrix = mask(matrix, span);\n        const spans = [];\n        viewMatrix.forEach((row, ridx) => {\n            spans[ridx] = spans[ridx] || [];\n            row.forEach((col, i) => {\n                if (viewMatrix[ridx][i]) {\n                    const currSpan = calcRowSpan(col, i, viewMatrix, ridx);\n                    currSpan && spans[ridx].push(currSpan);\n                }\n            });\n        });\n        return { viewMatrix, spans };\n    }\n    return { viewMatrix: matrix };\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport { cellSpanMaker } from './span-maker';\nimport {\n     TOP, LEFT, RIGHT, BOTTOM, CENTER, WIDTH, ROW_SPAN, COL_SPAN\n} from '../enums/constants';\nimport { BLANK_BORDERS } from './defaults';\n\n/**\n * Creates a table element of the layout\n *\n * @param {Object} mount Mount point for table elements\n * @param {string} className defines class name\n * @param {Array} rowData set of rows for the table\n * @return {Selection} set of selections for the table\n */\nfunction renderTable (mount, className, rowData) {\n    const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n    const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n    const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n    const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null && e.config().show).map(e =>\n                                ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n    return { table, body, rows, cells };\n}\n\nfunction applyRowBorders (cells, borderStyle, showBorders, color) {\n    [TOP, BOTTOM].forEach((borderType) => {\n        const style = `${borderStyle} ${showBorders[borderType] ? color : BLANK_BORDERS}`;\n        cells.style(`border-${borderType}`, style);\n    });\n}\n\nfunction applyColBorders (cells, borderStyle, showBorders, color) {\n    [LEFT, RIGHT].forEach((borderType) => {\n        const style = `${borderStyle} ${showBorders[borderType] ? color : BLANK_BORDERS}`;\n        cells.style(`border-${borderType}`, style);\n    });\n}\n\n/**\n * Applies borders to the cells in a matrix\n *\n * @param {Selection} cells Set of cells made from the matrix\n * @param {Object} border Border info for layout\n * @param {string} type Type of matrix(top/center/bottom)\n * @param {number} index Column index of matrix in the row\n */\nfunction applyBorders (cells, border, type, index) {\n    const {\n        width,\n        style,\n        color,\n        showRowBorders,\n        showColBorders,\n        showValueBorders\n    } = border;\n    const borderStyle = `${width}px ${style}`;\n\n    if (type === CENTER && index === 1) {\n        [TOP, BOTTOM, LEFT, RIGHT].forEach((borderType) => {\n            cells.style(`border-${borderType}`, `${borderStyle} ${showValueBorders[borderType] ?\n                color : BLANK_BORDERS}`);\n        });\n    } else if (type === CENTER) {\n        applyRowBorders(cells, borderStyle, showRowBorders, color);\n    } else if (index === 1) {\n        applyColBorders(cells, borderStyle, showColBorders, color);\n    }\n}\n\n/**\n * Renders a set of matrices in a row\n *\n * @param {Array} matrices Set of matrices in a row\n * @param {Selection} mountPoint Mount point for the row\n * @param {string} type top/center/bottom\n * @param {Object} dimensions dimensions of the matrix\n */\nfunction renderMatrix (matrices, mountPoint, type, dimensions, classPrefix) {\n    matrices.forEach((matrix, index) => {\n        // Creating containers for each matrix individually\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${type}-${index + 1}`)\n        .classed(`${classPrefix}-grid-${type}`, true)\n        .classed(`${classPrefix}-grid`, true);\n\n        const {\n            viewMatrix,\n            spans\n        } = cellSpanMaker(matrix, type, index);\n\n        // Rendering the table components\n        const { cells } = renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        if (type === CENTER && spans) {\n            cells.attr(ROW_SPAN, function (cell, colIndex) {\n                const span = spans[cell.rowIndex][colIndex];\n                const placeholder = cell.placeholder;\n                selectElement(this).style('height', `${placeholder.availHeight() + dimensions.border.width}px`);\n                if (span > 1) {\n                    placeholder.setAvailableSpace(placeholder.availWidth(), placeholder.availHeight() * span);\n                }\n                return span;\n            });\n        } else if ((type === TOP || type === BOTTOM) && index === 1) {\n            cells.attr(COL_SPAN, function (cell, colIndex) {\n                const span = spans[cell.rowIndex][colIndex];\n                const placeholder = cell.placeholder;\n                if (span > 1) {\n                    placeholder.setAvailableSpace(placeholder.availWidth() * span, placeholder.availHeight());\n                }\n                selectElement(this).style('height', `${placeholder.availHeight()}px`);\n                return span;\n            });\n        }\n        // Rendering content within placeholders\n        cells.each(function (cell) {\n            cell.placeholder && cell.placeholder.render(this);\n        }).exit().each((cell) => {\n            cell.placeholder && cell.placeholder.remove();\n        });\n\n        applyBorders(cells, dimensions.border, type, index);\n    });\n}\n\n/**\n * Renders all the matrices of the layout\n *\n * @export\n * @param {Array} matrices Set of matrices in the layout\n * @param {Array} mountPoints Mount points for each row of matrix\n * @param {Array} layoutDimensions Dimensions(height/width) of all the matrices\n */\nexport function renderMatrices (context, matrices, layoutDimensions) {\n    const {\n        top,\n        center,\n        bottom\n    } = matrices;\n    const {\n        classPrefix\n    } = context.config();\n    const {\n        width\n    } = context.measurement();\n    const mount = context.mountPoint();\n\n    const data = [\n        { type: TOP, matrix: top },\n        { type: CENTER, matrix: center },\n        { type: BOTTOM, matrix: bottom }\n    ];\n    makeElement(mount, 'div', data, `${classPrefix}-grid-layout-row`)\n                    .each(function (d, i) {\n                        const row = selectElement(this);\n                        row.classed(`${classPrefix}-grid-layout-row-${i}`, true);\n                        renderMatrix(d.matrix, row, d.type, layoutDimensions, classPrefix);\n                    })\n                    .style(WIDTH, `${Math.ceil(width)}px`);\n}\n","/**\n * This file exports utility functions that are used across the layout module\n */\nimport { Symbols } from 'muze-utils';\nimport { PRIMARY, SECONDARY, HEIGHT, WIDTH } from '../enums/constants';\n\nconst nest = Symbols.nest;\n/**\n *\n *\n * @param {*} isTransposed\n *\n */\nconst getMeasureInfo = (isTransposed) => {\n    if (isTransposed) {\n        return {\n            firstMeasure: HEIGHT,\n            secondMeasure: WIDTH\n        };\n    }\n    return {\n        firstMeasure: WIDTH,\n        secondMeasure: HEIGHT\n    };\n};\n\n/**\n *\n *\n * @param {*} i\n * @param {*} page\n *\n */\nconst findInPage = (i, page) => {\n    let count = 0;\n    for (const x in page) {\n        if (i < page[x]) {\n            count = x;\n            break;\n        }\n    }\n    return count;\n};\n\n/**\n * Creates a single matrix from two matrices\n *\n * @param {Array<Array>} matrix Input matrix\n * @return {Array<Array>} Joined matrix\n * @memberof VisualMatrix\n */\nexport const combineMatrices = (matrix, config) => {\n    const { isTransposed } = config;\n    let joinedMatrix = matrix[0].length > 0 ? matrix[0] : matrix[1];\n    if (isTransposed) {\n        joinedMatrix = matrix[0].length > 0 ? [...matrix[0]] : [];\n        joinedMatrix = matrix[1].length > 0 ? [...joinedMatrix, ...matrix[1]] : joinedMatrix;\n    } else {\n        joinedMatrix = joinedMatrix.map((row, rowIndex) => {\n            let rowData = [];\n            if (matrix[0].length > 0) {\n                rowData = [...matrix[0][rowIndex]];\n            }\n            if (matrix[1].length > 0) {\n                rowData = [...rowData, ...matrix[1][rowIndex]];\n            }\n            return rowData;\n        });\n    }\n    return joinedMatrix;\n};\n\n/**\n * Creates a hirachical tree from the context\n *\n * @param {Object} context context for creating tree\n * @return {Object} nested tree\n */\nexport const createTree = (context) => {\n    let matrixTree = {};\n    let lastLevelKey = 0;\n    let facet = PRIMARY;\n    const nestFn = nest();\n    const keys = [];\n    const layoutMatrix = context._layoutMatrix;\n    const primaryMatrix = context.primaryMatrix();\n    const secondaryMatrix = context.secondaryMatrix();\n    const { isTransposed, breakPage } = context.config();\n\n    if (!isTransposed) {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix[0].length - 1; i++) {\n                keys.push(i);\n            }\n            keys.push(primaryMatrix[0].length - 1);\n            if (facet === SECONDARY || secondaryMatrix.length === 0) {\n                lastLevelKey = primaryMatrix[0].length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const keyLength = primaryMatrix.length > 0 ? primaryMatrix[0].length : 0;\n            for (let i = secondaryMatrix[0].length - 1; i > 0; i--) {\n                keys.push(i + keyLength);\n            }\n            keys.push(keyLength);\n\n            if (facet === PRIMARY) {\n                lastLevelKey = keyLength;\n            }\n        } else {\n            lastLevelKey = primaryMatrix.length > 0 ? primaryMatrix[0].length - 1 : 0;\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        matrixTree = nestFn.entries(layoutMatrix);\n    } else {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix.length - 1; i++) {\n                keys.push(i);\n            }\n            // if (facet === PRIMARY) {\n            keys.push(primaryMatrix.length - 1);\n            // } else {\n            if (facet === SECONDARY) {\n                lastLevelKey = primaryMatrix.length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const primaryMatrixLength = primaryMatrix.length;\n            for (let i = secondaryMatrix.length - 1; i > 0; i--) {\n                keys.push(i + primaryMatrixLength);\n            }\n            // if (facet === SECONDARY) {\n            keys.push(primaryMatrixLength);\n            // }\n            if (facet === PRIMARY) {\n                lastLevelKey = primaryMatrixLength;\n            }\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        let newMatrix = [];\n        newMatrix = layoutMatrix[0].map((col, colIndex) => layoutMatrix.map(row => row[colIndex]));\n        matrixTree = nestFn.entries(newMatrix);\n    }\n    return { tree: matrixTree, lastLevelKey };\n};\n\n/**\n * Gives the min measues\n *\n * @param {boolean} isTransposed is column matrix\n * @param {Object} unitMeasures min measures to be given to cells\n * @return {Object} dimension min cell\n */\nexport const getMinMeasures = (isTransposed, unitMeasures) => {\n    if (!isTransposed) {\n        return {\n            height: unitMeasures.height,\n            width: 0\n        };\n    }\n    return {\n        height: 0,\n        width: unitMeasures.width\n    };\n};\n\n/**\n * Get the logical space from the tree\n *\n * @param {Node} item tree to be calculated\n * @param {number} measures width and height\n * @param {Array} minMeasures min measures for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} dimension\n */\nexport const getLogicalSpace = (item, measures, minMeasures, maxMeasure = []) => {\n    const { firstMeasure, secondMeasure } = measures;\n    let firstMeasureValue = 0;\n    let secondMeasureValue = 0;\n    item.values.forEach((valueArray) => {\n        let fMeasure = 0;\n        let sMeasure = 0;\n        valueArray.forEach((placeholder, colIndex) => {\n            placeholder.setAvailableSpace();\n            const space = placeholder.getLogicalSpace();\n\n            sMeasure = Math.max(sMeasure, +space[secondMeasure], minMeasures[secondMeasure]);\n            maxMeasure[colIndex] = Math.max(maxMeasure[colIndex] || 0, space[firstMeasure]);\n            fMeasure += +maxMeasure[colIndex];\n        });\n        secondMeasureValue += sMeasure;\n        firstMeasureValue = Math.max(firstMeasureValue, fMeasure);\n        item.space = {\n            [secondMeasure]: Math.ceil(secondMeasureValue),\n            [firstMeasure]: Math.ceil(firstMeasureValue)\n        };\n    });\n    return {\n        [secondMeasure]: secondMeasureValue,\n        [firstMeasure]: firstMeasureValue\n    };\n};\n\n/**\n * Computes the logical spcae taken by the matrix tree\n *\n * @param {*} [item={}] tree to be viewed\n * @param {boolean} [isTransposed=false] is column matrix\n * @param {*} unitMeasures min measues for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} logical space taken\n */\nexport const computeLogicalSpace = (item = {}, config, maxMeasures) => {\n    const { isTransposed = false, unitMeasures } = config;\n    const { firstMeasure, secondMeasure } = getMeasureInfo(isTransposed);\n    const { values } = item;\n    const minMeasures = getMinMeasures(isTransposed, unitMeasures);\n    if (values[0].key) {\n        const logicalSpace = { [firstMeasure]: 0, [secondMeasure]: 0 };\n\n        values.forEach((valueItem) => {\n            // Compute logical space for lowest level\n            const space = computeLogicalSpace(valueItem, config, maxMeasures);\n            // Set logical space for first measure\n            logicalSpace[firstMeasure] = Math.max(logicalSpace[firstMeasure], space[firstMeasure],\n                minMeasures[firstMeasure]);\n            // Set logical space for second measure\n            logicalSpace[secondMeasure] += +space[secondMeasure];\n        });\n        item.space = logicalSpace;\n        return logicalSpace;\n    }\n    return getLogicalSpace(item, { firstMeasure, secondMeasure }, minMeasures, maxMeasures);\n};\n\n/**\n * Gives the space taken by a row\n *\n * @param {Array} row matrix array of rows\n * @return {Object} dimension of the row\n */\nexport const spaceTakenByRow = (row) => {\n    let height = 0;\n    let width = 0;\n    row.forEach((col) => {\n        const spaces = col.getLogicalSpace();\n        height = Math.max(height, spaces.height);\n        width += spaces.width;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Gives the space taken by a column\n *\n * @param {Array<Array>} matrix column matrix\n * @param {number} colIndex column index\n * @return {Object} dimension of the column\n */\nexport const spaceTakenByColumn = (matrix, colIndex) => {\n    let height = 0;\n    let width = 0;\n    matrix.forEach((row) => {\n        const col = row[colIndex];\n        const spaces = col.getLogicalSpace();\n        width = Math.max(width, spaces.width);\n        height += spaces.height;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Creates different level matrices\n *\n * @param {Object} item matrix tree\n * @param {boolean} isTransposed is column matrix\n * @return {Object} matrix of each level\n */\nexport const createMatrixEachLevel = (item, isTransposed) => {\n    if (item.values[0].key) {\n        const arr = [];\n        item.values.forEach((child) => {\n            if (!isTransposed) {\n                arr.push(...createMatrixEachLevel(child, isTransposed));\n            } else {\n                const eachLevel = createMatrixEachLevel(child, isTransposed);\n                eachLevel.forEach((e, i) => {\n                    arr[i] = arr[i] || [];\n                    arr[i].push(...e);\n                });\n            }\n        });\n        item.matrix = arr;\n        return arr;\n    }\n    if (!isTransposed) {\n        item.matrix = item.values;\n    } else {\n        item.matrix = item.values[0].map((col, colIndex) => item.values.map(row => row[colIndex]));\n    }\n    return item.matrix;\n};\n\n/**\n * Breaks the matrix into two part\n *\n * @param {Array<Array>} matrix input matrix\n * @param {boolean} isTransposed is column matrix\n * @param {number} breakPointer point in matrix where it is to be broken\n * @return {Array} two broken matrix\n */\nexport const breakMatrix = (matrix, isTransposed, breakPointer) => {\n    const primaryMatrix = [];\n    const secondaryMatrix = [];\n    if (isTransposed) {\n        matrix.forEach((row, rowIndex) => {\n            if (rowIndex >= breakPointer) {\n                secondaryMatrix.push(row);\n            } else {\n                primaryMatrix.push(row);\n            }\n        });\n    } else {\n        matrix.forEach((row, rowIndex) => {\n            row.forEach((column, columnIndex) => {\n                if (columnIndex >= breakPointer) {\n                    secondaryMatrix[rowIndex] = secondaryMatrix[rowIndex] || [];\n                    secondaryMatrix[rowIndex].push(column);\n                } else {\n                    primaryMatrix[rowIndex] = primaryMatrix[rowIndex] || [];\n                    primaryMatrix[rowIndex].push(column);\n                }\n            });\n        });\n    }\n    return [primaryMatrix, secondaryMatrix];\n};\n\n/**\n * Distributed width returned\n *\n * @param {Object} context context for the width distibution\n * @return {number} distributed widths\n */\nexport const getDistributedWidth = (context, layoutConfig) => {\n    const {\n        availableWidth,\n        width,\n        row\n    } = context;\n    const {\n        isDistributionEqual,\n        isTransposed,\n        distribution\n    } = layoutConfig;\n    let distSum = 0;\n    if (distribution && distribution[0]) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    return row.map((col, colIndex) => {\n        const space = col.getLogicalSpace().width;\n        let distWidth = (space + (availableWidth - width) * (space / width));\n        if (isTransposed) {\n            if (distribution.length > 0) {\n                distWidth = (availableWidth * distribution[colIndex] / distSum);\n            } else if (isDistributionEqual || width === 0) {\n                const rowLen = row.length;\n                distWidth = (availableWidth / rowLen);\n            }\n        }\n        return Math.floor(distWidth);\n    });\n};\n\n/**\n * Distributeed heights returned\n *\n * @param {Object} context input for the height distribution\n * @return {Object} distribured heights\n */\nexport const getDistributedHeight = (context) => {\n    let distSum = 0;\n    let gutterSum = 0;\n    let heightWithoutGutter = 0;\n    const {\n        isTransposed,\n        distribution,\n        availableHeight,\n        height,\n        isDistributionEqual,\n        gutter,\n        matrix,\n        cIdx\n    } = context;\n\n    if (distribution && distribution[0] !== undefined) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    if (gutter && gutter[0] !== undefined) {\n        gutterSum = gutter.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    heightWithoutGutter = availableHeight - Math.floor(availableHeight * gutterSum);\n\n    const colLen = matrix.length;\n    return matrix.map((row, rIdx) => {\n        const col = row[cIdx];\n        const space = col.getLogicalSpace().height;\n        let distHeight = (space + (heightWithoutGutter - height) * (space / height));\n\n        if (!isTransposed) {\n            if (distribution.length > 0 && colLen === distribution.length) {\n                distHeight = (heightWithoutGutter * distribution[rIdx] / distSum);\n            } else if (isDistributionEqual || context.height === 0) {\n                distHeight = (heightWithoutGutter / colLen);\n            }\n        }\n        return Math.floor(distHeight);\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} beg\n * @param {*} end\n */\nexport const extraCellsRemover = (arr, beg, end) => arr.slice(beg, -end);\n\n/**\n * Creates matrix instancess\n *\n * @param {Array} [arr=[]] mutated arry\n * @param {number} depth depth of the tree\n * @param {Array} matrixInfo Details about the matrix(tree, etc) to be inserted\n * @param {boolean} layout Instance of layout\n */\nexport const createMatrixInstances = (arr = [], depth, matrixInfo, layout) => {\n    const breakPointer = layout._breakPointer;\n    const config = layout.config();\n    const {\n        isTransposed\n    } = config;\n    const {\n        tree,\n        layoutMatrix\n    } = matrixInfo;\n\n    if (depth === 0) {\n        const brokenMatrix = breakMatrix(tree.matrix, isTransposed, breakPointer);\n        arr.push({\n            matrix: tree.matrix,\n            primaryMatrix: brokenMatrix[0],\n            secondaryMatrix: brokenMatrix[1],\n            space: tree.space\n        });\n        return arr;\n    }\n    const nextLevel = depth - 1;\n    tree.values.forEach((e) => {\n        createMatrixInstances(arr, nextLevel, {\n            tree: e,\n            layoutMatrix\n        }, layout);\n    });\n    return arr;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    maxMeasures: {},\n    availableSpace: {},\n    logicalSpace: {}\n};\n","import { PRIMARY } from '../enums/constants';\n/**\n *\n *\n */\nexport const defaultConfig = {\n    distribution: [],\n    classPrefix: 'muze',\n    isDistributionEqual: true,\n    unitMeasures: {\n        height: 100,\n        width: 100,\n        border: 1\n    },\n    isTransposed: false,\n    facet: PRIMARY,\n    extraCellLengths: []\n};\n","import { mergeRecursive, generateGetterSetters, ERROR_MSG } from 'muze-utils';\nimport {\n    createTree,\n    combineMatrices,\n    createMatrixInstances\n  } from '../utils';\nimport { PROPS } from './props';\nimport { HEIGHT, WIDTH } from '../enums/constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        // Prepare matrices\n        this._lastLevelKey = 0;\n        this._primaryMatrix = matrix[0] || [];\n        this._secondaryMatrix = matrix[1] || [];\n        this._maxMeasures = [];\n        this._availableSpace = {};\n\n        // Store the config\n        generateGetterSetters(this, PROPS);\n        const defCon = Object.assign({}, this.constructor.defaultConfig());\n        this.config(mergeRecursive(defCon, config));\n\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n    }\n\n     /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    computeViewableSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getPriorityDistribution () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    primaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._primaryMatrix;\n    }\n\n    secondaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._secondaryMatrix;\n    }\n\n    tree (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._tree;\n    }\n\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    createTree () {\n        const { tree, lastLevelKey } = createTree(this);\n        this._lastLevelKey = lastLevelKey;\n        return tree;\n    }\n\n    /**\n     * Returns the space taken by visual matrix\n     *\n     * @return {Object} space taken by the matrix\n     * @memberof VisualMatrix\n     */\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    /**\n     * Sets the provied space to the visual matrix\n     *\n     * @param {number} width width provided\n     * @param {number} height height provided\n     * @memberof VisualMatrix\n     */\n    setAvailableSpace (width, height) {\n        this.availableSpace({ width, height });\n        const tree = this.tree();\n        const heightMeasures = this.populateMaxMeasures(HEIGHT, tree);\n        const widthMeasures = this.populateMaxMeasures(WIDTH, tree);\n        const depth = this.calculateDepth(widthMeasures, heightMeasures);\n\n        this.viewableMatrix = this.createViewPortMatrix(depth);\n        this.viewableMeasures = this.redistributeSpaces(width, height);\n        return this;\n    }\n\n    /**\n     * Populate the max measures in the array\n     *\n     * @param {Array} measures array to be filled with max measures\n     * @param {Object} matrixTree matrix tree of visual matrix\n     * @param {number} measure width or height\n     * @param {number} [depth=0] depth of the tree that to be calculated\n     * @memberof VisualMatrix\n     */\n    populateMaxMeasures (type, matrixTree, depth = 0, measures = []) {\n        measures[depth] = Math.max(measures[depth] || 0, matrixTree.space[type]);\n        if (matrixTree.values) {\n            const childDepth = depth + 1;\n            matrixTree.values.forEach((child) => {\n                if (child.space) {\n                    measures = this.populateMaxMeasures(type, child, childDepth, measures);\n                }\n            });\n        }\n        return measures;\n    }\n\n    /**\n     * Gets the viewable measures for the current viewable matrix\n     *\n     * @return {Object} Set of viewable measures\n     * @memberof VisualMatrix\n     */\n    getViewableSpaces () {\n        return this.viewableMeasures;\n    }\n\n    /**\n     * Returns the matrix that can be viewed in the current viewport\n     *\n     * @return {Array} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    getViewableMatrices () {\n        return this.viewableMatrix;\n    }\n\n    /**\n     * Creates the viewport that can be viewed together\n     *\n     * @param {number} depth maxDepth that can be viewed in the viewport\n     * @return {Array<Object>} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    createViewPortMatrix (depth) {\n        const arr = [];\n        createMatrixInstances(arr, depth, this.removeExtraCells(), this);\n        return arr;\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    combineMatrices,\n    spaceTakenByColumn,\n    getDistributedHeight,\n    computeLogicalSpace,\n    createMatrixEachLevel\n  } from '../utils';\nimport { ROW_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class RowVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = (matrix[0].length > 0 ? matrix[0][0].length : 0);\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n\n        // Create Tree\n        this._tree = {\n            key: ROW_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, false);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height\n        } = measures;\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i };\n            const { widths, rowHeights, columnWidths } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = [height, height];\n            const columnMeasures = widths;\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n        tree.matrix = extraCellsRemover(tree.matrix, begCellLen, endCellLen);\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        let remainaingAvailWidth;\n        let remainaingWidth;\n        let cWidths = [];\n        let conditions = [];\n        let maxPrioritySpace = 0;\n        const {\n            matrix,\n            width: availableWidth,\n            maxMeasures: maxWidths,\n            maxWidth: currentWidth,\n            height\n        } = measures;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length ? this.primaryMatrix()[0].length : 0;\n\n        const dist = [];\n\n        remainaingAvailWidth = availableWidth;\n        remainaingWidth = currentWidth;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            // divider = Math.min(2, matrixLen);\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            // divider = Math.min(1, matrixLen);\n        }\n        conditions.forEach((i) => {\n            dist[i] = maxWidths[i];\n            maxPrioritySpace += maxWidths[i];\n            remainaingAvailWidth -= dist[i];\n            remainaingWidth -= dist[i];\n        });\n        matrix[0].forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                dist[i] = remainaingAvailWidth * (maxWidths[i] / remainaingWidth);\n            }\n        });\n        matrix.forEach(row => row.forEach((col, cIdx) => {\n            if (conditions.indexOf(cIdx) === -1) {\n                col.setAvailableSpace(dist[cIdx], height);\n\n                cWidths[cIdx] = Math.max(cWidths[cIdx] || 0, Math.floor(col.getLogicalSpace().width));\n            } else {\n                cWidths[cIdx] = 0;\n            }\n        }));\n\n        const prioritySpace = availableWidth - cWidths.reduce((t, n) => t + n);\n        if (prioritySpace < 0) {\n            cWidths = cWidths.map(() => 0);\n        } else {\n            conditions.forEach((i) => {\n                cWidths[i] = Math.floor(prioritySpace * (dist[i] / maxPrioritySpace || 1));\n            });\n        }\n        return cWidths;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures, heightMeasures) {\n        let i;\n        const { height } = this.availableSpace();\n\n        for (i = 0; i < heightMeasures.length; i++) {\n            if (heightMeasures[i] <= height) break;\n        }\n\n        return Math.min(widthMeasures.length - 1, i);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n        const maxMeasures = this.maxMeasures();\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        const logicalWidths = this.getPriorityDistribution({\n            matrix: this._layoutMatrix,\n            maxWidth,\n            maxMeasures,\n            width,\n            height\n        });\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths, logicalWidths };\n            const measures = this.redistributeViewSpaces(options);\n            maxWidths = measures.maxWidths;\n            maxHeights = measures.maxHeights;\n        });\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let cWidths = [];\n        let rHeights = [];\n        let mHeight = 0;\n        const maxMeasures = this.maxMeasures();\n\n        const {\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        } = this.config();\n        const { matrix, height, maxHeights, maxWidths, logicalWidths } = measures;\n        mHeight = spaceTakenByColumn(matrix, this._lastLevelKey).height;\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        measures.maxMeasures = maxMeasures;\n        measures.maxWidth = maxWidth;\n        if (maxWidth > 0) {\n            cWidths = logicalWidths;\n        } else {\n            cWidths = maxMeasures.map(() => 0);\n        }\n        rHeights = getDistributedHeight({\n            matrix,\n            cIdx: this._lastLevelKey,\n            height: mHeight,\n            availableHeight: height,\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        });\n        if (maxWidths.length > 0) {\n            cWidths = cWidths.map((e, i) => Math.max(e, maxWidths[0][i] || 0));\n        }\n        maxWidths.push(cWidths);\n        for (let x = 0; x < maxWidths.length; x++) {\n            maxWidths[x] = cWidths;\n        }\n        maxHeights.push(rHeights);\n        return { maxWidths, maxHeights };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = maxHeights[matrixIndex][rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth, colHeight - borderWidth);\n\n                if (rIdx === 0 && cIdx < breakPointer) {\n                    columnWidths[0][cIdx] = colWidth;\n                    widths[0] = (widths[0] || 0) + colWidth;\n                } else if (rIdx === 0 && cIdx >= breakPointer) {\n                    columnWidths[1][cIdx - breakPointer] = colWidth;\n                    widths[1] = (widths[1] || 0) + colWidth;\n                }\n                if (cIdx === this._lastLevelKey) {\n                    rowHeights[0][rIdx] = colHeight;\n                    rowHeights[1][rIdx] = colHeight;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    getDistributedWidth,\n    spaceTakenByRow,\n    createMatrixEachLevel,\n    computeLogicalSpace\n  } from '../utils';\nimport { COLUMN_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class ColumnVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = matrix[0].length;\n\n        // Create Tree\n        this._tree = {\n            key: COLUMN_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, true);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height,\n            width\n        } = measures;\n\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i, height };\n            const {\n                heights,\n                rowHeights,\n                columnWidths\n            } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = heights;\n            const columnMeasures = [width, width];\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n\n        tree.matrix = tree.matrix.map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        const {\n            height,\n            maxHeights\n        } = measures;\n        let remainaingHeight = height;\n        let heightDist = [];\n        let conditions = [];\n        let divider = 2;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            divider = 2;\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            divider = 1;\n        }\n        maxHeights.forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                heightDist[i] = e;\n                remainaingHeight -= e;\n            }\n        });\n        if (remainaingHeight < 0) {\n            heightDist = heightDist.map(() => 0);\n        } else {\n            conditions.forEach((e) => {\n                if (remainaingHeight / divider < maxHeights[e]) {\n                    heightDist[e] = 0;\n                } else {\n                    heightDist[e] = Math.min(maxHeights[e], (remainaingHeight) / divider);\n                }\n            });\n        }\n        return heightDist;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures) {\n        let j;\n        const { width } = this.availableSpace();\n\n        for (j = 0; j < widthMeasures.length; j++) {\n            if (widthMeasures[j] <= width) break;\n        }\n        return Math.min(widthMeasures.length - 1, j);\n    }\n\n     /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths };\n            const maxMeasures = this.redistributeViewSpaces(options);\n            maxWidths = maxMeasures.maxWidths;\n            maxHeights = maxMeasures.maxHeights;\n        });\n\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space column wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let rHeights = [];\n        const {\n            matrix,\n            width,\n            maxHeights,\n            maxWidths\n        } = measures;\n        const borderWidth = this.config().unitMeasures.border;\n\n        const mWidth = spaceTakenByRow(matrix[this._lastLevelKey]).width;\n        const cWidths = getDistributedWidth({\n            row: matrix[this._lastLevelKey],\n            width: mWidth,\n            availableWidth: width\n        }, this.config());\n\n        matrix.forEach((row, rIdx) => row.forEach((col, cIdx) => {\n            const oldLogicalSpace = col.getLogicalSpace();\n\n            col.setAvailableSpace(cWidths[cIdx] - borderWidth, oldLogicalSpace.height);\n            rHeights[rIdx] = Math.max(rHeights[rIdx] || 0, Math.floor(col.getLogicalSpace().height));\n        }));\n        if (maxHeights.length > 0) {\n            rHeights = rHeights.map((e, i) => Math.max(e, maxHeights[0][i]));\n        }\n        maxHeights.push(rHeights);\n        for (let x = 0; x < maxHeights.length; x++) {\n            maxHeights[x] = rHeights;\n        }\n        maxWidths.push(cWidths);\n        return { maxHeights, maxWidths };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, height, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        const heightDistribution = this.getPriorityDistribution({ height, maxHeights: maxHeights[0] || [] });\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = heightDistribution[rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth - borderWidth, colHeight);\n\n                if (cIdx === 0 && rIdx < breakPointer) {\n                    rowHeights[0][rIdx] = colHeight;\n                    heights[0] = (heights[0] || 0) + colHeight;\n                } else if (cIdx === 0 && rIdx >= breakPointer) {\n                    rowHeights[1][rIdx - breakPointer] = colHeight;\n                    heights[1] = (heights[1] || 0) + colHeight;\n                }\n                if (rIdx === this._lastLevelKey) {\n                    columnWidths[0][cIdx] = colWidth;\n                    columnWidths[1][cIdx] = colWidth;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { HEIGHT, WIDTH, COLUMN, ROW } from '../enums/constants';\n\n/**\n * Gets measurement for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @return {Object} Logical height/width of the matrix\n */\nexport function getMatrixMeasurement (matrix, type) {\n    if (matrix) {\n        return matrix.getLogicalSpace()[type];\n    }\n    return 0;\n}\n\n/**\n * Sets available space for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @param {number} value Value of measurement\n */\nexport function setMatrixMeasurement (matrix, type, value) {\n    if (matrix) {\n        const spaces = matrix.getLogicalSpace();\n        if (value && spaces[type] !== value) {\n            type === HEIGHT ? matrix.setAvailableSpace(spaces.width, value) :\n                matrix.setAvailableSpace(value, spaces.height);\n        }\n    }\n}\n\nconst setAvailableSpace = (matrix, widths, heights) => {\n    matrix.forEach((row, rIdx) => {\n        row.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(widths[cIdx], heights[rIdx]);\n        });\n    });\n};\n\nconst setViewSpaces = (layout, pointerType, viewSpaces) => {\n    let pointer = layout.config()[`${pointerType}Pointer`];\n    if (viewSpaces.length - 1 < pointer) {\n        pointer = 0;\n        layout.config({ [`${pointerType}Pointer`]: pointer });\n    }\n    return pointer;\n};\n\n/**\n * Computes the measurements of space for all matrices in the\n * layout\n *\n * @param {Object} layout Instance of grid layout\n * @return {Object} set of measurements for the layout\n */\nexport const computeLayoutMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const {\n        width,\n        height\n    } = layout.measurement();\n    const {\n        border\n    } = layout.config();\n    const matrices = layout.matrices();\n    const {\n        top,\n        bottom\n    } = matrices;\n\n    // Get width of row matrix\n    const rowMatrixWidth = getMatrixMeasurement(rowMatrix, WIDTH);\n    const maxRowMatrixWidth = Math.min(rowMatrixWidth, width / 2);\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Set width for column matrix\n    const columnMatrixWidth = width - maxRowMatrixWidth - borderWidth;\n\n    const maxColumnMatrixHeight = Math.min(columnMatrix.getLogicalSpace().height, height / 2);\n\n    columnMatrix.setAvailableSpace(columnMatrixWidth, maxColumnMatrixHeight);\n    const columnViewPages = columnMatrix.getViewableSpaces();\n\n    setViewSpaces(layout, COLUMN, columnViewPages);\n\n    // Figuring out total space needed by current view space\n    const columnViewSpace = columnViewPages[layout.config().columnPointer];\n\n    // Getting height of column matrix\n    const columnMatrixHeight = columnViewSpace.height.primary + columnViewSpace.height.secondary;\n\n    // Set height for row matrix\n    const rowMatrixHeight = height - columnMatrixHeight;\n\n    rowMatrix.setAvailableSpace(maxRowMatrixWidth, rowMatrixHeight);\n    // Get heights of each cell of row matrix\n    const rowViewableSpaces = rowMatrix.getViewableSpaces();\n    setViewSpaces(layout, ROW, rowViewableSpaces);\n    const rowHeights = [].concat(...rowViewableSpaces.map(e => e.rowHeights.primary));\n    const rowWidthsPrimary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.primary));\n    const rowWidthsSecondary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.secondary));\n    const columnViewableSpaces = columnMatrix.getViewableSpaces();\n    // Get widths of each cell of column matrix\n    const columnWidths = [].concat(...columnViewableSpaces.map(e => e.columnWidths.primary));\n    const columnHeightsPrimary = columnViewableSpaces[0].rowHeights.primary;\n\n    const columnHeightsSecondary = [].concat(...columnViewableSpaces.map(e => e.rowHeights.secondary));\n\n    // Setting the available space for each cell in the centre matrix\n    centerMatrix.forEach((matrix, rIdx) => {\n        matrix.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(columnWidths[cIdx] - borderWidth, rowHeights[rIdx] - borderWidth);\n        });\n    });\n    setAvailableSpace(top[0], rowWidthsPrimary, columnHeightsPrimary);\n    setAvailableSpace(top[2], rowWidthsSecondary, columnHeightsPrimary);\n    setAvailableSpace(bottom[0], rowWidthsPrimary, columnHeightsSecondary);\n    setAvailableSpace(bottom[2], rowWidthsSecondary, columnHeightsSecondary);\n\n    return {\n        rowMatrixHeight,\n        rowMatrixWidth,\n        columnMatrixHeight,\n        columnMatrixWidth\n    };\n};\n\n/**\n * Gets view matrices based on current pointers for row and column\n *\n * @param {Object} layout instance of layout\n * @param {number} rowPointer current row pointer\n * @param {number} columnPointer current column pointer\n * @return {Object} returns the view matrix and its relevant information\n */\nexport const getViewMatrices = (layout, rowPointer, columnPointer) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const matrices = layout.matrices();\n    const rowMatrices = rowMatrix.getViewableMatrices();\n    const columnMatrices = columnMatrix.getViewableMatrices();\n    const centralMatrixPointer = {\n        row: 0,\n        column: 0\n    };\n\n    for (let i = rowPointer - 1; i >= 0; i--) {\n        const length = Math.max(rowMatrices[i].primaryMatrix.length,\n            rowMatrices[i].secondaryMatrix.length);\n        centralMatrixPointer.row += length;\n    }\n     /* istanbul ignore next */\n    for (let i = columnPointer - 1; i >= 0; i--) {\n        const matrix = columnMatrices[i];\n        const { primaryMatrix, secondaryMatrix } = matrix;\n        const length = Math.max(primaryMatrix[0] ? primaryMatrix[0].length : 0,\n            secondaryMatrix[0] ? secondaryMatrix[0].length : 0);\n        centralMatrixPointer.column += length;\n    }\n\n    matrices.top[1] = columnMatrices[columnPointer].primaryMatrix;\n    matrices.bottom[1] = columnMatrices[columnPointer].secondaryMatrix;\n\n    matrices.center[0] = rowMatrices[rowPointer].primaryMatrix;\n    matrices.center[2] = rowMatrices[rowPointer].secondaryMatrix;\n\n    const rowMatrixLen = Math.max(matrices.center[0].length, matrices.center[2].length);\n     /* istanbul ignore next */\n    const columnMatrixLen = Math.max(matrices.top[1][0] ? matrices.top[1][0].length : 0, matrices.bottom[1][0] ?\n            matrices.bottom[1][0].length : 0);\n    matrices.center[1] = centerMatrix.slice(centralMatrixPointer.row, centralMatrixPointer.row + rowMatrixLen)\n        .map(matrix => matrix.slice(centralMatrixPointer.column, centralMatrixPointer.column + columnMatrixLen));\n\n    return {\n        matrices,\n        rowPages: rowMatrices.length,\n        columnPages: columnMatrices.length\n    };\n};\n/**\n * Returns measurements of the cells of the current matrix\n *\n * @param {Object} layout instance of layout\n * @return {Object} returns the measurements for current view matrix\n */\nexport const getViewMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const {\n        columnPointer,\n        rowPointer\n    } = layout.config();\n\n    const rowSpaces = rowMatrix.getViewableSpaces()[rowPointer];\n    const rowMatrixWidth = rowSpaces.width;\n    const { primary: leftWidth, secondary: rightWidth } = rowMatrixWidth;\n\n    const colSpaces = columnMatrix.getViewableSpaces()[columnPointer];\n\n    const columnMatrixHeight = colSpaces.height;\n    const { primary: topHeight, secondary: bottomHeight } = columnMatrixHeight;\n\n    const centerHeight = rowSpaces.rowHeights.primary.reduce((t, n) => t + n);\n    const centerWidth = colSpaces.columnWidths.primary.reduce((t, n) => t + n);\n\n    return {\n        viewWidth: [leftWidth, centerWidth, rightWidth],\n        viewHeight: [topHeight, centerHeight, bottomHeight]\n    };\n};\n","/**\n * This file declares a table that can be extended to create a Datagrid, crosstab\n * and man other visualzations that require a tabular structure.\n */\n\nimport { getUniqueId } from 'muze-utils';\nimport GenericLayout from '../generic-layout';\nimport { DEFAULT_CONFIGURATION, DEFAULT_MEASUREMENTS } from './defaults';\nimport {\n    renderMatrices\n} from './renderer';\nimport { generateVisualMatrices } from './layout-helper';\nimport { computeLayoutMeasurements, getViewMeasurements, getViewMatrices } from './computations';\n/**\n * This class is used to create a tabular structure that\n * can house charts and values.\n *\n * @class GridLayout\n */\nexport default class GridLayout extends GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} matrices Set of upto 9 matrices containing the cells to be rendered\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config external configurations.\n     * @memberof GenericLayout\n     */\n    constructor (matrices, mountPoint, measurement, config) {\n        super(mountPoint, measurement, config);\n        this.matrices(matrices);\n        this.config(this.constructor.defaultConfig());\n        this._layoutId = getUniqueId();\n        this._viewInfo = this.constructor.defaultViewInfo();\n    }\n\n    static defaultViewInfo () {\n        return Object.assign({}, {\n            layoutDimensions: {\n                border: this.defaultConfig().border,\n                viewHeight: [0, 0, 0],\n                viewWidth: [0, 0, 0]\n            },\n            viewMatricesInfo: {\n                columnPages: 0,\n                rowPages: 0,\n                matrices: { top: [], center: [], bottom: [] }\n            }\n        });\n    }\n\n    /**\n     * Returns initial set of measurements for the grid layout\n     *\n     * @static\n     * @return {Object} Returns initial set of measurements\n     * @memberof GridLayout\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENTS;\n    }\n\n    /**\n     * Returns initialconfiguration for grid layout\n     *\n     * @static\n     * @return {Object} Returns initial configuration for grid layout\n     * @memberof GridLayout\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIGURATION;\n    }\n\n    /**\n     * This function is used to return an instance of GridLayout\n     *\n     * @return {GridLayout} Instance of grid layout.\n     * @static\n     * @memberof GridLayout\n     */\n    static create () {\n        return new GridLayout(null, null, this.defaultMeasurement(), this.defaultConfig());\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     *\n     * @param {Array} matrices Set of matrices\n     * @return {Object} Getter/Setter\n     * @memberof GridLayout\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = generateVisualMatrices(this, matrices);\n            return this;\n        }\n        return super.matrices(matrices);\n    }\n\n    /**\n     * Triggers the computations for the layout based on the matrices available\n     * This causes a reflow in the entire layout system.\n     *\n     * @return {Object} Layout instance\n     * @memberof GridLayout\n     */\n    triggerReflow () {\n        computeLayoutMeasurements(this);\n        this.setViewInformation();\n        return this;\n    }\n\n    gotoPage (type, pageNumber) {\n        const pageType = type.toLowerCase();\n        const { viewMatricesInfo } = this.viewInfo();\n        const totalPages = viewMatricesInfo[`${pageType}Pages`];\n        const pointer = Math.min(Math.max(1, pageNumber), totalPages);\n        this.config({\n            [`${pageType}Pointer`]: pointer - 1\n        });\n        this.setViewInformation();\n        this.renderGrid();\n        return this;\n    }\n\n    pages (type) {\n        const { viewMatricesInfo } = this.viewInfo();\n        const pageType = type.toLowerCase();\n        return {\n            totalPages: viewMatricesInfo[`${pageType}Pages`],\n            currentPage: this.config()[`${pageType}Pointer`] + 1\n        };\n    }\n\n    viewInfo (...viewInfo) {\n        if (viewInfo.length) {\n            this._viewInfo = viewInfo[0];\n            return this;\n        }\n        return this._viewInfo;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GridLayout\n     */\n    setViewInformation () {\n        const {\n            rowPointer,\n            columnPointer,\n            border\n        } = this.config();\n        const viewMatricesInfo = getViewMatrices(this, rowPointer, columnPointer);\n        const layoutDimensions = getViewMeasurements(this);\n        layoutDimensions.border = border;\n        this.viewInfo({\n            viewMatricesInfo,\n            layoutDimensions\n        });\n        return this;\n    }\n\n    /**\n     * Renders the layout\n     *\n     * @return {Object} current instance\n     * @memberof GridLayout\n     */\n    renderGrid (mountPoint) {\n        this.mountPoint(mountPoint);\n        if (!this.mountPoint()) {\n            return this;\n        }\n        const viewInfo = this.viewInfo();\n        const {\n                viewMatricesInfo,\n                layoutDimensions\n            } = viewInfo;\n            // Render matrices\n        renderMatrices(this, viewMatricesInfo.matrices, layoutDimensions);\n        return this;\n    }\n}\n","import RowMatrix from '../visual-matrix/row-matrix';\nimport ColumnMatrix from '../visual-matrix/column-matrix';\n\nexport const generateVisualMatrices = (context, matrices) => {\n    // Set of matrices for layout is generated starting with the left matrix\n    let leftMatrix = [];\n    let rightMatrix = [];\n    let topMatrix = [];\n    let bottomMatrix = [];\n    let begColCells;\n    let endColCells;\n    const {\n        isRowSizeEqual,\n        isColumnSizeEqual,\n        gutterSpace,\n        distribution,\n        border,\n        breakPage,\n        priority\n    } = context.config();\n    const {\n        minUnitHeight,\n        minUnitWidth\n    } = context.measurement();\n    const { top, center, bottom } = matrices;\n    const [topLeft, topColumns, topRight] = top;\n    const [leftRows, valueMatrix, rightRows] = center;\n    const [bottomLeft, bottomColumns, bottomRight] = bottom;\n\n    if (leftRows.length > 0) {\n        // If no left matrix is present, context will be empty\n        leftMatrix = [...topLeft, ...leftRows, ...bottomLeft];\n    }\n    if (rightRows.length > 0) {\n        // If no right matrix is present, context will be empty\n        rightMatrix = [...topRight, ...rightRows, ...bottomRight];\n    }\n    if (topColumns.length > 0 && topColumns[0].length > 0) {\n        // If no top matrix is present, context will be empty\n        topMatrix = topColumns.map((d, i) => [...topLeft[i], ...d, ...topRight[i]]);\n    }\n    if (bottomColumns.length > 0 && bottomColumns[0].length > 0) {\n        // If no bottom matrix is present, context will be empty\n        bottomMatrix = bottomColumns.map((d, i) => [...bottomLeft[i], ...d, ...bottomRight[i]]);\n    }\n\n    context.rowMatrix(new RowMatrix([leftMatrix, rightMatrix], {\n        isDistributionEqual: isRowSizeEqual,\n        distribution: distribution.rows,\n        gutter: gutterSpace.rows,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.row,\n        breakPage: breakPage.rows.map(e => e + Math.max(topLeft.length, topRight.length)),\n        extraCellLengths: [topLeft.length, bottomLeft.length]\n    }));\n\n    if (topLeft.length > 0) {\n        begColCells = topLeft[0].length;\n    } else {\n        begColCells = bottomLeft.length > 0 ? bottomLeft[0].length : 0;\n    }\n\n    if (topRight.length > 0) {\n        endColCells = topRight[0].length;\n    } else {\n        endColCells = bottomRight.length > 0 ? bottomRight[0].length : 0;\n    }\n\n    context.columnMatrix(new ColumnMatrix([topMatrix, bottomMatrix], {\n        isDistributionEqual: isColumnSizeEqual,\n        distribution: distribution.columns,\n        gutter: gutterSpace.columns,\n        isTransposed: true,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.col,\n        breakPage: breakPage.columns,\n        extraCellLengths: [begColCells, endColCells]\n    }));\n    context.centerMatrix(valueMatrix);\n\n    return matrices;\n};\n","import { ERROR_MSG } from 'muze-utils';\n/**\n * An Interface to be implemented if the transaction support is necessary. This class ensures reactivity to\n * global properties.\n */\nexport default class TransactionSupport {\n    /**\n     * Property accessor for data member of the class. Data is passed to the system by calling this method.\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for width of the class. Width is passed as an integer.\n     */\n    width () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for height of the class. Height is passed as an integer.\n     */\n    height () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for config of the class. Config is passed as an object.\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n}\n","import { TOP, BOTTOM, LEFT, TITLE, SUB_TITLE, GROUP, LAYOUT, LEGEND } from '../constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const arrangeComponents = (context) => {\n    const legendConfig = context.config().legend;\n    const titleConfig = context.title()[1];\n    const subtitleConfig = context.subtitle()[1];\n    const titleLayouts = {\n        [`${TOP}-${TOP}`]: [TITLE, SUB_TITLE, GROUP],\n        [`${BOTTOM}-${BOTTOM}`]: [GROUP, SUB_TITLE, TITLE],\n        [`${TOP}-${BOTTOM}`]: [TITLE, GROUP, SUB_TITLE],\n        [`${BOTTOM}-${TOP}`]: [SUB_TITLE, GROUP, TITLE]\n    };\n    const legendLayouts = [\n        [LEGEND, LAYOUT],\n        [LAYOUT, LEGEND]\n    ];\n    const titlePosition = titleConfig.position || TOP;\n    const subtitlePosition = subtitleConfig.position || TOP;\n\n    return {\n        headers: titleLayouts[`${titlePosition}-${subtitlePosition}`],\n        legends: legendConfig.position === LEFT || legendConfig.position === TOP ?\n        legendLayouts[0] : legendLayouts[1]\n    };\n};\n","/**\n * Flag to specify whether direction is vertical.\n */\nexport const MARGIN = 'margin';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const SPACE_FIXER = 'spaceFixer';\nexport const CLASSPREFIX = 'muze';\nexport const VERTICAL_ALIGN = 'verticalAlign';\nexport const TEXT_ALIGN = 'textAlign';\nexport const IS_OFFSET = 'isOffset';\nexport const MIDDLE = 'middle';\nexport const BASELINE = 'baseline';\nexport const SHOW = 'show';\nexport const CENTER = 'center';\nexport const TEXT = 'text';\nexport const HEADER = 'header';\nexport const HEIGHT = 'height';\nexport const WIDTH = 'width';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const FIELDS = 'fields';\nexport const TRANSFORM = 'transform';\nexport const LAYER_DEF = 'layerDef';\nexport const CONFIG = 'config';\nexport const DETAIL_FIELDS = 'detailFields';\nexport const MAX_LINES = 'maxLines';\nexport const MIN_CHARS = 'minCharacters';\nexport const ROTATION = 'rotation';\n\nexport const TEXT_CELL = 'text-cell';\nexport const AXIS_CELL = 'axis-cell';\nexport const GEOM_CELL = 'geom-cell';\nexport const BLANK_CELL = 'blank-cell';\n","// eneum to refer to simple cell\nexport const SIMPLE = 'simple';\n// eneum to refer to header cell\nexport const TEXT = 'text';\n// enum to refer to axis cell\nexport const AXIS = 'axis';\n// enum to refer to visual cell\nexport const GEOM = 'geom';\n// enum to refer blank cell\nexport const BLANK = 'blank';\n","import {\n    ERROR_MSG,\n    getUniqueId,\n    mergeRecursive\n} from 'muze-utils';\nimport { SIMPLE } from './enums/cell-type';\n\n/**\n * This file declares a class that is used as an interface to create new\n * SimpleCell elements.\n * @module SimpleCell\n */\n/**\n * Base class for all table cells.\n *\n * @interface\n * @class SimpleCell\n */\nclass SimpleCell {\n\n    /**\n     * Creates an instance of SimpleCell.\n     *\n     * @param {*} config The input configuration.\n     * @memberof SimpleCell\n     */\n    constructor (config) {\n        this._id = getUniqueId();\n\n        const defConfig = mergeRecursive({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(defConfig, config || {});\n\n        this._mount = null;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     */\n    get type () {\n        return SIMPLE;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     * @return {Object} Default config for the placeholder\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the value contained by the SimpleCell.\n     *\n     * @memberof SimpleCell\n     */\n    valueOf () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a unique identifier for the instance used\n     * to control selective rendering.\n     *\n     * @memberof SimpleCell\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized representation of the instance.\n     *\n     * @memberof SimpleCell\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns an object with width and height fields\n     * specifying the space taken up by this metod.\n     *\n     * @memberof SimpleCell\n     */\n    getLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Method used to set the space available to render the SimpleCell\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @memberof SimpleCell\n     */\n    setAvailableSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    remove () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n\nexport default SimpleCell;\n","/**\n * This file exports variables that are used as defaults for\n * the placeholders\n */\nimport * as CONSTANTS from './constants';\n\n /**\n * Default Configuration for the cells\n * @return {Object} Default configuration\n */\nexport const DEFAULT_CONFIG = {\n    [CONSTANTS.MARGIN]: {\n        [CONSTANTS.LEFT]: 0,\n        [CONSTANTS.RIGHT]: 0,\n        [CONSTANTS.TOP]: 0,\n        [CONSTANTS.BOTTOM]: 0\n    },\n    [CONSTANTS.SPACE_FIXER]: 2,\n    [CONSTANTS.IS_OFFSET]: false,\n    [CONSTANTS.VERTICAL_ALIGN]: null,\n    [CONSTANTS.TEXT_ALIGN]: CONSTANTS.CENTER,\n    [CONSTANTS.SHOW]: true,\n    [CONSTANTS.MAX_LINES]: 0,\n    [CONSTANTS.MIN_CHARS]: 0,\n    [CONSTANTS.ROTATION]: null\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { GEOM, TEXT, AXIS, BLANK } from './enums/cell-type';\n\nconst DEFAULT_PROPS = {\n    mount: {},\n    availHeight: {},\n    availWidth: {},\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config, value)\n    },\n    logicalSpace: {},\n    minSpacing: {},\n    source: {}\n};\n\nconst geomProps = {\n    data: {},\n    caption: {},\n    config: {},\n    axes: {\n        sanitization: (context, value) => Object.assign(context._axes, value)\n    },\n    facetByFields: {},\n    fields: {},\n    transform: {},\n    layerDef: {},\n    detailFields: {}\n};\n\nconst textProps = {\n    smartText: {}\n};\nexport const PROPS = {\n    [GEOM]: mergeRecursive(geomProps, DEFAULT_PROPS),\n    [TEXT]: mergeRecursive(textProps, DEFAULT_PROPS),\n    [AXIS]: DEFAULT_PROPS,\n    [BLANK]: DEFAULT_PROPS\n};\n","/**\n * This file declares a class that represents a table cell\n * used to house an axis.\n * @module VisualCell\n */\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport { CLASSPREFIX, HEIGHT, WIDTH, AXIS_CELL } from './enums/constants';\nimport SimpleCell from './simple-cell';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { AXIS } from './enums/cell-type';\nimport { PROPS } from './props';\n\n/**\n * Computes the logical space of the an axis instance within an axis cell\n *\n * @param {Object} context Required to get the needed parameters to compute axis space\n * @return {Object} Returns the logical space for axis\n */\nconst computeAxisSpace = (context) => {\n    let logicalWidth;\n    let logicalHeight;\n    const axis = context.source();\n    const {\n        spaceFixer,\n        margin\n    } = context.config();\n    const {\n        width,\n        height\n    } = axis.getLogicalSpace();\n    const {\n            show\n        } = axis.config();\n    if (show === true) {\n        logicalHeight = Math.floor(height + margin.top + margin.bottom + spaceFixer);\n        logicalWidth = Math.floor(width + margin.left + margin.right + spaceFixer);\n    } else {\n        [logicalWidth, logicalHeight] = [width, height];\n    }\n    return {\n        width: logicalWidth,\n        height: logicalHeight\n    };\n};\n\n/**\n * Represents an axis cell.\n *\n * @class Axis\n */\nclass AxisCell extends SimpleCell {\n\n    /**\n     * Creates an instance of AxisCell.\n     *\n     * @param {Object} config The input config.\n     * @memberof AxisCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._axis = null;\n        this._availHeight = null;\n        this._availWidth = null;\n        this._logicalSpace = null;\n\n        generateGetterSetters(this, PROPS[AXIS]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof AxisCell\n     */\n    get type () {\n        return AXIS;\n    }\n\n    /**\n     * This method return the value conatined by this SimpleCell.\n     *\n     * @return {SimpleAxis | ColorAxis} Instance of SimpleAxis or ColorAxis.\n     * @memberof AxisCell\n     */\n    valueOf () {\n        return this.source().id;\n    }\n\n    /**\n     * This method return the unique identififer of the axis\n     *\n     * @return {string} Id of the axis.\n     * @memberof AxisCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Retrns the serialized representation of this cell.\n     *\n     * @return {Object}Object with serializable props.\n     * @memberof AxisCell\n     */\n    serialize () {\n        return {\n            type: AXIS,\n            axis: this.source().serialize()\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof AxisCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * return the space taken up by an axis element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof AxisCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeAxisSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @return {Instance} Returns current Instance\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        const {\n            margin,\n            isOffset\n        } = this.config();\n\n        if (width || height) {\n            this.source().setAvailableSpace(width, height, margin, isOffset);\n            this.source().logicalSpace(null);\n        } else {\n            this.source().resetLogicalSpace();\n        }\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the axis inside the axis cell.\n     *\n     * @param {HTMLElement} mount The mount point.\n     * @return {Selection} node where axis mounted\n     * @memberof AxisCell\n     */\n    /* istanbul ignore next */render (mount) {\n        if (!mount) {\n            return this;\n        }\n        const axis = this.source();\n        const availHeight = this.availHeight();\n        const availWidth = this.availWidth();\n        const {\n            margin\n        } = this.config();\n        const {\n            top,\n            bottom,\n            left,\n            right\n        } = margin;\n        const {\n            show\n        } = axis.config();\n        const wrapperDiv = makeElement(selectElement(mount), 'div', [this], `${CLASSPREFIX}-${AXIS_CELL}`);\n        const selection = makeElement(wrapperDiv, 'svg', [1], `${CLASSPREFIX}-axis-container`);\n\n        this.mount(mount);\n        if (availWidth === 0 || !availWidth) {\n            selection.attr(WIDTH, `${0}px`);\n        }\n        if (availHeight === 0 || !availHeight) {\n            selection.attr(HEIGHT, `${0}px`);\n        }\n        wrapperDiv.style(WIDTH, `${show ? Math.floor(availWidth) : 0}px`)\n                        .style(HEIGHT, `${show ? Math.floor(availHeight) : 0}px`)\n                        .style('margin-top', top)\n                        .style('margin-bottom', bottom)\n                        .style('margin-left', left)\n                        .style('margin-right', right);\n\n        axis.mount(selection.node());\n        return selection;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Current instance of AxisCell\n     * @memberof AxisCell\n     */\n    remove () {\n        this.source() && this.source().remove();\n        this.mount() && this.mount().remove();\n        return this;\n    }\n}\n\nexport default AxisCell;\n\n","/**\n * This file declares a class that represents a BLANK element in a  table.\n * @module VisualCell\n */\nimport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    generateGetterSetters\n    } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { CLASSPREFIX, BLANK_CELL } from './enums/constants';\nimport { BLANK } from './enums/cell-type';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { PROPS } from './props';\n\n/**\n * Represents a table haeder.\n *\n * @class BLANK\n */\nclass BlankCell extends SimpleCell {\n\n    /**\n     * Creates an instance of BLANK.\n     * @param {Object} config The input configuration.\n     * @memberof BLANK\n     */\n    constructor (config) {\n        super(config);\n\n        generateGetterSetters(this, PROPS[BLANK]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof BlankCell\n     */\n    get type () {\n        return BLANK;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof BlankCell\n     */\n    valueOf () {\n        return this.id;\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof BlankCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the BLANK cell.\n     *\n     * @return {string} The unique identifier for the BLANK.\n     * @memberof BlankCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof BLANK\n     */\n    serialize () {\n        return {\n            type: BLANK\n        };\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof BLANK\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            return {\n                width: this.width || 0,\n                height: this.height || 0\n            };\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the BLANK cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof BLANK\n     */\n    /* istanbul ignore next */render (mount) {\n        if (mount) {\n            const { style } = this.config();\n            // append span element to mount point\n            this.mount(mount);\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id]);\n            elem.classed(`${CLASSPREFIX}-${BLANK_CELL}`, true);\n            elem.style('width', `${this.availWidth()}px`);\n            elem.style('height', `${this.availHeight()}px`);\n            elem.html('');\n            // apply style on the returned element\n            if (style) {\n                applyStyle(elem, style);\n            }\n        } return this;\n    }\n\n    /**\n     * Removes the cell(Disposal)\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\nexport default BlankCell;\n","/**\n * This file declares a class that represents a Text element in a  table.\n * @module VisualCell\n */\n\nimport {\n    selectElement,\n    makeElement,\n    getSmartComputedStyle,\n    generateGetterSetters\n} from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { TEXT } from './enums/cell-type';\nimport { PROPS } from './props';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { CLASSPREFIX, TOP, BOTTOM, LEFT, RIGHT, HEADER, WIDTH, TEXT_CELL } from './enums/constants';\nimport './text-cell.scss';\n\nconst setSmartText = (context) => {\n    const source = context.source();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       rotation\n   } = context.config();\n    const {\n        left,\n        right,\n        top,\n        bottom\n     } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const labelManager = context.dependencies().labelManager;\n\n    labelManager.setStyle(context._computedStyle);\n\n    !rotation && context.smartText(labelManager.getSmartText(source, availWidth, availHeight, false));\n    rotation && context.smartText(labelManager.getSmartText(source, availHeight, availWidth, true));\n\n    return context;\n};\n\n/**\n* Computes the Logical Space for the text\n*\n* @param {Object} context Required to get the needed parameters to compute text space\n* @return {Object} Logical space taken up by text\n* @memberof TextCell\n*/\nconst computeTextSpace = (context) => {\n    const { labelManager } = context.dependencies();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       show,\n       maxLines,\n       minCharacters\n   } = context.config();\n    const {\n       left,\n       right,\n       top,\n       bottom\n    } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const source = context.source();\n    const space = context.smartText();\n    const minText = new Array(minCharacters).fill('W').join('');\n    const _minTextSpace = labelManager.getOriSize(minText);\n\n    context.config({ rotation: false });\n    if (space.width > (availWidth || 0) && maxLines) {\n        space.height = space.oriTextHeight * maxLines;\n    }\n    if (availWidth && availWidth < space.width) {\n        space.width = _minTextSpace.width;\n    }\n    if (availWidth && availWidth < Math.min(_minTextSpace.width, space.oriTextWidth)) {\n        const smartSpace = labelManager.getSmartText(source, availHeight, _minTextSpace.height, true);\n        space.width = smartSpace.height;\n        space.height = smartSpace.width;\n        context.config({ rotation: true });\n        context.smartText(smartSpace);\n    }\n\n    if (show) {\n        return {\n            width: Math.ceil(space.width) + paddedWidth,\n            height: Math.ceil(space.height) + paddedHeight\n        };\n    } return {\n        width: 0,\n        height: 0\n    };\n};\n\n/**\n * Represents a table haeder.\n *\n * @class Text\n */\nclass TextCell extends SimpleCell {\n\n    /**\n     * Creates an instance of Text.\n     * @param {Object} config The input configuration.\n     * @param {string} dependencies Dependencies for the class(labelManager)\n     * @memberof Text\n     */\n    constructor (config, dependencies) {\n        super(config);\n\n        this._dependencies = dependencies;\n        this._className = this._config.className ||\n                    (this._config.type === HEADER ? `${CLASSPREFIX}-${HEADER}-cell` : `${CLASSPREFIX}-${TEXT}-cell`);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'), this._className);\n        this._dependencies.labelManager.setStyle(this._computedStyle);\n        generateGetterSetters(this, PROPS[TEXT]);\n        const space = this._dependencies.labelManager.getOriSize('w');\n        this.minSpacing({ width: Math.floor(space.width * 3 / 4), height: Math.floor(space.height / 2) });\n        setSmartText(this);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof TextCell\n     */\n    get type () {\n        return TEXT;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof TextCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the Text cell.\n     *\n     * @return {string} The unique identifier for the Text.\n     * @memberof TextCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the dependencies of the instance\n     *\n     * @return {Object} Dependencies needed by the class\n     * @memberof TextCell\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof TextCell\n     */\n    serialize () {\n        return {\n            text: this.source(),\n            type: TEXT\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof TextCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof Text\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeTextSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        setSmartText(this);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the Text cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof Text\n     */\n    render (mount) {\n        const availWidth = this.availWidth();\n        const availHeight = this.availHeight();\n        const {\n            margin,\n            show,\n            verticalAlign,\n            textAlign,\n            rotation\n        } = this.config();\n\n        this.mount(mount);\n        if (show) {\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id], `${CLASSPREFIX}-${TEXT_CELL}`);\n            const vAlign = verticalAlign || rotation ? 'middle' : 'top';\n            const {\n                width,\n                height\n            } = this.smartText();\n            const {\n                height: minHeightSpace\n            } = this.minSpacing();\n            const translation = {\n                top: width + minHeightSpace / 2,\n                middle: width / 2 + minHeightSpace,\n                bottom: minHeightSpace\n            };\n\n            container.style('vertical-align', vAlign);\n\n            // Set class name\n            elem.classed(this._className, true);\n\n            // Apply styles\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            elem.style('transform', rotation ? `translate(${height / 2}px,\n                ${translation[vAlign]}px) rotate(-90deg)` : '');\n            elem.style(WIDTH, availWidth ? `${availWidth}px` : '100%');\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((type) => {\n                elem.style(`padding-${type}`, `${margin[type]}px`);\n            });\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            // set the text as the innerHTML\n            this._dependencies.labelManager.setStyle(this._computedStyle);\n            elem.html(this._dependencies.labelManager.getSmartText(this.source(), availWidth, availHeight, true).text);\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\n\nexport default TextCell;\n","/**\n * This file declares a class that is used to represent a table cell\n * that houses a visual unit.\n * @module VisualCell\n */\n\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { GEOM } from './enums/cell-type';\nimport { PROPS } from './props';\nimport {\n    CLASSPREFIX, HEIGHT, WIDTH, DATA, AXES, FACET_BY_FIELDS, FIELDS, TRANSFORM, LAYER_DEF, CONFIG, GEOM_CELL,\n    DETAIL_FIELDS\n} from './enums/constants';\nimport { DEFAULT_CONFIG } from './enums/defaults';\n\n/**\n * Calculates the logical space of the cell\n *\n * @param {Object} context Required to get the needed parameters to compute unit space\n * @return {Object} Logical space taken up by the unit\n * @memberof GeomCell\n */\nconst computeGeomSpace = (context) => {\n    const config = context.source().config();\n    const { width, height } = config;\n    return {\n        width: Math.ceil(width),\n        height: Math.ceil(height + context.getCaptionSpace().height)\n    };\n};\n\n /**\n * This class represents a SimpleCell for visual unit.\n *\n * @class GeomCell\n */\nclass GeomCell extends SimpleCell {\n\n    /**\n     * Creates an instance of GeomCell.\n     * @param {Object} config The input configuration.\n     * @memberof GeomCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._unit = null;\n        this._layers = null;\n        this._axes = {};\n        this._datamodel = {};\n        this._facetByFields = {};\n        this._fields = null;\n        this._transform = null;\n        this._caption = null;\n\n        generateGetterSetters(this, PROPS[GEOM]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof GeomCell\n     */\n    get type () {\n        return GEOM;\n    }\n\n    /**\n     * This method return the value contained by this cell.\n     *\n     * @return {VisualUnit} Instance of visual unit contained by visual unit.\n     * @memberof GeomCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return the id of the\n     * visual unit housed by this cell.\n     *\n     * @return {string} The unique id of the visual unit.\n     * @memberof GeomCell\n     */\n    get id () {\n        return this.source().id();\n    }\n\n    /**\n     * This method return a serialized representation of\n     * this instance.\n     *\n     * @return {Object} Object with serializable props.\n     * @memberof GeomCell\n     */\n    serialize () {\n        return {\n            type: GEOM,\n            unit: this.source().serialize(),\n            caption: this.caption()\n        };\n    }\n\n    /**\n     * return the default configuration for the geom cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof GeomCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * Updates the model based on the changed parameters\n     *\n     * @return {Instance} return instance\n     * @memberof GeomCell\n     */\n    updateModel () {\n        const unit = this.source();\n        unit.lockModel();\n        [LAYER_DEF, TRANSFORM, AXES, FIELDS, CONFIG, DATA, AXES, FACET_BY_FIELDS, DETAIL_FIELDS].forEach((prop) => {\n            this[prop]() && unit[prop](this[prop]());\n        });\n        unit.unlockModel();\n        return this;\n    }\n\n    /**\n     * It gives the space taken by the caption of the unit\n     *\n     * @return {Object} return the space taken by caption\n     * @memberof GeomCell\n     */\n    getCaptionSpace () {\n        const caption = this.caption();\n\n        let captionSpace = { width: 0, height: 0 };\n        if (caption) {\n            captionSpace = caption.getLogicalSpace();\n        }\n        return captionSpace;\n    }\n\n    /**\n     * return the space taken up by the element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof GeomCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeGeomSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space available to\n     * render the SimpleCell.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    setAvailableSpace (width, height) {\n        const unit = this.source();\n\n        this.availWidth(width);\n        this.availHeight(height);\n        unit.lockModel();\n        unit.width(width).height(height - this.getCaptionSpace().height);\n        unit.unlockModel();\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * his method is used to render the visual unit inside the provided cell.\n     *\n     * @param {HTMLElement} mount The mountpoint in the table.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    render (mount) {\n        if (mount) {\n            this.mount(mount);\n            const availHeight = this.availHeight();\n            const availWidth = this.availWidth();\n            const caption = this.caption();\n            const wrapperDiv = makeElement(selectElement(mount), 'div', [1], `${CLASSPREFIX}-${GEOM_CELL}`);\n\n            if (caption) {\n                const captionDom = makeElement(wrapperDiv, 'div', [caption], `${CLASSPREFIX}-unit-caption`).node();\n                caption.render(captionDom);\n            }\n            const selection = makeElement(wrapperDiv, 'div', [1], `${CLASSPREFIX}-unit`);\n            wrapperDiv.style(WIDTH, `${availWidth}px`).style(HEIGHT, `${availHeight}px`);\n            selection.style(WIDTH, `${availWidth}px`)\n                            .style(HEIGHT, `${availHeight - this.getCaptionSpace().height}px`);\n            this.source().mount(selection.node());\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Object} Current instance\n     * @memberof GeomCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        this.source().remove();\n        return this;\n    }\n}\n\nexport default GeomCell;\n","import AxisCell from './axis-cell';\nimport BlankCell from './blank-cell';\nimport TextCell from './text-cell';\nimport GeomCell from './geom-cell';\nimport SimpleCell from './simple-cell';\n\nimport * as CONSTANTS from './constants';\n\nexport const DEFAULT_PLACEHOLDERS = {\n    [CONSTANTS.SIMPLE_CELL]: SimpleCell,\n    [CONSTANTS.TEXT_CELL]: TextCell,\n    [CONSTANTS.AXIS_CELL]: AxisCell,\n    [CONSTANTS.GEOM_CELL]: GeomCell,\n    [CONSTANTS.BLANK_CELL]: BlankCell\n};\n\n","export const SIMPLE_CELL = 'SimpleCell';\nexport const TEXT_CELL = 'TextCell';\nexport const AXIS_CELL = 'AxisCell';\nexport const BLANK_CELL = 'BlankCell';\nexport const GEOM_CELL = 'GeomCell';\n\n","import { DEFAULT_PLACEHOLDERS } from './defaults';\n\n/**\n * Creates a registry for the cells, which can be used for\n * setting a new cell or getting the registered cells\n *\n * @return {Object} Setters and getters for registered cells\n */\nconst cellRegistry = () => {\n    const reg = DEFAULT_PLACEHOLDERS;\n    return {\n        set: (key, def) => {\n            if (key in reg) {\n                reg[key] = def;\n            }\n            return cellRegistry;\n        },\n        get: () => reg\n    };\n};\nexport default cellRegistry;\n","import { TextCell } from '@chartshq/visual-cell';\nimport { escapeHTML } from 'muze-utils';\nimport { TOP } from '../constants';\n\n/**\n *\n *\n * @param {*} rawContent\n *\n */\nconst resolveTitleSubTitleContent = (rawContent) => {\n    if (typeof rawContent === 'function' && !rawContent._sanitize) {\n        return rawContent();\n    }\n    return escapeHTML(rawContent());\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} cellType\n * @param {*} labelManager\n * @param {*} prevCell\n *\n */\nconst headerCreator = (config, cellType, labelManager, prevCell) => {\n    const {\n        content,\n        classPrefix,\n        maxLines\n    } = config;\n    const cell = prevCell || new TextCell(\n        {\n            type: cellType === 'title' ? 'header' : 'text',\n            className: `${classPrefix}-${cellType}-cell`\n        }, {\n            labelManager\n        })\n     .config({ maxLines }).minSpacing({ width: 0, height: 0 });\n\n    cell.source(content);\n    cell._minTickDiff = { height: 0, width: 0 };\n    let margin = {};\n    if (config.position === TOP) {\n        margin = { top: 0, bottom: config.padding };\n    } else {\n        margin = { top: config.padding, bottom: 0 };\n    }\n    cell.config({ margin });\n    return {\n        height: cell.getLogicalSpace().height,\n        cell\n    };\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} type\n * @param {*} labelManager\n * @param {*} cell\n *\n */\nconst createHeading = (config, type, labelManager, prevCell) => {\n    if (!config) { return ''; }\n\n    return headerCreator(\n        config,\n        type,\n        labelManager,\n        prevCell\n    );\n};\n\n/**\n *\n *\n * @param {*} context\n */\nexport const createHeaders = (context, canvasHeight, canvasWidth) => {\n    let headerHeight = 0;\n    const headers = {};\n\n    canvasHeight >= 200 && canvasWidth >= 200 && ['title', 'subtitle'].forEach((type) => {\n        const headerOptions = context[type]();\n        const content = resolveTitleSubTitleContent(headerOptions[0]);\n        if (content.length) {\n            const config = headerOptions[1];\n\n            config.width = context.width();\n            config.height = context.height();\n            config.classPrefix = context.config().classPrefix;\n            config.content = content;\n            config.classPrefix = context.config().classPrefix;\n\n            const { height, cell } = createHeading(config, type, context.dependencies().smartlabel,\n                context[`${type}Cell`]);\n\n            headers[`${type}Cell`] = cell;\n            context._composition[type] = cell;\n            headerHeight += height + config.padding;\n        }\n    });\n    return { headerHeight, headers };\n};\n\n","import { TextCell, AxisCell } from '@chartshq/visual-cell';\nimport {\n    VERTICAL, HORIZONTAL, LEFT, RIGHT, LEGEND_TYPE_MAP, PADDING, BORDER, MARGIN\n} from '../constants';\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n *\n */\nexport const legendCreator = (canvas) => {\n    let LegendCls;\n    const dataset = [];\n    const axes = canvas.getRetinalAxes();\n\n    Object.entries(axes).forEach((axisInfo) => {\n        const scale = axisInfo[1][0];\n        const scaleType = axisInfo[0];\n        const scaleProps = canvas[scaleType]();\n\n        if (scaleProps.field && scale) {\n            const {\n                type,\n                step\n            } = scale.config();\n\n            const stepMapper = typeof step === 'boolean' ? step : false;\n            LegendCls = LEGEND_TYPE_MAP[`${type}-${stepMapper}-${scaleType}`];\n            dataset.push({ scale, canvas, fieldName: scaleProps.field, LegendCls, scaleType });\n        }\n    });\n\n    return dataset;\n};\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n * @param {*} measurement\n * @param {*} prevLegends\n *\n */\nexport const legendInitializer = (legendConfig, canvas, measurement, prevLegends) => {\n    const legends = [];\n    const {\n        height,\n        width,\n        headerHeight\n    } = measurement;\n    const {\n        position,\n        align\n    } = legendConfig;\n\n    const legendInfo = legendCreator(canvas);\n\n    legendInfo.forEach((dataInfo, index) => {\n        let legend = {};\n\n        const legendMeasures = {};\n        const {\n                LegendCls,\n                scale,\n                fieldName,\n                scaleType\n            } = dataInfo;\n        const config = legendConfig[scaleType] || {};\n        const title = config.title || {};\n        title.text = title.text || fieldName;\n        if (config.show) {\n            config.position = position;\n            config.align = align;\n\n            if (prevLegends[index]) {\n                legend = prevLegends[index].legend;\n            } else {\n                legend = LegendCls.create({\n                    labelManager: canvas._dependencies.smartlabel,\n                    cells: {\n                        AxisCell, TextCell\n                    }\n                });\n            }\n            legendMeasures.maxHeight = align === VERTICAL ? (height - headerHeight) : height * 0.2;\n            legendMeasures.maxWidth = align === HORIZONTAL ? width : width * 0.2;\n            legendMeasures.width = Math.min(legendMeasures.maxWidth, config.width);\n            legendMeasures.height = Math.min(legendMeasures.maxHeight, config.height);\n\n            [PADDING, BORDER, MARGIN].forEach((e) => {\n                legendMeasures[e] = config[e];\n            });\n            legend.scale(scale)\n                            .title(title)\n                            .fieldName(fieldName)\n                            .config(config)\n                            .metaData(canvas.composition().visualGroup.getGroupByData().project([fieldName]))\n                            .measurement(legendMeasures)\n                            .canvasAlias(canvas.alias())\n                            .setLegendMeasures();\n\n            legends.push({ canvas, legend, scaleType });\n        }\n    });\n    return legends;\n};\n\n/**\n *\n *\n * @param {*} legends\n * @param {*} legendConfig\n * @param {*} availableHeight\n * @param {*} availableWidth\n *\n */\nexport const getLegendSpace = (legends, legendConfig, availableHeight, availableWidth) => {\n    const legendMeasures = legends.map(legendInfo => legendInfo.legend.measurement());\n    const legendSpace = { width: 0, height: 0 };\n\n    legendMeasures.forEach((space) => {\n        let height = 0;\n        let width = 0;\n        width = Math.min(space.width, space.maxWidth);\n        height = Math.min(space.height, space.maxHeight);\n\n        if (legendConfig.align === HORIZONTAL) {\n            if (legendSpace.width + width > availableWidth) {\n                legendSpace.width = availableWidth;\n                legendSpace.height += height;\n            } else {\n                legendSpace.width += width;\n                legendSpace.height = Math.max(legendSpace.height, height);\n            }\n        } else if (legendSpace.height + height > availableHeight) {\n            legendSpace.height = height;\n            legendSpace.width += width;\n        } else {\n            legendSpace.height += height;\n            legendSpace.width = Math.max(legendSpace.width, width);\n        }\n    });\n    if (legendConfig.align === HORIZONTAL) {\n        legendSpace.width = availableWidth;\n    }\n    return legendSpace;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} headerHeight\n *\n */\nexport const createLegend = (context, headerHeight, height, width) => {\n    const measurement = {\n        height,\n        width,\n        headerHeight\n    };\n    const { legend } = context.config();\n    const { show, position } = legend;\n\n    legend.classPrefix = context.config().classPrefix;\n    const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n\n    legend.show = show ? ((align === VERTICAL && width > 200) || (align === HORIZONTAL && height > 200)) : show;\n    legend.align = align;\n    return legendInitializer(legend, context, measurement, context.legends || []);\n};\n","export default class LayoutComponent {\n    constructor (name, dimensions, seed) {\n        this._seed = seed;\n        this._boundBox = {\n            height: dimensions.height,\n            width: dimensions.width,\n            top: null,\n            left: null\n        };\n        this._renderAt = null;\n        this._alignWith = null;\n        this._alignment = null;\n        this._target = null;\n        this._position = null;\n        this._componentName = name;\n        this._className = null;\n    }\n\n    getLogicalSpace () {\n        throw new Error('getLogicalSpace is not defined');\n    }\n\n    setSpatialConfig () {\n        throw new Error('setSpatialSpace is not defined');\n    }\n\n    name (param) {\n        if (param) {\n            this._componentName = param;\n        }\n        return this._componentName;\n    }\n\n    target (param) {\n        if (param) {\n            this._target = param;\n        }\n        return this._target;\n    }\n\n    position (param) {\n        if (param) {\n            this._position = param;\n        }\n        return this._position;\n    }\n\n    alignment (param) {\n        if (param) {\n            this._alignment = param;\n        }\n        return this._alignment;\n    }\n\n    alignWith (param) {\n        if (param) {\n            this._alignWith = param;\n        }\n        return this._alignWith;\n    }\n\n    renderAt (param) {\n        if (param) {\n            this._renderAt = param;\n        }\n        return this._renderAt;\n    }\n\n    boundBox (param) {\n        if (param) {\n            Object.assign(this._boundBox, param);\n        }\n        return this._boundBox;\n    }\n\n    className (param) {\n        if (param) {\n            this._className = param;\n        }\n        return this._className;\n    }\n\n    draw () {\n        throw new Error('draw is not defined');\n    }\n  }\n\n","import LayoutComponent from './layoutComponent';\n\nclass DummyComponent extends LayoutComponent {\n    getLogicalSpace () {\n        return {\n            width: this.boundBox().width,\n            height: this.boundBox().height\n        };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n        return this;\n    }\n\n    draw () {\n        if (!this.component) {\n            throw new Error(`Component not set for ${this.componentName}`);\n        }\n        this.component.mount(document.getElementById(this.renderAt)); // Change the draw method to component draw\n        return this;\n    }\n}\n\nexport default DummyComponent;\n","import { DEFAULT_CONFIG } from '../../../../muze/src/defaults';\n\nconst DEFAULT_WIDTH = 600;\nconst DEFAULT_HEIGHT = 400;\nconst DEFAULT_CLASS_NAME = `${DEFAULT_CONFIG.classPrefix}-layout-container-component`;\nconst NODE_PREFIX = `${DEFAULT_CONFIG.classPrefix}-layout-container`;\n\nexport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT,\n  DEFAULT_CLASS_NAME,\n  NODE_PREFIX\n};\n","export default class DefinitionModel {\n    constructor (config) {\n        this._host = config.host || null;\n        this._cut = config.cut || null;\n        this._ratioWeight = config.ratioWeight === 0 ? 0 : config.ratioWeight || 1;\n        this._preferred = config.preferred || false;\n        this._lanes = config.lanes || [];\n        this._remainingHeight = 0;\n        this._remainingWidth = 0;\n    }\n\n    host (host) {\n        if (host) {\n            this._host = host;\n        }\n        return this._host;\n    }\n\n    preferred (preferred) {\n        if (preferred) {\n            this._preferred = preferred;\n        }\n        return this._preferred;\n    }\n\n    cut (cut) {\n        if (cut) {\n            this._cut = cut;\n        }\n        return this._cut;\n    }\n\n    ratioWeight (ratioWeight) {\n        if (ratioWeight) {\n            this._ratioWeight = ratioWeight;\n        }\n        return this._ratioWeight;\n    }\n\n    lanes (lanes) {\n        if (lanes) {\n            this._lanes = lanes;\n        }\n        return this._lanes;\n    }\n\n    remainingHeight (remainingHeight) {\n        if (remainingHeight) {\n            this._remainingHeight = remainingHeight;\n        }\n        return this._remainingHeight;\n    }\n\n    remainingWidth (remainingWidth) {\n        if (remainingWidth) {\n            this._remainingWidth = remainingWidth;\n        }\n        return this._remainingWidth;\n    }\n}\n","import { NODE_PREFIX } from '../../constants/defaults';\nimport DefinitionModel from '../definition-manager/definitionModel';\nimport DummyComponent from '../../layout-component/dummy-component';\n/**\n * Compares two strings in lowercase\n *\n * @export\n * @param {string} value the value to be compared\n * @param {string} compareTo whom the value would be compared\n * @return {boolean} true if values are equal\n */\nexport function isEqual (value, compareTo) {\n    if (typeof value !== 'string' || typeof compareTo !== 'string') {\n        throw new TypeError('value and compareTo must be string');\n    }\n    return value.toLowerCase() === compareTo.toLowerCase();\n}\n\nexport const getNodeId = (() => {\n    let _uid = 0;\n    return () => `${NODE_PREFIX}-${++_uid}`;\n})();\n\nexport function yExtraSpace (node) {\n    let smallestHeight = 0;\n    if (node.getCutType() === 'v') {\n        smallestHeight = smallestExtraHeightHorizontally(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'h') {\n        node.children().forEach((child) => {\n            smallestHeight += yExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerHeight = node.boundBox().height;\n        const hostHeight = node.model().host().getLogicalSpace().height;\n\n        smallestHeight = containerHeight - hostHeight;\n        if (smallestHeight < 0) {\n            smallestHeight = 0;\n        }\n    } else {\n        smallestHeight = 0;\n    }\n    return smallestHeight;\n}\n\nexport function smallestExtraHeightHorizontally (node) {\n    let smallestHeight = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const h = yExtraSpace(child);\n        if (h < smallestHeight) {\n            smallestHeight = h;\n        }\n    });\n    return smallestHeight;\n}\n\nexport function xExtraSpace (node) {\n    let smallestWidth = 0;\n    if (node.getCutType() === 'h') {\n        smallestWidth = smallestExtraWidthVertically(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'v') {\n        node.children().forEach((child) => {\n            smallestWidth += xExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerWidth = node.boundBox().width;\n        const hostWidth = node.model().host().getLogicalSpace().width;\n        smallestWidth = containerWidth - hostWidth;\n        if (smallestWidth < 0) {\n            smallestWidth = 0;\n        }\n    } else {\n        smallestWidth = 0;\n    }\n    return smallestWidth;\n}\n\nexport function smallestExtraWidthVertically (node) {\n    let smallestWidth = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const w = xExtraSpace(child);\n        if (w < smallestWidth) {\n            smallestWidth = w;\n        }\n    });\n    return smallestWidth;\n}\n\nexport function determineBoundBox (bb, i, arr, instance) {\n    if (i) {\n    // if not first sibling, take boundbox from previous sibling\n        const lastSibling = arr[i - 1];\n        const { top: _top, left: _left, height: _height, width: _width } = lastSibling.boundBox();\n        return {\n            width: bb.width,\n            height: bb.height,\n\n            top: instance.parentCut() === 'h'\n        ? _top + _height : _top,\n\n            left: instance.parentCut() === 'h'\n        ? _left : _left + _width\n        };\n    }\n  // if first sibling, take boundbox from parent\n    const { top: _top, left: _left } = instance.parent().boundBox();\n    return {\n        width: bb.width,\n        height: bb.height,\n        top: _top,\n        left: _left\n    };\n}\n\n// prepares the targetComponent Map for target Mapping ie. where a component should lie\nexport function prepareTargetComponentMap (context) {\n    context.targetComponentMap(new Map());\n    context.componentMap().forEach((value) => {\n        if (context.targetComponentMap().has(value.target())) {\n            context.targetComponentMap().get(value.target()).push(value);\n        } else {\n            const temp = [];\n            temp.push(value);\n            context.targetComponentMap().set(value.target(), temp);\n        }\n    });\n}\n\nexport function getComponent (canvasComponent, componentName) {\n    const comp = canvasComponent.find(component => component.name() === componentName);\n    return (comp && comp !== -1) ? comp : null;\n}\nexport function createPlaceHolderComponent (height, width, position) {\n    const comp = new DummyComponent(0, { height, width });\n    comp.name('placeHolder');\n    comp.position(position);\n    return comp;\n}\n\nexport function placeComponent (definitionModel, component, isPreferred = false, isGridComponent = false) {\n    let cut = '';\n    let componentRatioWidth = 1;\n    let leftOvercomponentRationWidth = 1;\n    let leftHeight = 0;\n    let leftWidth = 0;\n\n    if (!component) {\n        return { first: definitionModel, second: definitionModel };\n    }\n\n    const { height: componentHeight, width: componentWidth } = component.getLogicalSpace();\n    const position = component.position();\n    if (position === 'top' || position === 'bottom') {\n        cut = 'h';\n        componentRatioWidth = componentHeight / definitionModel.remainingHeight();\n        leftHeight = definitionModel.remainingHeight() - componentHeight;\n        leftWidth = definitionModel.remainingWidth();\n    } else {\n        cut = 'v';\n        componentRatioWidth = componentWidth / definitionModel.remainingWidth();\n        leftWidth = definitionModel.remainingWidth() - componentWidth;\n        leftHeight = definitionModel.remainingHeight();\n    }\n    leftOvercomponentRationWidth = 1 - componentRatioWidth;\n\n// update parentModel\n    definitionModel.cut(cut);\n    const firstLaneConfig = {\n        host: component.name(),\n        cut: null,\n        ratioWeight: componentRatioWidth,\n        preferred: isGridComponent ? false : isPreferred,\n        lanes: []\n    };\n    const firstLane = new DefinitionModel(firstLaneConfig);\n    firstLane.remainingHeight(componentHeight);\n    firstLane.remainingWidth(componentWidth);\n\n    const secondLaneConfig = {\n        host: null,\n        cut: null,\n        ratioWeight: leftOvercomponentRationWidth,\n        preferred: isGridComponent ? false : !isPreferred,\n        lanes: []\n    };\n    const secondLane = new DefinitionModel(secondLaneConfig);\n    secondLane.remainingHeight(leftHeight);\n    secondLane.remainingWidth(leftWidth);\n    if (isPreferred) {\n        definitionModel.lanes([firstLane]);\n    } else if (position === 'top' || position === 'left') {\n        definitionModel.lanes([firstLane, secondLane]);\n    } else {\n        definitionModel.lanes([secondLane, firstLane]);\n    }\n    return { first: firstLane, second: secondLane };\n}\n\nexport function placeGridComponent (definitionModel, gridComponents) {\n    let tempDefModel = definitionModel;\n    const rows = gridComponents.length;\n    const column = rows ? gridComponents[0].length : 0;\n    const height = gridComponents.reduce((acc, val) => (acc + val[0].getLogicalSpace().height), 0);\n\n    for (let i = 0; i < column; i++) {\n        const iscolumnPreffered = i === column - 1;\n        const columnPlaceHolderComponent = createPlaceHolderComponent(height,\n                                                    gridComponents[0][i].getLogicalSpace().width, 'left');\n        const { first, second } = placeComponent(tempDefModel, columnPlaceHolderComponent, iscolumnPreffered);\n        tempDefModel = first;\n        for (let j = 0; j < rows; j++) {\n            const rowpreffred = j === (rows - 1);\n            tempDefModel = placeComponent(tempDefModel, gridComponents[j][i], rowpreffred, true).second;\n        }\n        tempDefModel = second;\n    }\n}\n\nexport function negotiateDimension (node) {\n    let preferred;\n    let cumultiveExtraSpaceAmt = 0;\n    let alteredDim;\n    let nonAlteredDim;\n\n    const childrenLength = node.children().length;\n\n    for (let index = 0; index < childrenLength; index++) {\n        let fn;\n        let extraSpaceAmt;\n        const child = node.children()[index];\n\n        if (child.parentCut() === 'h') {\n            fn = yExtraSpace;\n            alteredDim = 'height';\n            nonAlteredDim = 'width';\n        } else {\n            fn = xExtraSpace;\n            alteredDim = 'width';\n            nonAlteredDim = 'height';\n        }\n  // if vertical then get extra height from other node and push it to the preferred node.\n  // for horizontal cut the same thing is to be done with width\n        if (child.isPreferred()) {\n    // push extra space in sink. Execute it when all non preferred space are computed.\n            preferred = child;\n\n            continue; // eslint-disable-line no-continue\n        }\n  // reduce own height and save it in a var\n        cumultiveExtraSpaceAmt += (extraSpaceAmt = fn(child));\n        child.boundBox()[alteredDim] -= extraSpaceAmt;\n  // update nonaltered dim from parent for any change which happened during negotiation\n        child.boundBox()[nonAlteredDim] = child.parent().boundBox()[nonAlteredDim];\n\n        negotiateDimension(child);\n    }\n\n    if (preferred) {\n        preferred.boundBox()[alteredDim] += cumultiveExtraSpaceAmt;\n        preferred.boundBox()[nonAlteredDim] = preferred.parent().boundBox()[nonAlteredDim];\n        negotiateDimension(preferred);\n    }\n}\n\nexport function computePosition (node) {\n    node.children().forEach((child, i, children) => {\n        const boundBox = determineBoundBox(child.boundBox(), i, children, child);\n        child.boundBox(boundBox);\n        computePosition(child);\n    });\n}\n\nexport function allocateBoundingBox (node) {\n    const totalWeight = node.children()\n                            .map(child => child.model().ratioWeight())\n                            .reduce((carry, val) => carry + val, 0);\n\n    node.children().forEach((child, i, children) => {\n        const lastSibling = children[i - 1];\n        const ratio = child.model().ratioWeight() / totalWeight;\n\n        if (child.parentCut() === 'h') {\n            child.boundBox({\n                top: i ? lastSibling.boundBox().top + lastSibling.boundBox().height : 0,\n                left: child.parent().boundBox().left,\n                height: child.parent().boundBox().height * ratio,\n                width: child.parent().boundBox().width\n            });\n        } else {\n            child.boundBox({\n                top: child.parent().boundBox().top,\n                left: i ? lastSibling.boundBox().left + lastSibling.boundBox().width : 0,\n                height: child.parent().boundBox().height,\n                width: child.parent().boundBox().width * ratio\n            });\n        }\n        allocateBoundingBox(child);\n    });\n}\n\n","import { getNodeId } from '../helper';\nimport { LayoutComponent } from '../../layout-component';\n\nclass Node {\n    constructor (data) {\n        this._model = data;\n        this._parent = null;\n        this._children = [];\n        this._parentCut = null;\n        this._boundBox = {\n            top: null,\n            left: null,\n            height: null,\n            width: null\n        };\n\n        this._id = this._model.host() instanceof LayoutComponent && this._model.host().renderAt() ?\n                    this._model.host().renderAt() :\n                    getNodeId();\n    }\n\n    addChildren (entries) {\n        this._children.push(...entries);\n        entries.forEach((e) => { e.parent(this); });\n    }\n\n    isRoot () {\n        return this._parent === null;\n    }\n\n    isLeaf () {\n        return !this._children.length;\n    }\n\n    getCutType () {\n        return this._model.cut();\n    }\n\n    isPreferred () {\n        return !!this._model.preferred();\n    }\n\n    children (children) {\n        if (children) {\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    parent (parent) {\n        if (parent) {\n            this._parent = parent;\n        }\n        return this._parent;\n    }\n\n    parentCut (parentCut) {\n        if (parentCut) {\n            this._parentCut = parentCut;\n        }\n        return this._parentCut;\n    }\n\n    id (id) {\n        if (id) {\n            this._id = id;\n        }\n        return this._id;\n    }\n\n    model (model) {\n        if (model) {\n            this._model = model;\n        }\n        return this._model;\n    }\n\n    boundBox (bound) {\n        if (bound) {\n            this._boundBox = {\n                top: bound.top,\n                left: bound.left,\n                height: bound.height,\n                width: bound.width\n            };\n        }\n        return this._boundBox;\n    }\n  /**\n     * function to search a node and update it with the config provided.\n     * @param  {Object} nodeconfig\n     */\n    updateNode (nodeconfig) {\n        if (this._id === nodeconfig._id) {\n            this._model.cut(nodeconfig.cut);\n            this._model.ratioWeight(nodeconfig.ratioWeight);\n        } else {\n            this._children.forEach((node) => {\n                if (node._id === nodeconfig._id) {\n                    node.model.cut(nodeconfig.cut);\n                    node.model.ratioWeight(nodeconfig.ratioWeight);\n                    return;\n                }\n                this.searchNode(node, nodeconfig);\n            });\n        }\n    }\n\n  // Recursive function to search a node\n    searchNode (node, nodeconfig) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeconfig._id) {\n                childNode.model().cut(nodeconfig.cut);\n                childNode.model().ratioWeight(nodeconfig.ratioWeight);\n            } else {\n                this.searchNode(childNode, nodeconfig);\n            }\n        });\n    }\n\n  /**\n     * function to delete a node from tree Structure.\n     * @param  {String} nodeId - node Id of the Node\n     */\n    delete (nodeId) {\n        this._children.forEach((node) => {\n            if (node.id() === nodeId) {\n                const index = this._children.indexOf(node);\n                this._model.lanes().splice(index, 1);\n            }\n            this.deleteSearchNode(node, nodeId);\n        });\n    }\n\n  // Recursive function to search a node\n    deleteSearchNode (node, nodeId) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeId) {\n                const index = node.children().indexOf(childNode);\n                node.model().lanes().splice(index, 1);\n            } else {\n                this.deleteSearchNode(childNode, nodeId);\n            }\n        });\n    }\n}\n\nexport default Node;\n","import Node from '../tree';\nimport {\n    allocateBoundingBox,\n    negotiateDimension,\n    computePosition\n} from '../helper';\n\nexport default class LayoutModel {\n    constructor (measurements, config) {\n        this._measurements = measurements;\n        this._config = config;\n        this._root = this.createTree(this._config, null);\n        this.setBoundBox();\n    }\n\n    createTree (config, parent) {\n        const node = new Node(config);\n        if (parent) {\n            node.parentCut(parent.getCutType());\n            parent.addChildren([node]);\n        } else {\n            this._root = node;\n        }\n        for (const lane of config.lanes()) {\n            this.createTree(lane, node);\n        }\n\n        return this._root;\n    }\n\n    setBoundBox () {\n        this._root.boundBox({\n            top: 0,\n            left: 0,\n            width: this._measurements.width,\n            height: this._measurements.height\n        });\n        allocateBoundingBox(this._root);\n    }\n\n    setHostPosition (node) {\n        node.children().forEach((child) => {\n            LayoutModel.setHostSpatialConfig(child);\n            this.setHostPosition(child);\n        });\n    }\n\n    static setHostSpatialConfig (node) {\n        const bb = node.boundBox();\n        const host = node.model().host();\n        if (host && host.setSpatialConfig) {\n            const conf = {\n                x: bb.left,\n                y: bb.top,\n                width: bb.width,\n                height: bb.height,\n                renderAt: node.id()\n            };\n            host.setSpatialConfig(conf);\n        }\n    }\n\n    negotiate () {\n        negotiateDimension(this._root);\n        computePosition(this._root);\n        return this;\n    }\n\n    broadcast () {\n        this.setHostPosition(this._root);\n        return this;\n    }\n\n    tree () {\n        return this._root;\n    }\n}\n","/* eslint no-undef: \"off\" */\n/* eslint default-case: \"off\" */\nexport class Utils {\n    static isDOMElement (element) {\n        return element instanceof Element;\n    }\n\n    static getID (element) {\n        return element.id;\n    }\n\n    static getElement (id) {\n        return document.getElementById(id);\n    }\n\n    static findContainer (data) {\n        return data.filter(coordinate => coordinate.parent == null)[0];\n    }\n  /**\n   * static method to remove the div\n   * @param  {} divId - div ID to be removed.\n   */\n    static removeDiv (divId) {\n        if (document.getElementById(divId) !== null) { document.getElementById(divId).remove(); }\n    }\n}\n","import { DEFAULT_CLASS_NAME } from '../constants/defaults';\nimport { LayoutComponent } from '../layout-component';\n\nexport default class DataPoint {\n    constructor (node) {\n        this._node = node;\n        this._className = node.model().host() instanceof LayoutComponent ?\n                            node.model().host().className() : DEFAULT_CLASS_NAME;\n    }\n\n    node () {\n        return this._node;\n    }\n\n    hasHost () {\n        return this._node.model().host() instanceof LayoutComponent;\n    }\n\n    className () {\n        return this._className || DEFAULT_CLASS_NAME;\n    }\n}\n","import { getnodePoints } from './helper';\n\nexport class DataParser {\n    constructor (data) {\n        this._data = data;\n    }\n\n    defaultDataPointLogic () {\n        const nodepoints = [];\n        getnodePoints(this._data, nodepoints);\n        return nodepoints;\n    }\n\n}\n","import DataPoint from './data-point';\n\nexport const getnodePoints = (node, nodepoints) => {\n    const datapoint = new DataPoint(node);\n    nodepoints.push(datapoint);\n    node.children().forEach((child) => {\n        getnodePoints(child, nodepoints);\n    });\n};\n","import { DataParser } from './data-parser';\n\nexport class HTMLDataAdapter extends DataParser {\n    getCoordinates () {\n        return super.defaultDataPointLogic();\n    }\n}\n","export class Renderer {\n\n    initRenderer (node, tree) {\n        node.__logicalTree = tree;\n    }\n}\n","import { HTMLDataAdapter } from '../data-adapters/html-data';\nimport { Utils } from '../utils';\nimport { Renderer } from './renderer';\n\nexport class HTMLRenderer extends Renderer {\n    constructor (data) {\n        super();\n        this._data = data;\n        this._coordinates = new HTMLDataAdapter(this._data).getCoordinates();\n    }\n\n    createhtml (mount, className) {\n        const mainDiv = mount;\n        super.initRenderer(mainDiv, this._data); // Initialise node with layout id\n        this.parentDiv = this.createAndCustomiseParent(className);\n        this._coordinates.forEach((node) => {\n            if (node.hasHost()) {\n                const host = node.node();\n                this.parentDiv.appendChild(this.createAndPositionDiv({ ...host.boundBox(),\n                    id: host.id(),\n                    className: node.className() }));\n            }\n        });\n        mainDiv.appendChild(this.parentDiv);\n    }\n\n    createAndPositionDiv (config) {\n        const { top, left, height, width, className, id } = config;\n        const existingDiv = document.getElementById(id);\n        const div = existingDiv || document.createElement('div');\n        div.style.position = 'absolute';\n        div.style.left = `${left}px`;\n        div.style.top = `${top}px`;\n        div.style.height = `${height}px`;\n        div.style.width = `${width}px`;\n        div.id = id;\n        div.className = className;\n        return div;\n    }\n\n    createAndCustomiseParent (className) {\n        const container = Utils.findContainer(this._coordinates);\n        const host = container.node();\n        const parentDiv = this.createAndPositionDiv({ ...host.boundBox(),\n            id: host.id(),\n            className: container.className() });\n        parentDiv.className = className;\n        parentDiv.style.position = 'relative';\n        return parentDiv;\n    }\n\n    coordinates () {\n        return this._coordinates;\n    }\n}\n","import { HTMLRenderer } from '../renderers/html-renderer';\nimport { LayoutComponent } from '../layout-component';\n\nexport const getChildNode = (context, config) =>\n                        context.renderer().createAndPositionDiv(config);\n\nexport const findNode = (context, nodeID) =>\n                        context.renderer().coordinates().find(point => point.node().id() === nodeID);\n\nexport const renderHTML = (context) => {\n    context.renderer(new HTMLRenderer(context.data()));\n    context.renderer().createhtml(context.mount(), context.className());\n};\n\nexport const drawLayout = (context) => {\n    switch (context.renderer()) {\n    case 'html' :\n        renderHTML(context);\n        break;\n    default:\n        renderHTML(context);\n    }\n};\n\nexport const drawComponent = (componentData) => {\n    componentData.children().forEach((node) => {\n        const host = node.model().host();\n        if (host instanceof LayoutComponent) {\n            host.draw();\n        }\n        drawComponent(node);\n    });\n};\n\nexport const removeElement = (elemID) => {\n    document.removeElement(document.getElementById(elemID));\n};\n\nexport const resolveAligment = (context, componentData) => {\n    componentData.children().forEach((component) => {\n        const host = component.model().host();\n        if (host instanceof LayoutComponent && host.alignWith()) {\n            let newNodeConfig = {};\n            const point = findNode(context, component.id()).node();\n            const node = point.boundBox();\n            const refNode = findNode(context, context.componentMap().get(host.alignWith()).renderAt())\n                                .node()\n                                .boundBox();\n            switch (host.alignment()) {\n            case 'left':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(refNode.left - node.left))\n                };\n                break;\n\n            case 'right':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(node.left + node.width - (refNode.left + refNode.width)))\n                };\n                break;\n\n            case 'top':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: Math.abs(node.height - Math.abs(refNode.top - node.top)),\n                    width: node.width\n                };\n                break;\n\n            case 'bottom':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: Math.abs(node.top - refNode.top + refNode.height),\n                    width: node.width\n                };\n                break;\n\n            case 'h-center':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: refNode.width\n                };\n                break;\n\n            case 'v-center':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: refNode.height,\n                    width: node.width\n                };\n                break;\n            default:\n                break;\n            }\n    // check if model in parent component\n            Object.assign(newNodeConfig, { id: point.id(), className: host.className() });\n            context.renderer().createAndPositionDiv(newNodeConfig);\n            context.componentMap().get(host.name()).renderAt(component.id());\n            context.componentMap().get(host.name()).boundBox({\n                height: newNodeConfig.height,\n                width: newNodeConfig.width\n            });\n            // context.renderer().parentDiv.appendChild(childNode);\n        }\n        resolveAligment(context, component);\n    });\n};\n","import { Utils } from '../utils';\nimport { drawLayout, resolveAligment, drawComponent } from './helper';\n\nexport class DrawingManager {\n    constructor (data, renderer, container) {\n        this._data = data.tree;\n        this._componentMap = data.componentMap;\n        this._layoutClassName = data.layoutClassName;\n        this._renderer = renderer;\n        this._mount = Utils.isDOMElement(container) ? container : Utils.getElement(container);\n    }\n\n    draw () {\n        drawLayout(this);\n        resolveAligment(this, this._data);\n        drawComponent(this._data);\n        return this;\n    }\n\n    data (data) {\n        if (data) {\n            this._data = data;\n        }\n        return this._data;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    className (param) {\n        if (param) {\n            this._layoutClassName = param;\n        }\n        return this._layoutClassName;\n    }\n\n    renderer (param) {\n        if (param) {\n            this._renderer = param;\n        }\n        return this._renderer;\n    }\n\n    mount (param) {\n        if (param) {\n            this._mount = param;\n        }\n        return this._mount;\n    }\n}\n","import DefinitionModel from './definitionModel';\nimport { prepareTargetComponentMap, getComponent, placeComponent, placeGridComponent } from '../helper';\n\nexport default class DefinitionManager {\n    constructor (componentMap, sequence, totalHeight, totalWidth) {\n        this._componentMap = componentMap;\n        this._prioritySequence = sequence;\n        this._totalHeight = totalHeight;\n        this._totalWidth = totalWidth;\n        this._targetComponentMap = null;\n    }\n\n    // create the config model\n    generateConfigModel () {\n        prepareTargetComponentMap(this);\n        const canvasComponent = this._targetComponentMap.get('canvas');\n        const definitionModel = new DefinitionModel({});\n        let tempDefModel = definitionModel;\n        definitionModel.remainingHeight(this._totalHeight);\n        definitionModel.remainingWidth(this._totalWidth);\n\n        let componentRef = null;\n\n        this._prioritySequence.forEach((name) => {\n            componentRef = getComponent(canvasComponent, name);\n            if (name !== 'grid') {\n                tempDefModel = placeComponent(tempDefModel, componentRef).second;\n            } else {\n                tempDefModel = placeGridComponent(tempDefModel, componentRef.component);\n            }\n        });\n        return definitionModel;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    targetComponentMap (param) {\n        if (param) {\n            this._targetComponentMap = param;\n        }\n        return this._targetComponentMap;\n    }\n}\n","import { sanitizeConfig } from './helper';\n\nexport class LayoutDef {\n    constructor () {\n        this._componentMap = new Map();\n        this._layoutDefinition = null;\n    }\n\n    addComponent (component) {\n        this._componentMap.set(component.name(), component);\n    }\n\n    layoutDefinition (def) {\n        if (def) {\n            this._layoutDefinition = def;\n        }\n        return this._layoutDefinition;\n    }\n\n    addMultipleComponent (componentArray) {\n        componentArray.forEach((comp) => {\n            this.addComponent(comp);\n        });\n    }\n\n    sanitizedDefinition () {\n        sanitizeConfig(this, this._layoutDefinition);\n        return this.layoutDefinition();\n    }\n\n    componentMap () {\n        return this._componentMap;\n    }\n    resetComponentMap () {\n        this._componentMap.clear();\n    }\n}\n","import DefinitionManager from '../layout-definition/definition-manager';\n\nexport function sanitizeConfig (context, hostObj) {\n    const hostID = hostObj.host();\n    if (hostObj.lanes() && hostObj.lanes().length) {\n        hostObj.lanes().forEach(childHost => sanitizeConfig(context, childHost));\n    }\n    if (hostID != null && typeof (hostID) === 'string') {\n        if (context.componentMap().get(hostID) !== undefined) {\n            hostObj.host(context.componentMap().get(hostID));\n        }\n    }\n}\n\nexport function calLayOutDef (context) {\n    const { height, width } = context.dimension();\n    const defManager = new DefinitionManager(context.layoutDef().componentMap(),\n                                              context.prioritySequence(),\n                                              height,\n                                              width);\n    const genLayoutdef = defManager.generateConfigModel();\n    return genLayoutdef;\n}\n","import {\n  LayoutModel\n} from '../layout-definition';\n\nimport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT\n} from '../constants/defaults';\n\nimport { DrawingManager } from '../drawing-manager';\nimport { Utils } from '../utils';\nimport { LayoutDef } from './layout-def';\nimport { calLayOutDef } from './helper';\n\nexport default class LayoutManager {\n    constructor (conf) {\n        this._renderAt = conf.renderAt;\n        this._layoutClassName = conf.className;\n        this._dimension = {\n            width: conf.width || DEFAULT_WIDTH,\n            height: conf.height || DEFAULT_HEIGHT\n        };\n\n        this._skeletonType = conf.skeletonType || 'html';\n        this._layoutDefinition = null;\n        this._layoutDef = new LayoutDef();\n        this._drawingManager = null;\n        this._prioritySequence = [];\n        this.tree = null;\n        this._rootNodeID = null;\n    }\n\n    layoutDef (param) {\n        if (param) {\n            this._layoutDef = param;\n        }\n        return this._layoutDef;\n    }\n\n    prioritySequence (param) {\n        if (param) {\n            this._prioritySequence = param;\n        }\n        return this._prioritySequence;\n    }\n\n    dimension (param) {\n        if (param) {\n            Object.assign(this._dimension, param);\n        }\n        return this._dimension;\n    }\n\n    addComponent (component) {\n        this._layoutDef.addComponent(component);\n    }\n\n    addMultipleComponent (componentArray) {\n        this._layoutDef.addMultipleComponent(componentArray);\n    }\n\n    resetNode (node) {\n        if (this.con) {\n            this.con.resetNode(node);\n        }\n    }\n\n  /**\n   * function to update the node and rerender the layout.\n   * @param  {} config - node configuration to change.\n   */\n    updateNode (config) {\n        this.tree.updateNode(config);\n        this._layoutDefinition = this.tree.model;\n        this.compute();\n    }\n\n    compute () {\n        //----\n        if (Utils.isDOMElement(this._renderAt)) {\n            this._renderAt._layout = this;\n        } else {\n            document.getElementById(this._renderAt)._layout = this;\n        }\n        //-----\n        this._layoutDefinition = calLayOutDef(this);\n        this._layoutDef.layoutDefinition(this._layoutDefinition);\n        this._layoutDefinition = this._layoutDef.sanitizedDefinition();\n        this._layout = new LayoutModel({\n            width: this._dimension.width,\n            height: this._dimension.height\n        },\n            this._layoutDefinition);\n        this.tree = this._layout.negotiate().tree();\n        this._layout.broadcast();\n        this._drawingManager = new DrawingManager({\n            tree: this.tree,\n            componentMap: this._layoutDef.componentMap(),\n            layoutClassName: this._layoutClassName\n        }, this._skeletonType, this._renderAt);\n\n        if (this._rootNodeID) {\n            this.tree.id(this._rootNodeID);\n        } else {\n            this._rootNodeID = this.tree.id();\n        }\n    // this will draw all the components by calling their draw method\n        this._drawingManager.draw();\n    }\n\n    getRootNodeId () {\n        return this._rootNodeID;\n    }\n\n  /**\n  * This function takes the LayoutComponents and Register them in component store\n  * @param {Array<LayoutComponent>} layoutComponents\n  */\n    registerComponents (layoutComponents) {\n        this._prioritySequence.length = 0;\n        this._layoutDef.resetComponentMap();\n        layoutComponents.forEach((container) => {\n            if (container) {\n                this._prioritySequence.push(container.name());\n                this.addComponent(container);\n                if (container.name() === 'grid') {\n                    container.component.forEach((componentArr) => {\n                        componentArr.forEach((compo) => {\n                            this.addComponent(compo);\n                        });\n                    });\n                }\n            }\n        });\n        return this;\n    }\n\n    getComponent (componentName) {\n        return this._layoutDef.componentMap().get(componentName);\n    }\n\n    renderAt (mount) {\n        if (mount) {\n            this._renderAt = mount;\n        }\n        return this._renderAt;\n    }\n}\n","import { LayoutComponent } from '../../../../layout/src/tree-layout';\n\nexport default class MuzeComponent extends LayoutComponent {\n    getLogicalSpace () {\n        const { width, height } = this.boundBox();\n        return { width, height };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n    }\n\n    getBoundBox () {\n        return this.boundBox();\n    }\n\n    updateWrapper () {\n        throw Error('Update is not implemented');\n    }\n\n    setParams () {\n        throw Error('set params is not implemented');\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport { LEFT } from '../../constants';\n\nexport default class HeaderComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    renderHeader (container) {\n        const layoutConfig = this.params.config;\n        container = selectElement(container);\n        const { align } = layoutConfig;\n        const sel = container\n          .selectAll(`.${layoutConfig.classPrefix}-inner-container`)\n          .data([this.name]);\n        sel.exit().remove();\n        const selEnter = sel.enter().append('div');\n\n        const cont = selEnter.merge(sel);\n        cont.classed(`${layoutConfig.classPrefix}-inner-container`, true);\n        const { height, width } = this.boundBox();\n        this.component.setAvailableSpace(width, height);\n\n        this.component && this.component.render(cont.node());\n\n        cont.selectAll('div').classed(`${layoutConfig.classPrefix}-inner-content`, true);\n        cont.style('width', `${100}%`);\n\n        if (layoutConfig && this.component) {\n            cont.style('float', LEFT)\n                            .style('text-align', align);\n                            // .style(`padding-${position === TOP ? BOTTOM : TOP}`, `${padding}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderHeader(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.component.getLogicalSpace());\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport {\n     LEFT, RIGHT, VERTICAL, HORIZONTAL\n} from '../../constants';\n\nexport default class LegendComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.measurement.legendSpace, 0);\n        this.setParams(params);\n    }\n\n    renderLegend (container) {\n        container = selectElement(container);\n        const sectionComponents = [];\n        const { legendSpace, height, width } = this.params.config.measurement;\n        const { position, classPrefix } = this.params.config;\n        const legendMount = makeElement(container, 'div', [this.components],\n                                        `${classPrefix}-inner-content`, {}, d => d);\n        legendMount.classed(`${classPrefix}-legend`, true);\n        const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n        const legWidth = align === VERTICAL ? legendSpace.width : width;\n        const legHeight = align === VERTICAL ? height : legendSpace.height;\n\n        [container, legendMount].forEach((elem) => {\n            elem.style('width', `${Math.floor(legWidth)}px`)\n                            .style('height', `${legHeight}px`)\n                            .style('float', LEFT);\n        });\n\n        if (align === VERTICAL) {\n            let sections = -1;\n            let currHeight = legHeight;\n            let currWidth = 0;\n\n            this.components.forEach((legendInfo) => {\n                const leg = legendInfo.legend;\n                if (leg.measurement().height > currHeight) {\n                    sections++;\n                    currWidth = 0;\n                    currHeight = legHeight;\n                } else {\n                    sections < 0 && sections++;\n                }\n                sectionComponents[sections] = sectionComponents[sections] || [];\n                currHeight -= Math.min(leg.measurement().height, currHeight);\n                currWidth = Math.max(Math.min(leg.measurement().width, leg.measurement().maxWidth), currWidth);\n                sectionComponents[sections].push({\n                    legend: leg,\n                    legendHeight: legHeight,\n                    legendWidth: currWidth\n                });\n            });\n\n            const mount = makeElement(legendMount, ['div'], sectionComponents, `${classPrefix}-legend-section`);\n            // mount.each((d, i) => selectElement(this).classed(`${classPrefix}-legend-section-${i}`, true));\n            mount.classed(`${classPrefix}-legend-vertical-section`, true)\n                            .style('width', d => `${d[0].legendWidth}px`);\n            makeElement(mount, ['div'], d => d, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) {\n                                d.legend.mount(this);\n                            })\n                            .style('width', d => `${d.legendWidth}px`);\n        } else {\n            const mount = makeElement(legendMount, 'div', [1], `${classPrefix}-legend-section`);\n            mount.classed(`${classPrefix}-legend-horizontal-section`, true);\n            mount.classed(`${classPrefix}-legend-section-${0}`, true)\n                            .style('width', `${legWidth}px`);\n\n            makeElement(mount, 'div', this.components, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) { d.legend.mount(this); })\n                            .style('width', d => `${d.legend.measurement().width}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderLegend(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.measurement.legendSpace);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.components = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n}\n","import { selectElement, makeElement } from 'muze-utils';\nimport { cellSpanMaker } from '../../../../layout/src/grid-layout/span-maker';\nimport {\n     TOP, LEFT, RIGHT, BOTTOM, CENTER, HEIGHT, WIDTH, ROW_SPAN, COL_SPAN\n} from '../../../../layout/src/enums/constants';\nimport { BLANK_BORDERS } from '../../../../layout/src/grid-layout/defaults';\nimport MuzeComponent from './muze-chart-component';\n\nexport default class MatrixComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n        this.className(params.config.className);\n    }\n\n    renderMatrix (mountPoint) {\n        // Creating containers for each matrix individually\n        const classPrefix = this.params.config.classPrefix;\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        // const dimensions = this.params.config.dimensions;\n        const border = this.params.config.border;\n\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${row}-${column + 1}`)\n                .classed(`${classPrefix}-grid-${row}`, true)\n                .classed(`${classPrefix}-grid`, true);\n\n        const { viewMatrix, spans } = cellSpanMaker(this.component, row, column);\n        if (row !== CENTER) {\n            containerForMatrix.style(WIDTH, `${this.getLogicalSpace().width}px`);\n            containerForMatrix.style(HEIGHT, `${this.getLogicalSpace().height}px`);\n        }\n\n        // Rendering the table components\n        const { cells } = this.renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        if (row === CENTER && spans) {\n            cells.attr(ROW_SPAN, function (cell, colIndex) {\n                const placeholder = cell.placeholder;\n                selectElement(this).style('height', `${placeholder.availHeight() + border.width}px`);\n                return spans[cell.rowIndex][colIndex];\n            });\n        } else if ((row === TOP || row === BOTTOM) && column === 1) {\n            cells.attr(COL_SPAN, function (cell, colIndex) {\n                const span = spans[cell.rowIndex][colIndex];\n                const placeholder = cell.placeholder;\n                if (span > 1) {\n                    placeholder.setAvailableSpace(placeholder.availWidth() * spans, placeholder.availHeight());\n                }\n                selectElement(this).style('height', `${placeholder.availHeight()}px`);\n                return span;\n            });\n        }\n        // Rendering content within placeholders\n        cells.each(function (cell) {\n            cell.placeholder && cell.placeholder.render(this);\n        }).exit().each((cell) => {\n            cell.placeholder && cell.placeholder.remove();\n        });\n        this.applyBorders(cells, border, row, column);\n    }\n\n    applyBorders (cells, border, type, index) {\n        const {\n          width,\n          style,\n          color,\n          showRowBorders,\n          showColBorders,\n          showValueBorders\n      } = border;\n        const borderStyle = `${width}px ${style}`;\n\n        if (type === CENTER && index === 1) {\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((borderType) => {\n                cells.style(`border-${borderType}`, `${borderStyle} ${showValueBorders[borderType] ?\n                  color : BLANK_BORDERS}`);\n            });\n        } else if (type === CENTER) {\n            this.applyRowBorders(cells, borderStyle, showRowBorders, color);\n        } else if (index === 1) {\n            this.applyColBorders(cells, borderStyle, showColBorders, color);\n        }\n    }\n\n    renderTable (mount, className, rowData) {\n        const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n        const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n        const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n        const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null).map(e =>\n                                  ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n        return { table, body, rows, cells };\n    }\n\n    applyRowBorders (cells, borderStyle, showBorders, color) {\n        [TOP, BOTTOM].forEach((borderType) => {\n            const style = `${borderStyle} ${showBorders[borderType] ? color : BLANK_BORDERS}`;\n            cells.style(`border-${borderType}`, style);\n        });\n    }\n\n    applyColBorders (cells, borderStyle, showBorders, color) {\n        [LEFT, RIGHT].forEach((borderType) => {\n            const style = `${borderStyle} ${showBorders[borderType] ? color : BLANK_BORDERS}`;\n            cells.style(`border-${borderType}`, style);\n        });\n    }\n\n    draw (container) {\n        this.renderMatrix(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(TOP);\n        this.className(params.config.className);\n    }\n}\n","import MuzeComponent from './muze-chart-component';\nimport MatrixComponent from './matrix-component';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\nexport default class GridComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.gridComponents = [];\n        this.setParams(params);\n    }\n\n    sanitizeGrid () {\n        let height = 0;\n        let width = 0;\n        const { viewMatricesInfo, layoutDimensions } = this.component.viewInfo();\n\n        for (let i = 0; i < 3; i++) {\n            if (!(this.gridComponents.length && this.gridComponents[i] instanceof Array)) {\n                this.gridComponents[i] = [];\n            }\n            for (let j = 0; j < 3; j++) {\n                const matrixDim = { height: layoutDimensions.viewHeight[i], width: layoutDimensions.viewWidth[j] };\n                const matrix = viewMatricesInfo.matrices[`${ROW_MATRIX_INDEX[i]}`][j];\n                const matrixName = `${ROW_MATRIX_INDEX[i]}-${COLUMN_MATRIX_INDEX[j]}`;\n                const matrixConfig = {\n                    dimensions: matrixDim,\n                    border: layoutDimensions.border,\n                    classPrefix: this.params.config.classPrefix,\n                    row: ROW_MATRIX_INDEX[i],\n                    column: j\n                };\n                if (this.gridComponents[i][j] instanceof MuzeComponent) {\n                    this.gridComponents[i][j].updateWrapper({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                } else {\n                    const matrixWrapper = new MatrixComponent({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                    this.gridComponents[i].push(matrixWrapper);\n                }\n                if (i === 0) {\n                    width += matrixDim.width;\n                }\n                if (j === 0) {\n                    height += matrixDim.height;\n                }\n            }\n        }\n        this.boundBox({ height, width });\n        this.component = this.gridComponents;\n    }\n\n    getBoundBox () {\n        const { top, left } = this.component[0][0].boundBox();\n        const { height, width } = this.boundBox();\n        return {\n            top,\n            left,\n            height,\n            width\n        };\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.className(params.config.className);\n        this.sanitizeGrid();\n    }\n}\n","import { MUZE_PREFIX } from '../constants';\n\nexport const TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 3,\n    className: `${MUZE_PREFIX}-title-container`\n};\n\nexport const SUB_TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 16,\n    maxLines: 2,\n    className: `${MUZE_PREFIX}-subtitle-container`\n};\n\nexport const GRID = 'grid';\n\nexport const CANVAS = 'canvas';\n\nexport const LAYOUT_ALIGN = {\n    TOP: 'top',\n    LEFT: 'left',\n    RIGHT: 'right',\n    BOTTOM: 'bottom'\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { arrangeComponents } from './component-resolver';\nimport { createHeaders } from './title-maker';\nimport { createLegend, getLegendSpace } from './legend-maker';\nimport { TOP, BOTTOM, LEFT, RIGHT, TITLE, SUB_TITLE, LEGEND } from '../constants';\nimport HeaderComponent from './components/headerComponent';\nimport LegendComponent from './components/legendComponent';\nimport GridComponent from './components/grid-component';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG, GRID, CANVAS, LAYOUT_ALIGN } from './defaults';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../layout/src/enums/constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const prepareLayout = (layout, renderDetails) => {\n    const { components, layoutConfig, measurement } = renderDetails;\n    const {\n        rows,\n        columns,\n        values,\n        cornerMatrices\n    } = components;\n    const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n    } = cornerMatrices;\n    if (rows && columns) {\n        layout.measurement(measurement)\n                        .config(layoutConfig)\n                        .matrices({\n                            top: [topLeft, columns[0], topRight],\n                            center: [rows[0], values, rows[1]],\n                            bottom: [bottomLeft, columns[1], bottomRight]\n                        })\n                        .triggerReflow();\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} mount\n *\n */\nexport const getRenderDetails = (context, mount) => {\n    let layoutConfig = mergeRecursive({}, context.config());\n    // Get height width of the mount point\n    let { height, width } = mount.getBoundingClientRect();\n    const heightAttr = context.height();\n    const widthAttr = context.width();\n    const visGroup = context.composition().visualGroup;\n    const {\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority,\n        rows,\n        columns,\n        values\n    } = visGroup.placeholderInfo();\n    const {\n        minWidth,\n        minHeight,\n        classPrefix,\n        showHeaders,\n        legend\n    } = context.config();\n    // Get title configuration\n    const titleConfig = context.title()[1];\n     // Get subtitle configuration\n    const subtitleConfig = context.subtitle()[1];\n    // Get legend position\n    const legendPosition = legend.position;\n    // Arrange components according to config\n    const layoutArrangement = arrangeComponents(context);\n\n    height = Math.floor(height);\n    width = Math.floor(width);\n\n    const availableHeightForCanvas = Math.max(heightAttr > 0 ? heightAttr : height, minHeight);\n    const availableWidthForCanvas = Math.max(widthAttr > 0 ? widthAttr : width, minWidth);\n\n    // Create headers and determine header height\n    const { headers, headerHeight } = createHeaders(context, availableHeightForCanvas, availableWidthForCanvas);\n\n    // Create legends and determine legend space\n    const legends = createLegend(context, headerHeight, availableHeightForCanvas, availableWidthForCanvas);\n    context._composition.legend = {};\n    legends.forEach((e) => {\n        context._composition.legend[e.scaleType] = e.legend;\n    });\n\n    const legendSpace = getLegendSpace(legends, legend, availableHeightForCanvas, availableWidthForCanvas);\n    const legendWidth = (legendPosition === LEFT || legendPosition === RIGHT) ? legendSpace.width : 0;\n    const legendHeight = (legendPosition === TOP || legendPosition === BOTTOM) ? legendSpace.height : 0;\n\n    // Set components for layouting\n    const components = {\n        headers,\n        legends,\n        canvases: [context],\n        rows,\n        columns,\n        values,\n        cornerMatrices: visGroup.cornerMatrices()\n    };\n    const measurement = {\n        mountSpace: {\n            height,\n            width\n        },\n        headerHeight,\n        legendSpace,\n        canvasWidth: availableWidthForCanvas,\n        canvasHeight: availableHeightForCanvas,\n        width: availableWidthForCanvas - legendWidth,\n        height: availableHeightForCanvas - headerHeight - legendHeight,\n        minUnitHeight: context.minUnitHeight(),\n        minUnitWidth: context.minUnitWidth()\n    };\n    layoutConfig = mergeRecursive(layoutConfig, {\n        classPrefix,\n        showHeaders,\n        border: mergeRecursive(visGroup.metaData().border, context.config().border),\n        layoutArrangement,\n        legend,\n        title: titleConfig,\n        subtitle: subtitleConfig,\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        mount,\n        priority\n    });\n    return {\n        layoutConfig,\n        components,\n        measurement\n    };\n};\n// const _getLegendOf = (legends, type) => legends.find(legend => legend.scaleType === type);\n\nexport const renderLayout = (layoutManager, grid, renderDetails) => {\n    // generate component wrappers\n\n    const { components, layoutConfig, measurement } = renderDetails;\n    const target = { target: CANVAS };\n    // title;\n    let titleWrapper = null;\n    if (components.headers && components.headers.titleCell) {\n        const title = components.headers.titleCell;\n        let titleConfig = layoutConfig.title;\n        titleConfig = Object.assign({}, titleConfig, { classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: LAYOUT_ALIGN.LEFT,\n            className: TITLE_CONFIG.className });\n        if (layoutManager.getComponent(TITLE)) {\n            titleWrapper = layoutManager\n                            .getComponent(TITLE)\n                            .updateWrapper({ name: TITLE, component: title, config: titleConfig });\n        } else {\n            titleWrapper = new HeaderComponent({ name: TITLE, component: title, config: titleConfig });\n        }\n    }\n\n     // subtitle\n    let subtitleWrapper = null;\n    if (components.headers && components.headers.subtitleCell) {\n        const subtitle = components.headers.subtitleCell;\n        let subtitleConfig = layoutConfig.subtitle;\n\n        subtitleConfig = Object.assign({}, subtitleConfig, { classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: LAYOUT_ALIGN.LEFT,\n            className: SUB_TITLE_CONFIG.className });\n        if (layoutManager.getComponent(SUB_TITLE)) {\n            subtitleWrapper = layoutManager\n                                .getComponent(SUB_TITLE)\n                                .updateWrapper({ name: SUB_TITLE, component: subtitle, config: subtitleConfig });\n        } else {\n            subtitleWrapper = new HeaderComponent({ name: SUB_TITLE, component: subtitle, config: subtitleConfig });\n        }\n    }\n\n    // color legend\n    let colorLegendWrapper = null;\n    if (components.legends && components.legends.length) {\n        const legendConfig = { ...layoutConfig.legend, ...target, measurement };\n\n        if (layoutManager.getComponent(LEGEND)) {\n            colorLegendWrapper = layoutManager\n                                .getComponent(LEGEND)\n                                .updateWrapper({\n                                    name: LEGEND,\n                                    component: components.legends,\n                                    config: legendConfig });\n        } else {\n            colorLegendWrapper = new LegendComponent({\n                name: LEGEND,\n                component: components.legends,\n                config: legendConfig });\n        }\n    }\n\n    // grid components\n\n    let gridWrapper = null;\n\n    if (layoutManager.getComponent(GRID)) {\n        gridWrapper = layoutManager\n                            .getComponent(GRID)\n                            .updateWrapper({\n                                name: GRID,\n                                component: grid,\n                                config: { ...target,\n                                    classPrefix: layoutConfig.classPrefix,\n                                    dimensions: { height: 0, width: 0 } }\n                            });\n    } else {\n        gridWrapper = new GridComponent({\n            name: GRID,\n            component: grid,\n            config: { ...target,\n                classPrefix: layoutConfig.classPrefix,\n                dimensions: { height: 0, width: 0 } }\n        });\n    }\n\n    layoutManager.registerComponents([\n        titleWrapper,\n        subtitleWrapper,\n        colorLegendWrapper,\n        gridWrapper\n    ]).compute();\n};\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    ROWS,\n    COLUMNS,\n    COLOR,\n    SHAPE,\n    SIZE,\n    DETAIL,\n    LAYERS,\n    TRANSFORM,\n    TITLE,\n    SUB_TITLE\n} from '../constants';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG } from './defaults';\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Canvas.\n * Canvas merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module LocalOptions\n */\n\nexport const localOptions = {\n    [ROWS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLUMNS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLOR]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SHAPE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SIZE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [DETAIL]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n\n    [LAYERS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [TRANSFORM]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object'\n        }\n    }\n};\n\nexport const canvasOptions = {\n    [TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(title) => {\n                if (typeof title === 'string') {\n                    const t = () => title;\n                    t._sanitized = true;\n                    return t;\n                }\n                return title;\n            }, (titleConfig) => {\n                const defConfig = mergeRecursive({}, TITLE_CONFIG);\n                return mergeRecursive(defConfig, titleConfig);\n            }]\n        }\n    },\n    [SUB_TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(subtitle) => {\n                if (typeof subtitle === 'string') {\n                    const sub = () => subtitle;\n                    sub._sanitized = true;\n                    return sub;\n                }\n                return subtitle;\n            }, (subtitleConfig) => {\n                const defConfig = mergeRecursive({}, SUB_TITLE_CONFIG);\n                return mergeRecursive(defConfig, subtitleConfig);\n            }]\n        }\n    }\n};\n","import { isEqual, STATE_NAMESPACES, selectElement } from 'muze-utils';\nimport { VisualGroup } from '@chartshq/visual-group';\nimport { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, DATA, CONFIG }\n    from '../constants';\nimport { canvasOptions } from './local-options';\nimport { LayoutManager } from '../../../layout/src/tree-layout';\n\n/**\n * Instantiate high level components. Canvas knows what all high level component it has.\n * @nice-to-have dynamic high level components.\n *  - Is it even required ?\n *  - Reactive to source (canvas) streaming ?\n * @param {*} context Canvas instance\n * @return {Object.<Array>} Arrays of Title, visualGroup, Legend\n */\nexport const initCanvas = (context) => {\n    const reg = context._registry.components;\n\n    return [new reg.VisualGroup(context._registry, Object.assign({\n        throwback: context._throwback\n    }, context.dependencies()))];\n};\n\nexport const setLayoutInfForUnits = (context) => {\n    const layoutManager = context._layoutManager;\n    const boundBox = layoutManager.getComponent('grid').getBoundBox();\n    const valueMatrix = context.composition().visualGroup.matrixInstance().value;\n    const parentContainer = selectElement(`#${layoutManager.getRootNodeId()}`).node();\n    valueMatrix.each((cell) => {\n        cell.valueOf().parentContainerInf({\n            el: parentContainer,\n            dimensions: boundBox\n        });\n    });\n};\n\n/**\n *\n *\n * @memberof Canvas\n */\nexport const dispatchProps = (context) => {\n    const lifeCycleManager = context.dependencies().lifeCycleManager;\n    lifeCycleManager.notify({ client: context, action: 'beforeupdate' });\n    const visualGroup = context.composition().visualGroup;\n\n    const allOptions = context._allOptions;\n    for (const key in allOptions) {\n        const value = context[key]();\n        if (value !== null) {\n            visualGroup[key] && visualGroup[key](value);\n        }\n    }\n    visualGroup.createMatrices();\n    context._cachedProps = {};\n    lifeCycleManager.notify({ client: context, action: 'initialized' });\n    lifeCycleManager.notify({ client: context, action: 'updated' });\n};\n\nconst equalityChecker = (props, params) => {\n    let checker = () => false;\n    return !props.every((option, i) => {\n        switch (option) {\n        case ROWS:\n        case COLUMNS:\n        case DETAIL:\n            checker = isEqual('Array');\n            break;\n\n        case SHAPE:\n        case SIZE:\n        case COLOR:\n        case DATA:\n        case CONFIG:\n            checker = isEqual('Object');\n            break;\n        default:\n            checker = () => true;\n            break;\n        }\n        const oldVal = params[i][0];\n        const newVal = params[i][1];\n\n        return checker(oldVal, newVal);\n    });\n};\n\nconst updateChecker = (props, params) => props.every((option, i) => {\n    const val = params[i][1];\n    switch (option) {\n    case ROWS:\n    case COLUMNS:\n        return val !== null;\n\n    case DATA:\n        return val && !val.isEmpty();\n\n    default:\n        return true;\n\n    }\n});\n\nexport const notifyAnimationEnd = (context) => {\n    const centerMatrix = context.layout().viewInfo().viewMatricesInfo.matrices.center[1] || [];\n    const promises = [];\n    centerMatrix.forEach((cellArr) => {\n        cellArr.forEach((cell) => {\n            promises.push(cell.valueOf().done());\n        });\n    });\n    const lifeCycleManager = context.lifeCycle();\n    if (promises.length) {\n        Promise.all(promises).then(() => {\n            // Update life cycle\n            lifeCycleManager.notify({ client: context, action: 'drawn' });\n            const animDonePromises = [];\n\n            centerMatrix.forEach((cellArr) => {\n                cellArr.forEach((cell) => {\n                    cell.valueOf().layers().forEach((layer) => {\n                        animDonePromises.push(layer.animationDone());\n                    });\n                });\n            });\n\n            [context.xAxes(), context.yAxes()].forEach((axisArr) => {\n                axisArr = axisArr || [];\n                axisArr.forEach((axes) => {\n                    axes.forEach((axisInst) => {\n                        animDonePromises.push(axisInst.animationDone());\n                    });\n                });\n            });\n\n            Promise.all(animDonePromises).then(() => {\n                lifeCycleManager.notify({ client: context, action: 'animationend' });\n            });\n        });\n    } else {\n        lifeCycleManager.notify({ client: context, action: 'animationend' });\n    }\n};\n\nexport const setupChangeListener = (context) => {\n    const store = context._store;\n\n    const allOptions = Object.keys(context._allOptions);\n    const props = [...allOptions, ...Object.keys(canvasOptions)];\n    const nameSpaceProps = [...allOptions, ...Object.keys(canvasOptions)].map(prop =>\n        `${STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE}.${prop}`);\n    store.registerChangeListener(nameSpaceProps, (...params) => {\n        let updateProps = equalityChecker(props, params);\n        updateProps = updateChecker(props, params);\n\n        // inform attached board to rerender\n        if (updateProps && context.mount()) {\n            dispatchProps(context);\n            context.render();\n        }\n        notifyAnimationEnd(context);\n    }, true);\n};\n\nexport const applyInteractionPolicy = (firebolt) => {\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    if (visualGroup) {\n        const valueMatrix = visualGroup.matrixInstance().value;\n        const interactionPolicy = firebolt._interactionPolicy;\n        interactionPolicy(valueMatrix, firebolt);\n        const crossInteractionPolicy = firebolt._crossInteractionPolicy;\n        const behaviours = crossInteractionPolicy.behaviours;\n        const sideEffects = crossInteractionPolicy.sideEffects;\n        valueMatrix.each((cell) => {\n            const unitFireBolt = cell.valueOf().firebolt();\n            for (const key in behaviours) {\n                unitFireBolt.changeBehaviourStateOnPropagation(key, behaviours[key]);\n            }\n            for (const key in sideEffects) {\n                unitFireBolt.changeSideEffectStateOnPropagation(key, sideEffects[key]);\n            }\n        });\n    }\n};\n\n/**\n * Sets the rotation for all x axes if any axis has the rotation config set in the\n * entire view\n *\n * @param {Array} columns Column cells that contain the axes cells\n */\nexport const setLabelRotationForAxes = (context) => {\n    let rotation = 0;\n\n    const xAxes = context.xAxes() || [];\n\n    (() => {\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                if (xAxes[i][j].renderConfig().labels.rotation !== 0) {\n                    rotation = xAxes[i][j].renderConfig().labels.rotation;\n                    return;\n                }\n            }\n        }\n    })();\n\n    if (rotation) {\n        xAxes.forEach((axes) => {\n            axes.forEach((axis) => {\n                axis.renderConfig({ labels: { rotation } });\n                axis.smartTicks(axis.setTickConfig());\n            });\n        });\n    }\n};\n\nexport const createGroupState = (context) => {\n    const [globalState, localState] = VisualGroup.getState();\n    const store = context._store;\n    store.append('app.group', globalState);\n    store.append('local.group', localState);\n};\n\nexport const removeChild = (mount) => {\n    while (mount.firstChild) {\n        mount.removeChild(mount.firstChild);\n    }\n};\n\nexport const createLayoutManager = () => {\n    const layoutManager = new LayoutManager({\n        className: 'muze-group-container'\n    });\n    return layoutManager;\n};\n","import {\n    getDataModelFromIdentifiers,\n    FieldType,\n    mergeRecursive,\n    CommonProps\n} from 'muze-utils';\n\nimport { applyInteractionPolicy } from '../helper';\n\nconst defaultInteractionPolicy = (valueMatrix, firebolt) => {\n    const isMeasure = field => field.type() === FieldType.MEASURE;\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    const xFields = [].concat(...visualGroup.getFieldsFromChannel('x'));\n    const yFields = [].concat(...visualGroup.getFieldsFromChannel('y'));\n    const colDim = xFields.every(field => field.type() === FieldType.DIMENSION);\n    const fieldInf = visualGroup.resolver().getAllFields();\n    const rowFacets = fieldInf.rowFacets;\n    const colFacets = fieldInf.colFacets;\n    valueMatrix.each((cell) => {\n        const unitFireBolt = cell.valueOf().firebolt();\n        if (!(xFields.every(isMeasure) && yFields.every(isMeasure))) {\n            const facetFields = cell.valueOf().facetByFields()[0];\n            const unitColFacets = facetFields.filter(d => colFacets.findIndex(v => v.equals(d)) !== -1);\n            const unitRowFacets = facetFields.filter(d => rowFacets.findIndex(v => v.equals(d)) !== -1);\n            let propFields;\n            if (colDim) {\n                propFields = unitColFacets.map(d => `${d}`);\n            } else {\n                propFields = unitRowFacets.map(d => `${d}`);\n            }\n\n            unitFireBolt.propagateWith('*', propFields, true);\n        }\n    });\n};\n\nconst defaultCrossInteractionPolicy = {\n    behaviours: {\n        '*': (propagationPayload, context) => {\n            const propagationCanvasAlias = propagationPayload.sourceCanvas;\n            const canvasAlias = context.parentAlias();\n            return propagationCanvasAlias ? canvasAlias === propagationCanvasAlias : true;\n        }\n    },\n    sideEffects: {\n        tooltip: (propagationPayload, context) => {\n            const propagationUnit = propagationPayload.sourceUnit;\n            const propagationCanvas = propagationPayload.sourceCanvas;\n            const unitId = context.id();\n            const canvasAlias = context.parentAlias();\n            if (propagationCanvas) {\n                return propagationCanvas !== canvasAlias ? true : unitId === propagationUnit;\n            }\n            return true;\n        }\n    }\n};\n\n/**\n * This class is responsible for dispatching any behavioural action to all the visual units housed by the canvas.\n * It is created by {@link Canvas}. This class does not handle any physical actions. Physical actions get triggered\n * in {@link VisualUnit} which is managed by it's own firebolt instance. The firebolt instance of canvas only\n * propagates the action to all the visual units in it's composition.\n *\n * To get the firebolt instance of {@link Canvas}\n * ```\n *  const firebolt = canvas.firebolt();\n * ```\n *\n * @class GroupFireBolt\n * @public\n */\nexport default class GroupFireBolt {\n    constructor (context) {\n        this.context = context;\n        this._interactionPolicy = this.constructor.defaultInteractionPolicy();\n        this.crossInteractionPolicy(this.constructor.defaultCrossInteractionPolicy());\n    }\n\n    static defaultInteractionPolicy () {\n        return defaultInteractionPolicy;\n    }\n\n    static defaultCrossInteractionPolicy () {\n        return defaultCrossInteractionPolicy;\n    }\n\n    interactionPolicy (...policy) {\n        if (policy.length) {\n            this._interactionPolicy = policy[0] || this.constructor.defaultInteractionPolicy();\n            return this;\n        }\n        return this._interactionPolicy;\n    }\n\n    crossInteractionPolicy (...policy) {\n        if (policy.length) {\n            this._crossInteractionPolicy = mergeRecursive(mergeRecursive({},\n                this.constructor.defaultCrossInteractionPolicy()), policy[0] || {});\n            const context = this.context;\n            applyInteractionPolicy(this);\n            context._throwback.registerImmediateListener([CommonProps.MATRIX_CREATED], () => {\n                applyInteractionPolicy(this);\n            });\n            return this;\n        }\n        return this._crossInteractionPolicy;\n    }\n\n    /**\n     * Dispatches a behavioural action with a payload. It takes the name of the behavioural action and a payload\n     * object which contains the criteria aend an array of side effects which determines what side effects are\n     * going to be shown in each visual unit of the canvas. It prepares the datamodel from the given criteria\n     * and initiates a propagation from the datamodel of canvas. Then all the visual units of canvas which listens\n     * to the propagation gets informed on which rows got selected and dispatches the behavioural action sent during\n     * propagation.\n     *\n     * To dispatch a behavioural action on the canvas\n     * ```\n     *  // Get the firebolt instance of the canvas\n     *  const firebolt = canvas.firebolt();\n     *  // Dispatch a brush behaviour\n     *  firebolt.dispatchBehaviour('brush', {\n     *      // Selects all the rows with Horsepower having range between 100 and 200.\n     *      criteria: {\n     *          Horsepower: [100, 200]\n     *      }\n     *  });\n     * // On dispatch of this behavioural action, a selection box gets created and plots gets faded out which are the\n     * // default side effects mapped to this behavioural action.\n     * ```\n     *\n     * ```\n     * Additionally, it can also be passed an array of side effects in the payload.\n     *  // Dispatch a select behaviour with only crossline as side effect.\n     *  firebolt.dispatchBehaviour('select', {\n     *      criteria: {\n     *          Cylinders: ['8']\n     *      },\n     *      sideEffects: ['crossline']\n     *  });\n     * ```\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of the behavioural action\n     * @param {Object} payload Object which contains the interaction information.\n     * @param {Object | Array.<Array>} payload.criteria Identifiers by which the selection happens.\n     * @param {Array.<string|Object>} payload.sideEffects Side effects which needs to be shown.\n     *\n     * @return {GroupFireBolt} Instance of firebolt.\n     */\n    dispatchBehaviour (behaviour, payload) {\n        const propPayload = Object.assign(payload);\n        const criteria = propPayload.criteria;\n        const data = this.context.data();\n\n        propPayload.action = behaviour;\n        const model = getDataModelFromIdentifiers(data, criteria);\n        data.propagate(model, propPayload, {\n            sourceId: this.context.alias()\n        });\n        return this;\n    }\n\n}\n","import GroupFireBolt from './group-firebolt';\n\nexport default GroupFireBolt;\n","export const APP_INITIAL_STATE = {\n    app: {\n        group: {},\n        units: {},\n        layers: {},\n        canvas: {}\n    },\n    local: {\n        canvas: {},\n        group: {},\n        units: {},\n        layers: {}\n    }\n};\n\n","import { GridLayout } from '@chartshq/layout';\nimport { transactor, Store, getUniqueId, selectElement, STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { RETINAL } from '../constants';\nimport TransactionSupport from '../transaction-support';\nimport { getRenderDetails, prepareLayout, renderLayout } from './layout-maker';\nimport { localOptions, canvasOptions } from './local-options';\nimport GroupFireBolt from './firebolt';\nimport options from '../options';\nimport { APP_INITIAL_STATE } from './app-state';\nimport { initCanvas,\n        setupChangeListener,\n        setLabelRotationForAxes,\n        createGroupState,\n        createLayoutManager,\n        setLayoutInfForUnits } from './helper';\n/**\n * Canvas is a logical component which houses a visualization by taking multiple variable in different encoding channel.\n * Canvas manages lifecycle of many other logical component and exposes one consistent interface for creation of chart.\n * Canvas is intialized from environment with settings from environment and singleton dependencies.\n *\n * To create an instance of canvas\n * ```\n *  const env = Muze();\n *  const canvas = env.canvas()\n * ```\n *\n *\n * @class\n * @public\n * @module Canvas\n */\nexport default class Canvas extends TransactionSupport {\n\n    /**\n     * Creates reactive property accessors.\n     * - data\n     * - height\n     * - width\n     * - config\n     * This configs are retrieved from options.\n     */\n    constructor (globalDependencies) {\n        super();\n\n        this._allOptions = Object.assign({}, options, localOptions);\n        this._registry = {};\n        this._composition = {};\n        this._cachedProps = {};\n        this._alias = null;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        this._composition.layout = new GridLayout();\n        this._store = new Store(APP_INITIAL_STATE);\n\n        this._throwback = new Store({\n            [CommonProps.MATRIX_CREATED]: false\n        });\n\n        // Setters and getters will be mounted on this. The object will be mutated.\n        const namespace = STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE;\n        const [, store] = transactor(this, options, this._store.model, {\n            namespace\n        });\n        transactor(this, localOptions, store, {\n            namespace\n        });\n        transactor(this, canvasOptions, store, {\n            namespace\n        });\n\n        this.dependencies(Object.assign({}, globalDependencies, this._dependencies));\n        this.firebolt(new GroupFireBolt(this));\n        this.alias(`canvas-${getUniqueId()}`);\n        this.title('', {});\n        this.subtitle('', {});\n        this.legend({});\n        this.color({});\n        this.shape({});\n        this.size({});\n        setupChangeListener(this);\n         // init layoutManager\n        this._layoutManager = createLayoutManager();\n    }\n\n    /**\n     * Retrieves an instance of layout which is responsible for layouting. Layout is responsible for creating faceted\n     * presentation using table layout.\n     *\n     * @public\n     *\n     * @return {GridLayout} Instance of layout attached to canvas.\n     */\n    layout (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().layout;\n    }\n\n    /**\n     * Retrieves the composition for a canvas\n     *\n     * @public\n     *\n     * @return {object} Instances of the components which canvas requires to draw the full visualization.\n     *      ```\n     *          {\n     *              layout: // Instance of {@link GridLayout}\n     *              legend: // Instance of {@link Legend}\n     *              subtitle: // Instance of {@link TextCell} using which the title is rendered\n     *              title: // Instance of {@link TextCell} using which the title is rendered\n     *              visualGroup: // Instance of {@link visualGroup}\n     *          }\n     *      ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Sets or gets the alias of the canvas. Alias is a name by which the canvas can be referred.\n     *\n     * When setter\n     * @param {string} alias Name of the alias.\n     *\n     * @return {Canvas} Instance of the canvas.\n     *\n     * When getter\n     *\n     * @return {string} Alias of canvas.\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            const visualGroup = this.composition().visualGroup;\n            this._alias = params[0];\n            visualGroup && visualGroup.alias(this.alias());\n            return this;\n        }\n        return this._alias;\n    }\n\n    /**\n     * Creates an instance initiated with given settings.\n     *\n     * @param {Object} initialSettings Initial settings to be populated in the model\n     * @param {Object} regEntry newly created instance with the initial settings\n     * @param {Object} globalDependencies dependencies which will be created only once in the page\n     *\n     * @return {Object} newly created instance with the initial settings\n     */\n    static withSettings (initialSettings, regEntry, globalDependencies) {\n        const instance = new Canvas(globalDependencies);\n\n        for (const key in initialSettings) {\n            instance[key](initialSettings[key]);\n        }\n        // set registry for instance\n        instance.registry(regEntry);\n        return instance;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof Canvas\n     */\n    static formalName () {\n        return 'canvas';\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this canvas. The firebolt instance can be used to dispatch a\n     * behaviour dynamically on the canvas. This firebolt does not handle any physical actions. It is just used to\n     * propagate the action to all the visual units in it's composition.\n     *\n     * @public\n     *\n     * @return {GroupFireBolt} Instance of firebolt associated with canvas.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Registry peoperty accessor\n     *\n     * @param {Object} reg plain old javascript object keyvalue pairs. Key containing module name and value contains\n     * module definition class. The reg object has to be flat object of level 1.\n     */\n    registry (...params) {\n        if (params.length) {\n            const components = Object.assign({}, params[0].components);\n            const componentSubRegistry = Object.assign({}, params[0].componentSubRegistry);\n\n            this._registry = { components, componentSubRegistry };\n            const initedComponents = initCanvas(this);\n            // @todo is it okay to continue this tight behaviour? If not use a resolver to resolve diff component type.\n            this._composition.visualGroup = initedComponents[0];\n            createGroupState(this);\n            this.composition().visualGroup.alias(this.alias()).store(this._store);\n            return this;\n        }\n        return this._registry;\n    }\n\n    /*\n     * Prepare dependencies for top level elements\n     */\n    dependencies (...param) {\n        if (param.length) {\n            this._dependencies = param[0];\n            return this;\n        }\n        // @todo prepare dependencies here.\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     * @param {*} lifeCycles\n     *\n     * @memberof Canvas\n     */\n    lifeCycle (lifeCycles) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        if (lifeCycles) {\n            lifeCycleManager.register(lifeCycles);\n            return this;\n        }\n        return lifeCycleManager;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    legend (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().legend;\n    }\n\n    /**\n     * Returns a promise for various {@link LifecycleEvents} of the various components of canvas. The promise gets\n     * resolved once the particular event gets completed.\n     *\n     * To use this,\n     * ```\n     *      canvas.once('layer.drawn').then(() => {\n     *          // Do any post drawing work here.\n     *      });\n     * ```\n     * @public\n     *\n     * @param {string} eventName Name of the lifecycle event.\n     *\n     * @return {Promise} A pending promise waiting for resolve to be called.\n     */\n    once (eventName) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        return lifeCycleManager.retrieve(eventName);\n    }\n\n    /**\n     * Internal function to trigger render, this method is cognizant of all the properties of the core modules and\n     * establish a passive reactivity. Passive reactivity is not always a bad thing :)\n     * @internal\n     */\n    render () {\n        const mount = this.mount();\n        // removeChild(mount);\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        // Get render details including arrangement and measurement\n        const renderDetails = getRenderDetails(this, mount);\n        lifeCycleManager.notify({ client: this, action: 'beforedraw' });\n        // Prepare the layout by triggering the matrix calculation\n        prepareLayout(this.layout(), renderDetails);\n\n        this._layoutManager.dimension({\n            height: renderDetails.measurement.canvasHeight,\n            width: renderDetails.measurement.canvasWidth\n        });\n\n        this._layoutManager.renderAt(mount);\n\n        // Render each component\n        renderLayout(this._layoutManager, this.layout(), renderDetails);\n\n        setLayoutInfForUnits(this);\n\n        // setLabelRotation\n        setLabelRotationForAxes(this);\n    }\n\n    /**\n     * Returns the instances of x axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the top axis and the second element represents the bottom\n     *   // axis.\n     *   [\n     *      [X1, X2],\n     *      [X3, X4]\n     *   ]\n     * ```\n     * @public\n     *\n     * @return {Array.<Array>} Instances of x axis.\n     */\n    xAxes () {\n        return this.composition().visualGroup.getAxes('x');\n    }\n\n    /**\n     * Returns the instances of y axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the left axis and the second element represents the right\n     *   // axis.\n     *   [\n     *      [Y1, Y2],\n     *      [Y3, Y4]\n     *   ]\n     * ```\n     * @public\n     * @return {Array.<Array>} Instances of y axis.\n     */\n    yAxes () {\n        return this.composition().visualGroup.getAxes('y');\n    }\n\n    /**\n     * Returns all the retinal axis of the canvas. Color, shape and size axis are combinedly called retinal axis.\n     *\n     * @public\n     * @return {Object} Instances of retinal axis.\n     *          ```\n     *              {\n     *                  color: [ColorAxis], // Array of color axis.\n     *                  shape: [ShapeAxis], // Array of shape axis.\n     *                  size: [SizeAxis] // Array of size axis.\n     *              }\n     *          ```\n     */\n    getRetinalAxes () {\n        const visualGroup = this.composition().visualGroup;\n        return visualGroup.getAxes(RETINAL);\n    }\n\n    mount (...params) {\n        if (params.length) {\n            let value = params[0];\n            if (typeof params[0] === 'string') {\n                value = selectElement(params[0]).node();\n            }\n            this._mount = value;\n            return this;\n        }\n        return this._mount;\n    }\n}\n","import { cellRegistry, SimpleCell } from '@chartshq/visual-cell';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { layerRegistry } from '@chartshq/visual-layer';\nimport { SimpleGroup, VisualGroup } from '@chartshq/visual-group';\n\nexport const COMPONENTS = {\n    VisualGroup,\n    VisualUnit\n};\nexport const SUBREGISTRIES = {\n    cellRegistry,\n    layerRegistry\n};\nexport const INTERFACES = {\n    SimpleGroup,\n    SimpleCell\n};\n\n","import { DEFAULT_LAYERS } from './defaults';\n\nexport default () => {\n    const reg = DEFAULT_LAYERS;\n    const regObj = {\n        set: (key, def) => {\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n    return regObj;\n};\n","import {\n    transactor,\n    Smartlabel,\n    enableChainedTransaction,\n    LifeCycleManager,\n    DataModel,\n    makeElement,\n    getClientPoint,\n    selectElement,\n    getEvent,\n    require,\n    DateTimeFormatter\n} from 'muze-utils';\n\nimport {\n    SurrogateSideEffect,\n    SpawnableSideEffect,\n    sideEffects,\n    PersistentBehaviour,\n    GenericBehaviour,\n    VolatileBehaviour,\n    behaviouralActions,\n    GenericSideEffect\n} from '@chartshq/muze-firebolt';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport pkg from '../package.json';\nimport * as operators from './operators';\nimport { actionModel as ActionModel } from './action-model';\nimport options from './options';\nimport { Canvas } from './canvas';\nimport { COMPONENTS, SUBREGISTRIES } from './default-registry';\nimport './muze.scss';\n\n// Cache singleton instances which should be included only once in a page\nconst globalCache = {};\nconst defaultRegistry = COMPONENTS;\n\nconst overrideRegistryDefinitions = (overrideRegistry, registry) => {\n    for (const prop in overrideRegistry) {\n        registry.set(prop, overrideRegistry[prop]);\n    }\n};\n\n/**\n * Entry point to renderer. Initializes an environment with settings and registries for canvas. This is a simple wrapper\n * over {@link Canvas} which enables common configuration passing to multiple such canvases.\n *\n * Everytime `muze()` is called it creates an environment. These environment supports subset of APIs of Canvas. If\n * common configuration is used to render multiple canvases then it can be set directly in the env. Like if data is\n * common across all the visulization then its better to set the data in env. When a canvas is created it receives all\n * those configuration from env.\n *\n * ```\n *  // Creates an environment\n *  const env = muze()\n *  // Set data property in environment, so that all the canvas created from the same environment gets this data\n *  // automatically\n *  env.data(dm);\n *  // Creates canvas, by default env pushes data to canvas instance\n *  const canvas = env.canvas();\n * ```\n *\n * If a property is set on both environment and canvas instance, property set on canvas instance gets more priority.\n *\n * @public\n * @module muze\n * @namespace Muze\n *\n * @return {Env} Instance of an environment\n */\nconst muze = () => {\n    // Setters and getters will be mounted on this. Object will be mutated.\n    const [env, globalStore] = transactor({}, options);\n    const components = Object.assign({}, COMPONENTS);\n    const componentSubRegistryDef = Object.assign(SUBREGISTRIES);\n    const componentSubRegistry = {};\n\n    for (const prop in componentSubRegistryDef) {\n        componentSubRegistry[prop] = componentSubRegistryDef[prop]();\n    }\n\n    // Apart form the setter getter, an instance method is injected to create real renderer instances\n    env.canvas = () => {\n        // Create a canvas instance with this settings\n        const settings = globalStore.serialize();\n        const canvas = Canvas.withSettings(settings, { /* registry */\n            components,\n            componentSubRegistry\n        }, env.globalDependencies());\n\n        // Whenever settings is changed canvas is updated\n        enableChainedTransaction(globalStore, canvas, Object.keys(settings));\n\n        return canvas;\n    };\n\n    // Global dependencies for for compositions. Only one copy of the same should be in the page\n    env.globalDependencies = () => {\n        if (!globalCache.smartlabel) {\n            globalCache.smartlabel = new Smartlabel(1, 'body');\n        }\n        return {\n            smartlabel: globalCache.smartlabel,\n            lifeCycleManager: new LifeCycleManager()\n        };\n    };\n\n    // Retrieves global settings. This getter is readonly so that user can't change this as change should happen\n    // only from setter to avoid unwanted sync issues.\n    env.settings = () => globalStore.serialize();\n\n    env.registry = (...overrideRegistry) => {\n        // Selectively copy the properties from COMPONENTS\n        if (overrideRegistry.length) {\n            for (const prop in overrideRegistry) {\n                if (prop in defaultRegistry) {\n                    components[prop] = overrideRegistry[prop];\n                }\n            }\n            return env;\n        }\n        return components;\n    };\n\n    env.cellRegistry = (...overrideRegistry) => {\n        const cellRegistry = componentSubRegistry.cellRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], cellRegistry);\n            return env;\n        }\n        return cellRegistry.get();\n    };\n\n    env.layerRegistry = (...overrideRegistry) => {\n        const layerRegistry = componentSubRegistry.layerRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], layerRegistry);\n            return env;\n        }\n        return layerRegistry.get();\n    };\n\n    return env;\n};\n\nconst SideEffects = {\n    sideEffects,\n    standards: {\n        SurrogateSideEffect,\n        SpawnableSideEffect,\n        GenericSideEffect\n    }\n};\n\nconst Behaviours = {\n    behaviouralActions,\n    standards: {\n        GenericBehaviour,\n        PersistentBehaviour,\n        VolatileBehaviour\n    }\n};\n\nmuze.DataModel = DataModel;\nmuze.version = pkg.version;\nmuze.SideEffects = SideEffects;\nmuze.ActionModel = ActionModel;\nmuze.layerFactory = layerFactory;\nmuze.Operators = operators;\nmuze.Behaviours = Behaviours;\nmuze.utils = {\n    getClientPoint,\n    getEvent,\n    makeElement,\n    selectElement,\n    DateTimeFormatter,\n    require\n};\n\nexport default muze;\n"],"sourceRoot":""}